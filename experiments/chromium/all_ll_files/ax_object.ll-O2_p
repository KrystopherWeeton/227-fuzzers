; ModuleID = '../../third_party/blink/renderer/modules/accessibility/ax_object.cc'
source_filename = "../../third_party/blink/renderer/modules/accessibility/ax_object.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashSet<WTF::AtomicString, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashSet<WTF::AtomicString, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.WTF::StaticSingleton.3764" = type { %"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" }
%"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" = type { [8 x i8] }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.WTF::HashMap.3825" = type { %"class.WTF::HashTable.3826" }
%"class.WTF::HashTable.3826" = type <{ %"struct.WTF::KeyValuePair.3829"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3829" = type <{ %"class.WTF::String", i32, [4 x i8] }>
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1855", i64 }
%"class.std::__1::vector.1855" = type { %"class.std::__1::__vector_base.1856" }
%"class.std::__1::__vector_base.1856" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1857" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1857" = type { %"struct.std::__1::__compressed_pair_elem.1858" }
%"struct.std::__1::__compressed_pair_elem.1858" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::(anonymous namespace)::RoleEntry" = type { i8*, i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::AXObject" = type { i32 (...)**, i32, %"class.blink::Member.3082", %"class.blink::HeapVector.3084", i8, i32, %"class.blink::LayoutRect", i32, i32, i8, %"class.blink::Member.3082", i32, i32, %"class.blink::FloatRect", %"class.blink::Member.3091" }
%"class.blink::HeapVector.3084" = type { %"class.WTF::Vector.3087" }
%"class.WTF::Vector.3087" = type { %"class.WTF::VectorBuffer.3088" }
%"class.WTF::VectorBuffer.3088" = type { %"class.WTF::VectorBufferBase.3089" }
%"class.WTF::VectorBufferBase.3089" = type { %"class.blink::Member.3082"*, i32, i32 }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::Member.3082" = type { %"class.blink::MemberBase.3083" }
%"class.blink::MemberBase.3083" = type { %"class.blink::AXObject"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.3091" = type { %"class.blink::MemberBase.3092" }
%"class.blink::MemberBase.3092" = type { %"class.blink::AXObjectCacheImpl"* }
%"class.blink::AXObjectCacheImpl" = type { %"class.blink::AXObjectCacheBase", %"class.blink::mojom::blink::PermissionObserver", %"class.blink::Member.326", %"class.ui::AXMode", [4 x i8], %"class.blink::HeapHashMap.3093", %"class.blink::HeapHashMap.3100", %"class.WTF::HashMap.3107", %"class.blink::HeapHashMap.3112", %"class.WTF::HashMap.3119", i32, [4 x i8], %"class.WTF::HashSet.3124", i32, %"class.blink::WeakMember.3128", %"class.std::__1::unique_ptr.3129", %"class.blink::HeapVector.3135", i32, %"class.blink::HeapMojoRemote.3143", %"class.blink::HeapMojoReceiver.3146", %"class.blink::HeapHashSet.3149", %"class.blink::HeapVector.3155", %"class.blink::HeapHashSet.3163", i32, i8, [3 x i8], %"class.WTF::HashMap.3169", %"class.WTF::HashSet.3124", %"class.WTF::HashSet.3124", i32, i32, %"class.WTF::HashCountedSet", i8, [7 x i8], %"class.WTF::HashSet.3124" }
%"class.blink::AXObjectCacheBase" = type { %"class.blink::AXObjectCache" }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::mojom::blink::PermissionObserver" = type { i32 (...)** }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.771", %"class.WTF::Vector.771", i8, i32, %"class.blink::Member.1004", %"class.blink::Member.1006", %"class.blink::Member.1008", %"class.blink::Member.1010", %"class.blink::Member.1012", %"class.blink::Member.1014", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1022", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1028", %"class.blink::Member.1030", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1033", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.1056", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.1065", double, double, i64, i64, %"class.blink::HeapHashSet.1067", %"class.blink::HeapHashSet.1074", i16, i8, %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::TextLinkColors", %"class.blink::Member.1411", i8, [7 x i8], %"class.blink::HeapHashMap.1413", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1420", %"class.blink::Member.1425", %"class.blink::Member.1427", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1429", %"class.blink::HeapVector.1463", %"class.std::__1::unique_ptr.1470", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1476", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1489", %"class.WTF::Vector.1491", i8, i8, %"class.std::__1::unique_ptr.1496", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1502", i32, i8, %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::DocumentTiming", %"class.blink::Member.1510", i8, i32, %"class.blink::Member.1512", %"class.blink::Member.1514", %"class.blink::Member.1516", %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::Member.1518", %"class.WTF::HashMap.1520", %"class.blink::Member.1525", %"class.blink::Member.1527", %"class.blink::Member.1529", %"class.blink::Member.1531", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::HeapHashSet.1533", i8, i32, %"class.blink::Member.1540", %"class.blink::Member.1542", i32, %"class.blink::Member.1544", %"class.blink::Member.1546", %"class.blink::Member.1548", %"class.std::__1::unique_ptr.1550", i64, %"class.std::__1::unique_ptr.1556", i32, i32, %"class.blink::Member.1567", %"class.blink::Member.1569", %"class.blink::Member.1571", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1573", %"class.WTF::Vector.1579", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1584", %"class.blink::Member.1591", %"class.std::__1::unique_ptr.1593", %"class.blink::Member.1599", i8, i8, %"class.WTF::String", %"class.blink::Member.1601", i8, [7 x i8], %"class.blink::HeapHashMap.1603", %"class.blink::HeapObserverSet.1610", %"class.blink::Member.1618", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1620", i32, i8, i8, %"class.blink::WeakMember.1622", %"class.blink::Member.1623" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.997" }
%"class.blink::HeapHashMap.997" = type { %"class.WTF::HashMap.1000" }
%"class.WTF::HashMap.1000" = type { %"class.WTF::HashTable.1001" }
%"class.WTF::HashTable.1001" = type <{ %"struct.WTF::KeyValuePair.1003"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1003" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.771" = type { %"class.WTF::VectorBuffer.772" }
%"class.WTF::VectorBuffer.772" = type { %"class.WTF::VectorBufferBase.773" }
%"class.WTF::VectorBufferBase.773" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.774 }
%class.scoped_refptr.774 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.775", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.775" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1006" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1647", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1706", i32, i8, [3 x i8], %"class.blink::HeapVector.1708", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1716", %"class.blink::Member.1718", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1727", %"class.blink::Member.1850", %"class.blink::Member.1852", i8, [7 x i8] }>
%"class.blink::Supplementable.1647" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1648" }
%"class.blink::HeapHashMap.1648" = type { %"class.WTF::HashMap.1651" }
%"class.WTF::HashMap.1651" = type { %"class.WTF::HashTable.1652" }
%"class.WTF::HashTable.1652" = type <{ %"struct.WTF::KeyValuePair.1654"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1654" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1655" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1435" }
%"class.blink::HeapHashSet.1435" = type { %"class.WTF::HashSet.1438" }
%"class.WTF::HashSet.1438" = type { %"class.WTF::HashTable.1439" }
%"class.WTF::HashTable.1439" = type <{ %"class.blink::WeakMember.1441"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1441" = type opaque
%"class.blink::Supplementable.1655" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1656" }
%"class.blink::HeapHashMap.1656" = type { %"class.WTF::HashMap.1659" }
%"class.WTF::HashMap.1659" = type { %"class.WTF::HashTable.1660" }
%"class.WTF::HashTable.1660" = type <{ %"struct.WTF::KeyValuePair.1662"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1662" = type { i8*, %"class.blink::Member.3847" }
%"class.blink::Member.3847" = type { %"class.blink::MemberBase.3848" }
%"class.blink::MemberBase.3848" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3849" }
%"class.blink::Member.3849" = type { %"class.blink::MemberBase.3850" }
%"class.blink::MemberBase.3850" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1663, %"class.std::__1::unique_ptr.1672", %"class.std::__1::unique_ptr.1672", %"class.std::__1::unique_ptr.1696", %"class.std::__1::unique_ptr.1696", %"class.blink::Member.1006", i32, [4 x i8], %"class.WTF::HashSet.1702", i32, i32 }
%class.scoped_refptr.1663 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1664", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1666", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1671 }
%"class.WTF::RefCounted.1664" = type { %"class.base::RefCounted.1665" }
%"class.base::RefCounted.1665" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1666" = type { %"class.absl::optional_internal::optional_data.1667" }
%"class.absl::optional_internal::optional_data.1667" = type { %"class.absl::optional_internal::optional_data_base.1668" }
%"class.absl::optional_internal::optional_data_base.1668" = type { %"class.absl::optional_internal::optional_data_dtor_base.1669" }
%"class.absl::optional_internal::optional_data_dtor_base.1669" = type { i8, %union.anon.1670 }
%union.anon.1670 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1671 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1672" = type { %"class.std::__1::__compressed_pair.1673" }
%"class.std::__1::__compressed_pair.1673" = type { %"struct.std::__1::__compressed_pair_elem.1674" }
%"struct.std::__1::__compressed_pair_elem.1674" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1683", %"class.std::__1::map.1692"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1666" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1675", %"class.std::__1::__compressed_pair.1680" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1675" = type { %"struct.std::__1::__compressed_pair_elem.1676" }
%"struct.std::__1::__compressed_pair_elem.1676" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1680" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1683" = type { %"class.std::__1::__tree.1684" }
%"class.std::__1::__tree.1684" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1685", %"class.std::__1::__compressed_pair.1689" }
%"class.std::__1::__compressed_pair.1685" = type { %"struct.std::__1::__compressed_pair_elem.1676" }
%"class.std::__1::__compressed_pair.1689" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1692" = type opaque
%"class.std::__1::unique_ptr.1696" = type { %"class.std::__1::__compressed_pair.1697" }
%"class.std::__1::__compressed_pair.1697" = type { %"struct.std::__1::__compressed_pair_elem.1698" }
%"struct.std::__1::__compressed_pair_elem.1698" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1702" = type { %"class.WTF::HashTable.1703" }
%"class.WTF::HashTable.1703" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1706" = type { %"class.blink::MemberBase.1707" }
%"class.blink::MemberBase.1707" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1708" = type { %"class.WTF::Vector.1711" }
%"class.WTF::Vector.1711" = type { %"class.WTF::VectorBuffer.1712" }
%"class.WTF::VectorBuffer.1712" = type { %"class.WTF::VectorBufferBase.1713" }
%"class.WTF::VectorBufferBase.1713" = type { %"class.blink::Member.1714"*, i32, i32 }
%"class.blink::Member.1714" = type opaque
%"class.blink::Member.1716" = type { %"class.blink::MemberBase.1717" }
%"class.blink::MemberBase.1717" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1718" = type { %"class.blink::MemberBase.1719" }
%"class.blink::MemberBase.1719" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1720", i32, i32 }
%"class.blink::HeapHashMap.1720" = type { %"class.WTF::HashMap.1723" }
%"class.WTF::HashMap.1723" = type { %"class.WTF::HashTable.1724" }
%"class.WTF::HashTable.1724" = type <{ %"struct.WTF::KeyValuePair.1726"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1726" = type opaque
%"class.std::__1::unique_ptr.1727" = type { %"class.std::__1::__compressed_pair.1728" }
%"class.std::__1::__compressed_pair.1728" = type { %"struct.std::__1::__compressed_pair_elem.1729" }
%"struct.std::__1::__compressed_pair_elem.1729" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1730" }
%"class.std::__1::unique_ptr.1730" = type { %"class.std::__1::__compressed_pair.1731" }
%"class.std::__1::__compressed_pair.1731" = type { %"struct.std::__1::__compressed_pair_elem.1732" }
%"struct.std::__1::__compressed_pair_elem.1732" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1733" }
%"class.WTF::Vector.1733" = type { %"class.WTF::VectorBuffer.1734" }
%"class.WTF::VectorBuffer.1734" = type { %"class.WTF::VectorBufferBase.1735" }
%"class.WTF::VectorBufferBase.1735" = type { %"class.mojo::StructPtr.1736"*, i32, i32 }
%"class.mojo::StructPtr.1736" = type { %"class.std::__1::unique_ptr.1737" }
%"class.std::__1::unique_ptr.1737" = type { %"class.std::__1::__compressed_pair.1738" }
%"class.std::__1::__compressed_pair.1738" = type { %"struct.std::__1::__compressed_pair_elem.1739" }
%"struct.std::__1::__compressed_pair_elem.1739" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1740", %"class.WTF::HashMap.1747", %"class.WTF::HashMap.1752", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.630", i32, %"class.mojo::StructPtr.1757", %"class.WTF::Vector.630" }
%"class.mojo::StructPtr.1740" = type { %"class.std::__1::unique_ptr.1741" }
%"class.std::__1::unique_ptr.1741" = type { %"class.std::__1::__compressed_pair.1742" }
%"class.std::__1::__compressed_pair.1742" = type { %"struct.std::__1::__compressed_pair_elem.1743" }
%"struct.std::__1::__compressed_pair_elem.1743" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1747" = type { %"class.WTF::HashTable.1748" }
%"class.WTF::HashTable.1748" = type <{ %"struct.WTF::KeyValuePair.1751"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1751" = type opaque
%"class.WTF::HashMap.1752" = type { %"class.WTF::HashTable.1753" }
%"class.WTF::HashTable.1753" = type <{ %"struct.WTF::KeyValuePair.1756"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1756" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1757" = type { %"class.std::__1::unique_ptr.1758" }
%"class.std::__1::unique_ptr.1758" = type { %"class.std::__1::__compressed_pair.1759" }
%"class.std::__1::__compressed_pair.1759" = type { %"struct.std::__1::__compressed_pair_elem.1760" }
%"struct.std::__1::__compressed_pair_elem.1760" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.630", i8, i8, [6 x i8] }>
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1841" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1772", i32 }>
%"class.std::__1::unique_ptr.1772" = type { %"class.std::__1::__compressed_pair.1773" }
%"class.std::__1::__compressed_pair.1773" = type { %"struct.std::__1::__compressed_pair_elem.1774" }
%"struct.std::__1::__compressed_pair_elem.1774" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1775", %"class.absl::optional.1776", %"class.absl::optional.1781", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1794", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1816", %"class.std::__1::map.1827", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1836", i8, %class.scoped_refptr.1786, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1837" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1775" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1776" = type { %"class.absl::optional_internal::optional_data.1777" }
%"class.absl::optional_internal::optional_data.1777" = type { %"class.absl::optional_internal::optional_data_base.1778" }
%"class.absl::optional_internal::optional_data_base.1778" = type { %"class.absl::optional_internal::optional_data_dtor_base.1779" }
%"class.absl::optional_internal::optional_data_dtor_base.1779" = type { i8, %union.anon.1780 }
%union.anon.1780 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1781" = type { %"class.absl::optional_internal::optional_data.1782" }
%"class.absl::optional_internal::optional_data.1782" = type { %"class.absl::optional_internal::optional_data_base.1783" }
%"class.absl::optional_internal::optional_data_base.1783" = type { %"class.absl::optional_internal::optional_data_dtor_base.1784" }
%"class.absl::optional_internal::optional_data_dtor_base.1784" = type { i8, %union.anon.1785 }
%union.anon.1785 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1786, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1787" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1787" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.993 }
%class.scoped_refptr.993 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1792 }
%class.scoped_refptr.1792 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1854", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1786, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1854" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1793 }
%class.scoped_refptr.1793 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1794" = type { %"class.std::__1::__compressed_pair.1795" }
%"class.std::__1::__compressed_pair.1795" = type { %"struct.std::__1::__compressed_pair_elem.1796" }
%"struct.std::__1::__compressed_pair_elem.1796" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1797", %class.scoped_refptr.1798 }
%"class.base::RepeatingCallback.1797" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1798 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1799", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1799" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1803", %"class.std::__1::unique_ptr.1809", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1815" }
%"class.std::__1::unique_ptr.1803" = type { %"class.std::__1::__compressed_pair.1804" }
%"class.std::__1::__compressed_pair.1804" = type { %"struct.std::__1::__compressed_pair_elem.1805" }
%"struct.std::__1::__compressed_pair_elem.1805" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1809" = type { %"class.std::__1::__compressed_pair.1810" }
%"class.std::__1::__compressed_pair.1810" = type { %"struct.std::__1::__compressed_pair_elem.1811" }
%"struct.std::__1::__compressed_pair_elem.1811" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1815" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1816" = type { %"class.std::__1::__tree.1817" }
%"class.std::__1::__tree.1817" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1818", %"class.std::__1::__compressed_pair.1822" }
%"class.std::__1::__compressed_pair.1818" = type { %"struct.std::__1::__compressed_pair_elem.1676" }
%"class.std::__1::__compressed_pair.1822" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1827" = type { %"class.std::__1::__tree.1828" }
%"class.std::__1::__tree.1828" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1829", %"class.std::__1::__compressed_pair.1833" }
%"class.std::__1::__compressed_pair.1829" = type { %"struct.std::__1::__compressed_pair_elem.1676" }
%"class.std::__1::__compressed_pair.1833" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1836" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1786 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.779" }>
%"class.base::RefCountedThreadSafe.779" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1837" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1841" = type { %"class.std::__1::__compressed_pair.1842" }
%"class.std::__1::__compressed_pair.1842" = type { %"struct.std::__1::__compressed_pair_elem.1843" }
%"struct.std::__1::__compressed_pair_elem.1843" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1850" = type { %"class.blink::MemberBase.1851" }
%"class.blink::MemberBase.1851" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1852" = type { %"class.blink::MemberBase.1853" }
%"class.blink::MemberBase.1853" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1010" = type { %"class.blink::MemberBase.1011" }
%"class.blink::MemberBase.1011" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1012" = type { %"class.blink::MemberBase.1013" }
%"class.blink::MemberBase.1013" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1014" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1016" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"class.blink::KURL"* }
%"class.blink::Member.1028" = type { %"class.blink::MemberBase.1029" }
%"class.blink::MemberBase.1029" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1030" = type { %"class.blink::MemberBase.1031" }
%"class.blink::MemberBase.1031" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1032 }
%class.scoped_refptr.1032 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1033" = type { %"class.WTF::VectorBuffer.1034" }
%"class.WTF::VectorBuffer.1034" = type { %"class.WTF::VectorBufferBase.1035" }
%"class.WTF::VectorBufferBase.1035" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1036 }
%class.scoped_refptr.1036 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1037", i32, i32, %"class.blink::Persistent.1039" }
%"class.WTF::RefCounted.1037" = type { %"class.base::RefCounted.1038" }
%"class.base::RefCounted.1038" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1039" = type { %"class.blink::PersistentBase.1040" }
%"class.blink::PersistentBase.1040" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1043" }
%"class.blink::HeapHashMap.1043" = type { %"class.WTF::HashMap.1046" }
%"class.WTF::HashMap.1046" = type { %"class.WTF::HashTable.1047" }
%"class.WTF::HashTable.1047" = type <{ %"struct.WTF::KeyValuePair.1049"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1049" = type { %"class.blink::WeakMember.1050", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1058" }
%"class.blink::HeapHashMap.1058" = type { %"class.WTF::HashMap.1061" }
%"class.WTF::HashMap.1061" = type { %"class.WTF::HashTable.1062" }
%"class.WTF::HashTable.1062" = type <{ %"struct.WTF::KeyValuePair.1064"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1064" = type opaque
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type { %"class.blink::WeakMember.1055", %"class.blink::WeakMember.3069", %"class.blink::Member.318", %"class.blink::HeapHashSet.3070", %"class.blink::WeakMember.3069" }
%"class.blink::WeakMember.1055" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.3070" = type { %"class.WTF::HashSet.3073" }
%"class.WTF::HashSet.3073" = type { %"class.WTF::HashTable.3074" }
%"class.WTF::HashTable.3074" = type <{ %"class.blink::WeakMember.3069"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3069" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.blink::HeapHashSet.1067" = type { %"class.WTF::HashSet.1070" }
%"class.WTF::HashSet.1070" = type { %"class.WTF::HashTable.1071" }
%"class.WTF::HashTable.1071" = type <{ %"class.blink::WeakMember.1073"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1073" = type opaque
%"class.blink::HeapHashSet.1074" = type { %"class.WTF::HashSet.1077" }
%"class.WTF::HashSet.1077" = type { %"class.WTF::HashTable.1078" }
%"class.WTF::HashTable.1078" = type <{ %"class.blink::WeakMember.1080"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1080" = type opaque
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.1087", %"class.blink::Member.1114", %"class.blink::HeapHashMap.1116", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1123", %"class.blink::HeapHashSet.1123", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1129", %"class.blink::Member.1141", %"class.blink::Member.1170", %"class.blink::Member.1172", %"class.blink::Member.1178", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1340", %"class.blink::Member.1346", %"class.blink::HeapHashMap.1348", %"class.blink::HeapHashMap.1355", %"class.std::__1::unique_ptr.1362", i32, %"class.blink::HeapVector.1368", %"class.blink::HeapVector.1368", %"class.blink::HeapVector.1099", %"class.blink::HeapHashSet.1376", %"class.blink::HeapHashMap.1383", %"class.blink::Member.1390", %"class.blink::HeapHashMap.1392", %class.scoped_refptr.1399, %class.scoped_refptr.259, %"class.blink::Member.1304", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1400", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1091", %"class.blink::HeapVector.1099", i8 }>
%"class.blink::HeapVector.1091" = type { %"class.WTF::Vector.1094" }
%"class.WTF::Vector.1094" = type { %"class.WTF::VectorBuffer.1095" }
%"class.WTF::VectorBuffer.1095" = type { %"class.WTF::VectorBufferBase.1096" }
%"class.WTF::VectorBufferBase.1096" = type { %"class.blink::Member.1097"*, i32, i32 }
%"class.blink::Member.1097" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1110", %"class.blink::Member.1112", %"class.blink::Member.1112", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1110" = type <{ %"class.blink::Member.1112"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1112" = type { %"class.blink::MemberBase.1113" }
%"class.blink::MemberBase.1113" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1112", %"class.blink::Member.1112" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1116" = type { %"class.WTF::HashMap.1119" }
%"class.WTF::HashMap.1119" = type { %"class.WTF::HashTable.1120" }
%"class.WTF::HashTable.1120" = type <{ %"struct.WTF::KeyValuePair.1122"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1122" = type opaque
%"class.blink::HeapHashSet.1123" = type { %"class.WTF::HashSet.1126" }
%"class.WTF::HashSet.1126" = type { %"class.WTF::HashTable.1127" }
%"class.WTF::HashTable.1127" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1129" = type { %"class.blink::MemberBase.1130" }
%"class.blink::MemberBase.1130" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1131", %"class.blink::Member.1133" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1131" = type { %"class.blink::MemberBase.1132" }
%"class.blink::MemberBase.1132" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1137", %"class.blink::Member.1139" }
%"class.blink::Member.1137" = type { %"class.blink::MemberBase.1138" }
%"class.blink::MemberBase.1138" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1139" = type { %"class.blink::MemberBase.1140" }
%"class.blink::MemberBase.1140" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1638", %"class.blink::Member.1133", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.911] }
%"class.blink::HeapVector.1638" = type { %"class.WTF::Vector.1641" }
%"class.WTF::Vector.1641" = type { %"class.WTF::VectorBuffer.1642" }
%"class.WTF::VectorBuffer.1642" = type { %"class.WTF::VectorBufferBase.1643" }
%"class.WTF::VectorBufferBase.1643" = type { %"class.blink::Member.1139"*, i32, i32 }
%class.sk_sp.911 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.912, i32, %"class.absl::optional.913", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.912 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.913" = type { %"class.absl::optional_internal::optional_data.914" }
%"class.absl::optional_internal::optional_data.914" = type { %"class.absl::optional_internal::optional_data_base.915" }
%"class.absl::optional_internal::optional_data_base.915" = type { %"class.absl::optional_internal::optional_data_dtor_base.916" }
%"class.absl::optional_internal::optional_data_dtor_base.916" = type { i8, %union.anon.917 }
%union.anon.917 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1141" = type { %"class.blink::MemberBase.1142" }
%"class.blink::MemberBase.1142" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1114", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1145" }
%"class.blink::HeapHashMap.1145" = type { %"class.WTF::HashMap.1148" }
%"class.WTF::HashMap.1148" = type { %"class.WTF::HashTable.1149" }
%"class.WTF::HashTable.1149" = type <{ %"struct.WTF::KeyValuePair.1151"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1151" = type opaque
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1862", [4 x i8] }>
%"class.WTF::RefCounted.1862" = type { %"class.base::RefCounted.1863" }
%"class.base::RefCounted.1863" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.3858" }
%"class.WTF::Vector.3858" = type { %"class.WTF::VectorBuffer.3859" }
%"class.WTF::VectorBuffer.3859" = type { %"class.WTF::VectorBufferBase.3860" }
%"class.WTF::VectorBufferBase.3860" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.3863", %"class.absl::optional.3863", %"class.absl::optional.3863" }
%"class.absl::optional.3863" = type { %"class.absl::optional_internal::optional_data.3864" }
%"class.absl::optional_internal::optional_data.3864" = type { %"class.absl::optional_internal::optional_data_base.3865" }
%"class.absl::optional_internal::optional_data_base.3865" = type { %"class.absl::optional_internal::optional_data_dtor_base.3866" }
%"class.absl::optional_internal::optional_data_dtor_base.3866" = type { i8, %union.anon.3867 }
%union.anon.3867 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3868 }
%class.scoped_refptr.3868 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.3869", %"class.WTF::Vector.630", %"class.WTF::Vector.3871", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.3869" = type { %"class.base::RefCounted.3870" }
%"class.base::RefCounted.3870" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3871" = type { %"class.WTF::VectorBuffer.3872" }
%"class.WTF::VectorBuffer.3872" = type { %"class.WTF::VectorBufferBase.3873" }
%"class.WTF::VectorBufferBase.3873" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.3874 }
%union.anon.3874 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.995", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.995" = type { %"class.base::RefCounted.996" }
%"class.base::RefCounted.996" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.3878" }
%"class.WTF::VectorBuffer.3878" = type { %"class.WTF::VectorBufferBase.3879", [32 x i8] }
%"class.WTF::VectorBufferBase.3879" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1152", %"class.std::__1::unique_ptr.1164" }
%"class.blink::HeapVector.1152" = type { %"class.WTF::Vector.1155" }
%"class.WTF::Vector.1155" = type { %"class.WTF::VectorBuffer.1156" }
%"class.WTF::VectorBuffer.1156" = type { %"class.WTF::VectorBufferBase.1157" }
%"class.WTF::VectorBufferBase.1157" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1158" }
%"class.WTF::Vector.1158" = type { %"class.WTF::VectorBuffer.1159" }
%"class.WTF::VectorBuffer.1159" = type { %"class.WTF::VectorBufferBase.1160", [16 x i8] }
%"class.WTF::VectorBufferBase.1160" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1164" = type { %"class.std::__1::__compressed_pair.1165" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.1166" }
%"struct.std::__1::__compressed_pair_elem.1166" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1170" = type { %"class.blink::MemberBase.1171" }
%"class.blink::MemberBase.1171" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1173" }
%"class.blink::MemberBase.1173" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1176", i8, [7 x i8] }>
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1178" = type { %"class.blink::MemberBase.1179" }
%"class.blink::MemberBase.1179" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1200", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1182", %"class.WTF::HashMap.1182", %"class.WTF::HashMap.1182", %"class.WTF::HashMap.1187", %class.scoped_refptr.1192, %class.scoped_refptr.1199, %class.scoped_refptr.1198, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1182" = type { %"class.WTF::HashTable.1183" }
%"class.WTF::HashTable.1183" = type <{ %"struct.WTF::KeyValuePair.1186"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1186" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3851 }
%class.scoped_refptr.3851 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1193", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1195", %"union.blink::InvalidationSet::Backing.1196", %"union.blink::InvalidationSet::Backing.1197", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1193" = type { %"class.base::RefCounted.1194" }
%"class.base::RefCounted.1194" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1195" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1196" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1197" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1187" = type { %"class.WTF::HashTable.1188" }
%"class.WTF::HashTable.1188" = type <{ %"struct.WTF::KeyValuePair.1191"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1191" = type opaque
%class.scoped_refptr.1192 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1198, %class.scoped_refptr.1198 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1193", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1195", %"union.blink::InvalidationSet::Backing.1196", %"union.blink::InvalidationSet::Backing.1197", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1199 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1198 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1204", %"class.blink::HeapHashMap.1204", %"class.blink::HeapHashMap.1204", %"class.blink::HeapHashMap.1204", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1247", %"class.blink::HeapVector.1255", %"class.blink::HeapVector.1263", %"class.blink::HeapVector.1280", %"class.blink::HeapVector.1288", %"class.blink::HeapVector.1296", %"class.blink::HeapVector.1309", %"class.WTF::Vector.1316", i32, %"class.blink::Member.1322" }
%"class.blink::HeapHashMap.1204" = type { %"class.WTF::HashMap.1207" }
%"class.WTF::HashMap.1207" = type { %"class.WTF::HashTable.1208" }
%"class.WTF::HashTable.1208" = type <{ %"struct.WTF::KeyValuePair.1210"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1210" = type { %"class.WTF::AtomicString", %"class.blink::Member.3856" }
%"class.blink::Member.3856" = type { %"class.blink::MemberBase.3857" }
%"class.blink::MemberBase.3857" = type { %"class.blink::HeapVector.1211"* }
%"class.blink::HeapVector.1211" = type { %"class.WTF::Vector.1214" }
%"class.WTF::Vector.1214" = type { %"class.WTF::VectorBuffer.1215" }
%"class.WTF::VectorBuffer.1215" = type { %"class.WTF::VectorBufferBase.1216" }
%"class.WTF::VectorBufferBase.1216" = type { %"class.blink::Member.1217"*, i32, i32 }
%"class.blink::Member.1217" = type { %"class.blink::MemberBase.1218" }
%"class.blink::MemberBase.1218" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1221", i64, [4 x i32] }
%"class.blink::Member.1221" = type { %"class.blink::MemberBase.1222" }
%"class.blink::MemberBase.1222" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1242" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.1242" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1247" = type { %"class.WTF::Vector.1250" }
%"class.WTF::Vector.1250" = type { %"class.WTF::VectorBuffer.1251" }
%"class.WTF::VectorBuffer.1251" = type { %"class.WTF::VectorBufferBase.1252" }
%"class.WTF::VectorBufferBase.1252" = type { %"class.blink::Member.1253"*, i32, i32 }
%"class.blink::Member.1253" = type { %"class.blink::MemberBase.3852" }
%"class.blink::MemberBase.3852" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1255" = type { %"class.WTF::Vector.1258" }
%"class.WTF::Vector.1258" = type { %"class.WTF::VectorBuffer.1259" }
%"class.WTF::VectorBuffer.1259" = type { %"class.WTF::VectorBufferBase.1260" }
%"class.WTF::VectorBufferBase.1260" = type { %"class.blink::Member.1261"*, i32, i32 }
%"class.blink::Member.1261" = type { %"class.blink::MemberBase.3853" }
%"class.blink::MemberBase.3853" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1263" = type { %"class.WTF::Vector.1266" }
%"class.WTF::Vector.1266" = type { %"class.WTF::VectorBuffer.1267" }
%"class.WTF::VectorBuffer.1267" = type { %"class.WTF::VectorBufferBase.1268" }
%"class.WTF::VectorBufferBase.1268" = type { %"class.blink::Member.1269"*, i32, i32 }
%"class.blink::Member.1269" = type { %"class.blink::MemberBase.1270" }
%"class.blink::MemberBase.1270" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1271", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1271" = type { %"class.WTF::Vector.1274" }
%"class.WTF::Vector.1274" = type { %"class.WTF::VectorBuffer.1275" }
%"class.WTF::VectorBuffer.1275" = type { %"class.WTF::VectorBufferBase.1276" }
%"class.WTF::VectorBufferBase.1276" = type { %"class.blink::Member.1277"*, i32, i32 }
%"class.blink::Member.1277" = type opaque
%"class.blink::HeapVector.1280" = type { %"class.WTF::Vector.1283" }
%"class.WTF::Vector.1283" = type { %"class.WTF::VectorBuffer.1284" }
%"class.WTF::VectorBuffer.1284" = type { %"class.WTF::VectorBufferBase.1285" }
%"class.WTF::VectorBufferBase.1285" = type { %"class.blink::Member.1286"*, i32, i32 }
%"class.blink::Member.1286" = type { %"class.blink::MemberBase.3854" }
%"class.blink::MemberBase.3854" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1288" = type { %"class.WTF::Vector.1291" }
%"class.WTF::Vector.1291" = type { %"class.WTF::VectorBuffer.1292" }
%"class.WTF::VectorBuffer.1292" = type { %"class.WTF::VectorBufferBase.1293" }
%"class.WTF::VectorBufferBase.1293" = type { %"class.blink::Member.1294"*, i32, i32 }
%"class.blink::Member.1294" = type { %"class.blink::MemberBase.3855" }
%"class.blink::MemberBase.3855" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", i32, [4 x i8] }>
%"class.blink::HeapVector.1296" = type { %"class.WTF::Vector.1299" }
%"class.WTF::Vector.1299" = type { %"class.WTF::VectorBuffer.1300" }
%"class.WTF::VectorBuffer.1300" = type { %"class.WTF::VectorBufferBase.1301" }
%"class.WTF::VectorBufferBase.1301" = type { %"class.blink::Member.1302"*, i32, i32 }
%"class.blink::Member.1302" = type { %"class.blink::MemberBase.1303" }
%"class.blink::MemberBase.1303" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304" }
%"class.blink::HeapVector.1309" = type { %"class.WTF::Vector.1312" }
%"class.WTF::Vector.1312" = type { %"class.WTF::VectorBuffer.1313" }
%"class.WTF::VectorBuffer.1313" = type { %"class.WTF::VectorBufferBase.1314" }
%"class.WTF::VectorBufferBase.1314" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1221", i32, i32 }
%"class.WTF::Vector.1316" = type { %"class.WTF::VectorBuffer.1317" }
%"class.WTF::VectorBuffer.1317" = type { %"class.WTF::VectorBufferBase.1318" }
%"class.WTF::VectorBufferBase.1318" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1319, i8, [7 x i8] }>
%class.scoped_refptr.1319 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1326", %"class.blink::HeapHashMap.1326", %"class.blink::HeapHashMap.1326", %"class.blink::HeapHashMap.1326" }
%"class.blink::HeapHashMap.1326" = type { %"class.WTF::HashMap.1329" }
%"class.WTF::HashMap.1329" = type { %"class.WTF::HashTable.1330" }
%"class.WTF::HashTable.1330" = type <{ %"struct.WTF::KeyValuePair.1332"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1332" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1333" }
%"class.blink::HeapHashMap.1333" = type { %"class.WTF::HashMap.1336" }
%"class.WTF::HashMap.1336" = type { %"class.WTF::HashTable.1337" }
%"class.WTF::HashTable.1337" = type <{ %"struct.WTF::KeyValuePair.1339"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1339" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3945", %"class.WTF::Vector.3945" }
%"class.WTF::Vector.3945" = type { %"class.WTF::VectorBuffer.3946" }
%"class.WTF::VectorBuffer.3946" = type { %"class.WTF::VectorBufferBase.3947" }
%"class.WTF::VectorBufferBase.3947" = type { %class.scoped_refptr.3851*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1340" = type { %"class.WTF::HashSet.1343" }
%"class.WTF::HashSet.1343" = type { %"class.WTF::HashTable.1344" }
%"class.WTF::HashTable.1344" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1346" = type { %"class.blink::MemberBase.1347" }
%"class.blink::MemberBase.1347" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1348" = type { %"class.WTF::HashMap.1351" }
%"class.WTF::HashMap.1351" = type { %"class.WTF::HashTable.1352" }
%"class.WTF::HashTable.1352" = type <{ %"struct.WTF::KeyValuePair.1354"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1354" = type opaque
%"class.blink::HeapHashMap.1355" = type { %"class.WTF::HashMap.1358" }
%"class.WTF::HashMap.1358" = type { %"class.WTF::HashTable.1359" }
%"class.WTF::HashTable.1359" = type <{ %"struct.WTF::KeyValuePair.1361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1361" = type opaque
%"class.std::__1::unique_ptr.1362" = type { %"class.std::__1::__compressed_pair.1363" }
%"class.std::__1::__compressed_pair.1363" = type { %"struct.std::__1::__compressed_pair_elem.1364" }
%"struct.std::__1::__compressed_pair_elem.1364" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1368" = type { %"class.WTF::Vector.1371" }
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.std::__1::pair.1374"*, i32, i32 }
%"struct.std::__1::pair.1374" = type opaque
%"class.blink::HeapVector.1099" = type { %"class.WTF::Vector.1102" }
%"class.WTF::Vector.1102" = type { %"class.WTF::VectorBuffer.1103" }
%"class.WTF::VectorBuffer.1103" = type { %"class.WTF::VectorBufferBase.1104" }
%"class.WTF::VectorBufferBase.1104" = type { %"struct.std::__1::pair.1105"*, i32, i32 }
%"struct.std::__1::pair.1105" = type opaque
%"class.blink::HeapHashSet.1376" = type { %"class.WTF::HashSet.1379" }
%"class.WTF::HashSet.1379" = type { %"class.WTF::HashTable.1380" }
%"class.WTF::HashTable.1380" = type <{ %"class.blink::WeakMember.1382"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1382" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1383" = type { %"class.WTF::HashMap.1386" }
%"class.WTF::HashMap.1386" = type { %"class.WTF::HashTable.1387" }
%"class.WTF::HashTable.1387" = type <{ %"struct.WTF::KeyValuePair.1389"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1389" = type { %"class.WTF::AtomicString", %"class.blink::Member.1269" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1392" = type { %"class.WTF::HashMap.1395" }
%"class.WTF::HashMap.1395" = type { %"class.WTF::HashTable.1396" }
%"class.WTF::HashTable.1396" = type <{ %"struct.WTF::KeyValuePair.1398"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1398" = type opaque
%class.scoped_refptr.1399 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1304" = type { %"class.blink::MemberBase.1305" }
%"class.blink::MemberBase.1305" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1400" = type { %"class.WTF::HashSet.1403" }
%"class.WTF::HashSet.1403" = type { %"class.WTF::HashTable.1404" }
%"class.WTF::HashTable.1404" = type <{ %"class.blink::Member.1406"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1406" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1413" = type { %"class.WTF::HashMap.1416" }
%"class.WTF::HashMap.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"struct.WTF::KeyValuePair.1419"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1419" = type opaque
%"class.WTF::Vector.1420" = type { %"class.WTF::VectorBuffer.1421" }
%"class.WTF::VectorBuffer.1421" = type { %"class.WTF::VectorBufferBase.1422" }
%"class.WTF::VectorBufferBase.1422" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1425" = type { %"class.blink::MemberBase.1426" }
%"class.blink::MemberBase.1426" = type { %"class.blink::AXObjectCache"* }
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1429" = type { %"class.blink::MemberBase.1430" }
%"class.blink::MemberBase.1430" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type <{ %"class.blink::ExecutionContextLifecycleStateObserver.base", [4 x i8], %"class.blink::NameClient", %"class.blink::Member.326", %"class.blink::HeapDeque", %"class.blink::HeapHashSet.1457", %"class.blink::HeapDeque", %"class.blink::HeapDeque", %"class.blink::HeapDeque", %class.scoped_refptr.778, i32, i8, i8, [2 x i8] }>
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1433" }
%"class.blink::WeakMember.1433" = type { %"class.blink::MemberBase.1434" }
%"class.blink::MemberBase.1434" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::HeapHashSet.1457" = type { %"class.WTF::HashSet.1460" }
%"class.WTF::HashSet.1460" = type { %"class.WTF::HashTable.1461" }
%"class.WTF::HashTable.1461" = type <{ %"class.blink::Member.1448"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1448" = type { %"class.blink::MemberBase.1449" }
%"class.blink::MemberBase.1449" = type { %"class.blink::PendingScript"* }
%"class.blink::PendingScript" = type <{ %"class.blink::NameClient", %"class.blink::Member.1452", %"class.WTF::TextPosition", %"class.base::TimeTicks", i32, [4 x i8], %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.1454", %"class.blink::WeakMember.1055", %"class.blink::WeakMember.1456", i8, [7 x i8] }>
%"class.blink::Member.1452" = type { %"class.blink::MemberBase.1453" }
%"class.blink::MemberBase.1453" = type { %"class.blink::ScriptElementBase"* }
%"class.blink::ScriptElementBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.blink::Member.1454" = type { %"class.blink::MemberBase.1455" }
%"class.blink::MemberBase.1455" = type { %"class.blink::PendingScriptClient"* }
%"class.blink::PendingScriptClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.1456" = type { %"class.blink::MemberBase.1007" }
%"class.blink::HeapDeque" = type { %"class.WTF::Deque.1444" }
%"class.WTF::Deque.1444" = type { %"class.WTF::Deque<blink::Member<blink::PendingScript>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::PendingScript>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1446" }
%"class.WTF::VectorBuffer.1446" = type { %"class.WTF::VectorBufferBase.1447" }
%"class.WTF::VectorBufferBase.1447" = type { %"class.blink::Member.1448"*, i32, i32 }
%class.scoped_refptr.778 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::HeapVector.1463" = type { %"class.WTF::Vector.1466" }
%"class.WTF::Vector.1466" = type { %"class.WTF::VectorBuffer.1467" }
%"class.WTF::VectorBuffer.1467" = type { %"class.WTF::VectorBufferBase.1468" }
%"class.WTF::VectorBufferBase.1468" = type { %"class.blink::Member.1452"*, i32, i32 }
%"class.std::__1::unique_ptr.1470" = type { %"class.std::__1::__compressed_pair.1471" }
%"class.std::__1::__compressed_pair.1471" = type { %"struct.std::__1::__compressed_pair_elem.1472" }
%"struct.std::__1::__compressed_pair_elem.1472" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1476" = type { %"class.WTF::HashSet.1479" }
%"class.WTF::HashSet.1479" = type { %"class.WTF::HashTable.1480" }
%"class.WTF::HashTable.1480" = type <{ %"class.blink::WeakMember.1482"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1482" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1483", i32, [4 x i8] }>
%"class.WTF::Vector.1483" = type { %"class.WTF::VectorBuffer.1484" }
%"class.WTF::VectorBuffer.1484" = type { %"class.WTF::VectorBufferBase.1485" }
%"class.WTF::VectorBufferBase.1485" = type { %"struct.std::__1::pair.1486"*, i32, i32 }
%"struct.std::__1::pair.1486" = type opaque
%"class.blink::Member.1489" = type { %"class.blink::MemberBase.1490" }
%"class.blink::MemberBase.1490" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1491" = type { %"class.WTF::VectorBuffer.1492" }
%"class.WTF::VectorBuffer.1492" = type { %"class.WTF::VectorBufferBase.1493" }
%"class.WTF::VectorBufferBase.1493" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1496" = type { %"class.std::__1::__compressed_pair.1497" }
%"class.std::__1::__compressed_pair.1497" = type { %"struct.std::__1::__compressed_pair_elem.1498" }
%"struct.std::__1::__compressed_pair_elem.1498" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1965", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.2178", %"class.std::__1::unique_ptr.2184", %"class.std::__1::unique_ptr.2190", %class.scoped_refptr.1961, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.2196", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1924", %"class.std::__1::unique_ptr.1934" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1880, %"class.WTF::Vector.1881", %"class.std::__1::unique_ptr.1886", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1907, %"class.blink::Persistent.1908" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.860", %"class.std::__1::unique_ptr.971", i8, %"class.absl::optional.977", %class.scoped_refptr.953, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.982" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.753", %"class.blink::Persistent.759", %"class.std::__1::unique_ptr.819", %"class.blink::CullRect", %"class.std::__1::unique_ptr.835" }
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.759" = type { %"class.blink::PersistentBase.760" }
%"class.blink::PersistentBase.760" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.786", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.814" }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.763", %"class.blink::Member.765", %"class.blink::Member.767", %"class.blink::Member.769", %"class.WTF::Vector.771", i16, %class.scoped_refptr.778 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.763" = type { %"class.blink::MemberBase.764" }
%"class.blink::MemberBase.764" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.765" = type { %"class.blink::MemberBase.766" }
%"class.blink::MemberBase.766" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.767" = type { %"class.blink::MemberBase.768" }
%"class.blink::MemberBase.768" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.769" = type { %"class.blink::MemberBase.770" }
%"class.blink::MemberBase.770" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.780", %"class.blink::Member.782", %"class.blink::Member.782", i8, [7 x i8] }>
%"class.blink::Member.780" = type { %"class.blink::MemberBase.781" }
%"class.blink::MemberBase.781" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::Member.782" = type { %"class.blink::MemberBase.783" }
%"class.blink::MemberBase.783" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.784", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.784" = type { %"class.blink::MemberBase.785" }
%"class.blink::MemberBase.785" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.994", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.778, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.994" = type { %"class.blink::MemberBase.783" }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.784", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.789", %"class.absl::optional.794", i8, i8, %"class.WTF::Vector.804" }
%"class.WTF::HashMap.789" = type { %"class.WTF::HashTable.790" }
%"class.WTF::HashTable.790" = type <{ %"struct.WTF::KeyValuePair.793"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.793" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.absl::optional.794" = type { %"class.absl::optional_internal::optional_data.795" }
%"class.absl::optional_internal::optional_data.795" = type { %"class.absl::optional_internal::optional_data_base.796" }
%"class.absl::optional_internal::optional_data_base.796" = type { %"class.absl::optional_internal::optional_data_dtor_base.797" }
%"class.absl::optional_internal::optional_data_dtor_base.797" = type { i8, %union.anon.798 }
%union.anon.798 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.799" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.WTF::Vector.804" = type { %"class.WTF::VectorBuffer.805" }
%"class.WTF::VectorBuffer.805" = type { %"class.WTF::VectorBufferBase.806" }
%"class.WTF::VectorBufferBase.806" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.812" }
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.812" }
%"class.absl::optional.814" = type { %"class.absl::optional_internal::optional_data.815" }
%"class.absl::optional_internal::optional_data.815" = type { %"class.absl::optional_internal::optional_data_base.816" }
%"class.absl::optional_internal::optional_data_base.816" = type { %"class.absl::optional_internal::optional_data_dtor_base.817" }
%"class.absl::optional_internal::optional_data_dtor_base.817" = type { i8, %union.anon.818 }
%union.anon.818 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.std::__1::unique_ptr.819" = type { %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.822", %"class.WTF::Vector.822", %"class.WTF::HashMap.827", %"class.WTF::Vector.822", i8, [7 x i8] }>
%"class.WTF::HashMap.827" = type { %"class.WTF::HashTable.828" }
%"class.WTF::HashTable.828" = type <{ %"struct.WTF::KeyValuePair.831"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.831" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.822" }
%"class.WTF::Vector.822" = type { %"class.WTF::VectorBuffer.823" }
%"class.WTF::VectorBuffer.823" = type { %"class.WTF::VectorBufferBase.824" }
%"class.WTF::VectorBufferBase.824" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.835" = type { %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.838", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.844", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.850", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.838" = type { %"class.std::__1::__compressed_pair.839" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.850" = type { %"class.blink::PersistentBase.851" }
%"class.blink::PersistentBase.851" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.860" = type { %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.898, %class.scoped_refptr.902, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.943, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.967 }
%class.scoped_refptr.863 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.880" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.864", i8, i8, %class.scoped_refptr.866, i32, i32 }
%"class.WTF::RefCounted.864" = type { %"class.base::RefCounted.865" }
%"class.base::RefCounted.865" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.866 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.873, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.874", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.867" }
%"class.std::__1::unique_ptr.867" = type { %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.899", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.899" = type { %"class.WTF::RefCounted.900", i8, i8, %class.scoped_refptr.873, i32, i32 }
%"class.WTF::RefCounted.900" = type { %"class.base::RefCounted.901" }
%"class.base::RefCounted.901" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.794" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.874" = type { %"class.std::__1::__compressed_pair.875" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.876" }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.880" = type { %"class.std::__1::__compressed_pair.881" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.883", %"class.std::__1::unique_ptr.889", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.889" = type { %"class.std::__1::__compressed_pair.890" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.891" }
%"struct.std::__1::__compressed_pair_elem.891" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.898 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.902 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.903 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.904" }
%"class.blink::PaintPropertyNode.904" = type { %"class.WTF::RefCounted.905", i8, i8, %class.scoped_refptr.907, i32, i32 }
%"class.WTF::RefCounted.905" = type { %"class.base::RefCounted.906" }
%"class.base::RefCounted.906" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.907 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.866, %class.scoped_refptr.908, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.930", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.908 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.945" }
%"class.blink::PaintPropertyNode.945" = type { %"class.WTF::RefCounted.946", i8, i8, %class.scoped_refptr.908, i32, i32 }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.909" }
%"class.std::__1::vector.909" = type { %"class.std::__1::__vector_base.910" }
%"class.std::__1::__vector_base.910" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.925" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.911, [20 x float], i32, [4 x i8], %"class.std::__1::vector.918", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.918" = type { %"class.std::__1::__vector_base.919" }
%"class.std::__1::__vector_base.919" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.920" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.936" }
%"class.std::__1::vector.936" = type { %"class.std::__1::__vector_base.937" }
%"class.std::__1::__vector_base.937" = type { i32*, i32*, %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { i32* }
%class.scoped_refptr.943 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.944 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.956" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.866, %"class.absl::optional.948", %class.scoped_refptr.953, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.948" = type { %"class.absl::optional_internal::optional_data.949" }
%"class.absl::optional_internal::optional_data.949" = type { %"class.absl::optional_internal::optional_data_base.950" }
%"class.absl::optional_internal::optional_data_base.950" = type { %"class.absl::optional_internal::optional_data_dtor_base.951" }
%"class.absl::optional_internal::optional_data_dtor_base.951" = type { i8, [3 x i8], %union.anon.952 }
%union.anon.952 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.956" = type { %"class.std::__1::__compressed_pair.957" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.959", i32, [4 x i8] }>
%"class.WTF::Vector.959" = type { %"class.WTF::VectorBuffer.960" }
%"class.WTF::VectorBuffer.960" = type { %"class.WTF::VectorBufferBase.961" }
%"class.WTF::VectorBufferBase.961" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.967 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.971" = type { %"class.std::__1::__compressed_pair.972" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.866, %class.scoped_refptr.908, %class.scoped_refptr.907 }
%"class.absl::optional.977" = type { %"class.absl::optional_internal::optional_data.978" }
%"class.absl::optional_internal::optional_data.978" = type { %"class.absl::optional_internal::optional_data_base.979" }
%"class.absl::optional_internal::optional_data_base.979" = type { %"class.absl::optional_internal::optional_data_dtor_base.980" }
%"class.absl::optional_internal::optional_data_dtor_base.980" = type { i8, %union.anon.981 }
%union.anon.981 = type { %"class.blink::IntRect" }
%class.scoped_refptr.953 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.954", [4 x i8] }
%"class.WTF::RefCounted.954" = type { %"class.base::RefCounted.955" }
%"class.base::RefCounted.955" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.982" = type { %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1880 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1881" = type { %"class.WTF::VectorBuffer.1882" }
%"class.WTF::VectorBuffer.1882" = type { %"class.WTF::VectorBufferBase.1883", [8 x i8] }
%"class.WTF::VectorBufferBase.1883" = type { %class.scoped_refptr.1880*, i32, i32 }
%"class.std::__1::unique_ptr.1886" = type { %"class.std::__1::__compressed_pair.1887" }
%"class.std::__1::__compressed_pair.1887" = type { %"struct.std::__1::__compressed_pair_elem.1888" }
%"struct.std::__1::__compressed_pair_elem.1888" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1889", %"class.absl::optional.1894", %"class.absl::optional.1899" }
%"class.absl::optional.1889" = type { %"class.absl::optional_internal::optional_data.1890" }
%"class.absl::optional_internal::optional_data.1890" = type { %"class.absl::optional_internal::optional_data_base.1891" }
%"class.absl::optional_internal::optional_data_base.1891" = type { %"class.absl::optional_internal::optional_data_dtor_base.1892" }
%"class.absl::optional_internal::optional_data_dtor_base.1892" = type { i8, %union.anon.1893 }
%union.anon.1893 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1894" = type { %"class.absl::optional_internal::optional_data.1895" }
%"class.absl::optional_internal::optional_data.1895" = type { %"class.absl::optional_internal::optional_data_base.1896" }
%"class.absl::optional_internal::optional_data_base.1896" = type { %"class.absl::optional_internal::optional_data_dtor_base.1897" }
%"class.absl::optional_internal::optional_data_dtor_base.1897" = type { i8, [3 x i8], %union.anon.1898 }
%union.anon.1898 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1899" = type { %"class.absl::optional_internal::optional_data.1900" }
%"class.absl::optional_internal::optional_data.1900" = type { %"class.absl::optional_internal::optional_data_base.1901" }
%"class.absl::optional_internal::optional_data_base.1901" = type { %"class.absl::optional_internal::optional_data_dtor_base.1902" }
%"class.absl::optional_internal::optional_data_dtor_base.1902" = type { i8, %union.anon.1903 }
%union.anon.1903 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1907 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1864", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1864" = type { %"class.std::__1::__compressed_pair.1865" }
%"class.std::__1::__compressed_pair.1865" = type { %"struct.std::__1::__compressed_pair_elem.1866" }
%"struct.std::__1::__compressed_pair_elem.1866" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1867", %"class.absl::optional.1872" }
%"class.absl::optional.1867" = type { %"class.absl::optional_internal::optional_data.1868" }
%"class.absl::optional_internal::optional_data.1868" = type { %"class.absl::optional_internal::optional_data_base.1869" }
%"class.absl::optional_internal::optional_data_base.1869" = type { %"class.absl::optional_internal::optional_data_dtor_base.1870" }
%"class.absl::optional_internal::optional_data_dtor_base.1870" = type { i8, %union.anon.1871 }
%union.anon.1871 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1872" = type { %"class.absl::optional_internal::optional_data.1873" }
%"class.absl::optional_internal::optional_data.1873" = type { %"class.absl::optional_internal::optional_data_base.1874" }
%"class.absl::optional_internal::optional_data_base.1874" = type { %"class.absl::optional_internal::optional_data_dtor_base.1875" }
%"class.absl::optional_internal::optional_data_dtor_base.1875" = type { i8, %union.anon.1876 }
%union.anon.1876 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1908" = type { %"class.blink::PersistentBase.1909" }
%"class.blink::PersistentBase.1909" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1912", %"struct.blink::PhysicalRect", %"class.blink::Member.1922" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1912" = type { %"class.std::__1::__compressed_pair.1913" }
%"class.std::__1::__compressed_pair.1913" = type { %"struct.std::__1::__compressed_pair_elem.1914" }
%"struct.std::__1::__compressed_pair_elem.1914" = type { %"class.WTF::HashSet.1915"* }
%"class.WTF::HashSet.1915" = type { %"class.WTF::HashTable.1916" }
%"class.WTF::HashTable.1916" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1922" = type { %"class.blink::MemberBase.1923" }
%"class.blink::MemberBase.1923" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1924" = type { %"class.blink::PersistentBase.1925" }
%"class.blink::PersistentBase.1925" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1928", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1928" = type { %"class.std::__1::__compressed_pair.1929" }
%"class.std::__1::__compressed_pair.1929" = type { %"struct.std::__1::__compressed_pair_elem.1930" }
%"struct.std::__1::__compressed_pair_elem.1930" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1934" = type { %"class.std::__1::__compressed_pair.1935" }
%"class.std::__1::__compressed_pair.1935" = type { %"struct.std::__1::__compressed_pair_elem.1936" }
%"struct.std::__1::__compressed_pair_elem.1936" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1937", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1937" = type { %"class.WTF::HashTable.1940", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1940" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1943", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1943" = type { %"class.std::__1::__compressed_pair.1944" }
%"class.std::__1::__compressed_pair.1944" = type { %"struct.std::__1::__compressed_pair_elem.1945" }
%"struct.std::__1::__compressed_pair_elem.1945" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1946, %"class.std::__1::unique_ptr.1947", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1864", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1946 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2926", i16, %class.scoped_refptr.1946 }
%"class.WTF::ThreadSafeRefCounted.2926" = type { %"class.base::RefCountedThreadSafe.2927" }
%"class.base::RefCountedThreadSafe.2927" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1947" = type { %"class.std::__1::__compressed_pair.1948" }
%"class.std::__1::__compressed_pair.1948" = type { %"struct.std::__1::__compressed_pair_elem.1949" }
%"struct.std::__1::__compressed_pair_elem.1949" = type { %"class.WTF::Vector.1950"* }
%"class.WTF::Vector.1950" = type { %"class.WTF::VectorBuffer.1951" }
%"class.WTF::VectorBuffer.1951" = type { %"class.WTF::VectorBufferBase.1952" }
%"class.WTF::VectorBufferBase.1952" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1961, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.1965" = type { %"class.blink::MemberBase.1966" }
%"class.blink::MemberBase.1966" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1969", %"class.blink::Member.1974", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1976", i8, i32, %"class.blink::Color", %"class.absl::optional.1979", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1984", %"class.blink::Member.1986", %"class.blink::Member.1986", %"class.std::__1::unique_ptr.1989", i32, [4 x i8], %"class.WTF::HashSet.1992", %"class.blink::Member.1999", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2001", %"class.blink::HeapHashSet.2008", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2014", i8, %"class.blink::Member.2020", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2032", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2046", i8, %"class.std::__1::unique_ptr.2052", %"class.std::__1::unique_ptr.2128", %"class.WTF::Vector.2134", i32, %class.scoped_refptr.2139, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2140", %"class.blink::Member.2142", %"class.blink::Member.2144", %"class.blink::HeapHashSet.2146", %"class.blink::HeapHashSet.2153", %"class.std::__1::unique_ptr.2160", %"class.std::__1::unique_ptr.2167", %"class.WTF::Vector.771" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.WTF::HashSet.1969" = type { %"class.WTF::HashTable.1970" }
%"class.WTF::HashTable.1970" = type <{ %class.scoped_refptr.1973*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1973 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1974" = type { %"class.blink::MemberBase.1975" }
%"class.blink::MemberBase.1975" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2382", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2390", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2404", %"class.blink::FrameLoader", %"class.blink::Member.2425", %"class.blink::Member.343", %"class.blink::Member.2426", %"class.blink::Member.2428", %"class.blink::Member.2444", %"class.blink::Member.2446", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2448", %class.scoped_refptr.2672, %"class.blink::Member.2673", %"class.blink::Member.2675", %"class.blink::Member.2677", %"class.blink::Member.2679", %"class.blink::Member.2681", %"class.blink::Member.2685", %"class.blink::Member.2687", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2691", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2697", %"class.std::__1::unique_ptr.2698", %"class.absl::optional.2370", i32, [4 x i8], %"class.std::__1::unique_ptr.2704", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2712", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2717", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2722", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2725", %"class.blink::Member.2727", %"class.blink::Member.2729", %"class.blink::Member.2731", %"class.mojo::StructPtr.2734", %"class.blink::Member.2743", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2745", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2215", %"class.blink::Member.2217", %"class.blink::Member.2219", i8, i32, i8, i32, %"class.blink::Member.2352", %"class.blink::Member.2242", %"class.blink::FrameLifecycle", %"class.blink::Member.2213", %"class.blink::Member.2213", %"class.blink::Member.2213", %"class.blink::Member.2213", %"class.blink::Member.2213", %"class.blink::Member.2213", %"class.blink::Member.1974", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2363", i8, %"class.base::UnguessableToken", %"class.absl::optional.2365", %"class.absl::optional.2370", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.2213", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2215" = type { %"class.blink::MemberBase.2216" }
%"class.blink::MemberBase.2216" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.2932", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.2213", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.2958", %"class.blink::Member.2962", %"class.blink::Member.2964", %"class.blink::Member.2968", %"class.blink::Member.2970", %"class.blink::Member.2972", %"class.blink::Member.2983", %"class.blink::Member.2985", %"class.blink::HeapObserverSet.2987", %"class.blink::Member.2995", %"class.blink::Member.2997", %"class.blink::Member.2999", %"class.blink::Member.3001", %"class.blink::Member.3003", %"class.blink::Member.3005", %"class.blink::Member.3007", %"class.blink::Member.3009", %"class.blink::Member.3011", %"class.blink::Member.3013", %"class.blink::Member.3015", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.3040", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.3047", %"class.blink::Member.2215", %"class.blink::Member.2215", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.3055", %"class.std::__1::unique_ptr.3061", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.2932" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2933" }
%"class.blink::HeapHashMap.2933" = type { %"class.WTF::HashMap.2936" }
%"class.WTF::HashMap.2936" = type { %"class.WTF::HashTable.2937" }
%"class.WTF::HashTable.2937" = type <{ %"struct.WTF::KeyValuePair.2939"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2939" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2940" }
%"class.std::__1::unique_ptr.2940" = type { %"class.std::__1::__compressed_pair.2941" }
%"class.std::__1::__compressed_pair.2941" = type { %"struct.std::__1::__compressed_pair_elem.2942" }
%"struct.std::__1::__compressed_pair_elem.2942" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.2943", %"class.WTF::HashMap.2943", %"class.WTF::HashMap.2943", %"class.WTF::HashMap.2943", %"class.WTF::HashMap.2943", %"class.WTF::HashMap.2943", %"class.WTF::HashMap.2943", %"class.std::__1::unique_ptr.2948" }
%"class.WTF::HashMap.2943" = type { %"class.WTF::HashTable.2944" }
%"class.WTF::HashTable.2944" = type <{ %"struct.WTF::KeyValuePair.2947"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2947" = type opaque
%"class.std::__1::unique_ptr.2948" = type { %"class.std::__1::__compressed_pair.2949" }
%"class.std::__1::__compressed_pair.2949" = type { %"struct.std::__1::__compressed_pair_elem.2950" }
%"struct.std::__1::__compressed_pair_elem.2950" = type { %"class.WTF::Vector.2951"* }
%"class.WTF::Vector.2951" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.2958" = type { %"class.blink::MemberBase.2959" }
%"class.blink::MemberBase.2959" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.2215", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.2962" = type { %"class.blink::MemberBase.2963" }
%"class.blink::MemberBase.2963" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.2964" = type { %"class.blink::MemberBase.2965" }
%"class.blink::MemberBase.2965" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type { i32 (...)**, %"class.blink::WeakMember.1622", %"struct.blink::PhysicalOffset", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.2968" = type { %"class.blink::MemberBase.2969" }
%"class.blink::MemberBase.2969" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.2970" = type { %"class.blink::MemberBase.2971" }
%"class.blink::MemberBase.2971" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.2972" = type { %"class.blink::MemberBase.2973" }
%"class.blink::MemberBase.2973" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type { %"class.blink::Member.2215", %"class.blink::Member.2213", i8, i8, i8, i8, [4 x i8], %"class.blink::HeapHashSet.2976" }
%"class.blink::HeapHashSet.2976" = type { %"class.WTF::HashSet.2979" }
%"class.WTF::HashSet.2979" = type { %"class.WTF::HashTable.2980" }
%"class.WTF::HashTable.2980" = type <{ %"class.blink::WeakMember.2982"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2982" = type opaque
%"class.blink::Member.2983" = type { %"class.blink::MemberBase.2984" }
%"class.blink::MemberBase.2984" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.2985" = type { %"class.blink::MemberBase.2986" }
%"class.blink::MemberBase.2986" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.2987" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2988" }
%"class.blink::HeapHashSet.2988" = type { %"class.WTF::HashSet.2991" }
%"class.WTF::HashSet.2991" = type { %"class.WTF::HashTable.2992" }
%"class.WTF::HashTable.2992" = type <{ %"class.blink::WeakMember.2994"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2994" = type opaque
%"class.blink::Member.2995" = type { %"class.blink::MemberBase.2996" }
%"class.blink::MemberBase.2996" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.2997" = type { %"class.blink::MemberBase.2998" }
%"class.blink::MemberBase.2998" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.2999" = type { %"class.blink::MemberBase.3000" }
%"class.blink::MemberBase.3000" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.3001" = type { %"class.blink::MemberBase.3002" }
%"class.blink::MemberBase.3002" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.3003" = type { %"class.blink::MemberBase.3004" }
%"class.blink::MemberBase.3004" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type { %"class.blink::Member.3078", %"class.blink::WeakMember.1622", %"class.blink::Member.2215" }
%"class.blink::Member.3078" = type { %"class.blink::MemberBase.3079" }
%"class.blink::MemberBase.3079" = type { %"class.blink::ViewportScrollCallback"* }
%"class.blink::ViewportScrollCallback" = type opaque
%"class.blink::Member.3005" = type { %"class.blink::MemberBase.3006" }
%"class.blink::MemberBase.3006" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.3007" = type { %"class.blink::MemberBase.3008" }
%"class.blink::MemberBase.3008" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.3009" = type { %"class.blink::MemberBase.3010" }
%"class.blink::MemberBase.3010" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.3011" = type { %"class.blink::MemberBase.3012" }
%"class.blink::MemberBase.3012" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.3013" = type { %"class.blink::MemberBase.3014" }
%"class.blink::MemberBase.3014" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.3015" = type { %"class.blink::MemberBase.3016" }
%"class.blink::MemberBase.3016" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.3017" }
%"class.WTF::Deque.3017" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.3020" }
%"class.WTF::VectorBuffer.3020" = type { %"class.WTF::VectorBufferBase.3021" }
%"class.WTF::VectorBufferBase.3021" = type { %"class.std::__1::unique_ptr.3022"*, i32, i32 }
%"class.std::__1::unique_ptr.3022" = type { %"class.std::__1::__compressed_pair.3023" }
%"class.std::__1::__compressed_pair.3023" = type { %"struct.std::__1::__compressed_pair_elem.3024" }
%"struct.std::__1::__compressed_pair_elem.3024" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.3028", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.3028" = type { %"class.std::__1::__bitset.3029" }
%"class.std::__1::__bitset.3029" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.3030" }
%"class.absl::optional.3030" = type { %"class.absl::optional_internal::optional_data.3031" }
%"class.absl::optional_internal::optional_data.3031" = type { %"class.absl::optional_internal::optional_data_base.3032" }
%"class.absl::optional_internal::optional_data_base.3032" = type { %"class.absl::optional_internal::optional_data_dtor_base.3033" }
%"class.absl::optional_internal::optional_data_dtor_base.3033" = type { i8, %union.anon.3034 }
%union.anon.3034 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.3035", i64, %"class.absl::optional.1776", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.3035" = type { %"class.absl::optional_internal::optional_data.3036" }
%"class.absl::optional_internal::optional_data.3036" = type { %"class.absl::optional_internal::optional_data_base.3037" }
%"class.absl::optional_internal::optional_data_base.3037" = type { %"class.absl::optional_internal::optional_data_dtor_base.3038" }
%"class.absl::optional_internal::optional_data_dtor_base.3038" = type { i8, %union.anon.3039 }
%union.anon.3039 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.3040" = type { %"class.std::__1::unique_ptr.3041" }
%"class.std::__1::unique_ptr.3041" = type { %"class.std::__1::__compressed_pair.3042" }
%"class.std::__1::__compressed_pair.3042" = type { %"struct.std::__1::__compressed_pair_elem.3043" }
%"struct.std::__1::__compressed_pair_elem.3043" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.3047" = type { %"class.WTF::HashSet.3050" }
%"class.WTF::HashSet.3050" = type { %"class.WTF::HashTable.3051" }
%"class.WTF::HashTable.3051" = type <{ %"class.blink::WeakMember.3053"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3053" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.3054" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.3054" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.3055" = type { %"class.std::__1::__compressed_pair.3056" }
%"class.std::__1::__compressed_pair.3056" = type { %"struct.std::__1::__compressed_pair_elem.3057" }
%"struct.std::__1::__compressed_pair_elem.3057" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3061" = type { %"class.std::__1::__compressed_pair.3062" }
%"class.std::__1::__compressed_pair.3062" = type { %"struct.std::__1::__compressed_pair_elem.3063" }
%"struct.std::__1::__compressed_pair_elem.3063" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::Member.2217" = type { %"class.blink::MemberBase.2218" }
%"class.blink::MemberBase.2218" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2219" = type { %"class.blink::MemberBase.2220" }
%"class.blink::MemberBase.2220" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.2213", %"class.blink::Member.2242", %"class.blink::Member.2244", %"class.blink::Member.2246", i8, %"class.WTF::Vector.2248" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.2235" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.2223" }
%"class.blink::HeapVector.2223" = type { %"class.WTF::Vector.2226" }
%"class.WTF::Vector.2226" = type { %"class.WTF::VectorBuffer.2227" }
%"class.WTF::VectorBuffer.2227" = type { %"class.WTF::VectorBufferBase.2228", [32 x i8] }
%"class.WTF::VectorBufferBase.2228" = type { %"struct.std::__1::pair.2229"*, i32, i32 }
%"struct.std::__1::pair.2229" = type { %"class.WTF::AtomicString", %"class.blink::Member.2230" }
%"class.blink::Member.2230" = type { %"class.blink::MemberBase.2231" }
%"class.blink::MemberBase.2231" = type { %"class.blink::HeapVector.2232"* }
%"class.blink::HeapVector.2232" = type opaque
%"class.std::__1::unique_ptr.2235" = type { %"class.std::__1::__compressed_pair.2236" }
%"class.std::__1::__compressed_pair.2236" = type { %"struct.std::__1::__compressed_pair_elem.2237" }
%"struct.std::__1::__compressed_pair_elem.2237" = type { %"class.WTF::Vector.2238"* }
%"class.WTF::Vector.2238" = type opaque
%"class.blink::Member.2244" = type { %"class.blink::MemberBase.2245" }
%"class.blink::MemberBase.2245" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.2246" = type { %"class.blink::MemberBase.2247" }
%"class.blink::MemberBase.2247" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.2248" = type { %"class.WTF::VectorBuffer.2249" }
%"class.WTF::VectorBuffer.2249" = type { %"class.WTF::VectorBufferBase.2250" }
%"class.WTF::VectorBufferBase.2250" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2344" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2251, %"class.std::__1::unique_ptr.1772", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1786, i32 }>
%class.scoped_refptr.2251 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1786, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2310", %"class.absl::optional.2315", %"class.absl::optional.2268", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2335", i8, [7 x i8], %class.scoped_refptr.1786, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1799" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1786, %"class.std::__1::unique_ptr.2252", %"class.absl::optional.2262", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2268", %"class.std::__1::unique_ptr.2273", i8, i64, %class.scoped_refptr.2307, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2308", %"class.base::WeakPtrFactory.2309" }
%"class.std::__1::unique_ptr.2252" = type { %"class.std::__1::__compressed_pair.2253" }
%"class.std::__1::__compressed_pair.2253" = type { %"struct.std::__1::__compressed_pair_elem.2254" }
%"struct.std::__1::__compressed_pair_elem.2254" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1786, i8, %"class.mojo::ScopedHandleBase.2255", %class.scoped_refptr.2256, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2257", i8*, %"class.base::WeakPtrFactory.2258" }
%"class.mojo::ScopedHandleBase.2255" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2256 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.2257" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2258" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2262" = type { %"class.absl::optional_internal::optional_data.2263" }
%"class.absl::optional_internal::optional_data.2263" = type { %"class.absl::optional_internal::optional_data_base.2264" }
%"class.absl::optional_internal::optional_data_base.2264" = type { %"class.absl::optional_internal::optional_data_dtor_base.2265" }
%"class.absl::optional_internal::optional_data_dtor_base.2265" = type { i8, %union.anon.2266 }
%union.anon.2266 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2267", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2267" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2273" = type { %"class.std::__1::__compressed_pair.2274" }
%"class.std::__1::__compressed_pair.2274" = type { %"struct.std::__1::__compressed_pair_elem.2275" }
%"struct.std::__1::__compressed_pair_elem.2275" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2276", i8, i64, %class.scoped_refptr.2277, %class.scoped_refptr.2302 }
%"class.base::RepeatingCallback.2276" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2277 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2278", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2280", %"class.std::__1::map.2291", i8, [7 x i8] }>
%"class.base::RefCounted.2278" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2279 }
%class.scoped_refptr.2279 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2280" = type { %"class.std::__1::__tree.2281" }
%"class.std::__1::__tree.2281" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2282", %"class.std::__1::__compressed_pair.2286" }
%"class.std::__1::__compressed_pair.2282" = type { %"struct.std::__1::__compressed_pair_elem.1676" }
%"class.std::__1::__compressed_pair.2286" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2291" = type { %"class.std::__1::__tree.2292" }
%"class.std::__1::__tree.2292" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2293", %"class.std::__1::__compressed_pair.2297" }
%"class.std::__1::__compressed_pair.2293" = type { %"struct.std::__1::__compressed_pair_elem.1676" }
%"class.std::__1::__compressed_pair.2297" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.2302 = type { %"class.base::RefCountedData.2303"* }
%"class.base::RefCountedData.2303" = type opaque
%class.scoped_refptr.2307 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2308" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2309" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2310" = type { %"class.absl::optional_internal::optional_data.2311" }
%"class.absl::optional_internal::optional_data.2311" = type { %"class.absl::optional_internal::optional_data_base.2312" }
%"class.absl::optional_internal::optional_data_base.2312" = type { %"class.absl::optional_internal::optional_data_dtor_base.2313" }
%"class.absl::optional_internal::optional_data_dtor_base.2313" = type { i8, %union.anon.2314 }
%union.anon.2314 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2315" = type { %"class.absl::optional_internal::optional_data.2316" }
%"class.absl::optional_internal::optional_data.2316" = type { %"class.absl::optional_internal::optional_data_base.2317" }
%"class.absl::optional_internal::optional_data_base.2317" = type { %"class.absl::optional_internal::optional_data_dtor_base.2318" }
%"class.absl::optional_internal::optional_data_dtor_base.2318" = type { i8, [7 x i8], %union.anon.2319 }
%union.anon.2319 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2268" = type { %"class.absl::optional_internal::optional_data.2269" }
%"class.absl::optional_internal::optional_data.2269" = type { %"class.absl::optional_internal::optional_data_base.2270" }
%"class.absl::optional_internal::optional_data_base.2270" = type { %"class.absl::optional_internal::optional_data_dtor_base.2271" }
%"class.absl::optional_internal::optional_data_dtor_base.2271" = type { i8, %union.anon.2272 }
%union.anon.2272 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2320 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2320 = type { %"class.std::__1::map.2323" }
%"class.std::__1::map.2323" = type { %"class.std::__1::__tree.2324" }
%"class.std::__1::__tree.2324" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2325", %"class.std::__1::__compressed_pair.2329" }
%"class.std::__1::__compressed_pair.2325" = type { %"struct.std::__1::__compressed_pair_elem.1676" }
%"class.std::__1::__compressed_pair.2329" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2334"*, i64 }
%"class.std::__1::unique_ptr.2334" = type opaque
%"class.std::__1::map.2335" = type { %"class.std::__1::__tree.2336" }
%"class.std::__1::__tree.2336" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2337", %"class.std::__1::__compressed_pair.2341" }
%"class.std::__1::__compressed_pair.2337" = type { %"struct.std::__1::__compressed_pair_elem.1676" }
%"class.std::__1::__compressed_pair.2341" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2344" = type { %"class.std::__1::__compressed_pair.2345" }
%"class.std::__1::__compressed_pair.2345" = type { %"struct.std::__1::__compressed_pair_elem.2346" }
%"struct.std::__1::__compressed_pair_elem.2346" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2352" = type { %"class.blink::MemberBase.2353" }
%"class.blink::MemberBase.2353" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2242" = type { %"class.blink::MemberBase.2243" }
%"class.blink::MemberBase.2243" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.2213" = type { %"class.blink::MemberBase.2214" }
%"class.blink::MemberBase.2214" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.2213", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2354" }
%"class.base::internal::flat_tree.2354" = type { %"class.std::__1::vector.2355" }
%"class.std::__1::vector.2355" = type { %"class.std::__1::__vector_base.2356" }
%"class.std::__1::__vector_base.2356" = type { %"struct.std::__1::pair.2357"*, %"struct.std::__1::pair.2357"*, %"class.std::__1::__compressed_pair.2358" }
%"struct.std::__1::pair.2357" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2358" = type { %"struct.std::__1::__compressed_pair_elem.2359" }
%"struct.std::__1::__compressed_pair_elem.2359" = type { %"struct.std::__1::pair.2357"* }
%"class.blink::Member.2363" = type { %"class.blink::MemberBase.2364" }
%"class.blink::MemberBase.2364" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2365" = type { %"class.absl::optional_internal::optional_data.2366" }
%"class.absl::optional_internal::optional_data.2366" = type { %"class.absl::optional_internal::optional_data_base.2367" }
%"class.absl::optional_internal::optional_data_base.2367" = type { %"class.absl::optional_internal::optional_data_dtor_base.2368" }
%"class.absl::optional_internal::optional_data_dtor_base.2368" = type { i8, %union.anon.2369 }
%union.anon.2369 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2375" }
%"class.blink::HeapHashSet.2375" = type { %"class.WTF::HashSet.2378" }
%"class.WTF::HashSet.2378" = type { %"class.WTF::HashTable.2379" }
%"class.WTF::HashTable.2379" = type <{ %"class.blink::WeakMember.2381"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2381" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2382" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2383" }
%"class.blink::HeapHashMap.2383" = type { %"class.WTF::HashMap.2386" }
%"class.WTF::HashMap.2386" = type { %"class.WTF::HashTable.2387" }
%"class.WTF::HashTable.2387" = type <{ %"struct.WTF::KeyValuePair.2389"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2389" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2390" = type { %"class.std::__1::__compressed_pair.2391" }
%"class.std::__1::__compressed_pair.2391" = type { %"struct.std::__1::__compressed_pair_elem.2392" }
%"struct.std::__1::__compressed_pair_elem.2392" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2393", %"class.base::WeakPtrFactory.2398" }
%"class.WTF::HashMap.2393" = type { %"class.WTF::HashTable.2394" }
%"class.WTF::HashTable.2394" = type <{ %"struct.WTF::KeyValuePair.2397"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2397" = type opaque
%"class.base::WeakPtrFactory.2398" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2402" }
%"class.blink::Member.2402" = type { %"class.blink::MemberBase.2403" }
%"class.blink::MemberBase.2403" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3884", i64, %"class.std::__1::map.3885", i8*, i64, %"class.base::WeakPtrFactory.3894" }
%"class.base::RepeatingCallback.3884" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3885" = type { %"class.std::__1::__tree.3886" }
%"class.std::__1::__tree.3886" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3887", %"class.std::__1::__compressed_pair.3891" }
%"class.std::__1::__compressed_pair.3887" = type { %"struct.std::__1::__compressed_pair_elem.1676" }
%"class.std::__1::__compressed_pair.3891" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.3894" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2404" = type { %"class.WTF::HashSet.2407" }
%"class.WTF::HashSet.2407" = type { %"class.WTF::HashTable.2408" }
%"class.WTF::HashTable.2408" = type <{ %"class.blink::WeakMember.2410"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2410" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1974", %"class.blink::Member.2411", %"class.blink::Member.2413", %"class.std::__1::unique_ptr.2415", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2421" }
%"class.blink::Member.2411" = type { %"class.blink::MemberBase.2412" }
%"class.blink::MemberBase.2412" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2413" = type { %"class.blink::MemberBase.2414" }
%"class.blink::MemberBase.2414" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2415" = type { %"class.std::__1::__compressed_pair.2416" }
%"class.std::__1::__compressed_pair.2416" = type { %"struct.std::__1::__compressed_pair_elem.2417" }
%"struct.std::__1::__compressed_pair_elem.2417" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.2421" = type { %"class.WTF::HashTable.2422" }
%"class.WTF::HashTable.2422" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2425" = type { %"class.blink::MemberBase.1978" }
%"class.blink::MemberBase.1978" = type { %"class.blink::LocalFrameView"* }
%"class.blink::Member.2426" = type { %"class.blink::MemberBase.2427" }
%"class.blink::MemberBase.2427" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2428" = type { %"class.blink::MemberBase.2429" }
%"class.blink::MemberBase.2429" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1974", %"class.blink::Member.2432", %"class.blink::Member.2434", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2436", %"class.blink::Member.2442" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1055" }
%"class.blink::Member.2432" = type { %"class.blink::MemberBase.2433" }
%"class.blink::MemberBase.2433" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.2434" = type { %"class.blink::MemberBase.2435" }
%"class.blink::MemberBase.2435" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.2436" = type { %"class.std::__1::__compressed_pair.2437" }
%"class.std::__1::__compressed_pair.2437" = type { %"struct.std::__1::__compressed_pair_elem.2438" }
%"struct.std::__1::__compressed_pair_elem.2438" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.2442" = type { %"class.blink::MemberBase.2443" }
%"class.blink::MemberBase.2443" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2444" = type { %"class.blink::MemberBase.2445" }
%"class.blink::MemberBase.2445" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type { %"class.blink::Member.1974", %"class.blink::Member.2824", %"class.blink::HeapTaskRunnerTimer.2826", %"class.blink::HeapTaskRunnerTimer.2826", %"class.blink::Member.343", %"class.blink::Member.343", i8, %"class.blink::Member.1974", %"class.blink::Member.782", %"class.blink::Member.318", i8, %"class.blink::Member.2828", %"class.blink::Member.2830", %"class.blink::Member.2832", %"class.blink::Member.2852", %"class.blink::Member.2856", %"class.blink::Member.2860", %"class.blink::Member.2864", %"class.blink::Member.2917", double, %"class.blink::HeapTaskRunnerTimer.2826", %"class.absl::optional.2919", %"class.blink::Member.343", i8, %"struct.blink::TouchAdjustmentResult" }
%"class.blink::Member.2824" = type { %"class.blink::MemberBase.2825" }
%"class.blink::MemberBase.2825" = type { %"class.blink::SelectionController"* }
%"class.blink::SelectionController" = type opaque
%"class.blink::Member.2828" = type { %"class.blink::MemberBase.2829" }
%"class.blink::MemberBase.2829" = type { %"class.blink::HTMLFrameSetElement"* }
%"class.blink::HTMLFrameSetElement" = type opaque
%"class.blink::Member.2830" = type { %"class.blink::MemberBase.2831" }
%"class.blink::MemberBase.2831" = type { %"class.blink::EventHandlerRegistry"* }
%"class.blink::EventHandlerRegistry" = type opaque
%"class.blink::Member.2832" = type { %"class.blink::MemberBase.2833" }
%"class.blink::MemberBase.2833" = type { %"class.blink::ScrollManager"* }
%"class.blink::ScrollManager" = type { %"class.cc::SnapFlingClient", %"class.blink::Member.1974", %"class.WTF::Deque.2836", %"class.blink::Member.318", i8, %"class.blink::Member.318", %"class.blink::FloatSize", i8, i8, i8, %"class.blink::Member.782", %"class.blink::Member.780", %"class.std::__1::unique_ptr.2840", %"class.blink::LayoutSize" }
%"class.cc::SnapFlingClient" = type { i32 (...)** }
%"class.WTF::Deque.2836" = type { %"class.WTF::Deque<int, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<int, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2839" }
%"class.WTF::VectorBuffer.2839" = type { %"class.WTF::VectorBufferBase.2097" }
%"class.WTF::VectorBufferBase.2097" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.2840" = type { %"class.std::__1::__compressed_pair.2841" }
%"class.std::__1::__compressed_pair.2841" = type { %"struct.std::__1::__compressed_pair_elem.2842" }
%"struct.std::__1::__compressed_pair_elem.2842" = type { %"class.cc::SnapFlingController"* }
%"class.cc::SnapFlingController" = type { %"class.cc::SnapFlingClient"*, i32, %"class.std::__1::unique_ptr.2843" }
%"class.std::__1::unique_ptr.2843" = type { %"class.std::__1::__compressed_pair.2844" }
%"class.std::__1::__compressed_pair.2844" = type { %"struct.std::__1::__compressed_pair_elem.2845" }
%"struct.std::__1::__compressed_pair_elem.2845" = type { %"class.cc::SnapFlingCurve"* }
%"class.cc::SnapFlingCurve" = type opaque
%"class.blink::Member.2852" = type { %"class.blink::MemberBase.2853" }
%"class.blink::MemberBase.2853" = type { %"class.blink::MouseEventManager"* }
%"class.blink::MouseEventManager" = type <{ %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1974", %"class.blink::Member.2832", %"class.blink::Member.343", %"class.blink::FloatPoint", %"class.blink::FloatPoint", i8, [7 x i8], %"class.blink::Member.318", i32, [4 x i8], %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::IntPoint", %"class.base::TimeTicks", %"class.blink::WebMouseEvent", %"struct.blink::PhysicalOffset", i8, [7 x i8] }>
%"class.blink::WebMouseEvent" = type <{ %"class.blink::WebInputEvent", %"class.blink::WebPointerProperties", i32, i32, [4 x i8] }>
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.blink::WebPointerProperties" = type { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.blink::Member.2856" = type { %"class.blink::MemberBase.2857" }
%"class.blink::MemberBase.2857" = type { %"class.blink::MouseWheelEventManager"* }
%"class.blink::MouseWheelEventManager" = type { %"class.blink::Member.1974", %"class.blink::Member.318", %"class.blink::Member.2832" }
%"class.blink::Member.2860" = type { %"class.blink::MemberBase.2861" }
%"class.blink::MemberBase.2861" = type { %"class.blink::KeyboardEventManager"* }
%"class.blink::KeyboardEventManager" = type { %"class.blink::Member.1974", %"class.blink::Member.2832" }
%"class.blink::Member.2864" = type { %"class.blink::MemberBase.2865" }
%"class.blink::MemberBase.2865" = type { %"class.blink::PointerEventManager"* }
%"class.blink::PointerEventManager" = type { %"class.blink::Member.1974", [5 x i8], i8, %"class.WTF::Deque.2868", %"class.blink::HeapHashMap.2872", %"class.blink::HeapHashMap.2879", %"class.blink::HeapHashMap.2879", %"class.blink::PointerEventFactory", %"class.blink::Member.2901", %"class.blink::Member.2852", i32, i8, i8, %"class.blink::Member.2917" }
%"class.WTF::Deque.2868" = type { %"class.WTF::Deque<unsigned int, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<unsigned int, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2871" }
%"class.WTF::VectorBuffer.2871" = type { %"class.WTF::VectorBufferBase.1160" }
%"class.blink::HeapHashMap.2872" = type { %"class.WTF::HashMap.2875" }
%"class.WTF::HashMap.2875" = type { %"class.WTF::HashTable.2876" }
%"class.WTF::HashTable.2876" = type <{ %"struct.WTF::KeyValuePair.2878"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2878" = type opaque
%"class.blink::HeapHashMap.2879" = type { %"class.WTF::HashMap.2882" }
%"class.WTF::HashMap.2882" = type { %"class.WTF::HashTable.2883" }
%"class.WTF::HashTable.2883" = type <{ %"struct.WTF::KeyValuePair.2885"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2885" = type opaque
%"class.blink::PointerEventFactory" = type { i32, [4 x i8], %"class.WTF::HashMap.2886", %"class.WTF::HashMap.2891", [5 x i32], [5 x i32], %"class.WTF::HashMap.2896", %"class.WTF::HashMap.2896" }
%"class.WTF::HashMap.2886" = type { %"class.WTF::HashTable.2887" }
%"class.WTF::HashTable.2887" = type <{ %"struct.WTF::KeyValuePair.2890"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2890" = type opaque
%"class.WTF::HashMap.2891" = type { %"class.WTF::HashTable.2892" }
%"class.WTF::HashTable.2892" = type <{ %"struct.WTF::KeyValuePair.2895"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2895" = type opaque
%"class.WTF::HashMap.2896" = type { %"class.WTF::HashTable.2897" }
%"class.WTF::HashTable.2897" = type <{ %"struct.WTF::KeyValuePair.2900"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2900" = type opaque
%"class.blink::Member.2901" = type { %"class.blink::MemberBase.2902" }
%"class.blink::MemberBase.2902" = type { %"class.blink::TouchEventManager"* }
%"class.blink::TouchEventManager" = type { %"class.blink::Member.1974", %"class.blink::HeapHashMap.2905", %"class.blink::Member.326", i8, %"class.blink::WebTouchEvent", i32, i8, %"class.absl::optional.2912" }
%"class.blink::HeapHashMap.2905" = type { %"class.WTF::HashMap.2908" }
%"class.WTF::HashMap.2908" = type { %"class.WTF::HashTable.2909" }
%"class.WTF::HashTable.2909" = type <{ %"struct.WTF::KeyValuePair.2911"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2911" = type opaque
%"class.blink::WebTouchEvent" = type { %"class.blink::WebInputEvent", i32, [16 x %"class.blink::WebTouchPoint"], i32, i8, i8, i8, i32 }
%"class.blink::WebTouchPoint" = type { %"class.blink::WebPointerProperties", i32, float, float, float }
%"class.absl::optional.2912" = type { %"class.absl::optional_internal::optional_data.2913" }
%"class.absl::optional_internal::optional_data.2913" = type { %"class.absl::optional_internal::optional_data_base.2914" }
%"class.absl::optional_internal::optional_data_base.2914" = type { %"class.absl::optional_internal::optional_data_dtor_base.2915" }
%"class.absl::optional_internal::optional_data_dtor_base.2915" = type { i8, %union.anon.2916 }
%union.anon.2916 = type { i32 }
%"class.blink::Member.2917" = type { %"class.blink::MemberBase.2918" }
%"class.blink::MemberBase.2918" = type { %"class.blink::GestureManager"* }
%"class.blink::GestureManager" = type { %"class.blink::Member.1974", %"class.blink::Member.2832", %"class.blink::Member.2852", %"class.blink::Member.2864", i8, i8, %"class.gfx::PointF", i32, %"class.blink::Member.2824" }
%"class.blink::HeapTaskRunnerTimer.2826" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2827", { i64, i64 } }
%"class.blink::WeakMember.2827" = type { %"class.blink::MemberBase.2445" }
%"class.absl::optional.2919" = type { %"class.absl::optional_internal::optional_data.2920" }
%"class.absl::optional_internal::optional_data.2920" = type { %"class.absl::optional_internal::optional_data_base.2921" }
%"class.absl::optional_internal::optional_data_base.2921" = type { %"class.absl::optional_internal::optional_data_dtor_base.2922" }
%"class.absl::optional_internal::optional_data_dtor_base.2922" = type { i8, %union.anon.2923 }
%union.anon.2923 = type { %"class.base::TimeTicks" }
%"struct.blink::TouchAdjustmentResult" = type { i32, %"class.blink::FloatPoint" }
%"class.blink::Member.2446" = type { %"class.blink::MemberBase.2447" }
%"class.blink::MemberBase.2447" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2448" = type { %"class.blink::MemberBase.2449" }
%"class.blink::MemberBase.2449" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2452", %"class.blink::HeapListHashSet.2463", %"class.blink::HeapListHashSet.2474", %"class.blink::HeapListHashSet.2485", %"class.blink::HeapListHashSet.2496", %"class.blink::HeapListHashSet.2507", %"class.blink::HeapListHashSet.2518", %"class.blink::HeapListHashSet.2529", %"class.blink::HeapListHashSet.2540", %"class.blink::HeapListHashSet.2551", %"class.blink::HeapListHashSet.2562", %"class.blink::HeapListHashSet.2573", %"class.blink::HeapListHashSet.2584", %"class.blink::HeapListHashSet.2595", %"class.blink::HeapListHashSet.2606", %"class.blink::HeapListHashSet.2617", %"class.blink::HeapListHashSet.2628", %"class.blink::HeapListHashSet.2639", %"class.blink::HeapListHashSet.2650", %"class.blink::HeapListHashSet.2661" }
%"class.blink::HeapListHashSet.2452" = type { %"class.WTF::ListHashSet.base.2462", [7 x i8] }
%"class.WTF::ListHashSet.base.2462" = type <{ %"class.WTF::HashTable.2457", %"class.blink::Member.2459", %"class.blink::Member.2459", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2457" = type <{ %"class.blink::Member.2459"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2459" = type { %"class.blink::MemberBase.2460" }
%"class.blink::MemberBase.2460" = type { %"class.blink::HeapListHashSetNode.2461"* }
%"class.blink::HeapListHashSetNode.2461" = type { %"class.blink::Member.2675", %"class.blink::Member.2459", %"class.blink::Member.2459" }
%"class.blink::HeapListHashSet.2463" = type { %"class.WTF::ListHashSet.base.2473", [7 x i8] }
%"class.WTF::ListHashSet.base.2473" = type <{ %"class.WTF::HashTable.2468", %"class.blink::Member.2470", %"class.blink::Member.2470", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2468" = type <{ %"class.blink::Member.2470"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2470" = type { %"class.blink::MemberBase.2471" }
%"class.blink::MemberBase.2471" = type { %"class.blink::HeapListHashSetNode.2472"* }
%"class.blink::HeapListHashSetNode.2472" = type { %"class.blink::Member.2818", %"class.blink::Member.2470", %"class.blink::Member.2470" }
%"class.blink::Member.2818" = type { %"class.blink::MemberBase.2819" }
%"class.blink::MemberBase.2819" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2474" = type { %"class.WTF::ListHashSet.base.2484", [7 x i8] }
%"class.WTF::ListHashSet.base.2484" = type <{ %"class.WTF::HashTable.2479", %"class.blink::Member.2481", %"class.blink::Member.2481", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2479" = type <{ %"class.blink::Member.2481"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2481" = type { %"class.blink::MemberBase.2482" }
%"class.blink::MemberBase.2482" = type { %"class.blink::HeapListHashSetNode.2483"* }
%"class.blink::HeapListHashSetNode.2483" = type { %"class.blink::Member.2814", %"class.blink::Member.2481", %"class.blink::Member.2481" }
%"class.blink::Member.2814" = type { %"class.blink::MemberBase.2815" }
%"class.blink::MemberBase.2815" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2485" = type { %"class.WTF::ListHashSet.base.2495", [7 x i8] }
%"class.WTF::ListHashSet.base.2495" = type <{ %"class.WTF::HashTable.2490", %"class.blink::Member.2492", %"class.blink::Member.2492", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2490" = type <{ %"class.blink::Member.2492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2492" = type { %"class.blink::MemberBase.2493" }
%"class.blink::MemberBase.2493" = type { %"class.blink::HeapListHashSetNode.2494"* }
%"class.blink::HeapListHashSetNode.2494" = type { %"class.blink::Member.2810", %"class.blink::Member.2492", %"class.blink::Member.2492" }
%"class.blink::Member.2810" = type { %"class.blink::MemberBase.2811" }
%"class.blink::MemberBase.2811" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2496" = type { %"class.WTF::ListHashSet.base.2506", [7 x i8] }
%"class.WTF::ListHashSet.base.2506" = type <{ %"class.WTF::HashTable.2501", %"class.blink::Member.2503", %"class.blink::Member.2503", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2501" = type <{ %"class.blink::Member.2503"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2503" = type { %"class.blink::MemberBase.2504" }
%"class.blink::MemberBase.2504" = type { %"class.blink::HeapListHashSetNode.2505"* }
%"class.blink::HeapListHashSetNode.2505" = type { %"class.blink::Member.2806", %"class.blink::Member.2503", %"class.blink::Member.2503" }
%"class.blink::Member.2806" = type { %"class.blink::MemberBase.2807" }
%"class.blink::MemberBase.2807" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2507" = type { %"class.WTF::ListHashSet.base.2517", [7 x i8] }
%"class.WTF::ListHashSet.base.2517" = type <{ %"class.WTF::HashTable.2512", %"class.blink::Member.2514", %"class.blink::Member.2514", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2512" = type <{ %"class.blink::Member.2514"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2514" = type { %"class.blink::MemberBase.2515" }
%"class.blink::MemberBase.2515" = type { %"class.blink::HeapListHashSetNode.2516"* }
%"class.blink::HeapListHashSetNode.2516" = type { %"class.blink::Member.2802", %"class.blink::Member.2514", %"class.blink::Member.2514" }
%"class.blink::Member.2802" = type { %"class.blink::MemberBase.2803" }
%"class.blink::MemberBase.2803" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2518" = type { %"class.WTF::ListHashSet.base.2528", [7 x i8] }
%"class.WTF::ListHashSet.base.2528" = type <{ %"class.WTF::HashTable.2523", %"class.blink::Member.2525", %"class.blink::Member.2525", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2523" = type <{ %"class.blink::Member.2525"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2525" = type { %"class.blink::MemberBase.2526" }
%"class.blink::MemberBase.2526" = type { %"class.blink::HeapListHashSetNode.2527"* }
%"class.blink::HeapListHashSetNode.2527" = type { %"class.blink::Member.2798", %"class.blink::Member.2525", %"class.blink::Member.2525" }
%"class.blink::Member.2798" = type { %"class.blink::MemberBase.2799" }
%"class.blink::MemberBase.2799" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2529" = type { %"class.WTF::ListHashSet.base.2539", [7 x i8] }
%"class.WTF::ListHashSet.base.2539" = type <{ %"class.WTF::HashTable.2534", %"class.blink::Member.2536", %"class.blink::Member.2536", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2534" = type <{ %"class.blink::Member.2536"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2536" = type { %"class.blink::MemberBase.2537" }
%"class.blink::MemberBase.2537" = type { %"class.blink::HeapListHashSetNode.2538"* }
%"class.blink::HeapListHashSetNode.2538" = type { %"class.blink::Member.2794", %"class.blink::Member.2536", %"class.blink::Member.2536" }
%"class.blink::Member.2794" = type { %"class.blink::MemberBase.2795" }
%"class.blink::MemberBase.2795" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2540" = type { %"class.WTF::ListHashSet.base.2550", [7 x i8] }
%"class.WTF::ListHashSet.base.2550" = type <{ %"class.WTF::HashTable.2545", %"class.blink::Member.2547", %"class.blink::Member.2547", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2545" = type <{ %"class.blink::Member.2547"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2547" = type { %"class.blink::MemberBase.2548" }
%"class.blink::MemberBase.2548" = type { %"class.blink::HeapListHashSetNode.2549"* }
%"class.blink::HeapListHashSetNode.2549" = type { %"class.blink::Member.2790", %"class.blink::Member.2547", %"class.blink::Member.2547" }
%"class.blink::Member.2790" = type { %"class.blink::MemberBase.2791" }
%"class.blink::MemberBase.2791" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2551" = type { %"class.WTF::ListHashSet.base.2561", [7 x i8] }
%"class.WTF::ListHashSet.base.2561" = type <{ %"class.WTF::HashTable.2556", %"class.blink::Member.2558", %"class.blink::Member.2558", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2556" = type <{ %"class.blink::Member.2558"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2558" = type { %"class.blink::MemberBase.2559" }
%"class.blink::MemberBase.2559" = type { %"class.blink::HeapListHashSetNode.2560"* }
%"class.blink::HeapListHashSetNode.2560" = type { %"class.blink::Member.2786", %"class.blink::Member.2558", %"class.blink::Member.2558" }
%"class.blink::Member.2786" = type { %"class.blink::MemberBase.2787" }
%"class.blink::MemberBase.2787" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2562" = type { %"class.WTF::ListHashSet.base.2572", [7 x i8] }
%"class.WTF::ListHashSet.base.2572" = type <{ %"class.WTF::HashTable.2567", %"class.blink::Member.2569", %"class.blink::Member.2569", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2567" = type <{ %"class.blink::Member.2569"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2569" = type { %"class.blink::MemberBase.2570" }
%"class.blink::MemberBase.2570" = type { %"class.blink::HeapListHashSetNode.2571"* }
%"class.blink::HeapListHashSetNode.2571" = type { %"class.blink::Member.2679", %"class.blink::Member.2569", %"class.blink::Member.2569" }
%"class.blink::HeapListHashSet.2573" = type { %"class.WTF::ListHashSet.base.2583", [7 x i8] }
%"class.WTF::ListHashSet.base.2583" = type <{ %"class.WTF::HashTable.2578", %"class.blink::Member.2580", %"class.blink::Member.2580", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2578" = type <{ %"class.blink::Member.2580"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2580" = type { %"class.blink::MemberBase.2581" }
%"class.blink::MemberBase.2581" = type { %"class.blink::HeapListHashSetNode.2582"* }
%"class.blink::HeapListHashSetNode.2582" = type { %"class.blink::Member.2780", %"class.blink::Member.2580", %"class.blink::Member.2580" }
%"class.blink::Member.2780" = type { %"class.blink::MemberBase.2781" }
%"class.blink::MemberBase.2781" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2584" = type { %"class.WTF::ListHashSet.base.2594", [7 x i8] }
%"class.WTF::ListHashSet.base.2594" = type <{ %"class.WTF::HashTable.2589", %"class.blink::Member.2591", %"class.blink::Member.2591", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2589" = type <{ %"class.blink::Member.2591"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2591" = type { %"class.blink::MemberBase.2592" }
%"class.blink::MemberBase.2592" = type { %"class.blink::HeapListHashSetNode.2593"* }
%"class.blink::HeapListHashSetNode.2593" = type { %"class.blink::Member.2776", %"class.blink::Member.2591", %"class.blink::Member.2591" }
%"class.blink::Member.2776" = type { %"class.blink::MemberBase.2777" }
%"class.blink::MemberBase.2777" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2595" = type { %"class.WTF::ListHashSet.base.2605", [7 x i8] }
%"class.WTF::ListHashSet.base.2605" = type <{ %"class.WTF::HashTable.2600", %"class.blink::Member.2602", %"class.blink::Member.2602", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2600" = type <{ %"class.blink::Member.2602"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2602" = type { %"class.blink::MemberBase.2603" }
%"class.blink::MemberBase.2603" = type { %"class.blink::HeapListHashSetNode.2604"* }
%"class.blink::HeapListHashSetNode.2604" = type { %"class.blink::Member.2772", %"class.blink::Member.2602", %"class.blink::Member.2602" }
%"class.blink::Member.2772" = type { %"class.blink::MemberBase.2773" }
%"class.blink::MemberBase.2773" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2606" = type { %"class.WTF::ListHashSet.base.2616", [7 x i8] }
%"class.WTF::ListHashSet.base.2616" = type <{ %"class.WTF::HashTable.2611", %"class.blink::Member.2613", %"class.blink::Member.2613", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2611" = type <{ %"class.blink::Member.2613"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2613" = type { %"class.blink::MemberBase.2614" }
%"class.blink::MemberBase.2614" = type { %"class.blink::HeapListHashSetNode.2615"* }
%"class.blink::HeapListHashSetNode.2615" = type { %"class.blink::Member.2768", %"class.blink::Member.2613", %"class.blink::Member.2613" }
%"class.blink::Member.2768" = type { %"class.blink::MemberBase.2769" }
%"class.blink::MemberBase.2769" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2617" = type { %"class.WTF::ListHashSet.base.2627", [7 x i8] }
%"class.WTF::ListHashSet.base.2627" = type <{ %"class.WTF::HashTable.2622", %"class.blink::Member.2624", %"class.blink::Member.2624", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2622" = type <{ %"class.blink::Member.2624"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2624" = type { %"class.blink::MemberBase.2625" }
%"class.blink::MemberBase.2625" = type { %"class.blink::HeapListHashSetNode.2626"* }
%"class.blink::HeapListHashSetNode.2626" = type { %"class.blink::Member.2764", %"class.blink::Member.2624", %"class.blink::Member.2624" }
%"class.blink::Member.2764" = type { %"class.blink::MemberBase.2765" }
%"class.blink::MemberBase.2765" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2628" = type { %"class.WTF::ListHashSet.base.2638", [7 x i8] }
%"class.WTF::ListHashSet.base.2638" = type <{ %"class.WTF::HashTable.2633", %"class.blink::Member.2635", %"class.blink::Member.2635", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2633" = type <{ %"class.blink::Member.2635"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2635" = type { %"class.blink::MemberBase.2636" }
%"class.blink::MemberBase.2636" = type { %"class.blink::HeapListHashSetNode.2637"* }
%"class.blink::HeapListHashSetNode.2637" = type { %"class.blink::Member.2760", %"class.blink::Member.2635", %"class.blink::Member.2635" }
%"class.blink::Member.2760" = type { %"class.blink::MemberBase.2761" }
%"class.blink::MemberBase.2761" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2639" = type { %"class.WTF::ListHashSet.base.2649", [7 x i8] }
%"class.WTF::ListHashSet.base.2649" = type <{ %"class.WTF::HashTable.2644", %"class.blink::Member.2646", %"class.blink::Member.2646", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2644" = type <{ %"class.blink::Member.2646"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2646" = type { %"class.blink::MemberBase.2647" }
%"class.blink::MemberBase.2647" = type { %"class.blink::HeapListHashSetNode.2648"* }
%"class.blink::HeapListHashSetNode.2648" = type { %"class.blink::Member.2756", %"class.blink::Member.2646", %"class.blink::Member.2646" }
%"class.blink::Member.2756" = type { %"class.blink::MemberBase.2757" }
%"class.blink::MemberBase.2757" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2650" = type { %"class.WTF::ListHashSet.base.2660", [7 x i8] }
%"class.WTF::ListHashSet.base.2660" = type <{ %"class.WTF::HashTable.2655", %"class.blink::Member.2657", %"class.blink::Member.2657", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2655" = type <{ %"class.blink::Member.2657"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2657" = type { %"class.blink::MemberBase.2658" }
%"class.blink::MemberBase.2658" = type { %"class.blink::HeapListHashSetNode.2659"* }
%"class.blink::HeapListHashSetNode.2659" = type { %"class.blink::Member.2681", %"class.blink::Member.2657", %"class.blink::Member.2657" }
%"class.blink::HeapListHashSet.2661" = type { %"class.WTF::ListHashSet.base.2671", [7 x i8] }
%"class.WTF::ListHashSet.base.2671" = type <{ %"class.WTF::HashTable.2666", %"class.blink::Member.2668", %"class.blink::Member.2668", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2666" = type <{ %"class.blink::Member.2668"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2668" = type { %"class.blink::MemberBase.2669" }
%"class.blink::MemberBase.2669" = type { %"class.blink::HeapListHashSetNode.2670"* }
%"class.blink::HeapListHashSetNode.2670" = type { %"class.blink::Member.2673", %"class.blink::Member.2668", %"class.blink::Member.2668" }
%class.scoped_refptr.2672 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2673" = type { %"class.blink::MemberBase.2674" }
%"class.blink::MemberBase.2674" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2675" = type { %"class.blink::MemberBase.2676" }
%"class.blink::MemberBase.2676" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2677" = type { %"class.blink::MemberBase.2678" }
%"class.blink::MemberBase.2678" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2679" = type { %"class.blink::MemberBase.2680" }
%"class.blink::MemberBase.2680" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2681" = type { %"class.blink::MemberBase.2682" }
%"class.blink::MemberBase.2682" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2685" = type { %"class.blink::MemberBase.2686" }
%"class.blink::MemberBase.2686" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2687" = type { %"class.blink::MemberBase.2688" }
%"class.blink::MemberBase.2688" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2689" }
%"class.blink::Member.2689" = type { %"class.blink::MemberBase.2690" }
%"class.blink::MemberBase.2690" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3897" }
%"class.mojo::Remote.3897" = type { %"class.mojo::internal::InterfacePtrState.3898" }
%"class.mojo::internal::InterfacePtrState.3898" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3899" }
%"class.std::__1::unique_ptr.3899" = type { %"class.std::__1::__compressed_pair.3900" }
%"class.std::__1::__compressed_pair.3900" = type { %"struct.std::__1::__compressed_pair_elem.3901" }
%"struct.std::__1::__compressed_pair_elem.3901" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%"class.std::__1::unique_ptr.2691" = type { %"class.std::__1::__compressed_pair.2692" }
%"class.std::__1::__compressed_pair.2692" = type { %"struct.std::__1::__compressed_pair_elem.2693" }
%"struct.std::__1::__compressed_pair_elem.2693" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2697" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2698" = type { %"class.std::__1::__compressed_pair.2699" }
%"class.std::__1::__compressed_pair.2699" = type { %"struct.std::__1::__compressed_pair_elem.2700" }
%"struct.std::__1::__compressed_pair_elem.2700" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.2370" = type { %"class.absl::optional_internal::optional_data.2371" }
%"class.absl::optional_internal::optional_data.2371" = type { %"class.absl::optional_internal::optional_data_base.2372" }
%"class.absl::optional_internal::optional_data_base.2372" = type { %"class.absl::optional_internal::optional_data_dtor_base.2373" }
%"class.absl::optional_internal::optional_data_dtor_base.2373" = type { i8, %union.anon.2374 }
%union.anon.2374 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2704" = type { %"class.std::__1::__compressed_pair.2705" }
%"class.std::__1::__compressed_pair.2705" = type { %"struct.std::__1::__compressed_pair_elem.2706" }
%"struct.std::__1::__compressed_pair_elem.2706" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2710" }
%"class.blink::Member.2710" = type { %"class.blink::MemberBase.2711" }
%"class.blink::MemberBase.2711" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3907" }
%"class.mojo::AssociatedRemote.3907" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3908" }
%"class.mojo::internal::AssociatedInterfacePtrState.3908" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3909" }
%"class.std::__1::unique_ptr.3909" = type { %"class.std::__1::__compressed_pair.3910" }
%"class.std::__1::__compressed_pair.3910" = type { %"struct.std::__1::__compressed_pair_elem.3911" }
%"struct.std::__1::__compressed_pair_elem.3911" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2712" = type { %"class.blink::Member.2713" }
%"class.blink::Member.2713" = type { %"class.blink::MemberBase.2714" }
%"class.blink::MemberBase.2714" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3917" }
%"class.mojo::AssociatedRemote.3917" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3918" }
%"class.mojo::internal::AssociatedInterfacePtrState.3918" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3919" }
%"class.std::__1::unique_ptr.3919" = type { %"class.std::__1::__compressed_pair.3920" }
%"class.std::__1::__compressed_pair.3920" = type { %"struct.std::__1::__compressed_pair_elem.3921" }
%"struct.std::__1::__compressed_pair_elem.3921" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2715" }
%"class.blink::Member.2715" = type { %"class.blink::MemberBase.2716" }
%"class.blink::MemberBase.2716" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3927", %"class.blink::Member.1974", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3927" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3928" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1772" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3928" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2717" = type { %"class.blink::Member.2718" }
%"class.blink::Member.2718" = type { %"class.blink::MemberBase.2719" }
%"class.blink::MemberBase.2719" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3931", %"class.blink::Member.1974", %"class.mojo::AssociatedReceiver.3932" }
%"class.blink::ThreadState::PrefinalizerRegistration.3931" = type { i8 }
%"class.mojo::AssociatedReceiver.3932" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3933" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3933" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2720" }
%"class.blink::Member.2720" = type { %"class.blink::MemberBase.2721" }
%"class.blink::MemberBase.2721" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3936", %"class.blink::Member.1974", %"class.mojo::Receiver.3937" }
%"class.blink::ThreadState::PrefinalizerRegistration.3936" = type { i8 }
%"class.mojo::Receiver.3937" = type { %"class.mojo::internal::BindingState.3938" }
%"class.mojo::internal::BindingState.3938" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2251, %"class.std::__1::unique_ptr.1772", %"class.base::WeakPtrFactory.3706" }
%"class.base::WeakPtrFactory.3706" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2722" = type { %"class.blink::Member.2723" }
%"class.blink::Member.2723" = type { %"class.blink::MemberBase.2724" }
%"class.blink::MemberBase.2724" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3941", %"class.blink::Member.1974", %"class.mojo::AssociatedReceiver.3942" }
%"class.blink::ThreadState::PrefinalizerRegistration.3941" = type { i8 }
%"class.mojo::AssociatedReceiver.3942" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3943" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3943" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2725" = type { %"class.blink::MemberBase.2726" }
%"class.blink::MemberBase.2726" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2727" = type { %"class.blink::MemberBase.2728" }
%"class.blink::MemberBase.2728" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2729" = type { %"class.blink::MemberBase.2730" }
%"class.blink::MemberBase.2730" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2731" = type { %"class.blink::MemberBase.2732" }
%"class.blink::MemberBase.2732" = type { %"class.blink::HeapHashMap.2733"* }
%"class.blink::HeapHashMap.2733" = type opaque
%"class.mojo::StructPtr.2734" = type { %"class.std::__1::unique_ptr.2735" }
%"class.std::__1::unique_ptr.2735" = type { %"class.std::__1::__compressed_pair.2736" }
%"class.std::__1::__compressed_pair.2736" = type { %"struct.std::__1::__compressed_pair_elem.2737" }
%"struct.std::__1::__compressed_pair_elem.2737" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2738", %"class.mojo::InlinedStructPtr.2739" }
%"class.mojo::InlinedStructPtr.2738" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2739" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2743" = type { %"class.blink::MemberBase.2744" }
%"class.blink::MemberBase.2744" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.absl::optional.2745" = type { %"class.absl::optional_internal::optional_data.2746" }
%"class.absl::optional_internal::optional_data.2746" = type { %"class.absl::optional_internal::optional_data_base.2747" }
%"class.absl::optional_internal::optional_data_base.2747" = type { %"class.absl::optional_internal::optional_data_dtor_base.2748" }
%"class.absl::optional_internal::optional_data_dtor_base.2748" = type { i8, %union.anon.2749 }
%union.anon.2749 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1976" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1977", { i64, i64 } }
%"class.blink::WeakMember.1977" = type { %"class.blink::MemberBase.1978" }
%"class.absl::optional.1979" = type { %"class.absl::optional_internal::optional_data.1980" }
%"class.absl::optional_internal::optional_data.1980" = type { %"class.absl::optional_internal::optional_data_base.1981" }
%"class.absl::optional_internal::optional_data_base.1981" = type { %"class.absl::optional_internal::optional_data_dtor_base.1982" }
%"class.absl::optional_internal::optional_data_dtor_base.1982" = type { i8, %union.anon.1983 }
%union.anon.1983 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1984" = type { %"class.blink::MemberBase.1985" }
%"class.blink::MemberBase.1985" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1986" = type { %"class.blink::MemberBase.1987" }
%"class.blink::MemberBase.1987" = type { %"class.blink::HeapHashSet.1988"* }
%"class.blink::HeapHashSet.1988" = type opaque
%"class.std::__1::unique_ptr.1989" = type { %"class.std::__1::__compressed_pair.1990" }
%"class.std::__1::__compressed_pair.1990" = type { %"struct.std::__1::__compressed_pair_elem.1991" }
%"struct.std::__1::__compressed_pair_elem.1991" = type { %"class.WTF::HashSet.1992"* }
%"class.WTF::HashSet.1992" = type { %"class.WTF::HashTable.1993" }
%"class.WTF::HashTable.1993" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1999" = type { %"class.blink::MemberBase.2000" }
%"class.blink::MemberBase.2000" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2001" = type { %"class.WTF::HashSet.2004" }
%"class.WTF::HashSet.2004" = type { %"class.WTF::HashTable.2005" }
%"class.WTF::HashTable.2005" = type <{ %"class.blink::Member.2007"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2007" = type opaque
%"class.blink::HeapHashSet.2008" = type { %"class.WTF::HashSet.2011" }
%"class.WTF::HashSet.2011" = type { %"class.WTF::HashTable.2012" }
%"class.WTF::HashTable.2012" = type <{ %"class.blink::Member.782"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2014" = type { %"class.std::__1::__compressed_pair.2015" }
%"class.std::__1::__compressed_pair.2015" = type { %"struct.std::__1::__compressed_pair_elem.2016" }
%"struct.std::__1::__compressed_pair_elem.2016" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2020" = type { %"class.blink::MemberBase.2021" }
%"class.blink::MemberBase.2021" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2024", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2024" = type { %"class.WTF::HashTable.2025" }
%"class.WTF::HashTable.2025" = type <{ %"struct.WTF::KeyValuePair.2027"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2027" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2028", i32, i32 }
%"class.WTF::Vector.2028" = type { %"class.WTF::VectorBuffer.2029" }
%"class.WTF::VectorBuffer.2029" = type { %"class.WTF::VectorBufferBase.2030" }
%"class.WTF::VectorBufferBase.2030" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2032" = type { %"class.WTF::LinkedHashSet.2035" }
%"class.WTF::LinkedHashSet.2035" = type { %"class.WTF::HashMap.2036", %"class.WTF::VectorBackedLinkedList.2040" }
%"class.WTF::HashMap.2036" = type { %"class.WTF::HashTable.2037" }
%"class.WTF::HashTable.2037" = type <{ %"struct.WTF::KeyValuePair.2039"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2039" = type opaque
%"class.WTF::VectorBackedLinkedList.2040" = type { %"class.WTF::Vector.2041", i32, i32 }
%"class.WTF::Vector.2041" = type { %"class.WTF::VectorBuffer.2042" }
%"class.WTF::VectorBuffer.2042" = type { %"class.WTF::VectorBufferBase.2043" }
%"class.WTF::VectorBufferBase.2043" = type { %"class.WTF::VectorBackedLinkedListNode.2044"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2044" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2046" = type { %"class.std::__1::__compressed_pair.2047" }
%"class.std::__1::__compressed_pair.2047" = type { %"struct.std::__1::__compressed_pair_elem.2048" }
%"struct.std::__1::__compressed_pair_elem.2048" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2052" = type { %"class.std::__1::__compressed_pair.2053" }
%"class.std::__1::__compressed_pair.2053" = type { %"struct.std::__1::__compressed_pair_elem.2054" }
%"struct.std::__1::__compressed_pair_elem.2054" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2055, %class.scoped_refptr.2055, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2105", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2110", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2055 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2056", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2063" }
%"class.WTF::RefCounted.2056" = type { %"class.base::RefCounted.2057" }
%"class.base::RefCounted.2057" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2058", i32, [4 x i8] }>
%"class.WTF::Vector.2058" = type { %"class.WTF::VectorBuffer.2059" }
%"class.WTF::VectorBuffer.2059" = type { %"class.WTF::VectorBufferBase.2060" }
%"class.WTF::VectorBufferBase.2060" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2063" = type { %"class.WTF::VectorBuffer.2064" }
%"class.WTF::VectorBuffer.2064" = type { %"class.WTF::VectorBufferBase.2065" }
%"class.WTF::VectorBufferBase.2065" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2066", %"class.std::__1::unique_ptr.2077", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2066" = type { %"class.std::__1::__compressed_pair.2067" }
%"class.std::__1::__compressed_pair.2067" = type { %"struct.std::__1::__compressed_pair_elem.2068" }
%"struct.std::__1::__compressed_pair_elem.2068" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2069", %"class.WTF::Vector.804", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2069" = type { %"class.WTF::VectorBuffer.2070" }
%"class.WTF::VectorBuffer.2070" = type { %"class.WTF::VectorBufferBase.2071" }
%"class.WTF::VectorBufferBase.2071" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.std::__1::unique_ptr.2077" = type { %"class.std::__1::__compressed_pair.2078" }
%"class.std::__1::__compressed_pair.2078" = type { %"struct.std::__1::__compressed_pair_elem.2079" }
%"struct.std::__1::__compressed_pair_elem.2079" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2080", %"class.absl::optional.2080" }
%"class.absl::optional.2080" = type { %"class.absl::optional_internal::optional_data.2081" }
%"class.absl::optional_internal::optional_data.2081" = type { %"class.absl::optional_internal::optional_data_base.2082" }
%"class.absl::optional_internal::optional_data_base.2082" = type { %"class.absl::optional_internal::optional_data_dtor_base.2083" }
%"class.absl::optional_internal::optional_data_dtor_base.2083" = type { i8, [3 x i8], %union.anon.2084 }
%union.anon.2084 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2063"*, %"class.absl::optional.2090", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2090" = type { %"class.absl::optional_internal::optional_data.2091" }
%"class.absl::optional_internal::optional_data.2091" = type { %"class.absl::optional_internal::optional_data_base.2092" }
%"class.absl::optional_internal::optional_data_base.2092" = type { %"class.absl::optional_internal::optional_data_dtor_base.2093" }
%"class.absl::optional_internal::optional_data_dtor_base.2093" = type { i8, %union.anon.2094 }
%union.anon.2094 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2095", %"class.WTF::Vector.2100" }
%"class.WTF::Vector.2095" = type { %"class.WTF::VectorBuffer.2096" }
%"class.WTF::VectorBuffer.2096" = type { %"class.WTF::VectorBufferBase.2097", [128 x i8] }
%"class.WTF::Vector.2100" = type { %"class.WTF::VectorBuffer.2101" }
%"class.WTF::VectorBuffer.2101" = type { %"class.WTF::VectorBufferBase.2102", [128 x i8] }
%"class.WTF::VectorBufferBase.2102" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2105" = type { %"class.WTF::VectorBuffer.2106" }
%"class.WTF::VectorBuffer.2106" = type { %"class.WTF::VectorBufferBase.2107" }
%"class.WTF::VectorBufferBase.2107" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2110" = type { %"class.WTF::HashTable.2111" }
%"class.WTF::HashTable.2111" = type <{ %"struct.WTF::KeyValuePair.2114"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2114" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2115", %"class.WTF::Vector.2120" }
%"class.WTF::HashMap.2115" = type { %"class.WTF::HashTable.2116" }
%"class.WTF::HashTable.2116" = type <{ %"struct.WTF::KeyValuePair.2119"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2119" = type opaque
%"class.WTF::Vector.2120" = type { %"class.WTF::VectorBuffer.2121" }
%"class.WTF::VectorBuffer.2121" = type { %"class.WTF::VectorBufferBase.2122" }
%"class.WTF::VectorBufferBase.2122" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2128" = type { %"class.std::__1::__compressed_pair.2129" }
%"class.std::__1::__compressed_pair.2129" = type { %"struct.std::__1::__compressed_pair_elem.2130" }
%"struct.std::__1::__compressed_pair_elem.2130" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2134" = type { %"class.WTF::VectorBuffer.2135" }
%"class.WTF::VectorBuffer.2135" = type { %"class.WTF::VectorBufferBase.2136" }
%"class.WTF::VectorBufferBase.2136" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2139 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2140" = type { %"class.blink::MemberBase.2141" }
%"class.blink::MemberBase.2141" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2142" = type { %"class.blink::MemberBase.2143" }
%"class.blink::MemberBase.2143" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2144" = type { %"class.blink::MemberBase.2145" }
%"class.blink::MemberBase.2145" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2146" = type { %"class.WTF::HashSet.2149" }
%"class.WTF::HashSet.2149" = type { %"class.WTF::HashTable.2150" }
%"class.WTF::HashTable.2150" = type <{ %"class.blink::WeakMember.2152"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2152" = type opaque
%"class.blink::HeapHashSet.2153" = type { %"class.WTF::HashSet.2156" }
%"class.WTF::HashSet.2156" = type { %"class.WTF::HashTable.2157" }
%"class.WTF::HashTable.2157" = type <{ %"class.blink::WeakMember.2159"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2159" = type opaque
%"class.std::__1::unique_ptr.2160" = type { %"class.std::__1::__compressed_pair.2161" }
%"class.std::__1::__compressed_pair.2161" = type { %"struct.std::__1::__compressed_pair_elem.2162" }
%"struct.std::__1::__compressed_pair_elem.2162" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2163" }
%"class.base::time_internal::TimeBase.2163" = type { i64 }
%"class.std::__1::unique_ptr.2167" = type { %"class.std::__1::__compressed_pair.2168" }
%"class.std::__1::__compressed_pair.2168" = type { %"struct.std::__1::__compressed_pair_elem.2169" }
%"struct.std::__1::__compressed_pair_elem.2169" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2170", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2170" = type { %"class.absl::optional_internal::optional_data.2171" }
%"class.absl::optional_internal::optional_data.2171" = type { %"class.absl::optional_internal::optional_data_base.2172" }
%"class.absl::optional_internal::optional_data_base.2172" = type { %"class.absl::optional_internal::optional_data_dtor_base.2173" }
%"class.absl::optional_internal::optional_data_dtor_base.2173" = type { i8, %union.anon.2174 }
%union.anon.2174 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.2178" = type { %"class.std::__1::__compressed_pair.2179" }
%"class.std::__1::__compressed_pair.2179" = type { %"struct.std::__1::__compressed_pair_elem.2180" }
%"struct.std::__1::__compressed_pair_elem.2180" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.2184" = type { %"class.std::__1::__compressed_pair.2185" }
%"class.std::__1::__compressed_pair.2185" = type { %"struct.std::__1::__compressed_pair_elem.2186" }
%"struct.std::__1::__compressed_pair_elem.2186" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.2190" = type { %"class.std::__1::__compressed_pair.2191" }
%"class.std::__1::__compressed_pair.2191" = type { %"struct.std::__1::__compressed_pair_elem.2192" }
%"struct.std::__1::__compressed_pair_elem.2192" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1961 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.2196" = type { %"class.blink::PersistentBase.2197" }
%"class.blink::PersistentBase.2197" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.2200", i64 }
%"class.blink::HeapVector.2200" = type { %"class.WTF::Vector.2203" }
%"class.WTF::Vector.2203" = type { %"class.WTF::VectorBuffer.2204" }
%"class.WTF::VectorBuffer.2204" = type { %"class.WTF::VectorBufferBase.2205", [368 x i8] }
%"class.WTF::VectorBufferBase.2205" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.782", i8, %"class.blink::Member.2206", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.2206" = type { %"class.blink::MemberBase.2207" }
%"class.blink::MemberBase.2207" = type { %"class.blink::HeapLinkedHashSet.2208"* }
%"class.blink::HeapLinkedHashSet.2208" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1502" = type { %"class.WTF::Vector.1505" }
%"class.WTF::Vector.1505" = type { %"class.WTF::VectorBuffer.1506" }
%"class.WTF::VectorBuffer.1506" = type { %"class.WTF::VectorBufferBase.1507" }
%"class.WTF::VectorBufferBase.1507" = type { %"class.blink::Member.1508"*, i32, i32 }
%"class.blink::Member.1508" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1510" = type { %"class.blink::MemberBase.1511" }
%"class.blink::MemberBase.1511" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1512" = type { %"class.blink::MemberBase.1513" }
%"class.blink::MemberBase.1513" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1514" = type { %"class.blink::MemberBase.1515" }
%"class.blink::MemberBase.1515" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1516" = type { %"class.blink::MemberBase.1517" }
%"class.blink::MemberBase.1517" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1518" = type { %"class.blink::MemberBase.1519" }
%"class.blink::MemberBase.1519" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1520" = type { %"class.WTF::HashTable.1521" }
%"class.WTF::HashTable.1521" = type <{ %"struct.WTF::KeyValuePair.1524"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1524" = type opaque
%"class.blink::Member.1525" = type { %"class.blink::MemberBase.1526" }
%"class.blink::MemberBase.1526" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1527" = type { %"class.blink::MemberBase.1528" }
%"class.blink::MemberBase.1528" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1529" = type { %"class.blink::MemberBase.1530" }
%"class.blink::MemberBase.1530" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1531" = type { %"class.blink::MemberBase.1532" }
%"class.blink::MemberBase.1532" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1054" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1055", { i64, i64 } }
%"class.blink::HeapHashSet.1533" = type { %"class.WTF::HashSet.1536" }
%"class.WTF::HashSet.1536" = type { %"class.WTF::HashTable.1537" }
%"class.WTF::HashTable.1537" = type <{ %"class.blink::Member.1539"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1539" = type opaque
%"class.blink::Member.1540" = type { %"class.blink::MemberBase.1541" }
%"class.blink::MemberBase.1541" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1542" = type { %"class.blink::MemberBase.1543" }
%"class.blink::MemberBase.1543" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1544" = type { %"class.blink::MemberBase.1545" }
%"class.blink::MemberBase.1545" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1546" = type { %"class.blink::MemberBase.1547" }
%"class.blink::MemberBase.1547" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1548" = type { %"class.blink::MemberBase.1549" }
%"class.blink::MemberBase.1549" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1550" = type { %"class.std::__1::__compressed_pair.1551" }
%"class.std::__1::__compressed_pair.1551" = type { %"struct.std::__1::__compressed_pair_elem.1552" }
%"struct.std::__1::__compressed_pair_elem.1552" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1556" = type { %"class.std::__1::__compressed_pair.1557" }
%"class.std::__1::__compressed_pair.1557" = type { %"struct.std::__1::__compressed_pair_elem.1558" }
%"struct.std::__1::__compressed_pair_elem.1558" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1559", %"class.WTF::HashMap.1559", %"class.WTF::HashMap.1559", %"class.WTF::HashMap.1559", %"class.WTF::HashMap.1559", %"class.WTF::HashMap.1559", %"class.WTF::HashMap.1559", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ %"struct.WTF::KeyValuePair.1563"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1563" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1567" = type { %"class.blink::MemberBase.1568" }
%"class.blink::MemberBase.1568" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1569" = type { %"class.blink::MemberBase.1570" }
%"class.blink::MemberBase.1570" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1571" = type { %"class.blink::MemberBase.1572" }
%"class.blink::MemberBase.1572" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type <{ %"class.blink::Member.1577", %"class.blink::Member.1577", i32, i8, [3 x i8] }>
%"class.blink::Member.1577" = type { %"class.blink::MemberBase.1578" }
%"class.blink::MemberBase.1578" = type { %"class.blink::IntersectionObserver"* }
%"class.blink::IntersectionObserver" = type opaque
%"class.WTF::Vector.1579" = type { %"class.WTF::VectorBuffer.1580" }
%"class.WTF::VectorBuffer.1580" = type { %"class.WTF::VectorBufferBase.1581" }
%"class.WTF::VectorBufferBase.1581" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1584" = type { %"class.WTF::HashMap.1587" }
%"class.WTF::HashMap.1587" = type { %"class.WTF::HashTable.1588" }
%"class.WTF::HashTable.1588" = type <{ %"struct.WTF::KeyValuePair.1590"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1590" = type opaque
%"class.blink::Member.1591" = type { %"class.blink::MemberBase.1592" }
%"class.blink::MemberBase.1592" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1593" = type { %"class.std::__1::__compressed_pair.1594" }
%"class.std::__1::__compressed_pair.1594" = type { %"struct.std::__1::__compressed_pair_elem.1595" }
%"struct.std::__1::__compressed_pair_elem.1595" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1599" = type { %"class.blink::MemberBase.1600" }
%"class.blink::MemberBase.1600" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1601" = type { %"class.blink::MemberBase.1602" }
%"class.blink::MemberBase.1602" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1603" = type { %"class.WTF::HashMap.1606" }
%"class.WTF::HashMap.1606" = type { %"class.WTF::HashTable.1607" }
%"class.WTF::HashTable.1607" = type <{ %"struct.WTF::KeyValuePair.1609"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1609" = type opaque
%"class.blink::HeapObserverSet.1610" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1611" }
%"class.blink::HeapHashSet.1611" = type { %"class.WTF::HashSet.1614" }
%"class.WTF::HashSet.1614" = type { %"class.WTF::HashTable.1615" }
%"class.WTF::HashTable.1615" = type <{ %"class.blink::WeakMember.1617"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1617" = type opaque
%"class.blink::Member.1618" = type { %"class.blink::MemberBase.1619" }
%"class.blink::MemberBase.1619" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1620" = type { %"class.blink::MemberBase.1621" }
%"class.blink::MemberBase.1621" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1627", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1634", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1627" = type { %"class.WTF::HashSet.1630" }
%"class.WTF::HashSet.1630" = type { %"class.WTF::HashTable.1631" }
%"class.WTF::HashTable.1631" = type <{ %"class.blink::Member.1633"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1633" = type opaque
%"class.blink::HeapTaskRunnerTimer.1634" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1635", { i64, i64 } }
%"class.blink::WeakMember.1635" = type { %"class.blink::MemberBase.1621" }
%"class.blink::WeakMember.1622" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1623" = type { %"class.blink::MemberBase.1624" }
%"class.blink::MemberBase.1624" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.ui::AXMode" = type { i32 }
%"class.blink::HeapHashMap.3093" = type { %"class.WTF::HashMap.3096" }
%"class.WTF::HashMap.3096" = type { %"class.WTF::HashTable.3097" }
%"class.WTF::HashTable.3097" = type <{ %"struct.WTF::KeyValuePair.3099"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3099" = type { i32, %"class.blink::Member.3082" }
%"class.blink::HeapHashMap.3100" = type { %"class.WTF::HashMap.3103" }
%"class.WTF::HashMap.3103" = type { %"class.WTF::HashTable.3104" }
%"class.WTF::HashTable.3104" = type <{ %"struct.WTF::KeyValuePair.3106"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3106" = type opaque
%"class.WTF::HashMap.3107" = type { %"class.WTF::HashTable.3108" }
%"class.WTF::HashTable.3108" = type <{ %"struct.WTF::KeyValuePair.3111"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3111" = type opaque
%"class.blink::HeapHashMap.3112" = type { %"class.WTF::HashMap.3115" }
%"class.WTF::HashMap.3115" = type { %"class.WTF::HashTable.3116" }
%"class.WTF::HashTable.3116" = type <{ %"struct.WTF::KeyValuePair.3118"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3118" = type opaque
%"class.WTF::HashMap.3119" = type { %"class.WTF::HashTable.3120" }
%"class.WTF::HashTable.3120" = type <{ %"struct.WTF::KeyValuePair.3123"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3123" = type opaque
%"class.blink::WeakMember.3128" = type { %"class.blink::MemberBase.3083" }
%"class.std::__1::unique_ptr.3129" = type { %"class.std::__1::__compressed_pair.3130" }
%"class.std::__1::__compressed_pair.3130" = type { %"struct.std::__1::__compressed_pair_elem.3131" }
%"struct.std::__1::__compressed_pair_elem.3131" = type { %"class.blink::AXRelationCache"* }
%"class.blink::AXRelationCache" = type opaque
%"class.blink::HeapVector.3135" = type { %"class.WTF::Vector.3138" }
%"class.WTF::Vector.3138" = type { %"class.WTF::VectorBuffer.3139" }
%"class.WTF::VectorBuffer.3139" = type { %"class.WTF::VectorBufferBase.3140" }
%"class.WTF::VectorBufferBase.3140" = type { %"class.blink::Member.3141"*, i32, i32 }
%"class.blink::Member.3141" = type opaque
%"class.blink::HeapMojoRemote.3143" = type { %"class.blink::Member.3144" }
%"class.blink::Member.3144" = type { %"class.blink::MemberBase.3145" }
%"class.blink::MemberBase.3145" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::PermissionService, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::PermissionService, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoReceiver.3146" = type { %"class.blink::Member.3147" }
%"class.blink::Member.3147" = type { %"class.blink::MemberBase.3148" }
%"class.blink::MemberBase.3148" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::PermissionObserver, blink::AXObjectCacheImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::PermissionObserver, blink::AXObjectCacheImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapHashSet.3149" = type { %"class.WTF::HashSet.3152" }
%"class.WTF::HashSet.3152" = type { %"class.WTF::HashTable.3153" }
%"class.WTF::HashTable.3153" = type <{ %"class.blink::WeakMember.1055"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.3155" = type { %"class.WTF::Vector.3158" }
%"class.WTF::Vector.3158" = type { %"class.WTF::VectorBuffer.3159" }
%"class.WTF::VectorBuffer.3159" = type { %"class.WTF::VectorBufferBase.3160" }
%"class.WTF::VectorBufferBase.3160" = type { %"class.blink::Member.3161"*, i32, i32 }
%"class.blink::Member.3161" = type opaque
%"class.blink::HeapHashSet.3163" = type { %"class.WTF::HashSet.3166" }
%"class.WTF::HashSet.3166" = type { %"class.WTF::HashTable.3167" }
%"class.WTF::HashTable.3167" = type <{ %"class.blink::WeakMember.1622"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.3169" = type { %"class.WTF::HashTable.3170" }
%"class.WTF::HashTable.3170" = type <{ %"struct.WTF::KeyValuePair.3173"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3173" = type opaque
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.3174" }
%"class.WTF::HashMap.3174" = type { %"class.WTF::HashTable.3175" }
%"class.WTF::HashTable.3175" = type <{ %"struct.WTF::KeyValuePair.3178"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3178" = type { %"class.blink::BlinkAXEventIntent", i32, [4 x i8] }
%"class.blink::BlinkAXEventIntent" = type <{ i32 (...)**, %"struct.ui::AXEventIntent", i8, i8, [6 x i8] }>
%"struct.ui::AXEventIntent" = type { i32 (...)**, i32, i32, i32, i32 }
%"class.WTF::HashSet.3124" = type { %"class.WTF::HashTable.3125" }
%"class.WTF::HashTable.3125" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.3453" = type { %"class.WTF::Vector.3456" }
%"class.WTF::Vector.3456" = type { %"class.WTF::VectorBuffer.3457" }
%"class.WTF::VectorBuffer.3457" = type { %"class.WTF::VectorBufferBase.3458" }
%"class.WTF::VectorBufferBase.3458" = type { %"class.blink::IgnoredReason"*, i32, i32 }
%"class.blink::IgnoredReason" = type { i32, %"class.blink::Member.3459" }
%"class.blink::Member.3459" = type { %"class.blink::MemberBase.3460" }
%"class.blink::MemberBase.3460" = type { %"class.blink::AXObject"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend.3839" = type { %"class.WTF::StringAppend", %"class.WTF::String" }
%"class.WTF::StringAppend" = type { %"class.WTF::String", i8* }
%"class.WTF::StringAppend.3840" = type { %"class.WTF::StringAppend", %"class.WTF::AtomicString" }
%"class.WTF::StringAppend.3841" = type { %"class.WTF::StringAppend.3839", i8* }
%"class.WTF::StringAppend.3844" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.354", %"class.WTF::Vector.3980" }
%"class.WTF::Vector.3980" = type { %"class.WTF::VectorBuffer.3981" }
%"class.WTF::VectorBuffer.3981" = type { %"class.WTF::VectorBufferBase.3982", [64 x i8] }
%"class.WTF::VectorBufferBase.3982" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1407", %"class.blink::Member.3842", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.3842" = type { %"class.blink::MemberBase.3843" }
%"class.blink::MemberBase.3843" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::HTMLOptionElement" = type <{ %"class.blink::HTMLElement", %"class.blink::Member.3207", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Member.3207" = type { %"class.blink::MemberBase.3208" }
%"class.blink::MemberBase.3208" = type { %"class.blink::OptionTextObserver"* }
%"class.blink::OptionTextObserver" = type opaque
%"class.blink::HTMLMapElement" = type { %"class.blink::HTMLElement", %"class.WTF::AtomicString" }
%"class.blink::HTMLImageElement" = type { %"class.blink::HTMLElement", %"class.blink::ImageElementBase", %"class.blink::ActiveScriptWrappable.3804", %"class.blink::FormAssociated", %"class.blink::Member.3391", %"class.blink::Member.3805", %"class.blink::Member.3181", %"class.WTF::AtomicString", float, %"class.blink::Member.3807", i8, i8, i32, %"class.std::__1::unique_ptr.3809" }
%"class.blink::ImageElementBase" = type { %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", i32, i32 }
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%"class.blink::ActiveScriptWrappable.3804" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::Member.3391" = type { %"class.blink::MemberBase.3392" }
%"class.blink::MemberBase.3392" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type { %"class.blink::ImageLoader" }
%"class.blink::ImageLoader" = type { %"class.blink::ImageResourceObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3395", %"class.blink::Member.343", %"class.blink::Member.3396", %"class.blink::Member.3396", %"class.WTF::String", i32, %"class.WTF::AtomicString", %"class.base::WeakPtr.3433", %"class.std::__1::unique_ptr.3434", %"class.std::__1::unique_ptr.3434", %"class.blink::TaskHandle", %"class.blink::TaskHandle", i8, i32, %"class.blink::HeapVector.3443" }
%"class.blink::ThreadState::PrefinalizerRegistration.3395" = type { i8 }
%"class.blink::Member.3396" = type { %"class.blink::MemberBase.3397" }
%"class.blink::MemberBase.3397" = type { %"class.blink::ImageResourceContent"* }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.3400", float, i8, %class.scoped_refptr.3402, %"class.WTF::HashCountedSet.3427", %"class.WTF::HashCountedSet.3427" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.3400" = type { %"class.blink::MemberBase.3401" }
%"class.blink::MemberBase.3401" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr.3402 = type { %"class.blink::Image"* }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.3403", i8, %class.scoped_refptr.3405, %"class.blink::WeakPersistent.3419", i32, i8, %"class.std::__1::unique_ptr.3421" }
%"class.WTF::ThreadSafeRefCounted.3403" = type { %"class.base::RefCountedThreadSafe.3404" }
%"class.base::RefCountedThreadSafe.3404" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.3405 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.3406", i64, %"class.WTF::Vector.3408", %"class.WTF::Vector.3413" }
%"class.WTF::RefCounted.3406" = type { %"class.base::RefCounted.3407" }
%"class.base::RefCounted.3407" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3408" = type { %"class.WTF::VectorBuffer.3409" }
%"class.WTF::VectorBuffer.3409" = type { %"class.WTF::VectorBufferBase.3410" }
%"class.WTF::VectorBufferBase.3410" = type { i8*, i32, i32 }
%"class.WTF::Vector.3413" = type { %"class.WTF::VectorBuffer.3414" }
%"class.WTF::VectorBuffer.3414" = type { %"class.WTF::VectorBufferBase.3415" }
%"class.WTF::VectorBufferBase.3415" = type { %"class.std::__1::unique_ptr.3416"*, i32, i32 }
%"class.std::__1::unique_ptr.3416" = type opaque
%"class.blink::WeakPersistent.3419" = type { %"class.blink::PersistentBase.3420" }
%"class.blink::PersistentBase.3420" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.std::__1::unique_ptr.3421" = type { %"class.std::__1::__compressed_pair.3422" }
%"class.std::__1::__compressed_pair.3422" = type { %"struct.std::__1::__compressed_pair_elem.3423" }
%"struct.std::__1::__compressed_pair_elem.3423" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.WTF::HashCountedSet.3427" = type { %"class.WTF::HashMap.3428" }
%"class.WTF::HashMap.3428" = type { %"class.WTF::HashTable.3429" }
%"class.WTF::HashTable.3429" = type <{ %"struct.WTF::KeyValuePair.3432"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3432" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.base::WeakPtr.3433" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.3434" = type { %"class.std::__1::__compressed_pair.3435" }
%"class.std::__1::__compressed_pair.3435" = type { %"struct.std::__1::__compressed_pair_elem.3436" }
%"struct.std::__1::__compressed_pair_elem.3436" = type { %"class.blink::IncrementLoadEventDelayCount"* }
%"class.blink::IncrementLoadEventDelayCount" = type { %"class.blink::WeakPersistent.3437" }
%"class.blink::WeakPersistent.3437" = type { %"class.blink::PersistentBase.3438" }
%"class.blink::PersistentBase.3438" = type { %"class.blink::Document"*, %"class.blink::PersistentNodePtr.3439" }
%"class.blink::PersistentNodePtr.3439" = type { %"class.blink::PersistentNode"* }
%"class.blink::HeapVector.3443" = type { %"class.WTF::Vector.3446" }
%"class.WTF::Vector.3446" = type { %"class.WTF::VectorBuffer.3447" }
%"class.WTF::VectorBuffer.3447" = type { %"class.WTF::VectorBufferBase.3448" }
%"class.WTF::VectorBufferBase.3448" = type { %"class.blink::Member.3449"*, i32, i32 }
%"class.blink::Member.3449" = type opaque
%"class.blink::Member.3805" = type { %"class.blink::MemberBase.3806" }
%"class.blink::MemberBase.3806" = type { %"class.blink::HTMLImageElement::ViewportChangeListener"* }
%"class.blink::HTMLImageElement::ViewportChangeListener" = type opaque
%"class.blink::Member.3181" = type { %"class.blink::MemberBase.3182" }
%"class.blink::MemberBase.3182" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.3807" = type { %"class.blink::MemberBase.3808" }
%"class.blink::MemberBase.3808" = type { %"class.blink::HTMLSourceElement"* }
%"class.blink::HTMLSourceElement" = type opaque
%"class.std::__1::unique_ptr.3809" = type { %"class.std::__1::__compressed_pair.3810" }
%"class.std::__1::__compressed_pair.3810" = type { %"struct.std::__1::__compressed_pair_elem.3811" }
%"struct.std::__1::__compressed_pair_elem.3811" = type { %"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics"* }
%"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics" = type { i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.3951", %"class.blink::Member.3953", %"class.blink::Member.3955", %"class.blink::Member.3974", %"class.blink::Member.3976" }
%"class.blink::Member.3951" = type { %"class.blink::MemberBase.3952" }
%"class.blink::MemberBase.3952" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.3953" = type { %"class.blink::MemberBase.3954" }
%"class.blink::MemberBase.3954" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.3955" = type { %"class.blink::MemberBase.3956" }
%"class.blink::MemberBase.3956" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.3959", %"class.blink::HeapHashSet.3968" }
%"class.blink::HeapVector.3959" = type { %"class.WTF::Vector.3962" }
%"class.WTF::Vector.3962" = type { %"class.WTF::VectorBuffer.3963" }
%"class.WTF::VectorBuffer.3963" = type { %"class.WTF::VectorBufferBase.3964" }
%"class.WTF::VectorBufferBase.3964" = type { %"class.blink::Member.3965"*, i32, i32 }
%"class.blink::Member.3965" = type { %"class.blink::MemberBase.3966" }
%"class.blink::MemberBase.3966" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.3968" = type { %"class.WTF::HashSet.3971" }
%"class.WTF::HashSet.3971" = type { %"class.WTF::HashTable.3972" }
%"class.WTF::HashTable.3972" = type <{ %"class.blink::Member.3965"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3974" = type { %"class.blink::MemberBase.3975" }
%"class.blink::MemberBase.3975" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.3976" = type { %"class.blink::MemberBase.3977" }
%"class.blink::MemberBase.3977" = type { %"class.blink::HeapHashSet.3978"* }
%"class.blink::HeapHashSet.3978" = type opaque
%"class.blink::AccessibleNode" = type { %"class.blink::EventTargetWithInlineData", %"class.WTF::Vector.3211", %"class.WTF::Vector.3217", %"class.WTF::Vector.3223", %"class.WTF::Vector.3229", %"class.WTF::Vector.3235", %"class.blink::HeapVector.3241", %"class.blink::HeapVector.3249", %"class.blink::Member.343", %"class.blink::Member.326", %"class.blink::HeapVector.3257", %"class.blink::Member.3263" }
%"class.WTF::Vector.3211" = type { %"class.WTF::VectorBuffer.3212" }
%"class.WTF::VectorBuffer.3212" = type { %"class.WTF::VectorBufferBase.3213" }
%"class.WTF::VectorBufferBase.3213" = type { %"struct.std::__1::pair.3214"*, i32, i32 }
%"struct.std::__1::pair.3214" = type opaque
%"class.WTF::Vector.3217" = type { %"class.WTF::VectorBuffer.3218" }
%"class.WTF::VectorBuffer.3218" = type { %"class.WTF::VectorBufferBase.3219" }
%"class.WTF::VectorBufferBase.3219" = type { %"struct.std::__1::pair.3220"*, i32, i32 }
%"struct.std::__1::pair.3220" = type opaque
%"class.WTF::Vector.3223" = type { %"class.WTF::VectorBuffer.3224" }
%"class.WTF::VectorBuffer.3224" = type { %"class.WTF::VectorBufferBase.3225" }
%"class.WTF::VectorBufferBase.3225" = type { %"struct.std::__1::pair.3226"*, i32, i32 }
%"struct.std::__1::pair.3226" = type opaque
%"class.WTF::Vector.3229" = type { %"class.WTF::VectorBuffer.3230" }
%"class.WTF::VectorBuffer.3230" = type { %"class.WTF::VectorBufferBase.3231" }
%"class.WTF::VectorBufferBase.3231" = type { %"struct.std::__1::pair.3232"*, i32, i32 }
%"struct.std::__1::pair.3232" = type opaque
%"class.WTF::Vector.3235" = type { %"class.WTF::VectorBuffer.3236" }
%"class.WTF::VectorBuffer.3236" = type { %"class.WTF::VectorBufferBase.3237" }
%"class.WTF::VectorBufferBase.3237" = type { %"struct.std::__1::pair.3238"*, i32, i32 }
%"struct.std::__1::pair.3238" = type opaque
%"class.blink::HeapVector.3241" = type { %"class.WTF::Vector.3244" }
%"class.WTF::Vector.3244" = type { %"class.WTF::VectorBuffer.3245" }
%"class.WTF::VectorBuffer.3245" = type { %"class.WTF::VectorBufferBase.3246" }
%"class.WTF::VectorBufferBase.3246" = type { %"struct.std::__1::pair.3247"*, i32, i32 }
%"struct.std::__1::pair.3247" = type opaque
%"class.blink::HeapVector.3249" = type { %"class.WTF::Vector.3252" }
%"class.WTF::Vector.3252" = type { %"class.WTF::VectorBuffer.3253" }
%"class.WTF::VectorBuffer.3253" = type { %"class.WTF::VectorBufferBase.3254" }
%"class.WTF::VectorBufferBase.3254" = type { %"struct.std::__1::pair.3255"*, i32, i32 }
%"struct.std::__1::pair.3255" = type opaque
%"class.blink::HeapVector.3257" = type { %"class.WTF::Vector.3260" }
%"class.WTF::Vector.3260" = type { %"class.WTF::VectorBuffer.3261" }
%"class.WTF::VectorBuffer.3261" = type { %"class.WTF::VectorBufferBase.3262" }
%"class.WTF::VectorBufferBase.3262" = type { %"class.blink::Member.3263"*, i32, i32 }
%"class.blink::Member.3263" = type { %"class.blink::MemberBase.3264" }
%"class.blink::MemberBase.3264" = type { %"class.blink::AccessibleNode"* }
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.3266", %"class.std::__1::vector.3274", %"class.std::__1::vector.3282", %"class.std::__1::vector.3290", %"class.std::__1::vector.3298", %"class.std::__1::vector.3306", %"class.std::__1::vector.3314", %"class.std::__1::vector.3322", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector.3266" = type { %"class.std::__1::__vector_base.3267" }
%"class.std::__1::__vector_base.3267" = type { %"struct.std::__1::pair.3268"*, %"struct.std::__1::pair.3268"*, %"class.std::__1::__compressed_pair.3269" }
%"struct.std::__1::pair.3268" = type opaque
%"class.std::__1::__compressed_pair.3269" = type { %"struct.std::__1::__compressed_pair_elem.3270" }
%"struct.std::__1::__compressed_pair_elem.3270" = type { %"struct.std::__1::pair.3268"* }
%"class.std::__1::vector.3274" = type { %"class.std::__1::__vector_base.3275" }
%"class.std::__1::__vector_base.3275" = type { %"struct.std::__1::pair.3276"*, %"struct.std::__1::pair.3276"*, %"class.std::__1::__compressed_pair.3277" }
%"struct.std::__1::pair.3276" = type opaque
%"class.std::__1::__compressed_pair.3277" = type { %"struct.std::__1::__compressed_pair_elem.3278" }
%"struct.std::__1::__compressed_pair_elem.3278" = type { %"struct.std::__1::pair.3276"* }
%"class.std::__1::vector.3282" = type { %"class.std::__1::__vector_base.3283" }
%"class.std::__1::__vector_base.3283" = type { %"struct.std::__1::pair.3284"*, %"struct.std::__1::pair.3284"*, %"class.std::__1::__compressed_pair.3285" }
%"struct.std::__1::pair.3284" = type opaque
%"class.std::__1::__compressed_pair.3285" = type { %"struct.std::__1::__compressed_pair_elem.3286" }
%"struct.std::__1::__compressed_pair_elem.3286" = type { %"struct.std::__1::pair.3284"* }
%"class.std::__1::vector.3290" = type { %"class.std::__1::__vector_base.3291" }
%"class.std::__1::__vector_base.3291" = type { %"struct.std::__1::pair.3292"*, %"struct.std::__1::pair.3292"*, %"class.std::__1::__compressed_pair.3293" }
%"struct.std::__1::pair.3292" = type opaque
%"class.std::__1::__compressed_pair.3293" = type { %"struct.std::__1::__compressed_pair_elem.3294" }
%"struct.std::__1::__compressed_pair_elem.3294" = type { %"struct.std::__1::pair.3292"* }
%"class.std::__1::vector.3298" = type { %"class.std::__1::__vector_base.3299" }
%"class.std::__1::__vector_base.3299" = type { %"struct.std::__1::pair.3300"*, %"struct.std::__1::pair.3300"*, %"class.std::__1::__compressed_pair.3301" }
%"struct.std::__1::pair.3300" = type opaque
%"class.std::__1::__compressed_pair.3301" = type { %"struct.std::__1::__compressed_pair_elem.3302" }
%"struct.std::__1::__compressed_pair_elem.3302" = type { %"struct.std::__1::pair.3300"* }
%"class.std::__1::vector.3306" = type { %"class.std::__1::__vector_base.3307" }
%"class.std::__1::__vector_base.3307" = type { %"struct.std::__1::pair.3308"*, %"struct.std::__1::pair.3308"*, %"class.std::__1::__compressed_pair.3309" }
%"struct.std::__1::pair.3308" = type opaque
%"class.std::__1::__compressed_pair.3309" = type { %"struct.std::__1::__compressed_pair_elem.3310" }
%"struct.std::__1::__compressed_pair_elem.3310" = type { %"struct.std::__1::pair.3308"* }
%"class.std::__1::vector.3314" = type { %"class.std::__1::__vector_base.3315" }
%"class.std::__1::__vector_base.3315" = type { %"struct.std::__1::pair.3316"*, %"struct.std::__1::pair.3316"*, %"class.std::__1::__compressed_pair.3317" }
%"struct.std::__1::pair.3316" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.3317" = type { %"struct.std::__1::__compressed_pair_elem.3318" }
%"struct.std::__1::__compressed_pair_elem.3318" = type { %"struct.std::__1::pair.3316"* }
%"class.std::__1::vector.3322" = type { %"class.std::__1::__vector_base.3323" }
%"class.std::__1::__vector_base.3323" = type { i32*, i32*, %"class.std::__1::__compressed_pair.3324" }
%"class.std::__1::__compressed_pair.3324" = type { %"struct.std::__1::__compressed_pair_elem.3325" }
%"struct.std::__1::__compressed_pair_elem.3325" = type { i32* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr.3329" }
%"class.std::__1::unique_ptr.3329" = type { %"class.std::__1::__compressed_pair.3330" }
%"class.std::__1::__compressed_pair.3330" = type { %"struct.std::__1::__compressed_pair_elem.3331" }
%"struct.std::__1::__compressed_pair_elem.3331" = type { %"class.gfx::Transform"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.ui::AXTreeID" = type { i32, %"class.absl::optional.2370" }
%"class.blink::AXSelection" = type { %"class.blink::AXPosition", %"class.blink::AXPosition" }
%"class.blink::AXPosition" = type { %"class.blink::WeakPersistent.3353", i32, i32 }
%"class.blink::WeakPersistent.3353" = type { %"class.blink::PersistentBase.3354" }
%"class.blink::PersistentBase.3354" = type { %"class.blink::AXObject"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.3179", %"class.blink::Member.3181", %"class.blink::Member.3183", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.3179" = type { %"class.blink::MemberBase.3180" }
%"class.blink::MemberBase.3180" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.3183" = type { %"class.blink::MemberBase.3184" }
%"class.blink::MemberBase.3184" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.3355", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::Member.3355" = type { %"class.blink::MemberBase.3356" }
%"class.blink::MemberBase.3356" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.base::RepeatingCallback.3368" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::AXNodeDataAOMPropertyClient" = type { %"class.blink::AOMPropertyClient", %"class.blink::Persistent.3357", %"struct.ui::AXNodeData"* }
%"class.blink::AOMPropertyClient" = type { i32 (...)** }
%"class.blink::Persistent.3357" = type { %"class.blink::PersistentBase.3358" }
%"class.blink::PersistentBase.3358" = type { %"class.blink::AXObjectCacheImpl"*, %"class.blink::PersistentNodePtr.269" }
%"class.WTF::HashSet.3364" = type { %"class.WTF::HashTable.3365" }
%"class.WTF::HashTable.3365" = type <{ %"class.blink::QualifiedName"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.3359" = type { %"class.WTF::HashTable.3360" }
%"class.WTF::HashTable.3360" = type <{ %"struct.WTF::KeyValuePair.3363"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3363" = type { %"class.blink::QualifiedName", %"class.base::RepeatingCallback.3368" }
%"class.blink::ElementInternals" = type { %"class.blink::ScriptWrappable", %"class.blink::ListedElement.base", %"class.blink::Member.3191", %"class.blink::Member.3374", %"class.blink::Member.3374", i8, %"class.blink::Member.3376", %"class.blink::Member.343", %"class.blink::Member.3378", %"class.WTF::HashMap.3369", %"class.blink::HeapHashMap.3380" }
%"class.blink::Member.3191" = type { %"class.blink::MemberBase.3192" }
%"class.blink::MemberBase.3192" = type { %"class.blink::HTMLElement"* }
%"class.blink::Member.3374" = type { %"class.blink::MemberBase.3375" }
%"class.blink::MemberBase.3375" = type { %"class.blink::V8UnionFileOrFormDataOrUSVString"* }
%"class.blink::V8UnionFileOrFormDataOrUSVString" = type opaque
%"class.blink::Member.3376" = type { %"class.blink::MemberBase.3377" }
%"class.blink::MemberBase.3377" = type { %"class.blink::ValidityStateFlags"* }
%"class.blink::ValidityStateFlags" = type opaque
%"class.blink::Member.3378" = type { %"class.blink::MemberBase.3379" }
%"class.blink::MemberBase.3379" = type { %"class.blink::CustomStateSet"* }
%"class.blink::CustomStateSet" = type opaque
%"class.WTF::HashMap.3369" = type { %"class.WTF::HashTable.3370" }
%"class.WTF::HashTable.3370" = type <{ %"struct.WTF::KeyValuePair.3373"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3373" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::HeapHashMap.3380" = type { %"class.WTF::HashMap.3383" }
%"class.WTF::HashMap.3383" = type { %"class.WTF::HashTable.3384" }
%"class.WTF::HashTable.3384" = type <{ %"struct.WTF::KeyValuePair.3386"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3386" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.blink::HTMLInputElement" = type <{ %"class.blink::TextControlElement", %"class.blink::ActiveScriptWrappable", %"class.WTF::AtomicString", %"class.WTF::String", i32, i16, [2 x i8], %"class.blink::Member.3387", %"class.blink::Member.3389", %"class.blink::Member.3391", %"class.blink::Member.3451", i32, [4 x i8] }>
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Member.3387" = type { %"class.blink::MemberBase.3388" }
%"class.blink::MemberBase.3388" = type { %"class.blink::InputType"* }
%"class.blink::InputType" = type opaque
%"class.blink::Member.3389" = type { %"class.blink::MemberBase.3390" }
%"class.blink::MemberBase.3390" = type { %"class.blink::InputTypeView"* }
%"class.blink::InputTypeView" = type opaque
%"class.blink::Member.3451" = type { %"class.blink::MemberBase.3452" }
%"class.blink::MemberBase.3452" = type { %"class.blink::ListAttributeTargetObserver"* }
%"class.blink::ListAttributeTargetObserver" = type opaque
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::HTMLDialogElement" = type { %"class.blink::HTMLElement", i8, %"class.WTF::String", %"class.blink::WeakMember.3069" }
%"class.blink::PseudoElement" = type opaque
%"class.blink::HTMLSelectElement" = type <{ %"class.blink::HTMLFormControlElementWithState.base", [2 x i8], %"class.blink::TypeAheadDataSource", %"class.blink::HeapVector.3185", %"class.blink::TypeAhead", i32, [4 x i8], %"class.blink::Member.3205", %"class.blink::Member.3205", i8, i8, i8, i8, [4 x i8], %"class.blink::Member.3209", i32, [4 x i8] }>
%"class.blink::TypeAheadDataSource" = type { i32 (...)** }
%"class.blink::HeapVector.3185" = type { %"class.WTF::Vector.3188" }
%"class.WTF::Vector.3188" = type { %"class.WTF::VectorBuffer.3189" }
%"class.WTF::VectorBuffer.3189" = type { %"class.WTF::VectorBufferBase.3190" }
%"class.WTF::VectorBufferBase.3190" = type { %"class.blink::Member.3191"*, i32, i32 }
%"class.blink::TypeAhead" = type { %"class.blink::TypeAheadDataSource"*, %"class.absl::optional.2919", i16, [6 x i8], %"class.WTF::StringBuilder" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.3194, i32, i8, i8, [2 x i8] }>
%union.anon.3194 = type { %"class.WTF::Vector.3195" }
%"class.WTF::Vector.3195" = type { %"class.WTF::VectorBuffer.3196" }
%"class.WTF::VectorBuffer.3196" = type { %"class.WTF::VectorBufferBase.3197", [16 x i8] }
%"class.WTF::VectorBufferBase.3197" = type { i8*, i32, i32 }
%"class.blink::Member.3205" = type { %"class.blink::MemberBase.3206" }
%"class.blink::MemberBase.3206" = type { %"class.blink::HTMLOptionElement"* }
%"class.blink::Member.3209" = type { %"class.blink::MemberBase.3210" }
%"class.blink::MemberBase.3210" = type { %"class.blink::SelectType"* }
%"class.blink::SelectType" = type opaque
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.3467", %"class.blink::Member.3467", %"class.blink::Member.3469", %"class.blink::Member.3471", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.3462" }
%"class.absl::optional.3462" = type { %"class.absl::optional_internal::optional_data.3463" }
%"class.absl::optional_internal::optional_data.3463" = type { %"class.absl::optional_internal::optional_data_base.3464" }
%"class.absl::optional_internal::optional_data_base.3464" = type { %"class.absl::optional_internal::optional_data_dtor_base.3465" }
%"class.absl::optional_internal::optional_data_dtor_base.3465" = type { i8, %union.anon.3466 }
%union.anon.3466 = type { i64 }
%"class.blink::Member.3467" = type { %"class.blink::MemberBase.3468" }
%"class.blink::MemberBase.3468" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.3469" = type { %"class.blink::MemberBase.3470" }
%"class.blink::MemberBase.3470" = type { %"class.blink::Event"* }
%"class.blink::Member.3471" = type { %"class.blink::MemberBase.3472" }
%"class.blink::MemberBase.3472" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HTMLCanvasElement" = type { %"class.blink::HTMLElement", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::PageVisibilityObserver", %"class.blink::CanvasRenderingContextHost", %"class.blink::WebSurfaceLayerBridgeObserver", %"class.blink::ImageBitmapSource", %"class.blink::OffscreenCanvasPlaceholder.base", %"class.blink::ThreadState::PrefinalizerRegistration.3580", [3 x i8], %"class.blink::HeapHashSet.3581", %"class.blink::IntSize", %"class.blink::Member.3588", i8, i8, i8, %"class.blink::FloatRect", i8, i8, i8, %"class.std::__1::unique_ptr.3590", %"class.std::__1::unique_ptr.3631", %"class.std::__1::unique_ptr.3712", i8, i64, %class.scoped_refptr.3718 }
%"class.blink::PageVisibilityObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3473" }
%"class.blink::WeakMember.3473" = type { %"class.blink::MemberBase.2216" }
%"class.blink::CanvasRenderingContextHost" = type { %"class.blink::CanvasResourceHost.base", %"class.blink::CanvasImageSource", %"class.blink::GarbageCollectedMixin", i8, i8, i32 }
%"class.blink::CanvasResourceHost.base" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.3474", i32 }>
%"class.std::__1::unique_ptr.3474" = type { %"class.std::__1::__compressed_pair.3475" }
%"class.std::__1::__compressed_pair.3475" = type { %"struct.std::__1::__compressed_pair_elem.3476" }
%"struct.std::__1::__compressed_pair_elem.3476" = type { %"class.blink::CanvasResourceProvider"* }
%"class.blink::CanvasResourceProvider" = type { %"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver", %"class.base::CheckedObserver", %"class.blink::CanvasMemoryDumpClient", i32, %class.sk_sp.3478, i32, %"class.base::WeakPtr.3479", %"class.base::WeakPtr.3480", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceParams", i8, %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3487", %"class.std::__1::unique_ptr.3517", i8, i32, i32, i32, %"class.WTF::Vector.3535", i8, i8, i64, i64, %"class.base::RepeatingCallback.3545", %"class.blink::IdentifiabilityPaintOpDigest", %"class.base::WeakPtrFactory.3569" }
%"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver" = type { i32 (...)** }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.3477" }
%"class.base::WeakPtrFactory.3477" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%class.sk_sp.3478 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%"class.base::WeakPtr.3479" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.3480" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.3481" = type { %"class.std::__1::__compressed_pair.3482" }
%"class.std::__1::__compressed_pair.3482" = type { %"struct.std::__1::__compressed_pair_elem.3483" }
%"struct.std::__1::__compressed_pair_elem.3483" = type { %"class.blink::CanvasResourceProvider::CanvasImageProvider"* }
%"class.blink::CanvasResourceProvider::CanvasImageProvider" = type opaque
%"class.std::__1::unique_ptr.3487" = type { %"class.std::__1::__compressed_pair.3488" }
%"class.std::__1::__compressed_pair.3488" = type { %"struct.std::__1::__compressed_pair_elem.3489" }
%"struct.std::__1::__compressed_pair_elem.3489" = type { %"class.cc::SkiaPaintCanvas"* }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.3508", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.3490, [384 x i64], %class.sk_sp.3491, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.3492", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.3498" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.3490 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.3491 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.3492" = type { %"class.std::__1::__compressed_pair.3493" }
%"class.std::__1::__compressed_pair.3493" = type { %"struct.std::__1::__compressed_pair_elem.3494" }
%"struct.std::__1::__compressed_pair_elem.3494" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.3498" = type { %"class.std::__1::__compressed_pair.3499" }
%"class.std::__1::__compressed_pair.3499" = type { %"struct.std::__1::__compressed_pair_elem.3500" }
%"struct.std::__1::__compressed_pair_elem.3500" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBitmap = type { %class.sk_sp.3504, %class.SkPixmap, %class.sk_sp.3507 }
%class.sk_sp.3504 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.3505, i32, i32 }
%class.sk_sp.3505 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.3506, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.3506 = type { %"struct.std::__1::atomic.41" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.3507 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.3508" = type { %"class.std::__1::__compressed_pair.3509" }
%"class.std::__1::__compressed_pair.3509" = type { %"struct.std::__1::__compressed_pair_elem.3510" }
%"struct.std::__1::__compressed_pair_elem.3510" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::unique_ptr.3517" = type { %"class.std::__1::__compressed_pair.3518" }
%"class.std::__1::__compressed_pair.3518" = type { %"struct.std::__1::__compressed_pair_elem.3519" }
%"struct.std::__1::__compressed_pair_elem.3519" = type { %"class.blink::MemoryManagedPaintRecorder"* }
%"class.blink::MemoryManagedPaintRecorder" = type { %"class.cc::PaintRecorder", %"class.base::RepeatingCallback" }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.3520, %"class.std::__1::unique_ptr.3521" }
%class.scoped_refptr.3520 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.3521" = type { %"class.std::__1::__compressed_pair.3522" }
%"class.std::__1::__compressed_pair.3522" = type { %"struct.std::__1::__compressed_pair_elem.3523" }
%"struct.std::__1::__compressed_pair_elem.3523" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.3524", %struct.SkRect }
%"class.absl::optional.3524" = type { %"class.absl::optional_internal::optional_data.3525" }
%"class.absl::optional_internal::optional_data.3525" = type { %"class.absl::optional_internal::optional_data_base.3526" }
%"class.absl::optional_internal::optional_data_base.3526" = type { %"class.absl::optional_internal::optional_data_dtor_base.3527" }
%"class.absl::optional_internal::optional_data_dtor_base.3527" = type { i8, %union.anon.3528 }
%union.anon.3528 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.WTF::Vector.3535" = type { %"class.WTF::VectorBuffer.3536" }
%"class.WTF::VectorBuffer.3536" = type { %"class.WTF::VectorBufferBase.3537" }
%"class.WTF::VectorBufferBase.3537" = type { %class.scoped_refptr.3538*, i32, i32 }
%class.scoped_refptr.3538 = type { %"class.blink::CanvasResource"* }
%"class.blink::CanvasResource" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.3539", %"class.base::PlatformThreadRef", %class.scoped_refptr.778, %"struct.gpu::SyncToken", %"class.base::WeakPtr.3542", i32, %"class.blink::CanvasResourceParams" }
%"class.WTF::ThreadSafeRefCounted.3539" = type { %"class.base::RefCountedThreadSafe.3540" }
%"class.base::RefCountedThreadSafe.3540" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::PlatformThreadRef" = type { i64 }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias.3541" }
%"class.base::StrongAlias.3541" = type { i64 }
%"class.base::WeakPtr.3542" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::RepeatingCallback.3545" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map.3550", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.3546" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.3546" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.3550" = type { %"class.std::__1::__tree.3551" }
%"class.std::__1::__tree.3551" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3552", %"class.std::__1::__compressed_pair.3556" }
%"class.std::__1::__compressed_pair.3552" = type { %"struct.std::__1::__compressed_pair_elem.1676" }
%"class.std::__1::__compressed_pair.3556" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.3563" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector.3563" = type { %"class.std::__1::__vector_base.3564" }
%"class.std::__1::__vector_base.3564" = type { %"struct.std::__1::pair.3565"*, %"struct.std::__1::pair.3565"*, %"class.std::__1::__compressed_pair.3566" }
%"struct.std::__1::pair.3565" = type { i32, i32 }
%"class.std::__1::__compressed_pair.3566" = type { %"struct.std::__1::__compressed_pair_elem.3567", %"struct.std::__1::__compressed_pair_elem.3568" }
%"struct.std::__1::__compressed_pair_elem.3567" = type { %"struct.std::__1::pair.3565"* }
%"struct.std::__1::__compressed_pair_elem.3568" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.3505, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%"class.base::WeakPtrFactory.3569" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WebSurfaceLayerBridgeObserver" = type { i32 (...)** }
%"class.blink::OffscreenCanvasPlaceholder.base" = type <{ i32 (...)**, %class.scoped_refptr.3538, %"class.base::WeakPtr.3480", %class.scoped_refptr.778, %"class.util::IdType.3573", i32, i32, %"class.absl::optional.3575" }>
%"class.util::IdType.3573" = type { %"class.base::StrongAlias.3574" }
%"class.base::StrongAlias.3574" = type { i32 }
%"class.absl::optional.3575" = type { %"class.absl::optional_internal::optional_data.3576" }
%"class.absl::optional_internal::optional_data.3576" = type { %"class.absl::optional_internal::optional_data_base.3577" }
%"class.absl::optional_internal::optional_data_base.3577" = type { %"class.absl::optional_internal::optional_data_dtor_base.3578" }
%"class.absl::optional_internal::optional_data_dtor_base.3578" = type { i8, %union.anon.3579 }
%union.anon.3579 = type { i32 }
%"class.blink::ThreadState::PrefinalizerRegistration.3580" = type { i8 }
%"class.blink::HeapHashSet.3581" = type { %"class.WTF::HashSet.3584" }
%"class.WTF::HashSet.3584" = type { %"class.WTF::HashTable.3585" }
%"class.WTF::HashTable.3585" = type <{ %"class.blink::WeakMember.3587"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3587" = type opaque
%"class.blink::Member.3588" = type { %"class.blink::MemberBase.3589" }
%"class.blink::MemberBase.3589" = type { %"class.blink::CanvasRenderingContext"* }
%"class.blink::CanvasRenderingContext" = type opaque
%"class.std::__1::unique_ptr.3590" = type { %"class.std::__1::__compressed_pair.3591" }
%"class.std::__1::__compressed_pair.3591" = type { %"struct.std::__1::__compressed_pair_elem.3592" }
%"struct.std::__1::__compressed_pair_elem.3592" = type { %"class.blink::Canvas2DLayerBridge"* }
%"class.blink::Canvas2DLayerBridge" = type { %"class.cc::TextureLayerClient", %class.sk_sp.3593, %class.scoped_refptr.3594, %"class.std::__1::unique_ptr.3595", %"class.std::__1::unique_ptr.3601", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::CanvasColorParams", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceHost"*, %"struct.viz::TransferableResource", %"class.std::__1::mersenne_twister_engine", %"class.std::__1::bernoulli_distribution", %"class.WTF::Deque.3617", %class.sk_sp.3622, %"class.base::WeakPtrFactory.3627" }
%"class.cc::TextureLayerClient" = type { i32 (...)** }
%class.sk_sp.3593 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.3594 = type { %"class.cc::TextureLayer"* }
%"class.cc::TextureLayer" = type opaque
%"class.std::__1::unique_ptr.3595" = type { %"class.std::__1::__compressed_pair.3596" }
%"class.std::__1::__compressed_pair.3596" = type { %"struct.std::__1::__compressed_pair_elem.3597" }
%"struct.std::__1::__compressed_pair_elem.3597" = type { %"class.blink::SharedContextRateLimiter"* }
%"class.blink::SharedContextRateLimiter" = type opaque
%"class.std::__1::unique_ptr.3601" = type { %"class.std::__1::__compressed_pair.3602" }
%"class.std::__1::__compressed_pair.3602" = type { %"struct.std::__1::__compressed_pair_elem.3603" }
%"struct.std::__1::__compressed_pair_elem.3603" = type { %"class.blink::Canvas2DLayerBridge::Logger"* }
%"class.blink::Canvas2DLayerBridge::Logger" = type { i32 (...)** }
%"class.blink::CanvasColorParams" = type { i32, i32, i32 }
%"class.blink::CanvasResourceHost" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.3474", i32, [4 x i8] }>
%"struct.viz::TransferableResource" = type { %"class.util::IdType.3573", i8, %"class.gfx::Size", i32, [4 x i8], %"struct.gpu::MailboxHolder", %"class.gfx::ColorSpace", %"class.absl::optional.3607", i8, i32, i8, [7 x i8], %"class.absl::optional.3612" }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.3607" = type { %"class.absl::optional_internal::optional_data.3608" }
%"class.absl::optional_internal::optional_data.3608" = type { %"class.absl::optional_internal::optional_data_base.3609" }
%"class.absl::optional_internal::optional_data_base.3609" = type { %"class.absl::optional_internal::optional_data_dtor_base.3610" }
%"class.absl::optional_internal::optional_data_dtor_base.3610" = type { i8, %union.anon.3611 }
%union.anon.3611 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.absl::optional.3612" = type { %"class.absl::optional_internal::optional_data.3613" }
%"class.absl::optional_internal::optional_data.3613" = type { %"class.absl::optional_internal::optional_data_base.3614" }
%"class.absl::optional_internal::optional_data_base.3614" = type { %"class.absl::optional_internal::optional_data_dtor_base.3615" }
%"class.absl::optional_internal::optional_data_dtor_base.3615" = type { i8, [7 x i8], %union.anon.3616 }
%union.anon.3616 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::mersenne_twister_engine" = type { [624 x i64], i64 }
%"class.std::__1::bernoulli_distribution" = type { %"class.std::__1::bernoulli_distribution::param_type" }
%"class.std::__1::bernoulli_distribution::param_type" = type { double }
%"class.WTF::Deque.3617" = type { %"class.WTF::Deque<blink::Canvas2DLayerBridge::RasterTimer, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Canvas2DLayerBridge::RasterTimer, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.3620" }
%"class.WTF::VectorBuffer.3620" = type { %"class.WTF::VectorBufferBase.3621" }
%"class.WTF::VectorBufferBase.3621" = type { %"struct.blink::Canvas2DLayerBridge::RasterTimer"*, i32, i32 }
%"struct.blink::Canvas2DLayerBridge::RasterTimer" = type { i32, %"class.base::TimeDelta" }
%class.sk_sp.3622 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.3623", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.3623" = type { %"class.std::__1::__compressed_pair.3624" }
%"class.std::__1::__compressed_pair.3624" = type { %"struct.std::__1::__compressed_pair_elem.3625" }
%"struct.std::__1::__compressed_pair_elem.3625" = type { i8* }
%"class.base::WeakPtrFactory.3627" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.3631" = type { %"class.std::__1::__compressed_pair.3632" }
%"class.std::__1::__compressed_pair.3632" = type { %"struct.std::__1::__compressed_pair_elem.3633" }
%"struct.std::__1::__compressed_pair_elem.3633" = type { %"class.blink::SurfaceLayerBridge"* }
%"class.blink::SurfaceLayerBridge" = type <{ %"class.blink::mojom::blink::EmbeddedFrameSinkClient", %"class.blink::mojom::blink::SurfaceEmbedder", %"class.blink::WebSurfaceLayerBridge", %class.scoped_refptr.3634, %class.scoped_refptr.3705, %"class.blink::WebSurfaceLayerBridgeObserver"*, %"class.base::RepeatingCallback.3694", %"class.viz::ParentLocalSurfaceIdAllocator", %"class.mojo::Receiver", %"class.mojo::Receiver.3707", %"class.viz::FrameSinkId", i32, [4 x i8], %"class.viz::SurfaceId", %"class.viz::FrameSinkId", i8, i8, [6 x i8] }>
%"class.blink::mojom::blink::EmbeddedFrameSinkClient" = type { i32 (...)** }
%"class.blink::mojom::blink::SurfaceEmbedder" = type { i32 (...)** }
%"class.blink::WebSurfaceLayerBridge" = type { i32 (...)** }
%class.scoped_refptr.3634 = type { %"class.cc::SurfaceLayer"* }
%"class.cc::SurfaceLayer" = type <{ %"class.cc::Layer", %"class.base::RepeatingCallback.3694", i8, [7 x i8], %"class.viz::SurfaceRange", %"class.absl::optional.3700", i8, i8, i8, i8, [4 x i8] }>
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted.3635", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.3654", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.3674" }>
%"class.base::RefCounted.3635" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::LayerTreeHost" = type opaque
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.3636", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.3636" = type { %"class.std::__1::__vector_base.3637" }
%"class.std::__1::__vector_base.3637" = type { %class.scoped_refptr.3638*, %class.scoped_refptr.3638*, %"class.std::__1::__compressed_pair.3639" }
%class.scoped_refptr.3638 = type opaque
%"class.std::__1::__compressed_pair.3639" = type { %"struct.std::__1::__compressed_pair_elem.3640" }
%"struct.std::__1::__compressed_pair_elem.3640" = type { %class.scoped_refptr.3638* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.3644" }
%"class.base::flat_map.3644" = type { %"class.base::internal::flat_tree.3645" }
%"class.base::internal::flat_tree.3645" = type { %"class.std::__1::vector.3646" }
%"class.std::__1::vector.3646" = type { %"class.std::__1::__vector_base.3647" }
%"class.std::__1::__vector_base.3647" = type { %"struct.std::__1::pair.3648"*, %"struct.std::__1::pair.3648"*, %"class.std::__1::__compressed_pair.3649" }
%"struct.std::__1::pair.3648" = type opaque
%"class.std::__1::__compressed_pair.3649" = type { %"struct.std::__1::__compressed_pair_elem.3650" }
%"struct.std::__1::__compressed_pair_elem.3650" = type { %"struct.std::__1::pair.3648"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.3654" = type { %"class.std::__1::__compressed_pair.3655" }
%"class.std::__1::__compressed_pair.3655" = type { %"struct.std::__1::__compressed_pair_elem.3656" }
%"struct.std::__1::__compressed_pair_elem.3656" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.3657", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback.3662", %"class.std::__1::vector.3663" }
%"class.cc::PictureLayer" = type opaque
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.absl::optional.3657" = type { %"class.absl::optional_internal::optional_data.3658" }
%"class.absl::optional_internal::optional_data.3658" = type { %"class.absl::optional_internal::optional_data_base.3659" }
%"class.absl::optional_internal::optional_data_base.3659" = type { %"class.absl::optional_internal::optional_data_dtor_base.3660" }
%"class.absl::optional_internal::optional_data_dtor_base.3660" = type { i8, %union.anon.3661 }
%union.anon.3661 = type { %"class.gfx::RRectF" }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback.3662" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.3663" = type { %"class.std::__1::__vector_base.3664" }
%"class.std::__1::__vector_base.3664" = type { %"class.std::__1::unique_ptr.3665"*, %"class.std::__1::unique_ptr.3665"*, %"class.std::__1::__compressed_pair.3666" }
%"class.std::__1::unique_ptr.3665" = type opaque
%"class.std::__1::__compressed_pair.3666" = type { %"struct.std::__1::__compressed_pair_elem.3667" }
%"struct.std::__1::__compressed_pair_elem.3667" = type { %"class.std::__1::unique_ptr.3665"* }
%"class.std::__1::unique_ptr.3674" = type { %"class.std::__1::__compressed_pair.3675" }
%"class.std::__1::__compressed_pair.3675" = type { %"struct.std::__1::__compressed_pair_elem.3676" }
%"struct.std::__1::__compressed_pair_elem.3676" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.3677", %"class.std::__1::vector.3677", %"class.std::__1::vector.3684" }
%"class.std::__1::vector.3677" = type { %"class.std::__1::__vector_base.3678" }
%"class.std::__1::__vector_base.3678" = type { i8**, i8**, %"class.std::__1::__compressed_pair.3679" }
%"class.std::__1::__compressed_pair.3679" = type { %"struct.std::__1::__compressed_pair_elem.3680" }
%"struct.std::__1::__compressed_pair_elem.3680" = type { i8** }
%"class.std::__1::vector.3684" = type { %"class.std::__1::__vector_base.3685" }
%"class.std::__1::__vector_base.3685" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.3686" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.3686" = type { %"struct.std::__1::__compressed_pair_elem.3687" }
%"struct.std::__1::__compressed_pair_elem.3687" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.3695", %"class.viz::SurfaceId" }
%"class.absl::optional.3695" = type { %"class.absl::optional_internal::optional_data.3696" }
%"class.absl::optional_internal::optional_data.3696" = type { %"class.absl::optional_internal::optional_data_base.3697" }
%"class.absl::optional_internal::optional_data_base.3697" = type { %"class.absl::optional_internal::optional_data_dtor_base.3698" }
%"class.absl::optional_internal::optional_data_dtor_base.3698" = type { i8, %union.anon.3699 }
%union.anon.3699 = type { %"class.viz::SurfaceId" }
%"class.absl::optional.3700" = type { %"class.absl::optional_internal::optional_data.3701" }
%"class.absl::optional_internal::optional_data.3701" = type { %"class.absl::optional_internal::optional_data_base.3702" }
%"class.absl::optional_internal::optional_data_base.3702" = type { %"class.absl::optional_internal::optional_data_dtor_base.3703" }
%"class.absl::optional_internal::optional_data_dtor_base.3703" = type { i8, %union.anon.3704 }
%union.anon.3704 = type { i32 }
%class.scoped_refptr.3705 = type { %"class.cc::SolidColorLayer"* }
%"class.cc::SolidColorLayer" = type opaque
%"class.base::RepeatingCallback.3694" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.viz::ParentLocalSurfaceIdAllocator" = type <{ %"class.viz::LocalSurfaceId", i8, i8, [6 x i8] }>
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::EmbeddedFrameSinkClientStub" }
%"class.blink::mojom::blink::EmbeddedFrameSinkClientStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::EmbeddedFrameSinkClient"* }
%"class.mojo::Receiver.3707" = type { %"class.mojo::internal::BindingState.3708" }
%"class.mojo::internal::BindingState.3708" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::SurfaceEmbedderStub" }
%"class.blink::mojom::blink::SurfaceEmbedderStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::SurfaceEmbedder"* }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.3712" = type { %"class.std::__1::__compressed_pair.3713" }
%"class.std::__1::__compressed_pair.3713" = type { %"struct.std::__1::__compressed_pair_elem.3714" }
%"struct.std::__1::__compressed_pair_elem.3714" = type { %"class.blink::CanvasResourceDispatcher"* }
%"class.blink::CanvasResourceDispatcher" = type opaque
%class.scoped_refptr.3718 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8, [6 x i8] }>
%"class.blink::ImageOrientation" = type { i8 }
%"class.blink::AXObject::AncestorsIterator" = type { %"class.blink::Member.3082" }
%"class.blink::HeapHashSet.3721" = type { %"class.WTF::HashSet.3724" }
%"class.WTF::HashSet.3724" = type { %"class.WTF::HashTable.3725" }
%"class.WTF::HashTable.3725" = type <{ %"class.blink::Member.3459"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.3727" = type { %"class.WTF::Vector.3730" }
%"class.WTF::Vector.3730" = type { %"class.WTF::VectorBuffer.3731" }
%"class.WTF::VectorBuffer.3731" = type { %"class.WTF::VectorBufferBase.3732" }
%"class.WTF::VectorBufferBase.3732" = type { %"class.blink::Member.3733"*, i32, i32 }
%"class.blink::Member.3733" = type { %"class.blink::MemberBase.3734" }
%"class.blink::MemberBase.3734" = type { %"class.blink::NameSourceRelatedObject"* }
%"class.blink::NameSourceRelatedObject" = type { %"class.blink::WeakMember.3128", %"class.WTF::String" }
%"class.blink::HeapVector.3738" = type { %"class.WTF::Vector.3741" }
%"class.WTF::Vector.3741" = type { %"class.WTF::VectorBuffer.3742" }
%"class.WTF::VectorBuffer.3742" = type { %"class.WTF::VectorBufferBase.3743" }
%"class.WTF::VectorBufferBase.3743" = type { %"class.blink::NameSource"*, i32, i32 }
%"class.blink::NameSource" = type { %"class.WTF::String", i8, i8, i32, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString", i32, %"class.blink::HeapVector.3727" }
%"class.absl::optional.3746" = type { %"class.absl::optional_internal::optional_data.3747" }
%"class.absl::optional_internal::optional_data.3747" = type { %"class.absl::optional_internal::optional_data_base.3748" }
%"class.absl::optional_internal::optional_data_base.3748" = type { %"class.absl::optional_internal::optional_data_dtor_base.3749" }
%"class.absl::optional_internal::optional_data_dtor_base.3749" = type { i8, %union.anon.3750 }
%union.anon.3750 = type { %"class.blink::HeapVector.365" }
%"class.WTF::Vector.3757" = type { %"class.WTF::VectorBuffer.2839" }
%"class.blink::AXObject::InOrderTraversalIterator" = type { %"class.blink::Member.3082", %"class.blink::Member.3082" }
%"class.blink::EmbeddedContentView" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8, [5 x i8] }>
%"struct.ui::AXActionData" = type { i32, %"class.ui::AXTreeID", %"class.std::__1::basic_string", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.gfx::Rect", %"class.gfx::Point", %"class.std::__1::basic_string", i32, i32, i32, i32 }
%"struct.blink::FocusParams" = type <{ i32, i32, %"class.blink::InputDeviceCapabilities"*, %"class.blink::FocusOptions"*, i8, [7 x i8] }>
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::FocusOptions" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [6 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.mojo::StructPtr.3817" = type { %"class.std::__1::unique_ptr.3818" }
%"class.std::__1::unique_ptr.3818" = type { %"class.std::__1::__compressed_pair.3819" }
%"class.std::__1::__compressed_pair.3819" = type { %"struct.std::__1::__compressed_pair_elem.3820" }
%"struct.std::__1::__compressed_pair_elem.3820" = type { %"class.blink::mojom::blink::ScrollIntoViewParams"* }
%"class.blink::mojom::blink::ScrollIntoViewParams" = type <{ %"class.mojo::InlinedStructPtr.3821", %"class.mojo::InlinedStructPtr.3821", i32, i8, [3 x i8], i32, i8, i8, [2 x i8], %"class.gfx::RectF", %"class.gfx::RectF", i8, [3 x i8] }>
%"class.mojo::InlinedStructPtr.3821" = type { %"class.blink::mojom::blink::ScrollAlignment", i32 }
%"class.blink::mojom::blink::ScrollAlignment" = type { i32, i32, i32 }
%"class.blink::ContextMenuAllowedScope" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::allocator" = type { i8 }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.blink::HeapVector.3832" = type { %"class.WTF::Vector.3835" }
%"class.WTF::Vector.3835" = type { %"class.WTF::VectorBuffer.3836" }
%"class.WTF::VectorBuffer.3836" = type { %"class.WTF::VectorBufferBase.3837" }
%"class.WTF::VectorBufferBase.3837" = type { %"class.blink::Member.3459"*, i32, i32 }
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringTypeAdapter.4049" }
%"class.WTF::StringTypeAdapter.4049" = type { %"class.WTF::StringView" }
%"class.WTF::StringTypeAdapter.4050" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::HeapVector.3845" = type opaque
%"class.WTF::Vector.3846" = type opaque
%"class.WTF::Vector.3200" = type { %"class.WTF::VectorBuffer.3201" }
%"class.WTF::VectorBuffer.3201" = type { %"class.WTF::VectorBufferBase.3202", [16 x i8] }
%"class.WTF::VectorBufferBase.3202" = type { i16*, i32, i32 }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringHasher" = type { i32, i8, i16 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.WTF::StringTypeAdapter.4052" = type { %"class.WTF::StringTypeAdapter.4049" }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapVectorBacking.4086" = type { i8 }
%"class.blink::HeapVectorBacking.4108" = type { i8 }
%"class.blink::HeapVectorBacking.4130" = type { i8 }
%"class.blink::HeapVectorBacking.4118" = type { i8 }
%"class.blink::HeapVectorBacking.4143" = type { i8 }
%"class.blink::HeapVectorBacking.4150" = type { i8 }

$_ZN5blink11AXSelectionD2Ev = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN5blink11IsHTMLSpaceIDsEEbT_ = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZNK5blink9LayoutBox22PhysicalContentBoxRectEv = comdat any

$_ZNK3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev = comdat any

$_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev = comdat any

$_ZN3WTFplINS_6StringEPKcNS_12AtomicStringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEENS_12AtomicStringEEcvS1_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev = comdat any

$_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev = comdat any

$_ZNK5blink8AXObject29ComputeAccessibilityIsIgnoredEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE = comdat any

$_ZNK5blink8AXObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_6MemberIS0_EELj0EEE = comdat any

$_ZNK5blink8AXObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_17DescriptionSourceELj0EEEPNS6_INS_6MemberINS_23NameSourceRelatedObjectEEELj0EEE = comdat any

$_ZNK5blink8AXObject11PlaceholderEN2ax5mojom8NameFromE = comdat any

$_ZNK5blink8AXObject5TitleEN2ax5mojom8NameFromE = comdat any

$_ZNK5blink8AXObject15TextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSG_INS_10NameSourceELj0EEE = comdat any

$_ZNK5blink8AXObject19TextFromDescendantsERNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEb = comdat any

$_ZNK5blink8AXObject9AccessKeyEv = comdat any

$_ZNK5blink8AXObject15BackgroundColorEv = comdat any

$_ZNK5blink8AXObject8GetColorEv = comdat any

$_ZNK5blink8AXObject10ColorValueEv = comdat any

$_ZNK5blink8AXObject24CanvasHasFallbackContentEv = comdat any

$_ZNK5blink8AXObject18ComputedFontFamilyEv = comdat any

$_ZNK5blink8AXObject26FontFamilyForSerializationEv = comdat any

$_ZNK5blink8AXObject8FontSizeEv = comdat any

$_ZNK5blink8AXObject10FontWeightEv = comdat any

$_ZNK5blink8AXObject12HeadingLevelEv = comdat any

$_ZNK5blink8AXObject17HierarchicalLevelEv = comdat any

$_ZNK5blink8AXObject12ImageDataUrlERKNS_7IntSizeE = comdat any

$_ZNK5blink8AXObject16InPageLinkTargetEv = comdat any

$_ZNK5blink8AXObject12GetListStyleEv = comdat any

$_ZNK5blink8AXObject12GetTextAlignEv = comdat any

$_ZNK5blink8AXObject16GetTextDirectionEv = comdat any

$_ZNK5blink8AXObject13GetTextIndentEv = comdat any

$_ZNK5blink8AXObject15GetTextPositionEv = comdat any

$_ZNK5blink8AXObject34GetTextStyleAndTextDecorationStyleEPiPN2ax5mojom19TextDecorationStyleES5_S5_ = comdat any

$_ZNK5blink8AXObject19RadioButtonsInGroupEv = comdat any

$_ZNK5blink8AXObject3UrlEv = comdat any

$_ZNK5blink8AXObject12ChooserPopupEv = comdat any

$_ZNK5blink8AXObject19GetAriaCurrentStateEv = comdat any

$_ZNK5blink8AXObject15GetInvalidStateEv = comdat any

$_ZNK5blink8AXObject16AriaInvalidValueEv = comdat any

$_ZNK5blink8AXObject13ValueForRangeEPf = comdat any

$_ZNK5blink8AXObject16MaxValueForRangeEPf = comdat any

$_ZNK5blink8AXObject16MinValueForRangeEPf = comdat any

$_ZNK5blink8AXObject17StepValueForRangeEPf = comdat any

$_ZN5blink8AXObject16ActiveDescendantEv = comdat any

$_ZNK5blink8AXObject12AutoCompleteEv = comdat any

$_ZNK5blink8AXObject16AriaOwnsElementsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE = comdat any

$_ZNK5blink8AXObject23AriaDescribedbyElementsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE = comdat any

$_ZNK5blink8AXObject12ErrorMessageEv = comdat any

$_ZNK5blink8AXObject20SupportsARIADraggingEv = comdat any

$_ZNK5blink8AXObject11DropeffectsERN3WTF6VectorIN2ax5mojom10DropeffectELj0ENS1_18PartitionAllocatorEEE = comdat any

$_ZNK5blink8AXObject8PosInSetEv = comdat any

$_ZNK5blink8AXObject7SetSizeEv = comdat any

$_ZNK5blink8AXObject20AccessibilityHitTestERKNS_8IntPointE = comdat any

$_ZNK5blink8AXObject15CanHaveChildrenEv = comdat any

$_ZNK5blink8AXObject15SelectedOptionsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE = comdat any

$_ZNK5blink8AXObject24EstimatedLoadingProgressEv = comdat any

$_ZNK5blink8AXObject13AnchorElementEv = comdat any

$_ZNK5blink8AXObject13ActionElementEv = comdat any

$_ZNK5blink8AXObject12HasAttributeERKNS_13QualifiedNameE = comdat any

$_ZNK5blink8AXObject12GetAttributeERKNS_13QualifiedNameE = comdat any

$_ZNK5blink8AXObject11IsDataTableEv = comdat any

$_ZNK5blink8AXObject16GetSortDirectionEv = comdat any

$_ZNK5blink8AXObject12HeaderObjectEv = comdat any

$_ZNK5blink8AXObject29GetScrollableAreaIfScrollableEv = comdat any

$_ZN5blink8AXObject15ChildrenChangedEv = comdat any

$_ZN5blink8AXObject29HandleActiveDescendantChangedEv = comdat any

$_ZN5blink8AXObject26HandleAutofillStateChangedENS_18WebAXAutofillStateE = comdat any

$_ZN5blink8AXObject25HandleAriaExpandedChangedEv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv = comdat any

$_ZN5blink14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17AXObjectCacheImplELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_17AXObjectCacheImplEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_8AXObjectEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_8AXObjectEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_8AXObjectEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_8AXObjectEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKS5_SH_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE = comdat any

$_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j = comdat any

$_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE4FillIS2_EENSt3__19enable_ifIXntsrT_19kIsGarbageCollectedEvE4typeERKS1_j = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm = comdat any

$_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv = comdat any

$_ZN3WTF12StringAppendINS0_INS_6StringEPKcEENS_12AtomicStringEEC2ES4_S5_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEENS_12AtomicStringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEENS_12AtomicStringEE7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEENS_12AtomicStringEE7WriteToEPDs = comdat any

$_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS5_IS8_EEE21__push_back_slow_pathIS8_EEvOT_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingERKS2_ = comdat any

$_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_N4base17RepeatingCallbackIFvPNS1_8AXObjectEPN2ui10AXNodeDataERKNS_12AtomicStringEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSK_ISF_EEEESL_NS_18PartitionAllocatorEE6LookupERKS2_ = comdat any

$_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6LookupERKS2_ = comdat any

$_ZN3WTF15ConstructTraitsIN5blink13IgnoredReasonENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_13IgnoredReasonEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14AccessibleNodeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_14AccessibleNodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8AXObjectEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRNS1_10WeakMemberIS3_EEEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS4_SG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_ = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_23NameSourceRelatedObjectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_8AXObjectEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv = comdat any

$_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE8FinalizeEv = comdat any

$_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEEaSERKS6_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_23NameSourceRelatedObjectEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS3_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_23NameSourceRelatedObjectEE4CallIJRPNS_8AXObjectERN3WTF6StringEEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_23NameSourceRelatedObjectEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_23NameSourceRelatedObjectEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_23NameSourceRelatedObjectEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8AXObjectEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8AXObjectEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8AXObjectEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8AXObjectEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_8AXObjectEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_8AXObjectEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_23NameSourceRelatedObjectEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_23NameSourceRelatedObjectEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8AXObjectEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8AXObjectEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink8AXObject24is_loading_inline_boxes_E = hidden local_unnamed_addr global i8 0, align 1
@_ZN5blink8AXObject26number_of_live_ax_objects_E = hidden local_unnamed_addr global i32 0, align 4
@_ZTVN5blink8AXObjectE = hidden unnamed_addr constant { [164 x i8*] } { [164 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::AXObject"*)* @_ZN5blink8AXObjectD2Ev to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZN5blink8AXObjectD0Ev to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)* @_ZNK5blink8AXObject5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::AXObject"*)* @_ZN5blink8AXObject4InitEPS0_ to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZN5blink8AXObject6DetachEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)* @_ZNK5blink8AXObject29GetAOMPropertyOrARIAAttributeENS_17AOMStringPropertyE to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, i32, i8*)* @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_18AOMBooleanPropertyERb to i8*), i8* bitcast (%"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17GetAccessibleNodeEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14IsImageMapLinkEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14IsAXNodeObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16IsAXLayoutObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17IsAXInlineTextBoxEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject6IsListEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11IsAXListBoxEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17IsAXListBoxOptionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10IsMenuListEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16IsMenuListOptionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15IsMenuListPopupEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12IsMockObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject19IsProgressIndicatorEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14IsAXRadioInputEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8IsSliderEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject19IsValidationMessageEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15IsVirtualObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsControlEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsDefaultEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10IsFieldsetEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12IsInputImageEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject13IsNativeImageEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject18IsNativeSpinButtonEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14IsNativeSliderEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12IsSpinButtonEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject19IsAutofillAvailableEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11IsClickableEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10IsExpandedEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsFocusedEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsGrabbedEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsHoveredEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject20IsLineBreakingObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8IsLinkedEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8IsLoadedEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject7IsModalEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17IsMultiSelectableEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11IsOffScreenEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10IsRequiredEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10IsSelectedEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject19IsSelectedFromFocusEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject22IsSelectedOptionActiveEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject19IsNotUserSelectableEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsVisibleEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsVisitedEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, %"class.blink::HeapVector.3453"*)* @_ZNK5blink8AXObject29ComputeAccessibilityIsIgnoredEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*, %"class.blink::HeapVector.3453"*)* @_ZNK5blink8AXObject22DefaultObjectInclusionEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.3084"*)* @_ZNK5blink8AXObject7GetNameERN2ax5mojom8NameFromEPNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32, i32*, %"class.blink::HeapVector.3084"*)* @_ZNK5blink8AXObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32, i32*, %"class.blink::HeapVector.3845"*, %"class.blink::HeapVector.3727"*)* @_ZNK5blink8AXObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_17DescriptionSourceELj0EEEPNS6_INS_6MemberINS_23NameSourceRelatedObjectEEELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32)* @_ZNK5blink8AXObject11PlaceholderEN2ax5mojom8NameFromE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32)* @_ZNK5blink8AXObject5TitleEN2ax5mojom8NameFromE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i1, i1, %"class.blink::HeapHashSet.3721"*, i32*, %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*)* @_ZNK5blink8AXObject15TextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSG_INS_10NameSourceELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*, %"class.blink::HeapHashSet.3721"*, i1)* @_ZNK5blink8AXObject19TextFromDescendantsERNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEb to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9AccessKeyEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15BackgroundColorEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8GetColorEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10ColorValueEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject24CanvasHasFallbackContentEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject18ComputedFontFamilyEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject26FontFamilyForSerializationEv to i8*), i8* bitcast (float (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8FontSizeEv to i8*), i8* bitcast (float (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10FontWeightEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12HeadingLevelEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17HierarchicalLevelEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*, %"class.blink::IntSize"*)* @_ZNK5blink8AXObject12ImageDataUrlERKNS_7IntSizeE to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16InPageLinkTargetEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11OrientationEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12GetListStyleEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12GetTextAlignEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16GetTextDirectionEv to i8*), i8* bitcast (float (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject13GetTextIndentEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15GetTextPositionEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, i32*, i32*, i32*, i32*)* @_ZNK5blink8AXObject34GetTextStyleAndTextDecorationStyleEPiPN2ax5mojom19TextDecorationStyleES5_S5_ to i8*), i8* bitcast (void (%"class.blink::HeapVector.3084"*, %"class.blink::AXObject"*)* @_ZNK5blink8AXObject19RadioButtonsInGroupEv to i8*), i8* bitcast (void (%"class.blink::KURL"*, %"class.blink::AXObject"*)* @_ZNK5blink8AXObject3UrlEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12ChooserPopupEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZN5blink8AXObject28LoadInlineTextBoxesRecursiveEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10NextOnLineEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14PreviousOnLineEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.WTF::Vector.3757"*)* @_ZNK5blink8AXObject20TextCharacterOffsetsERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.WTF::Vector.3757"*, %"class.WTF::Vector.3757"*)* @_ZNK5blink8AXObject17GetWordBoundariesERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEES5_ to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10TextLengthEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*, i32)* @_ZNK5blink8AXObject29TextOffsetInFormattingContextEi to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*, i32)* @_ZNK5blink8AXObject21TextOffsetInContainerEi to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject19GetAriaCurrentStateEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15GetInvalidStateEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16AriaInvalidValueEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, float*)* @_ZNK5blink8AXObject13ValueForRangeEPf to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, float*)* @_ZNK5blink8AXObject16MaxValueForRangeEPf to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, float*)* @_ZNK5blink8AXObject16MinValueForRangeEPf to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, float*)* @_ZNK5blink8AXObject17StepValueForRangeEPf to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject18GetValueForControlEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject46SlowGetValueForControlIncludingContentEditableEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11RestrictionEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject26DetermineAccessibilityRoleEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17AriaRoleAttributeEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZN5blink8AXObject16ActiveDescendantEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12AutoCompleteEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::HeapVector.3084"*)* @_ZNK5blink8AXObject16AriaOwnsElementsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::HeapVector.3084"*)* @_ZNK5blink8AXObject23AriaDescribedbyElementsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12ErrorMessageEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8HasPopupEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14IsEditableRootEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject30HasContentEditableAttributeSetEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject20SupportsARIADraggingEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.WTF::Vector.3846"*)* @_ZNK5blink8AXObject11DropeffectsERN3WTF6VectorIN2ax5mojom10DropeffectELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8PosInSetEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject7SetSizeEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16LiveRegionStatusEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject18LiveRegionRelevantEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)* @_ZNK5blink8AXObject17GetRelativeBoundsEPPS0_RNS_9FloatRectER10SkMatrix44Pb to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*, %"class.blink::IntPoint"*)* @_ZNK5blink8AXObject20AccessibilityHitTestERKNS_8IntPointE to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15CanHaveChildrenEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject13ClearChildrenEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::HeapVector.3084"*)* @_ZNK5blink8AXObject15SelectedOptionsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (double (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject24EstimatedLoadingProgressEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12RootScrollerEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject7GetNodeEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15GetLayoutObjectEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject13AnchorElementEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject13ActionElementEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8LanguageEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)* @_ZNK5blink8AXObject12HasAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)* @_ZNK5blink8AXObject12GetAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11IsDataTableEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11ColumnCountEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8RowCountEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::HeapVector.3084"*)* @_ZNK5blink8AXObject13ColumnHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::HeapVector.3084"*)* @_ZNK5blink8AXObject10RowHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*, i32, i32)* @_ZNK5blink8AXObject19CellForColumnAndRowEjj to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11ColumnIndexEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8RowIndexEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10ColumnSpanEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject7RowSpanEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16GetSortDirectionEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12HeaderObjectEv to i8*), i8* bitcast (%"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject29GetScrollableAreaIfScrollableEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject35InternalSetAccessibilityFocusActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject37InternalClearAccessibilityFocusActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject23OnNativeDecrementActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject19OnNativeClickActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject19OnNativeFocusActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject23OnNativeIncrementActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, i1)* @_ZN5blink8AXObject25OnNativeSetSelectedActionEb to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject55OnNativeSetSequentialFocusNavigationStartingPointActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, %"class.WTF::String"*)* @_ZN5blink8AXObject22OnNativeSetValueActionERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZN5blink8AXObject15ChildrenChangedEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZN5blink8AXObject29HandleActiveDescendantChangedEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, i32)* @_ZN5blink8AXObject26HandleAutofillStateChangedENS_18WebAXAutofillStateE to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZN5blink8AXObject25HandleAriaExpandedChangedEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZN5blink8AXObject16SelectionChangedEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"struct.ui::AXNodeData"*)* @_ZNK5blink8AXObject25SerializeMarkerAttributesEPN2ui10AXNodeDataE to i8*)] }, align 8
@.str = private unnamed_addr constant [68 x i8] c"../../third_party/blink/renderer/modules/accessibility/ax_object.cc\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"!is_loading_inline_boxes_\00", align 1
@.str.2 = private unnamed_addr constant [105 x i8] c"Should not be attempting to detach object while in the middle of recursively loading inline text boxes: \00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"!ax_parent || !ax_parent->IsDetached()\00", align 1
@.str.4 = private unnamed_addr constant [42 x i8] c"Computed parent should never be detached:\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"\0A* Child: \00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"\0A* Parent: \00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.7 = private unnamed_addr constant [10 x i8] c"#document\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"class\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"mixed\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@_ZN5blink16input_type_names9kCheckboxE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names9kPasswordE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names10kInertAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names7kIdAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kLangAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names18kAriaLabeledbyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names19kAriaLabelledbyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kAriaLabelAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kTitleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names20kAriaDescribedbyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.11 = private unnamed_addr constant [9 x i8] c"spelling\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"grammar\00", align 1
@_ZZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties = internal global i64 0, align 8
@.str.13 = private unnamed_addr constant [6 x i8] c"ARIA-\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@_ZZNK5blink8AXObject16LiveRegionStatusEvE30s_live_region_status_assertive = internal global %"class.WTF::StaticSingleton.3764" zeroinitializer, align 8
@_ZGVZNK5blink8AXObject16LiveRegionStatusEvE30s_live_region_status_assertive = internal global i64 0, align 8
@_ZZNK5blink8AXObject16LiveRegionStatusEvE27s_live_region_status_polite = internal global %"class.WTF::StaticSingleton.3764" zeroinitializer, align 8
@_ZGVZNK5blink8AXObject16LiveRegionStatusEvE27s_live_region_status_polite = internal global i64 0, align 8
@_ZZNK5blink8AXObject16LiveRegionStatusEvE24s_live_region_status_off = internal global %"class.WTF::StaticSingleton.3764" zeroinitializer, align 8
@_ZGVZNK5blink8AXObject16LiveRegionStatusEvE24s_live_region_status_off = internal global i64 0, align 8
@_ZZNK5blink8AXObject18LiveRegionRelevantEvE30s_default_live_region_relevant = internal global %"class.WTF::StaticSingleton.3764" zeroinitializer, align 8
@_ZGVZNK5blink8AXObject18LiveRegionRelevantEvE30s_default_live_region_relevant = internal global i64 0, align 8
@_ZN5blink10html_names24kAriaRoledescriptionAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.15 = private unnamed_addr constant [71 x i8] c"Should not attempt to clear children while loading inline text boxes: \00", align 1
@_ZN5blink10html_names11kUsemapAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@__const._ZNK5blink8AXObject27GetBoundsInFrameCoordinatesEv.transform = private unnamed_addr constant %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }>, align 4
@_ZN5blink16event_type_names20kAccessibledecrementE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names16kAccessibleclickE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names16kAccessiblefocusE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names20kAccessibleincrementE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names25kAccessiblescrollintoviewE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names22kAccessiblecontextmenuE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names13kAriaOwnsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZZN5blink8AXObject24AriaRoleStringToRoleEnumERKN3WTF6StringEE8role_map = internal unnamed_addr global %"class.WTF::HashMap.3825"* null, align 8
@_ZGVZN5blink8AXObject24AriaRoleStringToRoleEnumERKN3WTF6StringEE8role_map = internal global i64 0, align 8
@_ZZN5blink8AXObject12ARIARoleNameEN2ax5mojom4RoleEE21aria_role_name_vector = internal unnamed_addr global %"class.WTF::Vector.284"* null, align 8
@_ZGVZN5blink8AXObject12ARIARoleNameEN2ax5mojom4RoleEE21aria_role_name_vector = internal global i64 0, align 8
@.str.16 = private unnamed_addr constant [12 x i8] c" (detached)\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c" axid#\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c" aria-owns=\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c" aria-activedescendant=\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c" focused\00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c" isAriaOwned\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c" isIgnored\00", align 1
@.str.24 = private unnamed_addr constant [19 x i8] c" isRemovedFromTree\00", align 1
@.str.25 = private unnamed_addr constant [24 x i8] c" inUserAgentShadowRoot:\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c" inShadowRoot:\00", align 1
@.str.27 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.28 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c" hasShadowRoot\00", align 1
@.str.30 = private unnamed_addr constant [17 x i8] c" isDisplayLocked\00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c" ariaHidden\00", align 1
@.str.32 = private unnamed_addr constant [16 x i8] c" ariaHiddenRoot\00", align 1
@.str.33 = private unnamed_addr constant [16 x i8] c" isHiddenViaCSS\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c" isInert\00", align 1
@.str.35 = private unnamed_addr constant [23 x i8] c" needsToUpdateChildren\00", align 1
@.str.36 = private unnamed_addr constant [12 x i8] c" #children=\00", align 1
@.str.37 = private unnamed_addr constant [15 x i8] c" missingLayout\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c" name=\00", align 1
@.str.39 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.40 = private unnamed_addr constant [19 x i8] c"<AXObject nullptr>\00", align 1
@_ZN5blink17AXObjectCacheImpl17use_ax_menu_list_E = external local_unnamed_addr global i8, align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink10html_names10kClassAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZTVN5blink27AXNodeDataAOMPropertyClientE = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase27is_inert_attribute_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink26RuntimeEnabledFeaturesBase46is_accessibility_expose_ignored_nodes_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase45is_accessibility_expose_display_none_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase45is_accessibility_expose_html_element_enabled_E = external local_unnamed_addr global i8, align 1
@.str.41 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.42 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.43 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.44 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.45 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@.str.46 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.47 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@.str.48 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.49 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@.str.50 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.51 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_8AXObjectEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_8AXObjectEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_8AXObjectEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_8AXObjectEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.52 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberIKNS1_8AXObjectEEES7_NS_17IdentityExtractorENS_10MemberHashIS6_EENS_10HashTraitsIS7_EESC_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [366 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<const blink::AXObject>, blink::Member<const blink::AXObject>, WTF::IdentityExtractor, WTF::MemberHash<const blink::AXObject>, WTF::HashTraits<blink::Member<const blink::AXObject> >, WTF::HashTraits<blink::Member<const blink::AXObject> >, blink::HeapAllocator> >]\00", align 1
@.str.53 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink12_GLOBAL__N_110kAriaRolesE = internal constant [127 x %"struct.blink::(anonymous namespace)::RoleEntry"] [%"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i32 0, i32 0), i32 2 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.55, i32 0, i32 0), i32 3 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.56, i32 0, i32 0), i32 5 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.57, i32 0, i32 0), i32 6 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i32 0, i32 0), i32 8 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.59, i32 0, i32 0), i32 9 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.60, i32 0, i32 0), i32 10 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i32 0, i32 0), i32 12 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i32 0, i32 0), i32 14 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i32 0, i32 0), i32 17 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.64, i32 0, i32 0), i32 15 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i32 0, i32 0), i32 20 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.66, i32 0, i32 0), i32 21 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i32 0, i32 0), i32 24 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.68, i32 0, i32 0), i32 23 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.69, i32 0, i32 0), i32 27 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.70, i32 0, i32 0), i32 30 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.71, i32 0, i32 0), i32 25 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i32 0, i32 0), i32 36 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.73, i32 0, i32 0), i32 37 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.74, i32 0, i32 0), i32 39 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 40 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.76, i32 0, i32 0), i32 41 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.77, i32 0, i32 0), i32 42 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.78, i32 0, i32 0), i32 43 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.79, i32 0, i32 0), i32 44 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.80, i32 0, i32 0), i32 45 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.81, i32 0, i32 0), i32 46 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.82, i32 0, i32 0), i32 47 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.83, i32 0, i32 0), i32 48 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.84, i32 0, i32 0), i32 49 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.85, i32 0, i32 0), i32 50 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.86, i32 0, i32 0), i32 51 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.87, i32 0, i32 0), i32 52 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.88, i32 0, i32 0), i32 53 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.89, i32 0, i32 0), i32 54 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.90, i32 0, i32 0), i32 55 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.91, i32 0, i32 0), i32 56 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.92, i32 0, i32 0), i32 57 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.93, i32 0, i32 0), i32 58 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.94, i32 0, i32 0), i32 59 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.95, i32 0, i32 0), i32 60 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.96, i32 0, i32 0), i32 61 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.97, i32 0, i32 0), i32 62 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.98, i32 0, i32 0), i32 63 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.99, i32 0, i32 0), i32 64 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.100, i32 0, i32 0), i32 65 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.101, i32 0, i32 0), i32 66 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.102, i32 0, i32 0), i32 67 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.103, i32 0, i32 0), i32 68 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.104, i32 0, i32 0), i32 69 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.105, i32 0, i32 0), i32 70 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.106, i32 0, i32 0), i32 71 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.107, i32 0, i32 0), i32 72 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.108, i32 0, i32 0), i32 73 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.109, i32 0, i32 0), i32 74 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.110, i32 0, i32 0), i32 75 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.111, i32 0, i32 0), i32 76 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.112, i32 0, i32 0), i32 77 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.113, i32 0, i32 0), i32 78 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.114, i32 0, i32 0), i32 79 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.115, i32 0, i32 0), i32 80 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.116, i32 0, i32 0), i32 82 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.117, i32 0, i32 0), i32 83 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.118, i32 0, i32 0), i32 85 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.119, i32 0, i32 0), i32 88 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.120, i32 0, i32 0), i32 89 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.121, i32 0, i32 0), i32 90 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.122, i32 0, i32 0), i32 91 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.123, i32 0, i32 0), i32 92 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.124, i32 0, i32 0), i32 93 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.125, i32 0, i32 0), i32 14 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.126, i32 0, i32 0), i32 94 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.127, i32 0, i32 0), i32 97 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.128, i32 0, i32 0), i32 100 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.129, i32 0, i32 0), i32 26 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.130, i32 0, i32 0), i32 111 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.131, i32 0, i32 0), i32 112 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.132, i32 0, i32 0), i32 113 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.133, i32 0, i32 0), i32 116 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.134, i32 0, i32 0), i32 118 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.135, i32 0, i32 0), i32 119 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.136, i32 0, i32 0), i32 121 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.137, i32 0, i32 0), i32 122 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.138, i32 0, i32 0), i32 123 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.139, i32 0, i32 0), i32 124 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.140, i32 0, i32 0), i32 125 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.141, i32 0, i32 0), i32 126 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.142, i32 0, i32 0), i32 127 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.143, i32 0, i32 0), i32 120 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.144, i32 0, i32 0), i32 130 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.145, i32 0, i32 0), i32 131 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.146, i32 0, i32 0), i32 0 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.147, i32 0, i32 0), i32 0 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.148, i32 0, i32 0), i32 132 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.149, i32 0, i32 0), i32 114 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.150, i32 0, i32 0), i32 134 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.151, i32 0, i32 0), i32 141 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.152, i32 0, i32 0), i32 142 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.153, i32 0, i32 0), i32 143 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.154, i32 0, i32 0), i32 144 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.155, i32 0, i32 0), i32 146 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.156, i32 0, i32 0), i32 147 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.157, i32 0, i32 0), i32 148 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.158, i32 0, i32 0), i32 151 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.159, i32 0, i32 0), i32 153 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.160, i32 0, i32 0), i32 154 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.161, i32 0, i32 0), i32 158 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.162, i32 0, i32 0), i32 156 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.163, i32 0, i32 0), i32 157 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.164, i32 0, i32 0), i32 160 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.165, i32 0, i32 0), i32 161 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i32 0, i32 0), i32 162 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.167, i32 0, i32 0), i32 164 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.168, i32 0, i32 0), i32 165 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.169, i32 0, i32 0), i32 168 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.170, i32 0, i32 0), i32 166 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.171, i32 0, i32 0), i32 167 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.172, i32 0, i32 0), i32 170 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.173, i32 0, i32 0), i32 171 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.174, i32 0, i32 0), i32 173 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i32 0, i32 0), i32 174 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.176, i32 0, i32 0), i32 177 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.177, i32 0, i32 0), i32 178 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.178, i32 0, i32 0), i32 179 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.179, i32 0, i32 0), i32 180 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.180, i32 0, i32 0), i32 181 }], align 16
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapINS_6StringEN2ax5mojom4RoleENS_15CaseFoldingHashENS_10HashTraitsIS2_EEN5blink12_GLOBAL__N_114RoleHashTraitsENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [213 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::HashMap<WTF::String, ax::mojom::Role, WTF::CaseFoldingHash, WTF::HashTraits<WTF::String>, blink::(anonymous namespace)::RoleHashTraits, WTF::PartitionAllocator>]\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"alert\00", align 1
@.str.55 = private unnamed_addr constant [12 x i8] c"alertdialog\00", align 1
@.str.56 = private unnamed_addr constant [12 x i8] c"application\00", align 1
@.str.57 = private unnamed_addr constant [8 x i8] c"article\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"banner\00", align 1
@.str.59 = private unnamed_addr constant [11 x i8] c"blockquote\00", align 1
@.str.60 = private unnamed_addr constant [7 x i8] c"button\00", align 1
@.str.61 = private unnamed_addr constant [8 x i8] c"caption\00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c"cell\00", align 1
@.str.63 = private unnamed_addr constant [5 x i8] c"code\00", align 1
@.str.64 = private unnamed_addr constant [9 x i8] c"checkbox\00", align 1
@.str.65 = private unnamed_addr constant [13 x i8] c"columnheader\00", align 1
@.str.66 = private unnamed_addr constant [9 x i8] c"combobox\00", align 1
@.str.67 = private unnamed_addr constant [8 x i8] c"comment\00", align 1
@.str.68 = private unnamed_addr constant [14 x i8] c"complementary\00", align 1
@.str.69 = private unnamed_addr constant [12 x i8] c"contentinfo\00", align 1
@.str.70 = private unnamed_addr constant [11 x i8] c"definition\00", align 1
@.str.71 = private unnamed_addr constant [9 x i8] c"deletion\00", align 1
@.str.72 = private unnamed_addr constant [7 x i8] c"dialog\00", align 1
@.str.73 = private unnamed_addr constant [10 x i8] c"directory\00", align 1
@.str.74 = private unnamed_addr constant [13 x i8] c"doc-abstract\00", align 1
@.str.75 = private unnamed_addr constant [20 x i8] c"doc-acknowledgments\00", align 1
@.str.76 = private unnamed_addr constant [14 x i8] c"doc-afterword\00", align 1
@.str.77 = private unnamed_addr constant [13 x i8] c"doc-appendix\00", align 1
@.str.78 = private unnamed_addr constant [13 x i8] c"doc-backlink\00", align 1
@.str.79 = private unnamed_addr constant [16 x i8] c"doc-biblioentry\00", align 1
@.str.80 = private unnamed_addr constant [17 x i8] c"doc-bibliography\00", align 1
@.str.81 = private unnamed_addr constant [14 x i8] c"doc-biblioref\00", align 1
@.str.82 = private unnamed_addr constant [12 x i8] c"doc-chapter\00", align 1
@.str.83 = private unnamed_addr constant [13 x i8] c"doc-colophon\00", align 1
@.str.84 = private unnamed_addr constant [15 x i8] c"doc-conclusion\00", align 1
@.str.85 = private unnamed_addr constant [10 x i8] c"doc-cover\00", align 1
@.str.86 = private unnamed_addr constant [11 x i8] c"doc-credit\00", align 1
@.str.87 = private unnamed_addr constant [12 x i8] c"doc-credits\00", align 1
@.str.88 = private unnamed_addr constant [15 x i8] c"doc-dedication\00", align 1
@.str.89 = private unnamed_addr constant [12 x i8] c"doc-endnote\00", align 1
@.str.90 = private unnamed_addr constant [13 x i8] c"doc-endnotes\00", align 1
@.str.91 = private unnamed_addr constant [13 x i8] c"doc-epigraph\00", align 1
@.str.92 = private unnamed_addr constant [13 x i8] c"doc-epilogue\00", align 1
@.str.93 = private unnamed_addr constant [11 x i8] c"doc-errata\00", align 1
@.str.94 = private unnamed_addr constant [12 x i8] c"doc-example\00", align 1
@.str.95 = private unnamed_addr constant [13 x i8] c"doc-footnote\00", align 1
@.str.96 = private unnamed_addr constant [13 x i8] c"doc-foreword\00", align 1
@.str.97 = private unnamed_addr constant [13 x i8] c"doc-glossary\00", align 1
@.str.98 = private unnamed_addr constant [13 x i8] c"doc-glossref\00", align 1
@.str.99 = private unnamed_addr constant [10 x i8] c"doc-index\00", align 1
@.str.100 = private unnamed_addr constant [17 x i8] c"doc-introduction\00", align 1
@.str.101 = private unnamed_addr constant [12 x i8] c"doc-noteref\00", align 1
@.str.102 = private unnamed_addr constant [11 x i8] c"doc-notice\00", align 1
@.str.103 = private unnamed_addr constant [14 x i8] c"doc-pagebreak\00", align 1
@.str.104 = private unnamed_addr constant [15 x i8] c"doc-pagefooter\00", align 1
@.str.105 = private unnamed_addr constant [15 x i8] c"doc-pageheader\00", align 1
@.str.106 = private unnamed_addr constant [13 x i8] c"doc-pagelist\00", align 1
@.str.107 = private unnamed_addr constant [9 x i8] c"doc-part\00", align 1
@.str.108 = private unnamed_addr constant [12 x i8] c"doc-preface\00", align 1
@.str.109 = private unnamed_addr constant [13 x i8] c"doc-prologue\00", align 1
@.str.110 = private unnamed_addr constant [14 x i8] c"doc-pullquote\00", align 1
@.str.111 = private unnamed_addr constant [8 x i8] c"doc-qna\00", align 1
@.str.112 = private unnamed_addr constant [13 x i8] c"doc-subtitle\00", align 1
@.str.113 = private unnamed_addr constant [8 x i8] c"doc-tip\00", align 1
@.str.114 = private unnamed_addr constant [8 x i8] c"doc-toc\00", align 1
@.str.115 = private unnamed_addr constant [9 x i8] c"document\00", align 1
@.str.116 = private unnamed_addr constant [9 x i8] c"emphasis\00", align 1
@.str.117 = private unnamed_addr constant [5 x i8] c"feed\00", align 1
@.str.118 = private unnamed_addr constant [7 x i8] c"figure\00", align 1
@.str.119 = private unnamed_addr constant [5 x i8] c"form\00", align 1
@.str.120 = private unnamed_addr constant [8 x i8] c"generic\00", align 1
@.str.121 = private unnamed_addr constant [18 x i8] c"graphics-document\00", align 1
@.str.122 = private unnamed_addr constant [16 x i8] c"graphics-object\00", align 1
@.str.123 = private unnamed_addr constant [16 x i8] c"graphics-symbol\00", align 1
@.str.124 = private unnamed_addr constant [5 x i8] c"grid\00", align 1
@.str.125 = private unnamed_addr constant [9 x i8] c"gridcell\00", align 1
@.str.126 = private unnamed_addr constant [6 x i8] c"group\00", align 1
@.str.127 = private unnamed_addr constant [8 x i8] c"heading\00", align 1
@.str.128 = private unnamed_addr constant [4 x i8] c"img\00", align 1
@.str.129 = private unnamed_addr constant [10 x i8] c"insertion\00", align 1
@.str.130 = private unnamed_addr constant [5 x i8] c"link\00", align 1
@.str.131 = private unnamed_addr constant [5 x i8] c"list\00", align 1
@.str.132 = private unnamed_addr constant [8 x i8] c"listbox\00", align 1
@.str.133 = private unnamed_addr constant [9 x i8] c"listitem\00", align 1
@.str.134 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.135 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.136 = private unnamed_addr constant [8 x i8] c"marquee\00", align 1
@.str.137 = private unnamed_addr constant [5 x i8] c"math\00", align 1
@.str.138 = private unnamed_addr constant [5 x i8] c"menu\00", align 1
@.str.139 = private unnamed_addr constant [8 x i8] c"menubar\00", align 1
@.str.140 = private unnamed_addr constant [9 x i8] c"menuitem\00", align 1
@.str.141 = private unnamed_addr constant [17 x i8] c"menuitemcheckbox\00", align 1
@.str.142 = private unnamed_addr constant [14 x i8] c"menuitemradio\00", align 1
@.str.143 = private unnamed_addr constant [5 x i8] c"mark\00", align 1
@.str.144 = private unnamed_addr constant [6 x i8] c"meter\00", align 1
@.str.145 = private unnamed_addr constant [11 x i8] c"navigation\00", align 1
@.str.146 = private unnamed_addr constant [13 x i8] c"presentation\00", align 1
@.str.147 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.148 = private unnamed_addr constant [5 x i8] c"note\00", align 1
@.str.149 = private unnamed_addr constant [7 x i8] c"option\00", align 1
@.str.150 = private unnamed_addr constant [10 x i8] c"paragraph\00", align 1
@.str.151 = private unnamed_addr constant [12 x i8] c"progressbar\00", align 1
@.str.152 = private unnamed_addr constant [6 x i8] c"radio\00", align 1
@.str.153 = private unnamed_addr constant [11 x i8] c"radiogroup\00", align 1
@.str.154 = private unnamed_addr constant [7 x i8] c"region\00", align 1
@.str.155 = private unnamed_addr constant [4 x i8] c"row\00", align 1
@.str.156 = private unnamed_addr constant [9 x i8] c"rowgroup\00", align 1
@.str.157 = private unnamed_addr constant [10 x i8] c"rowheader\00", align 1
@.str.158 = private unnamed_addr constant [10 x i8] c"scrollbar\00", align 1
@.str.159 = private unnamed_addr constant [7 x i8] c"search\00", align 1
@.str.160 = private unnamed_addr constant [10 x i8] c"searchbox\00", align 1
@.str.161 = private unnamed_addr constant [10 x i8] c"separator\00", align 1
@.str.162 = private unnamed_addr constant [7 x i8] c"slider\00", align 1
@.str.163 = private unnamed_addr constant [11 x i8] c"spinbutton\00", align 1
@.str.164 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.165 = private unnamed_addr constant [7 x i8] c"strong\00", align 1
@.str.166 = private unnamed_addr constant [11 x i8] c"suggestion\00", align 1
@.str.167 = private unnamed_addr constant [7 x i8] c"switch\00", align 1
@.str.168 = private unnamed_addr constant [4 x i8] c"tab\00", align 1
@.str.169 = private unnamed_addr constant [6 x i8] c"table\00", align 1
@.str.170 = private unnamed_addr constant [8 x i8] c"tablist\00", align 1
@.str.171 = private unnamed_addr constant [9 x i8] c"tabpanel\00", align 1
@.str.172 = private unnamed_addr constant [5 x i8] c"term\00", align 1
@.str.173 = private unnamed_addr constant [8 x i8] c"textbox\00", align 1
@.str.174 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.175 = private unnamed_addr constant [6 x i8] c"timer\00", align 1
@.str.176 = private unnamed_addr constant [8 x i8] c"toolbar\00", align 1
@.str.177 = private unnamed_addr constant [8 x i8] c"tooltip\00", align 1
@.str.178 = private unnamed_addr constant [5 x i8] c"tree\00", align 1
@.str.179 = private unnamed_addr constant [9 x i8] c"treegrid\00", align 1
@.str.180 = private unnamed_addr constant [9 x i8] c"treeitem\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN2ax5mojom4RoleEEEEEPKcv = private unnamed_addr constant [95 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, ax::mojom::Role>]\00", align 1
@_ZN3WTF10StringImpl20kLatin1CaseFoldTableE = external local_unnamed_addr constant [256 x i16], align 16
@_ZN5blink26RuntimeEnabledFeaturesBase40is_keyboard_focusable_scrollers_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink12_GLOBAL__N_113kReverseRolesE = internal constant [7 x %"struct.blink::(anonymous namespace)::RoleEntry"] [%"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i32 0, i32 0), i32 95 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.60, i32 0, i32 0), i32 176 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.66, i32 0, i32 0), i32 138 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.69, i32 0, i32 0), i32 86 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.140, i32 0, i32 0), i32 128 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.66, i32 0, i32 0), i32 22 }, %"struct.blink::(anonymous namespace)::RoleEntry" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.66, i32 0, i32 0), i32 172 }], align 16
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [106 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<WTF::AtomicString, 0, WTF::PartitionAllocator>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::AtomicString]\00", align 1
@.str.181 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@.str.182 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.183 = private unnamed_addr constant [7 x i8] c"<null>\00", align 1
@.str.184 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.185 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.187 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.188 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.189 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZN5blink10html_names10kSelectTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kBrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kMapTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kOptionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13QualifiedNameEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::QualifiedName]\00", align 1
@_ZN5blink11g_null_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZN5blink10html_names9kInputTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.190 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.191 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_13IgnoredReasonENS_12VectorTraitsIS3_EEEEEEPKcv = private unnamed_addr constant [136 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::IgnoredReason, WTF::VectorTraits<blink::IgnoredReason> >]\00", align 1
@_ZN5blink10html_names10kDialogTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14AccessibleNodeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::AccessibleNode>, WTF::VectorTraits<blink::Member<blink::AccessibleNode> > >]\00", align 1
@_ZN5blink10html_names8kSlotTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kHTMLTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink9svg_names5kGTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink10html_names9kTableTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTbodyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTfootTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTheadTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kTrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kTdTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kThTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kCanvasTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kAreaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8AXObjectEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [157 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::AXObject>, WTF::VectorTraits<blink::Member<blink::AXObject> > >]\00", align 1
@_ZN5blink10html_names12kNoscriptTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink9svg_names9kTitleTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_10NameSourceENS_12VectorTraitsIS3_EEEEEEPKcv = private unnamed_addr constant [130 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::NameSource, WTF::VectorTraits<blink::NameSource> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_23NameSourceRelatedObjectEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [187 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::NameSourceRelatedObject>, WTF::VectorTraits<blink::Member<blink::NameSourceRelatedObject> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23NameSourceRelatedObjectEEEPKcv = private unnamed_addr constant [78 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NameSourceRelatedObject]\00", align 1
@_ZZN5blink11GCInfoTraitINS_23NameSourceRelatedObjectEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_23NameSourceRelatedObjectEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_23NameSourceRelatedObjectEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_23NameSourceRelatedObjectEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_23NameSourceRelatedObjectEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7ElementEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Element>, WTF::VectorTraits<blink::Member<blink::Element> > >]\00", align 1
@.str.192 = private unnamed_addr constant [12 x i8] c"ARIA-ATOMIC\00", align 1
@.str.193 = private unnamed_addr constant [10 x i8] c"ARIA-BUSY\00", align 1
@.str.194 = private unnamed_addr constant [14 x i8] c"ARIA-CONTROLS\00", align 1
@.str.195 = private unnamed_addr constant [13 x i8] c"ARIA-CURRENT\00", align 1
@.str.196 = private unnamed_addr constant [17 x i8] c"ARIA-DESCRIBEDBY\00", align 1
@.str.197 = private unnamed_addr constant [17 x i8] c"ARIA-DESCRIPTION\00", align 1
@.str.198 = private unnamed_addr constant [13 x i8] c"ARIA-DETAILS\00", align 1
@.str.199 = private unnamed_addr constant [16 x i8] c"ARIA-DROPEFFECT\00", align 1
@.str.200 = private unnamed_addr constant [12 x i8] c"ARIA-FLOWTO\00", align 1
@.str.201 = private unnamed_addr constant [13 x i8] c"ARIA-GRABBED\00", align 1
@.str.202 = private unnamed_addr constant [12 x i8] c"ARIA-HIDDEN\00", align 1
@.str.203 = private unnamed_addr constant [18 x i8] c"ARIA-KEYSHORTCUTS\00", align 1
@.str.204 = private unnamed_addr constant [10 x i8] c"ARIA-LIVE\00", align 1
@.str.205 = private unnamed_addr constant [10 x i8] c"ARIA-OWNS\00", align 1
@.str.206 = private unnamed_addr constant [14 x i8] c"ARIA-RELEVANT\00", align 1
@.str.207 = private unnamed_addr constant [21 x i8] c"ARIA-ROLEDESCRIPTION\00", align 1
@.str.208 = private unnamed_addr constant [10 x i8] c"assertive\00", align 1
@.str.209 = private unnamed_addr constant [7 x i8] c"polite\00", align 1
@.str.210 = private unnamed_addr constant [15 x i8] c"additions text\00", align 1
@_ZN5blink10html_names10kIFrameTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kFrameTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kTextareaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kImgTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.211 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8AXObjectEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8AXObjectEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8AXObjectEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8AXObjectEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_8AXObjectEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<const blink::AXObject>, WTF::VectorTraits<blink::Member<const blink::AXObject> > >]\00", align 1

@_ZN5blink8AXObjectD1Ev = hidden unnamed_addr alias void (%"class.blink::AXObject"*), void (%"class.blink::AXObject"*)* @_ZN5blink8AXObjectD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink14ToAXMarkerTypeENS_14DocumentMarker10MarkerTypeE(i32) local_unnamed_addr #0 {
  switch i32 %0, label %3 [
    i32 1, label %4
    i32 2, label %4
    i32 64, label %2
    i32 4, label %2
    i32 16, label %4
    i32 32, label %4
  ]

2:                                                ; preds = %1, %1
  br label %4

3:                                                ; preds = %1
  br label %4

4:                                                ; preds = %1, %1, %1, %1, %3, %2
  %5 = phi i32 [ 0, %3 ], [ 4, %2 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ]
  ret i32 %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8AXObjectC2ERNS_17AXObjectCacheImplE(%"class.blink::AXObject"* nocapture, %"class.blink::AXObjectCacheImpl"* dereferenceable(456)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [164 x i8*] }, { [164 x i8*] }* @_ZTVN5blink8AXObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %7 = bitcast %"class.blink::AXObject"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false)
  store i32 182, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 6
  %9 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 8
  %10 = bitcast %"class.blink::LayoutRect"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 20, i1 false)
  store i32 -1, i32* %9, align 4
  %11 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %12 = load i8, i8* %11, align 8
  %13 = and i8 %12, -24
  store i8 %13, i8* %11, align 8
  %14 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 10, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %16 = bitcast %"class.blink::AXObject"** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false)
  store %"class.blink::AXObjectCacheImpl"* %1, %"class.blink::AXObjectCacheImpl"** %15, align 8
  %17 = load i32, i32* @_ZN5blink8AXObject26number_of_live_ax_objects_E, align 4
  %18 = add i32 %17, 1
  store i32 %18, i32* @_ZN5blink8AXObject26number_of_live_ax_objects_E, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink8AXObjectD2Ev(%"class.blink::AXObject"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [164 x i8*] }, { [164 x i8*] }* @_ZTVN5blink8AXObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = load i32, i32* @_ZN5blink8AXObject26number_of_live_ax_objects_E, align 4
  %4 = add i32 %3, -1
  store i32 %4, i32* @_ZN5blink8AXObject26number_of_live_ax_objects_E, align 4
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink8AXObjectD0Ev(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #21
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8AXObject4InitEPS0_(%"class.blink::AXObject"*, %"class.blink::AXObject"*) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.blink::AXObject"* %0 to i32 (%"class.blink::AXObject"*)***
  %4 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %4, i64 101
  %6 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %5, align 8
  %7 = tail call i32 %6(%"class.blink::AXObject"* %0) #22
  %8 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2
  %10 = ptrtoint %"class.blink::AXObject"* %1 to i64
  %11 = bitcast %"class.blink::Member.3082"* %9 to i64*
  store atomic i64 %10, i64* %11 monotonic, align 8
  %12 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.blink::AXObject"* %1 to i8*
  %16 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %15) #22
  br label %17

17:                                               ; preds = %2, %14
  %18 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %19 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %19, i64 119
  %21 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.blink::AXObject"* %0) #22
  %23 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 4
  %24 = zext i1 %22 to i8
  store i8 %24, i8* %23, align 8
  %25 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %26 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %26, i64 124
  %28 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %27, align 8
  %29 = tail call %"class.blink::Node"* %28(%"class.blink::AXObject"* %0) #22
  %30 = icmp eq %"class.blink::Node"* %29, null
  br i1 %30, label %38, label %31

31:                                               ; preds = %17
  %32 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %33 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %32, align 8
  %34 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %25, align 8
  %35 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %34, i64 124
  %36 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %35, align 8
  %37 = tail call %"class.blink::Node"* %36(%"class.blink::AXObject"* %0) #22
  tail call void @_ZN5blink17AXObjectCacheImpl22MaybeNewRelationTargetERNS_4NodeEPNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %33, %"class.blink::Node"* dereferenceable(64) %37, %"class.blink::AXObject"* %0) #22
  br label %38

38:                                               ; preds = %17, %31
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8AXObject9SetParentEPS0_(%"class.blink::AXObject"* nocapture, %"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2
  %4 = ptrtoint %"class.blink::AXObject"* %1 to i64
  %5 = bitcast %"class.blink::Member.3082"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::AXObject"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #22
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

declare void @_ZN5blink17AXObjectCacheImpl22MaybeNewRelationTargetERNS_4NodeEPNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"* dereferenceable(64), %"class.blink::AXObject"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"*, i1 zeroext) local_unnamed_addr #2 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %6 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %5, align 8
  %7 = icmp eq %"class.blink::AXObjectCacheImpl"* %6, null
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %10 = load i8, i8* %9, align 8
  %11 = and i8 %10, -4
  %12 = or i8 %11, 1
  store i8 %12, i8* %9, align 8
  br label %281

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %6, i64 0, i32 10
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 8
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %15, %17
  br i1 %18, label %281, label %19

19:                                               ; preds = %13
  store i32 %15, i32* %16, align 4
  %20 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %20, align 8
  %22 = icmp eq %"class.blink::AXObject"* %21, null
  br i1 %22, label %23, label %30

23:                                               ; preds = %19
  %24 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %25 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %25, i64 124
  %27 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %26, align 8
  %28 = tail call %"class.blink::Node"* %27(%"class.blink::AXObject"* %0) #22
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %44, label %34

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %21, i64 0, i32 14, i32 0, i32 0
  %32 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %31, align 8
  %33 = icmp eq %"class.blink::AXObjectCacheImpl"* %32, null
  br i1 %33, label %44, label %54

34:                                               ; preds = %23
  %35 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %24, align 8
  %36 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %35, i64 124
  %37 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %36, align 8
  %38 = tail call %"class.blink::Node"* %37(%"class.blink::AXObject"* %0) #22
  %39 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %5, align 8
  %40 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %39, i64 0, i32 2, i32 0, i32 0
  %41 = load %"class.blink::Document"*, %"class.blink::Document"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %41, i64 0, i32 0, i32 0
  %43 = icmp eq %"class.blink::Node"* %38, %42
  br i1 %43, label %54, label %44

44:                                               ; preds = %34, %23, %30
  %45 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* %0) #22
  %46 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2
  %47 = ptrtoint %"class.blink::AXObject"* %45 to i64
  %48 = bitcast %"class.blink::Member.3082"* %46 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %44
  %52 = bitcast %"class.blink::AXObject"* %45 to i8*
  %53 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #22
  br label %54

54:                                               ; preds = %34, %51, %44, %30
  %55 = tail call zeroext i1 @_ZNK5blink8AXObject23ComputeIsHiddenViaStyleEv(%"class.blink::AXObject"* %0)
  %56 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %57 = zext i1 %55 to i8
  %58 = load i8, i8* %56, align 8
  %59 = shl nuw nsw i8 %57, 3
  %60 = and i8 %58, -9
  %61 = or i8 %60, %59
  store i8 %61, i8* %56, align 8
  %62 = tail call zeroext i1 @_ZNK5blink8AXObject26ComputeIsInertOrAriaHiddenEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXObject"* %0, %"class.blink::HeapVector.3453"* null)
  %63 = load i8, i8* %56, align 8
  %64 = lshr i8 %63, 2
  %65 = and i8 %64, 1
  %66 = zext i8 %65 to i32
  %67 = zext i1 %62 to i32
  %68 = icmp eq i32 %66, %67
  br i1 %68, label %90, label %69

69:                                               ; preds = %54
  %70 = zext i1 %62 to i8
  %71 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 4
  %72 = load i8, i8* %71, align 8, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %85

74:                                               ; preds = %69
  %75 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %76 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %75, align 8
  %77 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %76, i64 119
  %78 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %77, align 8
  %79 = tail call zeroext i1 %78(%"class.blink::AXObject"* %0) #22
  br i1 %79, label %80, label %85

80:                                               ; preds = %74
  store i8 1, i8* %71, align 8
  %81 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %82 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %82, i64 120
  %84 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %83, align 8
  tail call void %84(%"class.blink::AXObject"* %0) #22
  br label %85

85:                                               ; preds = %69, %74, %80
  %86 = load i8, i8* %56, align 8
  %87 = shl nuw nsw i8 %70, 2
  %88 = and i8 %86, -5
  %89 = or i8 %88, %87
  store i8 %89, i8* %56, align 8
  br label %90

90:                                               ; preds = %54, %85
  %91 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject16DisabledAncestorEv(%"class.blink::AXObject"* %0)
  %92 = icmp ne %"class.blink::AXObject"* %91, null
  %93 = zext i1 %92 to i8
  %94 = load i8, i8* %56, align 8
  %95 = shl nuw nsw i8 %93, 4
  %96 = and i8 %94, -17
  %97 = or i8 %95, %96
  store i8 %97, i8* %56, align 8
  %98 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*, %"class.blink::HeapVector.3453"*)***
  %99 = load i1 (%"class.blink::AXObject"*, %"class.blink::HeapVector.3453"*)**, i1 (%"class.blink::AXObject"*, %"class.blink::HeapVector.3453"*)*** %98, align 8
  %100 = getelementptr inbounds i1 (%"class.blink::AXObject"*, %"class.blink::HeapVector.3453"*)*, i1 (%"class.blink::AXObject"*, %"class.blink::HeapVector.3453"*)** %99, i64 51
  %101 = load i1 (%"class.blink::AXObject"*, %"class.blink::HeapVector.3453"*)*, i1 (%"class.blink::AXObject"*, %"class.blink::HeapVector.3453"*)** %100, align 8
  %102 = tail call zeroext i1 %101(%"class.blink::AXObject"* %0, %"class.blink::HeapVector.3453"* null) #22
  %103 = zext i1 %102 to i8
  br i1 %102, label %104, label %106

104:                                              ; preds = %90
  %105 = tail call zeroext i1 @_ZNK5blink8AXObject46ComputeAccessibilityIsIgnoredButIncludedInTreeEv(%"class.blink::AXObject"* %0)
  br label %106

106:                                              ; preds = %104, %90
  %107 = phi i1 [ false, %90 ], [ %105, %104 ]
  %108 = zext i1 %107 to i8
  br i1 %1, label %109, label %120

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, 102
  br i1 %112, label %120, label %113

113:                                              ; preds = %109
  %114 = xor i1 %102, true
  %115 = or i1 %107, %114
  %116 = load i8, i8* %56, align 8
  %117 = and i8 %116, 3
  %118 = icmp ne i8 %117, 1
  %119 = xor i1 %115, %118
  br label %120

120:                                              ; preds = %109, %113, %106
  %121 = phi i1 [ %119, %113 ], [ false, %109 ], [ false, %106 ]
  %122 = load i8, i8* %56, align 8
  %123 = and i8 %122, 1
  %124 = icmp ne i8 %123, 0
  %125 = xor i1 %102, %124
  br i1 %125, label %126, label %145

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %128 = load i32, i32* %127, align 4
  %129 = tail call zeroext i1 @_ZN2ui28CanHaveInlineTextBoxChildrenEN2ax5mojom4RoleE(i32 %128) #22
  br i1 %129, label %130, label %145

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 4
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %134, label %145

134:                                              ; preds = %130
  %135 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %136 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %135, align 8
  %137 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %136, i64 119
  %138 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %137, align 8
  %139 = tail call zeroext i1 %138(%"class.blink::AXObject"* %0) #22
  br i1 %139, label %140, label %145

140:                                              ; preds = %134
  store i8 1, i8* %131, align 8
  %141 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %142 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %142, i64 120
  %144 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %143, align 8
  tail call void %144(%"class.blink::AXObject"* %0) #22
  br label %145

145:                                              ; preds = %140, %134, %130, %126, %120
  %146 = load i8, i8* %56, align 8
  %147 = and i8 %146, -4
  %148 = shl nuw nsw i8 %108, 1
  %149 = or i8 %148, %103
  %150 = or i8 %149, %147
  store i8 %150, i8* %56, align 8
  %151 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %152 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %151, align 8
  %153 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %152, i64 124
  %154 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %153, align 8
  %155 = tail call %"class.blink::Node"* %154(%"class.blink::AXObject"* %0) #22
  %156 = icmp eq %"class.blink::Node"* %155, null
  br i1 %156, label %173, label %157

157:                                              ; preds = %145
  %158 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %151, align 8
  %159 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %158, i64 124
  %160 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %159, align 8
  %161 = tail call %"class.blink::Node"* %160(%"class.blink::AXObject"* %0) #22
  %162 = icmp eq %"class.blink::Node"* %161, null
  br i1 %162, label %173, label %163

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %161, i64 0, i32 3, i32 0, i32 0
  %165 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %165, i64 0, i32 2, i32 0, i32 0
  %167 = load %"class.blink::Document"*, %"class.blink::Document"** %166, align 8
  %168 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %167, i64 0, i32 0, i32 0
  %169 = icmp eq %"class.blink::Node"* %168, %161
  br i1 %169, label %170, label %173

170:                                              ; preds = %163
  %171 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 10
  %172 = bitcast %"class.blink::Member.3082"* %171 to i64*
  store atomic i64 0, i64* %172 monotonic, align 8
  br label %210

173:                                              ; preds = %157, %145, %163
  %174 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %175 = load i32, i32* %174, align 4
  %176 = icmp eq i32 %175, 102
  br i1 %176, label %177, label %180

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 10
  %179 = bitcast %"class.blink::Member.3082"* %178 to i64*
  store atomic i64 0, i64* %179 monotonic, align 8
  br label %210

180:                                              ; preds = %173
  %181 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %20, align 8
  %182 = icmp eq %"class.blink::AXObject"* %181, null
  br i1 %182, label %210, label %183

183:                                              ; preds = %180
  %184 = bitcast %"class.blink::AXObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)***
  %185 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)*** %184, align 8
  %186 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)** %185, i64 115
  %187 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)** %186, align 8
  %188 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %187(%"class.blink::AXObject"* %0) #22
  %189 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %188, i64 0, i32 0, i32 0, i32 0
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %190, null
  br i1 %191, label %196, label %192

192:                                              ; preds = %183
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 1
  %194 = load i32, i32* %193, align 4
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %200

196:                                              ; preds = %192, %183
  %197 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %20, align 8
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %197, i1 zeroext true) #22
  %198 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %197, i64 0, i32 10, i32 0, i32 0
  %199 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %198, align 8
  br label %200

200:                                              ; preds = %192, %196
  %201 = phi %"class.blink::AXObject"* [ %199, %196 ], [ %0, %192 ]
  %202 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 10
  %203 = ptrtoint %"class.blink::AXObject"* %201 to i64
  %204 = bitcast %"class.blink::Member.3082"* %202 to i64*
  store atomic i64 %203, i64* %204 monotonic, align 8
  %205 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %210, label %207

207:                                              ; preds = %200
  %208 = bitcast %"class.blink::AXObject"* %201 to i8*
  %209 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %208) #22
  br label %210

210:                                              ; preds = %180, %207, %200, %177, %170
  %211 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %151, align 8
  %212 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %211, i64 124
  %213 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %212, align 8
  %214 = tail call %"class.blink::Node"* %213(%"class.blink::AXObject"* %0) #22
  %215 = icmp eq %"class.blink::Node"* %214, null
  br i1 %215, label %224, label %216

216:                                              ; preds = %210
  %217 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %214, i64 0, i32 1
  %218 = load i32, i32* %217, align 8
  %219 = and i32 %218, 12
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %224

221:                                              ; preds = %216
  %222 = bitcast %"class.blink::Node"* %214 to %"class.blink::Element"*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22
  store i8 1, i8* %3, align 1
  %223 = call i32 @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_15AOMUIntPropertyERb(%"class.blink::Element"* nonnull %222, i32 0, i8* nonnull dereferenceable(1) %3) #22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22
  br label %224

224:                                              ; preds = %210, %216, %221
  %225 = phi i32 [ 0, %210 ], [ %223, %221 ], [ 0, %216 ]
  %226 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 11
  store i32 %225, i32* %226, align 8
  %227 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %151, align 8
  %228 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %227, i64 124
  %229 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %228, align 8
  %230 = call %"class.blink::Node"* %229(%"class.blink::AXObject"* %0) #22
  %231 = icmp eq %"class.blink::Node"* %230, null
  br i1 %231, label %240, label %232

232:                                              ; preds = %224
  %233 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %230, i64 0, i32 1
  %234 = load i32, i32* %233, align 8
  %235 = and i32 %234, 12
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %240

237:                                              ; preds = %232
  %238 = bitcast %"class.blink::Node"* %230 to %"class.blink::Element"*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22
  store i8 1, i8* %4, align 1
  %239 = call i32 @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_15AOMUIntPropertyERb(%"class.blink::Element"* nonnull %238, i32 4, i8* nonnull dereferenceable(1) %4) #22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22
  br label %240

240:                                              ; preds = %224, %232, %237
  %241 = phi i32 [ 0, %224 ], [ %239, %237 ], [ 0, %232 ]
  %242 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 12
  store i32 %241, i32* %242, align 4
  br i1 %121, label %243, label %248

243:                                              ; preds = %240
  %244 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %20, align 8
  %245 = icmp eq %"class.blink::AXObject"* %244, null
  br i1 %245, label %248, label %246

246:                                              ; preds = %243
  %247 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %5, align 8
  call void @_ZN5blink17AXObjectCacheImpl15ChildrenChangedEPNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %247, %"class.blink::AXObject"* nonnull %244) #22
  br label %248

248:                                              ; preds = %246, %243, %240
  %249 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %250 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %249, align 8
  %251 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %250, i64 125
  %252 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %251, align 8
  %253 = call %"class.blink::LayoutObject"* %252(%"class.blink::AXObject"* %0) #22
  %254 = icmp eq %"class.blink::LayoutObject"* %253, null
  br i1 %254, label %281, label %255

255:                                              ; preds = %248
  %256 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %249, align 8
  %257 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %256, i64 125
  %258 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %257, align 8
  %259 = call %"class.blink::LayoutObject"* %258(%"class.blink::AXObject"* %0) #22
  %260 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %259, i64 0, i32 4
  %261 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %260 to i96*
  %262 = load i96, i96* %261, align 4
  %263 = and i96 %262, 33554432
  %264 = icmp eq i96 %263, 0
  br i1 %264, label %281, label %265

265:                                              ; preds = %255
  %266 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %249, align 8
  %267 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %266, i64 125
  %268 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %267, align 8
  %269 = call %"class.blink::LayoutObject"* %268(%"class.blink::AXObject"* %0) #22
  %270 = bitcast %"class.blink::LayoutObject"* %269 to { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)***
  %271 = load { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)**, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*** %270, align 8
  %272 = getelementptr inbounds { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)** %271, i64 68
  %273 = load { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)** %272, align 8
  %274 = call { <2 x float>, <2 x float> } %273(%"class.blink::LayoutObject"* %269) #22
  %275 = extractvalue { <2 x float>, <2 x float> } %274, 0
  %276 = extractvalue { <2 x float>, <2 x float> } %274, 1
  %277 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 13
  %278 = bitcast %"class.blink::FloatRect"* %277 to <2 x float>*
  store <2 x float> %275, <2 x float>* %278, align 8
  %279 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 13, i32 1
  %280 = bitcast %"class.blink::FloatSize"* %279 to <2 x float>*
  store <2 x float> %276, <2 x float>* %280, align 8
  br label %281

281:                                              ; preds = %255, %248, %265, %13, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8AXObject6DetachEv(%"class.blink::AXObject"*) unnamed_addr #2 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %5 = load i8, i8* %4, align 8
  %6 = and i8 %5, -4
  %7 = or i8 %6, 1
  store i8 %7, i8* %4, align 8
  %8 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %9 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %8, align 8
  %10 = icmp eq %"class.blink::AXObjectCacheImpl"* %9, null
  br i1 %10, label %48, label %11

11:                                               ; preds = %1
  %12 = load i8, i8* @_ZN5blink8AXObject24is_loading_inline_boxes_E, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %38, label %14

14:                                               ; preds = %11
  %15 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #22
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 577, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #22
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #22
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.2, i64 0, i64 0), i64 104) #22
  %18 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #22
  %19 = call %"class.WTF::StringImpl"* @_ZNK5blink8AXObject8ToStringEbb(%"class.blink::AXObject"* %0, i1 zeroext true, i1 zeroext true)
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %20, align 8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3WTFlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6StringE(%"class.std::__1::basic_ostream"* dereferenceable(160) %17, %"class.WTF::String"* nonnull dereferenceable(8) %3) #22
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #22
  br label %37

37:                                               ; preds = %14, %33, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #22
  br label %38

38:                                               ; preds = %11, %37
  %39 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %40 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %40, i64 120
  %42 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %41, align 8
  call void %42(%"class.blink::AXObject"* %0) #22
  %43 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2
  %44 = bitcast %"class.blink::Member.3082"* %43 to i64*
  store atomic i64 0, i64* %44 monotonic, align 8
  %45 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14
  %46 = bitcast %"class.blink::Member.3091"* %45 to i64*
  store atomic i64 0, i64* %46 monotonic, align 8
  %47 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 4
  store i8 0, i8* %47, align 8
  br label %48

48:                                               ; preds = %1, %38
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2, align 8
  %4 = icmp eq %"class.blink::AXObjectCacheImpl"* %3, null
  ret i1 %4
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3WTFlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6StringE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #6

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject8ToStringEbb(%"class.blink::AXObject"*, i1 zeroext, i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca %"class.blink::HeapVector.3084", align 8
  %7 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %8 = alloca %"class.WTF::StringAppend.3839", align 8
  %9 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::StringAppend", align 8
  %13 = alloca %"class.WTF::StringAppend.3839", align 8
  %14 = alloca %"class.WTF::StringAppend", align 8
  %15 = alloca %"class.WTF::StringAppend.3839", align 8
  %16 = alloca %"class.WTF::StringAppend", align 8
  %17 = alloca %"class.WTF::StringAppend.3840", align 8
  %18 = alloca %"class.WTF::StringAppend", align 8
  %19 = alloca %"class.WTF::StringAppend.3840", align 8
  %20 = alloca %"class.WTF::StringAppend", align 8
  %21 = alloca %"class.WTF::StringAppend", align 8
  %22 = alloca %"class.WTF::StringAppend", align 8
  %23 = alloca %"class.WTF::StringAppend", align 8
  %24 = alloca %"class.WTF::StringAppend", align 8
  %25 = alloca %"class.WTF::StringAppend", align 8
  %26 = alloca %"class.WTF::StringAppend.3841", align 8
  %27 = alloca %"class.WTF::StringAppend.3839", align 8
  %28 = alloca %"class.WTF::StringAppend", align 8
  %29 = alloca %"class.WTF::String", align 8
  %30 = alloca %"class.WTF::StringAppend", align 8
  %31 = alloca %"class.WTF::StringAppend", align 8
  %32 = alloca %"class.WTF::StringAppend", align 8
  %33 = alloca %"class.WTF::StringAppend", align 8
  %34 = alloca %"class.WTF::StringAppend.3844", align 8
  %35 = alloca %"class.WTF::StringAppend", align 8
  %36 = alloca %"class.WTF::StringAppend", align 8
  %37 = alloca %"class.WTF::StringAppend", align 8
  %38 = alloca %"class.WTF::StringAppend", align 8
  %39 = alloca %"class.WTF::StringAppend.3844", align 8
  %40 = alloca %"class.WTF::StringAppend", align 8
  %41 = alloca %"class.WTF::StringAppend", align 8
  %42 = alloca %"class.WTF::StringAppend", align 8
  %43 = alloca %"class.WTF::StringAppend.3844", align 8
  %44 = alloca %"class.WTF::String", align 8
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %45, align 8
  %46 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #22
  %47 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %48 = load i32, i32* %47, align 4
  %49 = tail call %"class.WTF::StringImpl"* @_ZN5blink8AXObject16InternalRoleNameEN2ax5mojom4RoleE(i32 %48)
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %50, align 8
  %51 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String18EncodeForDebuggingEv(%"class.WTF::String"* nonnull %11) #22
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %45, align 8
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %3
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #22
  br label %67

67:                                               ; preds = %3, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #22
  %68 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %69 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %68, align 8
  %70 = icmp eq %"class.blink::AXObjectCacheImpl"* %69, null
  br i1 %70, label %71, label %157

71:                                               ; preds = %67
  %72 = bitcast %"class.WTF::StringAppend"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #22
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %119, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %92

82:                                               ; preds = %75
  %83 = zext i32 %81 to i33
  %84 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %83, i33 1) #22
  %85 = extractvalue { i33, i1 } %84, 1
  %86 = extractvalue { i33, i1 } %84, 0
  %87 = icmp slt i33 %86, 0
  %88 = or i1 %85, %87
  br i1 %88, label %89, label %90, !prof !3

89:                                               ; preds = %82
  call void @llvm.trap() #22
  unreachable

90:                                               ; preds = %82
  %91 = trunc i33 %86 to i32
  store i32 %91, i32* %80, align 4
  br label %92

92:                                               ; preds = %75, %90
  %93 = phi i32 [ %91, %90 ], [ %81, %75 ]
  %94 = load atomic i32, i32* %76 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  br i1 %96, label %98, label %108

98:                                               ; preds = %92
  %99 = zext i32 %93 to i33
  %100 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %99, i33 1) #22
  %101 = extractvalue { i33, i1 } %100, 1
  %102 = extractvalue { i33, i1 } %100, 0
  %103 = icmp slt i33 %102, 0
  %104 = or i1 %101, %103
  br i1 %104, label %105, label %106, !prof !3

105:                                              ; preds = %98
  call void @llvm.trap() #22
  unreachable

106:                                              ; preds = %98
  %107 = trunc i33 %102 to i32
  store i32 %107, i32* %97, align 4
  br label %108

108:                                              ; preds = %106, %92
  %109 = phi i32 [ %107, %106 ], [ %93, %92 ]
  %110 = load atomic i32, i32* %76 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %108
  %114 = add i32 %109, -1
  store i32 %114, i32* %97, align 4
  br label %115

115:                                              ; preds = %113, %108
  %116 = phi i32 [ %114, %113 ], [ %109, %108 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #22
  br label %119

119:                                              ; preds = %71, %115, %118
  %120 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %120, align 8
  %121 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0), i8** %121, align 8
  %122 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %12)
  %123 = ptrtoint %"class.WTF::StringImpl"* %122 to i64
  %124 = bitcast %"class.WTF::String"* %10 to i64*
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %123, i64* %124, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %126, label %140, label %127

127:                                              ; preds = %119
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  br i1 %131, label %134, label %136

134:                                              ; preds = %127
  %135 = add i32 %133, -1
  store i32 %135, i32* %132, align 4
  br label %136

136:                                              ; preds = %134, %127
  %137 = phi i32 [ %135, %134 ], [ %133, %127 ]
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %136
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %125) #22
  br label %140

140:                                              ; preds = %139, %136, %119
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #22
  br label %156

156:                                              ; preds = %140, %152, %155
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #22
  br label %157

157:                                              ; preds = %156, %67
  br i1 %1, label %158, label %2847

158:                                              ; preds = %157
  %159 = bitcast %"class.WTF::StringAppend.3839"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %159) #22
  %160 = bitcast %"class.WTF::StringAppend"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %160) #22
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %207, label %163

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %180

170:                                              ; preds = %163
  %171 = zext i32 %169 to i33
  %172 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %171, i33 1) #22
  %173 = extractvalue { i33, i1 } %172, 1
  %174 = extractvalue { i33, i1 } %172, 0
  %175 = icmp slt i33 %174, 0
  %176 = or i1 %173, %175
  br i1 %176, label %177, label %178, !prof !3

177:                                              ; preds = %170
  call void @llvm.trap() #22
  unreachable

178:                                              ; preds = %170
  %179 = trunc i33 %174 to i32
  store i32 %179, i32* %168, align 4
  br label %180

180:                                              ; preds = %163, %178
  %181 = phi i32 [ %179, %178 ], [ %169, %163 ]
  %182 = load atomic i32, i32* %164 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  br i1 %184, label %186, label %196

186:                                              ; preds = %180
  %187 = zext i32 %181 to i33
  %188 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %187, i33 1) #22
  %189 = extractvalue { i33, i1 } %188, 1
  %190 = extractvalue { i33, i1 } %188, 0
  %191 = icmp slt i33 %190, 0
  %192 = or i1 %189, %191
  br i1 %192, label %193, label %194, !prof !3

193:                                              ; preds = %186
  call void @llvm.trap() #22
  unreachable

194:                                              ; preds = %186
  %195 = trunc i33 %190 to i32
  store i32 %195, i32* %185, align 4
  br label %196

196:                                              ; preds = %194, %180
  %197 = phi i32 [ %195, %194 ], [ %181, %180 ]
  %198 = load atomic i32, i32* %164 monotonic, align 4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %203

201:                                              ; preds = %196
  %202 = add i32 %197, -1
  store i32 %202, i32* %185, align 4
  br label %203

203:                                              ; preds = %201, %196
  %204 = phi i32 [ %202, %201 ], [ %197, %196 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #22
  br label %207

207:                                              ; preds = %158, %203, %206
  %208 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %14, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %161, %"class.WTF::StringImpl"** %208, align 8
  %209 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0), i8** %209, align 8
  %210 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 1
  %211 = load i32, i32* %210, align 8
  %212 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %212) #22
  %213 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 11
  %214 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 2
  %215 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 3
  %216 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %212, i8 -86, i64 32, i1 false) #22
  store i8* %213, i8** %214, align 8
  %217 = urem i32 %211, 10
  %218 = udiv i32 %211, 10
  %219 = trunc i32 %217 to i8
  %220 = or i8 %219, 48
  store i8 %220, i8* %213, align 1
  %221 = icmp ugt i32 %211, 9
  br i1 %221, label %222, label %237

222:                                              ; preds = %207
  %223 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 10
  store i8* %223, i8** %214, align 8
  %224 = urem i32 %218, 10
  %225 = trunc i32 %224 to i8
  %226 = or i8 %225, 48
  store i8 %226, i8* %223, align 2
  %227 = icmp ugt i32 %211, 99
  br i1 %227, label %228, label %235

228:                                              ; preds = %222
  %229 = udiv i32 %211, 100
  %230 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 9
  store i8* %230, i8** %214, align 8
  %231 = urem i32 %229, 10
  %232 = trunc i32 %231 to i8
  %233 = or i8 %232, 48
  store i8 %233, i8* %230, align 1
  %234 = icmp ugt i32 %211, 999
  br i1 %234, label %239, label %248

235:                                              ; preds = %222
  %236 = ptrtoint i8* %223 to i64
  br label %251

237:                                              ; preds = %207
  %238 = ptrtoint i8* %213 to i64
  br label %251

239:                                              ; preds = %228, %239
  %240 = phi i32 [ %242, %239 ], [ %229, %228 ]
  %241 = load i8*, i8** %214, align 8
  %242 = udiv i32 %240, 10
  %243 = getelementptr inbounds i8, i8* %241, i64 -1
  store i8* %243, i8** %214, align 8
  %244 = urem i32 %242, 10
  %245 = trunc i32 %244 to i8
  %246 = or i8 %245, 48
  store i8 %246, i8* %243, align 1
  %247 = icmp ugt i32 %240, 99
  br i1 %247, label %239, label %248

248:                                              ; preds = %239, %228
  %249 = bitcast i8** %214 to i64*
  %250 = load i64, i64* %249, align 8
  br label %251

251:                                              ; preds = %248, %235, %237
  %252 = phi i64 [ %238, %237 ], [ %250, %248 ], [ %236, %235 ]
  %253 = ptrtoint i8* %216 to i64
  %254 = sub i64 %253, %252
  %255 = trunc i64 %254 to i32
  store i32 %255, i32* %215, align 8
  %256 = inttoptr i64 %252 to i8*
  %257 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %256, i32 %255) #22
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %212) #22
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.3839"* nonnull sret %13, %"class.WTF::StringAppend"* nonnull dereferenceable(16) %14, %"class.WTF::StringImpl"* %257)
  %258 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend.3839"* nonnull %13)
  %259 = ptrtoint %"class.WTF::StringImpl"* %258 to i64
  %260 = bitcast %"class.WTF::String"* %10 to i64*
  %261 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %259, i64* %260, align 8
  %262 = icmp eq %"class.WTF::StringImpl"* %261, null
  br i1 %262, label %276, label %263

263:                                              ; preds = %251
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %261, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = load atomic i32, i32* %264 monotonic, align 4
  %266 = and i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %261, i64 0, i32 0
  %269 = load i32, i32* %268, align 4
  br i1 %267, label %270, label %272

270:                                              ; preds = %263
  %271 = add i32 %269, -1
  store i32 %271, i32* %268, align 4
  br label %272

272:                                              ; preds = %270, %263
  %273 = phi i32 [ %271, %270 ], [ %269, %263 ]
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %276

275:                                              ; preds = %272
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %261) #22
  br label %276

276:                                              ; preds = %275, %272, %251
  %277 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %13, i64 0, i32 1, i32 0, i32 0
  %278 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %277, align 8
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %276
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #22
  br label %293

293:                                              ; preds = %292, %289, %276
  %294 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %295 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %294, align 8
  %296 = icmp eq %"class.WTF::StringImpl"* %295, null
  br i1 %296, label %310, label %297

297:                                              ; preds = %293
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %295, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = load atomic i32, i32* %298 monotonic, align 4
  %300 = and i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %295, i64 0, i32 0
  %303 = load i32, i32* %302, align 4
  br i1 %301, label %304, label %306

304:                                              ; preds = %297
  %305 = add i32 %303, -1
  store i32 %305, i32* %302, align 4
  br label %306

306:                                              ; preds = %304, %297
  %307 = phi i32 [ %305, %304 ], [ %303, %297 ]
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %309, label %310

309:                                              ; preds = %306
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %295) #22
  br label %310

310:                                              ; preds = %293, %306, %309
  %311 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %312 = icmp eq %"class.WTF::StringImpl"* %311, null
  br i1 %312, label %326, label %313

313:                                              ; preds = %310
  %314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %311, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %315 = load atomic i32, i32* %314 monotonic, align 4
  %316 = and i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %311, i64 0, i32 0
  %319 = load i32, i32* %318, align 4
  br i1 %317, label %320, label %322

320:                                              ; preds = %313
  %321 = add i32 %319, -1
  store i32 %321, i32* %318, align 4
  br label %322

322:                                              ; preds = %320, %313
  %323 = phi i32 [ %321, %320 ], [ %319, %313 ]
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %326

325:                                              ; preds = %322
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %311) #22
  br label %326

326:                                              ; preds = %310, %322, %325
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %160) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %159) #22
  %327 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %328 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %327, align 8
  %329 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %328, i64 124
  %330 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %329, align 8
  %331 = call %"class.blink::Node"* %330(%"class.blink::AXObject"* %0) #22
  %332 = icmp eq %"class.blink::Node"* %331, null
  br i1 %332, label %458, label %333

333:                                              ; preds = %326
  %334 = bitcast %"class.WTF::StringAppend.3839"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %334) #22
  %335 = bitcast %"class.WTF::StringAppend"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %335) #22
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %382, label %338

338:                                              ; preds = %333
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  br i1 %342, label %345, label %355

345:                                              ; preds = %338
  %346 = zext i32 %344 to i33
  %347 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %346, i33 1) #22
  %348 = extractvalue { i33, i1 } %347, 1
  %349 = extractvalue { i33, i1 } %347, 0
  %350 = icmp slt i33 %349, 0
  %351 = or i1 %348, %350
  br i1 %351, label %352, label %353, !prof !3

352:                                              ; preds = %345
  call void @llvm.trap() #22
  unreachable

353:                                              ; preds = %345
  %354 = trunc i33 %349 to i32
  store i32 %354, i32* %343, align 4
  br label %355

355:                                              ; preds = %338, %353
  %356 = phi i32 [ %354, %353 ], [ %344, %338 ]
  %357 = load atomic i32, i32* %339 monotonic, align 4
  %358 = and i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  br i1 %359, label %361, label %371

361:                                              ; preds = %355
  %362 = zext i32 %356 to i33
  %363 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %362, i33 1) #22
  %364 = extractvalue { i33, i1 } %363, 1
  %365 = extractvalue { i33, i1 } %363, 0
  %366 = icmp slt i33 %365, 0
  %367 = or i1 %364, %366
  br i1 %367, label %368, label %369, !prof !3

368:                                              ; preds = %361
  call void @llvm.trap() #22
  unreachable

369:                                              ; preds = %361
  %370 = trunc i33 %365 to i32
  store i32 %370, i32* %360, align 4
  br label %371

371:                                              ; preds = %369, %355
  %372 = phi i32 [ %370, %369 ], [ %356, %355 ]
  %373 = load atomic i32, i32* %339 monotonic, align 4
  %374 = and i32 %373, 2
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %376, label %378

376:                                              ; preds = %371
  %377 = add i32 %372, -1
  store i32 %377, i32* %360, align 4
  br label %378

378:                                              ; preds = %376, %371
  %379 = phi i32 [ %377, %376 ], [ %372, %371 ]
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %382

381:                                              ; preds = %378
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %336) #22
  br label %382

382:                                              ; preds = %333, %378, %381
  %383 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %16, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %336, %"class.WTF::StringImpl"** %383, align 8
  %384 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0), i8** %384, align 8
  %385 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %327, align 8
  %386 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %385, i64 124
  %387 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %386, align 8
  %388 = call %"class.blink::Node"* %387(%"class.blink::AXObject"* %0) #22
  %389 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_113GetNodeStringEPNS_4NodeE(%"class.blink::Node"* %388)
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.3839"* nonnull sret %15, %"class.WTF::StringAppend"* nonnull dereferenceable(16) %16, %"class.WTF::StringImpl"* %389)
  %390 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend.3839"* nonnull %15)
  %391 = ptrtoint %"class.WTF::StringImpl"* %390 to i64
  %392 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %391, i64* %260, align 8
  %393 = icmp eq %"class.WTF::StringImpl"* %392, null
  br i1 %393, label %407, label %394

394:                                              ; preds = %382
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %392, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %396 = load atomic i32, i32* %395 monotonic, align 4
  %397 = and i32 %396, 2
  %398 = icmp eq i32 %397, 0
  %399 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %392, i64 0, i32 0
  %400 = load i32, i32* %399, align 4
  br i1 %398, label %401, label %403

401:                                              ; preds = %394
  %402 = add i32 %400, -1
  store i32 %402, i32* %399, align 4
  br label %403

403:                                              ; preds = %401, %394
  %404 = phi i32 [ %402, %401 ], [ %400, %394 ]
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %406, label %407

406:                                              ; preds = %403
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %392) #22
  br label %407

407:                                              ; preds = %406, %403, %382
  %408 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %15, i64 0, i32 1, i32 0, i32 0
  %409 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %408, align 8
  %410 = icmp eq %"class.WTF::StringImpl"* %409, null
  br i1 %410, label %424, label %411

411:                                              ; preds = %407
  %412 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %409, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %413 = load atomic i32, i32* %412 monotonic, align 4
  %414 = and i32 %413, 2
  %415 = icmp eq i32 %414, 0
  %416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %409, i64 0, i32 0
  %417 = load i32, i32* %416, align 4
  br i1 %415, label %418, label %420

418:                                              ; preds = %411
  %419 = add i32 %417, -1
  store i32 %419, i32* %416, align 4
  br label %420

420:                                              ; preds = %418, %411
  %421 = phi i32 [ %419, %418 ], [ %417, %411 ]
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %423, label %424

423:                                              ; preds = %420
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %409) #22
  br label %424

424:                                              ; preds = %423, %420, %407
  %425 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %426 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %425, align 8
  %427 = icmp eq %"class.WTF::StringImpl"* %426, null
  br i1 %427, label %441, label %428

428:                                              ; preds = %424
  %429 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %426, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %430 = load atomic i32, i32* %429 monotonic, align 4
  %431 = and i32 %430, 2
  %432 = icmp eq i32 %431, 0
  %433 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %426, i64 0, i32 0
  %434 = load i32, i32* %433, align 4
  br i1 %432, label %435, label %437

435:                                              ; preds = %428
  %436 = add i32 %434, -1
  store i32 %436, i32* %433, align 4
  br label %437

437:                                              ; preds = %435, %428
  %438 = phi i32 [ %436, %435 ], [ %434, %428 ]
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %440, label %441

440:                                              ; preds = %437
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %426) #22
  br label %441

441:                                              ; preds = %424, %437, %440
  %442 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %383, align 8
  %443 = icmp eq %"class.WTF::StringImpl"* %442, null
  br i1 %443, label %457, label %444

444:                                              ; preds = %441
  %445 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %442, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %446 = load atomic i32, i32* %445 monotonic, align 4
  %447 = and i32 %446, 2
  %448 = icmp eq i32 %447, 0
  %449 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %442, i64 0, i32 0
  %450 = load i32, i32* %449, align 4
  br i1 %448, label %451, label %453

451:                                              ; preds = %444
  %452 = add i32 %450, -1
  store i32 %452, i32* %449, align 4
  br label %453

453:                                              ; preds = %451, %444
  %454 = phi i32 [ %452, %451 ], [ %450, %444 ]
  %455 = icmp eq i32 %454, 0
  br i1 %455, label %456, label %457

456:                                              ; preds = %453
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %442) #22
  br label %457

457:                                              ; preds = %441, %453, %456
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %335) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %334) #22
  br label %458

458:                                              ; preds = %326, %457
  %459 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %327, align 8
  %460 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %459, i64 124
  %461 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %460, align 8
  %462 = call %"class.blink::Node"* %461(%"class.blink::AXObject"* %0) #22
  %463 = icmp eq %"class.blink::Node"* %462, null
  br i1 %463, label %751, label %464

464:                                              ; preds = %458
  %465 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %462, i64 0, i32 1
  %466 = load i32, i32* %465, align 8
  %467 = and i32 %466, 12
  %468 = icmp eq i32 %467, 0
  %469 = bitcast %"class.blink::Node"* %462 to %"class.blink::Element"*
  br i1 %468, label %470, label %751

470:                                              ; preds = %464
  %471 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kAriaOwnsAttrE, align 8
  %472 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %462, i64 1, i32 3
  %473 = bitcast %"class.blink::Member.320"* %472 to %"class.blink::ElementData"**
  %474 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %473, align 8
  %475 = icmp eq %"class.blink::ElementData"* %474, null
  br i1 %475, label %526, label %476

476:                                              ; preds = %470
  %477 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %474, i64 0, i32 0, i32 0, i32 0
  %478 = load i32, i32* %477, align 4
  %479 = and i32 %478, 1
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %488, label %481

481:                                              ; preds = %476
  %482 = bitcast %"class.blink::ElementData"* %474 to %"class.blink::UniqueElementData"*
  %483 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %474, i64 1, i32 1
  %484 = bitcast %"class.blink::Member.354"* %483 to %"class.blink::Attribute"**
  %485 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %484, align 8
  %486 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %482, i64 0, i32 2, i32 0, i32 0, i32 2
  %487 = load i32, i32* %486, align 4
  br label %493

488:                                              ; preds = %476
  %489 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %474, i64 1
  %490 = bitcast %"class.blink::ElementData"* %489 to %"class.blink::Attribute"*
  %491 = lshr i32 %478, 1
  %492 = and i32 %491, 268435455
  br label %493

493:                                              ; preds = %488, %481
  %494 = phi %"class.blink::Attribute"* [ %490, %488 ], [ %485, %481 ]
  %495 = phi i32 [ %492, %488 ], [ %487, %481 ]
  %496 = zext i32 %495 to i64
  %497 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %494, i64 %496
  %498 = icmp eq i32 %495, 0
  br i1 %498, label %526, label %499

499:                                              ; preds = %493
  %500 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %471, i64 0, i32 0, i32 0
  %501 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %500, align 8
  %502 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %501, i64 0, i32 3, i32 0, i32 0, i32 0
  %503 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %501, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %504

504:                                              ; preds = %519, %499
  %505 = phi %"class.blink::Attribute"* [ %494, %499 ], [ %520, %519 ]
  %506 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %505, i64 0, i32 0, i32 0, i32 0
  %507 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %506, align 8
  %508 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %507, %501
  br i1 %508, label %522, label %509

509:                                              ; preds = %504
  %510 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %507, i64 0, i32 3, i32 0, i32 0, i32 0
  %511 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %510, align 8
  %512 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %502, align 8
  %513 = icmp eq %"class.WTF::StringImpl"* %511, %512
  br i1 %513, label %514, label %519

514:                                              ; preds = %509
  %515 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %507, i64 0, i32 4, i32 0, i32 0, i32 0
  %516 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %515, align 8
  %517 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %503, align 8
  %518 = icmp eq %"class.WTF::StringImpl"* %516, %517
  br i1 %518, label %522, label %519

519:                                              ; preds = %514, %509
  %520 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %505, i64 1
  %521 = icmp eq %"class.blink::Attribute"* %520, %497
  br i1 %521, label %526, label %504

522:                                              ; preds = %514, %504
  %523 = icmp eq %"class.blink::Attribute"* %505, null
  br i1 %523, label %526, label %524

524:                                              ; preds = %522
  %525 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %505, i64 0, i32 1
  br label %528

526:                                              ; preds = %519, %522, %493, %470
  %527 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %528

528:                                              ; preds = %526, %524
  %529 = phi %"class.WTF::AtomicString"* [ %527, %526 ], [ %525, %524 ]
  %530 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %529, i64 0, i32 0, i32 0, i32 0
  %531 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %530, align 8
  %532 = icmp eq %"class.WTF::StringImpl"* %531, null
  br i1 %532, label %537, label %533

533:                                              ; preds = %528
  %534 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %531, i64 0, i32 1
  %535 = load i32, i32* %534, align 4
  %536 = icmp eq i32 %535, 0
  br i1 %536, label %537, label %539

537:                                              ; preds = %528, %533
  %538 = call zeroext i1 @_ZN5blink7Element38HasExplicitlySetAttrAssociatedElementsERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %469, %"class.blink::QualifiedName"* dereferenceable(8) %471) #22
  br i1 %538, label %539, label %751

539:                                              ; preds = %533, %537
  %540 = bitcast %"class.WTF::StringAppend.3840"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %540) #22
  %541 = bitcast %"class.WTF::StringAppend"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %541) #22
  %542 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %543 = icmp eq %"class.WTF::StringImpl"* %542, null
  br i1 %543, label %588, label %544

544:                                              ; preds = %539
  %545 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %542, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %546 = load atomic i32, i32* %545 monotonic, align 4
  %547 = and i32 %546, 2
  %548 = icmp eq i32 %547, 0
  %549 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %542, i64 0, i32 0
  %550 = load i32, i32* %549, align 4
  br i1 %548, label %551, label %561

551:                                              ; preds = %544
  %552 = zext i32 %550 to i33
  %553 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %552, i33 1) #22
  %554 = extractvalue { i33, i1 } %553, 1
  %555 = extractvalue { i33, i1 } %553, 0
  %556 = icmp slt i33 %555, 0
  %557 = or i1 %554, %556
  br i1 %557, label %558, label %559, !prof !3

558:                                              ; preds = %551
  call void @llvm.trap() #22
  unreachable

559:                                              ; preds = %551
  %560 = trunc i33 %555 to i32
  store i32 %560, i32* %549, align 4
  br label %561

561:                                              ; preds = %544, %559
  %562 = phi i32 [ %560, %559 ], [ %550, %544 ]
  %563 = load atomic i32, i32* %545 monotonic, align 4
  %564 = and i32 %563, 2
  %565 = icmp eq i32 %564, 0
  %566 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %542, i64 0, i32 0
  br i1 %565, label %567, label %577

567:                                              ; preds = %561
  %568 = zext i32 %562 to i33
  %569 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %568, i33 1) #22
  %570 = extractvalue { i33, i1 } %569, 1
  %571 = extractvalue { i33, i1 } %569, 0
  %572 = icmp slt i33 %571, 0
  %573 = or i1 %570, %572
  br i1 %573, label %574, label %575, !prof !3

574:                                              ; preds = %567
  call void @llvm.trap() #22
  unreachable

575:                                              ; preds = %567
  %576 = trunc i33 %571 to i32
  store i32 %576, i32* %566, align 4
  br label %577

577:                                              ; preds = %575, %561
  %578 = phi i32 [ %576, %575 ], [ %562, %561 ]
  %579 = load atomic i32, i32* %545 monotonic, align 4
  %580 = and i32 %579, 2
  %581 = icmp eq i32 %580, 0
  br i1 %581, label %582, label %584

582:                                              ; preds = %577
  %583 = add i32 %578, -1
  store i32 %583, i32* %566, align 4
  br label %584

584:                                              ; preds = %582, %577
  %585 = phi i32 [ %583, %582 ], [ %578, %577 ]
  %586 = icmp eq i32 %585, 0
  br i1 %586, label %587, label %588

587:                                              ; preds = %584
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %542) #22
  br label %588

588:                                              ; preds = %539, %584, %587
  %589 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %18, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %542, %"class.WTF::StringImpl"** %589, align 8
  %590 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %18, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0), i8** %590, align 8
  %591 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %327, align 8
  %592 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %591, i64 124
  %593 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %592, align 8
  %594 = call %"class.blink::Node"* %593(%"class.blink::AXObject"* %0) #22
  %595 = icmp eq %"class.blink::Node"* %594, null
  br i1 %595, label %603, label %596

596:                                              ; preds = %588
  %597 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %594, i64 0, i32 1
  %598 = load i32, i32* %597, align 8
  %599 = and i32 %598, 12
  %600 = icmp eq i32 %599, 0
  %601 = bitcast %"class.blink::Node"* %594 to %"class.blink::Element"*
  %602 = select i1 %600, %"class.blink::Element"* %601, %"class.blink::Element"* null
  br label %603

603:                                              ; preds = %588, %596
  %604 = phi %"class.blink::Element"* [ %602, %596 ], [ null, %588 ]
  %605 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %604, i64 0, i32 3, i32 0, i32 0
  %606 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %605, align 8
  %607 = icmp eq %"class.blink::ElementData"* %606, null
  br i1 %607, label %658, label %608

608:                                              ; preds = %603
  %609 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %606, i64 0, i32 0, i32 0, i32 0
  %610 = load i32, i32* %609, align 4
  %611 = and i32 %610, 1
  %612 = icmp eq i32 %611, 0
  br i1 %612, label %620, label %613

613:                                              ; preds = %608
  %614 = bitcast %"class.blink::ElementData"* %606 to %"class.blink::UniqueElementData"*
  %615 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %606, i64 1, i32 1
  %616 = bitcast %"class.blink::Member.354"* %615 to %"class.blink::Attribute"**
  %617 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %616, align 8
  %618 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %614, i64 0, i32 2, i32 0, i32 0, i32 2
  %619 = load i32, i32* %618, align 4
  br label %625

620:                                              ; preds = %608
  %621 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %606, i64 1
  %622 = bitcast %"class.blink::ElementData"* %621 to %"class.blink::Attribute"*
  %623 = lshr i32 %610, 1
  %624 = and i32 %623, 268435455
  br label %625

625:                                              ; preds = %620, %613
  %626 = phi %"class.blink::Attribute"* [ %622, %620 ], [ %617, %613 ]
  %627 = phi i32 [ %624, %620 ], [ %619, %613 ]
  %628 = zext i32 %627 to i64
  %629 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %626, i64 %628
  %630 = icmp eq i32 %627, 0
  br i1 %630, label %658, label %631

631:                                              ; preds = %625
  %632 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %471, i64 0, i32 0, i32 0
  %633 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %632, align 8
  %634 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %633, i64 0, i32 3, i32 0, i32 0, i32 0
  %635 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %633, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %636

636:                                              ; preds = %651, %631
  %637 = phi %"class.blink::Attribute"* [ %626, %631 ], [ %652, %651 ]
  %638 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %637, i64 0, i32 0, i32 0, i32 0
  %639 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %638, align 8
  %640 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %639, %633
  br i1 %640, label %654, label %641

641:                                              ; preds = %636
  %642 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %639, i64 0, i32 3, i32 0, i32 0, i32 0
  %643 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %642, align 8
  %644 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %634, align 8
  %645 = icmp eq %"class.WTF::StringImpl"* %643, %644
  br i1 %645, label %646, label %651

646:                                              ; preds = %641
  %647 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %639, i64 0, i32 4, i32 0, i32 0, i32 0
  %648 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %647, align 8
  %649 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %635, align 8
  %650 = icmp eq %"class.WTF::StringImpl"* %648, %649
  br i1 %650, label %654, label %651

651:                                              ; preds = %646, %641
  %652 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %637, i64 1
  %653 = icmp eq %"class.blink::Attribute"* %652, %629
  br i1 %653, label %658, label %636

654:                                              ; preds = %646, %636
  %655 = icmp eq %"class.blink::Attribute"* %637, null
  br i1 %655, label %658, label %656

656:                                              ; preds = %654
  %657 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %637, i64 0, i32 1
  br label %660

658:                                              ; preds = %651, %654, %625, %603
  %659 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %660

660:                                              ; preds = %656, %658
  %661 = phi %"class.WTF::AtomicString"* [ %659, %658 ], [ %657, %656 ]
  %662 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %661, i64 0, i32 0, i32 0, i32 0
  %663 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %662, align 8
  %664 = icmp eq %"class.WTF::StringImpl"* %663, null
  br i1 %664, label %682, label %665

665:                                              ; preds = %660
  %666 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %663, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %667 = load atomic i32, i32* %666 monotonic, align 4
  %668 = and i32 %667, 2
  %669 = icmp eq i32 %668, 0
  br i1 %669, label %670, label %682

670:                                              ; preds = %665
  %671 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %663, i64 0, i32 0
  %672 = load i32, i32* %671, align 4
  %673 = zext i32 %672 to i33
  %674 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %673, i33 1) #22
  %675 = extractvalue { i33, i1 } %674, 1
  %676 = extractvalue { i33, i1 } %674, 0
  %677 = icmp slt i33 %676, 0
  %678 = or i1 %675, %677
  br i1 %678, label %679, label %680, !prof !3

679:                                              ; preds = %670
  call void @llvm.trap() #22
  unreachable

680:                                              ; preds = %670
  %681 = trunc i33 %676 to i32
  store i32 %681, i32* %671, align 4
  br label %682

682:                                              ; preds = %660, %665, %680
  call void @_ZN3WTFplINS_6StringEPKcNS_12AtomicStringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.3840"* nonnull sret %17, %"class.WTF::StringAppend"* nonnull dereferenceable(16) %18, %"class.WTF::StringImpl"* %663)
  %683 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEENS_12AtomicStringEEcvS1_Ev(%"class.WTF::StringAppend.3840"* nonnull %17)
  %684 = ptrtoint %"class.WTF::StringImpl"* %683 to i64
  %685 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %684, i64* %260, align 8
  %686 = icmp eq %"class.WTF::StringImpl"* %685, null
  br i1 %686, label %700, label %687

687:                                              ; preds = %682
  %688 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %685, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %689 = load atomic i32, i32* %688 monotonic, align 4
  %690 = and i32 %689, 2
  %691 = icmp eq i32 %690, 0
  %692 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %685, i64 0, i32 0
  %693 = load i32, i32* %692, align 4
  br i1 %691, label %694, label %696

694:                                              ; preds = %687
  %695 = add i32 %693, -1
  store i32 %695, i32* %692, align 4
  br label %696

696:                                              ; preds = %694, %687
  %697 = phi i32 [ %695, %694 ], [ %693, %687 ]
  %698 = icmp eq i32 %697, 0
  br i1 %698, label %699, label %700

699:                                              ; preds = %696
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %685) #22
  br label %700

700:                                              ; preds = %699, %696, %682
  %701 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %17, i64 0, i32 1, i32 0, i32 0, i32 0
  %702 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %701, align 8
  %703 = icmp eq %"class.WTF::StringImpl"* %702, null
  br i1 %703, label %717, label %704

704:                                              ; preds = %700
  %705 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %702, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %706 = load atomic i32, i32* %705 monotonic, align 4
  %707 = and i32 %706, 2
  %708 = icmp eq i32 %707, 0
  %709 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %702, i64 0, i32 0
  %710 = load i32, i32* %709, align 4
  br i1 %708, label %711, label %713

711:                                              ; preds = %704
  %712 = add i32 %710, -1
  store i32 %712, i32* %709, align 4
  br label %713

713:                                              ; preds = %711, %704
  %714 = phi i32 [ %712, %711 ], [ %710, %704 ]
  %715 = icmp eq i32 %714, 0
  br i1 %715, label %716, label %717

716:                                              ; preds = %713
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %702) #22
  br label %717

717:                                              ; preds = %716, %713, %700
  %718 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %719 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %718, align 8
  %720 = icmp eq %"class.WTF::StringImpl"* %719, null
  br i1 %720, label %734, label %721

721:                                              ; preds = %717
  %722 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %719, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %723 = load atomic i32, i32* %722 monotonic, align 4
  %724 = and i32 %723, 2
  %725 = icmp eq i32 %724, 0
  %726 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %719, i64 0, i32 0
  %727 = load i32, i32* %726, align 4
  br i1 %725, label %728, label %730

728:                                              ; preds = %721
  %729 = add i32 %727, -1
  store i32 %729, i32* %726, align 4
  br label %730

730:                                              ; preds = %728, %721
  %731 = phi i32 [ %729, %728 ], [ %727, %721 ]
  %732 = icmp eq i32 %731, 0
  br i1 %732, label %733, label %734

733:                                              ; preds = %730
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %719) #22
  br label %734

734:                                              ; preds = %717, %730, %733
  %735 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %589, align 8
  %736 = icmp eq %"class.WTF::StringImpl"* %735, null
  br i1 %736, label %750, label %737

737:                                              ; preds = %734
  %738 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %735, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %739 = load atomic i32, i32* %738 monotonic, align 4
  %740 = and i32 %739, 2
  %741 = icmp eq i32 %740, 0
  %742 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %735, i64 0, i32 0
  %743 = load i32, i32* %742, align 4
  br i1 %741, label %744, label %746

744:                                              ; preds = %737
  %745 = add i32 %743, -1
  store i32 %745, i32* %742, align 4
  br label %746

746:                                              ; preds = %744, %737
  %747 = phi i32 [ %745, %744 ], [ %743, %737 ]
  %748 = icmp eq i32 %747, 0
  br i1 %748, label %749, label %750

749:                                              ; preds = %746
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %735) #22
  br label %750

750:                                              ; preds = %734, %746, %749
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %541) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %540) #22
  br label %751

751:                                              ; preds = %464, %458, %750, %537
  %752 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %327, align 8
  %753 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %752, i64 124
  %754 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %753, align 8
  %755 = call %"class.blink::Node"* %754(%"class.blink::AXObject"* %0) #22
  %756 = icmp eq %"class.blink::Node"* %755, null
  br i1 %756, label %979, label %757

757:                                              ; preds = %751
  %758 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %755, i64 0, i32 1
  %759 = load i32, i32* %758, align 8
  %760 = and i32 %759, 12
  %761 = icmp eq i32 %760, 0
  br i1 %761, label %762, label %979

762:                                              ; preds = %757
  %763 = bitcast %"class.blink::Node"* %755 to %"class.blink::Element"*
  %764 = call %"class.blink::Element"* @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_19AOMRelationPropertyE(%"class.blink::Element"* nonnull %763, i32 0) #22
  %765 = icmp eq %"class.blink::Element"* %764, null
  br i1 %765, label %979, label %766

766:                                              ; preds = %762
  %767 = bitcast %"class.WTF::StringAppend.3840"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %767) #22
  %768 = bitcast %"class.WTF::StringAppend"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %768) #22
  %769 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %770 = icmp eq %"class.WTF::StringImpl"* %769, null
  br i1 %770, label %815, label %771

771:                                              ; preds = %766
  %772 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %769, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %773 = load atomic i32, i32* %772 monotonic, align 4
  %774 = and i32 %773, 2
  %775 = icmp eq i32 %774, 0
  %776 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %769, i64 0, i32 0
  %777 = load i32, i32* %776, align 4
  br i1 %775, label %778, label %788

778:                                              ; preds = %771
  %779 = zext i32 %777 to i33
  %780 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %779, i33 1) #22
  %781 = extractvalue { i33, i1 } %780, 1
  %782 = extractvalue { i33, i1 } %780, 0
  %783 = icmp slt i33 %782, 0
  %784 = or i1 %781, %783
  br i1 %784, label %785, label %786, !prof !3

785:                                              ; preds = %778
  call void @llvm.trap() #22
  unreachable

786:                                              ; preds = %778
  %787 = trunc i33 %782 to i32
  store i32 %787, i32* %776, align 4
  br label %788

788:                                              ; preds = %771, %786
  %789 = phi i32 [ %787, %786 ], [ %777, %771 ]
  %790 = load atomic i32, i32* %772 monotonic, align 4
  %791 = and i32 %790, 2
  %792 = icmp eq i32 %791, 0
  %793 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %769, i64 0, i32 0
  br i1 %792, label %794, label %804

794:                                              ; preds = %788
  %795 = zext i32 %789 to i33
  %796 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %795, i33 1) #22
  %797 = extractvalue { i33, i1 } %796, 1
  %798 = extractvalue { i33, i1 } %796, 0
  %799 = icmp slt i33 %798, 0
  %800 = or i1 %797, %799
  br i1 %800, label %801, label %802, !prof !3

801:                                              ; preds = %794
  call void @llvm.trap() #22
  unreachable

802:                                              ; preds = %794
  %803 = trunc i33 %798 to i32
  store i32 %803, i32* %793, align 4
  br label %804

804:                                              ; preds = %802, %788
  %805 = phi i32 [ %803, %802 ], [ %789, %788 ]
  %806 = load atomic i32, i32* %772 monotonic, align 4
  %807 = and i32 %806, 2
  %808 = icmp eq i32 %807, 0
  br i1 %808, label %809, label %811

809:                                              ; preds = %804
  %810 = add i32 %805, -1
  store i32 %810, i32* %793, align 4
  br label %811

811:                                              ; preds = %809, %804
  %812 = phi i32 [ %810, %809 ], [ %805, %804 ]
  %813 = icmp eq i32 %812, 0
  br i1 %813, label %814, label %815

814:                                              ; preds = %811
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %769) #22
  br label %815

815:                                              ; preds = %766, %811, %814
  %816 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %20, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %769, %"class.WTF::StringImpl"** %816, align 8
  %817 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %20, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i64 0, i64 0), i8** %817, align 8
  %818 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %327, align 8
  %819 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %818, i64 124
  %820 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %819, align 8
  %821 = call %"class.blink::Node"* %820(%"class.blink::AXObject"* %0) #22
  %822 = icmp eq %"class.blink::Node"* %821, null
  br i1 %822, label %830, label %823

823:                                              ; preds = %815
  %824 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %821, i64 0, i32 1
  %825 = load i32, i32* %824, align 8
  %826 = and i32 %825, 12
  %827 = icmp eq i32 %826, 0
  %828 = bitcast %"class.blink::Node"* %821 to %"class.blink::Element"*
  %829 = select i1 %827, %"class.blink::Element"* %828, %"class.blink::Element"* null
  br label %830

830:                                              ; preds = %815, %823
  %831 = phi %"class.blink::Element"* [ %829, %823 ], [ null, %815 ]
  %832 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kAriaOwnsAttrE, align 8
  %833 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %831, i64 0, i32 3, i32 0, i32 0
  %834 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %833, align 8
  %835 = icmp eq %"class.blink::ElementData"* %834, null
  br i1 %835, label %886, label %836

836:                                              ; preds = %830
  %837 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %834, i64 0, i32 0, i32 0, i32 0
  %838 = load i32, i32* %837, align 4
  %839 = and i32 %838, 1
  %840 = icmp eq i32 %839, 0
  br i1 %840, label %848, label %841

841:                                              ; preds = %836
  %842 = bitcast %"class.blink::ElementData"* %834 to %"class.blink::UniqueElementData"*
  %843 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %834, i64 1, i32 1
  %844 = bitcast %"class.blink::Member.354"* %843 to %"class.blink::Attribute"**
  %845 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %844, align 8
  %846 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %842, i64 0, i32 2, i32 0, i32 0, i32 2
  %847 = load i32, i32* %846, align 4
  br label %853

848:                                              ; preds = %836
  %849 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %834, i64 1
  %850 = bitcast %"class.blink::ElementData"* %849 to %"class.blink::Attribute"*
  %851 = lshr i32 %838, 1
  %852 = and i32 %851, 268435455
  br label %853

853:                                              ; preds = %848, %841
  %854 = phi %"class.blink::Attribute"* [ %850, %848 ], [ %845, %841 ]
  %855 = phi i32 [ %852, %848 ], [ %847, %841 ]
  %856 = zext i32 %855 to i64
  %857 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %854, i64 %856
  %858 = icmp eq i32 %855, 0
  br i1 %858, label %886, label %859

859:                                              ; preds = %853
  %860 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %832, i64 0, i32 0, i32 0
  %861 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %860, align 8
  %862 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %861, i64 0, i32 3, i32 0, i32 0, i32 0
  %863 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %861, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %864

864:                                              ; preds = %879, %859
  %865 = phi %"class.blink::Attribute"* [ %854, %859 ], [ %880, %879 ]
  %866 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %865, i64 0, i32 0, i32 0, i32 0
  %867 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %866, align 8
  %868 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %867, %861
  br i1 %868, label %882, label %869

869:                                              ; preds = %864
  %870 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %867, i64 0, i32 3, i32 0, i32 0, i32 0
  %871 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %870, align 8
  %872 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %862, align 8
  %873 = icmp eq %"class.WTF::StringImpl"* %871, %872
  br i1 %873, label %874, label %879

874:                                              ; preds = %869
  %875 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %867, i64 0, i32 4, i32 0, i32 0, i32 0
  %876 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %875, align 8
  %877 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %863, align 8
  %878 = icmp eq %"class.WTF::StringImpl"* %876, %877
  br i1 %878, label %882, label %879

879:                                              ; preds = %874, %869
  %880 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %865, i64 1
  %881 = icmp eq %"class.blink::Attribute"* %880, %857
  br i1 %881, label %886, label %864

882:                                              ; preds = %874, %864
  %883 = icmp eq %"class.blink::Attribute"* %865, null
  br i1 %883, label %886, label %884

884:                                              ; preds = %882
  %885 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %865, i64 0, i32 1
  br label %888

886:                                              ; preds = %879, %882, %853, %830
  %887 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %888

888:                                              ; preds = %884, %886
  %889 = phi %"class.WTF::AtomicString"* [ %887, %886 ], [ %885, %884 ]
  %890 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %889, i64 0, i32 0, i32 0, i32 0
  %891 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %890, align 8
  %892 = icmp eq %"class.WTF::StringImpl"* %891, null
  br i1 %892, label %910, label %893

893:                                              ; preds = %888
  %894 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %891, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %895 = load atomic i32, i32* %894 monotonic, align 4
  %896 = and i32 %895, 2
  %897 = icmp eq i32 %896, 0
  br i1 %897, label %898, label %910

898:                                              ; preds = %893
  %899 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %891, i64 0, i32 0
  %900 = load i32, i32* %899, align 4
  %901 = zext i32 %900 to i33
  %902 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %901, i33 1) #22
  %903 = extractvalue { i33, i1 } %902, 1
  %904 = extractvalue { i33, i1 } %902, 0
  %905 = icmp slt i33 %904, 0
  %906 = or i1 %903, %905
  br i1 %906, label %907, label %908, !prof !3

907:                                              ; preds = %898
  call void @llvm.trap() #22
  unreachable

908:                                              ; preds = %898
  %909 = trunc i33 %904 to i32
  store i32 %909, i32* %899, align 4
  br label %910

910:                                              ; preds = %888, %893, %908
  call void @_ZN3WTFplINS_6StringEPKcNS_12AtomicStringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.3840"* nonnull sret %19, %"class.WTF::StringAppend"* nonnull dereferenceable(16) %20, %"class.WTF::StringImpl"* %891)
  %911 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEENS_12AtomicStringEEcvS1_Ev(%"class.WTF::StringAppend.3840"* nonnull %19)
  %912 = ptrtoint %"class.WTF::StringImpl"* %911 to i64
  %913 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %912, i64* %260, align 8
  %914 = icmp eq %"class.WTF::StringImpl"* %913, null
  br i1 %914, label %928, label %915

915:                                              ; preds = %910
  %916 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %913, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %917 = load atomic i32, i32* %916 monotonic, align 4
  %918 = and i32 %917, 2
  %919 = icmp eq i32 %918, 0
  %920 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %913, i64 0, i32 0
  %921 = load i32, i32* %920, align 4
  br i1 %919, label %922, label %924

922:                                              ; preds = %915
  %923 = add i32 %921, -1
  store i32 %923, i32* %920, align 4
  br label %924

924:                                              ; preds = %922, %915
  %925 = phi i32 [ %923, %922 ], [ %921, %915 ]
  %926 = icmp eq i32 %925, 0
  br i1 %926, label %927, label %928

927:                                              ; preds = %924
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %913) #22
  br label %928

928:                                              ; preds = %927, %924, %910
  %929 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %19, i64 0, i32 1, i32 0, i32 0, i32 0
  %930 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %929, align 8
  %931 = icmp eq %"class.WTF::StringImpl"* %930, null
  br i1 %931, label %945, label %932

932:                                              ; preds = %928
  %933 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %930, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %934 = load atomic i32, i32* %933 monotonic, align 4
  %935 = and i32 %934, 2
  %936 = icmp eq i32 %935, 0
  %937 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %930, i64 0, i32 0
  %938 = load i32, i32* %937, align 4
  br i1 %936, label %939, label %941

939:                                              ; preds = %932
  %940 = add i32 %938, -1
  store i32 %940, i32* %937, align 4
  br label %941

941:                                              ; preds = %939, %932
  %942 = phi i32 [ %940, %939 ], [ %938, %932 ]
  %943 = icmp eq i32 %942, 0
  br i1 %943, label %944, label %945

944:                                              ; preds = %941
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %930) #22
  br label %945

945:                                              ; preds = %944, %941, %928
  %946 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %947 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %946, align 8
  %948 = icmp eq %"class.WTF::StringImpl"* %947, null
  br i1 %948, label %962, label %949

949:                                              ; preds = %945
  %950 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %947, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %951 = load atomic i32, i32* %950 monotonic, align 4
  %952 = and i32 %951, 2
  %953 = icmp eq i32 %952, 0
  %954 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %947, i64 0, i32 0
  %955 = load i32, i32* %954, align 4
  br i1 %953, label %956, label %958

956:                                              ; preds = %949
  %957 = add i32 %955, -1
  store i32 %957, i32* %954, align 4
  br label %958

958:                                              ; preds = %956, %949
  %959 = phi i32 [ %957, %956 ], [ %955, %949 ]
  %960 = icmp eq i32 %959, 0
  br i1 %960, label %961, label %962

961:                                              ; preds = %958
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %947) #22
  br label %962

962:                                              ; preds = %945, %958, %961
  %963 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %816, align 8
  %964 = icmp eq %"class.WTF::StringImpl"* %963, null
  br i1 %964, label %978, label %965

965:                                              ; preds = %962
  %966 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %963, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %967 = load atomic i32, i32* %966 monotonic, align 4
  %968 = and i32 %967, 2
  %969 = icmp eq i32 %968, 0
  %970 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %963, i64 0, i32 0
  %971 = load i32, i32* %970, align 4
  br i1 %969, label %972, label %974

972:                                              ; preds = %965
  %973 = add i32 %971, -1
  store i32 %973, i32* %970, align 4
  br label %974

974:                                              ; preds = %972, %965
  %975 = phi i32 [ %973, %972 ], [ %971, %965 ]
  %976 = icmp eq i32 %975, 0
  br i1 %976, label %977, label %978

977:                                              ; preds = %974
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %963) #22
  br label %978

978:                                              ; preds = %962, %974, %977
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %768) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %767) #22
  br label %979

979:                                              ; preds = %751, %757, %762, %978
  %980 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %981 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %980, align 8
  %982 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %981, i64 35
  %983 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %982, align 8
  %984 = call zeroext i1 %983(%"class.blink::AXObject"* %0) #22
  br i1 %984, label %985, label %1070

985:                                              ; preds = %979
  %986 = bitcast %"class.WTF::StringAppend"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %986) #22
  %987 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %988 = icmp eq %"class.WTF::StringImpl"* %987, null
  br i1 %988, label %1033, label %989

989:                                              ; preds = %985
  %990 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %987, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %991 = load atomic i32, i32* %990 monotonic, align 4
  %992 = and i32 %991, 2
  %993 = icmp eq i32 %992, 0
  %994 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %987, i64 0, i32 0
  %995 = load i32, i32* %994, align 4
  br i1 %993, label %996, label %1006

996:                                              ; preds = %989
  %997 = zext i32 %995 to i33
  %998 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %997, i33 1) #22
  %999 = extractvalue { i33, i1 } %998, 1
  %1000 = extractvalue { i33, i1 } %998, 0
  %1001 = icmp slt i33 %1000, 0
  %1002 = or i1 %999, %1001
  br i1 %1002, label %1003, label %1004, !prof !3

1003:                                             ; preds = %996
  call void @llvm.trap() #22
  unreachable

1004:                                             ; preds = %996
  %1005 = trunc i33 %1000 to i32
  store i32 %1005, i32* %994, align 4
  br label %1006

1006:                                             ; preds = %989, %1004
  %1007 = phi i32 [ %1005, %1004 ], [ %995, %989 ]
  %1008 = load atomic i32, i32* %990 monotonic, align 4
  %1009 = and i32 %1008, 2
  %1010 = icmp eq i32 %1009, 0
  %1011 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %987, i64 0, i32 0
  br i1 %1010, label %1012, label %1022

1012:                                             ; preds = %1006
  %1013 = zext i32 %1007 to i33
  %1014 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1013, i33 1) #22
  %1015 = extractvalue { i33, i1 } %1014, 1
  %1016 = extractvalue { i33, i1 } %1014, 0
  %1017 = icmp slt i33 %1016, 0
  %1018 = or i1 %1015, %1017
  br i1 %1018, label %1019, label %1020, !prof !3

1019:                                             ; preds = %1012
  call void @llvm.trap() #22
  unreachable

1020:                                             ; preds = %1012
  %1021 = trunc i33 %1016 to i32
  store i32 %1021, i32* %1011, align 4
  br label %1022

1022:                                             ; preds = %1020, %1006
  %1023 = phi i32 [ %1021, %1020 ], [ %1007, %1006 ]
  %1024 = load atomic i32, i32* %990 monotonic, align 4
  %1025 = and i32 %1024, 2
  %1026 = icmp eq i32 %1025, 0
  br i1 %1026, label %1027, label %1029

1027:                                             ; preds = %1022
  %1028 = add i32 %1023, -1
  store i32 %1028, i32* %1011, align 4
  br label %1029

1029:                                             ; preds = %1027, %1022
  %1030 = phi i32 [ %1028, %1027 ], [ %1023, %1022 ]
  %1031 = icmp eq i32 %1030, 0
  br i1 %1031, label %1032, label %1033

1032:                                             ; preds = %1029
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %987) #22
  br label %1033

1033:                                             ; preds = %985, %1029, %1032
  %1034 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %987, %"class.WTF::StringImpl"** %1034, align 8
  %1035 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0), i8** %1035, align 8
  %1036 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %21)
  %1037 = ptrtoint %"class.WTF::StringImpl"* %1036 to i64
  %1038 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %1037, i64* %260, align 8
  %1039 = icmp eq %"class.WTF::StringImpl"* %1038, null
  br i1 %1039, label %1053, label %1040

1040:                                             ; preds = %1033
  %1041 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1038, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1042 = load atomic i32, i32* %1041 monotonic, align 4
  %1043 = and i32 %1042, 2
  %1044 = icmp eq i32 %1043, 0
  %1045 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1038, i64 0, i32 0
  %1046 = load i32, i32* %1045, align 4
  br i1 %1044, label %1047, label %1049

1047:                                             ; preds = %1040
  %1048 = add i32 %1046, -1
  store i32 %1048, i32* %1045, align 4
  br label %1049

1049:                                             ; preds = %1047, %1040
  %1050 = phi i32 [ %1048, %1047 ], [ %1046, %1040 ]
  %1051 = icmp eq i32 %1050, 0
  br i1 %1051, label %1052, label %1053

1052:                                             ; preds = %1049
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1038) #22
  br label %1053

1053:                                             ; preds = %1052, %1049, %1033
  %1054 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1034, align 8
  %1055 = icmp eq %"class.WTF::StringImpl"* %1054, null
  br i1 %1055, label %1069, label %1056

1056:                                             ; preds = %1053
  %1057 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1054, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1058 = load atomic i32, i32* %1057 monotonic, align 4
  %1059 = and i32 %1058, 2
  %1060 = icmp eq i32 %1059, 0
  %1061 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1054, i64 0, i32 0
  %1062 = load i32, i32* %1061, align 4
  br i1 %1060, label %1063, label %1065

1063:                                             ; preds = %1056
  %1064 = add i32 %1062, -1
  store i32 %1064, i32* %1061, align 4
  br label %1065

1065:                                             ; preds = %1063, %1056
  %1066 = phi i32 [ %1064, %1063 ], [ %1062, %1056 ]
  %1067 = icmp eq i32 %1066, 0
  br i1 %1067, label %1068, label %1069

1068:                                             ; preds = %1065
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1054) #22
  br label %1069

1069:                                             ; preds = %1053, %1065, %1068
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %986) #22
  br label %1070

1070:                                             ; preds = %1069, %979
  %1071 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %68, align 8
  %1072 = icmp eq %"class.blink::AXObjectCacheImpl"* %1071, null
  br i1 %1072, label %1160, label %1073

1073:                                             ; preds = %1070
  %1074 = call zeroext i1 @_ZNK5blink17AXObjectCacheImpl11IsAriaOwnedEPKNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* nonnull %1071, %"class.blink::AXObject"* %0) #22
  br i1 %1074, label %1075, label %1160

1075:                                             ; preds = %1073
  %1076 = bitcast %"class.WTF::StringAppend"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1076) #22
  %1077 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %1078 = icmp eq %"class.WTF::StringImpl"* %1077, null
  br i1 %1078, label %1123, label %1079

1079:                                             ; preds = %1075
  %1080 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1077, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1081 = load atomic i32, i32* %1080 monotonic, align 4
  %1082 = and i32 %1081, 2
  %1083 = icmp eq i32 %1082, 0
  %1084 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1077, i64 0, i32 0
  %1085 = load i32, i32* %1084, align 4
  br i1 %1083, label %1086, label %1096

1086:                                             ; preds = %1079
  %1087 = zext i32 %1085 to i33
  %1088 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1087, i33 1) #22
  %1089 = extractvalue { i33, i1 } %1088, 1
  %1090 = extractvalue { i33, i1 } %1088, 0
  %1091 = icmp slt i33 %1090, 0
  %1092 = or i1 %1089, %1091
  br i1 %1092, label %1093, label %1094, !prof !3

1093:                                             ; preds = %1086
  call void @llvm.trap() #22
  unreachable

1094:                                             ; preds = %1086
  %1095 = trunc i33 %1090 to i32
  store i32 %1095, i32* %1084, align 4
  br label %1096

1096:                                             ; preds = %1079, %1094
  %1097 = phi i32 [ %1095, %1094 ], [ %1085, %1079 ]
  %1098 = load atomic i32, i32* %1080 monotonic, align 4
  %1099 = and i32 %1098, 2
  %1100 = icmp eq i32 %1099, 0
  %1101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1077, i64 0, i32 0
  br i1 %1100, label %1102, label %1112

1102:                                             ; preds = %1096
  %1103 = zext i32 %1097 to i33
  %1104 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1103, i33 1) #22
  %1105 = extractvalue { i33, i1 } %1104, 1
  %1106 = extractvalue { i33, i1 } %1104, 0
  %1107 = icmp slt i33 %1106, 0
  %1108 = or i1 %1105, %1107
  br i1 %1108, label %1109, label %1110, !prof !3

1109:                                             ; preds = %1102
  call void @llvm.trap() #22
  unreachable

1110:                                             ; preds = %1102
  %1111 = trunc i33 %1106 to i32
  store i32 %1111, i32* %1101, align 4
  br label %1112

1112:                                             ; preds = %1110, %1096
  %1113 = phi i32 [ %1111, %1110 ], [ %1097, %1096 ]
  %1114 = load atomic i32, i32* %1080 monotonic, align 4
  %1115 = and i32 %1114, 2
  %1116 = icmp eq i32 %1115, 0
  br i1 %1116, label %1117, label %1119

1117:                                             ; preds = %1112
  %1118 = add i32 %1113, -1
  store i32 %1118, i32* %1101, align 4
  br label %1119

1119:                                             ; preds = %1117, %1112
  %1120 = phi i32 [ %1118, %1117 ], [ %1113, %1112 ]
  %1121 = icmp eq i32 %1120, 0
  br i1 %1121, label %1122, label %1123

1122:                                             ; preds = %1119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1077) #22
  br label %1123

1123:                                             ; preds = %1075, %1119, %1122
  %1124 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %22, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1077, %"class.WTF::StringImpl"** %1124, align 8
  %1125 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %22, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0), i8** %1125, align 8
  %1126 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %22)
  %1127 = ptrtoint %"class.WTF::StringImpl"* %1126 to i64
  %1128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %1127, i64* %260, align 8
  %1129 = icmp eq %"class.WTF::StringImpl"* %1128, null
  br i1 %1129, label %1143, label %1130

1130:                                             ; preds = %1123
  %1131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1132 = load atomic i32, i32* %1131 monotonic, align 4
  %1133 = and i32 %1132, 2
  %1134 = icmp eq i32 %1133, 0
  %1135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1128, i64 0, i32 0
  %1136 = load i32, i32* %1135, align 4
  br i1 %1134, label %1137, label %1139

1137:                                             ; preds = %1130
  %1138 = add i32 %1136, -1
  store i32 %1138, i32* %1135, align 4
  br label %1139

1139:                                             ; preds = %1137, %1130
  %1140 = phi i32 [ %1138, %1137 ], [ %1136, %1130 ]
  %1141 = icmp eq i32 %1140, 0
  br i1 %1141, label %1142, label %1143

1142:                                             ; preds = %1139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1128) #22
  br label %1143

1143:                                             ; preds = %1142, %1139, %1123
  %1144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1124, align 8
  %1145 = icmp eq %"class.WTF::StringImpl"* %1144, null
  br i1 %1145, label %1159, label %1146

1146:                                             ; preds = %1143
  %1147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1144, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1148 = load atomic i32, i32* %1147 monotonic, align 4
  %1149 = and i32 %1148, 2
  %1150 = icmp eq i32 %1149, 0
  %1151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1144, i64 0, i32 0
  %1152 = load i32, i32* %1151, align 4
  br i1 %1150, label %1153, label %1155

1153:                                             ; preds = %1146
  %1154 = add i32 %1152, -1
  store i32 %1154, i32* %1151, align 4
  br label %1155

1155:                                             ; preds = %1153, %1146
  %1156 = phi i32 [ %1154, %1153 ], [ %1152, %1146 ]
  %1157 = icmp eq i32 %1156, 0
  br i1 %1157, label %1158, label %1159

1158:                                             ; preds = %1155
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1144) #22
  br label %1159

1159:                                             ; preds = %1143, %1155, %1158
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1076) #22
  br label %1160

1160:                                             ; preds = %1159, %1073, %1070
  br i1 %2, label %1161, label %1166

1161:                                             ; preds = %1160
  %1162 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %1163 = load i8, i8* %1162, align 8
  %1164 = and i8 %1163, 1
  %1165 = icmp eq i8 %1164, 0
  br i1 %1165, label %1355, label %1171

1166:                                             ; preds = %1160
  call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %1167 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %1168 = load i8, i8* %1167, align 8
  %1169 = and i8 %1168, 1
  %1170 = icmp eq i8 %1169, 0
  br i1 %1170, label %1355, label %1171

1171:                                             ; preds = %1161, %1166
  %1172 = bitcast %"class.WTF::StringAppend"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1172) #22
  %1173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %1174 = icmp eq %"class.WTF::StringImpl"* %1173, null
  br i1 %1174, label %1219, label %1175

1175:                                             ; preds = %1171
  %1176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1173, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1177 = load atomic i32, i32* %1176 monotonic, align 4
  %1178 = and i32 %1177, 2
  %1179 = icmp eq i32 %1178, 0
  %1180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1173, i64 0, i32 0
  %1181 = load i32, i32* %1180, align 4
  br i1 %1179, label %1182, label %1192

1182:                                             ; preds = %1175
  %1183 = zext i32 %1181 to i33
  %1184 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1183, i33 1) #22
  %1185 = extractvalue { i33, i1 } %1184, 1
  %1186 = extractvalue { i33, i1 } %1184, 0
  %1187 = icmp slt i33 %1186, 0
  %1188 = or i1 %1185, %1187
  br i1 %1188, label %1189, label %1190, !prof !3

1189:                                             ; preds = %1182
  call void @llvm.trap() #22
  unreachable

1190:                                             ; preds = %1182
  %1191 = trunc i33 %1186 to i32
  store i32 %1191, i32* %1180, align 4
  br label %1192

1192:                                             ; preds = %1175, %1190
  %1193 = phi i32 [ %1191, %1190 ], [ %1181, %1175 ]
  %1194 = load atomic i32, i32* %1176 monotonic, align 4
  %1195 = and i32 %1194, 2
  %1196 = icmp eq i32 %1195, 0
  %1197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1173, i64 0, i32 0
  br i1 %1196, label %1198, label %1208

1198:                                             ; preds = %1192
  %1199 = zext i32 %1193 to i33
  %1200 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1199, i33 1) #22
  %1201 = extractvalue { i33, i1 } %1200, 1
  %1202 = extractvalue { i33, i1 } %1200, 0
  %1203 = icmp slt i33 %1202, 0
  %1204 = or i1 %1201, %1203
  br i1 %1204, label %1205, label %1206, !prof !3

1205:                                             ; preds = %1198
  call void @llvm.trap() #22
  unreachable

1206:                                             ; preds = %1198
  %1207 = trunc i33 %1202 to i32
  store i32 %1207, i32* %1197, align 4
  br label %1208

1208:                                             ; preds = %1206, %1192
  %1209 = phi i32 [ %1207, %1206 ], [ %1193, %1192 ]
  %1210 = load atomic i32, i32* %1176 monotonic, align 4
  %1211 = and i32 %1210, 2
  %1212 = icmp eq i32 %1211, 0
  br i1 %1212, label %1213, label %1215

1213:                                             ; preds = %1208
  %1214 = add i32 %1209, -1
  store i32 %1214, i32* %1197, align 4
  br label %1215

1215:                                             ; preds = %1213, %1208
  %1216 = phi i32 [ %1214, %1213 ], [ %1209, %1208 ]
  %1217 = icmp eq i32 %1216, 0
  br i1 %1217, label %1218, label %1219

1218:                                             ; preds = %1215
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1173) #22
  br label %1219

1219:                                             ; preds = %1171, %1215, %1218
  %1220 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %23, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1173, %"class.WTF::StringImpl"** %1220, align 8
  %1221 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %23, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i64 0, i64 0), i8** %1221, align 8
  %1222 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %23)
  %1223 = ptrtoint %"class.WTF::StringImpl"* %1222 to i64
  %1224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %1223, i64* %260, align 8
  %1225 = icmp eq %"class.WTF::StringImpl"* %1224, null
  br i1 %1225, label %1239, label %1226

1226:                                             ; preds = %1219
  %1227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1228 = load atomic i32, i32* %1227 monotonic, align 4
  %1229 = and i32 %1228, 2
  %1230 = icmp eq i32 %1229, 0
  %1231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1224, i64 0, i32 0
  %1232 = load i32, i32* %1231, align 4
  br i1 %1230, label %1233, label %1235

1233:                                             ; preds = %1226
  %1234 = add i32 %1232, -1
  store i32 %1234, i32* %1231, align 4
  br label %1235

1235:                                             ; preds = %1233, %1226
  %1236 = phi i32 [ %1234, %1233 ], [ %1232, %1226 ]
  %1237 = icmp eq i32 %1236, 0
  br i1 %1237, label %1238, label %1239

1238:                                             ; preds = %1235
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1224) #22
  br label %1239

1239:                                             ; preds = %1238, %1235, %1219
  %1240 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1220, align 8
  %1241 = icmp eq %"class.WTF::StringImpl"* %1240, null
  br i1 %1241, label %1255, label %1242

1242:                                             ; preds = %1239
  %1243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1240, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1244 = load atomic i32, i32* %1243 monotonic, align 4
  %1245 = and i32 %1244, 2
  %1246 = icmp eq i32 %1245, 0
  %1247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1240, i64 0, i32 0
  %1248 = load i32, i32* %1247, align 4
  br i1 %1246, label %1249, label %1251

1249:                                             ; preds = %1242
  %1250 = add i32 %1248, -1
  store i32 %1250, i32* %1247, align 4
  br label %1251

1251:                                             ; preds = %1249, %1242
  %1252 = phi i32 [ %1250, %1249 ], [ %1248, %1242 ]
  %1253 = icmp eq i32 %1252, 0
  br i1 %1253, label %1254, label %1255

1254:                                             ; preds = %1251
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1240) #22
  br label %1255

1255:                                             ; preds = %1239, %1251, %1254
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1172) #22
  br i1 %2, label %1256, label %1261

1256:                                             ; preds = %1255
  %1257 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %1258 = load i8, i8* %1257, align 8
  %1259 = and i8 %1258, 3
  %1260 = icmp eq i8 %1259, 1
  br i1 %1260, label %1270, label %1355

1261:                                             ; preds = %1255
  call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %1262 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %1263 = load i8, i8* %1262, align 8
  %1264 = and i8 %1263, 1
  %1265 = icmp eq i8 %1264, 0
  br i1 %1265, label %1355, label %1266

1266:                                             ; preds = %1261
  call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %1267 = load i8, i8* %1262, align 8
  %1268 = and i8 %1267, 2
  %1269 = icmp eq i8 %1268, 0
  br i1 %1269, label %1270, label %1355

1270:                                             ; preds = %1256, %1266
  %1271 = bitcast %"class.WTF::StringAppend"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1271) #22
  %1272 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %1273 = icmp eq %"class.WTF::StringImpl"* %1272, null
  br i1 %1273, label %1318, label %1274

1274:                                             ; preds = %1270
  %1275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1272, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1276 = load atomic i32, i32* %1275 monotonic, align 4
  %1277 = and i32 %1276, 2
  %1278 = icmp eq i32 %1277, 0
  %1279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1272, i64 0, i32 0
  %1280 = load i32, i32* %1279, align 4
  br i1 %1278, label %1281, label %1291

1281:                                             ; preds = %1274
  %1282 = zext i32 %1280 to i33
  %1283 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1282, i33 1) #22
  %1284 = extractvalue { i33, i1 } %1283, 1
  %1285 = extractvalue { i33, i1 } %1283, 0
  %1286 = icmp slt i33 %1285, 0
  %1287 = or i1 %1284, %1286
  br i1 %1287, label %1288, label %1289, !prof !3

1288:                                             ; preds = %1281
  call void @llvm.trap() #22
  unreachable

1289:                                             ; preds = %1281
  %1290 = trunc i33 %1285 to i32
  store i32 %1290, i32* %1279, align 4
  br label %1291

1291:                                             ; preds = %1274, %1289
  %1292 = phi i32 [ %1290, %1289 ], [ %1280, %1274 ]
  %1293 = load atomic i32, i32* %1275 monotonic, align 4
  %1294 = and i32 %1293, 2
  %1295 = icmp eq i32 %1294, 0
  %1296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1272, i64 0, i32 0
  br i1 %1295, label %1297, label %1307

1297:                                             ; preds = %1291
  %1298 = zext i32 %1292 to i33
  %1299 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1298, i33 1) #22
  %1300 = extractvalue { i33, i1 } %1299, 1
  %1301 = extractvalue { i33, i1 } %1299, 0
  %1302 = icmp slt i33 %1301, 0
  %1303 = or i1 %1300, %1302
  br i1 %1303, label %1304, label %1305, !prof !3

1304:                                             ; preds = %1297
  call void @llvm.trap() #22
  unreachable

1305:                                             ; preds = %1297
  %1306 = trunc i33 %1301 to i32
  store i32 %1306, i32* %1296, align 4
  br label %1307

1307:                                             ; preds = %1305, %1291
  %1308 = phi i32 [ %1306, %1305 ], [ %1292, %1291 ]
  %1309 = load atomic i32, i32* %1275 monotonic, align 4
  %1310 = and i32 %1309, 2
  %1311 = icmp eq i32 %1310, 0
  br i1 %1311, label %1312, label %1314

1312:                                             ; preds = %1307
  %1313 = add i32 %1308, -1
  store i32 %1313, i32* %1296, align 4
  br label %1314

1314:                                             ; preds = %1312, %1307
  %1315 = phi i32 [ %1313, %1312 ], [ %1308, %1307 ]
  %1316 = icmp eq i32 %1315, 0
  br i1 %1316, label %1317, label %1318

1317:                                             ; preds = %1314
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1272) #22
  br label %1318

1318:                                             ; preds = %1270, %1314, %1317
  %1319 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %24, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1272, %"class.WTF::StringImpl"** %1319, align 8
  %1320 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %24, i64 0, i32 1
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24, i64 0, i64 0), i8** %1320, align 8
  %1321 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %24)
  %1322 = ptrtoint %"class.WTF::StringImpl"* %1321 to i64
  %1323 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %1322, i64* %260, align 8
  %1324 = icmp eq %"class.WTF::StringImpl"* %1323, null
  br i1 %1324, label %1338, label %1325

1325:                                             ; preds = %1318
  %1326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1323, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1327 = load atomic i32, i32* %1326 monotonic, align 4
  %1328 = and i32 %1327, 2
  %1329 = icmp eq i32 %1328, 0
  %1330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1323, i64 0, i32 0
  %1331 = load i32, i32* %1330, align 4
  br i1 %1329, label %1332, label %1334

1332:                                             ; preds = %1325
  %1333 = add i32 %1331, -1
  store i32 %1333, i32* %1330, align 4
  br label %1334

1334:                                             ; preds = %1332, %1325
  %1335 = phi i32 [ %1333, %1332 ], [ %1331, %1325 ]
  %1336 = icmp eq i32 %1335, 0
  br i1 %1336, label %1337, label %1338

1337:                                             ; preds = %1334
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1323) #22
  br label %1338

1338:                                             ; preds = %1337, %1334, %1318
  %1339 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1319, align 8
  %1340 = icmp eq %"class.WTF::StringImpl"* %1339, null
  br i1 %1340, label %1354, label %1341

1341:                                             ; preds = %1338
  %1342 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1339, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1343 = load atomic i32, i32* %1342 monotonic, align 4
  %1344 = and i32 %1343, 2
  %1345 = icmp eq i32 %1344, 0
  %1346 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1339, i64 0, i32 0
  %1347 = load i32, i32* %1346, align 4
  br i1 %1345, label %1348, label %1350

1348:                                             ; preds = %1341
  %1349 = add i32 %1347, -1
  store i32 %1349, i32* %1346, align 4
  br label %1350

1350:                                             ; preds = %1348, %1341
  %1351 = phi i32 [ %1349, %1348 ], [ %1347, %1341 ]
  %1352 = icmp eq i32 %1351, 0
  br i1 %1352, label %1353, label %1354

1353:                                             ; preds = %1350
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1339) #22
  br label %1354

1354:                                             ; preds = %1338, %1350, %1353
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1271) #22
  br label %1355

1355:                                             ; preds = %1161, %1256, %1266, %1261, %1166, %1354
  %1356 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %327, align 8
  %1357 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %1356, i64 124
  %1358 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %1357, align 8
  %1359 = call %"class.blink::Node"* %1358(%"class.blink::AXObject"* %0) #22
  %1360 = icmp eq %"class.blink::Node"* %1359, null
  br i1 %1360, label %1890, label %1361

1361:                                             ; preds = %1355
  %1362 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %327, align 8
  %1363 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %1362, i64 124
  %1364 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %1363, align 8
  %1365 = call %"class.blink::Node"* %1364(%"class.blink::AXObject"* %0) #22
  %1366 = call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* %1365) #22
  %1367 = icmp eq %"class.blink::Element"* %1366, null
  br i1 %1367, label %1699, label %1368

1368:                                             ; preds = %1361
  %1369 = bitcast %"class.WTF::StringAppend"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1369) #22
  %1370 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %327, align 8
  %1371 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %1370, i64 124
  %1372 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %1371, align 8
  %1373 = call %"class.blink::Node"* %1372(%"class.blink::AXObject"* %0) #22
  %1374 = call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %1373) #22
  %1375 = icmp eq %"class.blink::ShadowRoot"* %1374, null
  br i1 %1375, label %1383, label %1376

1376:                                             ; preds = %1368
  %1377 = call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %1373) #22
  %1378 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %1377, i64 0, i32 4
  %1379 = load i32, i32* %1378, align 8
  %1380 = and i32 %1379, 196608
  %1381 = icmp eq i32 %1380, 131072
  %1382 = select i1 %1381, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i64 0, i64 0)
  br label %1383

1383:                                             ; preds = %1376, %1368
  %1384 = phi i8* [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i64 0, i64 0), %1368 ], [ %1382, %1376 ]
  %1385 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %1386 = icmp eq %"class.WTF::StringImpl"* %1385, null
  br i1 %1386, label %1431, label %1387

1387:                                             ; preds = %1383
  %1388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1385, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1389 = load atomic i32, i32* %1388 monotonic, align 4
  %1390 = and i32 %1389, 2
  %1391 = icmp eq i32 %1390, 0
  %1392 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1385, i64 0, i32 0
  %1393 = load i32, i32* %1392, align 4
  br i1 %1391, label %1394, label %1404

1394:                                             ; preds = %1387
  %1395 = zext i32 %1393 to i33
  %1396 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1395, i33 1) #22
  %1397 = extractvalue { i33, i1 } %1396, 1
  %1398 = extractvalue { i33, i1 } %1396, 0
  %1399 = icmp slt i33 %1398, 0
  %1400 = or i1 %1397, %1399
  br i1 %1400, label %1401, label %1402, !prof !3

1401:                                             ; preds = %1394
  call void @llvm.trap() #22
  unreachable

1402:                                             ; preds = %1394
  %1403 = trunc i33 %1398 to i32
  store i32 %1403, i32* %1392, align 4
  br label %1404

1404:                                             ; preds = %1387, %1402
  %1405 = phi i32 [ %1403, %1402 ], [ %1393, %1387 ]
  %1406 = load atomic i32, i32* %1388 monotonic, align 4
  %1407 = and i32 %1406, 2
  %1408 = icmp eq i32 %1407, 0
  %1409 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1385, i64 0, i32 0
  br i1 %1408, label %1410, label %1420

1410:                                             ; preds = %1404
  %1411 = zext i32 %1405 to i33
  %1412 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1411, i33 1) #22
  %1413 = extractvalue { i33, i1 } %1412, 1
  %1414 = extractvalue { i33, i1 } %1412, 0
  %1415 = icmp slt i33 %1414, 0
  %1416 = or i1 %1413, %1415
  br i1 %1416, label %1417, label %1418, !prof !3

1417:                                             ; preds = %1410
  call void @llvm.trap() #22
  unreachable

1418:                                             ; preds = %1410
  %1419 = trunc i33 %1414 to i32
  store i32 %1419, i32* %1409, align 4
  br label %1420

1420:                                             ; preds = %1418, %1404
  %1421 = phi i32 [ %1419, %1418 ], [ %1405, %1404 ]
  %1422 = load atomic i32, i32* %1388 monotonic, align 4
  %1423 = and i32 %1422, 2
  %1424 = icmp eq i32 %1423, 0
  br i1 %1424, label %1425, label %1427

1425:                                             ; preds = %1420
  %1426 = add i32 %1421, -1
  store i32 %1426, i32* %1409, align 4
  br label %1427

1427:                                             ; preds = %1425, %1420
  %1428 = phi i32 [ %1426, %1425 ], [ %1421, %1420 ]
  %1429 = icmp eq i32 %1428, 0
  br i1 %1429, label %1430, label %1431

1430:                                             ; preds = %1427
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1385) #22
  br label %1431

1431:                                             ; preds = %1383, %1427, %1430
  %1432 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %25, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1385, %"class.WTF::StringImpl"** %1432, align 8
  %1433 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %25, i64 0, i32 1
  store i8* %1384, i8** %1433, align 8
  %1434 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %25)
  %1435 = ptrtoint %"class.WTF::StringImpl"* %1434 to i64
  %1436 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %1435, i64* %260, align 8
  %1437 = icmp eq %"class.WTF::StringImpl"* %1436, null
  br i1 %1437, label %1451, label %1438

1438:                                             ; preds = %1431
  %1439 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1436, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1440 = load atomic i32, i32* %1439 monotonic, align 4
  %1441 = and i32 %1440, 2
  %1442 = icmp eq i32 %1441, 0
  %1443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1436, i64 0, i32 0
  %1444 = load i32, i32* %1443, align 4
  br i1 %1442, label %1445, label %1447

1445:                                             ; preds = %1438
  %1446 = add i32 %1444, -1
  store i32 %1446, i32* %1443, align 4
  br label %1447

1447:                                             ; preds = %1445, %1438
  %1448 = phi i32 [ %1446, %1445 ], [ %1444, %1438 ]
  %1449 = icmp eq i32 %1448, 0
  br i1 %1449, label %1450, label %1451

1450:                                             ; preds = %1447
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1436) #22
  br label %1451

1451:                                             ; preds = %1450, %1447, %1431
  %1452 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1432, align 8
  %1453 = icmp eq %"class.WTF::StringImpl"* %1452, null
  br i1 %1453, label %1467, label %1454

1454:                                             ; preds = %1451
  %1455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1452, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1456 = load atomic i32, i32* %1455 monotonic, align 4
  %1457 = and i32 %1456, 2
  %1458 = icmp eq i32 %1457, 0
  %1459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1452, i64 0, i32 0
  %1460 = load i32, i32* %1459, align 4
  br i1 %1458, label %1461, label %1463

1461:                                             ; preds = %1454
  %1462 = add i32 %1460, -1
  store i32 %1462, i32* %1459, align 4
  br label %1463

1463:                                             ; preds = %1461, %1454
  %1464 = phi i32 [ %1462, %1461 ], [ %1460, %1454 ]
  %1465 = icmp eq i32 %1464, 0
  br i1 %1465, label %1466, label %1467

1466:                                             ; preds = %1463
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1452) #22
  br label %1467

1467:                                             ; preds = %1451, %1463, %1466
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1369) #22
  %1468 = bitcast %"class.WTF::StringAppend.3841"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1468) #22
  %1469 = bitcast %"class.WTF::StringAppend.3839"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1469) #22
  %1470 = bitcast %"class.WTF::StringAppend"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1470) #22
  %1471 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %1472 = icmp eq %"class.WTF::StringImpl"* %1471, null
  br i1 %1472, label %1517, label %1473

1473:                                             ; preds = %1467
  %1474 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1471, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1475 = load atomic i32, i32* %1474 monotonic, align 4
  %1476 = and i32 %1475, 2
  %1477 = icmp eq i32 %1476, 0
  %1478 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1471, i64 0, i32 0
  %1479 = load i32, i32* %1478, align 4
  br i1 %1477, label %1480, label %1490

1480:                                             ; preds = %1473
  %1481 = zext i32 %1479 to i33
  %1482 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1481, i33 1) #22
  %1483 = extractvalue { i33, i1 } %1482, 1
  %1484 = extractvalue { i33, i1 } %1482, 0
  %1485 = icmp slt i33 %1484, 0
  %1486 = or i1 %1483, %1485
  br i1 %1486, label %1487, label %1488, !prof !3

1487:                                             ; preds = %1480
  call void @llvm.trap() #22
  unreachable

1488:                                             ; preds = %1480
  %1489 = trunc i33 %1484 to i32
  store i32 %1489, i32* %1478, align 4
  br label %1490

1490:                                             ; preds = %1473, %1488
  %1491 = phi i32 [ %1489, %1488 ], [ %1479, %1473 ]
  %1492 = load atomic i32, i32* %1474 monotonic, align 4
  %1493 = and i32 %1492, 2
  %1494 = icmp eq i32 %1493, 0
  %1495 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1471, i64 0, i32 0
  br i1 %1494, label %1496, label %1506

1496:                                             ; preds = %1490
  %1497 = zext i32 %1491 to i33
  %1498 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1497, i33 1) #22
  %1499 = extractvalue { i33, i1 } %1498, 1
  %1500 = extractvalue { i33, i1 } %1498, 0
  %1501 = icmp slt i33 %1500, 0
  %1502 = or i1 %1499, %1501
  br i1 %1502, label %1503, label %1504, !prof !3

1503:                                             ; preds = %1496
  call void @llvm.trap() #22
  unreachable

1504:                                             ; preds = %1496
  %1505 = trunc i33 %1500 to i32
  store i32 %1505, i32* %1495, align 4
  br label %1506

1506:                                             ; preds = %1504, %1490
  %1507 = phi i32 [ %1505, %1504 ], [ %1491, %1490 ]
  %1508 = load atomic i32, i32* %1474 monotonic, align 4
  %1509 = and i32 %1508, 2
  %1510 = icmp eq i32 %1509, 0
  br i1 %1510, label %1511, label %1513

1511:                                             ; preds = %1506
  %1512 = add i32 %1507, -1
  store i32 %1512, i32* %1495, align 4
  br label %1513

1513:                                             ; preds = %1511, %1506
  %1514 = phi i32 [ %1512, %1511 ], [ %1507, %1506 ]
  %1515 = icmp eq i32 %1514, 0
  br i1 %1515, label %1516, label %1517

1516:                                             ; preds = %1513
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1471) #22
  br label %1517

1517:                                             ; preds = %1467, %1513, %1516
  %1518 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %28, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1471, %"class.WTF::StringImpl"** %1518, align 8
  %1519 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %28, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i64 0, i64 0), i8** %1519, align 8
  %1520 = bitcast %"class.WTF::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1520) #22
  %1521 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %327, align 8
  %1522 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %1521, i64 124
  %1523 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %1522, align 8
  %1524 = call %"class.blink::Node"* %1523(%"class.blink::AXObject"* %0) #22
  %1525 = call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* %1524) #22
  %1526 = bitcast %"class.blink::Element"* %1525 to %"class.WTF::StringImpl"* (%"class.blink::Element"*)***
  %1527 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)**, %"class.WTF::StringImpl"* (%"class.blink::Element"*)*** %1526, align 8
  %1528 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %1527, i64 27
  %1529 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %1528, align 8
  %1530 = call %"class.WTF::StringImpl"* %1529(%"class.blink::Element"* %1525) #22
  %1531 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1530, %"class.WTF::StringImpl"** %1531, align 8
  %1532 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"* nonnull %29) #22
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.3839"* nonnull sret %27, %"class.WTF::StringAppend"* nonnull dereferenceable(16) %28, %"class.WTF::StringImpl"* %1532)
  %1533 = bitcast %"class.WTF::StringAppend.3839"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1533)
  %1534 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %1535 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1534, align 8, !noalias !4
  %1536 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1535, %"class.WTF::StringImpl"** %1536, align 8, !noalias !4
  %1537 = icmp eq %"class.WTF::StringImpl"* %1535, null
  br i1 %1537, label %1555, label %1538

1538:                                             ; preds = %1517
  %1539 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1535, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1540 = load atomic i32, i32* %1539 monotonic, align 4
  %1541 = and i32 %1540, 2
  %1542 = icmp eq i32 %1541, 0
  br i1 %1542, label %1543, label %1555

1543:                                             ; preds = %1538
  %1544 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1535, i64 0, i32 0
  %1545 = load i32, i32* %1544, align 4
  %1546 = zext i32 %1545 to i33
  %1547 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1546, i33 1) #22
  %1548 = extractvalue { i33, i1 } %1547, 1
  %1549 = extractvalue { i33, i1 } %1547, 0
  %1550 = icmp slt i33 %1549, 0
  %1551 = or i1 %1548, %1550
  br i1 %1551, label %1552, label %1553, !prof !3

1552:                                             ; preds = %1543
  call void @llvm.trap() #22
  unreachable

1553:                                             ; preds = %1543
  %1554 = trunc i33 %1549 to i32
  store i32 %1554, i32* %1544, align 4
  br label %1555

1555:                                             ; preds = %1553, %1538, %1517
  %1556 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %8, i64 0, i32 0, i32 1
  %1557 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %27, i64 0, i32 0, i32 1
  %1558 = bitcast i8** %1557 to i64*
  %1559 = load i64, i64* %1558, align 8, !noalias !4
  %1560 = bitcast i8** %1556 to i64*
  store i64 %1559, i64* %1560, align 8, !noalias !4
  %1561 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %27, i64 0, i32 1, i32 0, i32 0
  %1562 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1561, align 8, !noalias !4
  %1563 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %8, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1562, %"class.WTF::StringImpl"** %1563, align 8, !noalias !4
  %1564 = icmp eq %"class.WTF::StringImpl"* %1562, null
  br i1 %1564, label %1582, label %1565

1565:                                             ; preds = %1555
  %1566 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1562, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1567 = load atomic i32, i32* %1566 monotonic, align 4
  %1568 = and i32 %1567, 2
  %1569 = icmp eq i32 %1568, 0
  br i1 %1569, label %1570, label %1582

1570:                                             ; preds = %1565
  %1571 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1562, i64 0, i32 0
  %1572 = load i32, i32* %1571, align 4
  %1573 = zext i32 %1572 to i33
  %1574 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1573, i33 1) #22
  %1575 = extractvalue { i33, i1 } %1574, 1
  %1576 = extractvalue { i33, i1 } %1574, 0
  %1577 = icmp slt i33 %1576, 0
  %1578 = or i1 %1575, %1577
  br i1 %1578, label %1579, label %1580, !prof !3

1579:                                             ; preds = %1570
  call void @llvm.trap() #22
  unreachable

1580:                                             ; preds = %1570
  %1581 = trunc i33 %1576 to i32
  store i32 %1581, i32* %1571, align 4
  br label %1582

1582:                                             ; preds = %1555, %1565, %1580
  call void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.3841"* nonnull %26, %"class.WTF::StringAppend.3839"* nonnull byval(%"class.WTF::StringAppend.3839") align 8 %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0)) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1533)
  %1583 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend.3841"* nonnull %26)
  %1584 = ptrtoint %"class.WTF::StringImpl"* %1583 to i64
  %1585 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %1584, i64* %260, align 8
  %1586 = icmp eq %"class.WTF::StringImpl"* %1585, null
  br i1 %1586, label %1600, label %1587

1587:                                             ; preds = %1582
  %1588 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1585, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1589 = load atomic i32, i32* %1588 monotonic, align 4
  %1590 = and i32 %1589, 2
  %1591 = icmp eq i32 %1590, 0
  %1592 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1585, i64 0, i32 0
  %1593 = load i32, i32* %1592, align 4
  br i1 %1591, label %1594, label %1596

1594:                                             ; preds = %1587
  %1595 = add i32 %1593, -1
  store i32 %1595, i32* %1592, align 4
  br label %1596

1596:                                             ; preds = %1594, %1587
  %1597 = phi i32 [ %1595, %1594 ], [ %1593, %1587 ]
  %1598 = icmp eq i32 %1597, 0
  br i1 %1598, label %1599, label %1600

1599:                                             ; preds = %1596
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1585) #22
  br label %1600

1600:                                             ; preds = %1599, %1596, %1582
  %1601 = getelementptr inbounds %"class.WTF::StringAppend.3841", %"class.WTF::StringAppend.3841"* %26, i64 0, i32 0, i32 1, i32 0, i32 0
  %1602 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1601, align 8
  %1603 = icmp eq %"class.WTF::StringImpl"* %1602, null
  br i1 %1603, label %1617, label %1604

1604:                                             ; preds = %1600
  %1605 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1602, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1606 = load atomic i32, i32* %1605 monotonic, align 4
  %1607 = and i32 %1606, 2
  %1608 = icmp eq i32 %1607, 0
  %1609 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1602, i64 0, i32 0
  %1610 = load i32, i32* %1609, align 4
  br i1 %1608, label %1611, label %1613

1611:                                             ; preds = %1604
  %1612 = add i32 %1610, -1
  store i32 %1612, i32* %1609, align 4
  br label %1613

1613:                                             ; preds = %1611, %1604
  %1614 = phi i32 [ %1612, %1611 ], [ %1610, %1604 ]
  %1615 = icmp eq i32 %1614, 0
  br i1 %1615, label %1616, label %1617

1616:                                             ; preds = %1613
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1602) #22
  br label %1617

1617:                                             ; preds = %1616, %1613, %1600
  %1618 = getelementptr inbounds %"class.WTF::StringAppend.3841", %"class.WTF::StringAppend.3841"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1619 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1618, align 8
  %1620 = icmp eq %"class.WTF::StringImpl"* %1619, null
  br i1 %1620, label %1634, label %1621

1621:                                             ; preds = %1617
  %1622 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1619, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1623 = load atomic i32, i32* %1622 monotonic, align 4
  %1624 = and i32 %1623, 2
  %1625 = icmp eq i32 %1624, 0
  %1626 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1619, i64 0, i32 0
  %1627 = load i32, i32* %1626, align 4
  br i1 %1625, label %1628, label %1630

1628:                                             ; preds = %1621
  %1629 = add i32 %1627, -1
  store i32 %1629, i32* %1626, align 4
  br label %1630

1630:                                             ; preds = %1628, %1621
  %1631 = phi i32 [ %1629, %1628 ], [ %1627, %1621 ]
  %1632 = icmp eq i32 %1631, 0
  br i1 %1632, label %1633, label %1634

1633:                                             ; preds = %1630
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1619) #22
  br label %1634

1634:                                             ; preds = %1617, %1630, %1633
  %1635 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1561, align 8
  %1636 = icmp eq %"class.WTF::StringImpl"* %1635, null
  br i1 %1636, label %1650, label %1637

1637:                                             ; preds = %1634
  %1638 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1635, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1639 = load atomic i32, i32* %1638 monotonic, align 4
  %1640 = and i32 %1639, 2
  %1641 = icmp eq i32 %1640, 0
  %1642 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1635, i64 0, i32 0
  %1643 = load i32, i32* %1642, align 4
  br i1 %1641, label %1644, label %1646

1644:                                             ; preds = %1637
  %1645 = add i32 %1643, -1
  store i32 %1645, i32* %1642, align 4
  br label %1646

1646:                                             ; preds = %1644, %1637
  %1647 = phi i32 [ %1645, %1644 ], [ %1643, %1637 ]
  %1648 = icmp eq i32 %1647, 0
  br i1 %1648, label %1649, label %1650

1649:                                             ; preds = %1646
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1635) #22
  br label %1650

1650:                                             ; preds = %1649, %1646, %1634
  %1651 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1534, align 8
  %1652 = icmp eq %"class.WTF::StringImpl"* %1651, null
  br i1 %1652, label %1666, label %1653

1653:                                             ; preds = %1650
  %1654 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1651, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1655 = load atomic i32, i32* %1654 monotonic, align 4
  %1656 = and i32 %1655, 2
  %1657 = icmp eq i32 %1656, 0
  %1658 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1651, i64 0, i32 0
  %1659 = load i32, i32* %1658, align 4
  br i1 %1657, label %1660, label %1662

1660:                                             ; preds = %1653
  %1661 = add i32 %1659, -1
  store i32 %1661, i32* %1658, align 4
  br label %1662

1662:                                             ; preds = %1660, %1653
  %1663 = phi i32 [ %1661, %1660 ], [ %1659, %1653 ]
  %1664 = icmp eq i32 %1663, 0
  br i1 %1664, label %1665, label %1666

1665:                                             ; preds = %1662
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1651) #22
  br label %1666

1666:                                             ; preds = %1650, %1662, %1665
  %1667 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1531, align 8
  %1668 = icmp eq %"class.WTF::StringImpl"* %1667, null
  br i1 %1668, label %1682, label %1669

1669:                                             ; preds = %1666
  %1670 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1667, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1671 = load atomic i32, i32* %1670 monotonic, align 4
  %1672 = and i32 %1671, 2
  %1673 = icmp eq i32 %1672, 0
  %1674 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1667, i64 0, i32 0
  %1675 = load i32, i32* %1674, align 4
  br i1 %1673, label %1676, label %1678

1676:                                             ; preds = %1669
  %1677 = add i32 %1675, -1
  store i32 %1677, i32* %1674, align 4
  br label %1678

1678:                                             ; preds = %1676, %1669
  %1679 = phi i32 [ %1677, %1676 ], [ %1675, %1669 ]
  %1680 = icmp eq i32 %1679, 0
  br i1 %1680, label %1681, label %1682

1681:                                             ; preds = %1678
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1667) #22
  br label %1682

1682:                                             ; preds = %1666, %1678, %1681
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1520) #22
  %1683 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1518, align 8
  %1684 = icmp eq %"class.WTF::StringImpl"* %1683, null
  br i1 %1684, label %1698, label %1685

1685:                                             ; preds = %1682
  %1686 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1683, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1687 = load atomic i32, i32* %1686 monotonic, align 4
  %1688 = and i32 %1687, 2
  %1689 = icmp eq i32 %1688, 0
  %1690 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1683, i64 0, i32 0
  %1691 = load i32, i32* %1690, align 4
  br i1 %1689, label %1692, label %1694

1692:                                             ; preds = %1685
  %1693 = add i32 %1691, -1
  store i32 %1693, i32* %1690, align 4
  br label %1694

1694:                                             ; preds = %1692, %1685
  %1695 = phi i32 [ %1693, %1692 ], [ %1691, %1685 ]
  %1696 = icmp eq i32 %1695, 0
  br i1 %1696, label %1697, label %1698

1697:                                             ; preds = %1694
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1683) #22
  br label %1698

1698:                                             ; preds = %1682, %1694, %1697
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1470) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1469) #22
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1468) #22
  br label %1699

1699:                                             ; preds = %1361, %1698
  %1700 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %327, align 8
  %1701 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %1700, i64 124
  %1702 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %1701, align 8
  %1703 = call %"class.blink::Node"* %1702(%"class.blink::AXObject"* %0) #22
  %1704 = icmp eq %"class.blink::Node"* %1703, null
  br i1 %1704, label %1799, label %1705

1705:                                             ; preds = %1699
  %1706 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1703, i64 0, i32 1
  %1707 = load i32, i32* %1706, align 8
  %1708 = and i32 %1707, 12
  %1709 = icmp eq i32 %1708, 0
  br i1 %1709, label %1710, label %1799

1710:                                             ; preds = %1705
  %1711 = bitcast %"class.blink::Node"* %1703 to %"class.blink::Element"*
  %1712 = call %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"* nonnull %1711) #22
  %1713 = icmp eq %"class.blink::ShadowRoot"* %1712, null
  br i1 %1713, label %1799, label %1714

1714:                                             ; preds = %1710
  %1715 = bitcast %"class.WTF::StringAppend"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1715) #22
  %1716 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %1717 = icmp eq %"class.WTF::StringImpl"* %1716, null
  br i1 %1717, label %1762, label %1718

1718:                                             ; preds = %1714
  %1719 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1716, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1720 = load atomic i32, i32* %1719 monotonic, align 4
  %1721 = and i32 %1720, 2
  %1722 = icmp eq i32 %1721, 0
  %1723 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1716, i64 0, i32 0
  %1724 = load i32, i32* %1723, align 4
  br i1 %1722, label %1725, label %1735

1725:                                             ; preds = %1718
  %1726 = zext i32 %1724 to i33
  %1727 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1726, i33 1) #22
  %1728 = extractvalue { i33, i1 } %1727, 1
  %1729 = extractvalue { i33, i1 } %1727, 0
  %1730 = icmp slt i33 %1729, 0
  %1731 = or i1 %1728, %1730
  br i1 %1731, label %1732, label %1733, !prof !3

1732:                                             ; preds = %1725
  call void @llvm.trap() #22
  unreachable

1733:                                             ; preds = %1725
  %1734 = trunc i33 %1729 to i32
  store i32 %1734, i32* %1723, align 4
  br label %1735

1735:                                             ; preds = %1718, %1733
  %1736 = phi i32 [ %1734, %1733 ], [ %1724, %1718 ]
  %1737 = load atomic i32, i32* %1719 monotonic, align 4
  %1738 = and i32 %1737, 2
  %1739 = icmp eq i32 %1738, 0
  %1740 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1716, i64 0, i32 0
  br i1 %1739, label %1741, label %1751

1741:                                             ; preds = %1735
  %1742 = zext i32 %1736 to i33
  %1743 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1742, i33 1) #22
  %1744 = extractvalue { i33, i1 } %1743, 1
  %1745 = extractvalue { i33, i1 } %1743, 0
  %1746 = icmp slt i33 %1745, 0
  %1747 = or i1 %1744, %1746
  br i1 %1747, label %1748, label %1749, !prof !3

1748:                                             ; preds = %1741
  call void @llvm.trap() #22
  unreachable

1749:                                             ; preds = %1741
  %1750 = trunc i33 %1745 to i32
  store i32 %1750, i32* %1740, align 4
  br label %1751

1751:                                             ; preds = %1749, %1735
  %1752 = phi i32 [ %1750, %1749 ], [ %1736, %1735 ]
  %1753 = load atomic i32, i32* %1719 monotonic, align 4
  %1754 = and i32 %1753, 2
  %1755 = icmp eq i32 %1754, 0
  br i1 %1755, label %1756, label %1758

1756:                                             ; preds = %1751
  %1757 = add i32 %1752, -1
  store i32 %1757, i32* %1740, align 4
  br label %1758

1758:                                             ; preds = %1756, %1751
  %1759 = phi i32 [ %1757, %1756 ], [ %1752, %1751 ]
  %1760 = icmp eq i32 %1759, 0
  br i1 %1760, label %1761, label %1762

1761:                                             ; preds = %1758
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1716) #22
  br label %1762

1762:                                             ; preds = %1714, %1758, %1761
  %1763 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %30, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1716, %"class.WTF::StringImpl"** %1763, align 8
  %1764 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %30, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0), i8** %1764, align 8
  %1765 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %30)
  %1766 = ptrtoint %"class.WTF::StringImpl"* %1765 to i64
  %1767 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %1766, i64* %260, align 8
  %1768 = icmp eq %"class.WTF::StringImpl"* %1767, null
  br i1 %1768, label %1782, label %1769

1769:                                             ; preds = %1762
  %1770 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1767, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1771 = load atomic i32, i32* %1770 monotonic, align 4
  %1772 = and i32 %1771, 2
  %1773 = icmp eq i32 %1772, 0
  %1774 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1767, i64 0, i32 0
  %1775 = load i32, i32* %1774, align 4
  br i1 %1773, label %1776, label %1778

1776:                                             ; preds = %1769
  %1777 = add i32 %1775, -1
  store i32 %1777, i32* %1774, align 4
  br label %1778

1778:                                             ; preds = %1776, %1769
  %1779 = phi i32 [ %1777, %1776 ], [ %1775, %1769 ]
  %1780 = icmp eq i32 %1779, 0
  br i1 %1780, label %1781, label %1782

1781:                                             ; preds = %1778
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1767) #22
  br label %1782

1782:                                             ; preds = %1781, %1778, %1762
  %1783 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1763, align 8
  %1784 = icmp eq %"class.WTF::StringImpl"* %1783, null
  br i1 %1784, label %1798, label %1785

1785:                                             ; preds = %1782
  %1786 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1783, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1787 = load atomic i32, i32* %1786 monotonic, align 4
  %1788 = and i32 %1787, 2
  %1789 = icmp eq i32 %1788, 0
  %1790 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1783, i64 0, i32 0
  %1791 = load i32, i32* %1790, align 4
  br i1 %1789, label %1792, label %1794

1792:                                             ; preds = %1785
  %1793 = add i32 %1791, -1
  store i32 %1793, i32* %1790, align 4
  br label %1794

1794:                                             ; preds = %1792, %1785
  %1795 = phi i32 [ %1793, %1792 ], [ %1791, %1785 ]
  %1796 = icmp eq i32 %1795, 0
  br i1 %1796, label %1797, label %1798

1797:                                             ; preds = %1794
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1783) #22
  br label %1798

1798:                                             ; preds = %1782, %1794, %1797
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1715) #22
  br label %1799

1799:                                             ; preds = %1699, %1705, %1710, %1798
  %1800 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %327, align 8
  %1801 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %1800, i64 124
  %1802 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %1801, align 8
  %1803 = call %"class.blink::Node"* %1802(%"class.blink::AXObject"* %0) #22
  %1804 = call zeroext i1 @_ZN5blink20DisplayLockUtilities32IsInUnlockedOrActivatableSubtreeERKNS_4NodeENS_27DisplayLockActivationReasonE(%"class.blink::Node"* dereferenceable(64) %1803, i32 1) #22
  br i1 %1804, label %1890, label %1805

1805:                                             ; preds = %1799
  %1806 = bitcast %"class.WTF::StringAppend"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1806) #22
  %1807 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %1808 = icmp eq %"class.WTF::StringImpl"* %1807, null
  br i1 %1808, label %1853, label %1809

1809:                                             ; preds = %1805
  %1810 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1807, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1811 = load atomic i32, i32* %1810 monotonic, align 4
  %1812 = and i32 %1811, 2
  %1813 = icmp eq i32 %1812, 0
  %1814 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1807, i64 0, i32 0
  %1815 = load i32, i32* %1814, align 4
  br i1 %1813, label %1816, label %1826

1816:                                             ; preds = %1809
  %1817 = zext i32 %1815 to i33
  %1818 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1817, i33 1) #22
  %1819 = extractvalue { i33, i1 } %1818, 1
  %1820 = extractvalue { i33, i1 } %1818, 0
  %1821 = icmp slt i33 %1820, 0
  %1822 = or i1 %1819, %1821
  br i1 %1822, label %1823, label %1824, !prof !3

1823:                                             ; preds = %1816
  call void @llvm.trap() #22
  unreachable

1824:                                             ; preds = %1816
  %1825 = trunc i33 %1820 to i32
  store i32 %1825, i32* %1814, align 4
  br label %1826

1826:                                             ; preds = %1809, %1824
  %1827 = phi i32 [ %1825, %1824 ], [ %1815, %1809 ]
  %1828 = load atomic i32, i32* %1810 monotonic, align 4
  %1829 = and i32 %1828, 2
  %1830 = icmp eq i32 %1829, 0
  %1831 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1807, i64 0, i32 0
  br i1 %1830, label %1832, label %1842

1832:                                             ; preds = %1826
  %1833 = zext i32 %1827 to i33
  %1834 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1833, i33 1) #22
  %1835 = extractvalue { i33, i1 } %1834, 1
  %1836 = extractvalue { i33, i1 } %1834, 0
  %1837 = icmp slt i33 %1836, 0
  %1838 = or i1 %1835, %1837
  br i1 %1838, label %1839, label %1840, !prof !3

1839:                                             ; preds = %1832
  call void @llvm.trap() #22
  unreachable

1840:                                             ; preds = %1832
  %1841 = trunc i33 %1836 to i32
  store i32 %1841, i32* %1831, align 4
  br label %1842

1842:                                             ; preds = %1840, %1826
  %1843 = phi i32 [ %1841, %1840 ], [ %1827, %1826 ]
  %1844 = load atomic i32, i32* %1810 monotonic, align 4
  %1845 = and i32 %1844, 2
  %1846 = icmp eq i32 %1845, 0
  br i1 %1846, label %1847, label %1849

1847:                                             ; preds = %1842
  %1848 = add i32 %1843, -1
  store i32 %1848, i32* %1831, align 4
  br label %1849

1849:                                             ; preds = %1847, %1842
  %1850 = phi i32 [ %1848, %1847 ], [ %1843, %1842 ]
  %1851 = icmp eq i32 %1850, 0
  br i1 %1851, label %1852, label %1853

1852:                                             ; preds = %1849
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1807) #22
  br label %1853

1853:                                             ; preds = %1805, %1849, %1852
  %1854 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %31, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1807, %"class.WTF::StringImpl"** %1854, align 8
  %1855 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %31, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.30, i64 0, i64 0), i8** %1855, align 8
  %1856 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %31)
  %1857 = ptrtoint %"class.WTF::StringImpl"* %1856 to i64
  %1858 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %1857, i64* %260, align 8
  %1859 = icmp eq %"class.WTF::StringImpl"* %1858, null
  br i1 %1859, label %1873, label %1860

1860:                                             ; preds = %1853
  %1861 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1858, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1862 = load atomic i32, i32* %1861 monotonic, align 4
  %1863 = and i32 %1862, 2
  %1864 = icmp eq i32 %1863, 0
  %1865 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1858, i64 0, i32 0
  %1866 = load i32, i32* %1865, align 4
  br i1 %1864, label %1867, label %1869

1867:                                             ; preds = %1860
  %1868 = add i32 %1866, -1
  store i32 %1868, i32* %1865, align 4
  br label %1869

1869:                                             ; preds = %1867, %1860
  %1870 = phi i32 [ %1868, %1867 ], [ %1866, %1860 ]
  %1871 = icmp eq i32 %1870, 0
  br i1 %1871, label %1872, label %1873

1872:                                             ; preds = %1869
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1858) #22
  br label %1873

1873:                                             ; preds = %1872, %1869, %1853
  %1874 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1854, align 8
  %1875 = icmp eq %"class.WTF::StringImpl"* %1874, null
  br i1 %1875, label %1889, label %1876

1876:                                             ; preds = %1873
  %1877 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1874, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1878 = load atomic i32, i32* %1877 monotonic, align 4
  %1879 = and i32 %1878, 2
  %1880 = icmp eq i32 %1879, 0
  %1881 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1874, i64 0, i32 0
  %1882 = load i32, i32* %1881, align 4
  br i1 %1880, label %1883, label %1885

1883:                                             ; preds = %1876
  %1884 = add i32 %1882, -1
  store i32 %1884, i32* %1881, align 4
  br label %1885

1885:                                             ; preds = %1883, %1876
  %1886 = phi i32 [ %1884, %1883 ], [ %1882, %1876 ]
  %1887 = icmp eq i32 %1886, 0
  br i1 %1887, label %1888, label %1889

1888:                                             ; preds = %1885
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1874) #22
  br label %1889

1889:                                             ; preds = %1873, %1885, %1888
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1806) #22
  br label %1890

1890:                                             ; preds = %1799, %1355, %1889
  br i1 %2, label %1893, label %1891

1891:                                             ; preds = %1890
  %1892 = icmp eq %"class.blink::AXObject"* %0, null
  br i1 %1892, label %2201, label %1995

1893:                                             ; preds = %1890
  %1894 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %1895 = load i8, i8* %1894, align 8
  %1896 = and i8 %1895, 4
  %1897 = icmp eq i8 %1896, 0
  br i1 %1897, label %2196, label %1898

1898:                                             ; preds = %1893
  %1899 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %327, align 8
  %1900 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %1899, i64 124
  %1901 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %1900, align 8
  %1902 = call %"class.blink::Node"* %1901(%"class.blink::AXObject"* %0) #22
  %1903 = icmp eq %"class.blink::Node"* %1902, null
  br i1 %1903, label %2196, label %1904

1904:                                             ; preds = %1898
  %1905 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %327, align 8
  %1906 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %1905, i64 124
  %1907 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %1906, align 8
  %1908 = call %"class.blink::Node"* %1907(%"class.blink::AXObject"* %0) #22
  %1909 = call zeroext i1 @_ZNK5blink4Node7IsInertEv(%"class.blink::Node"* %1908) #22
  br i1 %1909, label %2196, label %1910

1910:                                             ; preds = %1904
  %1911 = bitcast %"class.WTF::StringAppend"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1911) #22
  %1912 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %1913 = icmp eq %"class.WTF::StringImpl"* %1912, null
  br i1 %1913, label %1958, label %1914

1914:                                             ; preds = %1910
  %1915 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1912, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1916 = load atomic i32, i32* %1915 monotonic, align 4
  %1917 = and i32 %1916, 2
  %1918 = icmp eq i32 %1917, 0
  %1919 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1912, i64 0, i32 0
  %1920 = load i32, i32* %1919, align 4
  br i1 %1918, label %1921, label %1931

1921:                                             ; preds = %1914
  %1922 = zext i32 %1920 to i33
  %1923 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1922, i33 1) #22
  %1924 = extractvalue { i33, i1 } %1923, 1
  %1925 = extractvalue { i33, i1 } %1923, 0
  %1926 = icmp slt i33 %1925, 0
  %1927 = or i1 %1924, %1926
  br i1 %1927, label %1928, label %1929, !prof !3

1928:                                             ; preds = %1921
  call void @llvm.trap() #22
  unreachable

1929:                                             ; preds = %1921
  %1930 = trunc i33 %1925 to i32
  store i32 %1930, i32* %1919, align 4
  br label %1931

1931:                                             ; preds = %1914, %1929
  %1932 = phi i32 [ %1930, %1929 ], [ %1920, %1914 ]
  %1933 = load atomic i32, i32* %1915 monotonic, align 4
  %1934 = and i32 %1933, 2
  %1935 = icmp eq i32 %1934, 0
  %1936 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1912, i64 0, i32 0
  br i1 %1935, label %1937, label %1947

1937:                                             ; preds = %1931
  %1938 = zext i32 %1932 to i33
  %1939 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1938, i33 1) #22
  %1940 = extractvalue { i33, i1 } %1939, 1
  %1941 = extractvalue { i33, i1 } %1939, 0
  %1942 = icmp slt i33 %1941, 0
  %1943 = or i1 %1940, %1942
  br i1 %1943, label %1944, label %1945, !prof !3

1944:                                             ; preds = %1937
  call void @llvm.trap() #22
  unreachable

1945:                                             ; preds = %1937
  %1946 = trunc i33 %1941 to i32
  store i32 %1946, i32* %1936, align 4
  br label %1947

1947:                                             ; preds = %1945, %1931
  %1948 = phi i32 [ %1946, %1945 ], [ %1932, %1931 ]
  %1949 = load atomic i32, i32* %1915 monotonic, align 4
  %1950 = and i32 %1949, 2
  %1951 = icmp eq i32 %1950, 0
  br i1 %1951, label %1952, label %1954

1952:                                             ; preds = %1947
  %1953 = add i32 %1948, -1
  store i32 %1953, i32* %1936, align 4
  br label %1954

1954:                                             ; preds = %1952, %1947
  %1955 = phi i32 [ %1953, %1952 ], [ %1948, %1947 ]
  %1956 = icmp eq i32 %1955, 0
  br i1 %1956, label %1957, label %1958

1957:                                             ; preds = %1954
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1912) #22
  br label %1958

1958:                                             ; preds = %1910, %1954, %1957
  %1959 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %32, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1912, %"class.WTF::StringImpl"** %1959, align 8
  %1960 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %32, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), i8** %1960, align 8
  %1961 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %32)
  %1962 = ptrtoint %"class.WTF::StringImpl"* %1961 to i64
  %1963 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %1962, i64* %260, align 8
  %1964 = icmp eq %"class.WTF::StringImpl"* %1963, null
  br i1 %1964, label %1978, label %1965

1965:                                             ; preds = %1958
  %1966 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1963, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1967 = load atomic i32, i32* %1966 monotonic, align 4
  %1968 = and i32 %1967, 2
  %1969 = icmp eq i32 %1968, 0
  %1970 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1963, i64 0, i32 0
  %1971 = load i32, i32* %1970, align 4
  br i1 %1969, label %1972, label %1974

1972:                                             ; preds = %1965
  %1973 = add i32 %1971, -1
  store i32 %1973, i32* %1970, align 4
  br label %1974

1974:                                             ; preds = %1972, %1965
  %1975 = phi i32 [ %1973, %1972 ], [ %1971, %1965 ]
  %1976 = icmp eq i32 %1975, 0
  br i1 %1976, label %1977, label %1978

1977:                                             ; preds = %1974
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1963) #22
  br label %1978

1978:                                             ; preds = %1977, %1974, %1958
  %1979 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1959, align 8
  %1980 = icmp eq %"class.WTF::StringImpl"* %1979, null
  br i1 %1980, label %1994, label %1981

1981:                                             ; preds = %1978
  %1982 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1979, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1983 = load atomic i32, i32* %1982 monotonic, align 4
  %1984 = and i32 %1983, 2
  %1985 = icmp eq i32 %1984, 0
  %1986 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1979, i64 0, i32 0
  %1987 = load i32, i32* %1986, align 4
  br i1 %1985, label %1988, label %1990

1988:                                             ; preds = %1981
  %1989 = add i32 %1987, -1
  store i32 %1989, i32* %1986, align 4
  br label %1990

1990:                                             ; preds = %1988, %1981
  %1991 = phi i32 [ %1989, %1988 ], [ %1987, %1981 ]
  %1992 = icmp eq i32 %1991, 0
  br i1 %1992, label %1993, label %1994

1993:                                             ; preds = %1990
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1979) #22
  br label %1994

1994:                                             ; preds = %1978, %1990, %1993
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1911) #22
  br label %2196

1995:                                             ; preds = %1891, %2044
  %1996 = phi %"class.blink::AXObject"* [ %2045, %2044 ], [ %0, %1891 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22
  store i8 -86, i8* %4, align 1
  %1997 = bitcast %"class.blink::AXObject"* %1996 to i1 (%"class.blink::AXObject"*, i32, i8*)***
  %1998 = load i1 (%"class.blink::AXObject"*, i32, i8*)**, i1 (%"class.blink::AXObject"*, i32, i8*)*** %1997, align 8
  %1999 = getelementptr inbounds i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %1998, i64 6
  %2000 = load i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %1999, align 8
  %2001 = call zeroext i1 %2000(%"class.blink::AXObject"* nonnull %1996, i32 4, i8* nonnull dereferenceable(1) %4) #22
  %2002 = load i8, i8* %4, align 1
  %2003 = icmp ne i8 %2002, 0
  %2004 = and i1 %2001, %2003
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22
  br i1 %2004, label %2047, label %2005

2005:                                             ; preds = %1995
  %2006 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %1996, i64 0, i32 14, i32 0, i32 0
  %2007 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2006, align 8
  %2008 = icmp eq %"class.blink::AXObjectCacheImpl"* %2007, null
  br i1 %2008, label %2201, label %2009

2009:                                             ; preds = %2005
  %2010 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %1996, i64 0, i32 2, i32 0, i32 0
  %2011 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %2010, align 8
  %2012 = icmp eq %"class.blink::AXObject"* %2011, null
  br i1 %2012, label %2013, label %2020

2013:                                             ; preds = %2009
  %2014 = bitcast %"class.blink::AXObject"* %1996 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %2015 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2014, align 8
  %2016 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %2015, i64 124
  %2017 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %2016, align 8
  %2018 = call %"class.blink::Node"* %2017(%"class.blink::AXObject"* nonnull %1996) #22
  %2019 = icmp eq %"class.blink::Node"* %2018, null
  br i1 %2019, label %2034, label %2024

2020:                                             ; preds = %2009
  %2021 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %2011, i64 0, i32 14, i32 0, i32 0
  %2022 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2021, align 8
  %2023 = icmp eq %"class.blink::AXObjectCacheImpl"* %2022, null
  br i1 %2023, label %2034, label %2044

2024:                                             ; preds = %2013
  %2025 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2014, align 8
  %2026 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %2025, i64 124
  %2027 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %2026, align 8
  %2028 = call %"class.blink::Node"* %2027(%"class.blink::AXObject"* nonnull %1996) #22
  %2029 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2006, align 8
  %2030 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %2029, i64 0, i32 2, i32 0, i32 0
  %2031 = load %"class.blink::Document"*, %"class.blink::Document"** %2030, align 8
  %2032 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %2031, i64 0, i32 0, i32 0
  %2033 = icmp eq %"class.blink::Node"* %2028, %2032
  br i1 %2033, label %2044, label %2034

2034:                                             ; preds = %2024, %2013, %2020
  %2035 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* nonnull %1996) #22
  %2036 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %1996, i64 0, i32 2
  %2037 = ptrtoint %"class.blink::AXObject"* %2035 to i64
  %2038 = bitcast %"class.blink::Member.3082"* %2036 to i64*
  store atomic i64 %2037, i64* %2038 monotonic, align 8
  %2039 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %2040 = icmp eq i32 %2039, 0
  br i1 %2040, label %2044, label %2041

2041:                                             ; preds = %2034
  %2042 = bitcast %"class.blink::AXObject"* %2035 to i8*
  %2043 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %2042) #22
  br label %2044

2044:                                             ; preds = %2020, %2041, %2034, %2024
  %2045 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %2010, align 8
  %2046 = icmp eq %"class.blink::AXObject"* %2045, null
  br i1 %2046, label %2201, label %1995

2047:                                             ; preds = %1995
  %2048 = bitcast %"class.WTF::StringAppend"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2048) #22
  %2049 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %2050 = icmp eq %"class.WTF::StringImpl"* %2049, null
  br i1 %2050, label %2095, label %2051

2051:                                             ; preds = %2047
  %2052 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2049, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2053 = load atomic i32, i32* %2052 monotonic, align 4
  %2054 = and i32 %2053, 2
  %2055 = icmp eq i32 %2054, 0
  %2056 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2049, i64 0, i32 0
  %2057 = load i32, i32* %2056, align 4
  br i1 %2055, label %2058, label %2068

2058:                                             ; preds = %2051
  %2059 = zext i32 %2057 to i33
  %2060 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2059, i33 1) #22
  %2061 = extractvalue { i33, i1 } %2060, 1
  %2062 = extractvalue { i33, i1 } %2060, 0
  %2063 = icmp slt i33 %2062, 0
  %2064 = or i1 %2061, %2063
  br i1 %2064, label %2065, label %2066, !prof !3

2065:                                             ; preds = %2058
  call void @llvm.trap() #22
  unreachable

2066:                                             ; preds = %2058
  %2067 = trunc i33 %2062 to i32
  store i32 %2067, i32* %2056, align 4
  br label %2068

2068:                                             ; preds = %2051, %2066
  %2069 = phi i32 [ %2067, %2066 ], [ %2057, %2051 ]
  %2070 = load atomic i32, i32* %2052 monotonic, align 4
  %2071 = and i32 %2070, 2
  %2072 = icmp eq i32 %2071, 0
  %2073 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2049, i64 0, i32 0
  br i1 %2072, label %2074, label %2084

2074:                                             ; preds = %2068
  %2075 = zext i32 %2069 to i33
  %2076 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2075, i33 1) #22
  %2077 = extractvalue { i33, i1 } %2076, 1
  %2078 = extractvalue { i33, i1 } %2076, 0
  %2079 = icmp slt i33 %2078, 0
  %2080 = or i1 %2077, %2079
  br i1 %2080, label %2081, label %2082, !prof !3

2081:                                             ; preds = %2074
  call void @llvm.trap() #22
  unreachable

2082:                                             ; preds = %2074
  %2083 = trunc i33 %2078 to i32
  store i32 %2083, i32* %2073, align 4
  br label %2084

2084:                                             ; preds = %2082, %2068
  %2085 = phi i32 [ %2083, %2082 ], [ %2069, %2068 ]
  %2086 = load atomic i32, i32* %2052 monotonic, align 4
  %2087 = and i32 %2086, 2
  %2088 = icmp eq i32 %2087, 0
  br i1 %2088, label %2089, label %2091

2089:                                             ; preds = %2084
  %2090 = add i32 %2085, -1
  store i32 %2090, i32* %2073, align 4
  br label %2091

2091:                                             ; preds = %2089, %2084
  %2092 = phi i32 [ %2090, %2089 ], [ %2085, %2084 ]
  %2093 = icmp eq i32 %2092, 0
  br i1 %2093, label %2094, label %2095

2094:                                             ; preds = %2091
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2049) #22
  br label %2095

2095:                                             ; preds = %2047, %2091, %2094
  %2096 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %33, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2049, %"class.WTF::StringImpl"** %2096, align 8
  %2097 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %33, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i64 0, i64 0), i8** %2097, align 8
  %2098 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %33)
  %2099 = ptrtoint %"class.WTF::StringImpl"* %2098 to i64
  %2100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %2099, i64* %260, align 8
  %2101 = icmp eq %"class.WTF::StringImpl"* %2100, null
  br i1 %2101, label %2115, label %2102

2102:                                             ; preds = %2095
  %2103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2104 = load atomic i32, i32* %2103 monotonic, align 4
  %2105 = and i32 %2104, 2
  %2106 = icmp eq i32 %2105, 0
  %2107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2100, i64 0, i32 0
  %2108 = load i32, i32* %2107, align 4
  br i1 %2106, label %2109, label %2111

2109:                                             ; preds = %2102
  %2110 = add i32 %2108, -1
  store i32 %2110, i32* %2107, align 4
  br label %2111

2111:                                             ; preds = %2109, %2102
  %2112 = phi i32 [ %2110, %2109 ], [ %2108, %2102 ]
  %2113 = icmp eq i32 %2112, 0
  br i1 %2113, label %2114, label %2115

2114:                                             ; preds = %2111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2100) #22
  br label %2115

2115:                                             ; preds = %2114, %2111, %2095
  %2116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2096, align 8
  %2117 = icmp eq %"class.WTF::StringImpl"* %2116, null
  br i1 %2117, label %2131, label %2118

2118:                                             ; preds = %2115
  %2119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2120 = load atomic i32, i32* %2119 monotonic, align 4
  %2121 = and i32 %2120, 2
  %2122 = icmp eq i32 %2121, 0
  %2123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2116, i64 0, i32 0
  %2124 = load i32, i32* %2123, align 4
  br i1 %2122, label %2125, label %2127

2125:                                             ; preds = %2118
  %2126 = add i32 %2124, -1
  store i32 %2126, i32* %2123, align 4
  br label %2127

2127:                                             ; preds = %2125, %2118
  %2128 = phi i32 [ %2126, %2125 ], [ %2124, %2118 ]
  %2129 = icmp eq i32 %2128, 0
  br i1 %2129, label %2130, label %2131

2130:                                             ; preds = %2127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2116) #22
  br label %2131

2131:                                             ; preds = %2115, %2127, %2130
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2048) #22
  %2132 = icmp eq %"class.blink::AXObject"* %1996, %0
  br i1 %2132, label %2201, label %2133

2133:                                             ; preds = %2131
  %2134 = bitcast %"class.WTF::StringAppend.3844"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2134) #22
  %2135 = bitcast %"class.blink::AXObject"* %1996 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %2136 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2135, align 8
  %2137 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %2136, i64 124
  %2138 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %2137, align 8
  %2139 = call %"class.blink::Node"* %2138(%"class.blink::AXObject"* nonnull %1996) #22
  %2140 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_113GetNodeStringEPNS_4NodeE(%"class.blink::Node"* %2139)
  %2141 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::StringImpl"* %2140)
  %2142 = getelementptr inbounds %"class.WTF::StringAppend.3844", %"class.WTF::StringAppend.3844"* %34, i64 0, i32 0, i32 0, i32 0
  %2143 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %2141, 0
  store %"class.WTF::StringImpl"* %2143, %"class.WTF::StringImpl"** %2142, align 8
  %2144 = getelementptr inbounds %"class.WTF::StringAppend.3844", %"class.WTF::StringAppend.3844"* %34, i64 0, i32 1, i32 0, i32 0
  %2145 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %2141, 1
  store %"class.WTF::StringImpl"* %2145, %"class.WTF::StringImpl"** %2144, align 8
  %2146 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.3844"* nonnull %34)
  %2147 = ptrtoint %"class.WTF::StringImpl"* %2146 to i64
  %2148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %2147, i64* %260, align 8
  %2149 = icmp eq %"class.WTF::StringImpl"* %2148, null
  br i1 %2149, label %2163, label %2150

2150:                                             ; preds = %2133
  %2151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2152 = load atomic i32, i32* %2151 monotonic, align 4
  %2153 = and i32 %2152, 2
  %2154 = icmp eq i32 %2153, 0
  %2155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2148, i64 0, i32 0
  %2156 = load i32, i32* %2155, align 4
  br i1 %2154, label %2157, label %2159

2157:                                             ; preds = %2150
  %2158 = add i32 %2156, -1
  store i32 %2158, i32* %2155, align 4
  br label %2159

2159:                                             ; preds = %2157, %2150
  %2160 = phi i32 [ %2158, %2157 ], [ %2156, %2150 ]
  %2161 = icmp eq i32 %2160, 0
  br i1 %2161, label %2162, label %2163

2162:                                             ; preds = %2159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2148) #22
  br label %2163

2163:                                             ; preds = %2162, %2159, %2133
  %2164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2144, align 8
  %2165 = icmp eq %"class.WTF::StringImpl"* %2164, null
  br i1 %2165, label %2179, label %2166

2166:                                             ; preds = %2163
  %2167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2168 = load atomic i32, i32* %2167 monotonic, align 4
  %2169 = and i32 %2168, 2
  %2170 = icmp eq i32 %2169, 0
  %2171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2164, i64 0, i32 0
  %2172 = load i32, i32* %2171, align 4
  br i1 %2170, label %2173, label %2175

2173:                                             ; preds = %2166
  %2174 = add i32 %2172, -1
  store i32 %2174, i32* %2171, align 4
  br label %2175

2175:                                             ; preds = %2173, %2166
  %2176 = phi i32 [ %2174, %2173 ], [ %2172, %2166 ]
  %2177 = icmp eq i32 %2176, 0
  br i1 %2177, label %2178, label %2179

2178:                                             ; preds = %2175
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2164) #22
  br label %2179

2179:                                             ; preds = %2178, %2175, %2163
  %2180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2142, align 8
  %2181 = icmp eq %"class.WTF::StringImpl"* %2180, null
  br i1 %2181, label %2195, label %2182

2182:                                             ; preds = %2179
  %2183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2184 = load atomic i32, i32* %2183 monotonic, align 4
  %2185 = and i32 %2184, 2
  %2186 = icmp eq i32 %2185, 0
  %2187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2180, i64 0, i32 0
  %2188 = load i32, i32* %2187, align 4
  br i1 %2186, label %2189, label %2191

2189:                                             ; preds = %2182
  %2190 = add i32 %2188, -1
  store i32 %2190, i32* %2187, align 4
  br label %2191

2191:                                             ; preds = %2189, %2182
  %2192 = phi i32 [ %2190, %2189 ], [ %2188, %2182 ]
  %2193 = icmp eq i32 %2192, 0
  br i1 %2193, label %2194, label %2195

2194:                                             ; preds = %2191
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2180) #22
  br label %2195

2195:                                             ; preds = %2179, %2191, %2194
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2134) #22
  br label %2201

2196:                                             ; preds = %1994, %1904, %1893, %1898
  %2197 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %2198 = load i8, i8* %2197, align 8
  %2199 = and i8 %2198, 8
  %2200 = icmp eq i8 %2199, 0
  br i1 %2200, label %2291, label %2206

2201:                                             ; preds = %2005, %2044, %2131, %2195, %1891
  call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %2202 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %2203 = load i8, i8* %2202, align 8
  %2204 = and i8 %2203, 8
  %2205 = icmp eq i8 %2204, 0
  br i1 %2205, label %2291, label %2206

2206:                                             ; preds = %2201, %2196
  %2207 = bitcast %"class.WTF::StringAppend"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2207) #22
  %2208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %2209 = icmp eq %"class.WTF::StringImpl"* %2208, null
  br i1 %2209, label %2254, label %2210

2210:                                             ; preds = %2206
  %2211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2212 = load atomic i32, i32* %2211 monotonic, align 4
  %2213 = and i32 %2212, 2
  %2214 = icmp eq i32 %2213, 0
  %2215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2208, i64 0, i32 0
  %2216 = load i32, i32* %2215, align 4
  br i1 %2214, label %2217, label %2227

2217:                                             ; preds = %2210
  %2218 = zext i32 %2216 to i33
  %2219 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2218, i33 1) #22
  %2220 = extractvalue { i33, i1 } %2219, 1
  %2221 = extractvalue { i33, i1 } %2219, 0
  %2222 = icmp slt i33 %2221, 0
  %2223 = or i1 %2220, %2222
  br i1 %2223, label %2224, label %2225, !prof !3

2224:                                             ; preds = %2217
  call void @llvm.trap() #22
  unreachable

2225:                                             ; preds = %2217
  %2226 = trunc i33 %2221 to i32
  store i32 %2226, i32* %2215, align 4
  br label %2227

2227:                                             ; preds = %2210, %2225
  %2228 = phi i32 [ %2226, %2225 ], [ %2216, %2210 ]
  %2229 = load atomic i32, i32* %2211 monotonic, align 4
  %2230 = and i32 %2229, 2
  %2231 = icmp eq i32 %2230, 0
  %2232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2208, i64 0, i32 0
  br i1 %2231, label %2233, label %2243

2233:                                             ; preds = %2227
  %2234 = zext i32 %2228 to i33
  %2235 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2234, i33 1) #22
  %2236 = extractvalue { i33, i1 } %2235, 1
  %2237 = extractvalue { i33, i1 } %2235, 0
  %2238 = icmp slt i33 %2237, 0
  %2239 = or i1 %2236, %2238
  br i1 %2239, label %2240, label %2241, !prof !3

2240:                                             ; preds = %2233
  call void @llvm.trap() #22
  unreachable

2241:                                             ; preds = %2233
  %2242 = trunc i33 %2237 to i32
  store i32 %2242, i32* %2232, align 4
  br label %2243

2243:                                             ; preds = %2241, %2227
  %2244 = phi i32 [ %2242, %2241 ], [ %2228, %2227 ]
  %2245 = load atomic i32, i32* %2211 monotonic, align 4
  %2246 = and i32 %2245, 2
  %2247 = icmp eq i32 %2246, 0
  br i1 %2247, label %2248, label %2250

2248:                                             ; preds = %2243
  %2249 = add i32 %2244, -1
  store i32 %2249, i32* %2232, align 4
  br label %2250

2250:                                             ; preds = %2248, %2243
  %2251 = phi i32 [ %2249, %2248 ], [ %2244, %2243 ]
  %2252 = icmp eq i32 %2251, 0
  br i1 %2252, label %2253, label %2254

2253:                                             ; preds = %2250
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2208) #22
  br label %2254

2254:                                             ; preds = %2206, %2250, %2253
  %2255 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %35, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2208, %"class.WTF::StringImpl"** %2255, align 8
  %2256 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %35, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33, i64 0, i64 0), i8** %2256, align 8
  %2257 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %35)
  %2258 = ptrtoint %"class.WTF::StringImpl"* %2257 to i64
  %2259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %2258, i64* %260, align 8
  %2260 = icmp eq %"class.WTF::StringImpl"* %2259, null
  br i1 %2260, label %2274, label %2261

2261:                                             ; preds = %2254
  %2262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2259, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2263 = load atomic i32, i32* %2262 monotonic, align 4
  %2264 = and i32 %2263, 2
  %2265 = icmp eq i32 %2264, 0
  %2266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2259, i64 0, i32 0
  %2267 = load i32, i32* %2266, align 4
  br i1 %2265, label %2268, label %2270

2268:                                             ; preds = %2261
  %2269 = add i32 %2267, -1
  store i32 %2269, i32* %2266, align 4
  br label %2270

2270:                                             ; preds = %2268, %2261
  %2271 = phi i32 [ %2269, %2268 ], [ %2267, %2261 ]
  %2272 = icmp eq i32 %2271, 0
  br i1 %2272, label %2273, label %2274

2273:                                             ; preds = %2270
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2259) #22
  br label %2274

2274:                                             ; preds = %2273, %2270, %2254
  %2275 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2255, align 8
  %2276 = icmp eq %"class.WTF::StringImpl"* %2275, null
  br i1 %2276, label %2290, label %2277

2277:                                             ; preds = %2274
  %2278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2279 = load atomic i32, i32* %2278 monotonic, align 4
  %2280 = and i32 %2279, 2
  %2281 = icmp eq i32 %2280, 0
  %2282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2275, i64 0, i32 0
  %2283 = load i32, i32* %2282, align 4
  br i1 %2281, label %2284, label %2286

2284:                                             ; preds = %2277
  %2285 = add i32 %2283, -1
  store i32 %2285, i32* %2282, align 4
  br label %2286

2286:                                             ; preds = %2284, %2277
  %2287 = phi i32 [ %2285, %2284 ], [ %2283, %2277 ]
  %2288 = icmp eq i32 %2287, 0
  br i1 %2288, label %2289, label %2290

2289:                                             ; preds = %2286
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2275) #22
  br label %2290

2290:                                             ; preds = %2274, %2286, %2289
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2207) #22
  br label %2291

2291:                                             ; preds = %2201, %2196, %2290
  %2292 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %327, align 8
  %2293 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %2292, i64 124
  %2294 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %2293, align 8
  %2295 = call %"class.blink::Node"* %2294(%"class.blink::AXObject"* %0) #22
  %2296 = icmp eq %"class.blink::Node"* %2295, null
  br i1 %2296, label %2388, label %2297

2297:                                             ; preds = %2291
  %2298 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %327, align 8
  %2299 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %2298, i64 124
  %2300 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %2299, align 8
  %2301 = call %"class.blink::Node"* %2300(%"class.blink::AXObject"* %0) #22
  %2302 = call zeroext i1 @_ZNK5blink4Node7IsInertEv(%"class.blink::Node"* %2301) #22
  br i1 %2302, label %2303, label %2388

2303:                                             ; preds = %2297
  %2304 = bitcast %"class.WTF::StringAppend"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2304) #22
  %2305 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %2306 = icmp eq %"class.WTF::StringImpl"* %2305, null
  br i1 %2306, label %2351, label %2307

2307:                                             ; preds = %2303
  %2308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2305, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2309 = load atomic i32, i32* %2308 monotonic, align 4
  %2310 = and i32 %2309, 2
  %2311 = icmp eq i32 %2310, 0
  %2312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2305, i64 0, i32 0
  %2313 = load i32, i32* %2312, align 4
  br i1 %2311, label %2314, label %2324

2314:                                             ; preds = %2307
  %2315 = zext i32 %2313 to i33
  %2316 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2315, i33 1) #22
  %2317 = extractvalue { i33, i1 } %2316, 1
  %2318 = extractvalue { i33, i1 } %2316, 0
  %2319 = icmp slt i33 %2318, 0
  %2320 = or i1 %2317, %2319
  br i1 %2320, label %2321, label %2322, !prof !3

2321:                                             ; preds = %2314
  call void @llvm.trap() #22
  unreachable

2322:                                             ; preds = %2314
  %2323 = trunc i33 %2318 to i32
  store i32 %2323, i32* %2312, align 4
  br label %2324

2324:                                             ; preds = %2307, %2322
  %2325 = phi i32 [ %2323, %2322 ], [ %2313, %2307 ]
  %2326 = load atomic i32, i32* %2308 monotonic, align 4
  %2327 = and i32 %2326, 2
  %2328 = icmp eq i32 %2327, 0
  %2329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2305, i64 0, i32 0
  br i1 %2328, label %2330, label %2340

2330:                                             ; preds = %2324
  %2331 = zext i32 %2325 to i33
  %2332 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2331, i33 1) #22
  %2333 = extractvalue { i33, i1 } %2332, 1
  %2334 = extractvalue { i33, i1 } %2332, 0
  %2335 = icmp slt i33 %2334, 0
  %2336 = or i1 %2333, %2335
  br i1 %2336, label %2337, label %2338, !prof !3

2337:                                             ; preds = %2330
  call void @llvm.trap() #22
  unreachable

2338:                                             ; preds = %2330
  %2339 = trunc i33 %2334 to i32
  store i32 %2339, i32* %2329, align 4
  br label %2340

2340:                                             ; preds = %2338, %2324
  %2341 = phi i32 [ %2339, %2338 ], [ %2325, %2324 ]
  %2342 = load atomic i32, i32* %2308 monotonic, align 4
  %2343 = and i32 %2342, 2
  %2344 = icmp eq i32 %2343, 0
  br i1 %2344, label %2345, label %2347

2345:                                             ; preds = %2340
  %2346 = add i32 %2341, -1
  store i32 %2346, i32* %2329, align 4
  br label %2347

2347:                                             ; preds = %2345, %2340
  %2348 = phi i32 [ %2346, %2345 ], [ %2341, %2340 ]
  %2349 = icmp eq i32 %2348, 0
  br i1 %2349, label %2350, label %2351

2350:                                             ; preds = %2347
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2305) #22
  br label %2351

2351:                                             ; preds = %2303, %2347, %2350
  %2352 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %36, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2305, %"class.WTF::StringImpl"** %2352, align 8
  %2353 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %36, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i64 0, i64 0), i8** %2353, align 8
  %2354 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %36)
  %2355 = ptrtoint %"class.WTF::StringImpl"* %2354 to i64
  %2356 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %2355, i64* %260, align 8
  %2357 = icmp eq %"class.WTF::StringImpl"* %2356, null
  br i1 %2357, label %2371, label %2358

2358:                                             ; preds = %2351
  %2359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2356, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2360 = load atomic i32, i32* %2359 monotonic, align 4
  %2361 = and i32 %2360, 2
  %2362 = icmp eq i32 %2361, 0
  %2363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2356, i64 0, i32 0
  %2364 = load i32, i32* %2363, align 4
  br i1 %2362, label %2365, label %2367

2365:                                             ; preds = %2358
  %2366 = add i32 %2364, -1
  store i32 %2366, i32* %2363, align 4
  br label %2367

2367:                                             ; preds = %2365, %2358
  %2368 = phi i32 [ %2366, %2365 ], [ %2364, %2358 ]
  %2369 = icmp eq i32 %2368, 0
  br i1 %2369, label %2370, label %2371

2370:                                             ; preds = %2367
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2356) #22
  br label %2371

2371:                                             ; preds = %2370, %2367, %2351
  %2372 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2352, align 8
  %2373 = icmp eq %"class.WTF::StringImpl"* %2372, null
  br i1 %2373, label %2387, label %2374

2374:                                             ; preds = %2371
  %2375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2372, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2376 = load atomic i32, i32* %2375 monotonic, align 4
  %2377 = and i32 %2376, 2
  %2378 = icmp eq i32 %2377, 0
  %2379 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2372, i64 0, i32 0
  %2380 = load i32, i32* %2379, align 4
  br i1 %2378, label %2381, label %2383

2381:                                             ; preds = %2374
  %2382 = add i32 %2380, -1
  store i32 %2382, i32* %2379, align 4
  br label %2383

2383:                                             ; preds = %2381, %2374
  %2384 = phi i32 [ %2382, %2381 ], [ %2380, %2374 ]
  %2385 = icmp eq i32 %2384, 0
  br i1 %2385, label %2386, label %2387

2386:                                             ; preds = %2383
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2372) #22
  br label %2387

2387:                                             ; preds = %2371, %2383, %2386
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2304) #22
  br label %2388

2388:                                             ; preds = %2291, %2387, %2297
  %2389 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 4
  %2390 = load i8, i8* %2389, align 8, !range !2
  %2391 = icmp eq i8 %2390, 0
  br i1 %2391, label %2476, label %2392

2392:                                             ; preds = %2388
  %2393 = bitcast %"class.WTF::StringAppend"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2393) #22
  %2394 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %2395 = icmp eq %"class.WTF::StringImpl"* %2394, null
  br i1 %2395, label %2440, label %2396

2396:                                             ; preds = %2392
  %2397 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2394, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2398 = load atomic i32, i32* %2397 monotonic, align 4
  %2399 = and i32 %2398, 2
  %2400 = icmp eq i32 %2399, 0
  %2401 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2394, i64 0, i32 0
  %2402 = load i32, i32* %2401, align 4
  br i1 %2400, label %2403, label %2413

2403:                                             ; preds = %2396
  %2404 = zext i32 %2402 to i33
  %2405 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2404, i33 1) #22
  %2406 = extractvalue { i33, i1 } %2405, 1
  %2407 = extractvalue { i33, i1 } %2405, 0
  %2408 = icmp slt i33 %2407, 0
  %2409 = or i1 %2406, %2408
  br i1 %2409, label %2410, label %2411, !prof !3

2410:                                             ; preds = %2403
  call void @llvm.trap() #22
  unreachable

2411:                                             ; preds = %2403
  %2412 = trunc i33 %2407 to i32
  store i32 %2412, i32* %2401, align 4
  br label %2413

2413:                                             ; preds = %2396, %2411
  %2414 = phi i32 [ %2412, %2411 ], [ %2402, %2396 ]
  %2415 = load atomic i32, i32* %2397 monotonic, align 4
  %2416 = and i32 %2415, 2
  %2417 = icmp eq i32 %2416, 0
  %2418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2394, i64 0, i32 0
  br i1 %2417, label %2419, label %2429

2419:                                             ; preds = %2413
  %2420 = zext i32 %2414 to i33
  %2421 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2420, i33 1) #22
  %2422 = extractvalue { i33, i1 } %2421, 1
  %2423 = extractvalue { i33, i1 } %2421, 0
  %2424 = icmp slt i33 %2423, 0
  %2425 = or i1 %2422, %2424
  br i1 %2425, label %2426, label %2427, !prof !3

2426:                                             ; preds = %2419
  call void @llvm.trap() #22
  unreachable

2427:                                             ; preds = %2419
  %2428 = trunc i33 %2423 to i32
  store i32 %2428, i32* %2418, align 4
  br label %2429

2429:                                             ; preds = %2427, %2413
  %2430 = phi i32 [ %2428, %2427 ], [ %2414, %2413 ]
  %2431 = load atomic i32, i32* %2397 monotonic, align 4
  %2432 = and i32 %2431, 2
  %2433 = icmp eq i32 %2432, 0
  br i1 %2433, label %2434, label %2436

2434:                                             ; preds = %2429
  %2435 = add i32 %2430, -1
  store i32 %2435, i32* %2418, align 4
  br label %2436

2436:                                             ; preds = %2434, %2429
  %2437 = phi i32 [ %2435, %2434 ], [ %2430, %2429 ]
  %2438 = icmp eq i32 %2437, 0
  br i1 %2438, label %2439, label %2440

2439:                                             ; preds = %2436
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2394) #22
  br label %2440

2440:                                             ; preds = %2392, %2436, %2439
  %2441 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %37, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2394, %"class.WTF::StringImpl"** %2441, align 8
  %2442 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %37, i64 0, i32 1
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i64 0, i64 0), i8** %2442, align 8
  %2443 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %37)
  %2444 = ptrtoint %"class.WTF::StringImpl"* %2443 to i64
  %2445 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %2444, i64* %260, align 8
  %2446 = icmp eq %"class.WTF::StringImpl"* %2445, null
  br i1 %2446, label %2460, label %2447

2447:                                             ; preds = %2440
  %2448 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2445, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2449 = load atomic i32, i32* %2448 monotonic, align 4
  %2450 = and i32 %2449, 2
  %2451 = icmp eq i32 %2450, 0
  %2452 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2445, i64 0, i32 0
  %2453 = load i32, i32* %2452, align 4
  br i1 %2451, label %2454, label %2456

2454:                                             ; preds = %2447
  %2455 = add i32 %2453, -1
  store i32 %2455, i32* %2452, align 4
  br label %2456

2456:                                             ; preds = %2454, %2447
  %2457 = phi i32 [ %2455, %2454 ], [ %2453, %2447 ]
  %2458 = icmp eq i32 %2457, 0
  br i1 %2458, label %2459, label %2460

2459:                                             ; preds = %2456
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2445) #22
  br label %2460

2460:                                             ; preds = %2459, %2456, %2440
  %2461 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2441, align 8
  %2462 = icmp eq %"class.WTF::StringImpl"* %2461, null
  br i1 %2462, label %2667, label %2463

2463:                                             ; preds = %2460
  %2464 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2461, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2465 = load atomic i32, i32* %2464 monotonic, align 4
  %2466 = and i32 %2465, 2
  %2467 = icmp eq i32 %2466, 0
  %2468 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2461, i64 0, i32 0
  %2469 = load i32, i32* %2468, align 4
  br i1 %2467, label %2470, label %2472

2470:                                             ; preds = %2463
  %2471 = add i32 %2469, -1
  store i32 %2471, i32* %2468, align 4
  br label %2472

2472:                                             ; preds = %2470, %2463
  %2473 = phi i32 [ %2471, %2470 ], [ %2469, %2463 ]
  %2474 = icmp eq i32 %2473, 0
  br i1 %2474, label %2475, label %2667

2475:                                             ; preds = %2472
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2461) #22
  br label %2667

2476:                                             ; preds = %2388
  %2477 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %2478 = load i32, i32* %2477, align 4
  %2479 = icmp eq i32 %2478, 0
  br i1 %2479, label %2669, label %2480

2480:                                             ; preds = %2476
  %2481 = bitcast %"class.WTF::StringAppend"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2481) #22
  %2482 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %2483 = icmp eq %"class.WTF::StringImpl"* %2482, null
  br i1 %2483, label %2528, label %2484

2484:                                             ; preds = %2480
  %2485 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2482, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2486 = load atomic i32, i32* %2485 monotonic, align 4
  %2487 = and i32 %2486, 2
  %2488 = icmp eq i32 %2487, 0
  %2489 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2482, i64 0, i32 0
  %2490 = load i32, i32* %2489, align 4
  br i1 %2488, label %2491, label %2501

2491:                                             ; preds = %2484
  %2492 = zext i32 %2490 to i33
  %2493 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2492, i33 1) #22
  %2494 = extractvalue { i33, i1 } %2493, 1
  %2495 = extractvalue { i33, i1 } %2493, 0
  %2496 = icmp slt i33 %2495, 0
  %2497 = or i1 %2494, %2496
  br i1 %2497, label %2498, label %2499, !prof !3

2498:                                             ; preds = %2491
  call void @llvm.trap() #22
  unreachable

2499:                                             ; preds = %2491
  %2500 = trunc i33 %2495 to i32
  store i32 %2500, i32* %2489, align 4
  br label %2501

2501:                                             ; preds = %2484, %2499
  %2502 = phi i32 [ %2500, %2499 ], [ %2490, %2484 ]
  %2503 = load atomic i32, i32* %2485 monotonic, align 4
  %2504 = and i32 %2503, 2
  %2505 = icmp eq i32 %2504, 0
  %2506 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2482, i64 0, i32 0
  br i1 %2505, label %2507, label %2517

2507:                                             ; preds = %2501
  %2508 = zext i32 %2502 to i33
  %2509 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2508, i33 1) #22
  %2510 = extractvalue { i33, i1 } %2509, 1
  %2511 = extractvalue { i33, i1 } %2509, 0
  %2512 = icmp slt i33 %2511, 0
  %2513 = or i1 %2510, %2512
  br i1 %2513, label %2514, label %2515, !prof !3

2514:                                             ; preds = %2507
  call void @llvm.trap() #22
  unreachable

2515:                                             ; preds = %2507
  %2516 = trunc i33 %2511 to i32
  store i32 %2516, i32* %2506, align 4
  br label %2517

2517:                                             ; preds = %2515, %2501
  %2518 = phi i32 [ %2516, %2515 ], [ %2502, %2501 ]
  %2519 = load atomic i32, i32* %2485 monotonic, align 4
  %2520 = and i32 %2519, 2
  %2521 = icmp eq i32 %2520, 0
  br i1 %2521, label %2522, label %2524

2522:                                             ; preds = %2517
  %2523 = add i32 %2518, -1
  store i32 %2523, i32* %2506, align 4
  br label %2524

2524:                                             ; preds = %2522, %2517
  %2525 = phi i32 [ %2523, %2522 ], [ %2518, %2517 ]
  %2526 = icmp eq i32 %2525, 0
  br i1 %2526, label %2527, label %2528

2527:                                             ; preds = %2524
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2482) #22
  br label %2528

2528:                                             ; preds = %2480, %2524, %2527
  %2529 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %38, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2482, %"class.WTF::StringImpl"** %2529, align 8
  %2530 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %38, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i64 0, i64 0), i8** %2530, align 8
  %2531 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %38)
  %2532 = ptrtoint %"class.WTF::StringImpl"* %2531 to i64
  %2533 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %2532, i64* %260, align 8
  %2534 = icmp eq %"class.WTF::StringImpl"* %2533, null
  br i1 %2534, label %2548, label %2535

2535:                                             ; preds = %2528
  %2536 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2533, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2537 = load atomic i32, i32* %2536 monotonic, align 4
  %2538 = and i32 %2537, 2
  %2539 = icmp eq i32 %2538, 0
  %2540 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2533, i64 0, i32 0
  %2541 = load i32, i32* %2540, align 4
  br i1 %2539, label %2542, label %2544

2542:                                             ; preds = %2535
  %2543 = add i32 %2541, -1
  store i32 %2543, i32* %2540, align 4
  br label %2544

2544:                                             ; preds = %2542, %2535
  %2545 = phi i32 [ %2543, %2542 ], [ %2541, %2535 ]
  %2546 = icmp eq i32 %2545, 0
  br i1 %2546, label %2547, label %2548

2547:                                             ; preds = %2544
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2533) #22
  br label %2548

2548:                                             ; preds = %2547, %2544, %2528
  %2549 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2529, align 8
  %2550 = icmp eq %"class.WTF::StringImpl"* %2549, null
  br i1 %2550, label %2564, label %2551

2551:                                             ; preds = %2548
  %2552 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2549, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2553 = load atomic i32, i32* %2552 monotonic, align 4
  %2554 = and i32 %2553, 2
  %2555 = icmp eq i32 %2554, 0
  %2556 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2549, i64 0, i32 0
  %2557 = load i32, i32* %2556, align 4
  br i1 %2555, label %2558, label %2560

2558:                                             ; preds = %2551
  %2559 = add i32 %2557, -1
  store i32 %2559, i32* %2556, align 4
  br label %2560

2560:                                             ; preds = %2558, %2551
  %2561 = phi i32 [ %2559, %2558 ], [ %2557, %2551 ]
  %2562 = icmp eq i32 %2561, 0
  br i1 %2562, label %2563, label %2564

2563:                                             ; preds = %2560
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2549) #22
  br label %2564

2564:                                             ; preds = %2548, %2560, %2563
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2481) #22
  %2565 = bitcast %"class.WTF::StringAppend.3844"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2565) #22
  %2566 = load i32, i32* %2477, align 4
  %2567 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2567) #22
  %2568 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 11
  %2569 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 2
  %2570 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 3
  %2571 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2567, i8 -86, i64 32, i1 false) #22
  store i8* %2568, i8** %2569, align 8
  %2572 = urem i32 %2566, 10
  %2573 = udiv i32 %2566, 10
  %2574 = trunc i32 %2572 to i8
  %2575 = or i8 %2574, 48
  store i8 %2575, i8* %2568, align 1
  %2576 = icmp ugt i32 %2566, 9
  br i1 %2576, label %2577, label %2592

2577:                                             ; preds = %2564
  %2578 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 10
  store i8* %2578, i8** %2569, align 8
  %2579 = urem i32 %2573, 10
  %2580 = trunc i32 %2579 to i8
  %2581 = or i8 %2580, 48
  store i8 %2581, i8* %2578, align 2
  %2582 = icmp ugt i32 %2566, 99
  br i1 %2582, label %2583, label %2590

2583:                                             ; preds = %2577
  %2584 = udiv i32 %2566, 100
  %2585 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 9
  store i8* %2585, i8** %2569, align 8
  %2586 = urem i32 %2584, 10
  %2587 = trunc i32 %2586 to i8
  %2588 = or i8 %2587, 48
  store i8 %2588, i8* %2585, align 1
  %2589 = icmp ugt i32 %2566, 999
  br i1 %2589, label %2594, label %2603

2590:                                             ; preds = %2577
  %2591 = ptrtoint i8* %2578 to i64
  br label %2606

2592:                                             ; preds = %2564
  %2593 = ptrtoint i8* %2568 to i64
  br label %2606

2594:                                             ; preds = %2583, %2594
  %2595 = phi i32 [ %2597, %2594 ], [ %2584, %2583 ]
  %2596 = load i8*, i8** %2569, align 8
  %2597 = udiv i32 %2595, 10
  %2598 = getelementptr inbounds i8, i8* %2596, i64 -1
  store i8* %2598, i8** %2569, align 8
  %2599 = urem i32 %2597, 10
  %2600 = trunc i32 %2599 to i8
  %2601 = or i8 %2600, 48
  store i8 %2601, i8* %2598, align 1
  %2602 = icmp ugt i32 %2595, 99
  br i1 %2602, label %2594, label %2603

2603:                                             ; preds = %2594, %2583
  %2604 = bitcast i8** %2569 to i64*
  %2605 = load i64, i64* %2604, align 8
  br label %2606

2606:                                             ; preds = %2603, %2590, %2592
  %2607 = phi i64 [ %2593, %2592 ], [ %2605, %2603 ], [ %2591, %2590 ]
  %2608 = ptrtoint i8* %2571 to i64
  %2609 = sub i64 %2608, %2607
  %2610 = trunc i64 %2609 to i32
  store i32 %2610, i32* %2570, align 8
  %2611 = inttoptr i64 %2607 to i8*
  %2612 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %2611, i32 %2610) #22
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2567) #22
  %2613 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::StringImpl"* %2612)
  %2614 = getelementptr inbounds %"class.WTF::StringAppend.3844", %"class.WTF::StringAppend.3844"* %39, i64 0, i32 0, i32 0, i32 0
  %2615 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %2613, 0
  store %"class.WTF::StringImpl"* %2615, %"class.WTF::StringImpl"** %2614, align 8
  %2616 = getelementptr inbounds %"class.WTF::StringAppend.3844", %"class.WTF::StringAppend.3844"* %39, i64 0, i32 1, i32 0, i32 0
  %2617 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %2613, 1
  store %"class.WTF::StringImpl"* %2617, %"class.WTF::StringImpl"** %2616, align 8
  %2618 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.3844"* nonnull %39)
  %2619 = ptrtoint %"class.WTF::StringImpl"* %2618 to i64
  %2620 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %2619, i64* %260, align 8
  %2621 = icmp eq %"class.WTF::StringImpl"* %2620, null
  br i1 %2621, label %2635, label %2622

2622:                                             ; preds = %2606
  %2623 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2620, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2624 = load atomic i32, i32* %2623 monotonic, align 4
  %2625 = and i32 %2624, 2
  %2626 = icmp eq i32 %2625, 0
  %2627 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2620, i64 0, i32 0
  %2628 = load i32, i32* %2627, align 4
  br i1 %2626, label %2629, label %2631

2629:                                             ; preds = %2622
  %2630 = add i32 %2628, -1
  store i32 %2630, i32* %2627, align 4
  br label %2631

2631:                                             ; preds = %2629, %2622
  %2632 = phi i32 [ %2630, %2629 ], [ %2628, %2622 ]
  %2633 = icmp eq i32 %2632, 0
  br i1 %2633, label %2634, label %2635

2634:                                             ; preds = %2631
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2620) #22
  br label %2635

2635:                                             ; preds = %2634, %2631, %2606
  %2636 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2616, align 8
  %2637 = icmp eq %"class.WTF::StringImpl"* %2636, null
  br i1 %2637, label %2651, label %2638

2638:                                             ; preds = %2635
  %2639 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2636, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2640 = load atomic i32, i32* %2639 monotonic, align 4
  %2641 = and i32 %2640, 2
  %2642 = icmp eq i32 %2641, 0
  %2643 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2636, i64 0, i32 0
  %2644 = load i32, i32* %2643, align 4
  br i1 %2642, label %2645, label %2647

2645:                                             ; preds = %2638
  %2646 = add i32 %2644, -1
  store i32 %2646, i32* %2643, align 4
  br label %2647

2647:                                             ; preds = %2645, %2638
  %2648 = phi i32 [ %2646, %2645 ], [ %2644, %2638 ]
  %2649 = icmp eq i32 %2648, 0
  br i1 %2649, label %2650, label %2651

2650:                                             ; preds = %2647
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2636) #22
  br label %2651

2651:                                             ; preds = %2650, %2647, %2635
  %2652 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2614, align 8
  %2653 = icmp eq %"class.WTF::StringImpl"* %2652, null
  br i1 %2653, label %2667, label %2654

2654:                                             ; preds = %2651
  %2655 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2652, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2656 = load atomic i32, i32* %2655 monotonic, align 4
  %2657 = and i32 %2656, 2
  %2658 = icmp eq i32 %2657, 0
  %2659 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2652, i64 0, i32 0
  %2660 = load i32, i32* %2659, align 4
  br i1 %2658, label %2661, label %2663

2661:                                             ; preds = %2654
  %2662 = add i32 %2660, -1
  store i32 %2662, i32* %2659, align 4
  br label %2663

2663:                                             ; preds = %2661, %2654
  %2664 = phi i32 [ %2662, %2661 ], [ %2660, %2654 ]
  %2665 = icmp eq i32 %2664, 0
  br i1 %2665, label %2666, label %2667

2666:                                             ; preds = %2663
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2652) #22
  br label %2667

2667:                                             ; preds = %2666, %2663, %2651, %2475, %2472, %2460
  %2668 = phi i8* [ %2393, %2460 ], [ %2393, %2472 ], [ %2393, %2475 ], [ %2565, %2651 ], [ %2565, %2663 ], [ %2565, %2666 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2668) #22
  br label %2669

2669:                                             ; preds = %2667, %2476
  %2670 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %2671 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %2670, align 8
  %2672 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %2671, i64 125
  %2673 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %2672, align 8
  %2674 = call %"class.blink::LayoutObject"* %2673(%"class.blink::AXObject"* %0) #22
  %2675 = icmp eq %"class.blink::LayoutObject"* %2674, null
  br i1 %2675, label %2676, label %2761

2676:                                             ; preds = %2669
  %2677 = bitcast %"class.WTF::StringAppend"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2677) #22
  %2678 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %2679 = icmp eq %"class.WTF::StringImpl"* %2678, null
  br i1 %2679, label %2724, label %2680

2680:                                             ; preds = %2676
  %2681 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2678, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2682 = load atomic i32, i32* %2681 monotonic, align 4
  %2683 = and i32 %2682, 2
  %2684 = icmp eq i32 %2683, 0
  %2685 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2678, i64 0, i32 0
  %2686 = load i32, i32* %2685, align 4
  br i1 %2684, label %2687, label %2697

2687:                                             ; preds = %2680
  %2688 = zext i32 %2686 to i33
  %2689 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2688, i33 1) #22
  %2690 = extractvalue { i33, i1 } %2689, 1
  %2691 = extractvalue { i33, i1 } %2689, 0
  %2692 = icmp slt i33 %2691, 0
  %2693 = or i1 %2690, %2692
  br i1 %2693, label %2694, label %2695, !prof !3

2694:                                             ; preds = %2687
  call void @llvm.trap() #22
  unreachable

2695:                                             ; preds = %2687
  %2696 = trunc i33 %2691 to i32
  store i32 %2696, i32* %2685, align 4
  br label %2697

2697:                                             ; preds = %2680, %2695
  %2698 = phi i32 [ %2696, %2695 ], [ %2686, %2680 ]
  %2699 = load atomic i32, i32* %2681 monotonic, align 4
  %2700 = and i32 %2699, 2
  %2701 = icmp eq i32 %2700, 0
  %2702 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2678, i64 0, i32 0
  br i1 %2701, label %2703, label %2713

2703:                                             ; preds = %2697
  %2704 = zext i32 %2698 to i33
  %2705 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2704, i33 1) #22
  %2706 = extractvalue { i33, i1 } %2705, 1
  %2707 = extractvalue { i33, i1 } %2705, 0
  %2708 = icmp slt i33 %2707, 0
  %2709 = or i1 %2706, %2708
  br i1 %2709, label %2710, label %2711, !prof !3

2710:                                             ; preds = %2703
  call void @llvm.trap() #22
  unreachable

2711:                                             ; preds = %2703
  %2712 = trunc i33 %2707 to i32
  store i32 %2712, i32* %2702, align 4
  br label %2713

2713:                                             ; preds = %2711, %2697
  %2714 = phi i32 [ %2712, %2711 ], [ %2698, %2697 ]
  %2715 = load atomic i32, i32* %2681 monotonic, align 4
  %2716 = and i32 %2715, 2
  %2717 = icmp eq i32 %2716, 0
  br i1 %2717, label %2718, label %2720

2718:                                             ; preds = %2713
  %2719 = add i32 %2714, -1
  store i32 %2719, i32* %2702, align 4
  br label %2720

2720:                                             ; preds = %2718, %2713
  %2721 = phi i32 [ %2719, %2718 ], [ %2714, %2713 ]
  %2722 = icmp eq i32 %2721, 0
  br i1 %2722, label %2723, label %2724

2723:                                             ; preds = %2720
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2678) #22
  br label %2724

2724:                                             ; preds = %2676, %2720, %2723
  %2725 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %40, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2678, %"class.WTF::StringImpl"** %2725, align 8
  %2726 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %40, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i64 0, i64 0), i8** %2726, align 8
  %2727 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %40)
  %2728 = ptrtoint %"class.WTF::StringImpl"* %2727 to i64
  %2729 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %2728, i64* %260, align 8
  %2730 = icmp eq %"class.WTF::StringImpl"* %2729, null
  br i1 %2730, label %2744, label %2731

2731:                                             ; preds = %2724
  %2732 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2729, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2733 = load atomic i32, i32* %2732 monotonic, align 4
  %2734 = and i32 %2733, 2
  %2735 = icmp eq i32 %2734, 0
  %2736 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2729, i64 0, i32 0
  %2737 = load i32, i32* %2736, align 4
  br i1 %2735, label %2738, label %2740

2738:                                             ; preds = %2731
  %2739 = add i32 %2737, -1
  store i32 %2739, i32* %2736, align 4
  br label %2740

2740:                                             ; preds = %2738, %2731
  %2741 = phi i32 [ %2739, %2738 ], [ %2737, %2731 ]
  %2742 = icmp eq i32 %2741, 0
  br i1 %2742, label %2743, label %2744

2743:                                             ; preds = %2740
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2729) #22
  br label %2744

2744:                                             ; preds = %2743, %2740, %2724
  %2745 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2725, align 8
  %2746 = icmp eq %"class.WTF::StringImpl"* %2745, null
  br i1 %2746, label %2760, label %2747

2747:                                             ; preds = %2744
  %2748 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2745, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2749 = load atomic i32, i32* %2748 monotonic, align 4
  %2750 = and i32 %2749, 2
  %2751 = icmp eq i32 %2750, 0
  %2752 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2745, i64 0, i32 0
  %2753 = load i32, i32* %2752, align 4
  br i1 %2751, label %2754, label %2756

2754:                                             ; preds = %2747
  %2755 = add i32 %2753, -1
  store i32 %2755, i32* %2752, align 4
  br label %2756

2756:                                             ; preds = %2754, %2747
  %2757 = phi i32 [ %2755, %2754 ], [ %2753, %2747 ]
  %2758 = icmp eq i32 %2757, 0
  br i1 %2758, label %2759, label %2760

2759:                                             ; preds = %2756
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2745) #22
  br label %2760

2760:                                             ; preds = %2744, %2756, %2759
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2677) #22
  br label %2761

2761:                                             ; preds = %2669, %2760
  br i1 %2, label %3017, label %2762

2762:                                             ; preds = %2761
  %2763 = bitcast %"class.WTF::StringAppend"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2763) #22
  %2764 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %2765 = icmp eq %"class.WTF::StringImpl"* %2764, null
  br i1 %2765, label %2810, label %2766

2766:                                             ; preds = %2762
  %2767 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2764, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2768 = load atomic i32, i32* %2767 monotonic, align 4
  %2769 = and i32 %2768, 2
  %2770 = icmp eq i32 %2769, 0
  %2771 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2764, i64 0, i32 0
  %2772 = load i32, i32* %2771, align 4
  br i1 %2770, label %2773, label %2783

2773:                                             ; preds = %2766
  %2774 = zext i32 %2772 to i33
  %2775 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2774, i33 1) #22
  %2776 = extractvalue { i33, i1 } %2775, 1
  %2777 = extractvalue { i33, i1 } %2775, 0
  %2778 = icmp slt i33 %2777, 0
  %2779 = or i1 %2776, %2778
  br i1 %2779, label %2780, label %2781, !prof !3

2780:                                             ; preds = %2773
  call void @llvm.trap() #22
  unreachable

2781:                                             ; preds = %2773
  %2782 = trunc i33 %2777 to i32
  store i32 %2782, i32* %2771, align 4
  br label %2783

2783:                                             ; preds = %2766, %2781
  %2784 = phi i32 [ %2782, %2781 ], [ %2772, %2766 ]
  %2785 = load atomic i32, i32* %2767 monotonic, align 4
  %2786 = and i32 %2785, 2
  %2787 = icmp eq i32 %2786, 0
  %2788 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2764, i64 0, i32 0
  br i1 %2787, label %2789, label %2799

2789:                                             ; preds = %2783
  %2790 = zext i32 %2784 to i33
  %2791 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2790, i33 1) #22
  %2792 = extractvalue { i33, i1 } %2791, 1
  %2793 = extractvalue { i33, i1 } %2791, 0
  %2794 = icmp slt i33 %2793, 0
  %2795 = or i1 %2792, %2794
  br i1 %2795, label %2796, label %2797, !prof !3

2796:                                             ; preds = %2789
  call void @llvm.trap() #22
  unreachable

2797:                                             ; preds = %2789
  %2798 = trunc i33 %2793 to i32
  store i32 %2798, i32* %2788, align 4
  br label %2799

2799:                                             ; preds = %2797, %2783
  %2800 = phi i32 [ %2798, %2797 ], [ %2784, %2783 ]
  %2801 = load atomic i32, i32* %2767 monotonic, align 4
  %2802 = and i32 %2801, 2
  %2803 = icmp eq i32 %2802, 0
  br i1 %2803, label %2804, label %2806

2804:                                             ; preds = %2799
  %2805 = add i32 %2800, -1
  store i32 %2805, i32* %2788, align 4
  br label %2806

2806:                                             ; preds = %2804, %2799
  %2807 = phi i32 [ %2805, %2804 ], [ %2800, %2799 ]
  %2808 = icmp eq i32 %2807, 0
  br i1 %2808, label %2809, label %2810

2809:                                             ; preds = %2806
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2764) #22
  br label %2810

2810:                                             ; preds = %2762, %2806, %2809
  %2811 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %41, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2764, %"class.WTF::StringImpl"** %2811, align 8
  %2812 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %41, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0), i8** %2812, align 8
  %2813 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %41)
  %2814 = ptrtoint %"class.WTF::StringImpl"* %2813 to i64
  %2815 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %2814, i64* %260, align 8
  %2816 = icmp eq %"class.WTF::StringImpl"* %2815, null
  br i1 %2816, label %2830, label %2817

2817:                                             ; preds = %2810
  %2818 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2815, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2819 = load atomic i32, i32* %2818 monotonic, align 4
  %2820 = and i32 %2819, 2
  %2821 = icmp eq i32 %2820, 0
  %2822 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2815, i64 0, i32 0
  %2823 = load i32, i32* %2822, align 4
  br i1 %2821, label %2824, label %2826

2824:                                             ; preds = %2817
  %2825 = add i32 %2823, -1
  store i32 %2825, i32* %2822, align 4
  br label %2826

2826:                                             ; preds = %2824, %2817
  %2827 = phi i32 [ %2825, %2824 ], [ %2823, %2817 ]
  %2828 = icmp eq i32 %2827, 0
  br i1 %2828, label %2829, label %2830

2829:                                             ; preds = %2826
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2815) #22
  br label %2830

2830:                                             ; preds = %2829, %2826, %2810
  %2831 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2811, align 8
  %2832 = icmp eq %"class.WTF::StringImpl"* %2831, null
  br i1 %2832, label %2846, label %2833

2833:                                             ; preds = %2830
  %2834 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2831, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2835 = load atomic i32, i32* %2834 monotonic, align 4
  %2836 = and i32 %2835, 2
  %2837 = icmp eq i32 %2836, 0
  %2838 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2831, i64 0, i32 0
  %2839 = load i32, i32* %2838, align 4
  br i1 %2837, label %2840, label %2842

2840:                                             ; preds = %2833
  %2841 = add i32 %2839, -1
  store i32 %2841, i32* %2838, align 4
  br label %2842

2842:                                             ; preds = %2840, %2833
  %2843 = phi i32 [ %2841, %2840 ], [ %2839, %2833 ]
  %2844 = icmp eq i32 %2843, 0
  br i1 %2844, label %2845, label %2846

2845:                                             ; preds = %2842
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2831) #22
  br label %2846

2846:                                             ; preds = %2845, %2842, %2830
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2763) #22
  br label %2933

2847:                                             ; preds = %157
  %2848 = bitcast %"class.WTF::StringAppend"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2848) #22
  %2849 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %2850 = icmp eq %"class.WTF::StringImpl"* %2849, null
  br i1 %2850, label %2895, label %2851

2851:                                             ; preds = %2847
  %2852 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2849, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2853 = load atomic i32, i32* %2852 monotonic, align 4
  %2854 = and i32 %2853, 2
  %2855 = icmp eq i32 %2854, 0
  %2856 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2849, i64 0, i32 0
  %2857 = load i32, i32* %2856, align 4
  br i1 %2855, label %2858, label %2868

2858:                                             ; preds = %2851
  %2859 = zext i32 %2857 to i33
  %2860 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2859, i33 1) #22
  %2861 = extractvalue { i33, i1 } %2860, 1
  %2862 = extractvalue { i33, i1 } %2860, 0
  %2863 = icmp slt i33 %2862, 0
  %2864 = or i1 %2861, %2863
  br i1 %2864, label %2865, label %2866, !prof !3

2865:                                             ; preds = %2858
  call void @llvm.trap() #22
  unreachable

2866:                                             ; preds = %2858
  %2867 = trunc i33 %2862 to i32
  store i32 %2867, i32* %2856, align 4
  br label %2868

2868:                                             ; preds = %2851, %2866
  %2869 = phi i32 [ %2867, %2866 ], [ %2857, %2851 ]
  %2870 = load atomic i32, i32* %2852 monotonic, align 4
  %2871 = and i32 %2870, 2
  %2872 = icmp eq i32 %2871, 0
  %2873 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2849, i64 0, i32 0
  br i1 %2872, label %2874, label %2884

2874:                                             ; preds = %2868
  %2875 = zext i32 %2869 to i33
  %2876 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2875, i33 1) #22
  %2877 = extractvalue { i33, i1 } %2876, 1
  %2878 = extractvalue { i33, i1 } %2876, 0
  %2879 = icmp slt i33 %2878, 0
  %2880 = or i1 %2877, %2879
  br i1 %2880, label %2881, label %2882, !prof !3

2881:                                             ; preds = %2874
  call void @llvm.trap() #22
  unreachable

2882:                                             ; preds = %2874
  %2883 = trunc i33 %2878 to i32
  store i32 %2883, i32* %2873, align 4
  br label %2884

2884:                                             ; preds = %2882, %2868
  %2885 = phi i32 [ %2883, %2882 ], [ %2869, %2868 ]
  %2886 = load atomic i32, i32* %2852 monotonic, align 4
  %2887 = and i32 %2886, 2
  %2888 = icmp eq i32 %2887, 0
  br i1 %2888, label %2889, label %2891

2889:                                             ; preds = %2884
  %2890 = add i32 %2885, -1
  store i32 %2890, i32* %2873, align 4
  br label %2891

2891:                                             ; preds = %2889, %2884
  %2892 = phi i32 [ %2890, %2889 ], [ %2885, %2884 ]
  %2893 = icmp eq i32 %2892, 0
  br i1 %2893, label %2894, label %2895

2894:                                             ; preds = %2891
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2849) #22
  br label %2895

2895:                                             ; preds = %2847, %2891, %2894
  %2896 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %42, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2849, %"class.WTF::StringImpl"** %2896, align 8
  %2897 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %42, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i64 0, i64 0), i8** %2897, align 8
  %2898 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %42)
  %2899 = ptrtoint %"class.WTF::StringImpl"* %2898 to i64
  %2900 = bitcast %"class.WTF::String"* %10 to i64*
  %2901 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %2899, i64* %2900, align 8
  %2902 = icmp eq %"class.WTF::StringImpl"* %2901, null
  br i1 %2902, label %2916, label %2903

2903:                                             ; preds = %2895
  %2904 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2901, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2905 = load atomic i32, i32* %2904 monotonic, align 4
  %2906 = and i32 %2905, 2
  %2907 = icmp eq i32 %2906, 0
  %2908 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2901, i64 0, i32 0
  %2909 = load i32, i32* %2908, align 4
  br i1 %2907, label %2910, label %2912

2910:                                             ; preds = %2903
  %2911 = add i32 %2909, -1
  store i32 %2911, i32* %2908, align 4
  br label %2912

2912:                                             ; preds = %2910, %2903
  %2913 = phi i32 [ %2911, %2910 ], [ %2909, %2903 ]
  %2914 = icmp eq i32 %2913, 0
  br i1 %2914, label %2915, label %2916

2915:                                             ; preds = %2912
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2901) #22
  br label %2916

2916:                                             ; preds = %2915, %2912, %2895
  %2917 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2896, align 8
  %2918 = icmp eq %"class.WTF::StringImpl"* %2917, null
  br i1 %2918, label %2932, label %2919

2919:                                             ; preds = %2916
  %2920 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2917, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2921 = load atomic i32, i32* %2920 monotonic, align 4
  %2922 = and i32 %2921, 2
  %2923 = icmp eq i32 %2922, 0
  %2924 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2917, i64 0, i32 0
  %2925 = load i32, i32* %2924, align 4
  br i1 %2923, label %2926, label %2928

2926:                                             ; preds = %2919
  %2927 = add i32 %2925, -1
  store i32 %2927, i32* %2924, align 4
  br label %2928

2928:                                             ; preds = %2926, %2919
  %2929 = phi i32 [ %2927, %2926 ], [ %2925, %2919 ]
  %2930 = icmp eq i32 %2929, 0
  br i1 %2930, label %2931, label %2932

2931:                                             ; preds = %2928
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2917) #22
  br label %2932

2932:                                             ; preds = %2931, %2928, %2916
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2848) #22
  br i1 %2, label %3017, label %2933

2933:                                             ; preds = %2846, %2932
  %2934 = phi i64* [ %260, %2846 ], [ %2900, %2932 ]
  %2935 = bitcast %"class.WTF::StringAppend.3844"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2935) #22
  %2936 = bitcast %"class.WTF::String"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2936) #22
  %2937 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2937) #22
  store i32 -1431655766, i32* %5, align 4
  %2938 = bitcast %"class.blink::HeapVector.3084"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2938) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2938, i8 0, i64 16, i1 false) #22
  %2939 = bitcast %"class.blink::AXObject"* %0 to %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.3084"*)***
  %2940 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.3084"*)**, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.3084"*)*** %2939, align 8
  %2941 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.3084"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.3084"*)** %2940, i64 53
  %2942 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.3084"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.3084"*)** %2941, align 8
  %2943 = call %"class.WTF::StringImpl"* %2942(%"class.blink::AXObject"* %0, i32* nonnull dereferenceable(4) %5, %"class.blink::HeapVector.3084"* nonnull %6) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2938) #22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2937) #22
  %2944 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2943, %"class.WTF::StringImpl"** %2944, align 8
  %2945 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String18EncodeForDebuggingEv(%"class.WTF::String"* nonnull %44) #22
  %2946 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::StringImpl"* %2945)
  %2947 = getelementptr inbounds %"class.WTF::StringAppend.3844", %"class.WTF::StringAppend.3844"* %43, i64 0, i32 0, i32 0, i32 0
  %2948 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %2946, 0
  store %"class.WTF::StringImpl"* %2948, %"class.WTF::StringImpl"** %2947, align 8
  %2949 = getelementptr inbounds %"class.WTF::StringAppend.3844", %"class.WTF::StringAppend.3844"* %43, i64 0, i32 1, i32 0, i32 0
  %2950 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %2946, 1
  store %"class.WTF::StringImpl"* %2950, %"class.WTF::StringImpl"** %2949, align 8
  %2951 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.3844"* nonnull %43)
  %2952 = ptrtoint %"class.WTF::StringImpl"* %2951 to i64
  %2953 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %2952, i64* %2934, align 8
  %2954 = icmp eq %"class.WTF::StringImpl"* %2953, null
  br i1 %2954, label %2968, label %2955

2955:                                             ; preds = %2933
  %2956 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2953, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2957 = load atomic i32, i32* %2956 monotonic, align 4
  %2958 = and i32 %2957, 2
  %2959 = icmp eq i32 %2958, 0
  %2960 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2953, i64 0, i32 0
  %2961 = load i32, i32* %2960, align 4
  br i1 %2959, label %2962, label %2964

2962:                                             ; preds = %2955
  %2963 = add i32 %2961, -1
  store i32 %2963, i32* %2960, align 4
  br label %2964

2964:                                             ; preds = %2962, %2955
  %2965 = phi i32 [ %2963, %2962 ], [ %2961, %2955 ]
  %2966 = icmp eq i32 %2965, 0
  br i1 %2966, label %2967, label %2968

2967:                                             ; preds = %2964
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2953) #22
  br label %2968

2968:                                             ; preds = %2967, %2964, %2933
  %2969 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2949, align 8
  %2970 = icmp eq %"class.WTF::StringImpl"* %2969, null
  br i1 %2970, label %2984, label %2971

2971:                                             ; preds = %2968
  %2972 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2969, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2973 = load atomic i32, i32* %2972 monotonic, align 4
  %2974 = and i32 %2973, 2
  %2975 = icmp eq i32 %2974, 0
  %2976 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2969, i64 0, i32 0
  %2977 = load i32, i32* %2976, align 4
  br i1 %2975, label %2978, label %2980

2978:                                             ; preds = %2971
  %2979 = add i32 %2977, -1
  store i32 %2979, i32* %2976, align 4
  br label %2980

2980:                                             ; preds = %2978, %2971
  %2981 = phi i32 [ %2979, %2978 ], [ %2977, %2971 ]
  %2982 = icmp eq i32 %2981, 0
  br i1 %2982, label %2983, label %2984

2983:                                             ; preds = %2980
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2969) #22
  br label %2984

2984:                                             ; preds = %2983, %2980, %2968
  %2985 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2947, align 8
  %2986 = icmp eq %"class.WTF::StringImpl"* %2985, null
  br i1 %2986, label %3000, label %2987

2987:                                             ; preds = %2984
  %2988 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2985, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2989 = load atomic i32, i32* %2988 monotonic, align 4
  %2990 = and i32 %2989, 2
  %2991 = icmp eq i32 %2990, 0
  %2992 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2985, i64 0, i32 0
  %2993 = load i32, i32* %2992, align 4
  br i1 %2991, label %2994, label %2996

2994:                                             ; preds = %2987
  %2995 = add i32 %2993, -1
  store i32 %2995, i32* %2992, align 4
  br label %2996

2996:                                             ; preds = %2994, %2987
  %2997 = phi i32 [ %2995, %2994 ], [ %2993, %2987 ]
  %2998 = icmp eq i32 %2997, 0
  br i1 %2998, label %2999, label %3000

2999:                                             ; preds = %2996
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2985) #22
  br label %3000

3000:                                             ; preds = %2984, %2996, %2999
  %3001 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2944, align 8
  %3002 = icmp eq %"class.WTF::StringImpl"* %3001, null
  br i1 %3002, label %3016, label %3003

3003:                                             ; preds = %3000
  %3004 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3001, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3005 = load atomic i32, i32* %3004 monotonic, align 4
  %3006 = and i32 %3005, 2
  %3007 = icmp eq i32 %3006, 0
  %3008 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3001, i64 0, i32 0
  %3009 = load i32, i32* %3008, align 4
  br i1 %3007, label %3010, label %3012

3010:                                             ; preds = %3003
  %3011 = add i32 %3009, -1
  store i32 %3011, i32* %3008, align 4
  br label %3012

3012:                                             ; preds = %3010, %3003
  %3013 = phi i32 [ %3011, %3010 ], [ %3009, %3003 ]
  %3014 = icmp eq i32 %3013, 0
  br i1 %3014, label %3015, label %3016

3015:                                             ; preds = %3012
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3001) #22
  br label %3016

3016:                                             ; preds = %3000, %3012, %3015
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2936) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2935) #22
  br label %3017

3017:                                             ; preds = %2932, %3016, %2761
  %3018 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  ret %"class.WTF::StringImpl"* %3018
}

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject6IsRootEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %3, i64 124
  %5 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::Node"* %5(%"class.blink::AXObject"* %0) #22
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %19, label %8

8:                                                ; preds = %1
  %9 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %10 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %9, i64 124
  %11 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %10, align 8
  %12 = tail call %"class.blink::Node"* %11(%"class.blink::AXObject"* %0) #22
  %13 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %14 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %14, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::Document"*, %"class.blink::Document"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %16, i64 0, i32 0, i32 0
  %18 = icmp eq %"class.blink::Node"* %12, %17
  br label %19

19:                                               ; preds = %1, %8
  %20 = phi i1 [ false, %1 ], [ %18, %8 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject15IsMissingParentEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %2, align 8
  %4 = icmp eq %"class.blink::AXObject"* %3, null
  br i1 %4, label %5, label %23

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %7 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %7, i64 124
  %9 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %8, align 8
  %10 = tail call %"class.blink::Node"* %9(%"class.blink::AXObject"* %0) #22
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %27, label %12

12:                                               ; preds = %5
  %13 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %6, align 8
  %14 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %13, i64 124
  %15 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %14, align 8
  %16 = tail call %"class.blink::Node"* %15(%"class.blink::AXObject"* %0) #22
  %17 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %18 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %20, i64 0, i32 0, i32 0
  %22 = icmp ne %"class.blink::Node"* %16, %21
  br label %27

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %3, i64 0, i32 14, i32 0, i32 0
  %25 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %24, align 8
  %26 = icmp eq %"class.blink::AXObjectCacheImpl"* %25, null
  br label %27

27:                                               ; preds = %12, %5, %23
  %28 = phi i1 [ %26, %23 ], [ true, %5 ], [ %22, %12 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8AXObject19RepairMissingParentEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* %0)
  %3 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2
  %4 = ptrtoint %"class.blink::AXObject"* %2 to i64
  %5 = bitcast %"class.blink::Member.3082"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::AXObject"* %2 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #22
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %5 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %4, align 8
  %6 = tail call zeroext i1 @_ZNK5blink17AXObjectCacheImpl11IsAriaOwnedEPKNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %5, %"class.blink::AXObject"* %0) #22
  %7 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %4, align 8
  br i1 %6, label %8, label %10

8:                                                ; preds = %1
  %9 = tail call %"class.blink::AXObject"* @_ZNK5blink17AXObjectCacheImpl18GetAriaOwnedParentEPKNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %7, %"class.blink::AXObject"* %0) #22
  br label %22

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %12 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %12, i64 124
  %14 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %13, align 8
  %15 = tail call %"class.blink::Node"* %14(%"class.blink::AXObject"* %0) #22
  %16 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %17 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %17, i64 125
  %19 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %18, align 8
  %20 = tail call %"class.blink::LayoutObject"* %19(%"class.blink::AXObject"* %0) #22
  %21 = tail call %"class.blink::AXObject"* @_ZN5blink8AXObject20ComputeNonARIAParentERNS_17AXObjectCacheImplEPNS_4NodeEPNS_12LayoutObjectE(%"class.blink::AXObjectCacheImpl"* dereferenceable(456) %7, %"class.blink::Node"* %15, %"class.blink::LayoutObject"* %20)
  br label %22

22:                                               ; preds = %10, %8
  %23 = phi %"class.blink::AXObject"* [ %9, %8 ], [ %21, %10 ]
  %24 = icmp eq %"class.blink::AXObject"* %23, null
  br i1 %24, label %61, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %23, i64 0, i32 14, i32 0, i32 0
  %27 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %26, align 8
  %28 = icmp eq %"class.blink::AXObjectCacheImpl"* %27, null
  br i1 %28, label %29, label %61

29:                                               ; preds = %25
  %30 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #22
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 693, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0)) #22
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #22
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %31, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4, i64 0, i64 0), i64 41) #22
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i64 10) #22
  %34 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %35 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %34, align 8
  %36 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %35, i64 124
  %37 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %36, align 8
  %38 = call %"class.blink::Node"* %37(%"class.blink::AXObject"* %0) #22
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEEPKNS_4NodeE(%"class.std::__1::basic_ostream"* dereferenceable(160) %33, %"class.blink::Node"* %38) #22
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %39, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i64 11) #22
  %41 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #22
  %42 = call %"class.WTF::StringImpl"* @_ZNK5blink8AXObject8ToStringEbb(%"class.blink::AXObject"* nonnull %23, i1 zeroext true, i1 zeroext true)
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %43, align 8
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3WTFlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6StringE(%"class.std::__1::basic_ostream"* dereferenceable(160) %40, %"class.WTF::String"* nonnull dereferenceable(8) %3) #22
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %29
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #22
  br label %60

60:                                               ; preds = %29, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #22
  br label %61

61:                                               ; preds = %25, %22, %60
  ret %"class.blink::AXObject"* %23
}

declare zeroext i1 @_ZNK5blink17AXObjectCacheImpl11IsAriaOwnedEPKNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObject"*) local_unnamed_addr #6

declare %"class.blink::AXObject"* @_ZNK5blink17AXObjectCacheImpl18GetAriaOwnedParentEPKNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObject"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZN5blink8AXObject20ComputeNonARIAParentERNS_17AXObjectCacheImplEPNS_4NodeEPNS_12LayoutObjectE(%"class.blink::AXObjectCacheImpl"* dereferenceable(456), %"class.blink::Node"*, %"class.blink::LayoutObject"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %4 = icmp eq %"class.blink::Node"* %1, null
  br i1 %4, label %5, label %85

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 0, i32 7
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %8 = icmp eq %"class.blink::LayoutObject"* %7, null
  br i1 %8, label %83, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 16777216
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 6, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  br label %18

18:                                               ; preds = %9, %15
  %19 = phi %"class.blink::Node"* [ %17, %15 ], [ null, %9 ]
  %20 = load i8, i8* @_ZN5blink17AXObjectCacheImpl17use_ax_menu_list_E, align 1, !range !2
  %21 = icmp eq i8 %20, 0
  %22 = icmp eq %"class.blink::Node"* %19, null
  br i1 %21, label %46, label %23

23:                                               ; preds = %18
  br i1 %22, label %73, label %24

24:                                               ; preds = %23
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 48
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %50

29:                                               ; preds = %24
  %30 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 1, i32 2
  %34 = bitcast %"class.blink::Member.318"* %33 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %37, %39
  br i1 %40, label %41, label %50

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 5, i32 0, i32 0, i32 1
  %43 = bitcast %"class.blink::TraceWrapperV8Reference"* %42 to i8*
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %50, label %83

46:                                               ; preds = %18
  br i1 %22, label %73, label %47

47:                                               ; preds = %46
  %48 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  br label %50

50:                                               ; preds = %47, %41, %29, %24
  %51 = phi i32 [ %49, %47 ], [ %26, %41 ], [ %26, %29 ], [ %26, %24 ]
  %52 = and i32 %51, 48
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %73

54:                                               ; preds = %50
  %55 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %56 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 1, i32 2
  %59 = bitcast %"class.blink::Member.318"* %58 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %62, %64
  br i1 %65, label %83, label %66

66:                                               ; preds = %54
  %67 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kMapTagE, align 8
  %68 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %69, i64 0, i32 3, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %62, %71
  br i1 %72, label %83, label %73

73:                                               ; preds = %66, %50, %46, %23
  %74 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_12LayoutObjectE(%"class.blink::AXObjectCacheImpl"* %0, %"class.blink::LayoutObject"* nonnull %7) #22
  %75 = icmp eq %"class.blink::AXObject"* %74, null
  br i1 %75, label %83, label %76

76:                                               ; preds = %73
  %77 = bitcast %"class.blink::AXObject"* %74 to i1 (%"class.blink::AXObject"*)***
  %78 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %77, align 8
  %79 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %78, i64 119
  %80 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %79, align 8
  %81 = tail call zeroext i1 %80(%"class.blink::AXObject"* nonnull %74) #22
  %82 = select i1 %81, %"class.blink::AXObject"* %74, %"class.blink::AXObject"* null
  br label %83

83:                                               ; preds = %66, %206, %5, %163, %148, %92, %213, %216, %41, %54, %123, %188, %194, %119, %73, %76
  %84 = phi %"class.blink::AXObject"* [ %82, %76 ], [ null, %73 ], [ %98, %92 ], [ null, %5 ], [ null, %66 ], [ null, %148 ], [ null, %163 ], [ null, %206 ], [ %222, %216 ], [ null, %213 ], [ null, %41 ], [ null, %54 ], [ null, %123 ], [ null, %188 ], [ null, %194 ], [ %121, %119 ]
  ret %"class.blink::AXObject"* %84

85:                                               ; preds = %3
  %86 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %87 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %87, i64 0, i32 2, i32 0, i32 0
  %89 = load %"class.blink::Document"*, %"class.blink::Document"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %89, i64 0, i32 0, i32 0
  %91 = icmp eq %"class.blink::Node"* %90, %1
  br i1 %91, label %92, label %99

92:                                               ; preds = %85
  %93 = bitcast %"class.blink::Node"* %1 to %"class.blink::Document"*
  %94 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %93) #22
  %95 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %94, i64 0, i32 12, i32 0, i32 0
  %96 = load %"class.blink::Element"*, %"class.blink::Element"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %96, i64 0, i32 0, i32 0
  %98 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %0, %"class.blink::Node"* %97) #22
  br label %83

99:                                               ; preds = %85
  %100 = load i8, i8* @_ZN5blink17AXObjectCacheImpl17use_ax_menu_list_E, align 1, !range !2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %123, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %104 = load i32, i32* %103, align 8
  %105 = and i32 %104, 48
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %123

107:                                              ; preds = %102
  %108 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %109 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %108, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 2
  %112 = bitcast %"class.blink::Member.318"* %111 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %113 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %113, i64 0, i32 3, i32 0, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 3, i32 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %115, %117
  br i1 %118, label %119, label %123

119:                                              ; preds = %107
  %120 = bitcast %"class.blink::Node"* %1 to %"class.blink::HTMLOptionElement"*
  %121 = tail call %"class.blink::AXObject"* @_ZN5blink16AXMenuListOption27ComputeParentAXMenuPopupForERNS_17AXObjectCacheImplEPNS_17HTMLOptionElementE(%"class.blink::AXObjectCacheImpl"* dereferenceable(456) %0, %"class.blink::HTMLOptionElement"* nonnull %120) #22
  %122 = icmp eq %"class.blink::AXObject"* %121, null
  br i1 %122, label %123, label %83

123:                                              ; preds = %107, %99, %102, %119
  %124 = tail call %"class.blink::ContainerNode"* @_ZN5blink26LayoutTreeBuilderTraversal6ParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %1) #22
  %125 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %124, i64 0, i32 0
  %126 = icmp eq %"class.blink::ContainerNode"* %124, null
  br i1 %126, label %83, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %124, i64 0, i32 0, i32 1
  %129 = load i32, i32* %128, align 8
  %130 = and i32 %129, 48
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %148

132:                                              ; preds = %127
  %133 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kMapTagE, align 8
  %134 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %133, i64 0, i32 0, i32 0, i32 0
  %135 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %125, i64 1, i32 2
  %137 = bitcast %"class.blink::Member.318"* %136 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %138 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %138, i64 0, i32 3, i32 0, i32 0, i32 0
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %135, i64 0, i32 3, i32 0, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %140, %142
  br i1 %143, label %144, label %148

144:                                              ; preds = %132
  %145 = bitcast %"class.blink::ContainerNode"* %124 to %"class.blink::HTMLMapElement"*
  %146 = tail call %"class.blink::HTMLImageElement"* @_ZN5blink14HTMLMapElement12ImageElementEv(%"class.blink::HTMLMapElement"* nonnull %145) #22
  %147 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %148

148:                                              ; preds = %127, %132, %144
  %149 = phi %"class.blink::Node"* [ %147, %144 ], [ %125, %132 ], [ %125, %127 ]
  %150 = icmp eq %"class.blink::Node"* %149, null
  br i1 %150, label %83, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %149, i64 0, i32 1
  %153 = load i32, i32* %152, align 8
  %154 = and i32 %153, 1
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %149, i64 0, i32 6, i32 0, i32 0
  br i1 %155, label %161, label %157

157:                                              ; preds = %151
  %158 = bitcast %"class.blink::NodeData"** %156 to %"class.blink::NodeRareData"**
  %159 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %158, align 8
  %160 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %159, i64 0, i32 1, i32 0, i32 0
  br label %163

161:                                              ; preds = %151
  %162 = bitcast %"class.blink::NodeData"** %156 to %"class.blink::NodeRenderingData"**
  br label %163

163:                                              ; preds = %157, %161
  %164 = phi %"class.blink::NodeRenderingData"** [ %160, %157 ], [ %162, %161 ]
  %165 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %165, i64 0, i32 1
  %167 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %166, align 8
  %168 = tail call zeroext i1 @_ZN5blink17AXObjectCacheImpl25ShouldCreateAXMenuListForEPNS_12LayoutObjectE(%"class.blink::LayoutObject"* %167) #22
  br i1 %168, label %83, label %169

169:                                              ; preds = %163
  %170 = load i8, i8* @_ZN5blink17AXObjectCacheImpl17use_ax_menu_list_E, align 1, !range !2
  %171 = icmp ne i8 %170, 0
  %172 = load i32, i32* %152, align 8
  %173 = and i32 %172, 48
  %174 = icmp eq i32 %173, 0
  %175 = and i1 %171, %174
  br i1 %175, label %176, label %193

176:                                              ; preds = %169
  %177 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %178 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %177, i64 0, i32 0, i32 0, i32 0
  %179 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %178, align 8
  %180 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %149, i64 1, i32 2
  %181 = bitcast %"class.blink::Member.318"* %180 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %182 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %181, align 8
  %183 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %182, i64 0, i32 3, i32 0, i32 0, i32 0
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  %185 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %179, i64 0, i32 3, i32 0, i32 0, i32 0
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %184, %186
  br i1 %187, label %188, label %193

188:                                              ; preds = %176
  %189 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %149, i64 5, i32 0, i32 0, i32 1
  %190 = bitcast %"class.blink::TraceWrapperV8Reference"* %189 to i8*
  %191 = load i8, i8* %190, align 8, !range !2
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %193, label %83

193:                                              ; preds = %169, %188, %176
  br i1 %174, label %194, label %213

194:                                              ; preds = %193
  %195 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %196 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %195, i64 0, i32 0, i32 0, i32 0
  %197 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %196, align 8
  %198 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %149, i64 1, i32 2
  %199 = bitcast %"class.blink::Member.318"* %198 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %200 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %199, align 8
  %201 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %200, i64 0, i32 3, i32 0, i32 0, i32 0
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %201, align 8
  %203 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %197, i64 0, i32 3, i32 0, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %202, %204
  br i1 %205, label %83, label %206

206:                                              ; preds = %194
  %207 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kMapTagE, align 8
  %208 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %207, i64 0, i32 0, i32 0, i32 0
  %209 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %208, align 8
  %210 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %209, i64 0, i32 3, i32 0, i32 0, i32 0
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %210, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %202, %211
  br i1 %212, label %83, label %213

213:                                              ; preds = %206, %193
  %214 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %0, %"class.blink::Node"* nonnull %149) #22
  %215 = icmp eq %"class.blink::AXObject"* %214, null
  br i1 %215, label %83, label %216

216:                                              ; preds = %213
  %217 = bitcast %"class.blink::AXObject"* %214 to i1 (%"class.blink::AXObject"*)***
  %218 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %217, align 8
  %219 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %218, i64 119
  %220 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %219, align 8
  %221 = tail call zeroext i1 %220(%"class.blink::AXObject"* nonnull %214) #22
  %222 = select i1 %221, %"class.blink::AXObject"* %214, %"class.blink::AXObject"* null
  br label %83
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEEPKNS_4NodeE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.blink::Node"*) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject25CanComputeAsNaturalParentEPNS_4NodeE(%"class.blink::Node"* readonly) local_unnamed_addr #7 align 2 {
  %2 = load i8, i8* @_ZN5blink17AXObjectCacheImpl17use_ax_menu_list_E, align 1, !range !2
  %3 = icmp eq i8 %2, 0
  %4 = icmp eq %"class.blink::Node"* %0, null
  br i1 %3, label %28, label %5

5:                                                ; preds = %1
  br i1 %4, label %60, label %6

6:                                                ; preds = %5
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 48
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %32

11:                                               ; preds = %6
  %12 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %16 = bitcast %"class.blink::Member.318"* %15 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %17, i64 0, i32 3, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %19, %21
  br i1 %22, label %23, label %32

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 5, i32 0, i32 0, i32 1
  %25 = bitcast %"class.blink::TraceWrapperV8Reference"* %24 to i8*
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %32, label %60

28:                                               ; preds = %1
  br i1 %4, label %60, label %29

29:                                               ; preds = %28
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  br label %32

32:                                               ; preds = %29, %23, %11, %6
  %33 = phi i32 [ %31, %29 ], [ %8, %23 ], [ %8, %11 ], [ %8, %6 ]
  %34 = and i32 %33, 48
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %60

36:                                               ; preds = %32
  %37 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %38 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %41 = bitcast %"class.blink::Member.318"* %40 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %44, %46
  br i1 %47, label %60, label %48

48:                                               ; preds = %36
  %49 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kMapTagE, align 8
  %50 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %53 = bitcast %"class.blink::Member.318"* %52 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp ne %"class.WTF::StringImpl"* %56, %58
  ret i1 %59

60:                                               ; preds = %32, %23, %36, %28, %5
  %61 = phi i1 [ false, %23 ], [ false, %36 ], [ true, %5 ], [ true, %28 ], [ true, %32 ]
  ret i1 %61
}

declare %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_12LayoutObjectE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::LayoutObject"*) local_unnamed_addr #6

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #6

declare %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*) local_unnamed_addr #6

declare %"class.blink::AXObject"* @_ZN5blink16AXMenuListOption27ComputeParentAXMenuPopupForERNS_17AXObjectCacheImplEPNS_17HTMLOptionElementE(%"class.blink::AXObjectCacheImpl"* dereferenceable(456), %"class.blink::HTMLOptionElement"*) local_unnamed_addr #6

declare zeroext i1 @_ZN5blink17AXObjectCacheImpl25ShouldCreateAXMenuListForEPNS_12LayoutObjectE(%"class.blink::LayoutObject"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject29GetAOMPropertyOrARIAAttributeENS_17AOMStringPropertyE(%"class.blink::AXObject"*, i32) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %4 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %4, i64 124
  %6 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %5, align 8
  %7 = tail call %"class.blink::Node"* %6(%"class.blink::AXObject"* %0) #22
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 12
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %9, %2
  %15 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %19

16:                                               ; preds = %9
  %17 = bitcast %"class.blink::Node"* %7 to %"class.blink::Element"*
  %18 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_17AOMStringPropertyE(%"class.blink::Element"* nonnull %17, i32 %1) #22
  br label %19

19:                                               ; preds = %16, %14
  %20 = phi %"class.WTF::AtomicString"* [ %18, %16 ], [ %15, %14 ]
  ret %"class.WTF::AtomicString"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %3, i64 124
  %5 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::Node"* %5(%"class.blink::AXObject"* %0) #22
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 12
  %12 = icmp eq i32 %11, 0
  %13 = bitcast %"class.blink::Node"* %6 to %"class.blink::Element"*
  %14 = select i1 %12, %"class.blink::Element"* %13, %"class.blink::Element"* null
  br label %15

15:                                               ; preds = %1, %8
  %16 = phi %"class.blink::Element"* [ %14, %8 ], [ null, %1 ]
  ret %"class.blink::Element"* %16
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_17AOMStringPropertyE(%"class.blink::Element"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink8AXObject29GetAOMPropertyOrARIAAttributeENS_19AOMRelationPropertyE(%"class.blink::AXObject"*, i32) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %4 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %4, i64 124
  %6 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %5, align 8
  %7 = tail call %"class.blink::Node"* %6(%"class.blink::AXObject"* %0) #22
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 12
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  %15 = bitcast %"class.blink::Node"* %7 to %"class.blink::Element"*
  %16 = tail call %"class.blink::Element"* @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_19AOMRelationPropertyE(%"class.blink::Element"* nonnull %15, i32 %1) #22
  br label %17

17:                                               ; preds = %9, %2, %14
  %18 = phi %"class.blink::Element"* [ %16, %14 ], [ null, %9 ], [ null, %2 ]
  ret %"class.blink::Element"* %18
}

declare %"class.blink::Element"* @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_19AOMRelationPropertyE(%"class.blink::Element"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject14HasAOMPropertyENS_23AOMRelationListPropertyERNS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEE(%"class.blink::AXObject"*, i32, %"class.blink::HeapVector.365"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %5 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %5, i64 124
  %7 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %6, align 8
  %8 = tail call %"class.blink::Node"* %7(%"class.blink::AXObject"* %0) #22
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 12
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = bitcast %"class.blink::Node"* %8 to %"class.blink::Element"*
  %17 = tail call zeroext i1 @_ZN5blink14AccessibleNode11GetPropertyEPNS_7ElementENS_23AOMRelationListPropertyERNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::Element"* nonnull %16, i32 %1, %"class.blink::HeapVector.365"* dereferenceable(16) %2) #22
  br label %18

18:                                               ; preds = %10, %3, %15
  %19 = phi i1 [ %17, %15 ], [ false, %10 ], [ false, %3 ]
  ret i1 %19
}

declare zeroext i1 @_ZN5blink14AccessibleNode11GetPropertyEPNS_7ElementENS_23AOMRelationListPropertyERNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::Element"*, i32, %"class.blink::HeapVector.365"* dereferenceable(16)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_23AOMRelationListPropertyERNS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEE(%"class.blink::AXObject"*, i32, %"class.blink::HeapVector.365"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %5 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %5, i64 124
  %7 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %6, align 8
  %8 = tail call %"class.blink::Node"* %7(%"class.blink::AXObject"* %0) #22
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 12
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = bitcast %"class.blink::Node"* %8 to %"class.blink::Element"*
  %17 = tail call zeroext i1 @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_23AOMRelationListPropertyERNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::Element"* nonnull %16, i32 %1, %"class.blink::HeapVector.365"* dereferenceable(16) %2) #22
  br label %18

18:                                               ; preds = %10, %3, %15
  %19 = phi i1 [ %17, %15 ], [ false, %10 ], [ false, %3 ]
  ret i1 %19
}

declare zeroext i1 @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_23AOMRelationListPropertyERNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::Element"*, i32, %"class.blink::HeapVector.365"* dereferenceable(16)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_18AOMBooleanPropertyERb(%"class.blink::AXObject"*, i32, i8* nocapture dereferenceable(1)) unnamed_addr #2 align 2 {
  %4 = alloca i8, align 1
  %5 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %6 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %6, i64 124
  %8 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %7, align 8
  %9 = tail call %"class.blink::Node"* %8(%"class.blink::AXObject"* %0) #22
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %22, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 12
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %22

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::Node"* %9 to %"class.blink::Element"*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22
  store i8 1, i8* %4, align 1
  %18 = call zeroext i1 @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_18AOMBooleanPropertyERb(%"class.blink::Element"* nonnull %17, i32 %1, i8* nonnull dereferenceable(1) %4) #22
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %2, align 1
  %20 = load i8, i8* %4, align 1, !range !2
  %21 = icmp eq i8 %20, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22
  br label %22

22:                                               ; preds = %11, %3, %16
  %23 = phi i1 [ %21, %16 ], [ false, %11 ], [ false, %3 ]
  ret i1 %23
}

declare zeroext i1 @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_18AOMBooleanPropertyERb(%"class.blink::Element"*, i32, i8* dereferenceable(1)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject32AOMPropertyOrARIAAttributeIsTrueENS_18AOMBooleanPropertyE(%"class.blink::AXObject"*, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22
  store i8 -86, i8* %3, align 1
  %4 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*, i32, i8*)***
  %5 = load i1 (%"class.blink::AXObject"*, i32, i8*)**, i1 (%"class.blink::AXObject"*, i32, i8*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %5, i64 6
  %7 = load i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %6, align 8
  %8 = call zeroext i1 %7(%"class.blink::AXObject"* %0, i32 %1, i8* nonnull dereferenceable(1) %3) #22
  %9 = load i8, i8* %3, align 1
  %10 = icmp ne i8 %9, 0
  %11 = and i1 %8, %10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject33AOMPropertyOrARIAAttributeIsFalseENS_18AOMBooleanPropertyE(%"class.blink::AXObject"*, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22
  store i8 -86, i8* %3, align 1
  %4 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*, i32, i8*)***
  %5 = load i1 (%"class.blink::AXObject"*, i32, i8*)**, i1 (%"class.blink::AXObject"*, i32, i8*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %5, i64 6
  %7 = load i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %6, align 8
  %8 = call zeroext i1 %7(%"class.blink::AXObject"* %0, i32 %1, i8* nonnull dereferenceable(1) %3) #22
  %9 = load i8, i8* %3, align 1
  %10 = icmp eq i8 %9, 0
  %11 = and i1 %8, %10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_15AOMUIntPropertyERj(%"class.blink::AXObject"*, i32, i32* nocapture dereferenceable(4)) local_unnamed_addr #2 align 2 {
  %4 = alloca i8, align 1
  %5 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %6 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %6, i64 124
  %8 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %7, align 8
  %9 = tail call %"class.blink::Node"* %8(%"class.blink::AXObject"* %0) #22
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 12
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::Node"* %9 to %"class.blink::Element"*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22
  store i8 1, i8* %4, align 1
  %18 = call i32 @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_15AOMUIntPropertyERb(%"class.blink::Element"* nonnull %17, i32 %1, i8* nonnull dereferenceable(1) %4) #22
  store i32 %18, i32* %2, align 4
  %19 = load i8, i8* %4, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22
  br label %21

21:                                               ; preds = %11, %3, %16
  %22 = phi i1 [ %20, %16 ], [ false, %11 ], [ false, %3 ]
  ret i1 %22
}

declare i32 @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_15AOMUIntPropertyERb(%"class.blink::Element"*, i32, i8* dereferenceable(1)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_14AOMIntPropertyERi(%"class.blink::AXObject"*, i32, i32* nocapture dereferenceable(4)) local_unnamed_addr #2 align 2 {
  %4 = alloca i8, align 1
  %5 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %6 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %6, i64 124
  %8 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %7, align 8
  %9 = tail call %"class.blink::Node"* %8(%"class.blink::AXObject"* %0) #22
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 12
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::Node"* %9 to %"class.blink::Element"*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22
  store i8 1, i8* %4, align 1
  %18 = call i32 @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_14AOMIntPropertyERb(%"class.blink::Element"* nonnull %17, i32 %1, i8* nonnull dereferenceable(1) %4) #22
  store i32 %18, i32* %2, align 4
  %19 = load i8, i8* %4, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22
  br label %21

21:                                               ; preds = %11, %3, %16
  %22 = phi i1 [ %20, %16 ], [ false, %11 ], [ false, %3 ]
  ret i1 %22
}

declare i32 @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_14AOMIntPropertyERb(%"class.blink::Element"*, i32, i8* dereferenceable(1)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_16AOMFloatPropertyERf(%"class.blink::AXObject"*, i32, float* nocapture dereferenceable(4)) local_unnamed_addr #2 align 2 {
  %4 = alloca i8, align 1
  %5 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %6 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %6, i64 124
  %8 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %7, align 8
  %9 = tail call %"class.blink::Node"* %8(%"class.blink::AXObject"* %0) #22
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 12
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::Node"* %9 to %"class.blink::Element"*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22
  store i8 1, i8* %4, align 1
  %18 = call float @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_16AOMFloatPropertyERb(%"class.blink::Element"* nonnull %17, i32 %1, i8* nonnull dereferenceable(1) %4) #22
  store float %18, float* %2, align 4
  %19 = load i8, i8* %4, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22
  br label %21

21:                                               ; preds = %11, %3, %16
  %22 = phi i1 [ %20, %16 ], [ false, %11 ], [ false, %3 ]
  ret i1 %22
}

declare float @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_16AOMFloatPropertyERb(%"class.blink::Element"*, i32, i8* dereferenceable(1)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_17AOMStringPropertyERN3WTF12AtomicStringE(%"class.blink::AXObject"*, i32, %"class.WTF::AtomicString"* nocapture dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %4 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %5 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %5, i64 124
  %7 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %6, align 8
  %8 = tail call %"class.blink::Node"* %7(%"class.blink::AXObject"* %0) #22
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %60, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 12
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %60

15:                                               ; preds = %10
  %16 = bitcast %"class.blink::Node"* %8 to %"class.blink::Element"*
  %17 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_17AOMStringPropertyE(%"class.blink::Element"* nonnull %16, i32 %1) #22
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #22
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !3

35:                                               ; preds = %26
  tail call void @llvm.trap() #22
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %36, %21, %15
  %39 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %40 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  %41 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  store i64 %39, i64* %40, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #22
  br label %57

57:                                               ; preds = %38, %53, %56
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %59 = icmp ne %"class.WTF::StringImpl"* %58, null
  br label %60

60:                                               ; preds = %10, %3, %57
  %61 = phi i1 [ %59, %57 ], [ false, %10 ], [ false, %3 ]
  ret i1 %61
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AccessibleNode"* @_ZNK5blink8AXObject17GetAccessibleNodeEv(%"class.blink::AXObject"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %3, i64 124
  %5 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::Node"* %5(%"class.blink::AXObject"* %0) #22
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 12
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::Node"* %6 to %"class.blink::Element"*
  %15 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %14) #22
  br label %16

16:                                               ; preds = %8, %1, %13
  %17 = phi %"class.blink::AccessibleNode"* [ %15, %13 ], [ null, %8 ], [ null, %1 ]
  ret %"class.blink::AccessibleNode"* %17
}

declare %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8AXObject9SerializeEPN2ui10AXNodeDataENS1_6AXModeE(%"class.blink::AXObject"*, %"struct.ui::AXNodeData"*, i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %1, i64 0, i32 2
  store i32 %5, i32* %6, align 4
  %7 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %1, i64 0, i32 1
  store i32 %8, i32* %9, align 8
  %10 = tail call zeroext i1 @_ZNK5blink8AXObject20CanSetFocusAttributeEv(%"class.blink::AXObject"* %0)
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %1, i32 6) #22
  br label %12

12:                                               ; preds = %11, %3
  %13 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %14 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %14, i64 49
  %16 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::AXObject"* %0) #22
  br i1 %17, label %19, label %18

18:                                               ; preds = %12
  tail call void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %1, i32 10) #22
  br i1 %10, label %19, label %68

19:                                               ; preds = %12, %18
  %20 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %21 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %21, i64 124
  %23 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %22, align 8
  %24 = tail call %"class.blink::Node"* %23(%"class.blink::AXObject"* %0) #22
  %25 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %26 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %25, align 8
  %27 = icmp ne %"class.blink::AXObjectCacheImpl"* %26, null
  %28 = icmp ne %"class.blink::Node"* %24, null
  %29 = and i1 %28, %27
  br i1 %29, label %30, label %68

30:                                               ; preds = %19
  %31 = tail call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %24) #22
  br i1 %31, label %50, label %32

32:                                               ; preds = %30
  %33 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %20, align 8
  %34 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %33, i64 124
  %35 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %34, align 8
  %36 = tail call %"class.blink::Node"* %35(%"class.blink::AXObject"* %0) #22
  %37 = icmp eq %"class.blink::Node"* %36, null
  br i1 %37, label %68, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %36, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, 12
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %68

43:                                               ; preds = %38
  %44 = bitcast %"class.blink::Node"* %36 to %"class.blink::Element"*
  %45 = bitcast %"class.blink::Node"* %36 to i1 (%"class.blink::Element"*)***
  %46 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %45, align 8
  %47 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %46, i64 126
  %48 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.blink::Element"* nonnull %44) #22
  br i1 %49, label %50, label %68

50:                                               ; preds = %30, %43
  tail call void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %1, i32 4) #22
  %51 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %13, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %51, i64 109
  %53 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.blink::AXObject"* %0) #22
  br i1 %54, label %55, label %56

55:                                               ; preds = %50
  tail call void @_ZN2ui10AXNodeData16AddBoolAttributeEN2ax5mojom13BoolAttributeEb(%"struct.ui::AXNodeData"* %1, i32 2, i1 zeroext true) #22
  br label %56

56:                                               ; preds = %55, %50
  %57 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %20, align 8
  %58 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %57, i64 124
  %59 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %58, align 8
  %60 = tail call %"class.blink::Node"* %59(%"class.blink::AXObject"* %0) #22
  %61 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %25, align 8
  %62 = icmp ne %"class.blink::AXObjectCacheImpl"* %61, null
  %63 = icmp ne %"class.blink::Node"* %60, null
  %64 = and i1 %63, %62
  br i1 %64, label %65, label %68

65:                                               ; preds = %56
  %66 = tail call zeroext i1 @_ZN5blink22HasRichlyEditableStyleERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %60) #22
  br i1 %66, label %67, label %68

67:                                               ; preds = %65
  tail call void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %1, i32 16) #22
  br label %68

68:                                               ; preds = %56, %38, %32, %19, %18, %43, %67, %65
  %69 = and i32 %2, 16
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %68
  tail call void @_ZN5blink8AXObject24SerializeHTMLTagAndClassEPN2ui10AXNodeDataE(%"class.blink::AXObject"* %0, %"struct.ui::AXNodeData"* %1)
  br label %72

72:                                               ; preds = %68, %71
  %73 = and i32 %2, 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %90, label %75

75:                                               ; preds = %72
  %76 = bitcast %"class.blink::AXObject"* %0 to i32 (%"class.blink::AXObject"*)***
  %77 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %76, align 8
  %78 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %77, i64 61
  %79 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %78, align 8
  %80 = tail call i32 %79(%"class.blink::AXObject"* %0) #22
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %83, label %82

82:                                               ; preds = %75
  tail call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 43, i32 %80) #22
  br label %83

83:                                               ; preds = %82, %75
  %84 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %76, align 8
  %85 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %84, i64 62
  %86 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %85, align 8
  %87 = tail call i32 %86(%"class.blink::AXObject"* %0) #22
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %83
  tail call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 44, i32 %87) #22
  br label %93

90:                                               ; preds = %72
  %91 = and i32 %2, 64
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %90, %83, %89
  tail call void @_ZN5blink8AXObject22SerializeLangAttributeEPN2ui10AXNodeDataE(%"class.blink::AXObject"* %0, %"struct.ui::AXNodeData"* %1)
  br label %94

94:                                               ; preds = %90, %93
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %95 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %96 = load i8, i8* %95, align 8
  %97 = and i8 %96, 1
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %100, label %99

99:                                               ; preds = %94
  tail call void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %1, i32 9) #22
  br i1 %10, label %100, label %101

100:                                              ; preds = %94, %99
  tail call void @_ZN5blink8AXObject28SerializeUnignoredAttributesEPN2ui10AXNodeDataENS1_6AXModeE(%"class.blink::AXObject"* %0, %"struct.ui::AXNodeData"* %1, i32 %2)
  br label %101

101:                                              ; preds = %99, %100
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject20CanSetFocusAttributeEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2, align 8
  %4 = icmp eq %"class.blink::AXObjectCacheImpl"* %3, null
  br i1 %4, label %101, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %7 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %7, i64 126
  %9 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %8, align 8
  %10 = tail call %"class.blink::Document"* %9(%"class.blink::AXObject"* %0) #22
  %11 = icmp eq %"class.blink::Document"* %10, null
  br i1 %11, label %26, label %12

12:                                               ; preds = %5
  %13 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %6, align 8
  %14 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %13, i64 126
  %15 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %14, align 8
  %16 = tail call %"class.blink::Document"* %15(%"class.blink::AXObject"* %0) #22
  %17 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %16) #22
  %18 = icmp eq %"class.blink::Page"* %17, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %12
  %20 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %6, align 8
  %21 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %20, i64 126
  %22 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %21, align 8
  %23 = tail call %"class.blink::Document"* %22(%"class.blink::AXObject"* %0) #22
  %24 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %23) #22
  %25 = tail call zeroext i1 @_ZNK5blink4Page12InsidePortalEv(%"class.blink::Page"* %24) #22
  br i1 %25, label %101, label %26

26:                                               ; preds = %5, %12, %19
  %27 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %28 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %28, i64 124
  %30 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %29, align 8
  %31 = tail call %"class.blink::Node"* %30(%"class.blink::AXObject"* %0) #22
  %32 = icmp eq %"class.blink::Node"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %26
  %34 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %27, align 8
  %35 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %34, i64 124
  %36 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %35, align 8
  %37 = tail call %"class.blink::Node"* %36(%"class.blink::AXObject"* %0) #22
  %38 = tail call zeroext i1 @_ZN5blink20DisplayLockUtilities32IsInUnlockedOrActivatableSubtreeERKNS_4NodeENS_27DisplayLockActivationReasonE(%"class.blink::Node"* dereferenceable(64) %37, i32 1) #22
  br i1 %38, label %39, label %101

39:                                               ; preds = %33, %26
  %40 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 145
  br i1 %42, label %101, label %43

43:                                               ; preds = %39
  %44 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %27, align 8
  %45 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %44, i64 124
  %46 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %45, align 8
  %47 = tail call %"class.blink::Node"* %46(%"class.blink::AXObject"* %0) #22
  %48 = icmp eq %"class.blink::Node"* %47, null
  br i1 %48, label %101, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %47, i64 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = and i32 %51, 12
  %53 = icmp eq i32 %52, 0
  %54 = bitcast %"class.blink::Node"* %47 to %"class.blink::Element"*
  br i1 %53, label %55, label %101

55:                                               ; preds = %49
  %56 = tail call zeroext i1 @_ZNK5blink4Node7IsInertEv(%"class.blink::Node"* nonnull %47) #22
  br i1 %56, label %101, label %57

57:                                               ; preds = %55
  %58 = load i32, i32* %50, align 8
  %59 = and i32 %58, 12
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %67

61:                                               ; preds = %57
  %62 = bitcast %"class.blink::Node"* %47 to i1 (%"class.blink::Element"*)***
  %63 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %62, align 8
  %64 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %63, i64 138
  %65 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %64, align 8
  %66 = tail call zeroext i1 %65(%"class.blink::Element"* nonnull %54) #22
  br i1 %66, label %101, label %67

67:                                               ; preds = %57, %61
  %68 = load i32, i32* %40, align 4
  %69 = icmp eq i32 %68, 128
  br i1 %69, label %101, label %70

70:                                               ; preds = %67
  %71 = load i32, i32* %50, align 8
  %72 = and i32 %71, 48
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %86

74:                                               ; preds = %70
  %75 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kAreaTagE, align 8
  %76 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %47, i64 1, i32 2
  %79 = bitcast %"class.blink::Member.318"* %78 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %80 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %80, i64 0, i32 3, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %77, i64 0, i32 3, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %82, %84
  br i1 %85, label %90, label %86

86:                                               ; preds = %70, %74
  %87 = tail call zeroext i1 @_ZNK5blink8AXObject39IsFocusableStyleUsingBestAvailableStateEv(%"class.blink::AXObject"* %0)
  br i1 %87, label %88, label %101

88:                                               ; preds = %86
  %89 = load i32, i32* %40, align 4
  br label %90

90:                                               ; preds = %88, %74
  %91 = phi i32 [ %89, %88 ], [ %68, %74 ]
  %92 = icmp eq i32 %91, 114
  br i1 %92, label %101, label %93

93:                                               ; preds = %90
  %94 = bitcast %"class.blink::Node"* %47 to i1 (%"class.blink::Element"*)***
  %95 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %94, align 8
  %96 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %95, i64 102
  %97 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %96, align 8
  %98 = tail call zeroext i1 %97(%"class.blink::Element"* nonnull %54) #22
  br i1 %98, label %101, label %99

99:                                               ; preds = %93
  %100 = tail call zeroext i1 @_ZNK5blink8AXObject21CanBeActiveDescendantEv(%"class.blink::AXObject"* %0)
  br label %101

101:                                              ; preds = %49, %33, %43, %19, %39, %99, %93, %90, %86, %67, %61, %55, %1
  %102 = phi i1 [ false, %1 ], [ false, %19 ], [ false, %33 ], [ true, %39 ], [ false, %55 ], [ false, %61 ], [ true, %67 ], [ false, %86 ], [ true, %90 ], [ true, %93 ], [ %100, %99 ], [ false, %49 ], [ false, %43 ]
  ret i1 %102
}

declare void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject10IsEditableEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %3, i64 124
  %5 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::Node"* %5(%"class.blink::AXObject"* %0) #22
  %7 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %8 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %7, align 8
  %9 = icmp ne %"class.blink::AXObjectCacheImpl"* %8, null
  %10 = icmp ne %"class.blink::Node"* %6, null
  %11 = and i1 %10, %9
  br i1 %11, label %12, label %32

12:                                               ; preds = %1
  %13 = tail call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %6) #22
  br i1 %13, label %32, label %14

14:                                               ; preds = %12
  %15 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %16 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %15, i64 124
  %17 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %16, align 8
  %18 = tail call %"class.blink::Node"* %17(%"class.blink::AXObject"* %0) #22
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %32, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 12
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %32

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Node"* %18 to %"class.blink::Element"*
  %27 = bitcast %"class.blink::Node"* %18 to i1 (%"class.blink::Element"*)***
  %28 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %28, i64 126
  %30 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::Element"* nonnull %26) #22
  ret i1 %31

32:                                               ; preds = %20, %14, %12, %1
  %33 = phi i1 [ false, %1 ], [ true, %12 ], [ false, %14 ], [ false, %20 ]
  ret i1 %33
}

declare void @_ZN2ui10AXNodeData16AddBoolAttributeEN2ax5mojom13BoolAttributeEb(%"struct.ui::AXNodeData"*, i32, i1 zeroext) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject16IsRichlyEditableEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %3, i64 124
  %5 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::Node"* %5(%"class.blink::AXObject"* %0) #22
  %7 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %8 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %7, align 8
  %9 = icmp ne %"class.blink::AXObjectCacheImpl"* %8, null
  %10 = icmp ne %"class.blink::Node"* %6, null
  %11 = and i1 %10, %9
  br i1 %11, label %12, label %14

12:                                               ; preds = %1
  %13 = tail call zeroext i1 @_ZN5blink22HasRichlyEditableStyleERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %6) #22
  br label %14

14:                                               ; preds = %12, %1
  %15 = phi i1 [ false, %1 ], [ %13, %12 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8AXObject24SerializeHTMLTagAndClassEPN2ui10AXNodeDataE(%"class.blink::AXObject"*, %"struct.ui::AXNodeData"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %11 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %11, i64 124
  %13 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %12, align 8
  %14 = tail call %"class.blink::Node"* %13(%"class.blink::AXObject"* %0) #22
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 12
  %20 = icmp eq i32 %19, 0
  %21 = bitcast %"class.blink::Node"* %14 to %"class.blink::Element"*
  br i1 %20, label %37, label %22

22:                                               ; preds = %16, %2
  %23 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %24 = load i32, i32* %23, align 4
  %25 = tail call zeroext i1 @_ZN2ui18IsPlatformDocumentEN2ax5mojom4RoleE(i32 %24) #22
  br i1 %25, label %26, label %212

26:                                               ; preds = %22
  %27 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #22
  %28 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 9, i8* %29, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i64 9, i1 false) #22
  %30 = getelementptr inbounds i8, i8* %27, i64 9
  store i8 0, i8* %30, align 1
  call void @_ZN2ui10AXNodeData18AddStringAttributeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.ui::AXNodeData"* %1, i32 14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #22
  %31 = load i8, i8* %29, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %35) #23
  br label %36

36:                                               ; preds = %26, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #22
  br label %212

37:                                               ; preds = %16
  %38 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #22
  %39 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #22
  %40 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #22
  %41 = bitcast %"class.blink::Node"* %14 to %"class.WTF::StringImpl"* (%"class.blink::Element"*)***
  %42 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)**, %"class.WTF::StringImpl"* (%"class.blink::Element"*)*** %41, align 8
  %43 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %42, i64 27
  %44 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %43, align 8
  %45 = tail call %"class.WTF::StringImpl"* %44(%"class.blink::Element"* nonnull %21) #22
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %46, align 8
  %47 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"* nonnull %8) #22
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %48, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.WTF::String"* nonnull %7, i32 0) #22
  %49 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = zext i8 %51 to i64
  %56 = select i1 %52, i64 %54, i64 %55
  %57 = icmp ugt i64 %56, 10000
  br i1 %57, label %58, label %68

58:                                               ; preds = %37
  %59 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #22
  call void @_ZN4base22TruncateUTF8ToByteSizeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEmPS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i64 10000, %"class.std::__1::basic_string"* nonnull %4) #22
  call void @_ZN2ui10AXNodeData18AddStringAttributeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.ui::AXNodeData"* %1, i32 14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #22
  %60 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %66) #23
  br label %67

67:                                               ; preds = %64, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #22
  br label %69

68:                                               ; preds = %37
  call void @_ZN2ui10AXNodeData18AddStringAttributeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.ui::AXNodeData"* %1, i32 14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #22
  br label %69

69:                                               ; preds = %67, %68
  %70 = load i8, i8* %50, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #23
  br label %75

75:                                               ; preds = %69, %72
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #22
  br label %91

91:                                               ; preds = %75, %87, %90
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #22
  br label %107

107:                                              ; preds = %91, %103, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #22
  %108 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 1, i32 3
  %109 = bitcast %"class.blink::Member.320"* %108 to %"class.blink::ElementData"**
  %110 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %109, align 8
  %111 = icmp eq %"class.blink::ElementData"* %110, null
  br i1 %111, label %116, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %110, i64 0, i32 2, i32 0, i32 0
  %114 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %113, align 8
  %115 = icmp eq %"class.blink::SpaceSplitString::Data"* %114, null
  br i1 %115, label %116, label %118

116:                                              ; preds = %112, %107
  %117 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %177

118:                                              ; preds = %112
  %119 = load i32, i32* %17, align 8
  %120 = and i32 %119, 48
  %121 = icmp eq i32 %120, 32
  %122 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kClassAttrE, align 8
  br i1 %121, label %123, label %125

123:                                              ; preds = %118
  %124 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %21, %"class.blink::QualifiedName"* dereferenceable(8) %122) #22
  br label %177

125:                                              ; preds = %118
  %126 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %110, i64 0, i32 0, i32 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = and i32 %127, 1
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %137, label %130

130:                                              ; preds = %125
  %131 = bitcast %"class.blink::ElementData"* %110 to %"class.blink::UniqueElementData"*
  %132 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %110, i64 1, i32 1
  %133 = bitcast %"class.blink::Member.354"* %132 to %"class.blink::Attribute"**
  %134 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %131, i64 0, i32 2, i32 0, i32 0, i32 2
  %136 = load i32, i32* %135, align 4
  br label %142

137:                                              ; preds = %125
  %138 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %110, i64 1
  %139 = bitcast %"class.blink::ElementData"* %138 to %"class.blink::Attribute"*
  %140 = lshr i32 %127, 1
  %141 = and i32 %140, 268435455
  br label %142

142:                                              ; preds = %137, %130
  %143 = phi %"class.blink::Attribute"* [ %139, %137 ], [ %134, %130 ]
  %144 = phi i32 [ %141, %137 ], [ %136, %130 ]
  %145 = zext i32 %144 to i64
  %146 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %143, i64 %145
  %147 = icmp eq i32 %144, 0
  br i1 %147, label %175, label %148

148:                                              ; preds = %142
  %149 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %122, i64 0, i32 0, i32 0
  %150 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %149, align 8
  %151 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %150, i64 0, i32 3, i32 0, i32 0, i32 0
  %152 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %150, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %153

153:                                              ; preds = %168, %148
  %154 = phi %"class.blink::Attribute"* [ %143, %148 ], [ %169, %168 ]
  %155 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %154, i64 0, i32 0, i32 0, i32 0
  %156 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %155, align 8
  %157 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %156, %150
  br i1 %157, label %171, label %158

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %156, i64 0, i32 3, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %160, %161
  br i1 %162, label %163, label %168

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %156, i64 0, i32 4, i32 0, i32 0, i32 0
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %165, %166
  br i1 %167, label %171, label %168

168:                                              ; preds = %163, %158
  %169 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %154, i64 1
  %170 = icmp eq %"class.blink::Attribute"* %169, %146
  br i1 %170, label %175, label %153

171:                                              ; preds = %163, %153
  %172 = icmp eq %"class.blink::Attribute"* %154, null
  br i1 %172, label %175, label %173

173:                                              ; preds = %171
  %174 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %154, i64 0, i32 1
  br label %177

175:                                              ; preds = %168, %171, %142
  %176 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %177

177:                                              ; preds = %116, %123, %173, %175
  %178 = phi %"class.WTF::AtomicString"* [ %124, %123 ], [ %117, %116 ], [ %176, %175 ], [ %174, %173 ]
  %179 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %178, i64 0, i32 0, i32 0, i32 0
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %212, label %182

182:                                              ; preds = %177
  %183 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %183) #22
  %184 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %178, i64 0, i32 0
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %9, %"class.WTF::String"* %184, i32 0) #22
  %185 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %186 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %185, i64 0, i32 1, i32 0
  %187 = load i8, i8* %186, align 1
  %188 = icmp slt i8 %187, 0
  %189 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %190 = load i64, i64* %189, align 8
  %191 = zext i8 %187 to i64
  %192 = select i1 %188, i64 %190, i64 %191
  %193 = icmp ugt i64 %192, 10000
  br i1 %193, label %194, label %204

194:                                              ; preds = %182
  %195 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %195) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %195, i8 0, i64 24, i1 false) #22
  call void @_ZN4base22TruncateUTF8ToByteSizeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEmPS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, i64 10000, %"class.std::__1::basic_string"* nonnull %3) #22
  call void @_ZN2ui10AXNodeData18AddStringAttributeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.ui::AXNodeData"* %1, i32 8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #22
  %196 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %196, i64 0, i32 1, i32 0
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %194
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load i8*, i8** %201, align 8
  call void @_ZdlPv(i8* %202) #23
  br label %203

203:                                              ; preds = %200, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %195) #22
  br label %205

204:                                              ; preds = %182
  call void @_ZN2ui10AXNodeData18AddStringAttributeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.ui::AXNodeData"* %1, i32 8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #22
  br label %205

205:                                              ; preds = %203, %204
  %206 = load i8, i8* %186, align 1
  %207 = icmp slt i8 %206, 0
  br i1 %207, label %208, label %211

208:                                              ; preds = %205
  %209 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load i8*, i8** %209, align 8
  call void @_ZdlPv(i8* %210) #23
  br label %211

211:                                              ; preds = %205, %208
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %183) #22
  br label %212

212:                                              ; preds = %177, %211, %22, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8AXObject24SerializeColorAttributesEPN2ui10AXNodeDataE(%"class.blink::AXObject"*, %"struct.ui::AXNodeData"*) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.blink::AXObject"* %0 to i32 (%"class.blink::AXObject"*)***
  %4 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %4, i64 61
  %6 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %5, align 8
  %7 = tail call i32 %6(%"class.blink::AXObject"* %0) #22
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 43, i32 %7) #22
  br label %10

10:                                               ; preds = %2, %9
  %11 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %3, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %11, i64 62
  %13 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::AXObject"* %0) #22
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %10
  tail call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 44, i32 %14) #22
  br label %17

17:                                               ; preds = %10, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8AXObject22SerializeLangAttributeEPN2ui10AXNodeDataE(%"class.blink::AXObject"*, %"struct.ui::AXNodeData"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %7 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %6, align 8
  %8 = icmp eq %"class.blink::AXObjectCacheImpl"* %7, null
  br i1 %8, label %47, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %10, align 8
  %12 = icmp eq %"class.blink::AXObject"* %11, null
  br i1 %12, label %13, label %20

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %15 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %15, i64 124
  %17 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %16, align 8
  %18 = tail call %"class.blink::Node"* %17(%"class.blink::AXObject"* %0) #22
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %34, label %24

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %11, i64 0, i32 14, i32 0, i32 0
  %22 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %21, align 8
  %23 = icmp eq %"class.blink::AXObjectCacheImpl"* %22, null
  br i1 %23, label %34, label %44

24:                                               ; preds = %13
  %25 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %14, align 8
  %26 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %25, i64 124
  %27 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %26, align 8
  %28 = tail call %"class.blink::Node"* %27(%"class.blink::AXObject"* %0) #22
  %29 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %6, align 8
  %30 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %29, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.blink::Document"*, %"class.blink::Document"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %31, i64 0, i32 0, i32 0
  %33 = icmp eq %"class.blink::Node"* %28, %32
  br i1 %33, label %44, label %34

34:                                               ; preds = %24, %20, %13
  %35 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* %0) #22
  %36 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2
  %37 = ptrtoint %"class.blink::AXObject"* %35 to i64
  %38 = bitcast %"class.blink::Member.3082"* %36 to i64*
  store atomic i64 %37, i64* %38 monotonic, align 8
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %34
  %42 = bitcast %"class.blink::AXObject"* %35 to i8*
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #22
  br label %44

44:                                               ; preds = %41, %34, %24, %20
  %45 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %10, align 8
  %46 = bitcast %"class.blink::AXObject"* %45 to %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)***
  br label %47

47:                                               ; preds = %2, %44
  %48 = phi %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)*** [ %46, %44 ], [ null, %2 ]
  %49 = phi %"class.blink::AXObject"* [ %45, %44 ], [ null, %2 ]
  %50 = bitcast %"class.blink::AXObject"* %0 to %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)***
  %51 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)**, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)*** %50, align 8
  %52 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)** %51, i64 129
  %53 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)** %52, align 8
  %54 = tail call %"class.WTF::StringImpl"* %53(%"class.blink::AXObject"* %0) #22
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %167, label %56

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %56
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %56
  %69 = phi i32 [ %67, %66 ], [ %65, %56 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #22
  br i1 %59, label %167, label %73

72:                                               ; preds = %68
  br i1 %59, label %167, label %73

73:                                               ; preds = %71, %72
  %74 = icmp eq %"class.blink::AXObject"* %49, null
  br i1 %74, label %115, label %75

75:                                               ; preds = %73
  %76 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)**, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)*** %48, align 8
  %77 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)** %76, i64 129
  %78 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)** %77, align 8
  %79 = tail call %"class.WTF::StringImpl"* %78(%"class.blink::AXObject"* nonnull %49) #22
  %80 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)**, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)*** %50, align 8
  %81 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)** %80, i64 129
  %82 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)** %81, align 8
  %83 = tail call %"class.WTF::StringImpl"* %82(%"class.blink::AXObject"* %0) #22
  %84 = icmp ne %"class.WTF::StringImpl"* %79, %83
  %85 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %75
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #22
  br label %99

99:                                               ; preds = %75, %95, %98
  %100 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %99
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %110

108:                                              ; preds = %101
  %109 = add i32 %107, -1
  store i32 %109, i32* %106, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %107, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #22
  br i1 %84, label %115, label %167

114:                                              ; preds = %110, %99
  br i1 %84, label %115, label %167

115:                                              ; preds = %73, %113, %114
  %116 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #22
  %117 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #22
  %118 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)**, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)*** %50, align 8
  %119 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)** %118, i64 129
  %120 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)** %119, align 8
  %121 = tail call %"class.WTF::StringImpl"* %120(%"class.blink::AXObject"* %0) #22
  %122 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %121, %"class.WTF::StringImpl"** %122, align 8
  %123 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* nonnull %123, i32 0) #22
  %124 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %126 to i64
  %131 = select i1 %127, i64 %129, i64 %130
  %132 = icmp ugt i64 %131, 10000
  br i1 %132, label %133, label %143

133:                                              ; preds = %115
  %134 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %134, i8 0, i64 24, i1 false) #22
  call void @_ZN4base22TruncateUTF8ToByteSizeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEmPS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i64 10000, %"class.std::__1::basic_string"* nonnull %3) #22
  call void @_ZN2ui10AXNodeData18AddStringAttributeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.ui::AXNodeData"* %1, i32 20, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #22
  %135 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load i8*, i8** %140, align 8
  call void @_ZdlPv(i8* %141) #23
  br label %142

142:                                              ; preds = %139, %133
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134) #22
  br label %144

143:                                              ; preds = %115
  call void @_ZN2ui10AXNodeData18AddStringAttributeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.ui::AXNodeData"* %1, i32 20, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #22
  br label %144

144:                                              ; preds = %142, %143
  %145 = load i8, i8* %125, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %144
  %148 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  call void @_ZdlPv(i8* %149) #23
  br label %150

150:                                              ; preds = %144, %147
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %166, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %159 = load i32, i32* %158, align 4
  br i1 %157, label %160, label %162

160:                                              ; preds = %153
  %161 = add i32 %159, -1
  store i32 %161, i32* %158, align 4
  br label %162

162:                                              ; preds = %160, %153
  %163 = phi i32 [ %161, %160 ], [ %159, %153 ]
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %162
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %151) #22
  br label %166

166:                                              ; preds = %150, %162, %165
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #22
  br label %167

167:                                              ; preds = %47, %113, %71, %72, %114, %166
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject22AccessibilityIsIgnoredEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true)
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 1
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8AXObject28SerializeUnignoredAttributesEPN2ui10AXNodeDataENS1_6AXModeE(%"class.blink::AXObject"*, %"struct.ui::AXNodeData"*, i32) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.absl::optional.2370", align 8
  %7 = alloca %"class.ui::AXTreeID", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::KURL", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.blink::KURL", align 8
  %13 = alloca %"class.blink::AXSelection", align 8
  %14 = alloca %"class.blink::AXPosition", align 8
  %15 = alloca %"class.blink::AXPosition", align 8
  %16 = alloca %"class.blink::AXPosition", align 8
  %17 = alloca %"class.blink::AXPosition", align 8
  %18 = alloca %"class.blink::AXPosition", align 8
  %19 = alloca %"class.blink::AXPosition", align 8
  %20 = bitcast %"class.blink::AXObject"* %0 to i32 (%"class.blink::AXObject"*)***
  %21 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %20, align 8
  %22 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %21, i64 34
  %23 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %22, align 8
  %24 = tail call i32 %23(%"class.blink::AXObject"* %0) #22
  switch i32 %24, label %28 [
    i32 2, label %25
    i32 1, label %26
  ]

25:                                               ; preds = %3
  br label %26

26:                                               ; preds = %3, %25
  %27 = phi i32 [ 5, %25 ], [ 2, %3 ]
  tail call void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %1, i32 %27) #22
  br label %28

28:                                               ; preds = %26, %3
  %29 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %20, align 8
  %30 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %29, i64 108
  %31 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %30, align 8
  %32 = tail call i32 %31(%"class.blink::AXObject"* %0) #22
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %28
  %35 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %20, align 8
  %36 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %35, i64 108
  %37 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %36, align 8
  %38 = tail call i32 %37(%"class.blink::AXObject"* %0) #22
  br label %43

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 138
  br i1 %42, label %43, label %45

43:                                               ; preds = %39, %34
  %44 = phi i32 [ %38, %34 ], [ 2, %39 ]
  tail call void @_ZN2ui10AXNodeData11SetHasPopupEN2ax5mojom8HasPopupE(%"struct.ui::AXNodeData"* %1, i32 %44) #22
  br label %45

45:                                               ; preds = %43, %39
  %46 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %47 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %46, align 8
  %48 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %47, i64 32
  %49 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %48, align 8
  %50 = tail call zeroext i1 %49(%"class.blink::AXObject"* %0) #22
  br i1 %50, label %51, label %52

51:                                               ; preds = %45
  tail call void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %1, i32 1) #22
  br label %52

52:                                               ; preds = %51, %45
  %53 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %46, align 8
  %54 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %53, i64 25
  %55 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %54, align 8
  %56 = tail call zeroext i1 %55(%"class.blink::AXObject"* %0) #22
  br i1 %56, label %57, label %58

57:                                               ; preds = %52
  tail call void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %1, i32 3) #22
  br label %58

58:                                               ; preds = %57, %52
  %59 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %20, align 8
  %60 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %59, i64 36
  %61 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %60, align 8
  %62 = tail call i32 %61(%"class.blink::AXObject"* %0) #22
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %70, label %64

64:                                               ; preds = %58
  %65 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %20, align 8
  %66 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %65, i64 36
  %67 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %66, align 8
  %68 = tail call i32 %67(%"class.blink::AXObject"* %0) #22
  %69 = icmp eq i32 %68, 2
  tail call void @_ZN2ui10AXNodeData16AddBoolAttributeEN2ax5mojom13BoolAttributeEb(%"struct.ui::AXNodeData"* %1, i32 16, i1 zeroext %69) #22
  br label %70

70:                                               ; preds = %58, %64
  %71 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %46, align 8
  %72 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %71, i64 37
  %73 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %72, align 8
  %74 = tail call zeroext i1 %73(%"class.blink::AXObject"* %0) #22
  br i1 %74, label %75, label %76

75:                                               ; preds = %70
  tail call void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %1, i32 8) #22
  br label %76

76:                                               ; preds = %75, %70
  %77 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %46, align 8
  %78 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %77, i64 39
  %79 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %78, align 8
  %80 = tail call zeroext i1 %79(%"class.blink::AXObject"* %0) #22
  br i1 %80, label %81, label %82

81:                                               ; preds = %76
  tail call void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %1, i32 11) #22
  br label %82

82:                                               ; preds = %81, %76
  %83 = tail call zeroext i1 @_ZNK5blink8AXObject11IsMultilineEv(%"class.blink::AXObject"* %0)
  br i1 %83, label %84, label %85

84:                                               ; preds = %82
  tail call void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %1, i32 12) #22
  br label %85

85:                                               ; preds = %84, %82
  %86 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %46, align 8
  %87 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %86, i64 42
  %88 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %87, align 8
  %89 = tail call zeroext i1 %88(%"class.blink::AXObject"* %0) #22
  br i1 %89, label %90, label %91

90:                                               ; preds = %85
  tail call void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %1, i32 13) #22
  br label %91

91:                                               ; preds = %90, %85
  %92 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %93 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %92, align 8
  %94 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %93, i64 124
  %95 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %94, align 8
  %96 = tail call %"class.blink::Node"* %95(%"class.blink::AXObject"* %0) #22
  %97 = icmp eq %"class.blink::Node"* %96, null
  br i1 %97, label %129, label %98

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %96, i64 0, i32 1
  %100 = load i32, i32* %99, align 8
  %101 = and i32 %100, 48
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %129

103:                                              ; preds = %98
  %104 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %105 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %96, i64 1, i32 2
  %108 = bitcast %"class.blink::Member.318"* %107 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %109 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %109, i64 0, i32 3, i32 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %106, i64 0, i32 3, i32 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %111, %113
  br i1 %114, label %115, label %129

115:                                              ; preds = %103
  %116 = bitcast %"class.blink::Node"* %96 to %"class.blink::HTMLFormControlElement"*
  %117 = bitcast %"class.blink::Node"* %96 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %118 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %117, align 8
  %119 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %118, i64 171
  %120 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %119, align 8
  %121 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %120(%"class.blink::HTMLFormControlElement"* nonnull %116) #22
  %122 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names9kPasswordE, align 8
  %123 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %121, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %122, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %124, %126
  br i1 %127, label %128, label %129

128:                                              ; preds = %115
  tail call void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %1, i32 14) #22
  br label %129

129:                                              ; preds = %91, %98, %103, %128, %115
  %130 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %46, align 8
  %131 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %130, i64 44
  %132 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %131, align 8
  %133 = tail call zeroext i1 %132(%"class.blink::AXObject"* %0) #22
  br i1 %133, label %134, label %135

134:                                              ; preds = %129
  tail call void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %1, i32 15) #22
  br label %135

135:                                              ; preds = %134, %129
  %136 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %20, align 8
  %137 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %136, i64 45
  %138 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %137, align 8
  %139 = tail call i32 %138(%"class.blink::AXObject"* %0) #22
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %151, label %141

141:                                              ; preds = %135
  %142 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %20, align 8
  %143 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %142, i64 45
  %144 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %143, align 8
  %145 = tail call i32 %144(%"class.blink::AXObject"* %0) #22
  %146 = icmp eq i32 %145, 2
  tail call void @_ZN2ui10AXNodeData16AddBoolAttributeEN2ax5mojom13BoolAttributeEb(%"struct.ui::AXNodeData"* %1, i32 13, i1 zeroext %146) #22
  %147 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %46, align 8
  %148 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %147, i64 46
  %149 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %148, align 8
  %150 = tail call zeroext i1 %149(%"class.blink::AXObject"* %0) #22
  tail call void @_ZN2ui10AXNodeData16AddBoolAttributeEN2ax5mojom13BoolAttributeEb(%"struct.ui::AXNodeData"* %1, i32 14, i1 zeroext %150) #22
  br label %151

151:                                              ; preds = %135, %141
  %152 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %46, align 8
  %153 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %152, i64 48
  %154 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %153, align 8
  %155 = tail call zeroext i1 %154(%"class.blink::AXObject"* %0) #22
  br i1 %155, label %156, label %157

156:                                              ; preds = %151
  tail call void @_ZN2ui10AXNodeData16AddBoolAttributeEN2ax5mojom13BoolAttributeEb(%"struct.ui::AXNodeData"* %1, i32 12, i1 zeroext true) #22
  br label %157

157:                                              ; preds = %156, %151
  %158 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %46, align 8
  %159 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %158, i64 50
  %160 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %159, align 8
  %161 = tail call zeroext i1 %160(%"class.blink::AXObject"* %0) #22
  br i1 %161, label %162, label %163

162:                                              ; preds = %157
  tail call void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %1, i32 18) #22
  br label %163

163:                                              ; preds = %162, %157
  %164 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %20, align 8
  %165 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %164, i64 73
  %166 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %165, align 8
  %167 = tail call i32 %166(%"class.blink::AXObject"* %0) #22
  %168 = icmp eq i32 %167, 1
  br i1 %168, label %175, label %169

169:                                              ; preds = %163
  %170 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %20, align 8
  %171 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %170, i64 73
  %172 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %171, align 8
  %173 = tail call i32 %172(%"class.blink::AXObject"* %0) #22
  %174 = icmp eq i32 %173, 2
  br i1 %174, label %175, label %177

175:                                              ; preds = %169, %163
  %176 = phi i32 [ 17, %163 ], [ 7, %169 ]
  tail call void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %1, i32 %176) #22
  br label %177

177:                                              ; preds = %175, %169
  %178 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %20, align 8
  %179 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %178, i64 75
  %180 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %179, align 8
  %181 = tail call i32 %180(%"class.blink::AXObject"* %0) #22
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %188, label %183

183:                                              ; preds = %177
  %184 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %20, align 8
  %185 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %184, i64 75
  %186 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %185, align 8
  %187 = tail call i32 %186(%"class.blink::AXObject"* %0) #22
  tail call void @_ZN2ui10AXNodeData12SetTextAlignEN2ax5mojom9TextAlignE(%"struct.ui::AXNodeData"* %1, i32 %187) #22
  br label %188

188:                                              ; preds = %177, %183
  %189 = bitcast %"class.blink::AXObject"* %0 to float (%"class.blink::AXObject"*)***
  %190 = load float (%"class.blink::AXObject"*)**, float (%"class.blink::AXObject"*)*** %189, align 8
  %191 = getelementptr inbounds float (%"class.blink::AXObject"*)*, float (%"class.blink::AXObject"*)** %190, i64 77
  %192 = load float (%"class.blink::AXObject"*)*, float (%"class.blink::AXObject"*)** %191, align 8
  %193 = tail call float %192(%"class.blink::AXObject"* %0) #22
  %194 = fcmp une float %193, 0.000000e+00
  br i1 %194, label %195, label %200

195:                                              ; preds = %188
  %196 = load float (%"class.blink::AXObject"*)**, float (%"class.blink::AXObject"*)*** %189, align 8
  %197 = getelementptr inbounds float (%"class.blink::AXObject"*)*, float (%"class.blink::AXObject"*)** %196, i64 77
  %198 = load float (%"class.blink::AXObject"*)*, float (%"class.blink::AXObject"*)** %197, align 8
  %199 = tail call float %198(%"class.blink::AXObject"* %0) #22
  tail call void @_ZN2ui10AXNodeData17AddFloatAttributeEN2ax5mojom14FloatAttributeEf(%"struct.ui::AXNodeData"* %1, i32 7, float %199) #22
  br label %200

200:                                              ; preds = %195, %188
  %201 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %92, align 8
  %202 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %201, i64 124
  %203 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %202, align 8
  %204 = tail call %"class.blink::Node"* %203(%"class.blink::AXObject"* %0) #22
  %205 = icmp eq %"class.blink::Node"* %204, null
  br i1 %205, label %248, label %206

206:                                              ; preds = %200
  %207 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %204, i64 0, i32 1
  %208 = load i32, i32* %207, align 8
  %209 = and i32 %208, 12
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %248

211:                                              ; preds = %206
  %212 = bitcast %"class.blink::Node"* %204 to i1 (%"class.blink::Node"*)***
  %213 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %212, align 8
  %214 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %213, i64 42
  %215 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %214, align 8
  %216 = tail call zeroext i1 %215(%"class.blink::Node"* nonnull %204) #22
  br i1 %216, label %217, label %248

217:                                              ; preds = %211
  %218 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %204, i64 1, i32 5
  %219 = bitcast %"class.blink::Member.318"* %218 to %"class.blink::Frame"**
  %220 = load %"class.blink::Frame"*, %"class.blink::Frame"** %219, align 8
  %221 = icmp eq %"class.blink::Frame"* %220, null
  br i1 %221, label %248, label %222

222:                                              ; preds = %217
  %223 = getelementptr inbounds %"class.absl::optional.2370", %"class.absl::optional.2370"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %223) #22
  %224 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %220, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %223, i8* align 8 %224, i64 24, i1 false)
  %225 = load i8, i8* %223, align 8, !range !2
  %226 = icmp eq i8 %225, 0
  br i1 %226, label %247, label %227

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %229 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %228, align 8
  %230 = icmp eq %"class.blink::AXObjectCacheImpl"* %229, null
  br i1 %230, label %247, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 4
  %233 = load i8, i8* %232, align 8, !range !2
  %234 = icmp eq i8 %233, 0
  br i1 %234, label %240, label %235

235:                                              ; preds = %231
  %236 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %237 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %236, align 8
  %238 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %237, i64 160
  %239 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %238, align 8
  tail call void %239(%"class.blink::AXObject"* %0) #22
  br label %240

240:                                              ; preds = %231, %235
  %241 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %242 = load i32, i32* %241, align 4
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %247

244:                                              ; preds = %240
  %245 = bitcast %"class.ui::AXTreeID"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %245) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %245, i8 -86, i64 32, i1 false)
  %246 = getelementptr inbounds %"class.absl::optional.2370", %"class.absl::optional.2370"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN2ui8AXTreeID9FromTokenERKN4base16UnguessableTokenE(%"class.ui::AXTreeID"* nonnull sret %7, %"class.base::UnguessableToken"* dereferenceable(16) %246) #22
  call void @_ZN2ui10AXNodeData14AddChildTreeIdERKNS_8AXTreeIDE(%"struct.ui::AXNodeData"* %1, %"class.ui::AXTreeID"* nonnull dereferenceable(32) %7) #22
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %245) #22
  br label %247

247:                                              ; preds = %222, %240, %244, %227
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %223) #22
  br label %248

248:                                              ; preds = %211, %206, %200, %247, %217
  %249 = and i32 %2, 8
  %250 = icmp ne i32 %249, 0
  %251 = and i32 %2, 72
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %304, label %253

253:                                              ; preds = %248
  %254 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %92, align 8
  %255 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %254, i64 124
  %256 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %255, align 8
  %257 = call %"class.blink::Node"* %256(%"class.blink::AXObject"* %0) #22
  %258 = icmp eq %"class.blink::Node"* %257, null
  br i1 %258, label %263, label %259

259:                                              ; preds = %253
  %260 = call i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"* nonnull %257) #22
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %263, label %262

262:                                              ; preds = %259
  call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 60, i32 %260) #22
  br label %263

263:                                              ; preds = %253, %259, %262
  %264 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %265 = load i32, i32* %264, align 4
  %266 = call zeroext i1 @_ZN2ui9IsHeadingEN2ax5mojom4RoleE(i32 %265) #22
  br i1 %266, label %267, label %278

267:                                              ; preds = %263
  %268 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %20, align 8
  %269 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %268, i64 69
  %270 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %269, align 8
  %271 = call i32 %270(%"class.blink::AXObject"* %0) #22
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %278, label %273

273:                                              ; preds = %267
  %274 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %20, align 8
  %275 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %274, i64 69
  %276 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %275, align 8
  %277 = call i32 %276(%"class.blink::AXObject"* %0) #22
  call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 28, i32 %277) #22
  br label %278

278:                                              ; preds = %267, %273, %263
  %279 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %20, align 8
  %280 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %279, i64 114
  %281 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %280, align 8
  %282 = call i32 %281(%"class.blink::AXObject"* %0) #22
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %289, label %284

284:                                              ; preds = %278
  %285 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %20, align 8
  %286 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %285, i64 114
  %287 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %286, align 8
  %288 = call i32 %287(%"class.blink::AXObject"* %0) #22
  call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 39, i32 %288) #22
  br label %289

289:                                              ; preds = %284, %278
  %290 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %20, align 8
  %291 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %290, i64 113
  %292 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %291, align 8
  %293 = call i32 %292(%"class.blink::AXObject"* %0) #22
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %300, label %295

295:                                              ; preds = %289
  %296 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %20, align 8
  %297 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %296, i64 113
  %298 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %297, align 8
  %299 = call i32 %298(%"class.blink::AXObject"* %0) #22
  call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 40, i32 %299) #22
  br label %300

300:                                              ; preds = %295, %289
  call void @_ZN5blink8AXObject24SerializeTableAttributesEPN2ui10AXNodeDataE(%"class.blink::AXObject"* %0, %"struct.ui::AXNodeData"* %1)
  br i1 %250, label %301, label %304

301:                                              ; preds = %300
  %302 = call zeroext i1 @_ZNK5blink8AXObject16HasAriaAttributeEb(%"class.blink::AXObject"* %0, i1 zeroext false)
  br i1 %302, label %303, label %304

303:                                              ; preds = %301
  call void @_ZN2ui10AXNodeData16AddBoolAttributeEN2ax5mojom13BoolAttributeEb(%"struct.ui::AXNodeData"* %1, i32 19, i1 zeroext true) #22
  br label %304

304:                                              ; preds = %248, %301, %303, %300
  %305 = and i32 %2, 64
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %838

307:                                              ; preds = %304
  %308 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %308) #22
  %309 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %309) #22
  %310 = bitcast %"class.blink::AXObject"* %0 to %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)***
  %311 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)**, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)*** %310, align 8
  %312 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)** %311, i64 99
  %313 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)** %312, align 8
  %314 = call %"class.WTF::StringImpl"* %313(%"class.blink::AXObject"* %0) #22
  %315 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %314, %"class.WTF::StringImpl"** %315, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %8, %"class.WTF::String"* nonnull %9, i32 0) #22
  %316 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %317 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %316, i64 0, i32 1, i32 0
  %318 = load i8, i8* %317, align 1
  %319 = icmp slt i8 %318, 0
  %320 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %321 = load i64, i64* %320, align 8
  %322 = zext i8 %318 to i64
  %323 = select i1 %319, i64 %321, i64 %322
  %324 = icmp ugt i64 %323, 10000
  br i1 %324, label %325, label %335

325:                                              ; preds = %307
  %326 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %326) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %326, i8 0, i64 24, i1 false) #22
  call void @_ZN4base22TruncateUTF8ToByteSizeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEmPS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, i64 10000, %"class.std::__1::basic_string"* nonnull %5) #22
  call void @_ZN2ui10AXNodeData18AddStringAttributeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.ui::AXNodeData"* %1, i32 29, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #22
  %327 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %328 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %327, i64 0, i32 1, i32 0
  %329 = load i8, i8* %328, align 1
  %330 = icmp slt i8 %329, 0
  br i1 %330, label %331, label %334

331:                                              ; preds = %325
  %332 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load i8*, i8** %332, align 8
  call void @_ZdlPv(i8* %333) #23
  br label %334

334:                                              ; preds = %331, %325
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %326) #22
  br label %336

335:                                              ; preds = %307
  call void @_ZN2ui10AXNodeData18AddStringAttributeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.ui::AXNodeData"* %1, i32 29, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #22
  br label %336

336:                                              ; preds = %334, %335
  %337 = load i8, i8* %317, align 1
  %338 = icmp slt i8 %337, 0
  br i1 %338, label %339, label %342

339:                                              ; preds = %336
  %340 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %341 = load i8*, i8** %340, align 8
  call void @_ZdlPv(i8* %341) #23
  br label %342

342:                                              ; preds = %336, %339
  %343 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %315, align 8
  %344 = icmp eq %"class.WTF::StringImpl"* %343, null
  br i1 %344, label %358, label %345

345:                                              ; preds = %342
  %346 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %343, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %347 = load atomic i32, i32* %346 monotonic, align 4
  %348 = and i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %343, i64 0, i32 0
  %351 = load i32, i32* %350, align 4
  br i1 %349, label %352, label %354

352:                                              ; preds = %345
  %353 = add i32 %351, -1
  store i32 %353, i32* %350, align 4
  br label %354

354:                                              ; preds = %352, %345
  %355 = phi i32 [ %353, %352 ], [ %351, %345 ]
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %358

357:                                              ; preds = %354
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %343) #22
  br label %358

358:                                              ; preds = %342, %354, %357
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %309) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %308) #22
  %359 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %20, align 8
  %360 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %359, i64 100
  %361 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %360, align 8
  %362 = call i32 %361(%"class.blink::AXObject"* %0) #22
  switch i32 %362, label %375 [
    i32 1, label %363
    i32 2, label %364
    i32 0, label %365
  ]

363:                                              ; preds = %358
  call void @_ZN2ui10AXNodeData14SetRestrictionEN2ax5mojom11RestrictionE(%"struct.ui::AXNodeData"* %1, i32 1) #22
  br label %375

364:                                              ; preds = %358
  call void @_ZN2ui10AXNodeData14SetRestrictionEN2ax5mojom11RestrictionE(%"struct.ui::AXNodeData"* %1, i32 2) #22
  br label %375

365:                                              ; preds = %358
  %366 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %367 = load i32, i32* %366, align 4
  switch i32 %367, label %375 [
    i32 18, label %368
    i32 28, label %368
    i32 29, label %368
    i32 103, label %368
    i32 151, label %368
    i32 154, label %368
    i32 156, label %368
    i32 157, label %368
    i32 158, label %368
    i32 171, label %368
    i32 172, label %368
  ]

368:                                              ; preds = %365, %365, %365, %365, %365, %365, %365, %365, %365, %365, %365
  %369 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %20, align 8
  %370 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %369, i64 100
  %371 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %370, align 8
  %372 = call i32 %371(%"class.blink::AXObject"* %0) #22
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %375

374:                                              ; preds = %368
  call void @_ZN2ui10AXNodeData9AddActionEN2ax5mojom6ActionE(%"struct.ui::AXNodeData"* %1, i32 30) #22
  br label %375

375:                                              ; preds = %365, %368, %374, %358, %364, %363
  %376 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %376) #22
  %377 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::KURL"*, %"class.blink::AXObject"*)***
  %378 = load void (%"class.blink::KURL"*, %"class.blink::AXObject"*)**, void (%"class.blink::KURL"*, %"class.blink::AXObject"*)*** %377, align 8
  %379 = getelementptr inbounds void (%"class.blink::KURL"*, %"class.blink::AXObject"*)*, void (%"class.blink::KURL"*, %"class.blink::AXObject"*)** %378, i64 81
  %380 = load void (%"class.blink::KURL"*, %"class.blink::AXObject"*)*, void (%"class.blink::KURL"*, %"class.blink::AXObject"*)** %379, align 8
  call void %380(%"class.blink::KURL"* nonnull sret %10, %"class.blink::AXObject"* %0) #22
  %381 = call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* nonnull %10) #22
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %10) #22
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %376) #22
  br i1 %381, label %416, label %382

382:                                              ; preds = %375
  %383 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %383) #22
  %384 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %384) #22
  %385 = load void (%"class.blink::KURL"*, %"class.blink::AXObject"*)**, void (%"class.blink::KURL"*, %"class.blink::AXObject"*)*** %377, align 8
  %386 = getelementptr inbounds void (%"class.blink::KURL"*, %"class.blink::AXObject"*)*, void (%"class.blink::KURL"*, %"class.blink::AXObject"*)** %385, i64 81
  %387 = load void (%"class.blink::KURL"*, %"class.blink::AXObject"*)*, void (%"class.blink::KURL"*, %"class.blink::AXObject"*)** %386, align 8
  call void %387(%"class.blink::KURL"* nonnull sret %12, %"class.blink::AXObject"* %0) #22
  %388 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %12, i64 0, i32 4
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %11, %"class.WTF::String"* %388, i32 0) #22
  %389 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %390 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %389, i64 0, i32 1, i32 0
  %391 = load i8, i8* %390, align 1
  %392 = icmp slt i8 %391, 0
  %393 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %394 = load i64, i64* %393, align 8
  %395 = zext i8 %391 to i64
  %396 = select i1 %392, i64 %394, i64 %395
  %397 = icmp ugt i64 %396, 10000
  br i1 %397, label %398, label %408

398:                                              ; preds = %382
  %399 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %399) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %399, i8 0, i64 24, i1 false) #22
  call void @_ZN4base22TruncateUTF8ToByteSizeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEmPS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %11, i64 10000, %"class.std::__1::basic_string"* nonnull %4) #22
  call void @_ZN2ui10AXNodeData18AddStringAttributeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.ui::AXNodeData"* %1, i32 28, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #22
  %400 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %401 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %400, i64 0, i32 1, i32 0
  %402 = load i8, i8* %401, align 1
  %403 = icmp slt i8 %402, 0
  br i1 %403, label %404, label %407

404:                                              ; preds = %398
  %405 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %406 = load i8*, i8** %405, align 8
  call void @_ZdlPv(i8* %406) #23
  br label %407

407:                                              ; preds = %404, %398
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %399) #22
  br label %409

408:                                              ; preds = %382
  call void @_ZN2ui10AXNodeData18AddStringAttributeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.ui::AXNodeData"* %1, i32 28, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11) #22
  br label %409

409:                                              ; preds = %407, %408
  %410 = load i8, i8* %390, align 1
  %411 = icmp slt i8 %410, 0
  br i1 %411, label %412, label %415

412:                                              ; preds = %409
  %413 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %414 = load i8*, i8** %413, align 8
  call void @_ZdlPv(i8* %414) #23
  br label %415

415:                                              ; preds = %409, %412
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %12) #22
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %384) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %383) #22
  br label %416

416:                                              ; preds = %375, %415
  br i1 %250, label %417, label %422

417:                                              ; preds = %416
  %418 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*, %"struct.ui::AXNodeData"*)***
  %419 = load void (%"class.blink::AXObject"*, %"struct.ui::AXNodeData"*)**, void (%"class.blink::AXObject"*, %"struct.ui::AXNodeData"*)*** %418, align 8
  %420 = getelementptr inbounds void (%"class.blink::AXObject"*, %"struct.ui::AXNodeData"*)*, void (%"class.blink::AXObject"*, %"struct.ui::AXNodeData"*)** %419, i64 161
  %421 = load void (%"class.blink::AXObject"*, %"struct.ui::AXNodeData"*)*, void (%"class.blink::AXObject"*, %"struct.ui::AXNodeData"*)** %420, align 8
  call void %421(%"class.blink::AXObject"* %0, %"struct.ui::AXNodeData"* %1) #22
  call void @_ZN5blink8AXObject24SerializeStyleAttributesEPN2ui10AXNodeDataE(%"class.blink::AXObject"* %0, %"struct.ui::AXNodeData"* %1)
  br label %422

422:                                              ; preds = %417, %416
  call void @_ZN5blink8AXObject25SerializeSparseAttributesEPN2ui10AXNodeDataE(%"class.blink::AXObject"* %0, %"struct.ui::AXNodeData"* %1)
  %423 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %92, align 8
  %424 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %423, i64 124
  %425 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %424, align 8
  %426 = call %"class.blink::Node"* %425(%"class.blink::AXObject"* %0) #22
  %427 = icmp eq %"class.blink::Node"* %426, null
  br i1 %427, label %815, label %428

428:                                              ; preds = %422
  %429 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %426, i64 0, i32 1
  %430 = load i32, i32* %429, align 8
  %431 = and i32 %430, 12
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %433, label %815

433:                                              ; preds = %428
  %434 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %92, align 8
  %435 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %434, i64 124
  %436 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %435, align 8
  %437 = call %"class.blink::Node"* %436(%"class.blink::AXObject"* %0) #22
  %438 = icmp eq %"class.blink::Node"* %437, null
  br i1 %438, label %815, label %439

439:                                              ; preds = %433
  %440 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %437, i64 0, i32 1
  %441 = load i32, i32* %440, align 8
  %442 = and i32 %441, 12
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %444, label %815

444:                                              ; preds = %439
  %445 = bitcast %"class.blink::Node"* %437 to %"class.blink::Element"*
  %446 = bitcast %"class.blink::Node"* %437 to i1 (%"class.blink::Element"*)***
  %447 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %446, align 8
  %448 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %447, i64 126
  %449 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %448, align 8
  %450 = call zeroext i1 %449(%"class.blink::Element"* nonnull %445) #22
  br i1 %450, label %451, label %815

451:                                              ; preds = %444
  %452 = bitcast %"class.blink::AXSelection"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %452) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %452, i8 -86, i64 48, i1 false)
  %453 = bitcast %"class.blink::Node"* %426 to %"class.blink::TextControlElement"*
  call void @_ZN5blink11AXSelection20FromCurrentSelectionERKNS_18TextControlElementE(%"class.blink::AXSelection"* nonnull sret %13, %"class.blink::TextControlElement"* nonnull dereferenceable(248) %453) #22
  %454 = bitcast %"class.blink::AXPosition"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %454) #22
  %455 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %14, i64 0, i32 0, i32 0
  %456 = bitcast %"class.blink::AXSelection"* %13 to i64*
  %457 = load i64, i64* %456, align 8
  %458 = bitcast %"class.blink::AXPosition"* %14 to i64*
  store i64 %457, i64* %458, align 8
  %459 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %14, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %459, align 8
  switch i64 %457, label %460 [
    i64 0, label %486
    i64 -1, label %486
  ]

460:                                              ; preds = %451
  %461 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %462 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %461, i64 0, i32 1
  %463 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %462) #22
  %464 = icmp eq i8* %463, null
  br i1 %464, label %465, label %467, !prof !3

465:                                              ; preds = %460
  %466 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %462, i8* %466) #22
  br label %467

467:                                              ; preds = %465, %460
  %468 = phi i8* [ %466, %465 ], [ %463, %460 ]
  %469 = bitcast i8* %468 to %"class.blink::ThreadState"**
  %470 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %469, align 8
  %471 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %470, i64 0, i32 4, i32 0, i32 0, i32 0
  %472 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %471, align 8
  %473 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %472, i64 0, i32 0, i32 0
  %474 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %473, align 8
  %475 = icmp eq %"class.blink::PersistentNode"* %474, null
  br i1 %475, label %476, label %479, !prof !3

476:                                              ; preds = %467
  %477 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %472, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %477) #22
  %478 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %473, align 8
  br label %479

479:                                              ; preds = %476, %467
  %480 = phi %"class.blink::PersistentNode"* [ %478, %476 ], [ %474, %467 ]
  %481 = bitcast %"class.blink::PersistentNode"* %480 to i64*
  %482 = load i64, i64* %481, align 8
  %483 = bitcast %"class.blink::PersistentRegion"* %472 to i64*
  store i64 %482, i64* %483, align 8
  %484 = bitcast %"class.blink::PersistentNode"* %480 to %"class.blink::PersistentBase.3354"**
  store %"class.blink::PersistentBase.3354"* %455, %"class.blink::PersistentBase.3354"** %484, align 8
  %485 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %480, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %485, align 8
  store %"class.blink::PersistentNode"* %480, %"class.blink::PersistentNode"** %459, align 8
  br label %486

486:                                              ; preds = %451, %451, %479
  %487 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %14, i64 0, i32 1
  %488 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %13, i64 0, i32 0, i32 1
  %489 = bitcast i32* %488 to i64*
  %490 = bitcast i32* %487 to i64*
  %491 = load i64, i64* %489, align 8
  store i64 %491, i64* %490, align 8
  %492 = call zeroext i1 @_ZNK5blink10AXPosition14IsTextPositionEv(%"class.blink::AXPosition"* nonnull %14) #22
  br i1 %492, label %493, label %525

493:                                              ; preds = %486
  %494 = bitcast %"class.blink::AXPosition"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %494) #22
  %495 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %15, i64 0, i32 0, i32 0
  %496 = load i64, i64* %456, align 8
  %497 = bitcast %"class.blink::AXPosition"* %15 to i64*
  store i64 %496, i64* %497, align 8
  %498 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %15, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %498, align 8
  switch i64 %496, label %499 [
    i64 0, label %583
    i64 -1, label %583
  ]

499:                                              ; preds = %493
  %500 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %501 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %500, i64 0, i32 1
  %502 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %501) #22
  %503 = icmp eq i8* %502, null
  br i1 %503, label %504, label %506, !prof !3

504:                                              ; preds = %499
  %505 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %501, i8* %505) #22
  br label %506

506:                                              ; preds = %504, %499
  %507 = phi i8* [ %505, %504 ], [ %502, %499 ]
  %508 = bitcast i8* %507 to %"class.blink::ThreadState"**
  %509 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %508, align 8
  %510 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %509, i64 0, i32 4, i32 0, i32 0, i32 0
  %511 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %510, align 8
  %512 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %511, i64 0, i32 0, i32 0
  %513 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %512, align 8
  %514 = icmp eq %"class.blink::PersistentNode"* %513, null
  br i1 %514, label %515, label %518, !prof !3

515:                                              ; preds = %506
  %516 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %511, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %516) #22
  %517 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %512, align 8
  br label %518

518:                                              ; preds = %515, %506
  %519 = phi %"class.blink::PersistentNode"* [ %517, %515 ], [ %513, %506 ]
  %520 = bitcast %"class.blink::PersistentNode"* %519 to i64*
  %521 = load i64, i64* %520, align 8
  %522 = bitcast %"class.blink::PersistentRegion"* %511 to i64*
  store i64 %521, i64* %522, align 8
  %523 = bitcast %"class.blink::PersistentNode"* %519 to %"class.blink::PersistentBase.3354"**
  store %"class.blink::PersistentBase.3354"* %495, %"class.blink::PersistentBase.3354"** %523, align 8
  %524 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %519, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %524, align 8
  store %"class.blink::PersistentNode"* %519, %"class.blink::PersistentNode"** %498, align 8
  br label %583

525:                                              ; preds = %486
  %526 = bitcast %"class.blink::AXPosition"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %526) #22
  %527 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %16, i64 0, i32 0, i32 0
  %528 = load i64, i64* %456, align 8
  %529 = bitcast %"class.blink::AXPosition"* %16 to i64*
  store i64 %528, i64* %529, align 8
  %530 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %16, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %530, align 8
  switch i64 %528, label %531 [
    i64 0, label %557
    i64 -1, label %557
  ]

531:                                              ; preds = %525
  %532 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %533 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %532, i64 0, i32 1
  %534 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %533) #22
  %535 = icmp eq i8* %534, null
  br i1 %535, label %536, label %538, !prof !3

536:                                              ; preds = %531
  %537 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %533, i8* %537) #22
  br label %538

538:                                              ; preds = %536, %531
  %539 = phi i8* [ %537, %536 ], [ %534, %531 ]
  %540 = bitcast i8* %539 to %"class.blink::ThreadState"**
  %541 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %540, align 8
  %542 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %541, i64 0, i32 4, i32 0, i32 0, i32 0
  %543 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %542, align 8
  %544 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %543, i64 0, i32 0, i32 0
  %545 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %544, align 8
  %546 = icmp eq %"class.blink::PersistentNode"* %545, null
  br i1 %546, label %547, label %550, !prof !3

547:                                              ; preds = %538
  %548 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %543, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %548) #22
  %549 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %544, align 8
  br label %550

550:                                              ; preds = %547, %538
  %551 = phi %"class.blink::PersistentNode"* [ %549, %547 ], [ %545, %538 ]
  %552 = bitcast %"class.blink::PersistentNode"* %551 to i64*
  %553 = load i64, i64* %552, align 8
  %554 = bitcast %"class.blink::PersistentRegion"* %543 to i64*
  store i64 %553, i64* %554, align 8
  %555 = bitcast %"class.blink::PersistentNode"* %551 to %"class.blink::PersistentBase.3354"**
  store %"class.blink::PersistentBase.3354"* %527, %"class.blink::PersistentBase.3354"** %555, align 8
  %556 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %551, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %556, align 8
  store %"class.blink::PersistentNode"* %551, %"class.blink::PersistentNode"** %530, align 8
  br label %557

557:                                              ; preds = %550, %525, %525
  %558 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %16, i64 0, i32 1
  %559 = bitcast i32* %558 to i64*
  %560 = load i64, i64* %489, align 8
  store i64 %560, i64* %559, align 8
  %561 = call i32 @_ZNK5blink10AXPosition10ChildIndexEv(%"class.blink::AXPosition"* nonnull %16) #22
  %562 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %530, align 8
  %563 = icmp eq %"class.blink::PersistentNode"* %562, null
  br i1 %563, label %609, label %564

564:                                              ; preds = %557
  %565 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %566 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %565, i64 0, i32 1
  %567 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %566) #22
  %568 = icmp eq i8* %567, null
  br i1 %568, label %569, label %571, !prof !3

569:                                              ; preds = %564
  %570 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %566, i8* %570) #22
  br label %571

571:                                              ; preds = %569, %564
  %572 = phi i8* [ %570, %569 ], [ %567, %564 ]
  %573 = bitcast i8* %572 to %"class.blink::ThreadState"**
  %574 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %573, align 8
  %575 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %574, i64 0, i32 4, i32 0, i32 0, i32 0
  %576 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %575, align 8
  %577 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %530, align 8
  %578 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %576, i64 0, i32 0, i32 0
  %579 = bitcast %"class.blink::PersistentRegion"* %576 to i64*
  %580 = load i64, i64* %579, align 8
  %581 = bitcast %"class.blink::PersistentNode"* %577 to i64*
  store i64 %580, i64* %581, align 8
  %582 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %577, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %582, align 8
  store %"class.blink::PersistentNode"* %577, %"class.blink::PersistentNode"** %578, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %530, align 8
  br label %609

583:                                              ; preds = %493, %493, %518
  %584 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %15, i64 0, i32 1
  %585 = bitcast i32* %584 to i64*
  %586 = load i64, i64* %489, align 8
  store i64 %586, i64* %585, align 8
  %587 = call i32 @_ZNK5blink10AXPosition10TextOffsetEv(%"class.blink::AXPosition"* nonnull %15) #22
  %588 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %498, align 8
  %589 = icmp eq %"class.blink::PersistentNode"* %588, null
  br i1 %589, label %609, label %590

590:                                              ; preds = %583
  %591 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %592 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %591, i64 0, i32 1
  %593 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %592) #22
  %594 = icmp eq i8* %593, null
  br i1 %594, label %595, label %597, !prof !3

595:                                              ; preds = %590
  %596 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %592, i8* %596) #22
  br label %597

597:                                              ; preds = %595, %590
  %598 = phi i8* [ %596, %595 ], [ %593, %590 ]
  %599 = bitcast i8* %598 to %"class.blink::ThreadState"**
  %600 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %599, align 8
  %601 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %600, i64 0, i32 4, i32 0, i32 0, i32 0
  %602 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %601, align 8
  %603 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %498, align 8
  %604 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %602, i64 0, i32 0, i32 0
  %605 = bitcast %"class.blink::PersistentRegion"* %602 to i64*
  %606 = load i64, i64* %605, align 8
  %607 = bitcast %"class.blink::PersistentNode"* %603 to i64*
  store i64 %606, i64* %607, align 8
  %608 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %603, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %608, align 8
  store %"class.blink::PersistentNode"* %603, %"class.blink::PersistentNode"** %604, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %498, align 8
  br label %609

609:                                              ; preds = %597, %583, %557, %571
  %610 = phi i8* [ %526, %571 ], [ %526, %557 ], [ %494, %583 ], [ %494, %597 ]
  %611 = phi i32 [ %561, %571 ], [ %561, %557 ], [ %587, %583 ], [ %587, %597 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %610) #22
  %612 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %459, align 8
  %613 = icmp eq %"class.blink::PersistentNode"* %612, null
  br i1 %613, label %633, label %614

614:                                              ; preds = %609
  %615 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %616 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %615, i64 0, i32 1
  %617 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %616) #22
  %618 = icmp eq i8* %617, null
  br i1 %618, label %619, label %621, !prof !3

619:                                              ; preds = %614
  %620 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %616, i8* %620) #22
  br label %621

621:                                              ; preds = %619, %614
  %622 = phi i8* [ %620, %619 ], [ %617, %614 ]
  %623 = bitcast i8* %622 to %"class.blink::ThreadState"**
  %624 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %623, align 8
  %625 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %624, i64 0, i32 4, i32 0, i32 0, i32 0
  %626 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %625, align 8
  %627 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %459, align 8
  %628 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %626, i64 0, i32 0, i32 0
  %629 = bitcast %"class.blink::PersistentRegion"* %626 to i64*
  %630 = load i64, i64* %629, align 8
  %631 = bitcast %"class.blink::PersistentNode"* %627 to i64*
  store i64 %630, i64* %631, align 8
  %632 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %627, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %632, align 8
  store %"class.blink::PersistentNode"* %627, %"class.blink::PersistentNode"** %628, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %459, align 8
  br label %633

633:                                              ; preds = %609, %621
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %454) #22
  %634 = bitcast %"class.blink::AXPosition"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %634) #22
  %635 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %13, i64 0, i32 1
  %636 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %17, i64 0, i32 0, i32 0
  %637 = bitcast %"class.blink::AXPosition"* %635 to i64*
  %638 = load i64, i64* %637, align 8
  %639 = bitcast %"class.blink::AXPosition"* %17 to i64*
  store i64 %638, i64* %639, align 8
  %640 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %17, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %640, align 8
  switch i64 %638, label %641 [
    i64 0, label %667
    i64 -1, label %667
  ]

641:                                              ; preds = %633
  %642 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %643 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %642, i64 0, i32 1
  %644 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %643) #22
  %645 = icmp eq i8* %644, null
  br i1 %645, label %646, label %648, !prof !3

646:                                              ; preds = %641
  %647 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %643, i8* %647) #22
  br label %648

648:                                              ; preds = %646, %641
  %649 = phi i8* [ %647, %646 ], [ %644, %641 ]
  %650 = bitcast i8* %649 to %"class.blink::ThreadState"**
  %651 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %650, align 8
  %652 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %651, i64 0, i32 4, i32 0, i32 0, i32 0
  %653 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %652, align 8
  %654 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %653, i64 0, i32 0, i32 0
  %655 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %654, align 8
  %656 = icmp eq %"class.blink::PersistentNode"* %655, null
  br i1 %656, label %657, label %660, !prof !3

657:                                              ; preds = %648
  %658 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %653, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %658) #22
  %659 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %654, align 8
  br label %660

660:                                              ; preds = %657, %648
  %661 = phi %"class.blink::PersistentNode"* [ %659, %657 ], [ %655, %648 ]
  %662 = bitcast %"class.blink::PersistentNode"* %661 to i64*
  %663 = load i64, i64* %662, align 8
  %664 = bitcast %"class.blink::PersistentRegion"* %653 to i64*
  store i64 %663, i64* %664, align 8
  %665 = bitcast %"class.blink::PersistentNode"* %661 to %"class.blink::PersistentBase.3354"**
  store %"class.blink::PersistentBase.3354"* %636, %"class.blink::PersistentBase.3354"** %665, align 8
  %666 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %661, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %666, align 8
  store %"class.blink::PersistentNode"* %661, %"class.blink::PersistentNode"** %640, align 8
  br label %667

667:                                              ; preds = %633, %633, %660
  %668 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %17, i64 0, i32 1
  %669 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %13, i64 0, i32 1, i32 1
  %670 = bitcast i32* %669 to i64*
  %671 = bitcast i32* %668 to i64*
  %672 = load i64, i64* %670, align 8
  store i64 %672, i64* %671, align 8
  %673 = call zeroext i1 @_ZNK5blink10AXPosition14IsTextPositionEv(%"class.blink::AXPosition"* nonnull %17) #22
  br i1 %673, label %674, label %706

674:                                              ; preds = %667
  %675 = bitcast %"class.blink::AXPosition"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %675) #22
  %676 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %18, i64 0, i32 0, i32 0
  %677 = load i64, i64* %637, align 8
  %678 = bitcast %"class.blink::AXPosition"* %18 to i64*
  store i64 %677, i64* %678, align 8
  %679 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %18, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %679, align 8
  switch i64 %677, label %680 [
    i64 0, label %764
    i64 -1, label %764
  ]

680:                                              ; preds = %674
  %681 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %682 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %681, i64 0, i32 1
  %683 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %682) #22
  %684 = icmp eq i8* %683, null
  br i1 %684, label %685, label %687, !prof !3

685:                                              ; preds = %680
  %686 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %682, i8* %686) #22
  br label %687

687:                                              ; preds = %685, %680
  %688 = phi i8* [ %686, %685 ], [ %683, %680 ]
  %689 = bitcast i8* %688 to %"class.blink::ThreadState"**
  %690 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %689, align 8
  %691 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %690, i64 0, i32 4, i32 0, i32 0, i32 0
  %692 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %691, align 8
  %693 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %692, i64 0, i32 0, i32 0
  %694 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %693, align 8
  %695 = icmp eq %"class.blink::PersistentNode"* %694, null
  br i1 %695, label %696, label %699, !prof !3

696:                                              ; preds = %687
  %697 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %692, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %697) #22
  %698 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %693, align 8
  br label %699

699:                                              ; preds = %696, %687
  %700 = phi %"class.blink::PersistentNode"* [ %698, %696 ], [ %694, %687 ]
  %701 = bitcast %"class.blink::PersistentNode"* %700 to i64*
  %702 = load i64, i64* %701, align 8
  %703 = bitcast %"class.blink::PersistentRegion"* %692 to i64*
  store i64 %702, i64* %703, align 8
  %704 = bitcast %"class.blink::PersistentNode"* %700 to %"class.blink::PersistentBase.3354"**
  store %"class.blink::PersistentBase.3354"* %676, %"class.blink::PersistentBase.3354"** %704, align 8
  %705 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %700, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %705, align 8
  store %"class.blink::PersistentNode"* %700, %"class.blink::PersistentNode"** %679, align 8
  br label %764

706:                                              ; preds = %667
  %707 = bitcast %"class.blink::AXPosition"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %707) #22
  %708 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %19, i64 0, i32 0, i32 0
  %709 = load i64, i64* %637, align 8
  %710 = bitcast %"class.blink::AXPosition"* %19 to i64*
  store i64 %709, i64* %710, align 8
  %711 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %19, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %711, align 8
  switch i64 %709, label %712 [
    i64 0, label %738
    i64 -1, label %738
  ]

712:                                              ; preds = %706
  %713 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %714 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %713, i64 0, i32 1
  %715 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %714) #22
  %716 = icmp eq i8* %715, null
  br i1 %716, label %717, label %719, !prof !3

717:                                              ; preds = %712
  %718 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %714, i8* %718) #22
  br label %719

719:                                              ; preds = %717, %712
  %720 = phi i8* [ %718, %717 ], [ %715, %712 ]
  %721 = bitcast i8* %720 to %"class.blink::ThreadState"**
  %722 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %721, align 8
  %723 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %722, i64 0, i32 4, i32 0, i32 0, i32 0
  %724 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %723, align 8
  %725 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %724, i64 0, i32 0, i32 0
  %726 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %725, align 8
  %727 = icmp eq %"class.blink::PersistentNode"* %726, null
  br i1 %727, label %728, label %731, !prof !3

728:                                              ; preds = %719
  %729 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %724, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %729) #22
  %730 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %725, align 8
  br label %731

731:                                              ; preds = %728, %719
  %732 = phi %"class.blink::PersistentNode"* [ %730, %728 ], [ %726, %719 ]
  %733 = bitcast %"class.blink::PersistentNode"* %732 to i64*
  %734 = load i64, i64* %733, align 8
  %735 = bitcast %"class.blink::PersistentRegion"* %724 to i64*
  store i64 %734, i64* %735, align 8
  %736 = bitcast %"class.blink::PersistentNode"* %732 to %"class.blink::PersistentBase.3354"**
  store %"class.blink::PersistentBase.3354"* %708, %"class.blink::PersistentBase.3354"** %736, align 8
  %737 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %732, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %737, align 8
  store %"class.blink::PersistentNode"* %732, %"class.blink::PersistentNode"** %711, align 8
  br label %738

738:                                              ; preds = %731, %706, %706
  %739 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %19, i64 0, i32 1
  %740 = bitcast i32* %739 to i64*
  %741 = load i64, i64* %670, align 8
  store i64 %741, i64* %740, align 8
  %742 = call i32 @_ZNK5blink10AXPosition10ChildIndexEv(%"class.blink::AXPosition"* nonnull %19) #22
  %743 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %711, align 8
  %744 = icmp eq %"class.blink::PersistentNode"* %743, null
  br i1 %744, label %790, label %745

745:                                              ; preds = %738
  %746 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %747 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %746, i64 0, i32 1
  %748 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %747) #22
  %749 = icmp eq i8* %748, null
  br i1 %749, label %750, label %752, !prof !3

750:                                              ; preds = %745
  %751 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %747, i8* %751) #22
  br label %752

752:                                              ; preds = %750, %745
  %753 = phi i8* [ %751, %750 ], [ %748, %745 ]
  %754 = bitcast i8* %753 to %"class.blink::ThreadState"**
  %755 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %754, align 8
  %756 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %755, i64 0, i32 4, i32 0, i32 0, i32 0
  %757 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %756, align 8
  %758 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %711, align 8
  %759 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %757, i64 0, i32 0, i32 0
  %760 = bitcast %"class.blink::PersistentRegion"* %757 to i64*
  %761 = load i64, i64* %760, align 8
  %762 = bitcast %"class.blink::PersistentNode"* %758 to i64*
  store i64 %761, i64* %762, align 8
  %763 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %758, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %763, align 8
  store %"class.blink::PersistentNode"* %758, %"class.blink::PersistentNode"** %759, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %711, align 8
  br label %790

764:                                              ; preds = %674, %674, %699
  %765 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %18, i64 0, i32 1
  %766 = bitcast i32* %765 to i64*
  %767 = load i64, i64* %670, align 8
  store i64 %767, i64* %766, align 8
  %768 = call i32 @_ZNK5blink10AXPosition10TextOffsetEv(%"class.blink::AXPosition"* nonnull %18) #22
  %769 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %679, align 8
  %770 = icmp eq %"class.blink::PersistentNode"* %769, null
  br i1 %770, label %790, label %771

771:                                              ; preds = %764
  %772 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %773 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %772, i64 0, i32 1
  %774 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %773) #22
  %775 = icmp eq i8* %774, null
  br i1 %775, label %776, label %778, !prof !3

776:                                              ; preds = %771
  %777 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %773, i8* %777) #22
  br label %778

778:                                              ; preds = %776, %771
  %779 = phi i8* [ %777, %776 ], [ %774, %771 ]
  %780 = bitcast i8* %779 to %"class.blink::ThreadState"**
  %781 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %780, align 8
  %782 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %781, i64 0, i32 4, i32 0, i32 0, i32 0
  %783 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %782, align 8
  %784 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %679, align 8
  %785 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %783, i64 0, i32 0, i32 0
  %786 = bitcast %"class.blink::PersistentRegion"* %783 to i64*
  %787 = load i64, i64* %786, align 8
  %788 = bitcast %"class.blink::PersistentNode"* %784 to i64*
  store i64 %787, i64* %788, align 8
  %789 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %784, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %789, align 8
  store %"class.blink::PersistentNode"* %784, %"class.blink::PersistentNode"** %785, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %679, align 8
  br label %790

790:                                              ; preds = %778, %764, %738, %752
  %791 = phi i8* [ %707, %752 ], [ %707, %738 ], [ %675, %764 ], [ %675, %778 ]
  %792 = phi i32 [ %742, %752 ], [ %742, %738 ], [ %768, %764 ], [ %768, %778 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %791) #22
  %793 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %640, align 8
  %794 = icmp eq %"class.blink::PersistentNode"* %793, null
  br i1 %794, label %814, label %795

795:                                              ; preds = %790
  %796 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %797 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %796, i64 0, i32 1
  %798 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %797) #22
  %799 = icmp eq i8* %798, null
  br i1 %799, label %800, label %802, !prof !3

800:                                              ; preds = %795
  %801 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %797, i8* %801) #22
  br label %802

802:                                              ; preds = %800, %795
  %803 = phi i8* [ %801, %800 ], [ %798, %795 ]
  %804 = bitcast i8* %803 to %"class.blink::ThreadState"**
  %805 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %804, align 8
  %806 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %805, i64 0, i32 4, i32 0, i32 0, i32 0
  %807 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %806, align 8
  %808 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %640, align 8
  %809 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %807, i64 0, i32 0, i32 0
  %810 = bitcast %"class.blink::PersistentRegion"* %807 to i64*
  %811 = load i64, i64* %810, align 8
  %812 = bitcast %"class.blink::PersistentNode"* %808 to i64*
  store i64 %811, i64* %812, align 8
  %813 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %808, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %813, align 8
  store %"class.blink::PersistentNode"* %808, %"class.blink::PersistentNode"** %809, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %640, align 8
  br label %814

814:                                              ; preds = %790, %802
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %634) #22
  call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 8, i32 %611) #22
  call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 9, i32 %792) #22
  call void @_ZN5blink11AXSelectionD2Ev(%"class.blink::AXSelection"* nonnull %13) #22
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %452) #22
  br label %815

815:                                              ; preds = %428, %439, %433, %422, %444, %814
  %816 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)***
  %817 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)**, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*** %816, align 8
  %818 = getelementptr inbounds %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %817, i64 144
  %819 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %818, align 8
  %820 = call %"class.blink::ScrollableArea"* %819(%"class.blink::AXObject"* %0) #22
  %821 = icmp eq %"class.blink::ScrollableArea"* %820, null
  br i1 %821, label %823, label %822

822:                                              ; preds = %815
  call void @_ZN5blink8AXObject25SerializeScrollAttributesEPN2ui10AXNodeDataE(%"class.blink::AXObject"* %0, %"struct.ui::AXNodeData"* %1)
  br label %823

823:                                              ; preds = %815, %822
  call void @_ZN5blink8AXObject31SerializeChooserPopupAttributesEPN2ui10AXNodeDataE(%"class.blink::AXObject"* %0, %"struct.ui::AXNodeData"* %1)
  %824 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %92, align 8
  %825 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %824, i64 124
  %826 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %825, align 8
  %827 = call %"class.blink::Node"* %826(%"class.blink::AXObject"* %0) #22
  %828 = icmp eq %"class.blink::Node"* %827, null
  br i1 %828, label %838, label %829

829:                                              ; preds = %823
  %830 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %827, i64 0, i32 1
  %831 = load i32, i32* %830, align 8
  %832 = and i32 %831, 12
  %833 = icmp eq i32 %832, 0
  br i1 %833, label %834, label %838

834:                                              ; preds = %829
  call void @_ZN5blink8AXObject26SerializeElementAttributesEPN2ui10AXNodeDataE(%"class.blink::AXObject"* %0, %"struct.ui::AXNodeData"* %1)
  %835 = and i32 %2, 16
  %836 = icmp eq i32 %835, 0
  br i1 %836, label %838, label %837

837:                                              ; preds = %834
  call void @_ZN5blink8AXObject23SerializeHTMLAttributesEPN2ui10AXNodeDataE(%"class.blink::AXObject"* %0, %"struct.ui::AXNodeData"* %1)
  br label %838

838:                                              ; preds = %834, %829, %304, %823, %837
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN2ui10AXNodeData11SetHasPopupEN2ax5mojom8HasPopupE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject11IsMultilineEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca i8, align 1
  %3 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %4 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %3, align 8
  %5 = icmp eq %"class.blink::AXObjectCacheImpl"* %4, null
  br i1 %5, label %76, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %8 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %8, i64 124
  %10 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %9, align 8
  %11 = tail call %"class.blink::Node"* %10(%"class.blink::AXObject"* %0) #22
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %76, label %13

13:                                               ; preds = %6
  %14 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %3, align 8
  %15 = icmp eq %"class.blink::AXObjectCacheImpl"* %14, null
  br i1 %15, label %76, label %16

16:                                               ; preds = %13
  %17 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %7, align 8
  %18 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %17, i64 124
  %19 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %18, align 8
  %20 = tail call %"class.blink::Node"* %19(%"class.blink::AXObject"* %0) #22
  %21 = icmp eq %"class.blink::Node"* %20, null
  br i1 %21, label %34, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 12
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %34

27:                                               ; preds = %22
  %28 = bitcast %"class.blink::Node"* %20 to %"class.blink::Element"*
  %29 = bitcast %"class.blink::Node"* %20 to i1 (%"class.blink::Element"*)***
  %30 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %30, i64 126
  %32 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.blink::Element"* nonnull %28) #22
  br i1 %33, label %36, label %34

34:                                               ; preds = %16, %22, %27
  %35 = tail call zeroext i1 @_ZNK5blink8AXObject20IsNonAtomicTextFieldEv(%"class.blink::AXObject"* %0) #22
  br i1 %35, label %36, label %76

36:                                               ; preds = %27, %34
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22
  store i8 0, i8* %2, align 1
  %37 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*, i32, i8*)***
  %38 = load i1 (%"class.blink::AXObject"*, i32, i8*)**, i1 (%"class.blink::AXObject"*, i32, i8*)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %38, i64 6
  %40 = load i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %39, align 8
  %41 = call zeroext i1 %40(%"class.blink::AXObject"* %0, i32 6, i8* nonnull dereferenceable(1) %2) #22
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = load i8, i8* %2, align 1, !range !2
  %44 = icmp ne i8 %43, 0
  br label %74

45:                                               ; preds = %36
  %46 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %7, align 8
  %47 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %46, i64 124
  %48 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %47, align 8
  %49 = call %"class.blink::Node"* %48(%"class.blink::AXObject"* %0) #22
  %50 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %49, i64 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = and i32 %51, 48
  %53 = icmp ne i32 %52, 0
  %54 = icmp eq %"class.blink::Node"* %49, null
  %55 = or i1 %54, %53
  br i1 %55, label %68, label %56

56:                                               ; preds = %45
  %57 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTextareaTagE, align 8
  %58 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %49, i64 1, i32 2
  %61 = bitcast %"class.blink::Member.318"* %60 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %64, %66
  br i1 %67, label %74, label %68

68:                                               ; preds = %45, %56
  %69 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %70 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %69, align 8
  %71 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %70, i64 110
  %72 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %71, align 8
  %73 = call zeroext i1 %72(%"class.blink::AXObject"* %0) #22
  br label %74

74:                                               ; preds = %56, %68, %42
  %75 = phi i1 [ %44, %42 ], [ true, %56 ], [ %73, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22
  br label %76

76:                                               ; preds = %13, %1, %34, %6, %74
  %77 = phi i1 [ %75, %74 ], [ false, %6 ], [ false, %34 ], [ false, %1 ], [ false, %13 ]
  ret i1 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject15IsPasswordFieldEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %3, i64 124
  %5 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::Node"* %5(%"class.blink::AXObject"* %0) #22
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %38, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 48
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %38

13:                                               ; preds = %8
  %14 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 1, i32 2
  %18 = bitcast %"class.blink::Member.318"* %17 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %25, label %38

25:                                               ; preds = %13
  %26 = bitcast %"class.blink::Node"* %6 to %"class.blink::HTMLFormControlElement"*
  %27 = bitcast %"class.blink::Node"* %6 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %28 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %28, i64 171
  %30 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %29, align 8
  %31 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %30(%"class.blink::HTMLFormControlElement"* nonnull %26) #22
  %32 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names9kPasswordE, align 8
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %31, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %32, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %34, %36
  br label %38

38:                                               ; preds = %13, %1, %8, %25
  %39 = phi i1 [ %37, %25 ], [ false, %13 ], [ false, %8 ], [ false, %1 ]
  ret i1 %39
}

declare void @_ZN2ui10AXNodeData12SetTextAlignEN2ax5mojom9TextAlignE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #6

declare void @_ZN2ui10AXNodeData17AddFloatAttributeEN2ax5mojom14FloatAttributeEf(%"struct.ui::AXNodeData"*, i32, float) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8AXObject26ChildCountIncludingIgnoredEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %7 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %7, i64 160
  %9 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %8, align 8
  tail call void %9(%"class.blink::AXObject"* %0) #22
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  ret i32 %12
}

declare void @_ZN2ui8AXTreeID9FromTokenERKN4base16UnguessableTokenE(%"class.ui::AXTreeID"* sret, %"class.base::UnguessableToken"* dereferenceable(16)) local_unnamed_addr #6

declare void @_ZN2ui10AXNodeData14AddChildTreeIdERKNS_8AXTreeIDE(%"struct.ui::AXNodeData"*, %"class.ui::AXTreeID"* dereferenceable(32)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8AXObject12GetDOMNodeIdEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %3, i64 124
  %5 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::Node"* %5(%"class.blink::AXObject"* %0) #22
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = tail call i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"* nonnull %6) #22
  br label %10

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ 0, %1 ]
  ret i32 %11
}

declare void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"*, i32, i32) local_unnamed_addr #6

declare zeroext i1 @_ZN2ui9IsHeadingEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8AXObject23SerializeListAttributesEPN2ui10AXNodeDataE(%"class.blink::AXObject"*, %"struct.ui::AXNodeData"*) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.blink::AXObject"* %0 to i32 (%"class.blink::AXObject"*)***
  %4 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %4, i64 114
  %6 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %5, align 8
  %7 = tail call i32 %6(%"class.blink::AXObject"* %0) #22
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %3, align 8
  %11 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %10, i64 114
  %12 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %11, align 8
  %13 = tail call i32 %12(%"class.blink::AXObject"* %0) #22
  tail call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 39, i32 %13) #22
  br label %14

14:                                               ; preds = %2, %9
  %15 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %3, align 8
  %16 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %15, i64 113
  %17 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::AXObject"* %0) #22
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %3, align 8
  %22 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %21, i64 113
  %23 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %22, align 8
  %24 = tail call i32 %23(%"class.blink::AXObject"* %0) #22
  tail call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 40, i32 %24) #22
  br label %25

25:                                               ; preds = %14, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8AXObject24SerializeTableAttributesEPN2ui10AXNodeDataE(%"class.blink::AXObject"*, %"struct.ui::AXNodeData"*) local_unnamed_addr #2 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 4
  %7 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %6) #22
  br i1 %7, label %8, label %94

8:                                                ; preds = %2
  %9 = load i32, i32* %5, align 4
  %10 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %9) #22
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = load i32, i32* %5, align 4
  %13 = icmp eq i32 %12, 106
  br i1 %13, label %14, label %51

14:                                               ; preds = %11, %8
  %15 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %16 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %16, i64 124
  %18 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %17, align 8
  %19 = tail call %"class.blink::Node"* %18(%"class.blink::AXObject"* %0) #22
  %20 = icmp eq %"class.blink::Node"* %19, null
  br i1 %20, label %51, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 12
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %51

26:                                               ; preds = %21
  %27 = bitcast %"class.blink::Node"* %19 to %"class.blink::Element"*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22
  store i8 1, i8* %4, align 1
  %28 = call i32 @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_14AOMIntPropertyERb(%"class.blink::Element"* nonnull %27, i32 0, i8* nonnull dereferenceable(1) %4) #22
  %29 = load i8, i8* %4, align 1, !range !2
  %30 = icmp eq i8 %29, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22
  br i1 %30, label %31, label %51

31:                                               ; preds = %26
  %32 = bitcast %"class.blink::AXObject"* %0 to i32 (%"class.blink::AXObject"*)***
  %33 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %32, align 8
  %34 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %33, i64 133
  %35 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %34, align 8
  %36 = call i32 %35(%"class.blink::AXObject"* %0) #22
  %37 = icmp sgt i32 %28, %36
  br i1 %37, label %47, label %38

38:                                               ; preds = %31
  %39 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %32, align 8
  %40 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %39, i64 133
  %41 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %40, align 8
  %42 = call i32 %41(%"class.blink::AXObject"* %0) #22
  %43 = icmp ne i32 %28, %42
  %44 = icmp eq i32 %28, -1
  %45 = and i1 %44, %43
  %46 = sext i1 %45 to i32
  br label %47

47:                                               ; preds = %31, %38
  %48 = phi i32 [ %28, %31 ], [ %46, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %51, label %50

50:                                               ; preds = %47
  call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 10, i32 %48) #22
  br label %51

51:                                               ; preds = %14, %21, %26, %11, %47, %50
  %52 = load i32, i32* %5, align 4
  %53 = call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %52) #22
  br i1 %53, label %57, label %54

54:                                               ; preds = %51
  %55 = load i32, i32* %5, align 4
  %56 = icmp eq i32 %55, 106
  br i1 %56, label %57, label %94

57:                                               ; preds = %54, %51
  %58 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %59 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %58, align 8
  %60 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %59, i64 124
  %61 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %60, align 8
  %62 = call %"class.blink::Node"* %61(%"class.blink::AXObject"* %0) #22
  %63 = icmp eq %"class.blink::Node"* %62, null
  br i1 %63, label %94, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %62, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, 12
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %94

69:                                               ; preds = %64
  %70 = bitcast %"class.blink::Node"* %62 to %"class.blink::Element"*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22
  store i8 1, i8* %3, align 1
  %71 = call i32 @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_14AOMIntPropertyERb(%"class.blink::Element"* nonnull %70, i32 1, i8* nonnull dereferenceable(1) %3) #22
  %72 = load i8, i8* %3, align 1, !range !2
  %73 = icmp eq i8 %72, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22
  br i1 %73, label %74, label %94

74:                                               ; preds = %69
  %75 = bitcast %"class.blink::AXObject"* %0 to i32 (%"class.blink::AXObject"*)***
  %76 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %75, align 8
  %77 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %76, i64 134
  %78 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %77, align 8
  %79 = call i32 %78(%"class.blink::AXObject"* %0) #22
  %80 = icmp sgt i32 %71, %79
  br i1 %80, label %90, label %81

81:                                               ; preds = %74
  %82 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %75, align 8
  %83 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %82, i64 134
  %84 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %83, align 8
  %85 = call i32 %84(%"class.blink::AXObject"* %0) #22
  %86 = icmp ne i32 %71, %85
  %87 = icmp eq i32 %71, -1
  %88 = and i1 %87, %86
  %89 = sext i1 %88 to i32
  br label %90

90:                                               ; preds = %74, %81
  %91 = phi i32 [ %71, %74 ], [ %89, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %90
  call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 13, i32 %91) #22
  br label %94

94:                                               ; preds = %57, %64, %69, %54, %93, %90, %2
  %95 = load i32, i32* %5, align 4
  %96 = call zeroext i1 @_ZN2ui10IsTableRowEN2ax5mojom4RoleE(i32 %95) #22
  br i1 %96, label %97, label %111

97:                                               ; preds = %94
  %98 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::AXObject"* (%"class.blink::AXObject"*)***
  %99 = load %"class.blink::AXObject"* (%"class.blink::AXObject"*)**, %"class.blink::AXObject"* (%"class.blink::AXObject"*)*** %98, align 8
  %100 = getelementptr inbounds %"class.blink::AXObject"* (%"class.blink::AXObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXObject"*)** %99, i64 143
  %101 = load %"class.blink::AXObject"* (%"class.blink::AXObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXObject"*)** %100, align 8
  %102 = call %"class.blink::AXObject"* %101(%"class.blink::AXObject"* %0) #22
  %103 = icmp eq %"class.blink::AXObject"* %102, null
  br i1 %103, label %111, label %104

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %102, i64 0, i32 14, i32 0, i32 0
  %106 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %105, align 8
  %107 = icmp eq %"class.blink::AXObjectCacheImpl"* %106, null
  br i1 %107, label %111, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %102, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 20, i32 %110) #22
  br label %111

111:                                              ; preds = %104, %108, %97, %94
  %112 = load i32, i32* %5, align 4
  %113 = call zeroext i1 @_ZN2ui19IsCellOrTableHeaderEN2ax5mojom4RoleE(i32 %112) #22
  br i1 %113, label %114, label %124

114:                                              ; preds = %111
  %115 = bitcast %"class.blink::AXObject"* %0 to i32 (%"class.blink::AXObject"*)***
  %116 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %115, align 8
  %117 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %116, i64 140
  %118 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %117, align 8
  %119 = call i32 %118(%"class.blink::AXObject"* %0) #22
  call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 24, i32 %119) #22
  %120 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %115, align 8
  %121 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %120, i64 141
  %122 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %121, align 8
  %123 = call i32 %122(%"class.blink::AXObject"* %0) #22
  call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 26, i32 %123) #22
  br label %124

124:                                              ; preds = %114, %111
  %125 = load i32, i32* %5, align 4
  %126 = call zeroext i1 @_ZN2ui19IsCellOrTableHeaderEN2ax5mojom4RoleE(i32 %125) #22
  br i1 %126, label %130, label %127

127:                                              ; preds = %124
  %128 = load i32, i32* %5, align 4
  %129 = call zeroext i1 @_ZN2ui10IsTableRowEN2ax5mojom4RoleE(i32 %128) #22
  br i1 %129, label %130, label %140

130:                                              ; preds = %127, %124
  call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %131 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 12
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %135, label %134

134:                                              ; preds = %130
  call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 14, i32 %132) #22
  br label %135

135:                                              ; preds = %130, %134
  call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %136 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 11
  %137 = load i32, i32* %136, align 8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %140, label %139

139:                                              ; preds = %135
  call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 11, i32 %137) #22
  br label %140

140:                                              ; preds = %139, %135, %127
  %141 = load i32, i32* %5, align 4
  %142 = call zeroext i1 @_ZN2ui13IsTableHeaderEN2ax5mojom4RoleE(i32 %141) #22
  br i1 %142, label %143, label %155

143:                                              ; preds = %140
  %144 = bitcast %"class.blink::AXObject"* %0 to i32 (%"class.blink::AXObject"*)***
  %145 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %144, align 8
  %146 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %145, i64 142
  %147 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %146, align 8
  %148 = call i32 %147(%"class.blink::AXObject"* %0) #22
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %155, label %150

150:                                              ; preds = %143
  %151 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %144, align 8
  %152 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %151, i64 142
  %153 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %152, align 8
  %154 = call i32 %153(%"class.blink::AXObject"* %0) #22
  call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 27, i32 %154) #22
  br label %155

155:                                              ; preds = %143, %150, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject16HasAriaAttributeEb(%"class.blink::AXObject"*, i1 zeroext) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %6 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %6, i64 124
  %8 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %7, align 8
  %9 = tail call %"class.blink::Node"* %8(%"class.blink::AXObject"* %0) #22
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %118, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 12
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %118

16:                                               ; preds = %11
  br i1 %1, label %24, label %17

17:                                               ; preds = %16
  %18 = bitcast %"class.blink::AXObject"* %0 to i32 (%"class.blink::AXObject"*)***
  %19 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %18, align 8
  %20 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %19, i64 102
  %21 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %20, align 8
  %22 = tail call i32 %21(%"class.blink::AXObject"* %0) #22
  %23 = icmp eq i32 %22, 182
  br i1 %23, label %24, label %118

24:                                               ; preds = %17, %16
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 1, i32 3
  %26 = bitcast %"class.blink::Member.320"* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %118, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.354"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %34, %41
  %47 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %48 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %49 = zext i32 %47 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %48, i64 %49
  %51 = icmp eq i32 %47, 0
  br i1 %51, label %118, label %52

52:                                               ; preds = %46
  %53 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  %54 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %55 = bitcast %"class.WTF::StringView"* %4 to i8*
  %56 = bitcast %"class.WTF::StringView"* %4 to i64*
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  br label %62

59:                                               ; preds = %94, %116
  %60 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 1
  %61 = icmp eq %"class.blink::Attribute"* %60, %50
  br i1 %61, label %118, label %62

62:                                               ; preds = %52, %59
  %63 = phi %"class.blink::Attribute"* [ %48, %52 ], [ %60, %59 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #22
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %54, align 8
  %64 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 5, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %70, label %69

69:                                               ; preds = %62
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %54, align 8
  br label %76

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 0, i32 0
  %72 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13QualifiedName18LocalNameUpperSlowEv(%"class.blink::QualifiedName"* %71) #22
  %73 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %54, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %94, label %76

76:                                               ; preds = %69, %70
  %77 = phi %"class.WTF::StringImpl"* [ %67, %69 ], [ %74, %70 ]
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %95

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #22
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !3

91:                                               ; preds = %82
  call void @llvm.trap() #22
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %95

94:                                               ; preds = %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #22
  br label %59

95:                                               ; preds = %92, %76
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #22
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %96, i64* %56, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0), i8** %57, align 8
  store i32 5, i32* %58, align 8
  %97 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %77, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #22
  br i1 %97, label %98, label %102

98:                                               ; preds = %95
  br i1 %1, label %99, label %101

99:                                               ; preds = %98
  %100 = call zeroext i1 @_ZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* nonnull dereferenceable(8) %3)
  br i1 %100, label %101, label %102

101:                                              ; preds = %98, %99
  br label %102

102:                                              ; preds = %95, %99, %101
  %103 = phi i32 [ 1, %101 ], [ 0, %99 ], [ 0, %95 ]
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %102
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %102
  %113 = phi i32 [ %111, %110 ], [ %109, %102 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #22
  br label %116

116:                                              ; preds = %112, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #22
  %117 = icmp eq i32 %103, 0
  br i1 %117, label %59, label %118

118:                                              ; preds = %59, %116, %24, %46, %11, %2, %17
  %119 = phi i1 [ true, %17 ], [ false, %11 ], [ false, %2 ], [ false, %46 ], [ false, %24 ], [ false, %59 ], [ true, %116 ]
  ret i1 %119
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8AXObject29TruncateAndAddStringAttributeEPN2ui10AXNodeDataEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEj(%"class.blink::AXObject"* nocapture readnone, %"struct.ui::AXNodeData"*, i32, %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %9 to i64
  %14 = select i1 %10, i64 %12, i64 %13
  %15 = zext i32 %4 to i64
  %16 = icmp ugt i64 %14, %15
  br i1 %16, label %17, label %27

17:                                               ; preds = %5
  %18 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #22
  call void @_ZN4base22TruncateUTF8ToByteSizeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEmPS6_(%"class.std::__1::basic_string"* dereferenceable(24) %3, i64 %15, %"class.std::__1::basic_string"* nonnull %6) #22
  call void @_ZN2ui10AXNodeData18AddStringAttributeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.ui::AXNodeData"* %1, i32 %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #22
  %19 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #23
  br label %26

26:                                               ; preds = %17, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #22
  br label %28

27:                                               ; preds = %5
  tail call void @_ZN2ui10AXNodeData18AddStringAttributeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.ui::AXNodeData"* %1, i32 %2, %"class.std::__1::basic_string"* dereferenceable(24) %3) #22
  br label %28

28:                                               ; preds = %27, %26
  ret void
}

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #6

declare void @_ZN2ui10AXNodeData14SetRestrictionEN2ax5mojom11RestrictionE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject20CanSetValueAttributeEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %11 [
    i32 18, label %4
    i32 28, label %4
    i32 29, label %4
    i32 103, label %4
    i32 151, label %4
    i32 154, label %4
    i32 156, label %4
    i32 157, label %4
    i32 158, label %4
    i32 171, label %4
    i32 172, label %4
  ]

4:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %5 = bitcast %"class.blink::AXObject"* %0 to i32 (%"class.blink::AXObject"*)***
  %6 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %6, i64 100
  %8 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %7, align 8
  %9 = tail call i32 %8(%"class.blink::AXObject"* %0) #22
  %10 = icmp eq i32 %9, 0
  br label %11

11:                                               ; preds = %1, %4
  %12 = phi i1 [ %10, %4 ], [ false, %1 ]
  ret i1 %12
}

declare void @_ZN2ui10AXNodeData9AddActionEN2ax5mojom6ActionE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #6

declare zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8AXObject24SerializeStyleAttributesEPN2ui10AXNodeDataE(%"class.blink::AXObject"*, %"struct.ui::AXNodeData"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = bitcast %"class.blink::AXObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)***
  %11 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)** %11, i64 65
  %13 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)** %12, align 8
  %14 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %13(%"class.blink::AXObject"* %0) #22
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %87, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %87, label %22

22:                                               ; preds = %18
  %23 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* %0)
  %24 = icmp eq %"class.blink::AXObject"* %23, null
  br i1 %24, label %35, label %25

25:                                               ; preds = %22
  %26 = bitcast %"class.blink::AXObject"* %23 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)***
  %27 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)*** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)** %27, i64 65
  %29 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)** %28, align 8
  %30 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %29(%"class.blink::AXObject"* nonnull %23) #22
  %31 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, %33
  br i1 %34, label %87, label %35

35:                                               ; preds = %25, %22
  %36 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #22
  %37 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #22
  %38 = bitcast %"class.blink::AXObject"* %0 to %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)***
  %39 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)**, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)*** %38, align 8
  %40 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)** %39, i64 66
  %41 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)** %40, align 8
  %42 = tail call %"class.WTF::StringImpl"* %41(%"class.blink::AXObject"* %0) #22
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %43, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* nonnull %5, i32 0) #22
  %44 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = zext i8 %46 to i64
  %51 = select i1 %47, i64 %49, i64 %50
  %52 = icmp ugt i64 %51, 10000
  br i1 %52, label %53, label %63

53:                                               ; preds = %35
  %54 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 24, i1 false) #22
  call void @_ZN4base22TruncateUTF8ToByteSizeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEmPS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i64 10000, %"class.std::__1::basic_string"* nonnull %3) #22
  call void @_ZN2ui10AXNodeData18AddStringAttributeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.ui::AXNodeData"* %1, i32 13, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #22
  %55 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %61) #23
  br label %62

62:                                               ; preds = %59, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #22
  br label %64

63:                                               ; preds = %35
  call void @_ZN2ui10AXNodeData18AddStringAttributeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.ui::AXNodeData"* %1, i32 13, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #22
  br label %64

64:                                               ; preds = %62, %63
  %65 = load i8, i8* %45, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #23
  br label %70

70:                                               ; preds = %64, %67
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #22
  br label %86

86:                                               ; preds = %70, %82, %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #22
  br label %87

87:                                               ; preds = %25, %2, %86, %18
  %88 = bitcast %"class.blink::AXObject"* %0 to float (%"class.blink::AXObject"*)***
  %89 = load float (%"class.blink::AXObject"*)**, float (%"class.blink::AXObject"*)*** %88, align 8
  %90 = getelementptr inbounds float (%"class.blink::AXObject"*)*, float (%"class.blink::AXObject"*)** %89, i64 67
  %91 = load float (%"class.blink::AXObject"*)*, float (%"class.blink::AXObject"*)** %90, align 8
  %92 = call float %91(%"class.blink::AXObject"* %0) #22
  %93 = fcmp une float %92, 0.000000e+00
  br i1 %93, label %94, label %99

94:                                               ; preds = %87
  %95 = load float (%"class.blink::AXObject"*)**, float (%"class.blink::AXObject"*)*** %88, align 8
  %96 = getelementptr inbounds float (%"class.blink::AXObject"*)*, float (%"class.blink::AXObject"*)** %95, i64 67
  %97 = load float (%"class.blink::AXObject"*)*, float (%"class.blink::AXObject"*)** %96, align 8
  %98 = call float %97(%"class.blink::AXObject"* %0) #22
  call void @_ZN2ui10AXNodeData17AddFloatAttributeEN2ax5mojom14FloatAttributeEf(%"struct.ui::AXNodeData"* %1, i32 5, float %98) #22
  br label %99

99:                                               ; preds = %94, %87
  %100 = load float (%"class.blink::AXObject"*)**, float (%"class.blink::AXObject"*)*** %88, align 8
  %101 = getelementptr inbounds float (%"class.blink::AXObject"*)*, float (%"class.blink::AXObject"*)** %100, i64 68
  %102 = load float (%"class.blink::AXObject"*)*, float (%"class.blink::AXObject"*)** %101, align 8
  %103 = call float %102(%"class.blink::AXObject"* %0) #22
  %104 = fcmp une float %103, 0.000000e+00
  br i1 %104, label %105, label %110

105:                                              ; preds = %99
  %106 = load float (%"class.blink::AXObject"*)**, float (%"class.blink::AXObject"*)*** %88, align 8
  %107 = getelementptr inbounds float (%"class.blink::AXObject"*)*, float (%"class.blink::AXObject"*)** %106, i64 68
  %108 = load float (%"class.blink::AXObject"*)*, float (%"class.blink::AXObject"*)** %107, align 8
  %109 = call float %108(%"class.blink::AXObject"* %0) #22
  call void @_ZN2ui10AXNodeData17AddFloatAttributeEN2ax5mojom14FloatAttributeEf(%"struct.ui::AXNodeData"* %1, i32 6, float %109) #22
  br label %110

110:                                              ; preds = %105, %99
  %111 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 116
  %114 = bitcast %"class.blink::AXObject"* %0 to i32 (%"class.blink::AXObject"*)***
  br i1 %113, label %115, label %126

115:                                              ; preds = %110
  %116 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %114, align 8
  %117 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %116, i64 74
  %118 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %117, align 8
  %119 = call i32 %118(%"class.blink::AXObject"* %0) #22
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %126, label %121

121:                                              ; preds = %115
  %122 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %114, align 8
  %123 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %122, i64 74
  %124 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %123, align 8
  %125 = call i32 %124(%"class.blink::AXObject"* %0) #22
  call void @_ZN2ui10AXNodeData12SetListStyleEN2ax5mojom9ListStyleE(%"struct.ui::AXNodeData"* %1, i32 %125) #22
  br label %126

126:                                              ; preds = %110, %115, %121
  %127 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %114, align 8
  %128 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %127, i64 76
  %129 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %128, align 8
  %130 = call i32 %129(%"class.blink::AXObject"* %0) #22
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %137, label %132

132:                                              ; preds = %126
  %133 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %114, align 8
  %134 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %133, i64 76
  %135 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %134, align 8
  %136 = call i32 %135(%"class.blink::AXObject"* %0) #22
  call void @_ZN2ui10AXNodeData16SetTextDirectionEN2ax5mojom16WritingDirectionE(%"struct.ui::AXNodeData"* %1, i32 %136) #22
  br label %137

137:                                              ; preds = %126, %132
  %138 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %114, align 8
  %139 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %138, i64 78
  %140 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %139, align 8
  %141 = call i32 %140(%"class.blink::AXObject"* %0) #22
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %148, label %143

143:                                              ; preds = %137
  %144 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %114, align 8
  %145 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %144, i64 78
  %146 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %145, align 8
  %147 = call i32 %146(%"class.blink::AXObject"* %0) #22
  call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 52, i32 %147) #22
  br label %148

148:                                              ; preds = %137, %143
  %149 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %149) #22
  store i32 0, i32* %6, align 4
  %150 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %150) #22
  store i32 -1431655766, i32* %7, align 4
  %151 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %151) #22
  store i32 -1431655766, i32* %8, align 4
  %152 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %152) #22
  store i32 -1431655766, i32* %9, align 4
  %153 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*, i32*, i32*, i32*, i32*)***
  %154 = load void (%"class.blink::AXObject"*, i32*, i32*, i32*, i32*)**, void (%"class.blink::AXObject"*, i32*, i32*, i32*, i32*)*** %153, align 8
  %155 = getelementptr inbounds void (%"class.blink::AXObject"*, i32*, i32*, i32*, i32*)*, void (%"class.blink::AXObject"*, i32*, i32*, i32*, i32*)** %154, i64 79
  %156 = load void (%"class.blink::AXObject"*, i32*, i32*, i32*, i32*)*, void (%"class.blink::AXObject"*, i32*, i32*, i32*, i32*)** %155, align 8
  call void %156(%"class.blink::AXObject"* %0, i32* nonnull %6, i32* nonnull %7, i32* nonnull %8, i32* nonnull %9) #22
  %157 = load i32, i32* %6, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %160, label %159

159:                                              ; preds = %148
  call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 53, i32 %157) #22
  br label %160

160:                                              ; preds = %148, %159
  %161 = load i32, i32* %7, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %164, label %163

163:                                              ; preds = %160
  call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 54, i32 %161) #22
  br label %164

164:                                              ; preds = %160, %163
  %165 = load i32, i32* %8, align 4
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %168, label %167

167:                                              ; preds = %164
  call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 55, i32 %165) #22
  br label %168

168:                                              ; preds = %164, %167
  %169 = load i32, i32* %9, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %172, label %171

171:                                              ; preds = %168
  call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 56, i32 %169) #22
  br label %172

172:                                              ; preds = %168, %171
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %152) #22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %151) #22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %150) #22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %149) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8AXObject25SerializeSparseAttributesEPN2ui10AXNodeDataE(%"class.blink::AXObject"*, %"struct.ui::AXNodeData"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.base::RepeatingCallback.3368", align 8
  %4 = alloca %"class.base::RepeatingCallback.3368", align 8
  %5 = alloca %"class.blink::AXNodeDataAOMPropertyClient", align 8
  %6 = alloca %"class.WTF::HashSet.3364", align 8
  %7 = alloca %"class.base::RepeatingCallback.3368", align 8
  %8 = alloca %"class.base::RepeatingCallback.3368", align 8
  %9 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %10 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %10, i64 23
  %12 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::AXObject"* %0) #22
  br i1 %13, label %14, label %84

14:                                               ; preds = %2
  %15 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)***
  %16 = load %"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)**, %"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)*, %"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)** %16, i64 7
  %18 = load %"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)*, %"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)** %17, align 8
  %19 = tail call %"class.blink::AccessibleNode"* %18(%"class.blink::AXObject"* %0) #22
  %20 = icmp eq %"class.blink::AccessibleNode"* %19, null
  br i1 %20, label %84, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.blink::AXNodeDataAOMPropertyClient"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #22
  %23 = getelementptr inbounds %"class.blink::AXNodeDataAOMPropertyClient", %"class.blink::AXNodeDataAOMPropertyClient"* %5, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.blink::AXNodeDataAOMPropertyClient", %"class.blink::AXNodeDataAOMPropertyClient"* %5, i64 0, i32 1, i32 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.blink::AXNodeDataAOMPropertyClient", %"class.blink::AXNodeDataAOMPropertyClient"* %5, i64 0, i32 2
  %26 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::AXNodeDataAOMPropertyClient", %"class.blink::AXNodeDataAOMPropertyClient"* %5, i64 0, i32 2
  %28 = bitcast %"struct.ui::AXNodeData"** %27 to i64*
  store i64 -6148914691236517206, i64* %28, align 8
  %29 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %26, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink27AXNodeDataAOMPropertyClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %30 = getelementptr inbounds %"class.blink::AXNodeDataAOMPropertyClient", %"class.blink::AXNodeDataAOMPropertyClient"* %5, i64 0, i32 1
  %31 = getelementptr inbounds %"class.blink::Persistent.3357", %"class.blink::Persistent.3357"* %30, i64 0, i32 0
  %32 = getelementptr inbounds %"class.blink::Persistent.3357", %"class.blink::Persistent.3357"* %30, i64 0, i32 0, i32 0
  store %"class.blink::AXObjectCacheImpl"* %29, %"class.blink::AXObjectCacheImpl"** %32, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %24, align 8
  %33 = ptrtoint %"class.blink::AXObjectCacheImpl"* %29 to i64
  switch i64 %33, label %34 [
    i64 0, label %60
    i64 -1, label %60
  ]

34:                                               ; preds = %21
  %35 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %36 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %35, i64 0, i32 1
  %37 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %36) #22
  %38 = icmp eq i8* %37, null
  br i1 %38, label %39, label %41, !prof !3

39:                                               ; preds = %34
  %40 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %36, i8* %40) #22
  br label %41

41:                                               ; preds = %39, %34
  %42 = phi i8* [ %40, %39 ], [ %37, %34 ]
  %43 = bitcast i8* %42 to %"class.blink::ThreadState"**
  %44 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %47, align 8
  %49 = icmp eq %"class.blink::PersistentNode"* %48, null
  br i1 %49, label %50, label %53, !prof !3

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %46, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %51) #22
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %47, align 8
  br label %53

53:                                               ; preds = %50, %41
  %54 = phi %"class.blink::PersistentNode"* [ %52, %50 ], [ %48, %41 ]
  %55 = bitcast %"class.blink::PersistentNode"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.blink::PersistentRegion"* %46 to i64*
  store i64 %56, i64* %57, align 8
  %58 = bitcast %"class.blink::PersistentNode"* %54 to %"class.blink::PersistentBase.3358"**
  store %"class.blink::PersistentBase.3358"* %31, %"class.blink::PersistentBase.3358"** %58, align 8
  %59 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %54, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17AXObjectCacheImplELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %59, align 8
  store %"class.blink::PersistentNode"* %54, %"class.blink::PersistentNode"** %24, align 8
  br label %60

60:                                               ; preds = %21, %21, %53
  store %"struct.ui::AXNodeData"* %1, %"struct.ui::AXNodeData"** %25, align 8
  %61 = getelementptr inbounds %"class.blink::AXNodeDataAOMPropertyClient", %"class.blink::AXNodeDataAOMPropertyClient"* %5, i64 0, i32 0
  call void @_ZN5blink14AccessibleNode19GetAllAOMPropertiesEPNS_17AOMPropertyClientE(%"class.blink::AccessibleNode"* nonnull %19, %"class.blink::AOMPropertyClient"* nonnull %61) #22
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink27AXNodeDataAOMPropertyClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %62 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %24, align 8
  %63 = icmp eq %"class.blink::PersistentNode"* %62, null
  br i1 %63, label %83, label %64

64:                                               ; preds = %60
  %65 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %66 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %65, i64 0, i32 1
  %67 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %66) #22
  %68 = icmp eq i8* %67, null
  br i1 %68, label %69, label %71, !prof !3

69:                                               ; preds = %64
  %70 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %66, i8* %70) #22
  br label %71

71:                                               ; preds = %69, %64
  %72 = phi i8* [ %70, %69 ], [ %67, %64 ]
  %73 = bitcast i8* %72 to %"class.blink::ThreadState"**
  %74 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %74, i64 0, i32 3, i32 0, i32 0, i32 0
  %76 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %75, align 8
  %77 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %24, align 8
  %78 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %76, i64 0, i32 0, i32 0
  %79 = bitcast %"class.blink::PersistentRegion"* %76 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.blink::PersistentNode"* %77 to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %77, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %82, align 8
  store %"class.blink::PersistentNode"* %77, %"class.blink::PersistentNode"** %78, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %24, align 8
  br label %83

83:                                               ; preds = %60, %71
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #22
  br label %84

84:                                               ; preds = %83, %14, %2
  %85 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %86 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %85, align 8
  %87 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %86, i64 124
  %88 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %87, align 8
  %89 = call %"class.blink::Node"* %88(%"class.blink::AXObject"* %0) #22
  %90 = icmp eq %"class.blink::Node"* %89, null
  br i1 %90, label %331, label %91

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %89, i64 0, i32 1
  %93 = load i32, i32* %92, align 8
  %94 = and i32 %93, 12
  %95 = icmp eq i32 %94, 0
  %96 = bitcast %"class.blink::Node"* %89 to %"class.blink::Element"*
  br i1 %95, label %97, label %331

97:                                               ; preds = %91
  %98 = call dereferenceable(24) %"class.WTF::HashMap.3359"* @_ZN5blink29GetAXSparseAttributeSetterMapEv() #22
  %99 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %89, i64 1, i32 3
  %100 = bitcast %"class.blink::Member.320"* %99 to %"class.blink::ElementData"**
  %101 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %100, align 8
  %102 = icmp eq %"class.blink::ElementData"* %101, null
  br i1 %102, label %120, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %101, i64 0, i32 0, i32 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = and i32 %105, 1
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %115, label %108

108:                                              ; preds = %103
  %109 = bitcast %"class.blink::ElementData"* %101 to %"class.blink::UniqueElementData"*
  %110 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %101, i64 1, i32 1
  %111 = bitcast %"class.blink::Member.354"* %110 to %"class.blink::Attribute"**
  %112 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %109, i64 0, i32 2, i32 0, i32 0, i32 2
  %114 = load i32, i32* %113, align 4
  br label %120

115:                                              ; preds = %103
  %116 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %101, i64 1
  %117 = bitcast %"class.blink::ElementData"* %116 to %"class.blink::Attribute"*
  %118 = lshr i32 %105, 1
  %119 = and i32 %118, 268435455
  br label %120

120:                                              ; preds = %97, %108, %115
  %121 = phi i32 [ 0, %97 ], [ %119, %115 ], [ %114, %108 ]
  %122 = phi %"class.blink::Attribute"* [ null, %97 ], [ %117, %115 ], [ %112, %108 ]
  %123 = bitcast %"class.WTF::HashSet.3364"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #22
  %124 = getelementptr inbounds %"class.WTF::HashSet.3364", %"class.WTF::HashSet.3364"* %6, i64 0, i32 0, i32 0
  %125 = getelementptr inbounds %"class.WTF::HashSet.3364", %"class.WTF::HashSet.3364"* %6, i64 0, i32 0, i32 1
  %126 = bitcast %"class.WTF::HashSet.3364"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %123, i8 0, i64 20, i1 false) #22
  %127 = zext i32 %121 to i64
  %128 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %122, i64 %127
  %129 = icmp eq i32 %121, 0
  br i1 %129, label %141, label %130

130:                                              ; preds = %120
  %131 = getelementptr inbounds %"class.WTF::HashSet.3364", %"class.WTF::HashSet.3364"* %6, i64 0, i32 0
  %132 = bitcast %"class.base::RepeatingCallback.3368"* %7 to i8*
  %133 = getelementptr inbounds %"class.base::RepeatingCallback.3368", %"class.base::RepeatingCallback.3368"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %134 = getelementptr inbounds %"class.WTF::HashMap.3359", %"class.WTF::HashMap.3359"* %98, i64 0, i32 0
  %135 = getelementptr inbounds %"class.base::RepeatingCallback.3368", %"class.base::RepeatingCallback.3368"* %7, i64 0, i32 0
  %136 = bitcast %"class.base::RepeatingCallback.3368"* %4 to i8*
  %137 = getelementptr inbounds %"class.base::RepeatingCallback.3368", %"class.base::RepeatingCallback.3368"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %138 = getelementptr inbounds %"class.base::RepeatingCallback.3368", %"class.base::RepeatingCallback.3368"* %4, i64 0, i32 0
  %139 = getelementptr inbounds %"class.base::RepeatingCallback.3368", %"class.base::RepeatingCallback.3368"* %4, i64 0, i32 0, i32 0
  %140 = getelementptr inbounds %"class.base::RepeatingCallback.3368", %"class.base::RepeatingCallback.3368"* %7, i64 0, i32 0, i32 0
  br label %143

141:                                              ; preds = %160, %120
  %142 = call zeroext i1 @_ZNK5blink7Element18DidAttachInternalsEv(%"class.blink::Element"* nonnull %96) #22
  br i1 %142, label %163, label %310

143:                                              ; preds = %130, %160
  %144 = phi %"class.blink::Attribute"* [ %122, %130 ], [ %161, %160 ]
  %145 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %144, i64 0, i32 0
  %146 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.3365"* nonnull %131, %"class.blink::QualifiedName"* dereferenceable(8) %145, %"class.blink::QualifiedName"* dereferenceable(8) %145) #22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #22
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %133, align 8
  %147 = call %"struct.WTF::KeyValuePair.3363"* @_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_N4base17RepeatingCallbackIFvPNS1_8AXObjectEPN2ui10AXNodeDataERKNS_12AtomicStringEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSK_ISF_EEEESL_NS_18PartitionAllocatorEE6LookupERKS2_(%"class.WTF::HashTable.3360"* %134, %"class.blink::QualifiedName"* dereferenceable(8) %145) #22, !noalias !7
  %148 = icmp eq %"struct.WTF::KeyValuePair.3363"* %147, null
  br i1 %148, label %149, label %150

149:                                              ; preds = %143
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #22, !noalias !7
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %137, align 8, !alias.scope !10, !noalias !7
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %135, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %138) #22
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %139) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #22, !noalias !7
  br label %152

150:                                              ; preds = %143
  %151 = getelementptr inbounds %"struct.WTF::KeyValuePair.3363", %"struct.WTF::KeyValuePair.3363"* %147, i64 0, i32 1, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %135, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %151) #22
  br label %152

152:                                              ; preds = %149, %150
  %153 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %133, align 8
  %154 = icmp eq %"class.base::internal::BindStateBase"* %153, null
  br i1 %154, label %160, label %155

155:                                              ; preds = %152
  %156 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %144, i64 0, i32 1
  %157 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %153, i64 0, i32 1
  %158 = bitcast void ()** %157 to void (%"class.base::internal::BindStateBase"*, %"class.blink::AXObject"*, %"struct.ui::AXNodeData"*, %"class.WTF::AtomicString"*)**
  %159 = load void (%"class.base::internal::BindStateBase"*, %"class.blink::AXObject"*, %"struct.ui::AXNodeData"*, %"class.WTF::AtomicString"*)*, void (%"class.base::internal::BindStateBase"*, %"class.blink::AXObject"*, %"struct.ui::AXNodeData"*, %"class.WTF::AtomicString"*)** %158, align 8
  call void %159(%"class.base::internal::BindStateBase"* nonnull %153, %"class.blink::AXObject"* %0, %"struct.ui::AXNodeData"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %156) #22
  br label %160

160:                                              ; preds = %152, %155
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %140) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #22
  %161 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %144, i64 1
  %162 = icmp eq %"class.blink::Attribute"* %161, %128
  br i1 %162, label %141, label %143

163:                                              ; preds = %141
  %164 = call dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"* nonnull %96) #22
  %165 = call dereferenceable(24) %"class.WTF::HashMap.3369"* @_ZNK5blink16ElementInternals13GetAttributesEv(%"class.blink::ElementInternals"* %164) #22
  %166 = getelementptr inbounds %"class.WTF::HashMap.3369", %"class.WTF::HashMap.3369"* %165, i64 0, i32 0, i32 2
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::HashMap.3369", %"class.WTF::HashMap.3369"* %165, i64 0, i32 0, i32 0
  %170 = load %"struct.WTF::KeyValuePair.3373"*, %"struct.WTF::KeyValuePair.3373"** %169, align 8
  %171 = getelementptr inbounds %"class.WTF::HashMap.3369", %"class.WTF::HashMap.3369"* %165, i64 0, i32 0, i32 1
  %172 = load i32, i32* %171, align 8
  %173 = zext i32 %172 to i64
  %174 = getelementptr inbounds %"struct.WTF::KeyValuePair.3373", %"struct.WTF::KeyValuePair.3373"* %170, i64 %173
  br i1 %168, label %310, label %175

175:                                              ; preds = %163
  %176 = icmp eq i32 %172, 0
  br i1 %176, label %191, label %177

177:                                              ; preds = %175
  %178 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %179 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %178, i64 0, i32 0, i32 0
  %180 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %179, align 8
  br label %181

181:                                              ; preds = %188, %177
  %182 = phi %"struct.WTF::KeyValuePair.3373"* [ %170, %177 ], [ %189, %188 ]
  %183 = getelementptr inbounds %"struct.WTF::KeyValuePair.3373", %"struct.WTF::KeyValuePair.3373"* %182, i64 0, i32 0, i32 0, i32 0
  %184 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %183, align 8
  %185 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %184, %180
  %186 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %184, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %187 = or i1 %186, %185
  br i1 %187, label %188, label %191

188:                                              ; preds = %181
  %189 = getelementptr inbounds %"struct.WTF::KeyValuePair.3373", %"struct.WTF::KeyValuePair.3373"* %182, i64 1
  %190 = icmp eq %"struct.WTF::KeyValuePair.3373"* %189, %174
  br i1 %190, label %310, label %181

191:                                              ; preds = %181, %175
  %192 = phi %"struct.WTF::KeyValuePair.3373"* [ %170, %175 ], [ %182, %181 ]
  %193 = icmp eq %"struct.WTF::KeyValuePair.3373"* %192, %174
  br i1 %193, label %310, label %194

194:                                              ; preds = %191
  %195 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %196 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %195, i64 0, i32 0, i32 0
  %197 = bitcast %"class.base::RepeatingCallback.3368"* %8 to i8*
  %198 = getelementptr inbounds %"class.base::RepeatingCallback.3368", %"class.base::RepeatingCallback.3368"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %199 = getelementptr inbounds %"class.WTF::HashMap.3359", %"class.WTF::HashMap.3359"* %98, i64 0, i32 0
  %200 = getelementptr inbounds %"class.base::RepeatingCallback.3368", %"class.base::RepeatingCallback.3368"* %8, i64 0, i32 0
  %201 = bitcast %"class.base::RepeatingCallback.3368"* %3 to i8*
  %202 = getelementptr inbounds %"class.base::RepeatingCallback.3368", %"class.base::RepeatingCallback.3368"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %203 = getelementptr inbounds %"class.base::RepeatingCallback.3368", %"class.base::RepeatingCallback.3368"* %3, i64 0, i32 0
  %204 = getelementptr inbounds %"class.base::RepeatingCallback.3368", %"class.base::RepeatingCallback.3368"* %3, i64 0, i32 0, i32 0
  %205 = getelementptr inbounds %"class.base::RepeatingCallback.3368", %"class.base::RepeatingCallback.3368"* %8, i64 0, i32 0, i32 0
  %206 = getelementptr inbounds %"class.WTF::HashMap.3369", %"class.WTF::HashMap.3369"* %165, i64 0, i32 0
  %207 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %208

208:                                              ; preds = %194, %308
  %209 = phi %"struct.WTF::KeyValuePair.3373"* [ %192, %194 ], [ %299, %308 ]
  %210 = getelementptr inbounds %"struct.WTF::KeyValuePair.3373", %"struct.WTF::KeyValuePair.3373"* %209, i64 0, i32 0
  %211 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %124, align 8
  %212 = icmp eq %"class.blink::QualifiedName"* %211, null
  br i1 %212, label %274, label %213

213:                                              ; preds = %208
  %214 = load i32, i32* %125, align 8
  %215 = add i32 %214, -1
  %216 = zext i32 %215 to i64
  %217 = getelementptr inbounds %"struct.WTF::KeyValuePair.3373", %"struct.WTF::KeyValuePair.3373"* %209, i64 0, i32 0, i32 0, i32 0
  %218 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %217, align 8
  %219 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %218, i64 0, i32 1
  %220 = load i32, i32* %219, align 4
  %221 = and i32 %220, 16777215
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %229

223:                                              ; preds = %213
  %224 = call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %218) #22
  %225 = load i32, i32* %219, align 4
  %226 = and i32 %224, 16777215
  %227 = and i32 %225, -16777216
  %228 = or i32 %227, %226
  store i32 %228, i32* %219, align 4
  br label %229

229:                                              ; preds = %223, %213
  %230 = phi i32 [ %221, %213 ], [ %226, %223 ]
  %231 = and i32 %230, %215
  %232 = zext i32 %231 to i64
  %233 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %211, i64 %232
  %234 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %233, i64 0, i32 0, i32 0
  %235 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %234, align 8
  %236 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %196, align 8
  %237 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %235, %236
  br i1 %237, label %274, label %238

238:                                              ; preds = %229
  %239 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %217, align 8
  %240 = xor i32 %230, -1
  %241 = lshr i32 %230, 23
  %242 = add nsw i32 %241, %240
  %243 = shl i32 %242, 12
  %244 = xor i32 %243, %242
  %245 = lshr i32 %244, 7
  %246 = xor i32 %245, %244
  %247 = shl i32 %246, 2
  %248 = xor i32 %247, %246
  %249 = lshr i32 %248, 20
  %250 = xor i32 %249, %248
  %251 = or i32 %250, 1
  %252 = zext i32 %251 to i64
  br label %253

253:                                              ; preds = %263, %238
  %254 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %235, %238 ], [ %270, %263 ]
  %255 = phi %"class.blink::QualifiedName"* [ %233, %238 ], [ %268, %263 ]
  %256 = phi i64 [ %232, %238 ], [ %267, %263 ]
  %257 = phi i64 [ 0, %238 ], [ %265, %263 ]
  %258 = bitcast %"class.blink::QualifiedName"* %255 to i8**
  %259 = load i8*, i8** %258, align 8
  %260 = icmp ne i8* %259, inttoptr (i64 -1 to i8*)
  %261 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %254, %239
  %262 = and i1 %261, %260
  br i1 %262, label %272, label %263

263:                                              ; preds = %253
  %264 = icmp eq i64 %257, 0
  %265 = select i1 %264, i64 %252, i64 %257
  %266 = add i64 %265, %256
  %267 = and i64 %266, %216
  %268 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %211, i64 %267
  %269 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %268, i64 0, i32 0, i32 0
  %270 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %269, align 8
  %271 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %270, %236
  br i1 %271, label %274, label %253

272:                                              ; preds = %253
  %273 = icmp eq %"class.blink::QualifiedName"* %255, null
  br i1 %273, label %274, label %293

274:                                              ; preds = %263, %272, %229, %208
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %197) #22
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %198, align 8
  %275 = call %"struct.WTF::KeyValuePair.3363"* @_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_N4base17RepeatingCallbackIFvPNS1_8AXObjectEPN2ui10AXNodeDataERKNS_12AtomicStringEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSK_ISF_EEEESL_NS_18PartitionAllocatorEE6LookupERKS2_(%"class.WTF::HashTable.3360"* %199, %"class.blink::QualifiedName"* dereferenceable(8) %210) #22, !noalias !13
  %276 = icmp eq %"struct.WTF::KeyValuePair.3363"* %275, null
  br i1 %276, label %277, label %278

277:                                              ; preds = %274
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %201) #22, !noalias !13
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %202, align 8, !alias.scope !16, !noalias !13
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %200, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %203) #22
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %204) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %201) #22, !noalias !13
  br label %280

278:                                              ; preds = %274
  %279 = getelementptr inbounds %"struct.WTF::KeyValuePair.3363", %"struct.WTF::KeyValuePair.3363"* %275, i64 0, i32 1, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %200, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %279) #22
  br label %280

280:                                              ; preds = %277, %278
  %281 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %198, align 8
  %282 = icmp eq %"class.base::internal::BindStateBase"* %281, null
  br i1 %282, label %292, label %283

283:                                              ; preds = %280
  %284 = call %"struct.WTF::KeyValuePair.3373"* @_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6LookupERKS2_(%"class.WTF::HashTable.3370"* %206, %"class.blink::QualifiedName"* dereferenceable(8) %210) #22
  %285 = icmp eq %"struct.WTF::KeyValuePair.3373"* %284, null
  %286 = getelementptr inbounds %"struct.WTF::KeyValuePair.3373", %"struct.WTF::KeyValuePair.3373"* %284, i64 0, i32 1
  %287 = select i1 %285, %"class.WTF::AtomicString"* %207, %"class.WTF::AtomicString"* %286
  %288 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %198, align 8
  %289 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %288, i64 0, i32 1
  %290 = bitcast void ()** %289 to void (%"class.base::internal::BindStateBase"*, %"class.blink::AXObject"*, %"struct.ui::AXNodeData"*, %"class.WTF::AtomicString"*)**
  %291 = load void (%"class.base::internal::BindStateBase"*, %"class.blink::AXObject"*, %"struct.ui::AXNodeData"*, %"class.WTF::AtomicString"*)*, void (%"class.base::internal::BindStateBase"*, %"class.blink::AXObject"*, %"struct.ui::AXNodeData"*, %"class.WTF::AtomicString"*)** %290, align 8
  call void %291(%"class.base::internal::BindStateBase"* %288, %"class.blink::AXObject"* %0, %"struct.ui::AXNodeData"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %287) #22
  br label %292

292:                                              ; preds = %280, %283
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %205) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %197) #22
  br label %293

293:                                              ; preds = %272, %292
  %294 = getelementptr inbounds %"struct.WTF::KeyValuePair.3373", %"struct.WTF::KeyValuePair.3373"* %209, i64 1
  %295 = icmp eq %"struct.WTF::KeyValuePair.3373"* %294, %174
  br i1 %295, label %310, label %296

296:                                              ; preds = %293
  %297 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %196, align 8
  br label %298

298:                                              ; preds = %305, %296
  %299 = phi %"struct.WTF::KeyValuePair.3373"* [ %294, %296 ], [ %306, %305 ]
  %300 = getelementptr inbounds %"struct.WTF::KeyValuePair.3373", %"struct.WTF::KeyValuePair.3373"* %299, i64 0, i32 0, i32 0, i32 0
  %301 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %300, align 8
  %302 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %301, %297
  %303 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %301, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %304 = or i1 %303, %302
  br i1 %304, label %305, label %308

305:                                              ; preds = %298
  %306 = getelementptr inbounds %"struct.WTF::KeyValuePair.3373", %"struct.WTF::KeyValuePair.3373"* %299, i64 1
  %307 = icmp eq %"struct.WTF::KeyValuePair.3373"* %306, %174
  br i1 %307, label %310, label %298

308:                                              ; preds = %298
  %309 = icmp eq %"struct.WTF::KeyValuePair.3373"* %299, %174
  br i1 %309, label %310, label %208

310:                                              ; preds = %188, %293, %308, %305, %163, %191, %141
  %311 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %124, align 8
  %312 = icmp eq %"class.blink::QualifiedName"* %311, null
  br i1 %312, label %330, label %313, !prof !19

313:                                              ; preds = %310
  %314 = load i32, i32* %125, align 8
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %328, label %316

316:                                              ; preds = %313
  %317 = zext i32 %314 to i64
  br label %318

318:                                              ; preds = %325, %316
  %319 = phi i64 [ 0, %316 ], [ %326, %325 ]
  %320 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %311, i64 %319
  %321 = bitcast %"class.blink::QualifiedName"* %320 to i8**
  %322 = load i8*, i8** %321, align 8
  %323 = icmp eq i8* %322, inttoptr (i64 -1 to i8*)
  br i1 %323, label %325, label %324

324:                                              ; preds = %318
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %320) #22
  br label %325

325:                                              ; preds = %324, %318
  %326 = add nuw nsw i64 %319, 1
  %327 = icmp eq i64 %326, %317
  br i1 %327, label %328, label %318

328:                                              ; preds = %325, %313
  %329 = bitcast %"class.blink::QualifiedName"* %311 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %329) #22
  store %"class.blink::QualifiedName"* null, %"class.blink::QualifiedName"** %124, align 8
  br label %330

330:                                              ; preds = %310, %328
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #22
  br label %331

331:                                              ; preds = %91, %84, %330
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject17IsAtomicTextFieldEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %3, i64 124
  %5 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::Node"* %5(%"class.blink::AXObject"* %0) #22
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 12
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::Node"* %6 to %"class.blink::Element"*
  %15 = bitcast %"class.blink::Node"* %6 to i1 (%"class.blink::Element"*)***
  %16 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %16, i64 126
  %18 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::Element"* nonnull %14) #22
  br label %20

20:                                               ; preds = %1, %8, %13
  %21 = phi i1 [ false, %1 ], [ false, %8 ], [ %19, %13 ]
  ret i1 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink11AXSelection20FromCurrentSelectionERKNS_18TextControlElementE(%"class.blink::AXSelection"* sret, %"class.blink::TextControlElement"* dereferenceable(248)) local_unnamed_addr #6

declare zeroext i1 @_ZNK5blink10AXPosition14IsTextPositionEv(%"class.blink::AXPosition"*) local_unnamed_addr #6

declare i32 @_ZNK5blink10AXPosition10TextOffsetEv(%"class.blink::AXPosition"*) local_unnamed_addr #6

declare i32 @_ZNK5blink10AXPosition10ChildIndexEv(%"class.blink::AXPosition"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11AXSelectionD2Ev(%"class.blink::AXSelection"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #22
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #22
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %47, label %28

28:                                               ; preds = %24
  %29 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %30 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %29, i64 0, i32 1
  %31 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %30) #22
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %35, !prof !3

33:                                               ; preds = %28
  %34 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %30, i8* %34) #22
  br label %35

35:                                               ; preds = %33, %28
  %36 = phi i8* [ %34, %33 ], [ %31, %28 ]
  %37 = bitcast i8* %36 to %"class.blink::ThreadState"**
  %38 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  %40 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %39, align 8
  %41 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %42 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %40, i64 0, i32 0, i32 0
  %43 = bitcast %"class.blink::PersistentRegion"* %40 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.blink::PersistentNode"* %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %41, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %46, align 8
  store %"class.blink::PersistentNode"* %41, %"class.blink::PersistentNode"** %42, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %25, align 8
  br label %47

47:                                               ; preds = %24, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject21IsScrollableContainerEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)**, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %3, i64 144
  %5 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::ScrollableArea"* %5(%"class.blink::AXObject"* %0) #22
  %7 = icmp ne %"class.blink::ScrollableArea"* %6, null
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8AXObject25SerializeScrollAttributesEPN2ui10AXNodeDataE(%"class.blink::AXObject"*, %"struct.ui::AXNodeData"*) local_unnamed_addr #2 align 2 {
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject16IsUserScrollableEv(%"class.blink::AXObject"* %0)
  tail call void @_ZN2ui10AXNodeData16AddBoolAttributeEN2ax5mojom13BoolAttributeEb(%"struct.ui::AXNodeData"* %1, i32 9, i1 zeroext %3) #22
  %4 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)***
  %5 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)**, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %5, i64 144
  %7 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %6, align 8
  %8 = tail call %"class.blink::ScrollableArea"* %7(%"class.blink::AXObject"* %0) #22
  %9 = icmp eq %"class.blink::ScrollableArea"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::ScrollableArea"* %8 to i64 (%"class.blink::ScrollableArea"*)***
  %12 = load i64 (%"class.blink::ScrollableArea"*)**, i64 (%"class.blink::ScrollableArea"*)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %12, i64 46
  %14 = load i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %13, align 8
  %15 = tail call i64 %14(%"class.blink::ScrollableArea"* nonnull %8) #22
  %16 = load i64 (%"class.blink::ScrollableArea"*)**, i64 (%"class.blink::ScrollableArea"*)*** %11, align 8
  %17 = getelementptr inbounds i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %16, i64 46
  %18 = load i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %17, align 8
  %19 = tail call i64 %18(%"class.blink::ScrollableArea"* nonnull %8) #22
  %20 = lshr i64 %19, 32
  %21 = trunc i64 %20 to i32
  %22 = trunc i64 %15 to i32
  br label %23

23:                                               ; preds = %2, %10
  %24 = phi i32 [ %22, %10 ], [ 0, %2 ]
  %25 = phi i32 [ %21, %10 ], [ 0, %2 ]
  tail call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 2, i32 %24) #22
  tail call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 5, i32 %25) #22
  %26 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)**, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*** %4, align 8
  %27 = getelementptr inbounds %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %26, i64 144
  %28 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %27, align 8
  %29 = tail call %"class.blink::ScrollableArea"* %28(%"class.blink::AXObject"* %0) #22
  %30 = icmp eq %"class.blink::ScrollableArea"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %23
  %32 = bitcast %"class.blink::ScrollableArea"* %29 to i64 (%"class.blink::ScrollableArea"*)***
  %33 = load i64 (%"class.blink::ScrollableArea"*)**, i64 (%"class.blink::ScrollableArea"*)*** %32, align 8
  %34 = getelementptr inbounds i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %33, i64 48
  %35 = load i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %34, align 8
  %36 = tail call i64 %35(%"class.blink::ScrollableArea"* nonnull %29) #22
  %37 = load i64 (%"class.blink::ScrollableArea"*)**, i64 (%"class.blink::ScrollableArea"*)*** %32, align 8
  %38 = getelementptr inbounds i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %37, i64 48
  %39 = load i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %38, align 8
  %40 = tail call i64 %39(%"class.blink::ScrollableArea"* nonnull %29) #22
  %41 = lshr i64 %40, 32
  %42 = trunc i64 %41 to i32
  %43 = trunc i64 %36 to i32
  br label %44

44:                                               ; preds = %23, %31
  %45 = phi i32 [ %43, %31 ], [ 0, %23 ]
  %46 = phi i32 [ %42, %31 ], [ 0, %23 ]
  tail call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 3, i32 %45) #22
  tail call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 6, i32 %46) #22
  %47 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)**, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*** %4, align 8
  %48 = getelementptr inbounds %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %47, i64 144
  %49 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %48, align 8
  %50 = tail call %"class.blink::ScrollableArea"* %49(%"class.blink::AXObject"* %0) #22
  %51 = icmp eq %"class.blink::ScrollableArea"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %44
  %53 = bitcast %"class.blink::ScrollableArea"* %50 to i64 (%"class.blink::ScrollableArea"*)***
  %54 = load i64 (%"class.blink::ScrollableArea"*)**, i64 (%"class.blink::ScrollableArea"*)*** %53, align 8
  %55 = getelementptr inbounds i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %54, i64 50
  %56 = load i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %55, align 8
  %57 = tail call i64 %56(%"class.blink::ScrollableArea"* nonnull %50) #22
  %58 = load i64 (%"class.blink::ScrollableArea"*)**, i64 (%"class.blink::ScrollableArea"*)*** %53, align 8
  %59 = getelementptr inbounds i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %58, i64 50
  %60 = load i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %59, align 8
  %61 = tail call i64 %60(%"class.blink::ScrollableArea"* nonnull %50) #22
  %62 = lshr i64 %61, 32
  %63 = trunc i64 %62 to i32
  %64 = trunc i64 %57 to i32
  br label %65

65:                                               ; preds = %44, %52
  %66 = phi i32 [ %64, %52 ], [ 0, %44 ]
  %67 = phi i32 [ %63, %52 ], [ 0, %44 ]
  tail call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 4, i32 %66) #22
  tail call void @_ZN2ui10AXNodeData15AddIntAttributeEN2ax5mojom12IntAttributeEi(%"struct.ui::AXNodeData"* %1, i32 7, i32 %67) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8AXObject31SerializeChooserPopupAttributesEPN2ui10AXNodeDataE(%"class.blink::AXObject"*, %"struct.ui::AXNodeData"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::vector.3322", align 8
  %4 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::AXObject"* (%"class.blink::AXObject"*)***
  %5 = load %"class.blink::AXObject"* (%"class.blink::AXObject"*)**, %"class.blink::AXObject"* (%"class.blink::AXObject"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::AXObject"* (%"class.blink::AXObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXObject"*)** %5, i64 82
  %7 = load %"class.blink::AXObject"* (%"class.blink::AXObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXObject"*)** %6, align 8
  %8 = tail call %"class.blink::AXObject"* %7(%"class.blink::AXObject"* %0) #22
  %9 = icmp eq %"class.blink::AXObject"* %8, null
  br i1 %9, label %116, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = bitcast %"class.std::__1::vector.3322"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #22
  %14 = getelementptr inbounds %"class.std::__1::vector.3322", %"class.std::__1::vector.3322"* %3, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::vector.3322", %"class.std::__1::vector.3322"* %3, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.std::__1::vector.3322", %"class.std::__1::vector.3322"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = tail call dereferenceable(24) %"class.std::__1::vector.3322"* @_ZNK2ui10AXNodeData19GetIntListAttributeEN2ax5mojom16IntListAttributeE(%"struct.ui::AXNodeData"* %1, i32 2) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #22
  %18 = getelementptr inbounds %"class.std::__1::vector.3322", %"class.std::__1::vector.3322"* %17, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.3322"* %17 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = ashr exact i64 %23, 2
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %57, label %26

26:                                               ; preds = %10
  %27 = icmp ugt i64 %24, 4611686018427387903
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast %"class.std::__1::vector.3322"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %29) #21
  unreachable

30:                                               ; preds = %26
  %31 = tail call i8* @_Znwm(i64 %23) #23
  %32 = bitcast i8* %31 to i32*
  %33 = bitcast i32** %15 to i8**
  store i8* %31, i8** %33, align 8
  %34 = bitcast %"class.std::__1::vector.3322"* %3 to i8**
  store i8* %31, i8** %34, align 8
  %35 = getelementptr inbounds i32, i32* %32, i64 %24
  store i32* %35, i32** %16, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector.3322", %"class.std::__1::vector.3322"* %17, i64 0, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = load i64, i64* %19, align 8
  %39 = bitcast i32** %15 to i64*
  %40 = ptrtoint i8* %31 to i64
  %41 = ptrtoint i32* %37 to i64
  %42 = sub i64 %38, %41
  %43 = icmp sgt i64 %42, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %30
  %45 = lshr exact i64 %42, 2
  %46 = bitcast i32* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %31, i8* align 4 %46, i64 %42, i1 false) #22
  %47 = getelementptr inbounds i32, i32* %32, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %30, %44
  %50 = phi i64 [ %48, %44 ], [ %40, %30 ]
  store i64 %50, i64* %39, align 8
  %51 = inttoptr i64 %50 to i32*
  %52 = icmp eq i32* %35, %51
  br i1 %52, label %57, label %53

53:                                               ; preds = %49
  store i32 %12, i32* %51, align 4
  %54 = getelementptr inbounds i32, i32* %51, i64 1
  %55 = ptrtoint i32* %54 to i64
  %56 = bitcast i32** %15 to i64*
  store i64 %55, i64* %56, align 8
  br label %108

57:                                               ; preds = %10, %49
  %58 = phi i32* [ %35, %49 ], [ null, %10 ]
  %59 = phi i64 [ %40, %49 ], [ 0, %10 ]
  %60 = phi i32* [ %32, %49 ], [ null, %10 ]
  %61 = phi i8* [ %31, %49 ], [ null, %10 ]
  %62 = phi i64 [ %50, %49 ], [ 0, %10 ]
  %63 = ptrtoint i32* %58 to i64
  %64 = bitcast i32** %15 to i64*
  %65 = bitcast %"class.std::__1::vector.3322"* %3 to i64*
  %66 = sub i64 %63, %59
  %67 = ashr exact i64 %66, 2
  %68 = add nsw i64 %67, 1
  %69 = icmp ugt i64 %68, 4611686018427387903
  br i1 %69, label %70, label %72

70:                                               ; preds = %57
  %71 = bitcast %"class.std::__1::vector.3322"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %71) #21
  unreachable

72:                                               ; preds = %57
  %73 = bitcast i32** %16 to i64*
  %74 = icmp ult i64 %67, 2305843009213693951
  br i1 %74, label %75, label %83

75:                                               ; preds = %72
  %76 = ashr exact i64 %66, 1
  %77 = icmp ult i64 %76, %68
  %78 = select i1 %77, i64 %68, i64 %76
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %88, label %80

80:                                               ; preds = %75
  %81 = icmp ugt i64 %78, 4611686018427387903
  br i1 %81, label %82, label %83

82:                                               ; preds = %80
  tail call void @abort() #21
  unreachable

83:                                               ; preds = %80, %72
  %84 = phi i64 [ %78, %80 ], [ 4611686018427387903, %72 ]
  %85 = shl i64 %84, 2
  %86 = tail call i8* @_Znwm(i64 %85) #23
  %87 = bitcast i8* %86 to i32*
  br label %88

88:                                               ; preds = %83, %75
  %89 = phi i64 [ %84, %83 ], [ 0, %75 ]
  %90 = phi i32* [ %87, %83 ], [ null, %75 ]
  %91 = getelementptr inbounds i32, i32* %90, i64 %67
  %92 = getelementptr inbounds i32, i32* %90, i64 %89
  %93 = ptrtoint i32* %92 to i64
  store i32 %12, i32* %91, align 4
  %94 = getelementptr inbounds i32, i32* %91, i64 1
  %95 = ptrtoint i32* %94 to i64
  %96 = ptrtoint i32* %60 to i64
  %97 = sub i64 %62, %96
  %98 = ashr exact i64 %97, 2
  %99 = sub nsw i64 0, %98
  %100 = getelementptr inbounds i32, i32* %91, i64 %99
  %101 = ptrtoint i32* %100 to i64
  %102 = icmp sgt i64 %97, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %88
  %104 = bitcast i32* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %61, i64 %97, i1 false) #22
  br label %105

105:                                              ; preds = %103, %88
  store i64 %101, i64* %65, align 8
  store i64 %95, i64* %64, align 8
  store i64 %93, i64* %73, align 8
  %106 = icmp eq i32* %60, null
  br i1 %106, label %108, label %107

107:                                              ; preds = %105
  tail call void @_ZdlPv(i8* %61) #23
  br label %108

108:                                              ; preds = %53, %105, %107
  call void @_ZN2ui10AXNodeData19AddIntListAttributeEN2ax5mojom16IntListAttributeERKNSt3__16vectorIiNS4_9allocatorIiEEEE(%"struct.ui::AXNodeData"* %1, i32 2, %"class.std::__1::vector.3322"* nonnull dereferenceable(24) %3) #22
  %109 = load i32*, i32** %14, align 8
  %110 = icmp eq i32* %109, null
  br i1 %110, label %115, label %111

111:                                              ; preds = %108
  %112 = ptrtoint i32* %109 to i64
  %113 = bitcast i32** %15 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast i32* %109 to i8*
  call void @_ZdlPv(i8* %114) #23
  br label %115

115:                                              ; preds = %108, %111
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #22
  br label %116

116:                                              ; preds = %2, %115
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8AXObject26SerializeElementAttributesEPN2ui10AXNodeDataE(%"class.blink::AXObject"*, %"struct.ui::AXNodeData"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %8 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %8, i64 124
  %10 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %9, align 8
  %11 = tail call %"class.blink::Node"* %10(%"class.blink::AXObject"* %0) #22
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %176, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %11, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 12
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::Node"* %11 to %"class.blink::Element"*
  br i1 %17, label %19, label %176

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %11, i64 1, i32 3
  %21 = bitcast %"class.blink::Member.320"* %20 to %"class.blink::ElementData"**
  %22 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %21, align 8
  %23 = icmp eq %"class.blink::ElementData"* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %22, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %25, align 8
  %27 = icmp eq %"class.blink::SpaceSplitString::Data"* %26, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %24, %19
  %29 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %88

30:                                               ; preds = %24
  %31 = and i32 %15, 48
  %32 = icmp eq i32 %31, 32
  %33 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kClassAttrE, align 8
  br i1 %32, label %34, label %36

34:                                               ; preds = %30
  %35 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %33) #22
  br label %88

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %22, i64 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.blink::ElementData"* %22 to %"class.blink::UniqueElementData"*
  %43 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %22, i64 1, i32 1
  %44 = bitcast %"class.blink::Member.354"* %43 to %"class.blink::Attribute"**
  %45 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %42, i64 0, i32 2, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  br label %53

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %22, i64 1
  %50 = bitcast %"class.blink::ElementData"* %49 to %"class.blink::Attribute"*
  %51 = lshr i32 %38, 1
  %52 = and i32 %51, 268435455
  br label %53

53:                                               ; preds = %48, %41
  %54 = phi %"class.blink::Attribute"* [ %50, %48 ], [ %45, %41 ]
  %55 = phi i32 [ %52, %48 ], [ %47, %41 ]
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %54, i64 %56
  %58 = icmp eq i32 %55, 0
  br i1 %58, label %86, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %33, i64 0, i32 0, i32 0
  %61 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %61, i64 0, i32 3, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %61, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %64

64:                                               ; preds = %79, %59
  %65 = phi %"class.blink::Attribute"* [ %54, %59 ], [ %80, %79 ]
  %66 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %66, align 8
  %68 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %67, %61
  br i1 %68, label %82, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %67, i64 0, i32 3, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %71, %72
  br i1 %73, label %74, label %79

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %67, i64 0, i32 4, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %76, %77
  br i1 %78, label %82, label %79

79:                                               ; preds = %74, %69
  %80 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %65, i64 1
  %81 = icmp eq %"class.blink::Attribute"* %80, %57
  br i1 %81, label %86, label %64

82:                                               ; preds = %74, %64
  %83 = icmp eq %"class.blink::Attribute"* %65, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %65, i64 0, i32 1
  br label %88

86:                                               ; preds = %79, %82, %53
  %87 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %88

88:                                               ; preds = %28, %34, %84, %86
  %89 = phi %"class.WTF::AtomicString"* [ %35, %34 ], [ %29, %28 ], [ %87, %86 ], [ %85, %84 ]
  %90 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %123, label %93

93:                                               ; preds = %88
  %94 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #22
  %95 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %89, i64 0, i32 0
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.WTF::String"* %95, i32 0) #22
  %96 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = zext i8 %98 to i64
  %103 = select i1 %99, i64 %101, i64 %102
  %104 = icmp ugt i64 %103, 10000
  br i1 %104, label %105, label %115

105:                                              ; preds = %93
  %106 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 0, i64 24, i1 false) #22
  call void @_ZN4base22TruncateUTF8ToByteSizeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEmPS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i64 10000, %"class.std::__1::basic_string"* nonnull %4) #22
  call void @_ZN2ui10AXNodeData18AddStringAttributeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.ui::AXNodeData"* %1, i32 8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #22
  %107 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %113) #23
  br label %114

114:                                              ; preds = %111, %105
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #22
  br label %116

115:                                              ; preds = %93
  call void @_ZN2ui10AXNodeData18AddStringAttributeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.ui::AXNodeData"* %1, i32 8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #22
  br label %116

116:                                              ; preds = %114, %115
  %117 = load i8, i8* %97, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  call void @_ZdlPv(i8* %121) #23
  br label %122

122:                                              ; preds = %116, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #22
  br label %123

123:                                              ; preds = %88, %122
  %124 = bitcast %"class.blink::AXObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)***
  %125 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*** %124, align 8
  %126 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %125, i64 5
  %127 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %126, align 8
  %128 = call dereferenceable(8) %"class.WTF::AtomicString"* %127(%"class.blink::AXObject"* %0, i32 13) #22
  %129 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %132, label %141

132:                                              ; preds = %123
  %133 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %134 = load i32, i32* %133, align 4
  %135 = call zeroext i1 @_ZN2ui10IsLandmarkEN2ax5mojom4RoleE(i32 %134) #22
  br i1 %135, label %136, label %139

136:                                              ; preds = %132
  %137 = load i32, i32* %133, align 4
  %138 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink8AXObject12ARIARoleNameEN2ax5mojom4RoleE(i32 %137) #22
  br label %141

139:                                              ; preds = %132
  %140 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %141

141:                                              ; preds = %123, %136, %139
  %142 = phi %"class.WTF::AtomicString"* [ %138, %136 ], [ %140, %139 ], [ %128, %123 ]
  %143 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %142, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %176, label %146

146:                                              ; preds = %141
  %147 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %147) #22
  %148 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %142, i64 0, i32 0
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.WTF::String"* %148, i32 0) #22
  %149 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %150 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %149, i64 0, i32 1, i32 0
  %151 = load i8, i8* %150, align 1
  %152 = icmp slt i8 %151, 0
  %153 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %154 = load i64, i64* %153, align 8
  %155 = zext i8 %151 to i64
  %156 = select i1 %152, i64 %154, i64 %155
  %157 = icmp ugt i64 %156, 10000
  br i1 %157, label %158, label %168

158:                                              ; preds = %146
  %159 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %159) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %159, i8 0, i64 24, i1 false) #22
  call void @_ZN4base22TruncateUTF8ToByteSizeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEmPS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i64 10000, %"class.std::__1::basic_string"* nonnull %3) #22
  call void @_ZN2ui10AXNodeData18AddStringAttributeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.ui::AXNodeData"* %1, i32 25, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #22
  %160 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %160, i64 0, i32 1, i32 0
  %162 = load i8, i8* %161, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %164, label %167

164:                                              ; preds = %158
  %165 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load i8*, i8** %165, align 8
  call void @_ZdlPv(i8* %166) #23
  br label %167

167:                                              ; preds = %164, %158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %159) #22
  br label %169

168:                                              ; preds = %146
  call void @_ZN2ui10AXNodeData18AddStringAttributeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.ui::AXNodeData"* %1, i32 25, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #22
  br label %169

169:                                              ; preds = %167, %168
  %170 = load i8, i8* %150, align 1
  %171 = icmp slt i8 %170, 0
  br i1 %171, label %172, label %175

172:                                              ; preds = %169
  %173 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load i8*, i8** %173, align 8
  call void @_ZdlPv(i8* %174) #23
  br label %175

175:                                              ; preds = %169, %172
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147) #22
  br label %176

176:                                              ; preds = %141, %13, %2, %175
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8AXObject23SerializeHTMLAttributesEPN2ui10AXNodeDataE(%"class.blink::AXObject"*, %"struct.ui::AXNodeData"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"struct.std::__1::pair.3316", align 8
  %7 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %8 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %8, i64 124
  %10 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %9, align 8
  %11 = tail call %"class.blink::Node"* %10(%"class.blink::AXObject"* %0) #22
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %11, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 12
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::Node"* %11 to %"class.blink::Element"*
  %19 = select i1 %17, %"class.blink::Element"* %18, %"class.blink::Element"* null
  br label %20

20:                                               ; preds = %2, %13
  %21 = phi %"class.blink::Element"* [ %19, %13 ], [ null, %2 ]
  %22 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %21, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %22, align 8
  %24 = icmp eq %"class.blink::ElementData"* %23, null
  br i1 %24, label %84, label %25

25:                                               ; preds = %20
  tail call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* %21) #22
  %26 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %22, align 8
  %27 = icmp eq %"class.blink::ElementData"* %26, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %25
  %29 = load i32, i32* null, align 536870912
  br label %42

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %26, i64 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.blink::ElementData"* %26 to %"class.blink::UniqueElementData"*
  %37 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %26, i64 1, i32 1
  %38 = bitcast %"class.blink::Member.354"* %37 to %"class.blink::Attribute"**
  %39 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %36, i64 0, i32 2, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  br label %48

42:                                               ; preds = %30, %28
  %43 = phi i32 [ %29, %28 ], [ %32, %30 ]
  %44 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %26, i64 1
  %45 = bitcast %"class.blink::ElementData"* %44 to %"class.blink::Attribute"*
  %46 = lshr i32 %43, 1
  %47 = and i32 %46, 268435455
  br label %48

48:                                               ; preds = %35, %42
  %49 = phi i32 [ %47, %42 ], [ %41, %35 ]
  %50 = phi %"class.blink::Attribute"* [ %45, %42 ], [ %39, %35 ]
  %51 = zext i32 %49 to i64
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %50, i64 %51
  %53 = icmp eq i32 %49, 0
  br i1 %53, label %84, label %54

54:                                               ; preds = %48
  %55 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  %59 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0
  %61 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %1, i64 0, i32 11
  %67 = bitcast %"struct.std::__1::pair.3316"* %6 to i8*
  %68 = getelementptr inbounds %"struct.std::__1::pair.3316", %"struct.std::__1::pair.3316"* %6, i64 0, i32 0
  %69 = getelementptr inbounds %"struct.std::__1::pair.3316", %"struct.std::__1::pair.3316"* %6, i64 0, i32 1
  %70 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = bitcast %"class.std::__1::basic_string"* %69 to i8*
  %73 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %1, i64 0, i32 11, i32 0, i32 1
  %74 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %1, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %75 = bitcast %"struct.std::__1::pair.3316"** %73 to i64*
  %76 = bitcast %"class.std::__1::basic_string"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = bitcast %"struct.std::__1::pair.3316"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = getelementptr inbounds %"struct.std::__1::pair.3316", %"struct.std::__1::pair.3316"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %83 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  br label %85

84:                                               ; preds = %166, %20, %48
  ret void

85:                                               ; preds = %54, %166
  %86 = phi %"class.blink::Attribute"* [ %50, %54 ], [ %167, %166 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #22
  %87 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %88, i64 0, i32 3
  %90 = call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* %89) #22
  store %"class.WTF::StringImpl"* %90, %"class.WTF::StringImpl"** %59, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* nonnull %60, i32 0) #22
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %85
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #22
  br label %106

106:                                              ; preds = %85, %102, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #22
  %107 = load i8, i8* %62, align 1
  %108 = icmp slt i8 %107, 0
  %109 = load i64, i64* %57, align 8
  %110 = zext i8 %107 to i64
  %111 = select i1 %108, i64 %109, i64 %110
  %112 = icmp eq i64 %111, 5
  br i1 %112, label %113, label %116

113:                                              ; preds = %106
  %114 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i64 5) #22
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %161, label %116

116:                                              ; preds = %106, %113
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #22
  %117 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %86, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 24, i1 false)
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.WTF::String"* %117, i32 0) #22
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %67) #22
  %118 = load i8, i8* %62, align 1, !noalias !20
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %121, label %120

120:                                              ; preds = %116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* nonnull align 8 %55, i64 24, i1 false) #22
  br label %124

121:                                              ; preds = %116
  %122 = load i8*, i8** %56, align 8, !noalias !20
  %123 = load i64, i64* %57, align 8, !noalias !20
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %68, i8* %122, i64 %123) #22
  br label %124

124:                                              ; preds = %121, %120
  %125 = load i8, i8* %71, align 1, !noalias !20
  %126 = icmp slt i8 %125, 0
  br i1 %126, label %128, label %127

127:                                              ; preds = %124
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* nonnull align 8 %63, i64 24, i1 false) #22
  br label %131

128:                                              ; preds = %124
  %129 = load i8*, i8** %64, align 8, !noalias !20
  %130 = load i64, i64* %65, align 8, !noalias !20
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %69, i8* %129, i64 %130) #22
  br label %131

131:                                              ; preds = %127, %128
  %132 = load %"struct.std::__1::pair.3316"*, %"struct.std::__1::pair.3316"** %73, align 8
  %133 = load %"struct.std::__1::pair.3316"*, %"struct.std::__1::pair.3316"** %74, align 8
  %134 = icmp ult %"struct.std::__1::pair.3316"* %132, %133
  br i1 %134, label %135, label %141

135:                                              ; preds = %131
  %136 = bitcast %"struct.std::__1::pair.3316"* %132 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* nonnull align 8 %67, i64 24, i1 false) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 0, i64 24, i1 false) #22
  %137 = getelementptr inbounds %"struct.std::__1::pair.3316", %"struct.std::__1::pair.3316"* %132, i64 0, i32 1
  %138 = bitcast %"class.std::__1::basic_string"* %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %72, i64 24, i1 false) #22
  call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 24, i1 false) #22
  %139 = getelementptr inbounds %"struct.std::__1::pair.3316", %"struct.std::__1::pair.3316"* %132, i64 1
  %140 = ptrtoint %"struct.std::__1::pair.3316"* %139 to i64
  store i64 %140, i64* %75, align 8
  br label %146

141:                                              ; preds = %131
  call void @_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS5_IS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector.3314"* %66, %"struct.std::__1::pair.3316"* nonnull dereferenceable(48) %6) #22
  %142 = load i8, i8* %77, align 1
  %143 = icmp slt i8 %142, 0
  br i1 %143, label %144, label %146

144:                                              ; preds = %141
  %145 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %145) #23
  br label %146

146:                                              ; preds = %135, %144, %141
  %147 = load i8, i8* %80, align 1
  %148 = icmp slt i8 %147, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %146
  %150 = load i8*, i8** %81, align 8
  call void @_ZdlPv(i8* %150) #23
  br label %151

151:                                              ; preds = %146, %149
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %67) #22
  %152 = load i8, i8* %71, align 1
  %153 = icmp slt i8 %152, 0
  br i1 %153, label %154, label %156

154:                                              ; preds = %151
  %155 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %155) #23
  br label %156

156:                                              ; preds = %151, %154
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #22
  %157 = load i8, i8* %62, align 1
  %158 = icmp slt i8 %157, 0
  br i1 %158, label %159, label %166

159:                                              ; preds = %156
  %160 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %160) #23
  br label %166

161:                                              ; preds = %113
  %162 = load i8, i8* %62, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %161
  %165 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %165) #23
  br label %166

166:                                              ; preds = %164, %161, %159, %156
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #22
  %167 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %86, i64 1
  %168 = icmp eq %"class.blink::Attribute"* %167, %52
  br i1 %168, label %84, label %85
}

declare zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8AXObject15AriaColumnCountEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca i8, align 1
  %3 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %4) #22
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = load i32, i32* %3, align 4
  %8 = icmp eq i32 %7, 106
  br i1 %8, label %9, label %42

9:                                                ; preds = %1, %6
  %10 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %11 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %11, i64 124
  %13 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %12, align 8
  %14 = tail call %"class.blink::Node"* %13(%"class.blink::AXObject"* %0) #22
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %42, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 12
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %42

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Node"* %14 to %"class.blink::Element"*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22
  store i8 1, i8* %2, align 1
  %23 = call i32 @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_14AOMIntPropertyERb(%"class.blink::Element"* nonnull %22, i32 0, i8* nonnull dereferenceable(1) %2) #22
  %24 = load i8, i8* %2, align 1, !range !2
  %25 = icmp eq i8 %24, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22
  br i1 %25, label %26, label %42

26:                                               ; preds = %21
  %27 = bitcast %"class.blink::AXObject"* %0 to i32 (%"class.blink::AXObject"*)***
  %28 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %27, align 8
  %29 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %28, i64 133
  %30 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %29, align 8
  %31 = call i32 %30(%"class.blink::AXObject"* %0) #22
  %32 = icmp sgt i32 %23, %31
  br i1 %32, label %42, label %33

33:                                               ; preds = %26
  %34 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %27, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %34, i64 133
  %36 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %35, align 8
  %37 = call i32 %36(%"class.blink::AXObject"* %0) #22
  %38 = icmp ne i32 %23, %37
  %39 = icmp eq i32 %23, -1
  %40 = and i1 %39, %38
  %41 = sext i1 %40 to i32
  br label %42

42:                                               ; preds = %9, %16, %21, %26, %33, %6
  %43 = phi i32 [ 0, %6 ], [ 0, %21 ], [ %23, %26 ], [ %41, %33 ], [ 0, %16 ], [ 0, %9 ]
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8AXObject12AriaRowCountEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca i8, align 1
  %3 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %4) #22
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = load i32, i32* %3, align 4
  %8 = icmp eq i32 %7, 106
  br i1 %8, label %9, label %42

9:                                                ; preds = %1, %6
  %10 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %11 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %11, i64 124
  %13 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %12, align 8
  %14 = tail call %"class.blink::Node"* %13(%"class.blink::AXObject"* %0) #22
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %42, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 12
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %42

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Node"* %14 to %"class.blink::Element"*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22
  store i8 1, i8* %2, align 1
  %23 = call i32 @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_14AOMIntPropertyERb(%"class.blink::Element"* nonnull %22, i32 1, i8* nonnull dereferenceable(1) %2) #22
  %24 = load i8, i8* %2, align 1, !range !2
  %25 = icmp eq i8 %24, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22
  br i1 %25, label %26, label %42

26:                                               ; preds = %21
  %27 = bitcast %"class.blink::AXObject"* %0 to i32 (%"class.blink::AXObject"*)***
  %28 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %27, align 8
  %29 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %28, i64 134
  %30 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %29, align 8
  %31 = call i32 %30(%"class.blink::AXObject"* %0) #22
  %32 = icmp sgt i32 %23, %31
  br i1 %32, label %42, label %33

33:                                               ; preds = %26
  %34 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %27, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %34, i64 134
  %36 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %35, align 8
  %37 = call i32 %36(%"class.blink::AXObject"* %0) #22
  %38 = icmp ne i32 %23, %37
  %39 = icmp eq i32 %23, -1
  %40 = and i1 %39, %38
  %41 = sext i1 %40 to i32
  br label %42

42:                                               ; preds = %9, %16, %21, %26, %33, %6
  %43 = phi i32 [ 0, %6 ], [ 0, %21 ], [ %23, %26 ], [ %41, %33 ], [ 0, %16 ], [ 0, %9 ]
  ret i32 %43
}

declare zeroext i1 @_ZN2ui10IsTableRowEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

declare zeroext i1 @_ZN2ui19IsCellOrTableHeaderEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8AXObject12AriaRowIndexEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true)
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 12
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8AXObject15AriaColumnIndexEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true)
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 11
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

declare zeroext i1 @_ZN2ui13IsTableHeaderEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject16IsUserScrollableEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 145
  br i1 %4, label %5, label %48

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)***
  %7 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)**, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %7, i64 144
  %9 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %8, align 8
  %10 = tail call %"class.blink::ScrollableArea"* %9(%"class.blink::AXObject"* %0) #22
  %11 = icmp eq %"class.blink::ScrollableArea"* %10, null
  br i1 %11, label %72, label %12

12:                                               ; preds = %5
  %13 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %14 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %14, i64 125
  %16 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %15, align 8
  %17 = tail call %"class.blink::LayoutObject"* %16(%"class.blink::AXObject"* %0) #22
  %18 = icmp eq %"class.blink::LayoutObject"* %17, null
  br i1 %18, label %72, label %19

19:                                               ; preds = %12
  %20 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %13, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %20, i64 125
  %22 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %21, align 8
  %23 = tail call %"class.blink::LayoutObject"* %22(%"class.blink::AXObject"* %0) #22
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 5, i32 0
  %25 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %24, align 8
  %26 = icmp eq %"class.blink::ComputedStyle"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %25, i64 0, i32 0, i32 9
  %29 = bitcast [20 x i8]* %28 to i160*
  %30 = load i160, i160* %29, align 8
  %31 = and i160 %30, 1057810092162800527867904
  %32 = icmp eq i160 %31, 604462909807314587353088
  br i1 %32, label %72, label %33

33:                                               ; preds = %27
  %34 = lshr i160 %30, 77
  %35 = trunc i160 %34 to i32
  %36 = and i32 %35, 5
  %37 = or i32 %36, 2
  %38 = icmp eq i32 %37, 3
  %39 = and i160 %30, 132226261520350065983488
  %40 = icmp eq i160 %39, 75557863725914323419136
  %41 = or i1 %40, %38
  br i1 %41, label %72, label %42

42:                                               ; preds = %33
  %43 = lshr i160 %30, 74
  %44 = trunc i160 %43 to i32
  %45 = and i32 %44, 5
  %46 = or i32 %45, 2
  %47 = icmp eq i32 %46, 3
  br label %72

48:                                               ; preds = %1
  %49 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %50 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %50, i64 125
  %52 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %51, align 8
  %53 = tail call %"class.blink::LayoutObject"* %52(%"class.blink::AXObject"* %0) #22
  %54 = icmp eq %"class.blink::LayoutObject"* %53, null
  br i1 %54, label %72, label %55

55:                                               ; preds = %48
  %56 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %49, align 8
  %57 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %56, i64 125
  %58 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %57, align 8
  %59 = tail call %"class.blink::LayoutObject"* %58(%"class.blink::AXObject"* %0) #22
  %60 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %59, i64 0, i32 4
  %61 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %60 to i96*
  %62 = load i96, i96* %61, align 4
  %63 = and i96 %62, 67108864
  %64 = icmp eq i96 %63, 0
  br i1 %64, label %72, label %65

65:                                               ; preds = %55
  %66 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %49, align 8
  %67 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %66, i64 125
  %68 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %67, align 8
  %69 = tail call %"class.blink::LayoutObject"* %68(%"class.blink::AXObject"* %0) #22
  %70 = bitcast %"class.blink::LayoutObject"* %69 to %"class.blink::LayoutBox"*
  %71 = tail call zeroext i1 @_ZNK5blink9LayoutBox33CanBeScrolledAndHasScrollableAreaEv(%"class.blink::LayoutBox"* %70) #22
  br label %72

72:                                               ; preds = %55, %27, %42, %65, %48, %19, %33, %5, %12
  %73 = phi i1 [ false, %12 ], [ false, %5 ], [ false, %19 ], [ true, %33 ], [ false, %55 ], [ false, %48 ], [ %71, %65 ], [ %47, %42 ], [ true, %27 ]
  ret i1 %73
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink8AXObject15GetScrollOffsetEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)**, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %3, i64 144
  %5 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::ScrollableArea"* %5(%"class.blink::AXObject"* %0) #22
  %7 = icmp eq %"class.blink::ScrollableArea"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::ScrollableArea"* %6 to i64 (%"class.blink::ScrollableArea"*)***
  %10 = load i64 (%"class.blink::ScrollableArea"*)**, i64 (%"class.blink::ScrollableArea"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %10, i64 46
  %12 = load i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %11, align 8
  %13 = tail call i64 %12(%"class.blink::ScrollableArea"* nonnull %6) #22
  %14 = load i64 (%"class.blink::ScrollableArea"*)**, i64 (%"class.blink::ScrollableArea"*)*** %9, align 8
  %15 = getelementptr inbounds i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %14, i64 46
  %16 = load i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %15, align 8
  %17 = tail call i64 %16(%"class.blink::ScrollableArea"* nonnull %6) #22
  %18 = and i64 %17, -4294967296
  %19 = and i64 %13, 4294967295
  br label %20

20:                                               ; preds = %1, %8
  %21 = phi i64 [ %19, %8 ], [ 0, %1 ]
  %22 = phi i64 [ %18, %8 ], [ 0, %1 ]
  %23 = or i64 %22, %21
  ret i64 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink8AXObject19MinimumScrollOffsetEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)**, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %3, i64 144
  %5 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::ScrollableArea"* %5(%"class.blink::AXObject"* %0) #22
  %7 = icmp eq %"class.blink::ScrollableArea"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::ScrollableArea"* %6 to i64 (%"class.blink::ScrollableArea"*)***
  %10 = load i64 (%"class.blink::ScrollableArea"*)**, i64 (%"class.blink::ScrollableArea"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %10, i64 48
  %12 = load i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %11, align 8
  %13 = tail call i64 %12(%"class.blink::ScrollableArea"* nonnull %6) #22
  %14 = load i64 (%"class.blink::ScrollableArea"*)**, i64 (%"class.blink::ScrollableArea"*)*** %9, align 8
  %15 = getelementptr inbounds i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %14, i64 48
  %16 = load i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %15, align 8
  %17 = tail call i64 %16(%"class.blink::ScrollableArea"* nonnull %6) #22
  %18 = and i64 %17, -4294967296
  %19 = and i64 %13, 4294967295
  br label %20

20:                                               ; preds = %1, %8
  %21 = phi i64 [ %19, %8 ], [ 0, %1 ]
  %22 = phi i64 [ %18, %8 ], [ 0, %1 ]
  %23 = or i64 %22, %21
  ret i64 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink8AXObject19MaximumScrollOffsetEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)**, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %3, i64 144
  %5 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::ScrollableArea"* %5(%"class.blink::AXObject"* %0) #22
  %7 = icmp eq %"class.blink::ScrollableArea"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::ScrollableArea"* %6 to i64 (%"class.blink::ScrollableArea"*)***
  %10 = load i64 (%"class.blink::ScrollableArea"*)**, i64 (%"class.blink::ScrollableArea"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %10, i64 50
  %12 = load i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %11, align 8
  %13 = tail call i64 %12(%"class.blink::ScrollableArea"* nonnull %6) #22
  %14 = load i64 (%"class.blink::ScrollableArea"*)**, i64 (%"class.blink::ScrollableArea"*)*** %9, align 8
  %15 = getelementptr inbounds i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %14, i64 50
  %16 = load i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %15, align 8
  %17 = tail call i64 %16(%"class.blink::ScrollableArea"* nonnull %6) #22
  %18 = and i64 %17, -4294967296
  %19 = and i64 %13, 4294967295
  br label %20

20:                                               ; preds = %1, %8
  %21 = phi i64 [ %19, %8 ], [ 0, %1 ]
  %22 = phi i64 [ %18, %8 ], [ 0, %1 ]
  %23 = or i64 %22, %21
  ret i64 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink8AXObject40GetRoleAttributeStringForObjectAttributeEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)***
  %3 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*** %2, align 8
  %4 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %3, i64 5
  %5 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %4, align 8
  %6 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %5(%"class.blink::AXObject"* %0, i32 13) #22
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %10, label %19

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = tail call zeroext i1 @_ZN2ui10IsLandmarkEN2ax5mojom4RoleE(i32 %12) #22
  br i1 %13, label %14, label %17

14:                                               ; preds = %10
  %15 = load i32, i32* %11, align 4
  %16 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink8AXObject12ARIARoleNameEN2ax5mojom4RoleE(i32 %15)
  br label %19

17:                                               ; preds = %10
  %18 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %19

19:                                               ; preds = %1, %17, %14
  %20 = phi %"class.WTF::AtomicString"* [ %16, %14 ], [ %18, %17 ], [ %6, %1 ]
  ret %"class.WTF::AtomicString"* %20
}

declare zeroext i1 @_ZN2ui10IsLandmarkEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink8AXObject12ARIARoleNameEN2ax5mojom4RoleE(i32) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink8AXObject12ARIARoleNameEN2ax5mojom4RoleEE21aria_role_name_vector to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %130, !prof !23

6:                                                ; preds = %1
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink8AXObject12ARIARoleNameEN2ax5mojom4RoleEE21aria_role_name_vector) #22
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %130, label %9

9:                                                ; preds = %6
  %10 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #22
  %11 = bitcast i8* %10 to %"class.WTF::Vector.284"*
  %12 = bitcast i8* %10 to %"class.WTF::AtomicString"**
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %12, align 8
  %13 = getelementptr inbounds i8, i8* %10, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 8
  %15 = tail call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 1488) #22
  %16 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %15, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #22
  %17 = ptrtoint i8* %16 to i64
  %18 = bitcast i8* %10 to i64*
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = lshr i64 %15, 3
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* %14, align 8
  %21 = getelementptr inbounds i8, i8* %10, i64 12
  %22 = bitcast i8* %21 to i32*
  store i32 186, i32* %22, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 1488, i1 false) #22
  %23 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  tail call void @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE4FillIS2_EENSt3__19enable_ifIXntsrT_19kIsGarbageCollectedEvE4typeERKS1_j(%"class.WTF::Vector.284"* %11, %"class.WTF::AtomicString"* dereferenceable(8) %23, i32 186) #22
  %24 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  br label %31

27:                                               ; preds = %77
  %28 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  %29 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  br label %80

31:                                               ; preds = %77, %9
  %32 = phi %"struct.blink::(anonymous namespace)::RoleEntry"* [ getelementptr inbounds ([127 x %"struct.blink::(anonymous namespace)::RoleEntry"], [127 x %"struct.blink::(anonymous namespace)::RoleEntry"]* @_ZN5blink12_GLOBAL__N_110kAriaRolesE, i64 0, i64 0), %9 ], [ %78, %77 ]
  %33 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RoleEntry", %"struct.blink::(anonymous namespace)::RoleEntry"* %32, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RoleEntry", %"struct.blink::(anonymous namespace)::RoleEntry"* %32, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #22
  %37 = icmp eq i8* %34, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %31
  %39 = call i64 @strlen(i8* nonnull %34) #24
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i64 [ %39, %38 ], [ 0, %31 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* %34, i64 %41) #22
  %42 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.284"* %11, i32 %36) #22
  %43 = load i64, i64* %26, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %25, align 8
  %44 = bitcast %"class.WTF::AtomicString"* %42 to i64*
  %45 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %42, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %43, i64* %44, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #22
  br label %61

61:                                               ; preds = %60, %57, %40
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #22
  br label %77

77:                                               ; preds = %76, %73, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #22
  %78 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RoleEntry", %"struct.blink::(anonymous namespace)::RoleEntry"* %32, i64 1
  %79 = icmp eq %"struct.blink::(anonymous namespace)::RoleEntry"* %78, getelementptr inbounds ([127 x %"struct.blink::(anonymous namespace)::RoleEntry"], [127 x %"struct.blink::(anonymous namespace)::RoleEntry"]* @_ZN5blink12_GLOBAL__N_110kAriaRolesE, i64 1, i64 0)
  br i1 %79, label %27, label %31

80:                                               ; preds = %126, %27
  %81 = phi %"struct.blink::(anonymous namespace)::RoleEntry"* [ getelementptr inbounds ([7 x %"struct.blink::(anonymous namespace)::RoleEntry"], [7 x %"struct.blink::(anonymous namespace)::RoleEntry"]* @_ZN5blink12_GLOBAL__N_113kReverseRolesE, i64 0, i64 0), %27 ], [ %127, %126 ]
  %82 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RoleEntry", %"struct.blink::(anonymous namespace)::RoleEntry"* %81, i64 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RoleEntry", %"struct.blink::(anonymous namespace)::RoleEntry"* %81, i64 0, i32 1
  %85 = load i32, i32* %84, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #22
  %86 = icmp eq i8* %83, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %80
  %88 = call i64 @strlen(i8* nonnull %83) #24
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i64 [ %88, %87 ], [ 0, %80 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* %83, i64 %90) #22
  %91 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.284"* %11, i32 %85) #22
  %92 = load i64, i64* %30, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %29, align 8
  %93 = bitcast %"class.WTF::AtomicString"* %91 to i64*
  %94 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %91, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  store i64 %92, i64* %93, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %89
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #22
  br label %110

110:                                              ; preds = %109, %106, %89
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #22
  br label %126

126:                                              ; preds = %125, %122, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #22
  %127 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RoleEntry", %"struct.blink::(anonymous namespace)::RoleEntry"* %81, i64 1
  %128 = icmp eq %"struct.blink::(anonymous namespace)::RoleEntry"* %127, getelementptr inbounds ([7 x %"struct.blink::(anonymous namespace)::RoleEntry"], [7 x %"struct.blink::(anonymous namespace)::RoleEntry"]* @_ZN5blink12_GLOBAL__N_113kReverseRolesE, i64 1, i64 0)
  br i1 %128, label %129, label %80

129:                                              ; preds = %126
  store i8* %10, i8** bitcast (%"class.WTF::Vector.284"** @_ZZN5blink8AXObject12ARIARoleNameEN2ax5mojom4RoleEE21aria_role_name_vector to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink8AXObject12ARIARoleNameEN2ax5mojom4RoleEE21aria_role_name_vector) #22
  br label %130

130:                                              ; preds = %6, %129, %1
  %131 = load %"class.WTF::Vector.284"*, %"class.WTF::Vector.284"** @_ZZN5blink8AXObject12ARIARoleNameEN2ax5mojom4RoleEE21aria_role_name_vector, align 8
  %132 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.284"* %131, i32 %0)
  ret %"class.WTF::AtomicString"* %132
}

declare zeroext i1 @_ZN2ui18IsPlatformDocumentEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"*) local_unnamed_addr #6

declare %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2, align 8
  %4 = icmp eq %"class.blink::AXObjectCacheImpl"* %3, null
  br i1 %4, label %91, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %6, align 8
  %8 = icmp eq %"class.blink::AXObject"* %7, null
  br i1 %8, label %9, label %16

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %11 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %11, i64 124
  %13 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %12, align 8
  %14 = tail call %"class.blink::Node"* %13(%"class.blink::AXObject"* %0) #22
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %30, label %20

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %7, i64 0, i32 14, i32 0, i32 0
  %18 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %17, align 8
  %19 = icmp eq %"class.blink::AXObjectCacheImpl"* %18, null
  br i1 %19, label %30, label %40

20:                                               ; preds = %9
  %21 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %10, align 8
  %22 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %21, i64 124
  %23 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %22, align 8
  %24 = tail call %"class.blink::Node"* %23(%"class.blink::AXObject"* %0) #22
  %25 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2, align 8
  %26 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %25, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.blink::Document"*, %"class.blink::Document"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %27, i64 0, i32 0, i32 0
  %29 = icmp eq %"class.blink::Node"* %24, %28
  br i1 %29, label %40, label %30

30:                                               ; preds = %20, %16, %9
  %31 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* %0) #22
  %32 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2
  %33 = ptrtoint %"class.blink::AXObject"* %31 to i64
  %34 = bitcast %"class.blink::Member.3082"* %32 to i64*
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %30
  %38 = bitcast %"class.blink::AXObject"* %31 to i8*
  %39 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %38) #22
  br label %40

40:                                               ; preds = %16, %20, %30, %37
  %41 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %6, align 8
  %42 = icmp eq %"class.blink::AXObject"* %41, null
  br i1 %42, label %91, label %43

43:                                               ; preds = %40, %88
  %44 = phi %"class.blink::AXObject"* [ %89, %88 ], [ %41, %40 ]
  %45 = bitcast %"class.blink::AXObject"* %44 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* nonnull %44, i1 zeroext true) #22
  %46 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %44, i64 0, i32 9
  %47 = load i8, i8* %46, align 8
  %48 = and i8 %47, 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %91, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %44, i64 0, i32 14, i32 0, i32 0
  %52 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %51, align 8
  %53 = icmp eq %"class.blink::AXObjectCacheImpl"* %52, null
  br i1 %53, label %91, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %44, i64 0, i32 2, i32 0, i32 0
  %56 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %55, align 8
  %57 = icmp eq %"class.blink::AXObject"* %56, null
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %45, align 8
  %60 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %59, i64 124
  %61 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %60, align 8
  %62 = tail call %"class.blink::Node"* %61(%"class.blink::AXObject"* nonnull %44) #22
  %63 = icmp eq %"class.blink::Node"* %62, null
  br i1 %63, label %78, label %68

64:                                               ; preds = %54
  %65 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %56, i64 0, i32 14, i32 0, i32 0
  %66 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %65, align 8
  %67 = icmp eq %"class.blink::AXObjectCacheImpl"* %66, null
  br i1 %67, label %78, label %88

68:                                               ; preds = %58
  %69 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %45, align 8
  %70 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %69, i64 124
  %71 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %70, align 8
  %72 = tail call %"class.blink::Node"* %71(%"class.blink::AXObject"* nonnull %44) #22
  %73 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %51, align 8
  %74 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %73, i64 0, i32 2, i32 0, i32 0
  %75 = load %"class.blink::Document"*, %"class.blink::Document"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %75, i64 0, i32 0, i32 0
  %77 = icmp eq %"class.blink::Node"* %72, %76
  br i1 %77, label %88, label %78

78:                                               ; preds = %68, %64, %58
  %79 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* nonnull %44) #22
  %80 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %44, i64 0, i32 2
  %81 = ptrtoint %"class.blink::AXObject"* %79 to i64
  %82 = bitcast %"class.blink::Member.3082"* %80 to i64*
  store atomic i64 %81, i64* %82 monotonic, align 8
  %83 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %78
  %86 = bitcast %"class.blink::AXObject"* %79 to i8*
  %87 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %86) #22
  br label %88

88:                                               ; preds = %64, %68, %78, %85
  %89 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %55, align 8
  %90 = icmp eq %"class.blink::AXObject"* %89, null
  br i1 %90, label %91, label %43

91:                                               ; preds = %50, %88, %43, %1, %40
  %92 = phi %"class.blink::AXObject"* [ null, %40 ], [ null, %1 ], [ null, %50 ], [ %44, %43 ], [ null, %88 ]
  ret %"class.blink::AXObject"* %92
}

declare void @_ZN2ui10AXNodeData12SetListStyleEN2ax5mojom9ListStyleE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #6

declare void @_ZN2ui10AXNodeData16SetTextDirectionEN2ax5mojom16WritingDirectionE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #6

declare void @_ZN5blink14AccessibleNode19GetAllAOMPropertiesEPNS_17AOMPropertyClientE(%"class.blink::AccessibleNode"*, %"class.blink::AOMPropertyClient"*) local_unnamed_addr #6

declare dereferenceable(24) %"class.WTF::HashMap.3359"* @_ZN5blink29GetAXSparseAttributeSetterMapEv() local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #8

declare zeroext i1 @_ZNK5blink7Element18DidAttachInternalsEv(%"class.blink::Element"*) local_unnamed_addr #6

declare dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"*) local_unnamed_addr #6

declare dereferenceable(24) %"class.WTF::HashMap.3369"* @_ZNK5blink16ElementInternals13GetAttributesEv(%"class.blink::ElementInternals"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2, align 8
  %4 = icmp eq %"class.blink::AXObjectCacheImpl"* %3, null
  br i1 %4, label %42, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %6, align 8
  %8 = icmp eq %"class.blink::AXObject"* %7, null
  br i1 %8, label %9, label %16

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %11 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %11, i64 124
  %13 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %12, align 8
  %14 = tail call %"class.blink::Node"* %13(%"class.blink::AXObject"* %0) #22
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %30, label %20

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %7, i64 0, i32 14, i32 0, i32 0
  %18 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %17, align 8
  %19 = icmp eq %"class.blink::AXObjectCacheImpl"* %18, null
  br i1 %19, label %30, label %40

20:                                               ; preds = %9
  %21 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %10, align 8
  %22 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %21, i64 124
  %23 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %22, align 8
  %24 = tail call %"class.blink::Node"* %23(%"class.blink::AXObject"* %0) #22
  %25 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2, align 8
  %26 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %25, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.blink::Document"*, %"class.blink::Document"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %27, i64 0, i32 0, i32 0
  %29 = icmp eq %"class.blink::Node"* %24, %28
  br i1 %29, label %40, label %30

30:                                               ; preds = %20, %9, %16
  %31 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* %0) #22
  %32 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2
  %33 = ptrtoint %"class.blink::AXObject"* %31 to i64
  %34 = bitcast %"class.blink::Member.3082"* %32 to i64*
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %30
  %38 = bitcast %"class.blink::AXObject"* %31 to i8*
  %39 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %38) #22
  br label %40

40:                                               ; preds = %20, %37, %30, %16
  %41 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %6, align 8
  br label %42

42:                                               ; preds = %1, %40
  %43 = phi %"class.blink::AXObject"* [ %41, %40 ], [ null, %1 ]
  ret %"class.blink::AXObject"* %43
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5blink8AXObject25SerializeMarkerAttributesEPN2ui10AXNodeDataE(%"class.blink::AXObject"* nocapture, %"struct.ui::AXNodeData"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

declare dereferenceable(24) %"class.std::__1::vector.3322"* @_ZNK2ui10AXNodeData19GetIntListAttributeEN2ax5mojom16IntListAttributeE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #6

declare void @_ZN2ui10AXNodeData19AddIntListAttributeEN2ax5mojom16IntListAttributeERKNSt3__16vectorIiNS4_9allocatorIiEEEE(%"struct.ui::AXNodeData"*, i32, %"class.std::__1::vector.3322"* dereferenceable(24)) local_unnamed_addr #6

declare void @_ZN4base22TruncateUTF8ToByteSizeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEmPS6_(%"class.std::__1::basic_string"* dereferenceable(24), i64, %"class.std::__1::basic_string"*) local_unnamed_addr #6

declare void @_ZN2ui10AXNodeData18AddStringAttributeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.ui::AXNodeData"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject14IsAXNodeObjectEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject16IsAXLayoutObjectEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject17IsAXInlineTextBoxEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject6IsListEv(%"class.blink::AXObject"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui6IsListEN2ax5mojom4RoleE(i32 %3) #22
  ret i1 %4
}

declare zeroext i1 @_ZN2ui6IsListEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject11IsAXListBoxEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject17IsAXListBoxOptionEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject10IsMenuListEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject16IsMenuListOptionEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject15IsMenuListPopupEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject12IsMockObjectEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject19IsProgressIndicatorEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject14IsAXRadioInputEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject8IsSliderEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject19IsValidationMessageEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject15IsVirtualObjectEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject15IsARIATextFieldEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %3, i64 124
  %5 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::Node"* %5(%"class.blink::AXObject"* %0) #22
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 12
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::Node"* %6 to %"class.blink::Element"*
  %15 = bitcast %"class.blink::Node"* %6 to i1 (%"class.blink::Element"*)***
  %16 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %16, i64 126
  %18 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::Element"* nonnull %14) #22
  br i1 %19, label %39, label %20

20:                                               ; preds = %8, %1, %13
  %21 = bitcast %"class.blink::AXObject"* %0 to i32 (%"class.blink::AXObject"*)***
  %22 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %22, i64 102
  %24 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %23, align 8
  %25 = tail call i32 %24(%"class.blink::AXObject"* %0) #22
  %26 = icmp eq i32 %25, 171
  br i1 %26, label %39, label %27

27:                                               ; preds = %20
  %28 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %21, align 8
  %29 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %28, i64 102
  %30 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %29, align 8
  %31 = tail call i32 %30(%"class.blink::AXObject"* %0) #22
  %32 = icmp eq i32 %31, 154
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %21, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %34, i64 102
  %36 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::AXObject"* %0) #22
  %38 = icmp eq i32 %37, 172
  br label %39

39:                                               ; preds = %20, %27, %33, %13
  %40 = phi i1 [ false, %13 ], [ true, %27 ], [ true, %20 ], [ %38, %33 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject8IsButtonEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui8IsButtonEN2ax5mojom4RoleE(i32 %3) #22
  ret i1 %4
}

declare zeroext i1 @_ZN2ui8IsButtonEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject8IsCanvasEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 11
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject11IsColorWellEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 18
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject9IsControlEv(%"class.blink::AXObject"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui9IsControlEN2ax5mojom4RoleE(i32 %3) #22
  ret i1 %4
}

declare zeroext i1 @_ZN2ui9IsControlEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject9IsDefaultEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject10IsFieldsetEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject9IsHeadingEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui9IsHeadingEN2ax5mojom4RoleE(i32 %3) #22
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject7IsImageEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui7IsImageEN2ax5mojom4RoleE(i32 %3) #22
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4
  %7 = icmp ne i32 %6, 11
  br label %8

8:                                                ; preds = %5, %1
  %9 = phi i1 [ false, %1 ], [ %7, %5 ]
  ret i1 %9
}

declare zeroext i1 @_ZN2ui7IsImageEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject12IsInputImageEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject6IsLinkEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui6IsLinkEN2ax5mojom4RoleE(i32 %3) #22
  ret i1 %4
}

declare zeroext i1 @_ZN2ui6IsLinkEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject14IsImageMapLinkEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject6IsMenuEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 123
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject11IsCheckableEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %25 [
    i32 15, label %26
    i32 126, label %26
    i32 127, label %26
    i32 142, label %26
    i32 164, label %26
    i32 176, label %26
    i32 181, label %5
    i32 114, label %5
    i32 128, label %5
  ]

5:                                                ; preds = %1, %1, %1
  %6 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #22
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %7, align 8
  %8 = call zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_17AOMStringPropertyERN3WTF12AtomicStringE(%"class.blink::AXObject"* %0, i32 1, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %2) #22
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %15, label %18, label %20

18:                                               ; preds = %11
  %19 = add i32 %17, -1
  store i32 %19, i32* %16, align 4
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi i32 [ %19, %18 ], [ %17, %11 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #22
  br label %24

24:                                               ; preds = %5, %20, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #22
  br label %26

25:                                               ; preds = %1
  br label %26

26:                                               ; preds = %1, %1, %1, %1, %1, %1, %25, %24
  %27 = phi i1 [ false, %25 ], [ %8, %24 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject20AriaCheckedIsPresentEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #22
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4, align 8
  %5 = call zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_17AOMStringPropertyERN3WTF12AtomicStringE(%"class.blink::AXObject"* %0, i32 1, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %2)
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #22
  br label %21

21:                                               ; preds = %1, %17, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #22
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8AXObject12CheckedStateEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = tail call zeroext i1 @_ZNK5blink8AXObject11IsCheckableEv(%"class.blink::AXObject"* %0)
  br i1 %4, label %5, label %82

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 176
  %9 = select i1 %8, i32 11, i32 1
  %10 = bitcast %"class.blink::AXObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)***
  %11 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %11, i64 5
  %13 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %12, align 8
  %14 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %13(%"class.blink::AXObject"* %0, i32 %9) #22
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %50, label %18

18:                                               ; preds = %5
  %19 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #22
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 1
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %25 = bitcast i8** %24 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %22, i32* %26, align 8
  %27 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [6 x i8]* nonnull dereferenceable(6) @.str.9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #22
  %28 = icmp ne i32 %7, 164
  %29 = and i1 %28, %27
  br i1 %29, label %82, label %30

30:                                               ; preds = %18
  %31 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #22
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %38

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %35, align 8
  %36 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %37 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %36, i64* %37, align 8
  br label %45

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %44 = bitcast i8** %43 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %44, align 8
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i32 [ %41, %38 ], [ 0, %34 ]
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %46, i32* %47, align 8
  %48 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [6 x i8]* nonnull dereferenceable(6) @.str.10)
  %49 = select i1 %48, i32 1, i32 2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #22
  br label %82

50:                                               ; preds = %5
  br i1 %8, label %82, label %51

51:                                               ; preds = %50
  %52 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %53 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %52, align 8
  %54 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %53, i64 124
  %55 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %54, align 8
  %56 = tail call %"class.blink::Node"* %55(%"class.blink::AXObject"* %0) #22
  %57 = icmp eq %"class.blink::Node"* %56, null
  br i1 %57, label %80, label %58

58:                                               ; preds = %51
  %59 = tail call zeroext i1 @_ZN5blink8AXObject28IsNativeCheckboxInMixedStateEPKNS_4NodeE(%"class.blink::Node"* nonnull %56)
  br i1 %59, label %80, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %56, i64 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = and i32 %62, 48
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %82

65:                                               ; preds = %60
  %66 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %67 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %56, i64 1, i32 2
  %70 = bitcast %"class.blink::Member.318"* %69 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %71 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %71, i64 0, i32 3, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %68, i64 0, i32 3, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %73, %75
  br i1 %76, label %77, label %82

77:                                               ; preds = %65
  %78 = bitcast %"class.blink::Node"* %56 to %"class.blink::HTMLInputElement"*
  %79 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement19ShouldAppearCheckedEv(%"class.blink::HTMLInputElement"* nonnull %78) #22
  br i1 %79, label %80, label %82

80:                                               ; preds = %51, %58, %77
  %81 = phi i32 [ 2, %77 ], [ 3, %58 ], [ 0, %51 ]
  br label %82

82:                                               ; preds = %65, %60, %50, %77, %80, %45, %18, %1
  %83 = phi i32 [ 0, %1 ], [ %49, %45 ], [ 3, %18 ], [ %81, %80 ], [ 1, %77 ], [ 1, %50 ], [ 1, %65 ], [ 1, %60 ]
  ret i32 %83
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [6 x i8]* dereferenceable(6)) local_unnamed_addr #9 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 5
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %125, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %153, %14, %28, %125, %139, %42, %59, %77, %93, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %14 ], [ false, %28 ], [ false, %125 ], [ false, %139 ], [ %166, %153 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  ret i1 %124

125:                                              ; preds = %28
  %126 = getelementptr inbounds i8, i8* %15, i64 2
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i64
  %129 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %128
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 2
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i64
  %135 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = sext i8 %136 to i32
  %138 = icmp eq i32 %131, %137
  br i1 %138, label %139, label %75

139:                                              ; preds = %125
  %140 = getelementptr inbounds i8, i8* %15, i64 3
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i64
  %143 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %142
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i32
  %146 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 3
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i64
  %149 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = sext i8 %150 to i32
  %152 = icmp eq i32 %145, %151
  br i1 %152, label %153, label %75

153:                                              ; preds = %139
  %154 = getelementptr inbounds i8, i8* %15, i64 4
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i64
  %157 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 4
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i64
  %163 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %162
  %164 = load i8, i8* %163, align 1
  %165 = sext i8 %164 to i32
  %166 = icmp eq i32 %159, %165
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject28IsNativeCheckboxInMixedStateEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2 align 2 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %74, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 48
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %74

8:                                                ; preds = %3
  %9 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %13 = bitcast %"class.blink::Member.318"* %12 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %16, %18
  %20 = bitcast %"class.blink::Node"* %0 to %"class.blink::HTMLInputElement"*
  br i1 %19, label %21, label %74

21:                                               ; preds = %8
  %22 = bitcast %"class.blink::Node"* %0 to %"class.blink::HTMLFormControlElement"*
  %23 = bitcast %"class.blink::Node"* %0 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %24 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %24, i64 171
  %26 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %25, align 8
  %27 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %26(%"class.blink::HTMLFormControlElement"* nonnull %22) #22
  %28 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #22
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !3

45:                                               ; preds = %36
  tail call void @llvm.trap() #22
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4
  br label %48

48:                                               ; preds = %21, %31, %46
  %49 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names9kCheckboxE, align 8
  %50 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %29, %51
  br i1 %52, label %53, label %59

53:                                               ; preds = %48
  %54 = bitcast %"class.blink::Node"* %0 to i1 (%"class.blink::HTMLInputElement"*)***
  %55 = load i1 (%"class.blink::HTMLInputElement"*)**, i1 (%"class.blink::HTMLInputElement"*)*** %54, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::HTMLInputElement"*)*, i1 (%"class.blink::HTMLInputElement"*)** %55, i64 120
  %57 = load i1 (%"class.blink::HTMLInputElement"*)*, i1 (%"class.blink::HTMLInputElement"*)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.blink::HTMLInputElement"* nonnull %20) #22
  br label %59

59:                                               ; preds = %48, %53
  %60 = phi i1 [ %58, %53 ], [ false, %48 ]
  br i1 %30, label %74, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #22
  br label %74

74:                                               ; preds = %8, %1, %3, %73, %70, %59
  %75 = phi i1 [ %60, %59 ], [ %60, %70 ], [ %60, %73 ], [ false, %8 ], [ false, %3 ], [ false, %1 ]
  ret i1 %75
}

declare zeroext i1 @_ZNK5blink16HTMLInputElement19ShouldAppearCheckedEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject18GetValueForControlEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject46SlowGetValueForControlIncludingContentEditableEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject13IsMenuRelatedEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui13IsMenuRelatedEN2ax5mojom4RoleE(i32 %3) #22
  ret i1 %4
}

declare zeroext i1 @_ZN2ui13IsMenuRelatedEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject7IsMeterEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 130
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject13IsNativeImageEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject18IsNativeSpinButtonEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject20IsNonAtomicTextFieldEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %3, i64 124
  %5 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::Node"* %5(%"class.blink::AXObject"* %0) #22
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 12
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::Node"* %6 to %"class.blink::Element"*
  %15 = bitcast %"class.blink::Node"* %6 to i1 (%"class.blink::Element"*)***
  %16 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %16, i64 126
  %18 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::Element"* nonnull %14) #22
  br i1 %19, label %63, label %20

20:                                               ; preds = %8, %1, %13
  %21 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %22 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %22, i64 110
  %24 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.blink::AXObject"* %0) #22
  br i1 %25, label %63, label %26

26:                                               ; preds = %20
  %27 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %28 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %27, i64 124
  %29 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %28, align 8
  %30 = tail call %"class.blink::Node"* %29(%"class.blink::AXObject"* %0) #22
  %31 = icmp eq %"class.blink::Node"* %30, null
  br i1 %31, label %44, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 12
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %44

37:                                               ; preds = %32
  %38 = bitcast %"class.blink::Node"* %30 to %"class.blink::Element"*
  %39 = bitcast %"class.blink::Node"* %30 to i1 (%"class.blink::Element"*)***
  %40 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %40, i64 126
  %42 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.blink::Element"* nonnull %38) #22
  br i1 %43, label %63, label %44

44:                                               ; preds = %37, %32, %26
  %45 = bitcast %"class.blink::AXObject"* %0 to i32 (%"class.blink::AXObject"*)***
  %46 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %45, align 8
  %47 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %46, i64 102
  %48 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %47, align 8
  %49 = tail call i32 %48(%"class.blink::AXObject"* %0) #22
  %50 = icmp eq i32 %49, 171
  br i1 %50, label %63, label %51

51:                                               ; preds = %44
  %52 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %45, align 8
  %53 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %52, i64 102
  %54 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %53, align 8
  %55 = tail call i32 %54(%"class.blink::AXObject"* %0) #22
  %56 = icmp eq i32 %55, 154
  br i1 %56, label %63, label %57

57:                                               ; preds = %51
  %58 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %45, align 8
  %59 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %58, i64 102
  %60 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %59, align 8
  %61 = tail call i32 %60(%"class.blink::AXObject"* %0) #22
  %62 = icmp eq i32 %61, 172
  br label %63

63:                                               ; preds = %57, %51, %44, %37, %20, %13
  %64 = phi i1 [ false, %13 ], [ true, %20 ], [ false, %37 ], [ true, %51 ], [ true, %44 ], [ %62, %57 ]
  ret i1 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject33IsPasswordFieldAndShouldHideValueEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %3, i64 124
  %5 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::Node"* %5(%"class.blink::AXObject"* %0) #22
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %52, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 48
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %52

13:                                               ; preds = %8
  %14 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 1, i32 2
  %18 = bitcast %"class.blink::Member.318"* %17 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %25, label %52

25:                                               ; preds = %13
  %26 = bitcast %"class.blink::Node"* %6 to %"class.blink::HTMLFormControlElement"*
  %27 = bitcast %"class.blink::Node"* %6 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %28 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %28, i64 171
  %30 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %29, align 8
  %31 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %30(%"class.blink::HTMLFormControlElement"* nonnull %26) #22
  %32 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names9kPasswordE, align 8
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %31, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %32, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %34, %36
  br i1 %37, label %38, label %52

38:                                               ; preds = %25
  %39 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %40 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %39, align 8
  %41 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %40, i64 126
  %42 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %41, align 8
  %43 = tail call %"class.blink::Document"* %42(%"class.blink::AXObject"* %0) #22
  %44 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %43) #22
  %45 = icmp eq %"class.blink::Settings"* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %44, i64 0, i32 71
  %48 = bitcast [14 x i8]* %47 to i112*
  %49 = load i112, i112* %48, align 8
  %50 = trunc i112 %49 to i8
  %51 = icmp sgt i8 %50, -1
  br label %52

52:                                               ; preds = %1, %8, %13, %46, %38, %25
  %53 = phi i1 [ false, %25 ], [ false, %38 ], [ %51, %46 ], [ false, %13 ], [ false, %8 ], [ false, %1 ]
  ret i1 %53
}

declare %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject16IsPresentationalEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui16IsPresentationalEN2ax5mojom4RoleE(i32 %3) #22
  ret i1 %4
}

declare zeroext i1 @_ZN2ui16IsPresentationalEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject12IsTextObjectEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %4 [
    i32 102, label %5
    i32 159, label %5
  ]

4:                                                ; preds = %1
  br label %5

5:                                                ; preds = %1, %1, %4
  %6 = phi i1 [ false, %4 ], [ true, %1 ], [ true, %1 ]
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject21IsRangeValueSupportedEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 158
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK5blink8AXObject20CanSetFocusAttributeEv(%"class.blink::AXObject"* %0)
  br label %9

7:                                                ; preds = %1
  %8 = tail call zeroext i1 @_ZN2ui21IsRangeValueSupportedEN2ax5mojom4RoleE(i32 %3) #22
  br label %9

9:                                                ; preds = %7, %5
  %10 = phi i1 [ %6, %5 ], [ %8, %7 ]
  ret i1 %10
}

declare zeroext i1 @_ZN2ui21IsRangeValueSupportedEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject11IsScrollbarEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 151
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject14IsNativeSliderEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject12IsSpinButtonEv(%"class.blink::AXObject"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 157
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject9IsTabItemEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 165
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject11IsTextFieldEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2, align 8
  %4 = icmp eq %"class.blink::AXObjectCacheImpl"* %3, null
  br i1 %4, label %26, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %7 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %7, i64 124
  %9 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %8, align 8
  %10 = tail call %"class.blink::Node"* %9(%"class.blink::AXObject"* %0) #22
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %24, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 12
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %24

17:                                               ; preds = %12
  %18 = bitcast %"class.blink::Node"* %10 to %"class.blink::Element"*
  %19 = bitcast %"class.blink::Node"* %10 to i1 (%"class.blink::Element"*)***
  %20 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %20, i64 126
  %22 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.blink::Element"* nonnull %18) #22
  br i1 %23, label %26, label %24

24:                                               ; preds = %12, %5, %17
  %25 = tail call zeroext i1 @_ZNK5blink8AXObject20IsNonAtomicTextFieldEv(%"class.blink::AXObject"* %0)
  br label %26

26:                                               ; preds = %17, %24, %1
  %27 = phi i1 [ false, %1 ], [ true, %17 ], [ %25, %24 ]
  ret i1 %27
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject19IsAutofillAvailableEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject11IsClickableEv(%"class.blink::AXObject"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui11IsClickableEN2ax5mojom4RoleE(i32 %3) #22
  ret i1 %4
}

declare zeroext i1 @_ZN2ui11IsClickableEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink8AXObject10IsExpandedEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject9IsFocusedEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink8AXObject9IsGrabbedEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject9IsHoveredEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject20IsLineBreakingObjectEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject8IsLinkedEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject8IsLoadedEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject17IsMultiSelectableEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject11IsOffScreenEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject10IsRequiredEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink8AXObject10IsSelectedEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject19IsSelectedFromFocusEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject22IsSelectedOptionActiveEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject19IsNotUserSelectableEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject9IsVisitedEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject39AccessibilityIsIgnoredButIncludedInTreeEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true)
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 2
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject29AccessibilityIsIncludedInTreeEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %7 = load i8, i8* %2, align 8
  %8 = and i8 %7, 2
  %9 = icmp ne i8 %8, 0
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i1 [ true, %1 ], [ %9, %6 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject23ComputeIsHiddenViaStyleEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %3, i64 124
  %5 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::Node"* %5(%"class.blink::AXObject"* %0) #22
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %53, label %8

8:                                                ; preds = %1
  %9 = tail call %"class.blink::Element"* @_ZN5blink20DisplayLockUtilities30NearestLockedExclusiveAncestorERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %6) #22
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @_ZN5blink20DisplayLockUtilities32IsInUnlockedOrActivatableSubtreeERKNS_4NodeENS_27DisplayLockActivationReasonE(%"class.blink::Node"* nonnull dereferenceable(64) %6, i32 1) #22
  %13 = xor i1 %12, true
  br label %53

14:                                               ; preds = %8
  %15 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %16 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %16, i64 125
  %18 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %17, align 8
  %19 = tail call %"class.blink::LayoutObject"* %18(%"class.blink::AXObject"* %0) #22
  %20 = icmp eq %"class.blink::LayoutObject"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %14
  %22 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %15, align 8
  %23 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %22, i64 125
  %24 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %23, align 8
  %25 = tail call %"class.blink::LayoutObject"* %24(%"class.blink::AXObject"* %0) #22
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 5, i32 0
  %27 = bitcast %"class.blink::ComputedStyle"** %26 to %"class.blink::ComputedStyleBase"**
  %28 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %28, i64 0, i32 9
  %30 = bitcast [20 x i8]* %29 to i160*
  %31 = load i160, i160* %30, align 8
  %32 = and i160 %31, 3802951800684688204490109616128
  %33 = icmp ne i160 %32, 1267650600228229401496703205376
  br label %53

34:                                               ; preds = %14
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 12
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %53

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::Node"* %6 to %"class.blink::Element"*
  %41 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %42 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* nonnull %40, i8 zeroext 0, %"class.WTF::AtomicString"* dereferenceable(8) %41) #22
  %43 = icmp eq %"class.blink::ComputedStyle"* %42, null
  br i1 %43, label %53, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %42, i64 0, i32 0, i32 9
  %46 = bitcast [20 x i8]* %45 to i160*
  %47 = load i160, i160* %46, align 8
  %48 = and i160 %47, 21778071482940061661655974875633165533184
  %49 = icmp eq i160 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = and i160 %47, 3802951800684688204490109616128
  %52 = icmp ne i160 %51, 1267650600228229401496703205376
  br label %53

53:                                               ; preds = %44, %34, %11, %21, %1, %50, %39
  %54 = phi i1 [ false, %34 ], [ %52, %50 ], [ true, %39 ], [ true, %44 ], [ %13, %11 ], [ %33, %21 ], [ false, %1 ]
  ret i1 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject26ComputeIsInertOrAriaHiddenEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.3453"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::IgnoredReason", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.blink::IgnoredReason", align 8
  %6 = alloca %"class.blink::IgnoredReason", align 8
  %7 = alloca %"class.blink::IgnoredReason", align 8
  %8 = alloca %"class.blink::IgnoredReason", align 8
  %9 = alloca %"class.blink::IgnoredReason", align 8
  %10 = alloca %"class.blink::IgnoredReason", align 8
  %11 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %12 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %12, i64 124
  %14 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %13, align 8
  %15 = tail call %"class.blink::Node"* %14(%"class.blink::AXObject"* %0) #22
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %354, label %17

17:                                               ; preds = %2
  %18 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %11, align 8
  %19 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %18, i64 124
  %20 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %19, align 8
  %21 = tail call %"class.blink::Node"* %20(%"class.blink::AXObject"* %0) #22
  %22 = tail call zeroext i1 @_ZNK5blink4Node7IsInertEv(%"class.blink::Node"* %21) #22
  br i1 %22, label %23, label %283

23:                                               ; preds = %17
  %24 = icmp eq %"class.blink::HeapVector.3453"* %1, null
  br i1 %24, label %581, label %25

25:                                               ; preds = %23
  %26 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %11, align 8
  %27 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %26, i64 124
  %28 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %27, align 8
  %29 = tail call %"class.blink::Node"* %28(%"class.blink::AXObject"* %0) #22
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %29, i64 0, i32 3, i32 0, i32 0
  %31 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %31, i64 0, i32 2, i32 0, i32 0
  %33 = load %"class.blink::Document"*, %"class.blink::Document"** %32, align 8
  %34 = tail call %"class.blink::HTMLDialogElement"* @_ZNK5blink8Document17ActiveModalDialogEv(%"class.blink::Document"* %33) #22
  %35 = icmp eq %"class.blink::HTMLDialogElement"* %34, null
  br i1 %35, label %161, label %36

36:                                               ; preds = %25
  %37 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %38 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::HTMLDialogElement", %"class.blink::HTMLDialogElement"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %38, %"class.blink::Node"* %39) #22
  %41 = icmp eq %"class.blink::AXObject"* %40, null
  %42 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0
  br i1 %41, label %102, label %43

43:                                               ; preds = %36
  %44 = bitcast %"class.blink::IgnoredReason"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #22
  %45 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %5, i64 0, i32 0
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %5, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* %40, %"class.blink::AXObject"** %46, align 8
  %47 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %48, %50
  br i1 %51, label %100, label %52, !prof !3

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %53, align 8
  %55 = zext i32 %48 to i64
  %56 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %54, i64 %55, i32 0
  store i32 0, i32* %56, align 8
  %57 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %54, i64 %55, i32 1
  %58 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %5, i64 0, i32 1
  %59 = bitcast %"class.blink::Member.3459"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.blink::Member.3459"* %57 to i64*
  store i64 %60, i64* %61, align 8
  %62 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %97, label %64

64:                                               ; preds = %52
  %65 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %66 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %65, i64 0, i32 1
  %67 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %66) #22
  %68 = icmp eq i8* %67, null
  br i1 %68, label %69, label %71, !prof !3

69:                                               ; preds = %64
  %70 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %66, i8* %70) #22
  br label %71

71:                                               ; preds = %69, %64
  %72 = phi i8* [ %70, %69 ], [ %67, %64 ]
  %73 = bitcast i8* %72 to %"class.blink::ThreadState"**
  %74 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %74, i64 0, i32 9
  %76 = load i8, i8* %75, align 1, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %97, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %74, i64 0, i32 13
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, 1
  store i64 %81, i64* %79, align 8
  %82 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %74, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %83 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %82, align 8
  %84 = load atomic i64, i64* %61 monotonic, align 8
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %94, label %86

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %83, i64 0, i32 0, i32 0
  %88 = inttoptr i64 %84 to i8*
  %89 = bitcast %"class.blink::MarkingVisitor"* %83 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %90 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %90, i64 5
  %92 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %91, align 8
  tail call void %92(%"class.blink::Visitor"* %87, i8* nonnull %88, i8* %88, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #22
  %93 = load i64, i64* %79, align 8
  br label %94

94:                                               ; preds = %86, %78
  %95 = phi i64 [ %81, %78 ], [ %93, %86 ]
  %96 = add i64 %95, -1
  store i64 %96, i64* %79, align 8
  br label %97

97:                                               ; preds = %52, %71, %94
  %98 = load i32, i32* %47, align 4
  %99 = add i32 %98, 1
  store i32 %99, i32* %47, align 4
  br label %101

100:                                              ; preds = %43
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3456"* %42, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %5) #22
  br label %101

101:                                              ; preds = %97, %100
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #22
  br label %581

102:                                              ; preds = %36
  %103 = bitcast %"class.blink::IgnoredReason"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #22
  %104 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %6, i64 0, i32 0
  store i32 6, i32* %104, align 8
  %105 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %6, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %105, align 8
  %106 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %107, %109
  br i1 %110, label %159, label %111, !prof !3

111:                                              ; preds = %102
  %112 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %112, align 8
  %114 = zext i32 %107 to i64
  %115 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 %114, i32 0
  store i32 6, i32* %115, align 8
  %116 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 %114, i32 1
  %117 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %6, i64 0, i32 1
  %118 = bitcast %"class.blink::Member.3459"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.blink::Member.3459"* %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %156, label %123

123:                                              ; preds = %111
  %124 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %125 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %124, i64 0, i32 1
  %126 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %125) #22
  %127 = icmp eq i8* %126, null
  br i1 %127, label %128, label %130, !prof !3

128:                                              ; preds = %123
  %129 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %125, i8* %129) #22
  br label %130

130:                                              ; preds = %128, %123
  %131 = phi i8* [ %129, %128 ], [ %126, %123 ]
  %132 = bitcast i8* %131 to %"class.blink::ThreadState"**
  %133 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %133, i64 0, i32 9
  %135 = load i8, i8* %134, align 1, !range !2
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %156, label %137

137:                                              ; preds = %130
  %138 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %133, i64 0, i32 13
  %139 = load i64, i64* %138, align 8
  %140 = add i64 %139, 1
  store i64 %140, i64* %138, align 8
  %141 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %133, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %142 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %141, align 8
  %143 = load atomic i64, i64* %120 monotonic, align 8
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %153, label %145

145:                                              ; preds = %137
  %146 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %142, i64 0, i32 0, i32 0
  %147 = inttoptr i64 %143 to i8*
  %148 = bitcast %"class.blink::MarkingVisitor"* %142 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %149 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %149, i64 5
  %151 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %150, align 8
  tail call void %151(%"class.blink::Visitor"* %146, i8* nonnull %147, i8* %147, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #22
  %152 = load i64, i64* %138, align 8
  br label %153

153:                                              ; preds = %145, %137
  %154 = phi i64 [ %140, %137 ], [ %152, %145 ]
  %155 = add i64 %154, -1
  store i64 %155, i64* %138, align 8
  br label %156

156:                                              ; preds = %111, %130, %153
  %157 = load i32, i32* %106, align 4
  %158 = add i32 %157, 1
  store i32 %158, i32* %106, align 4
  br label %160

159:                                              ; preds = %102
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3456"* %42, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %6) #22
  br label %160

160:                                              ; preds = %156, %159
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #22
  br label %581

161:                                              ; preds = %25
  %162 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject9InertRootEv(%"class.blink::AXObject"* %0)
  %163 = icmp eq %"class.blink::AXObject"* %162, %0
  %164 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0
  br i1 %163, label %165, label %224

165:                                              ; preds = %161
  %166 = bitcast %"class.blink::IgnoredReason"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %166) #22
  %167 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %7, i64 0, i32 0
  store i32 6, i32* %167, align 8
  %168 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %7, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %168, align 8
  %169 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %170 = load i32, i32* %169, align 4
  %171 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %172 = load i32, i32* %171, align 8
  %173 = icmp eq i32 %170, %172
  br i1 %173, label %222, label %174, !prof !3

174:                                              ; preds = %165
  %175 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %176 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %175, align 8
  %177 = zext i32 %170 to i64
  %178 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %176, i64 %177, i32 0
  store i32 6, i32* %178, align 8
  %179 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %176, i64 %177, i32 1
  %180 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %7, i64 0, i32 1
  %181 = bitcast %"class.blink::Member.3459"* %180 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = bitcast %"class.blink::Member.3459"* %179 to i64*
  store i64 %182, i64* %183, align 8
  %184 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %219, label %186

186:                                              ; preds = %174
  %187 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %188 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %187, i64 0, i32 1
  %189 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %188) #22
  %190 = icmp eq i8* %189, null
  br i1 %190, label %191, label %193, !prof !3

191:                                              ; preds = %186
  %192 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %188, i8* %192) #22
  br label %193

193:                                              ; preds = %191, %186
  %194 = phi i8* [ %192, %191 ], [ %189, %186 ]
  %195 = bitcast i8* %194 to %"class.blink::ThreadState"**
  %196 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %195, align 8
  %197 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %196, i64 0, i32 9
  %198 = load i8, i8* %197, align 1, !range !2
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %219, label %200

200:                                              ; preds = %193
  %201 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %196, i64 0, i32 13
  %202 = load i64, i64* %201, align 8
  %203 = add i64 %202, 1
  store i64 %203, i64* %201, align 8
  %204 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %196, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %205 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %204, align 8
  %206 = load atomic i64, i64* %183 monotonic, align 8
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %216, label %208

208:                                              ; preds = %200
  %209 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %205, i64 0, i32 0, i32 0
  %210 = inttoptr i64 %206 to i8*
  %211 = bitcast %"class.blink::MarkingVisitor"* %205 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %212 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %211, align 8
  %213 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %212, i64 5
  %214 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %213, align 8
  tail call void %214(%"class.blink::Visitor"* %209, i8* nonnull %210, i8* %210, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #22
  %215 = load i64, i64* %201, align 8
  br label %216

216:                                              ; preds = %208, %200
  %217 = phi i64 [ %203, %200 ], [ %215, %208 ]
  %218 = add i64 %217, -1
  store i64 %218, i64* %201, align 8
  br label %219

219:                                              ; preds = %174, %193, %216
  %220 = load i32, i32* %169, align 4
  %221 = add i32 %220, 1
  store i32 %221, i32* %169, align 4
  br label %223

222:                                              ; preds = %165
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3456"* %164, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %7) #22
  br label %223

223:                                              ; preds = %219, %222
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %166) #22
  br label %581

224:                                              ; preds = %161
  %225 = bitcast %"class.blink::IgnoredReason"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %225) #22
  %226 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %8, i64 0, i32 0
  store i32 7, i32* %226, align 8
  %227 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %8, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* %162, %"class.blink::AXObject"** %227, align 8
  %228 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %229 = load i32, i32* %228, align 4
  %230 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %231 = load i32, i32* %230, align 8
  %232 = icmp eq i32 %229, %231
  br i1 %232, label %281, label %233, !prof !3

233:                                              ; preds = %224
  %234 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %235 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %234, align 8
  %236 = zext i32 %229 to i64
  %237 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %235, i64 %236, i32 0
  store i32 7, i32* %237, align 8
  %238 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %235, i64 %236, i32 1
  %239 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %8, i64 0, i32 1
  %240 = bitcast %"class.blink::Member.3459"* %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast %"class.blink::Member.3459"* %238 to i64*
  store i64 %241, i64* %242, align 8
  %243 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %278, label %245

245:                                              ; preds = %233
  %246 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %247 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %246, i64 0, i32 1
  %248 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %247) #22
  %249 = icmp eq i8* %248, null
  br i1 %249, label %250, label %252, !prof !3

250:                                              ; preds = %245
  %251 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %247, i8* %251) #22
  br label %252

252:                                              ; preds = %250, %245
  %253 = phi i8* [ %251, %250 ], [ %248, %245 ]
  %254 = bitcast i8* %253 to %"class.blink::ThreadState"**
  %255 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %254, align 8
  %256 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %255, i64 0, i32 9
  %257 = load i8, i8* %256, align 1, !range !2
  %258 = icmp eq i8 %257, 0
  br i1 %258, label %278, label %259

259:                                              ; preds = %252
  %260 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %255, i64 0, i32 13
  %261 = load i64, i64* %260, align 8
  %262 = add i64 %261, 1
  store i64 %262, i64* %260, align 8
  %263 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %255, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %264 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %263, align 8
  %265 = load atomic i64, i64* %242 monotonic, align 8
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %275, label %267

267:                                              ; preds = %259
  %268 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %264, i64 0, i32 0, i32 0
  %269 = inttoptr i64 %265 to i8*
  %270 = bitcast %"class.blink::MarkingVisitor"* %264 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %271 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %270, align 8
  %272 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %271, i64 5
  %273 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %272, align 8
  tail call void %273(%"class.blink::Visitor"* %268, i8* nonnull %269, i8* %269, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #22
  %274 = load i64, i64* %260, align 8
  br label %275

275:                                              ; preds = %267, %259
  %276 = phi i64 [ %262, %259 ], [ %274, %267 ]
  %277 = add i64 %276, -1
  store i64 %277, i64* %260, align 8
  br label %278

278:                                              ; preds = %233, %252, %275
  %279 = load i32, i32* %228, align 4
  %280 = add i32 %279, 1
  store i32 %280, i32* %228, align 4
  br label %282

281:                                              ; preds = %224
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3456"* %164, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %8) #22
  br label %282

282:                                              ; preds = %278, %281
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %225) #22
  br label %581

283:                                              ; preds = %17
  %284 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %285 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %284, align 8
  %286 = tail call %"class.blink::AXObject"* @_ZNK5blink17AXObjectCacheImpl24GetActiveAriaModalDialogEv(%"class.blink::AXObjectCacheImpl"* %285) #22
  %287 = icmp eq %"class.blink::AXObject"* %286, null
  %288 = icmp eq %"class.blink::AXObject"* %286, %0
  %289 = or i1 %287, %288
  br i1 %289, label %404, label %290

290:                                              ; preds = %283
  %291 = tail call zeroext i1 @_ZNK5blink8AXObject14IsDescendantOfERKS0_(%"class.blink::AXObject"* %0, %"class.blink::AXObject"* nonnull dereferenceable(120) %286) #22
  br i1 %291, label %404, label %292

292:                                              ; preds = %290
  %293 = icmp eq %"class.blink::HeapVector.3453"* %1, null
  br i1 %293, label %581, label %294

294:                                              ; preds = %292
  %295 = bitcast %"class.blink::IgnoredReason"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %295) #22
  %296 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %3, i64 0, i32 0
  store i32 1, i32* %296, align 8
  %297 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %3, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* %286, %"class.blink::AXObject"** %297, align 8
  %298 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %299 = load i32, i32* %298, align 4
  %300 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %301 = load i32, i32* %300, align 8
  %302 = icmp eq i32 %299, %301
  br i1 %302, label %351, label %303, !prof !3

303:                                              ; preds = %294
  %304 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %305 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %304, align 8
  %306 = zext i32 %299 to i64
  %307 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %305, i64 %306, i32 0
  store i32 1, i32* %307, align 8
  %308 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %305, i64 %306, i32 1
  %309 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %3, i64 0, i32 1
  %310 = bitcast %"class.blink::Member.3459"* %309 to i64*
  %311 = load i64, i64* %310, align 8
  %312 = bitcast %"class.blink::Member.3459"* %308 to i64*
  store i64 %311, i64* %312, align 8
  %313 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %348, label %315

315:                                              ; preds = %303
  %316 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %317 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %316, i64 0, i32 1
  %318 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %317) #22
  %319 = icmp eq i8* %318, null
  br i1 %319, label %320, label %322, !prof !3

320:                                              ; preds = %315
  %321 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %317, i8* %321) #22
  br label %322

322:                                              ; preds = %320, %315
  %323 = phi i8* [ %321, %320 ], [ %318, %315 ]
  %324 = bitcast i8* %323 to %"class.blink::ThreadState"**
  %325 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %324, align 8
  %326 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %325, i64 0, i32 9
  %327 = load i8, i8* %326, align 1, !range !2
  %328 = icmp eq i8 %327, 0
  br i1 %328, label %348, label %329

329:                                              ; preds = %322
  %330 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %325, i64 0, i32 13
  %331 = load i64, i64* %330, align 8
  %332 = add i64 %331, 1
  store i64 %332, i64* %330, align 8
  %333 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %325, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %334 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %333, align 8
  %335 = load atomic i64, i64* %312 monotonic, align 8
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %345, label %337

337:                                              ; preds = %329
  %338 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %334, i64 0, i32 0, i32 0
  %339 = inttoptr i64 %335 to i8*
  %340 = bitcast %"class.blink::MarkingVisitor"* %334 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %341 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %340, align 8
  %342 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %341, i64 5
  %343 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %342, align 8
  tail call void %343(%"class.blink::Visitor"* %338, i8* nonnull %339, i8* %339, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #22
  %344 = load i64, i64* %330, align 8
  br label %345

345:                                              ; preds = %337, %329
  %346 = phi i64 [ %332, %329 ], [ %344, %337 ]
  %347 = add i64 %346, -1
  store i64 %347, i64* %330, align 8
  br label %348

348:                                              ; preds = %303, %322, %345
  %349 = load i32, i32* %298, align 4
  %350 = add i32 %349, 1
  store i32 %350, i32* %298, align 4
  br label %353

351:                                              ; preds = %294
  %352 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3456"* %352, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %3) #22
  br label %353

353:                                              ; preds = %351, %348
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %295) #22
  br label %581

354:                                              ; preds = %2
  %355 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %356 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %355, align 8
  %357 = icmp eq %"class.blink::AXObjectCacheImpl"* %356, null
  br i1 %357, label %404, label %358

358:                                              ; preds = %354
  %359 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2, i32 0, i32 0
  %360 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %359, align 8
  %361 = icmp eq %"class.blink::AXObject"* %360, null
  br i1 %361, label %362, label %368

362:                                              ; preds = %358
  %363 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %11, align 8
  %364 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %363, i64 124
  %365 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %364, align 8
  %366 = tail call %"class.blink::Node"* %365(%"class.blink::AXObject"* %0) #22
  %367 = icmp eq %"class.blink::Node"* %366, null
  br i1 %367, label %382, label %372

368:                                              ; preds = %358
  %369 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %360, i64 0, i32 14, i32 0, i32 0
  %370 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %369, align 8
  %371 = icmp eq %"class.blink::AXObjectCacheImpl"* %370, null
  br i1 %371, label %382, label %392

372:                                              ; preds = %362
  %373 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %11, align 8
  %374 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %373, i64 124
  %375 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %374, align 8
  %376 = tail call %"class.blink::Node"* %375(%"class.blink::AXObject"* %0) #22
  %377 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %355, align 8
  %378 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %377, i64 0, i32 2, i32 0, i32 0
  %379 = load %"class.blink::Document"*, %"class.blink::Document"** %378, align 8
  %380 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %379, i64 0, i32 0, i32 0
  %381 = icmp eq %"class.blink::Node"* %376, %380
  br i1 %381, label %392, label %382

382:                                              ; preds = %372, %362, %368
  %383 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* %0) #22
  %384 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2
  %385 = ptrtoint %"class.blink::AXObject"* %383 to i64
  %386 = bitcast %"class.blink::Member.3082"* %384 to i64*
  store atomic i64 %385, i64* %386 monotonic, align 8
  %387 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %392, label %389

389:                                              ; preds = %382
  %390 = bitcast %"class.blink::AXObject"* %383 to i8*
  %391 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %390) #22
  br label %392

392:                                              ; preds = %372, %368, %389, %382
  %393 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %359, align 8
  %394 = icmp eq %"class.blink::AXObject"* %393, null
  br i1 %394, label %404, label %395

395:                                              ; preds = %392
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* nonnull %393, i1 zeroext true) #22
  %396 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %393, i64 0, i32 9
  %397 = load i8, i8* %396, align 8
  %398 = and i8 %397, 4
  %399 = icmp eq i8 %398, 0
  br i1 %399, label %404, label %400

400:                                              ; preds = %395
  %401 = icmp eq %"class.blink::HeapVector.3453"* %1, null
  br i1 %401, label %581, label %402

402:                                              ; preds = %400
  %403 = tail call zeroext i1 @_ZNK5blink8AXObject26ComputeIsInertOrAriaHiddenEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXObject"* nonnull %393, %"class.blink::HeapVector.3453"* nonnull %1)
  br label %581

404:                                              ; preds = %395, %354, %290, %283, %392
  %405 = icmp eq %"class.blink::AXObject"* %0, null
  br i1 %405, label %581, label %406

406:                                              ; preds = %404, %455
  %407 = phi %"class.blink::AXObject"* [ %456, %455 ], [ %0, %404 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22
  store i8 -86, i8* %4, align 1
  %408 = bitcast %"class.blink::AXObject"* %407 to i1 (%"class.blink::AXObject"*, i32, i8*)***
  %409 = load i1 (%"class.blink::AXObject"*, i32, i8*)**, i1 (%"class.blink::AXObject"*, i32, i8*)*** %408, align 8
  %410 = getelementptr inbounds i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %409, i64 6
  %411 = load i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %410, align 8
  %412 = call zeroext i1 %411(%"class.blink::AXObject"* nonnull %407, i32 4, i8* nonnull dereferenceable(1) %4) #22
  %413 = load i8, i8* %4, align 1
  %414 = icmp ne i8 %413, 0
  %415 = and i1 %412, %414
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22
  br i1 %415, label %458, label %416

416:                                              ; preds = %406
  %417 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %407, i64 0, i32 14, i32 0, i32 0
  %418 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %417, align 8
  %419 = icmp eq %"class.blink::AXObjectCacheImpl"* %418, null
  br i1 %419, label %581, label %420

420:                                              ; preds = %416
  %421 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %407, i64 0, i32 2, i32 0, i32 0
  %422 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %421, align 8
  %423 = icmp eq %"class.blink::AXObject"* %422, null
  br i1 %423, label %424, label %431

424:                                              ; preds = %420
  %425 = bitcast %"class.blink::AXObject"* %407 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %426 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %425, align 8
  %427 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %426, i64 124
  %428 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %427, align 8
  %429 = call %"class.blink::Node"* %428(%"class.blink::AXObject"* nonnull %407) #22
  %430 = icmp eq %"class.blink::Node"* %429, null
  br i1 %430, label %445, label %435

431:                                              ; preds = %420
  %432 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %422, i64 0, i32 14, i32 0, i32 0
  %433 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %432, align 8
  %434 = icmp eq %"class.blink::AXObjectCacheImpl"* %433, null
  br i1 %434, label %445, label %455

435:                                              ; preds = %424
  %436 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %425, align 8
  %437 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %436, i64 124
  %438 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %437, align 8
  %439 = call %"class.blink::Node"* %438(%"class.blink::AXObject"* nonnull %407) #22
  %440 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %417, align 8
  %441 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %440, i64 0, i32 2, i32 0, i32 0
  %442 = load %"class.blink::Document"*, %"class.blink::Document"** %441, align 8
  %443 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %442, i64 0, i32 0, i32 0
  %444 = icmp eq %"class.blink::Node"* %439, %443
  br i1 %444, label %455, label %445

445:                                              ; preds = %435, %424, %431
  %446 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* nonnull %407) #22
  %447 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %407, i64 0, i32 2
  %448 = ptrtoint %"class.blink::AXObject"* %446 to i64
  %449 = bitcast %"class.blink::Member.3082"* %447 to i64*
  store atomic i64 %448, i64* %449 monotonic, align 8
  %450 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %455, label %452

452:                                              ; preds = %445
  %453 = bitcast %"class.blink::AXObject"* %446 to i8*
  %454 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %453) #22
  br label %455

455:                                              ; preds = %431, %445, %452, %435
  %456 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %421, align 8
  %457 = icmp eq %"class.blink::AXObject"* %456, null
  br i1 %457, label %581, label %406

458:                                              ; preds = %406
  %459 = icmp eq %"class.blink::HeapVector.3453"* %1, null
  br i1 %459, label %581, label %460

460:                                              ; preds = %458
  %461 = icmp eq %"class.blink::AXObject"* %407, %0
  %462 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0
  br i1 %461, label %463, label %522

463:                                              ; preds = %460
  %464 = bitcast %"class.blink::IgnoredReason"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %464) #22
  %465 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %9, i64 0, i32 0
  store i32 2, i32* %465, align 8
  %466 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %9, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %466, align 8
  %467 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %468 = load i32, i32* %467, align 4
  %469 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %470 = load i32, i32* %469, align 8
  %471 = icmp eq i32 %468, %470
  br i1 %471, label %520, label %472, !prof !3

472:                                              ; preds = %463
  %473 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %474 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %473, align 8
  %475 = zext i32 %468 to i64
  %476 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %474, i64 %475, i32 0
  store i32 2, i32* %476, align 8
  %477 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %474, i64 %475, i32 1
  %478 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %9, i64 0, i32 1
  %479 = bitcast %"class.blink::Member.3459"* %478 to i64*
  %480 = load i64, i64* %479, align 8
  %481 = bitcast %"class.blink::Member.3459"* %477 to i64*
  store i64 %480, i64* %481, align 8
  %482 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %483 = icmp eq i32 %482, 0
  br i1 %483, label %517, label %484

484:                                              ; preds = %472
  %485 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %486 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %485, i64 0, i32 1
  %487 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %486) #22
  %488 = icmp eq i8* %487, null
  br i1 %488, label %489, label %491, !prof !3

489:                                              ; preds = %484
  %490 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %486, i8* %490) #22
  br label %491

491:                                              ; preds = %489, %484
  %492 = phi i8* [ %490, %489 ], [ %487, %484 ]
  %493 = bitcast i8* %492 to %"class.blink::ThreadState"**
  %494 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %493, align 8
  %495 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %494, i64 0, i32 9
  %496 = load i8, i8* %495, align 1, !range !2
  %497 = icmp eq i8 %496, 0
  br i1 %497, label %517, label %498

498:                                              ; preds = %491
  %499 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %494, i64 0, i32 13
  %500 = load i64, i64* %499, align 8
  %501 = add i64 %500, 1
  store i64 %501, i64* %499, align 8
  %502 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %494, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %503 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %502, align 8
  %504 = load atomic i64, i64* %481 monotonic, align 8
  %505 = icmp eq i64 %504, 0
  br i1 %505, label %514, label %506

506:                                              ; preds = %498
  %507 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %503, i64 0, i32 0, i32 0
  %508 = inttoptr i64 %504 to i8*
  %509 = bitcast %"class.blink::MarkingVisitor"* %503 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %510 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %509, align 8
  %511 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %510, i64 5
  %512 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %511, align 8
  call void %512(%"class.blink::Visitor"* %507, i8* nonnull %508, i8* %508, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #22
  %513 = load i64, i64* %499, align 8
  br label %514

514:                                              ; preds = %506, %498
  %515 = phi i64 [ %501, %498 ], [ %513, %506 ]
  %516 = add i64 %515, -1
  store i64 %516, i64* %499, align 8
  br label %517

517:                                              ; preds = %472, %491, %514
  %518 = load i32, i32* %467, align 4
  %519 = add i32 %518, 1
  store i32 %519, i32* %467, align 4
  br label %521

520:                                              ; preds = %463
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3456"* %462, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %9) #22
  br label %521

521:                                              ; preds = %517, %520
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %464) #22
  br label %581

522:                                              ; preds = %460
  %523 = bitcast %"class.blink::IgnoredReason"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %523) #22
  %524 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %10, i64 0, i32 0
  store i32 3, i32* %524, align 8
  %525 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %10, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* %407, %"class.blink::AXObject"** %525, align 8
  %526 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %527 = load i32, i32* %526, align 4
  %528 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %529 = load i32, i32* %528, align 8
  %530 = icmp eq i32 %527, %529
  br i1 %530, label %579, label %531, !prof !3

531:                                              ; preds = %522
  %532 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %533 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %532, align 8
  %534 = zext i32 %527 to i64
  %535 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %533, i64 %534, i32 0
  store i32 3, i32* %535, align 8
  %536 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %533, i64 %534, i32 1
  %537 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %10, i64 0, i32 1
  %538 = bitcast %"class.blink::Member.3459"* %537 to i64*
  %539 = load i64, i64* %538, align 8
  %540 = bitcast %"class.blink::Member.3459"* %536 to i64*
  store i64 %539, i64* %540, align 8
  %541 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %542 = icmp eq i32 %541, 0
  br i1 %542, label %576, label %543

543:                                              ; preds = %531
  %544 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %545 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %544, i64 0, i32 1
  %546 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %545) #22
  %547 = icmp eq i8* %546, null
  br i1 %547, label %548, label %550, !prof !3

548:                                              ; preds = %543
  %549 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %545, i8* %549) #22
  br label %550

550:                                              ; preds = %548, %543
  %551 = phi i8* [ %549, %548 ], [ %546, %543 ]
  %552 = bitcast i8* %551 to %"class.blink::ThreadState"**
  %553 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %552, align 8
  %554 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %553, i64 0, i32 9
  %555 = load i8, i8* %554, align 1, !range !2
  %556 = icmp eq i8 %555, 0
  br i1 %556, label %576, label %557

557:                                              ; preds = %550
  %558 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %553, i64 0, i32 13
  %559 = load i64, i64* %558, align 8
  %560 = add i64 %559, 1
  store i64 %560, i64* %558, align 8
  %561 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %553, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %562 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %561, align 8
  %563 = load atomic i64, i64* %540 monotonic, align 8
  %564 = icmp eq i64 %563, 0
  br i1 %564, label %573, label %565

565:                                              ; preds = %557
  %566 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %562, i64 0, i32 0, i32 0
  %567 = inttoptr i64 %563 to i8*
  %568 = bitcast %"class.blink::MarkingVisitor"* %562 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %569 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %568, align 8
  %570 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %569, i64 5
  %571 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %570, align 8
  call void %571(%"class.blink::Visitor"* %566, i8* nonnull %567, i8* %567, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #22
  %572 = load i64, i64* %558, align 8
  br label %573

573:                                              ; preds = %565, %557
  %574 = phi i64 [ %560, %557 ], [ %572, %565 ]
  %575 = add i64 %574, -1
  store i64 %575, i64* %558, align 8
  br label %576

576:                                              ; preds = %531, %550, %573
  %577 = load i32, i32* %526, align 4
  %578 = add i32 %577, 1
  store i32 %578, i32* %526, align 4
  br label %580

579:                                              ; preds = %522
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3456"* %462, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %10) #22
  br label %580

580:                                              ; preds = %576, %579
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %523) #22
  br label %581

581:                                              ; preds = %416, %455, %404, %353, %292, %400, %458, %521, %580, %402, %23, %223, %282, %101, %160
  %582 = phi i1 [ true, %160 ], [ true, %101 ], [ true, %282 ], [ true, %223 ], [ true, %23 ], [ true, %402 ], [ true, %458 ], [ true, %521 ], [ true, %580 ], [ true, %400 ], [ true, %292 ], [ true, %353 ], [ false, %404 ], [ false, %455 ], [ false, %416 ]
  ret i1 %582
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8AXObject24SetNeedsToUpdateChildrenEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %16

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %7 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %7, i64 119
  %9 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::AXObject"* %0) #22
  br i1 %10, label %11, label %16

11:                                               ; preds = %5
  store i8 1, i8* %2, align 8
  %12 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %13 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %13, i64 120
  %15 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %14, align 8
  tail call void %15(%"class.blink::AXObject"* %0) #22
  br label %16

16:                                               ; preds = %1, %5, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject16DisabledAncestorEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22
  store i8 0, i8* %2, align 1
  %3 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*, i32, i8*)***
  %4 = load i1 (%"class.blink::AXObject"*, i32, i8*)**, i1 (%"class.blink::AXObject"*, i32, i8*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %4, i64 6
  %6 = load i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %5, align 8
  %7 = call zeroext i1 %6(%"class.blink::AXObject"* %0, i32 2, i8* nonnull dereferenceable(1) %2) #22
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = load i8, i8* %2, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = select i1 %10, %"class.blink::AXObject"* null, %"class.blink::AXObject"* %0
  br label %56

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %14 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %13, align 8
  %15 = icmp eq %"class.blink::AXObjectCacheImpl"* %14, null
  br i1 %15, label %56, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %17, align 8
  %19 = icmp eq %"class.blink::AXObject"* %18, null
  br i1 %19, label %20, label %27

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %22 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %22, i64 124
  %24 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %23, align 8
  %25 = call %"class.blink::Node"* %24(%"class.blink::AXObject"* %0) #22
  %26 = icmp eq %"class.blink::Node"* %25, null
  br i1 %26, label %41, label %31

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %18, i64 0, i32 14, i32 0, i32 0
  %29 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %28, align 8
  %30 = icmp eq %"class.blink::AXObjectCacheImpl"* %29, null
  br i1 %30, label %41, label %51

31:                                               ; preds = %20
  %32 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %21, align 8
  %33 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %32, i64 124
  %34 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %33, align 8
  %35 = call %"class.blink::Node"* %34(%"class.blink::AXObject"* %0) #22
  %36 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %13, align 8
  %37 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %36, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.blink::Document"*, %"class.blink::Document"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %38, i64 0, i32 0, i32 0
  %40 = icmp eq %"class.blink::Node"* %35, %39
  br i1 %40, label %51, label %41

41:                                               ; preds = %31, %20, %27
  %42 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* %0) #22
  %43 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2
  %44 = ptrtoint %"class.blink::AXObject"* %42 to i64
  %45 = bitcast %"class.blink::Member.3082"* %43 to i64*
  store atomic i64 %44, i64* %45 monotonic, align 8
  %46 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %41
  %49 = bitcast %"class.blink::AXObject"* %42 to i8*
  %50 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %49) #22
  br label %51

51:                                               ; preds = %31, %27, %48, %41
  %52 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %17, align 8
  %53 = icmp eq %"class.blink::AXObject"* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject16DisabledAncestorEv(%"class.blink::AXObject"* nonnull %52)
  br label %56

56:                                               ; preds = %12, %54, %51, %8
  %57 = phi %"class.blink::AXObject"* [ %11, %8 ], [ %55, %54 ], [ null, %51 ], [ null, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22
  ret %"class.blink::AXObject"* %57
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject46ComputeAccessibilityIsIgnoredButIncludedInTreeEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase46is_accessibility_expose_ignored_nodes_enabled_E, align 1, !range !2
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %417

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %6 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %5, align 8
  %7 = tail call zeroext i1 @_ZNK5blink17AXObjectCacheImpl11IsAriaOwnedEPKNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %6, %"class.blink::AXObject"* %0) #22
  br i1 %7, label %417, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %10 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %10, i64 124
  %12 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %11, align 8
  %13 = tail call %"class.blink::Node"* %12(%"class.blink::AXObject"* %0) #22
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %90, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 12
  %19 = icmp eq i32 %18, 0
  %20 = bitcast %"class.blink::Node"* %13 to %"class.blink::Element"*
  br i1 %19, label %21, label %90

21:                                               ; preds = %15
  %22 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kAriaOwnsAttrE, align 8
  %23 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 1, i32 3
  %24 = bitcast %"class.blink::Member.320"* %23 to %"class.blink::ElementData"**
  %25 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %24, align 8
  %26 = icmp eq %"class.blink::ElementData"* %25, null
  br i1 %26, label %77, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %25, i64 0, i32 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.blink::ElementData"* %25 to %"class.blink::UniqueElementData"*
  %34 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %25, i64 1, i32 1
  %35 = bitcast %"class.blink::Member.354"* %34 to %"class.blink::Attribute"**
  %36 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %33, i64 0, i32 2, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  br label %44

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %25, i64 1
  %41 = bitcast %"class.blink::ElementData"* %40 to %"class.blink::Attribute"*
  %42 = lshr i32 %29, 1
  %43 = and i32 %42, 268435455
  br label %44

44:                                               ; preds = %39, %32
  %45 = phi %"class.blink::Attribute"* [ %41, %39 ], [ %36, %32 ]
  %46 = phi i32 [ %43, %39 ], [ %38, %32 ]
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %45, i64 %47
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %77, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %22, i64 0, i32 0, i32 0
  %52 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %55

55:                                               ; preds = %70, %50
  %56 = phi %"class.blink::Attribute"* [ %45, %50 ], [ %71, %70 ]
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %56, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8
  %59 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %58, %52
  br i1 %59, label %73, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 3, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %62, %63
  br i1 %64, label %65, label %70

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 4, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %67, %68
  br i1 %69, label %73, label %70

70:                                               ; preds = %65, %60
  %71 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %56, i64 1
  %72 = icmp eq %"class.blink::Attribute"* %71, %48
  br i1 %72, label %77, label %55

73:                                               ; preds = %65, %55
  %74 = icmp eq %"class.blink::Attribute"* %56, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %56, i64 0, i32 1
  br label %79

77:                                               ; preds = %70, %73, %44, %21
  %78 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %79

79:                                               ; preds = %77, %75
  %80 = phi %"class.WTF::AtomicString"* [ %78, %77 ], [ %76, %75 ]
  %81 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %88, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %417

88:                                               ; preds = %79, %84
  %89 = tail call zeroext i1 @_ZN5blink7Element38HasExplicitlySetAttrAssociatedElementsERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %20, %"class.blink::QualifiedName"* dereferenceable(8) %22) #22
  br i1 %89, label %417, label %90

90:                                               ; preds = %15, %8, %88
  %91 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %9, align 8
  %92 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %91, i64 124
  %93 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %92, align 8
  %94 = tail call %"class.blink::Node"* %93(%"class.blink::AXObject"* %0) #22
  %95 = icmp eq %"class.blink::Node"* %94, null
  br i1 %95, label %96, label %102

96:                                               ; preds = %90
  %97 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %98 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %97, align 8
  %99 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %98, i64 125
  %100 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %99, align 8
  %101 = tail call %"class.blink::LayoutObject"* %100(%"class.blink::AXObject"* %0) #22
  br label %417

102:                                              ; preds = %90
  %103 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase45is_accessibility_expose_display_none_enabled_E, align 1, !range !2
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %177, label %105

105:                                              ; preds = %102
  %106 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %9, align 8
  %107 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %106, i64 124
  %108 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %107, align 8
  %109 = tail call %"class.blink::Node"* %108(%"class.blink::AXObject"* %0) #22
  %110 = icmp eq %"class.blink::Node"* %109, null
  br i1 %110, label %197, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %109, i64 0, i32 1
  %113 = load i32, i32* %112, align 8
  %114 = and i32 %113, 12
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %197

116:                                              ; preds = %111
  %117 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %118 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %109, i64 1, i32 3
  %119 = bitcast %"class.blink::Member.320"* %118 to %"class.blink::ElementData"**
  %120 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %119, align 8
  %121 = icmp eq %"class.blink::ElementData"* %120, null
  br i1 %121, label %197, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %120, i64 0, i32 0, i32 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %134, label %127

127:                                              ; preds = %122
  %128 = bitcast %"class.blink::ElementData"* %120 to %"class.blink::UniqueElementData"*
  %129 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %120, i64 1, i32 1
  %130 = bitcast %"class.blink::Member.354"* %129 to %"class.blink::Attribute"**
  %131 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %128, i64 0, i32 2, i32 0, i32 0, i32 2
  %133 = load i32, i32* %132, align 4
  br label %139

134:                                              ; preds = %122
  %135 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %120, i64 1
  %136 = bitcast %"class.blink::ElementData"* %135 to %"class.blink::Attribute"*
  %137 = lshr i32 %124, 1
  %138 = and i32 %137, 268435455
  br label %139

139:                                              ; preds = %134, %127
  %140 = phi %"class.blink::Attribute"* [ %136, %134 ], [ %131, %127 ]
  %141 = phi i32 [ %138, %134 ], [ %133, %127 ]
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %140, i64 %142
  %144 = icmp eq i32 %141, 0
  br i1 %144, label %197, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %117, i64 0, i32 0, i32 0
  %147 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %147, i64 0, i32 3, i32 0, i32 0, i32 0
  %149 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %147, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %150

150:                                              ; preds = %166, %145
  %151 = phi %"class.blink::Attribute"* [ %140, %145 ], [ %167, %166 ]
  %152 = phi i32 [ 0, %145 ], [ %168, %166 ]
  %153 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %151, i64 0, i32 0, i32 0, i32 0
  %154 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %153, align 8
  %155 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %154, %147
  br i1 %155, label %170, label %156

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %154, i64 0, i32 3, i32 0, i32 0, i32 0
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %158, %159
  br i1 %160, label %161, label %166

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %154, i64 0, i32 4, i32 0, i32 0, i32 0
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %162, align 8
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %163, %164
  br i1 %165, label %170, label %166

166:                                              ; preds = %161, %156
  %167 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %151, i64 1
  %168 = add i32 %152, 1
  %169 = icmp eq %"class.blink::Attribute"* %167, %143
  br i1 %169, label %197, label %150

170:                                              ; preds = %150, %161
  %171 = icmp eq i32 %152, -1
  br i1 %171, label %197, label %172

172:                                              ; preds = %170
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %173 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %174 = load i8, i8* %173, align 8
  %175 = and i8 %174, 8
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %197, label %417

177:                                              ; preds = %102
  %178 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %179 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %178, align 8
  %180 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %179, i64 125
  %181 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %180, align 8
  %182 = tail call %"class.blink::LayoutObject"* %181(%"class.blink::AXObject"* %0) #22
  %183 = icmp eq %"class.blink::LayoutObject"* %182, null
  br i1 %183, label %197, label %184

184:                                              ; preds = %177
  %185 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %178, align 8
  %186 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %185, i64 125
  %187 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %186, align 8
  %188 = tail call %"class.blink::LayoutObject"* %187(%"class.blink::AXObject"* %0) #22
  %189 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %188, i64 0, i32 5, i32 0
  %190 = bitcast %"class.blink::ComputedStyle"** %189 to %"class.blink::ComputedStyleBase"**
  %191 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %190, align 8
  %192 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %191, i64 0, i32 9
  %193 = bitcast [20 x i8]* %192 to i160*
  %194 = load i160, i160* %193, align 8
  %195 = and i160 %194, 3802951800684688204490109616128
  %196 = icmp eq i160 %195, 1267650600228229401496703205376
  br i1 %196, label %197, label %417

197:                                              ; preds = %166, %172, %170, %111, %139, %116, %105, %184, %177
  %198 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %199 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %198, align 8
  %200 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %199, i64 125
  %201 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %200, align 8
  %202 = tail call %"class.blink::LayoutObject"* %201(%"class.blink::AXObject"* %0) #22
  %203 = icmp eq %"class.blink::LayoutObject"* %202, null
  br i1 %203, label %212, label %204

204:                                              ; preds = %197
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %205 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %206 = load i8, i8* %205, align 8
  %207 = and i8 %206, 4
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %212, label %209

209:                                              ; preds = %204
  %210 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject14AriaHiddenRootEv(%"class.blink::AXObject"* %0) #22
  %211 = icmp eq %"class.blink::AXObject"* %210, null
  br i1 %211, label %212, label %417

212:                                              ; preds = %209, %204, %197
  %213 = tail call %"class.blink::ContainerNode"* @_ZN5blink26LayoutTreeBuilderTraversal6ParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %94) #22
  %214 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %213, i64 0, i32 0
  %215 = icmp eq %"class.blink::ContainerNode"* %213, null
  br i1 %215, label %236, label %216

216:                                              ; preds = %212
  %217 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %213, i64 0, i32 0, i32 1
  %218 = load i32, i32* %217, align 8
  %219 = and i32 %218, 917504
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %417

221:                                              ; preds = %216
  %222 = and i32 %218, 48
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %236

224:                                              ; preds = %221
  %225 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE, align 8
  %226 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %225, i64 0, i32 0, i32 0, i32 0
  %227 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %226, align 8
  %228 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %214, i64 1, i32 2
  %229 = bitcast %"class.blink::Member.318"* %228 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %230 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %229, align 8
  %231 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %230, i64 0, i32 3, i32 0, i32 0, i32 0
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8
  %233 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %227, i64 0, i32 3, i32 0, i32 0, i32 0
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %232, %234
  br i1 %235, label %417, label %236

236:                                              ; preds = %221, %224, %212
  %237 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %9, align 8
  %238 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %237, i64 124
  %239 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %238, align 8
  %240 = tail call %"class.blink::Node"* %239(%"class.blink::AXObject"* %0) #22
  %241 = icmp eq %"class.blink::Node"* %240, null
  br i1 %241, label %417, label %242

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %240, i64 0, i32 1
  %244 = load i32, i32* %243, align 8
  %245 = and i32 %244, 12
  %246 = icmp eq i32 %245, 0
  %247 = bitcast %"class.blink::Node"* %240 to %"class.blink::Element"*
  br i1 %246, label %248, label %417

248:                                              ; preds = %242
  %249 = and i32 %244, 917504
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %417

251:                                              ; preds = %248
  %252 = and i32 %244, 48
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %266

254:                                              ; preds = %251
  %255 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE, align 8
  %256 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %255, i64 0, i32 0, i32 0, i32 0
  %257 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %256, align 8
  %258 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %240, i64 1, i32 2
  %259 = bitcast %"class.blink::Member.318"* %258 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %260 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %259, align 8
  %261 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %260, i64 0, i32 3, i32 0, i32 0, i32 0
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %261, align 8
  %263 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %257, i64 0, i32 3, i32 0, i32 0, i32 0
  %264 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %263, align 8
  %265 = icmp eq %"class.WTF::StringImpl"* %262, %264
  br i1 %265, label %417, label %266

266:                                              ; preds = %251, %254
  %267 = bitcast %"class.blink::Node"* %240 to i8 (%"class.blink::Node"*)***
  %268 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %267, align 8
  %269 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %268, i64 34
  %270 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %269, align 8
  %271 = tail call zeroext i8 %270(%"class.blink::Node"* nonnull %240) #22
  %272 = icmp eq i8 %271, 0
  br i1 %272, label %273, label %417

273:                                              ; preds = %266
  %274 = tail call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* nonnull %247, i8 zeroext 3) #22
  %275 = icmp eq %"class.blink::PseudoElement"* %274, null
  br i1 %275, label %276, label %417

276:                                              ; preds = %273
  %277 = tail call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* nonnull %247, i8 zeroext 4) #22
  %278 = icmp eq %"class.blink::PseudoElement"* %277, null
  br i1 %278, label %279, label %417

279:                                              ; preds = %276
  %280 = tail call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* nonnull %247, i8 zeroext 5) #22
  %281 = icmp eq %"class.blink::PseudoElement"* %280, null
  br i1 %281, label %282, label %417

282:                                              ; preds = %279
  %283 = load i32, i32* %243, align 8
  %284 = and i32 %283, 48
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %301

286:                                              ; preds = %282
  %287 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE, align 8
  %288 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %287, i64 0, i32 0, i32 0, i32 0
  %289 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %288, align 8
  %290 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %240, i64 1, i32 2
  %291 = bitcast %"class.blink::Member.318"* %290 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %292 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %291, align 8
  %293 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %292, i64 0, i32 3, i32 0, i32 0, i32 0
  %294 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %293, align 8
  %295 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %289, i64 0, i32 3, i32 0, i32 0, i32 0
  %296 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %295, align 8
  %297 = icmp eq %"class.WTF::StringImpl"* %294, %296
  br i1 %297, label %298, label %301

298:                                              ; preds = %286
  %299 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase45is_accessibility_expose_html_element_enabled_E, align 1, !range !2
  %300 = icmp ne i8 %299, 0
  br label %417

301:                                              ; preds = %282, %286
  %302 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %303 = load i32, i32* %302, align 4
  switch i32 %303, label %304 [
    i32 183, label %417
    i32 7, label %417
  ]

304:                                              ; preds = %301
  %305 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %306 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %305, align 8
  %307 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %306, i64 38
  %308 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %307, align 8
  %309 = tail call zeroext i1 %308(%"class.blink::AXObject"* %0) #22
  br i1 %309, label %417, label %310

310:                                              ; preds = %304
  %311 = load i32, i32* %243, align 8
  %312 = and i32 %311, 48
  switch i32 %312, label %410 [
    i32 32, label %313
    i32 0, label %325
  ]

313:                                              ; preds = %310
  %314 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names5kGTagE, align 8
  %315 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %314, i64 0, i32 0, i32 0, i32 0
  %316 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %315, align 8
  %317 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %240, i64 1, i32 2
  %318 = bitcast %"class.blink::Member.318"* %317 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %319 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %318, align 8
  %320 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %319, i64 0, i32 3, i32 0, i32 0, i32 0
  %321 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %320, align 8
  %322 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %316, i64 0, i32 3, i32 0, i32 0, i32 0
  %323 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %322, align 8
  %324 = icmp eq %"class.WTF::StringImpl"* %321, %323
  br i1 %324, label %417, label %410

325:                                              ; preds = %310
  %326 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %327 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %326, i64 0, i32 0, i32 0, i32 0
  %328 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %327, align 8
  %329 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %240, i64 1, i32 2
  %330 = bitcast %"class.blink::Member.318"* %329 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %331 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %330, align 8
  %332 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %331, i64 0, i32 3, i32 0, i32 0, i32 0
  %333 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %332, align 8
  %334 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %328, i64 0, i32 3, i32 0, i32 0, i32 0
  %335 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %334, align 8
  %336 = icmp eq %"class.WTF::StringImpl"* %333, %335
  br i1 %336, label %417, label %337

337:                                              ; preds = %325
  %338 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE, align 8
  %339 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %338, i64 0, i32 0, i32 0, i32 0
  %340 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %339, align 8
  %341 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %240, i64 1, i32 2
  %342 = bitcast %"class.blink::Member.318"* %341 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %343 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %342, align 8
  %344 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %343, i64 0, i32 3, i32 0, i32 0, i32 0
  %345 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %344, align 8
  %346 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %340, i64 0, i32 3, i32 0, i32 0, i32 0
  %347 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %346, align 8
  %348 = icmp eq %"class.WTF::StringImpl"* %345, %347
  br i1 %348, label %417, label %349

349:                                              ; preds = %337
  %350 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE, align 8
  %351 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %350, i64 0, i32 0, i32 0, i32 0
  %352 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %351, align 8
  %353 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %352, i64 0, i32 3, i32 0, i32 0, i32 0
  %354 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %353, align 8
  %355 = icmp eq %"class.WTF::StringImpl"* %345, %354
  br i1 %355, label %417, label %356

356:                                              ; preds = %349
  %357 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE, align 8
  %358 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %357, i64 0, i32 0, i32 0, i32 0
  %359 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %358, align 8
  %360 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %359, i64 0, i32 3, i32 0, i32 0, i32 0
  %361 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %360, align 8
  %362 = icmp eq %"class.WTF::StringImpl"* %345, %361
  br i1 %362, label %417, label %363

363:                                              ; preds = %356
  %364 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE, align 8
  %365 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %364, i64 0, i32 0, i32 0, i32 0
  %366 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %365, align 8
  %367 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %240, i64 1, i32 2
  %368 = bitcast %"class.blink::Member.318"* %367 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %369 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %368, align 8
  %370 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %369, i64 0, i32 3, i32 0, i32 0, i32 0
  %371 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %370, align 8
  %372 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %366, i64 0, i32 3, i32 0, i32 0, i32 0
  %373 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %372, align 8
  %374 = icmp eq %"class.WTF::StringImpl"* %371, %373
  br i1 %374, label %417, label %375

375:                                              ; preds = %363
  %376 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %377 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %376, i64 0, i32 0, i32 0, i32 0
  %378 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %377, align 8
  %379 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %240, i64 1, i32 2
  %380 = bitcast %"class.blink::Member.318"* %379 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %381 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %380, align 8
  %382 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %381, i64 0, i32 3, i32 0, i32 0, i32 0
  %383 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %382, align 8
  %384 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %378, i64 0, i32 3, i32 0, i32 0, i32 0
  %385 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %384, align 8
  %386 = icmp eq %"class.WTF::StringImpl"* %383, %385
  br i1 %386, label %417, label %387

387:                                              ; preds = %375
  %388 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE, align 8
  %389 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %388, i64 0, i32 0, i32 0, i32 0
  %390 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %389, align 8
  %391 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %390, i64 0, i32 3, i32 0, i32 0, i32 0
  %392 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %391, align 8
  %393 = icmp eq %"class.WTF::StringImpl"* %383, %392
  br i1 %393, label %417, label %394

394:                                              ; preds = %387
  %395 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %396 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %395, i64 0, i32 0, i32 0, i32 0
  %397 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %396, align 8
  %398 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %240, i64 1, i32 2
  %399 = bitcast %"class.blink::Member.318"* %398 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %400 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %399, align 8
  %401 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %400, i64 0, i32 3, i32 0, i32 0, i32 0
  %402 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %401, align 8
  %403 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %397, i64 0, i32 3, i32 0, i32 0, i32 0
  %404 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %403, align 8
  %405 = icmp eq %"class.WTF::StringImpl"* %402, %404
  br i1 %405, label %406, label %410

406:                                              ; preds = %394
  %407 = bitcast %"class.blink::Node"* %240 to %"class.blink::HTMLOptionElement"*
  %408 = tail call %"class.blink::HTMLSelectElement"* @_ZNK5blink17HTMLOptionElement18OwnerSelectElementEv(%"class.blink::HTMLOptionElement"* nonnull %407) #22
  %409 = icmp eq %"class.blink::HTMLSelectElement"* %408, null
  br i1 %409, label %410, label %417

410:                                              ; preds = %310, %313, %394, %406
  %411 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kLangAttrE, align 8
  %412 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)***
  %413 = load i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)**, i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*** %412, align 8
  %414 = getelementptr inbounds i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*, i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)** %413, i64 130
  %415 = load i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*, i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)** %414, align 8
  %416 = tail call zeroext i1 %415(%"class.blink::AXObject"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %411) #22
  ret i1 %416

417:                                              ; preds = %172, %209, %266, %248, %242, %216, %1, %301, %301, %375, %337, %349, %236, %84, %96, %184, %224, %406, %325, %356, %363, %387, %313, %304, %273, %276, %279, %254, %298, %4, %88
  %418 = phi i1 [ true, %1 ], [ true, %88 ], [ true, %4 ], [ true, %96 ], [ true, %172 ], [ true, %184 ], [ true, %209 ], [ true, %216 ], [ true, %224 ], [ %300, %298 ], [ true, %248 ], [ true, %254 ], [ true, %266 ], [ true, %279 ], [ true, %276 ], [ true, %273 ], [ true, %301 ], [ true, %304 ], [ true, %313 ], [ true, %387 ], [ true, %363 ], [ true, %356 ], [ true, %325 ], [ true, %406 ], [ true, %84 ], [ false, %242 ], [ false, %236 ], [ true, %349 ], [ true, %337 ], [ true, %375 ], [ true, %301 ]
  ret i1 %418
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject30LastKnownIsIncludedInTreeValueEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 3
  %5 = icmp ne i8 %4, 1
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject23LastKnownIsIgnoredValueEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 1
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

declare zeroext i1 @_ZN2ui28CanHaveInlineTextBoxChildrenEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject16IsLiveRegionRootEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)***
  %3 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)** %3, i64 115
  %5 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %5(%"class.blink::AXObject"* %0) #22
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 0
  br label %14

14:                                               ; preds = %1, %10
  %15 = phi i1 [ false, %1 ], [ %13, %10 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject14LiveRegionRootEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true)
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 10, i32 0, i32 0
  %3 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %2, align 8
  ret %"class.blink::AXObject"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8AXObject22ComputeAriaColumnIndexEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca i8, align 1
  %3 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %4 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %4, i64 124
  %6 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %5, align 8
  %7 = tail call %"class.blink::Node"* %6(%"class.blink::AXObject"* %0) #22
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 12
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  %15 = bitcast %"class.blink::Node"* %7 to %"class.blink::Element"*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22
  store i8 1, i8* %2, align 1
  %16 = call i32 @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_15AOMUIntPropertyERb(%"class.blink::Element"* nonnull %15, i32 0, i8* nonnull dereferenceable(1) %2) #22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22
  br label %17

17:                                               ; preds = %1, %9, %14
  %18 = phi i32 [ 0, %1 ], [ %16, %14 ], [ 0, %9 ]
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8AXObject19ComputeAriaRowIndexEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca i8, align 1
  %3 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %4 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %4, i64 124
  %6 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %5, align 8
  %7 = tail call %"class.blink::Node"* %6(%"class.blink::AXObject"* %0) #22
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 12
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  %15 = bitcast %"class.blink::Node"* %7 to %"class.blink::Element"*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22
  store i8 1, i8* %2, align 1
  %16 = call i32 @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_15AOMUIntPropertyERb(%"class.blink::Element"* nonnull %15, i32 4, i8* nonnull dereferenceable(1) %2) #22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22
  br label %17

17:                                               ; preds = %1, %9, %14
  %18 = phi i32 [ 0, %1 ], [ %16, %14 ], [ 0, %9 ]
  ret i32 %18
}

declare void @_ZN5blink17AXObjectCacheImpl15ChildrenChangedEPNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObject"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject31AccessibilityIsIgnoredByDefaultEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.3453"*) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.blink::AXObject"* %0 to i32 (%"class.blink::AXObject"*, %"class.blink::HeapVector.3453"*)***
  %4 = load i32 (%"class.blink::AXObject"*, %"class.blink::HeapVector.3453"*)**, i32 (%"class.blink::AXObject"*, %"class.blink::HeapVector.3453"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.blink::AXObject"*, %"class.blink::HeapVector.3453"*)*, i32 (%"class.blink::AXObject"*, %"class.blink::HeapVector.3453"*)** %4, i64 52
  %6 = load i32 (%"class.blink::AXObject"*, %"class.blink::HeapVector.3453"*)*, i32 (%"class.blink::AXObject"*, %"class.blink::HeapVector.3453"*)** %5, align 8
  %7 = tail call i32 %6(%"class.blink::AXObject"* %0, %"class.blink::HeapVector.3453"* %1) #22
  %8 = icmp eq i32 %7, 1
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8AXObject22DefaultObjectInclusionEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.3453"*) unnamed_addr #2 align 2 {
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %3 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 8
  %5 = and i8 %4, 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = tail call zeroext i1 @_ZNK5blink8AXObject20CanSetFocusAttributeEv(%"class.blink::AXObject"* %0)
  br i1 %8, label %13, label %9

9:                                                ; preds = %7
  %10 = icmp eq %"class.blink::HeapVector.3453"* %1, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  %12 = tail call zeroext i1 @_ZNK5blink8AXObject26ComputeIsInertOrAriaHiddenEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXObject"* %0, %"class.blink::HeapVector.3453"* nonnull %1)
  br label %13

13:                                               ; preds = %2, %7, %11, %9
  %14 = phi i32 [ 1, %9 ], [ 1, %11 ], [ 2, %7 ], [ 2, %2 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject19IsInertOrAriaHiddenEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true)
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 4
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject12IsAriaHiddenEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca i8, align 1
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %3 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 8
  %5 = and i8 %4, 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %64, label %7

7:                                                ; preds = %1
  %8 = icmp eq %"class.blink::AXObject"* %0, null
  br i1 %8, label %61, label %9

9:                                                ; preds = %7, %58
  %10 = phi %"class.blink::AXObject"* [ %59, %58 ], [ %0, %7 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22
  store i8 -86, i8* %2, align 1
  %11 = bitcast %"class.blink::AXObject"* %10 to i1 (%"class.blink::AXObject"*, i32, i8*)***
  %12 = load i1 (%"class.blink::AXObject"*, i32, i8*)**, i1 (%"class.blink::AXObject"*, i32, i8*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %12, i64 6
  %14 = load i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %13, align 8
  %15 = call zeroext i1 %14(%"class.blink::AXObject"* nonnull %10, i32 4, i8* nonnull dereferenceable(1) %2) #22
  %16 = load i8, i8* %2, align 1
  %17 = icmp ne i8 %16, 0
  %18 = and i1 %15, %17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22
  br i1 %18, label %61, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %10, i64 0, i32 14, i32 0, i32 0
  %21 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %20, align 8
  %22 = icmp eq %"class.blink::AXObjectCacheImpl"* %21, null
  br i1 %22, label %61, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %10, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %24, align 8
  %26 = icmp eq %"class.blink::AXObject"* %25, null
  br i1 %26, label %27, label %34

27:                                               ; preds = %23
  %28 = bitcast %"class.blink::AXObject"* %10 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %29 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %29, i64 124
  %31 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %30, align 8
  %32 = call %"class.blink::Node"* %31(%"class.blink::AXObject"* nonnull %10) #22
  %33 = icmp eq %"class.blink::Node"* %32, null
  br i1 %33, label %48, label %38

34:                                               ; preds = %23
  %35 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %25, i64 0, i32 14, i32 0, i32 0
  %36 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %35, align 8
  %37 = icmp eq %"class.blink::AXObjectCacheImpl"* %36, null
  br i1 %37, label %48, label %58

38:                                               ; preds = %27
  %39 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %28, align 8
  %40 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %39, i64 124
  %41 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %40, align 8
  %42 = call %"class.blink::Node"* %41(%"class.blink::AXObject"* nonnull %10) #22
  %43 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %20, align 8
  %44 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %43, i64 0, i32 2, i32 0, i32 0
  %45 = load %"class.blink::Document"*, %"class.blink::Document"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %45, i64 0, i32 0, i32 0
  %47 = icmp eq %"class.blink::Node"* %42, %46
  br i1 %47, label %58, label %48

48:                                               ; preds = %38, %27, %34
  %49 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* nonnull %10) #22
  %50 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %10, i64 0, i32 2
  %51 = ptrtoint %"class.blink::AXObject"* %49 to i64
  %52 = bitcast %"class.blink::Member.3082"* %50 to i64*
  store atomic i64 %51, i64* %52 monotonic, align 8
  %53 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %48
  %56 = bitcast %"class.blink::AXObject"* %49 to i8*
  %57 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %56) #22
  br label %58

58:                                               ; preds = %34, %48, %55, %38
  %59 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %24, align 8
  %60 = icmp eq %"class.blink::AXObject"* %59, null
  br i1 %60, label %61, label %9

61:                                               ; preds = %19, %9, %58, %7
  %62 = phi %"class.blink::AXObject"* [ null, %7 ], [ null, %19 ], [ null, %58 ], [ %10, %9 ]
  %63 = icmp ne %"class.blink::AXObject"* %62, null
  br label %64

64:                                               ; preds = %1, %61
  %65 = phi i1 [ false, %1 ], [ %63, %61 ]
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject14AriaHiddenRootEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca i8, align 1
  %3 = icmp eq %"class.blink::AXObject"* %0, null
  br i1 %3, label %56, label %4

4:                                                ; preds = %1, %53
  %5 = phi %"class.blink::AXObject"* [ %54, %53 ], [ %0, %1 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22
  store i8 -86, i8* %2, align 1
  %6 = bitcast %"class.blink::AXObject"* %5 to i1 (%"class.blink::AXObject"*, i32, i8*)***
  %7 = load i1 (%"class.blink::AXObject"*, i32, i8*)**, i1 (%"class.blink::AXObject"*, i32, i8*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %7, i64 6
  %9 = load i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %8, align 8
  %10 = call zeroext i1 %9(%"class.blink::AXObject"* nonnull %5, i32 4, i8* nonnull dereferenceable(1) %2) #22
  %11 = load i8, i8* %2, align 1
  %12 = icmp ne i8 %11, 0
  %13 = and i1 %10, %12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22
  br i1 %13, label %56, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %5, i64 0, i32 14, i32 0, i32 0
  %16 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %15, align 8
  %17 = icmp eq %"class.blink::AXObjectCacheImpl"* %16, null
  br i1 %17, label %56, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %5, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %19, align 8
  %21 = icmp eq %"class.blink::AXObject"* %20, null
  br i1 %21, label %22, label %29

22:                                               ; preds = %18
  %23 = bitcast %"class.blink::AXObject"* %5 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %24 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %24, i64 124
  %26 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %25, align 8
  %27 = call %"class.blink::Node"* %26(%"class.blink::AXObject"* nonnull %5) #22
  %28 = icmp eq %"class.blink::Node"* %27, null
  br i1 %28, label %43, label %33

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %20, i64 0, i32 14, i32 0, i32 0
  %31 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %30, align 8
  %32 = icmp eq %"class.blink::AXObjectCacheImpl"* %31, null
  br i1 %32, label %43, label %53

33:                                               ; preds = %22
  %34 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %23, align 8
  %35 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %34, i64 124
  %36 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %35, align 8
  %37 = call %"class.blink::Node"* %36(%"class.blink::AXObject"* nonnull %5) #22
  %38 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %15, align 8
  %39 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %38, i64 0, i32 2, i32 0, i32 0
  %40 = load %"class.blink::Document"*, %"class.blink::Document"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %40, i64 0, i32 0, i32 0
  %42 = icmp eq %"class.blink::Node"* %37, %41
  br i1 %42, label %53, label %43

43:                                               ; preds = %33, %22, %29
  %44 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* nonnull %5) #22
  %45 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %5, i64 0, i32 2
  %46 = ptrtoint %"class.blink::AXObject"* %44 to i64
  %47 = bitcast %"class.blink::Member.3082"* %45 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  %48 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %43
  %51 = bitcast %"class.blink::AXObject"* %44 to i8*
  %52 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %51) #22
  br label %53

53:                                               ; preds = %29, %43, %50, %33
  %54 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %19, align 8
  %55 = icmp eq %"class.blink::AXObject"* %54, null
  br i1 %55, label %56, label %4

56:                                               ; preds = %14, %4, %53, %1
  %57 = phi %"class.blink::AXObject"* [ null, %1 ], [ null, %14 ], [ null, %53 ], [ %5, %4 ]
  ret %"class.blink::AXObject"* %57
}

declare zeroext i1 @_ZNK5blink4Node7IsInertEv(%"class.blink::Node"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject9InertRootEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase27is_inert_attribute_enabled_E, align 1, !range !2
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %153, label %4

4:                                                ; preds = %1
  %5 = icmp eq %"class.blink::AXObject"* %0, null
  br i1 %5, label %55, label %6

6:                                                ; preds = %4, %52
  %7 = phi %"class.blink::AXObject"* [ %53, %52 ], [ %0, %4 ]
  %8 = bitcast %"class.blink::AXObject"* %7 to i1 (%"class.blink::AXObject"*)***
  %9 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %9, i64 9
  %11 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::AXObject"* nonnull %7) #22
  br i1 %12, label %55, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %7, i64 0, i32 14, i32 0, i32 0
  %15 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %14, align 8
  %16 = icmp eq %"class.blink::AXObjectCacheImpl"* %15, null
  br i1 %16, label %55, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %7, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %18, align 8
  %20 = icmp eq %"class.blink::AXObject"* %19, null
  br i1 %20, label %21, label %28

21:                                               ; preds = %17
  %22 = bitcast %"class.blink::AXObject"* %7 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %23 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %23, i64 124
  %25 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %24, align 8
  %26 = tail call %"class.blink::Node"* %25(%"class.blink::AXObject"* nonnull %7) #22
  %27 = icmp eq %"class.blink::Node"* %26, null
  br i1 %27, label %42, label %32

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %19, i64 0, i32 14, i32 0, i32 0
  %30 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %29, align 8
  %31 = icmp eq %"class.blink::AXObjectCacheImpl"* %30, null
  br i1 %31, label %42, label %52

32:                                               ; preds = %21
  %33 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %22, align 8
  %34 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %33, i64 124
  %35 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %34, align 8
  %36 = tail call %"class.blink::Node"* %35(%"class.blink::AXObject"* nonnull %7) #22
  %37 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %14, align 8
  %38 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %37, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.blink::Document"*, %"class.blink::Document"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %39, i64 0, i32 0, i32 0
  %41 = icmp eq %"class.blink::Node"* %36, %40
  br i1 %41, label %52, label %42

42:                                               ; preds = %32, %21, %28
  %43 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* nonnull %7) #22
  %44 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %7, i64 0, i32 2
  %45 = ptrtoint %"class.blink::AXObject"* %43 to i64
  %46 = bitcast %"class.blink::Member.3082"* %44 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  %47 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %42
  %50 = bitcast %"class.blink::AXObject"* %43 to i8*
  %51 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %50) #22
  br label %52

52:                                               ; preds = %28, %49, %42, %32
  %53 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %18, align 8
  %54 = icmp eq %"class.blink::AXObject"* %53, null
  br i1 %54, label %55, label %6

55:                                               ; preds = %13, %52, %6, %4
  %56 = phi %"class.blink::AXObject"* [ null, %4 ], [ null, %13 ], [ %7, %6 ], [ null, %52 ]
  %57 = bitcast %"class.blink::AXObject"* %56 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %58 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %57, align 8
  %59 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %58, i64 124
  %60 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %59, align 8
  %61 = tail call %"class.blink::Node"* %60(%"class.blink::AXObject"* %56) #22
  %62 = icmp eq %"class.blink::Node"* %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %61, i64 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = and i32 %65, 12
  %67 = icmp eq i32 %66, 0
  %68 = bitcast %"class.blink::Node"* %61 to %"class.blink::Element"*
  br i1 %67, label %78, label %69

69:                                               ; preds = %63, %55
  %70 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %61) #22
  %71 = icmp eq %"class.blink::ContainerNode"* %70, null
  br i1 %71, label %153, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %70, i64 0, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = and i32 %74, 12
  %76 = icmp eq i32 %75, 0
  %77 = bitcast %"class.blink::ContainerNode"* %70 to %"class.blink::Element"*
  br i1 %76, label %78, label %153

78:                                               ; preds = %72, %63
  %79 = phi %"class.blink::Element"* [ %68, %63 ], [ %77, %72 ]
  %80 = icmp eq %"class.blink::Element"* %79, null
  br i1 %80, label %153, label %81

81:                                               ; preds = %78
  %82 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kInertAttrE, align 8
  %83 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %82, i64 0, i32 0, i32 0
  br label %84

84:                                               ; preds = %147, %81
  %85 = phi %"class.blink::Element"* [ %79, %81 ], [ %152, %147 ]
  %86 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %85, i64 0, i32 3, i32 0, i32 0
  %87 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %86, align 8
  %88 = icmp eq %"class.blink::ElementData"* %87, null
  br i1 %88, label %143, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %87, i64 0, i32 0, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %101, label %94

94:                                               ; preds = %89
  %95 = bitcast %"class.blink::ElementData"* %87 to %"class.blink::UniqueElementData"*
  %96 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %87, i64 1, i32 1
  %97 = bitcast %"class.blink::Member.354"* %96 to %"class.blink::Attribute"**
  %98 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %95, i64 0, i32 2, i32 0, i32 0, i32 2
  %100 = load i32, i32* %99, align 4
  br label %106

101:                                              ; preds = %89
  %102 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %87, i64 1
  %103 = bitcast %"class.blink::ElementData"* %102 to %"class.blink::Attribute"*
  %104 = lshr i32 %91, 1
  %105 = and i32 %104, 268435455
  br label %106

106:                                              ; preds = %101, %94
  %107 = phi %"class.blink::Attribute"* [ %103, %101 ], [ %98, %94 ]
  %108 = phi i32 [ %105, %101 ], [ %100, %94 ]
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %107, i64 %109
  %111 = icmp eq i32 %108, 0
  br i1 %111, label %143, label %112

112:                                              ; preds = %106
  %113 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %83, align 8
  %114 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %113, i64 0, i32 3, i32 0, i32 0, i32 0
  %115 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %113, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %116

116:                                              ; preds = %132, %112
  %117 = phi %"class.blink::Attribute"* [ %107, %112 ], [ %133, %132 ]
  %118 = phi i32 [ 0, %112 ], [ %134, %132 ]
  %119 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %117, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %119, align 8
  %121 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %120, %113
  br i1 %121, label %136, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %120, i64 0, i32 3, i32 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %124, %125
  br i1 %126, label %127, label %132

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %120, i64 0, i32 4, i32 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %129, %130
  br i1 %131, label %136, label %132

132:                                              ; preds = %127, %122
  %133 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %117, i64 1
  %134 = add i32 %118, 1
  %135 = icmp eq %"class.blink::Attribute"* %133, %110
  br i1 %135, label %143, label %116

136:                                              ; preds = %116, %127
  %137 = icmp eq i32 %118, -1
  br i1 %137, label %143, label %138

138:                                              ; preds = %136
  %139 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %140 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %85, i64 0, i32 0, i32 0
  %142 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %140, %"class.blink::Node"* %141) #22
  br label %153

143:                                              ; preds = %132, %136, %106, %84
  %144 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %85, i64 0, i32 0, i32 0
  %145 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %144) #22
  %146 = icmp eq %"class.blink::ContainerNode"* %145, null
  br i1 %146, label %153, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %145, i64 0, i32 0, i32 1
  %149 = load i32, i32* %148, align 8
  %150 = and i32 %149, 12
  %151 = icmp eq i32 %150, 0
  %152 = bitcast %"class.blink::ContainerNode"* %145 to %"class.blink::Element"*
  br i1 %151, label %84, label %153

153:                                              ; preds = %147, %143, %69, %72, %78, %1, %138
  %154 = phi %"class.blink::AXObject"* [ null, %1 ], [ %142, %138 ], [ null, %78 ], [ null, %72 ], [ null, %69 ], [ null, %143 ], [ null, %147 ]
  ret %"class.blink::AXObject"* %154
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject26IsBlockedByAriaModalDialogEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.3453"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::IgnoredReason", align 8
  %4 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %5 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %4, align 8
  %6 = tail call %"class.blink::AXObject"* @_ZNK5blink17AXObjectCacheImpl24GetActiveAriaModalDialogEv(%"class.blink::AXObjectCacheImpl"* %5) #22
  %7 = icmp eq %"class.blink::AXObject"* %6, null
  %8 = icmp eq %"class.blink::AXObject"* %6, %0
  %9 = or i1 %7, %8
  br i1 %9, label %162, label %10

10:                                               ; preds = %2
  %11 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %4, align 8
  %12 = icmp eq %"class.blink::AXObjectCacheImpl"* %11, null
  br i1 %12, label %100, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %14, align 8
  %16 = icmp eq %"class.blink::AXObject"* %15, null
  br i1 %16, label %17, label %24

17:                                               ; preds = %13
  %18 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %19 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %19, i64 124
  %21 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %20, align 8
  %22 = tail call %"class.blink::Node"* %21(%"class.blink::AXObject"* %0) #22
  %23 = icmp eq %"class.blink::Node"* %22, null
  br i1 %23, label %38, label %28

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %15, i64 0, i32 14, i32 0, i32 0
  %26 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %25, align 8
  %27 = icmp eq %"class.blink::AXObjectCacheImpl"* %26, null
  br i1 %27, label %38, label %48

28:                                               ; preds = %17
  %29 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %18, align 8
  %30 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %29, i64 124
  %31 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %30, align 8
  %32 = tail call %"class.blink::Node"* %31(%"class.blink::AXObject"* %0) #22
  %33 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %4, align 8
  %34 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %33, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.blink::Document"*, %"class.blink::Document"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %35, i64 0, i32 0, i32 0
  %37 = icmp eq %"class.blink::Node"* %32, %36
  br i1 %37, label %48, label %38

38:                                               ; preds = %28, %17, %24
  %39 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* %0) #22
  %40 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2
  %41 = ptrtoint %"class.blink::AXObject"* %39 to i64
  %42 = bitcast %"class.blink::Member.3082"* %40 to i64*
  store atomic i64 %41, i64* %42 monotonic, align 8
  %43 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.blink::AXObject"* %39 to i8*
  %47 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %46) #22
  br label %48

48:                                               ; preds = %24, %45, %38, %28
  %49 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %14, align 8
  %50 = icmp ne %"class.blink::AXObject"* %49, null
  %51 = icmp ne %"class.blink::AXObject"* %49, %6
  %52 = and i1 %50, %51
  br i1 %52, label %53, label %98

53:                                               ; preds = %48, %93
  %54 = phi %"class.blink::AXObject"* [ %94, %93 ], [ %49, %48 ]
  %55 = bitcast %"class.blink::AXObject"* %54 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %56 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %54, i64 0, i32 14, i32 0, i32 0
  %57 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %56, align 8
  %58 = icmp eq %"class.blink::AXObjectCacheImpl"* %57, null
  br i1 %58, label %100, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %54, i64 0, i32 2, i32 0, i32 0
  %61 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %60, align 8
  %62 = icmp eq %"class.blink::AXObject"* %61, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %59
  %64 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %55, align 8
  %65 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %64, i64 124
  %66 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %65, align 8
  %67 = tail call %"class.blink::Node"* %66(%"class.blink::AXObject"* nonnull %54) #22
  %68 = icmp eq %"class.blink::Node"* %67, null
  br i1 %68, label %83, label %73

69:                                               ; preds = %59
  %70 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %61, i64 0, i32 14, i32 0, i32 0
  %71 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %70, align 8
  %72 = icmp eq %"class.blink::AXObjectCacheImpl"* %71, null
  br i1 %72, label %83, label %93

73:                                               ; preds = %63
  %74 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %55, align 8
  %75 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %74, i64 124
  %76 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %75, align 8
  %77 = tail call %"class.blink::Node"* %76(%"class.blink::AXObject"* nonnull %54) #22
  %78 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %56, align 8
  %79 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %78, i64 0, i32 2, i32 0, i32 0
  %80 = load %"class.blink::Document"*, %"class.blink::Document"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %80, i64 0, i32 0, i32 0
  %82 = icmp eq %"class.blink::Node"* %77, %81
  br i1 %82, label %93, label %83

83:                                               ; preds = %73, %63, %69
  %84 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* nonnull %54) #22
  %85 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %54, i64 0, i32 2
  %86 = ptrtoint %"class.blink::AXObject"* %84 to i64
  %87 = bitcast %"class.blink::Member.3082"* %85 to i64*
  store atomic i64 %86, i64* %87 monotonic, align 8
  %88 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %83
  %91 = bitcast %"class.blink::AXObject"* %84 to i8*
  %92 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %91) #22
  br label %93

93:                                               ; preds = %69, %90, %83, %73
  %94 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %60, align 8
  %95 = icmp ne %"class.blink::AXObject"* %94, null
  %96 = icmp ne %"class.blink::AXObject"* %94, %6
  %97 = and i1 %95, %96
  br i1 %97, label %53, label %98

98:                                               ; preds = %93, %48
  %99 = phi i1 [ %50, %48 ], [ %95, %93 ]
  br i1 %99, label %162, label %100

100:                                              ; preds = %53, %10, %98
  %101 = icmp eq %"class.blink::HeapVector.3453"* %1, null
  br i1 %101, label %162, label %102

102:                                              ; preds = %100
  %103 = bitcast %"class.blink::IgnoredReason"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #22
  %104 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %3, i64 0, i32 0
  store i32 1, i32* %104, align 8
  %105 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %3, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* %6, %"class.blink::AXObject"** %105, align 8
  %106 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %107, %109
  br i1 %110, label %159, label %111, !prof !3

111:                                              ; preds = %102
  %112 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %112, align 8
  %114 = zext i32 %107 to i64
  %115 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 %114, i32 0
  store i32 1, i32* %115, align 8
  %116 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 %114, i32 1
  %117 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %3, i64 0, i32 1
  %118 = bitcast %"class.blink::Member.3459"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.blink::Member.3459"* %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %156, label %123

123:                                              ; preds = %111
  %124 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %125 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %124, i64 0, i32 1
  %126 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %125) #22
  %127 = icmp eq i8* %126, null
  br i1 %127, label %128, label %130, !prof !3

128:                                              ; preds = %123
  %129 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %125, i8* %129) #22
  br label %130

130:                                              ; preds = %128, %123
  %131 = phi i8* [ %129, %128 ], [ %126, %123 ]
  %132 = bitcast i8* %131 to %"class.blink::ThreadState"**
  %133 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %133, i64 0, i32 9
  %135 = load i8, i8* %134, align 1, !range !2
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %156, label %137

137:                                              ; preds = %130
  %138 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %133, i64 0, i32 13
  %139 = load i64, i64* %138, align 8
  %140 = add i64 %139, 1
  store i64 %140, i64* %138, align 8
  %141 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %133, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %142 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %141, align 8
  %143 = load atomic i64, i64* %120 monotonic, align 8
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %153, label %145

145:                                              ; preds = %137
  %146 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %142, i64 0, i32 0, i32 0
  %147 = inttoptr i64 %143 to i8*
  %148 = bitcast %"class.blink::MarkingVisitor"* %142 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %149 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %149, i64 5
  %151 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %150, align 8
  tail call void %151(%"class.blink::Visitor"* %146, i8* nonnull %147, i8* %147, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #22
  %152 = load i64, i64* %138, align 8
  br label %153

153:                                              ; preds = %145, %137
  %154 = phi i64 [ %140, %137 ], [ %152, %145 ]
  %155 = add i64 %154, -1
  store i64 %155, i64* %138, align 8
  br label %156

156:                                              ; preds = %111, %130, %153
  %157 = load i32, i32* %106, align 4
  %158 = add i32 %157, 1
  store i32 %158, i32* %106, align 4
  br label %161

159:                                              ; preds = %102
  %160 = getelementptr inbounds %"class.blink::HeapVector.3453", %"class.blink::HeapVector.3453"* %1, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3456"* %160, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %3) #22
  br label %161

161:                                              ; preds = %156, %159
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #22
  br label %162

162:                                              ; preds = %161, %100, %98, %2
  %163 = phi i1 [ false, %2 ], [ false, %98 ], [ true, %100 ], [ true, %161 ]
  ret i1 %163
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject7IsModalEv(%"class.blink::AXObject"*) unnamed_addr #2 align 2 {
  %2 = alloca i8, align 1
  %3 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %58 [
    i32 36, label %5
    i32 3, label %5
  ]

5:                                                ; preds = %1, %1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22
  store i8 0, i8* %2, align 1
  %6 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*, i32, i8*)***
  %7 = load i1 (%"class.blink::AXObject"*, i32, i8*)**, i1 (%"class.blink::AXObject"*, i32, i8*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %7, i64 6
  %9 = load i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %8, align 8
  %10 = call zeroext i1 %9(%"class.blink::AXObject"* %0, i32 5, i8* nonnull dereferenceable(1) %2) #22
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = load i8, i8* %2, align 1, !range !2
  %13 = icmp ne i8 %12, 0
  br label %56

14:                                               ; preds = %5
  %15 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %16 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %16, i64 124
  %18 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %17, align 8
  %19 = call %"class.blink::Node"* %18(%"class.blink::AXObject"* %0) #22
  %20 = icmp eq %"class.blink::Node"* %19, null
  br i1 %20, label %56, label %21

21:                                               ; preds = %14
  %22 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %15, align 8
  %23 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %22, i64 124
  %24 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %23, align 8
  %25 = call %"class.blink::Node"* %24(%"class.blink::AXObject"* %0) #22
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 48
  %29 = icmp ne i32 %28, 0
  %30 = icmp eq %"class.blink::Node"* %25, null
  %31 = or i1 %30, %29
  br i1 %31, label %56, label %32

32:                                               ; preds = %21
  %33 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kDialogTagE, align 8
  %34 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 1, i32 2
  %37 = bitcast %"class.blink::Member.318"* %36 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %40, %42
  br i1 %43, label %44, label %56

44:                                               ; preds = %32
  %45 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %15, align 8
  %46 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %45, i64 124
  %47 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %46, align 8
  %48 = call %"class.blink::Node"* %47(%"class.blink::AXObject"* %0) #22
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %48, i64 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %44
  %54 = bitcast %"class.blink::Node"* %48 to %"class.blink::Element"*
  %55 = call zeroext i1 @_ZNK5blink7Element22HasElementFlagInternalENS_12ElementFlagsE(%"class.blink::Element"* %54, i32 16) #22
  br label %56

56:                                               ; preds = %21, %53, %44, %32, %14, %11
  %57 = phi i1 [ %13, %11 ], [ false, %14 ], [ false, %32 ], [ false, %44 ], [ %55, %53 ], [ false, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22
  br label %58

58:                                               ; preds = %1, %56
  %59 = phi i1 [ %57, %56 ], [ false, %1 ]
  ret i1 %59
}

declare %"class.blink::AXObject"* @_ZNK5blink17AXObjectCacheImpl24GetActiveAriaModalDialogEv(%"class.blink::AXObjectCacheImpl"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject14IsDescendantOfERKS0_(%"class.blink::AXObject"*, %"class.blink::AXObject"* readnone dereferenceable(120)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %4 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %3, align 8
  %5 = icmp eq %"class.blink::AXObjectCacheImpl"* %4, null
  br i1 %5, label %91, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %7, align 8
  %9 = icmp eq %"class.blink::AXObject"* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %12 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %12, i64 124
  %14 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %13, align 8
  %15 = tail call %"class.blink::Node"* %14(%"class.blink::AXObject"* %0) #22
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %31, label %21

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %8, i64 0, i32 14, i32 0, i32 0
  %19 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %18, align 8
  %20 = icmp eq %"class.blink::AXObjectCacheImpl"* %19, null
  br i1 %20, label %31, label %41

21:                                               ; preds = %10
  %22 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %11, align 8
  %23 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %22, i64 124
  %24 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %23, align 8
  %25 = tail call %"class.blink::Node"* %24(%"class.blink::AXObject"* %0) #22
  %26 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %3, align 8
  %27 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %26, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %28, i64 0, i32 0, i32 0
  %30 = icmp eq %"class.blink::Node"* %25, %29
  br i1 %30, label %41, label %31

31:                                               ; preds = %21, %10, %17
  %32 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* %0) #22
  %33 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2
  %34 = ptrtoint %"class.blink::AXObject"* %32 to i64
  %35 = bitcast %"class.blink::Member.3082"* %33 to i64*
  store atomic i64 %34, i64* %35 monotonic, align 8
  %36 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %31
  %39 = bitcast %"class.blink::AXObject"* %32 to i8*
  %40 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %39) #22
  br label %41

41:                                               ; preds = %17, %38, %31, %21
  %42 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %7, align 8
  %43 = icmp ne %"class.blink::AXObject"* %42, null
  %44 = icmp ne %"class.blink::AXObject"* %42, %1
  %45 = and i1 %43, %44
  br i1 %45, label %46, label %91

46:                                               ; preds = %41, %86
  %47 = phi %"class.blink::AXObject"* [ %87, %86 ], [ %42, %41 ]
  %48 = bitcast %"class.blink::AXObject"* %47 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %49 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %47, i64 0, i32 14, i32 0, i32 0
  %50 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %49, align 8
  %51 = icmp eq %"class.blink::AXObjectCacheImpl"* %50, null
  br i1 %51, label %91, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %47, i64 0, i32 2, i32 0, i32 0
  %54 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %53, align 8
  %55 = icmp eq %"class.blink::AXObject"* %54, null
  br i1 %55, label %56, label %62

56:                                               ; preds = %52
  %57 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %48, align 8
  %58 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %57, i64 124
  %59 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %58, align 8
  %60 = tail call %"class.blink::Node"* %59(%"class.blink::AXObject"* nonnull %47) #22
  %61 = icmp eq %"class.blink::Node"* %60, null
  br i1 %61, label %76, label %66

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %54, i64 0, i32 14, i32 0, i32 0
  %64 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %63, align 8
  %65 = icmp eq %"class.blink::AXObjectCacheImpl"* %64, null
  br i1 %65, label %76, label %86

66:                                               ; preds = %56
  %67 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %48, align 8
  %68 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %67, i64 124
  %69 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %68, align 8
  %70 = tail call %"class.blink::Node"* %69(%"class.blink::AXObject"* nonnull %47) #22
  %71 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %49, align 8
  %72 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %71, i64 0, i32 2, i32 0, i32 0
  %73 = load %"class.blink::Document"*, %"class.blink::Document"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %73, i64 0, i32 0, i32 0
  %75 = icmp eq %"class.blink::Node"* %70, %74
  br i1 %75, label %86, label %76

76:                                               ; preds = %66, %56, %62
  %77 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* nonnull %47) #22
  %78 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %47, i64 0, i32 2
  %79 = ptrtoint %"class.blink::AXObject"* %77 to i64
  %80 = bitcast %"class.blink::Member.3082"* %78 to i64*
  store atomic i64 %79, i64* %80 monotonic, align 8
  %81 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %76
  %84 = bitcast %"class.blink::AXObject"* %77 to i8*
  %85 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %84) #22
  br label %86

86:                                               ; preds = %62, %83, %76, %66
  %87 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %53, align 8
  %88 = icmp ne %"class.blink::AXObject"* %87, null
  %89 = icmp ne %"class.blink::AXObject"* %87, %1
  %90 = and i1 %88, %89
  br i1 %90, label %46, label %91

91:                                               ; preds = %46, %86, %2, %41
  %92 = phi i1 [ %43, %41 ], [ false, %2 ], [ false, %46 ], [ %88, %86 ]
  ret i1 %92
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject9IsVisibleEv(%"class.blink::AXObject"*) unnamed_addr #2 align 2 {
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %7 = load i8, i8* %2, align 8
  %8 = and i8 %7, 8
  %9 = icmp eq i8 %8, 0
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i1 [ false, %1 ], [ %9, %6 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject16IsHiddenViaStyleEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true)
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 8
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject32DispatchEventToAOMEventListenersERNS_5EventE(%"class.blink::AXObject"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::HeapVector.3257", align 8
  %4 = alloca %"class.blink::AccessibleNode"*, align 8
  %5 = bitcast %"class.blink::HeapVector.3257"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #22
  %6 = getelementptr inbounds %"class.blink::HeapVector.3257", %"class.blink::HeapVector.3257"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HeapVector.3257", %"class.blink::HeapVector.3257"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::HeapVector.3257", %"class.blink::HeapVector.3257"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #22
  %9 = icmp eq %"class.blink::AXObject"* %0, null
  br i1 %9, label %214, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::AccessibleNode"** %4 to i8*
  %12 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 1
  %13 = bitcast %"class.blink::AccessibleNode"** %4 to i64*
  %14 = getelementptr inbounds %"class.blink::HeapVector.3257", %"class.blink::HeapVector.3257"* %3, i64 0, i32 0
  br label %19

15:                                               ; preds = %57, %96
  %16 = load i32, i32* %8, align 4
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::HeapVector.3257", %"class.blink::HeapVector.3257"* %3, i64 0, i32 0
  br i1 %17, label %214, label %99

19:                                               ; preds = %10, %96
  %20 = phi %"class.blink::AXObject"* [ %0, %10 ], [ %97, %96 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #22
  store %"class.blink::AccessibleNode"* inttoptr (i64 -6148914691236517206 to %"class.blink::AccessibleNode"*), %"class.blink::AccessibleNode"** %4, align 8
  %21 = bitcast %"class.blink::AXObject"* %20 to %"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)***
  %22 = load %"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)**, %"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)*, %"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)** %22, i64 7
  %24 = load %"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)*, %"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)** %23, align 8
  %25 = call %"class.blink::AccessibleNode"* %24(%"class.blink::AXObject"* nonnull %20) #22
  store %"class.blink::AccessibleNode"* %25, %"class.blink::AccessibleNode"** %4, align 8
  %26 = icmp eq %"class.blink::AccessibleNode"* %25, null
  br i1 %26, label %57, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %25, i64 0, i32 0, i32 0
  %29 = bitcast %"class.blink::AccessibleNode"* %25 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %30 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %30, i64 25
  %32 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %31, align 8
  %33 = call %"class.blink::EventTargetData"* %32(%"class.blink::EventTarget"* %28) #22
  %34 = icmp eq %"class.blink::EventTargetData"* %33, null
  br i1 %34, label %57, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %33, i64 0, i32 0
  %37 = call zeroext i1 @_ZNK5blink16EventListenerMap8ContainsERKN3WTF12AtomicStringE(%"class.blink::EventListenerMap"* %36, %"class.WTF::AtomicString"* dereferenceable(8) %12) #22
  br i1 %37, label %38, label %57

38:                                               ; preds = %35
  %39 = load i32, i32* %8, align 4
  %40 = load i32, i32* %7, align 8
  %41 = icmp eq i32 %39, %40
  br i1 %41, label %56, label %42, !prof !3

42:                                               ; preds = %38
  %43 = load %"class.blink::Member.3263"*, %"class.blink::Member.3263"** %6, align 8
  %44 = zext i32 %39 to i64
  %45 = getelementptr inbounds %"class.blink::Member.3263", %"class.blink::Member.3263"* %43, i64 %44
  %46 = load i64, i64* %13, align 8
  %47 = bitcast %"class.blink::Member.3263"* %45 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  %48 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %42
  %51 = inttoptr i64 %46 to i8*
  %52 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %51) #22
  br label %53

53:                                               ; preds = %50, %42
  %54 = load i32, i32* %8, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %8, align 4
  br label %57

56:                                               ; preds = %38
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.3260"* nonnull %14, %"class.blink::AccessibleNode"** nonnull dereferenceable(8) %4) #22
  br label %57

57:                                               ; preds = %27, %56, %53, %35, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #22
  %58 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %20, i64 0, i32 14, i32 0, i32 0
  %59 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %58, align 8
  %60 = icmp eq %"class.blink::AXObjectCacheImpl"* %59, null
  br i1 %60, label %15, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %20, i64 0, i32 2, i32 0, i32 0
  %63 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %62, align 8
  %64 = icmp eq %"class.blink::AXObject"* %63, null
  br i1 %64, label %65, label %72

65:                                               ; preds = %61
  %66 = bitcast %"class.blink::AXObject"* %20 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %67 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %66, align 8
  %68 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %67, i64 124
  %69 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %68, align 8
  %70 = call %"class.blink::Node"* %69(%"class.blink::AXObject"* nonnull %20) #22
  %71 = icmp eq %"class.blink::Node"* %70, null
  br i1 %71, label %86, label %76

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %63, i64 0, i32 14, i32 0, i32 0
  %74 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %73, align 8
  %75 = icmp eq %"class.blink::AXObjectCacheImpl"* %74, null
  br i1 %75, label %86, label %96

76:                                               ; preds = %65
  %77 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %66, align 8
  %78 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %77, i64 124
  %79 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %78, align 8
  %80 = call %"class.blink::Node"* %79(%"class.blink::AXObject"* nonnull %20) #22
  %81 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %58, align 8
  %82 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %81, i64 0, i32 2, i32 0, i32 0
  %83 = load %"class.blink::Document"*, %"class.blink::Document"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %83, i64 0, i32 0, i32 0
  %85 = icmp eq %"class.blink::Node"* %80, %84
  br i1 %85, label %96, label %86

86:                                               ; preds = %76, %72, %65
  %87 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* nonnull %20) #22
  %88 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %20, i64 0, i32 2
  %89 = ptrtoint %"class.blink::AXObject"* %87 to i64
  %90 = bitcast %"class.blink::Member.3082"* %88 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::AXObject"* %87 to i8*
  %95 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #22
  br label %96

96:                                               ; preds = %72, %76, %86, %93
  %97 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %62, align 8
  %98 = icmp eq %"class.blink::AXObject"* %97, null
  br i1 %98, label %15, label %19

99:                                               ; preds = %15
  %100 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %101 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %100, align 8
  %102 = call zeroext i1 @_ZNK5blink17AXObjectCacheImpl24CanCallAOMEventListenersEv(%"class.blink::AXObjectCacheImpl"* %101) #22
  br i1 %102, label %105, label %103

103:                                              ; preds = %99
  %104 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %100, align 8
  call void @_ZN5blink17AXObjectCacheImpl33RequestAOMEventListenerPermissionEv(%"class.blink::AXObjectCacheImpl"* %104) #22
  br label %214

105:                                              ; preds = %99
  %106 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)***
  %107 = load %"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)**, %"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)*** %106, align 8
  %108 = getelementptr inbounds %"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)*, %"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)** %107, i64 7
  %109 = load %"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)*, %"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)** %108, align 8
  %110 = call %"class.blink::AccessibleNode"* %109(%"class.blink::AXObject"* nonnull %0) #22
  %111 = icmp eq %"class.blink::AccessibleNode"* %110, null
  br i1 %111, label %112, label %128

112:                                              ; preds = %105
  %113 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %114 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %113, align 8
  %115 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %114, i64 124
  %116 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %115, align 8
  %117 = call %"class.blink::Node"* %116(%"class.blink::AXObject"* nonnull %0) #22
  %118 = icmp eq %"class.blink::Node"* %117, null
  br i1 %118, label %214, label %119

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %117, i64 0, i32 1
  %121 = load i32, i32* %120, align 8
  %122 = and i32 %121, 12
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %214

124:                                              ; preds = %119
  %125 = bitcast %"class.blink::Node"* %117 to %"class.blink::Element"*
  %126 = call %"class.blink::AccessibleNode"* @_ZN5blink7Element14accessibleNodeEv(%"class.blink::Element"* nonnull %125) #22
  %127 = icmp eq %"class.blink::AccessibleNode"* %126, null
  br i1 %127, label %214, label %128

128:                                              ; preds = %105, %124
  %129 = phi %"class.blink::AccessibleNode"* [ %126, %124 ], [ %110, %105 ]
  %130 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %129, i64 0, i32 0, i32 0
  call void @_ZN5blink5Event9SetTargetEPNS_11EventTargetE(%"class.blink::Event"* %1, %"class.blink::EventTarget"* %130) #22
  %131 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 4
  store i8 1, i8* %131, align 8
  %132 = load i32, i32* %8, align 4
  %133 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 6
  %134 = bitcast %"class.blink::Member.3467"* %133 to i64*
  %135 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  br label %136

136:                                              ; preds = %155, %128
  %137 = phi i32 [ %132, %128 ], [ %138, %155 ]
  %138 = add nsw i32 %137, -1
  %139 = icmp sgt i32 %137, 0
  br i1 %139, label %140, label %164

140:                                              ; preds = %136
  %141 = call dereferenceable(8) %"class.blink::Member.3263"* @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3260"* nonnull %18, i32 %138) #22
  %142 = getelementptr inbounds %"class.blink::Member.3263", %"class.blink::Member.3263"* %141, i64 0, i32 0, i32 0
  %143 = load %"class.blink::AccessibleNode"*, %"class.blink::AccessibleNode"** %142, align 8
  %144 = icmp eq %"class.blink::AccessibleNode"* %143, %129
  br i1 %144, label %164, label %145

145:                                              ; preds = %140
  %146 = call dereferenceable(8) %"class.blink::Member.3263"* @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3260"* nonnull %18, i32 %138) #22
  %147 = getelementptr inbounds %"class.blink::Member.3263", %"class.blink::Member.3263"* %146, i64 0, i32 0, i32 0
  %148 = load %"class.blink::AccessibleNode"*, %"class.blink::AccessibleNode"** %147, align 8
  %149 = ptrtoint %"class.blink::AccessibleNode"* %148 to i64
  store atomic i64 %149, i64* %134 monotonic, align 8
  %150 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %155, label %152

152:                                              ; preds = %145
  %153 = bitcast %"class.blink::AccessibleNode"* %148 to i8*
  %154 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %153) #22
  br label %155

155:                                              ; preds = %145, %152
  %156 = call dereferenceable(8) %"class.blink::Member.3263"* @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3260"* nonnull %18, i32 %138) #22
  %157 = getelementptr inbounds %"class.blink::Member.3263", %"class.blink::Member.3263"* %156, i64 0, i32 0, i32 0
  %158 = load %"class.blink::AccessibleNode"*, %"class.blink::AccessibleNode"** %157, align 8
  %159 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %158, i64 0, i32 0, i32 0
  %160 = call i32 @_ZN5blink11EventTarget18FireEventListenersERNS_5EventE(%"class.blink::EventTarget"* %159, %"class.blink::Event"* dereferenceable(104) %1) #22
  %161 = load i16, i16* %135, align 8
  %162 = and i16 %161, 24
  %163 = icmp eq i16 %162, 0
  br i1 %163, label %136, label %214

164:                                              ; preds = %140, %136
  store i8 2, i8* %131, align 8
  %165 = call dereferenceable(8) %"class.blink::Member.3263"* @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3260"* nonnull %18, i32 0) #22
  %166 = getelementptr inbounds %"class.blink::Member.3263", %"class.blink::Member.3263"* %165, i64 0, i32 0, i32 0
  %167 = load %"class.blink::AccessibleNode"*, %"class.blink::AccessibleNode"** %166, align 8
  %168 = ptrtoint %"class.blink::AccessibleNode"* %167 to i64
  store atomic i64 %168, i64* %134 monotonic, align 8
  %169 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %174, label %171

171:                                              ; preds = %164
  %172 = bitcast %"class.blink::AccessibleNode"* %167 to i8*
  %173 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %172) #22
  br label %174

174:                                              ; preds = %164, %171
  %175 = call dereferenceable(8) %"class.blink::Member.3263"* @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3260"* nonnull %18, i32 0) #22
  %176 = getelementptr inbounds %"class.blink::Member.3263", %"class.blink::Member.3263"* %175, i64 0, i32 0, i32 0
  %177 = load %"class.blink::AccessibleNode"*, %"class.blink::AccessibleNode"** %176, align 8
  %178 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %177, i64 0, i32 0, i32 0
  %179 = call i32 @_ZN5blink11EventTarget18FireEventListenersERNS_5EventE(%"class.blink::EventTarget"* %178, %"class.blink::Event"* dereferenceable(104) %1) #22
  %180 = load i16, i16* %135, align 8
  %181 = and i16 %180, 24
  %182 = icmp eq i16 %181, 0
  br i1 %182, label %183, label %214

183:                                              ; preds = %174
  store i8 3, i8* %131, align 8
  %184 = load i32, i32* %8, align 4
  %185 = icmp ugt i32 %184, 1
  br i1 %185, label %189, label %210

186:                                              ; preds = %200
  %187 = load i32, i32* %8, align 4
  %188 = icmp ult i32 %209, %187
  br i1 %188, label %189, label %210

189:                                              ; preds = %183, %186
  %190 = phi i32 [ %209, %186 ], [ 1, %183 ]
  %191 = call dereferenceable(8) %"class.blink::Member.3263"* @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3260"* nonnull %18, i32 %190) #22
  %192 = getelementptr inbounds %"class.blink::Member.3263", %"class.blink::Member.3263"* %191, i64 0, i32 0, i32 0
  %193 = load %"class.blink::AccessibleNode"*, %"class.blink::AccessibleNode"** %192, align 8
  %194 = ptrtoint %"class.blink::AccessibleNode"* %193 to i64
  store atomic i64 %194, i64* %134 monotonic, align 8
  %195 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %200, label %197

197:                                              ; preds = %189
  %198 = bitcast %"class.blink::AccessibleNode"* %193 to i8*
  %199 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %198) #22
  br label %200

200:                                              ; preds = %189, %197
  %201 = call dereferenceable(8) %"class.blink::Member.3263"* @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3260"* nonnull %18, i32 %190) #22
  %202 = getelementptr inbounds %"class.blink::Member.3263", %"class.blink::Member.3263"* %201, i64 0, i32 0, i32 0
  %203 = load %"class.blink::AccessibleNode"*, %"class.blink::AccessibleNode"** %202, align 8
  %204 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %203, i64 0, i32 0, i32 0
  %205 = call i32 @_ZN5blink11EventTarget18FireEventListenersERNS_5EventE(%"class.blink::EventTarget"* %204, %"class.blink::Event"* dereferenceable(104) %1) #22
  %206 = load i16, i16* %135, align 8
  %207 = and i16 %206, 24
  %208 = icmp eq i16 %207, 0
  %209 = add nuw i32 %190, 1
  br i1 %208, label %186, label %214

210:                                              ; preds = %186, %183
  %211 = phi i16 [ %180, %183 ], [ %206, %186 ]
  %212 = and i16 %211, 32
  %213 = icmp ne i16 %212, 0
  br label %214

214:                                              ; preds = %155, %200, %2, %119, %174, %112, %210, %124, %15, %103
  %215 = phi i1 [ false, %103 ], [ false, %15 ], [ false, %124 ], [ true, %174 ], [ %213, %210 ], [ false, %119 ], [ false, %112 ], [ false, %2 ], [ true, %200 ], [ true, %155 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #22
  ret i1 %215
}

declare zeroext i1 @_ZNK5blink17AXObjectCacheImpl24CanCallAOMEventListenersEv(%"class.blink::AXObjectCacheImpl"*) local_unnamed_addr #6

declare void @_ZN5blink17AXObjectCacheImpl33RequestAOMEventListenerPermissionEv(%"class.blink::AXObjectCacheImpl"*) local_unnamed_addr #6

declare %"class.blink::AccessibleNode"* @_ZN5blink7Element14accessibleNodeEv(%"class.blink::Element"*) local_unnamed_addr #6

declare void @_ZN5blink5Event9SetTargetEPNS_11EventTargetE(%"class.blink::Event"*, %"class.blink::EventTarget"*) local_unnamed_addr #6

declare i32 @_ZN5blink11EventTarget18FireEventListenersERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject26IsDescendantOfDisabledNodeEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true)
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 16
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject11HasARIAOwnsEPNS_7ElementE(%"class.blink::Element"*) local_unnamed_addr #2 align 2 {
  %2 = icmp eq %"class.blink::Element"* %0, null
  br i1 %2, label %71, label %3

3:                                                ; preds = %1
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kAriaOwnsAttrE, align 8
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %7 = icmp eq %"class.blink::ElementData"* %6, null
  br i1 %7, label %58, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::ElementData"* %6 to %"class.blink::UniqueElementData"*
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1, i32 1
  %16 = bitcast %"class.blink::Member.354"* %15 to %"class.blink::Attribute"**
  %17 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %14, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  br label %25

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1
  %22 = bitcast %"class.blink::ElementData"* %21 to %"class.blink::Attribute"*
  %23 = lshr i32 %10, 1
  %24 = and i32 %23, 268435455
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %"class.blink::Attribute"* [ %22, %20 ], [ %17, %13 ]
  %27 = phi i32 [ %24, %20 ], [ %19, %13 ]
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %26, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %58, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %36

36:                                               ; preds = %51, %31
  %37 = phi %"class.blink::Attribute"* [ %26, %31 ], [ %52, %51 ]
  %38 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %39, %33
  br i1 %40, label %54, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %43, %44
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %48, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %46, %41
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 1
  %53 = icmp eq %"class.blink::Attribute"* %52, %29
  br i1 %53, label %58, label %36

54:                                               ; preds = %46, %36
  %55 = icmp eq %"class.blink::Attribute"* %37, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 1
  br label %60

58:                                               ; preds = %51, %54, %25, %3
  %59 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %60

60:                                               ; preds = %56, %58
  %61 = phi %"class.WTF::AtomicString"* [ %59, %58 ], [ %57, %56 ]
  %62 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %60, %65
  %70 = tail call zeroext i1 @_ZN5blink7Element38HasExplicitlySetAttrAssociatedElementsERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %0, %"class.blink::QualifiedName"* dereferenceable(8) %4) #22
  br label %71

71:                                               ; preds = %65, %69, %1
  %72 = phi i1 [ false, %1 ], [ true, %65 ], [ %70, %69 ]
  ret i1 %72
}

declare %"class.blink::ContainerNode"* @_ZN5blink26LayoutTreeBuilderTraversal6ParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #6

declare %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) local_unnamed_addr #6

declare %"class.blink::HTMLSelectElement"* @_ZNK5blink17HTMLOptionElement18OwnerSelectElementEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject26GetAtomicTextFieldAncestorEi(%"class.blink::AXObject"*, i32) local_unnamed_addr #2 align 2 {
  br label %3

3:                                                ; preds = %64, %2
  %4 = phi %"class.blink::AXObject"* [ %0, %2 ], [ %65, %64 ]
  %5 = phi i32 [ %1, %2 ], [ %67, %64 ]
  %6 = bitcast %"class.blink::AXObject"* %4 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %7 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %7, i64 124
  %9 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %8, align 8
  %10 = tail call %"class.blink::Node"* %9(%"class.blink::AXObject"* %4) #22
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %24, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 12
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %24

17:                                               ; preds = %12
  %18 = bitcast %"class.blink::Node"* %10 to %"class.blink::Element"*
  %19 = bitcast %"class.blink::Node"* %10 to i1 (%"class.blink::Element"*)***
  %20 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %20, i64 126
  %22 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.blink::Element"* nonnull %18) #22
  br i1 %23, label %68, label %24

24:                                               ; preds = %12, %3, %17
  %25 = icmp eq i32 %5, 0
  br i1 %25, label %68, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %4, i64 0, i32 14, i32 0, i32 0
  %28 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %27, align 8
  %29 = icmp eq %"class.blink::AXObjectCacheImpl"* %28, null
  br i1 %29, label %68, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %4, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %31, align 8
  %33 = icmp eq %"class.blink::AXObject"* %32, null
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %6, align 8
  %36 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %35, i64 124
  %37 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %36, align 8
  %38 = tail call %"class.blink::Node"* %37(%"class.blink::AXObject"* %4) #22
  %39 = icmp eq %"class.blink::Node"* %38, null
  br i1 %39, label %54, label %44

40:                                               ; preds = %30
  %41 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %32, i64 0, i32 14, i32 0, i32 0
  %42 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %41, align 8
  %43 = icmp eq %"class.blink::AXObjectCacheImpl"* %42, null
  br i1 %43, label %54, label %64

44:                                               ; preds = %34
  %45 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %6, align 8
  %46 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %45, i64 124
  %47 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %46, align 8
  %48 = tail call %"class.blink::Node"* %47(%"class.blink::AXObject"* %4) #22
  %49 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %27, align 8
  %50 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %49, i64 0, i32 2, i32 0, i32 0
  %51 = load %"class.blink::Document"*, %"class.blink::Document"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %51, i64 0, i32 0, i32 0
  %53 = icmp eq %"class.blink::Node"* %48, %52
  br i1 %53, label %64, label %54

54:                                               ; preds = %44, %40, %34
  %55 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* %4) #22
  %56 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %4, i64 0, i32 2
  %57 = ptrtoint %"class.blink::AXObject"* %55 to i64
  %58 = bitcast %"class.blink::Member.3082"* %56 to i64*
  store atomic i64 %57, i64* %58 monotonic, align 8
  %59 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %54
  %62 = bitcast %"class.blink::AXObject"* %55 to i8*
  %63 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %62) #22
  br label %64

64:                                               ; preds = %40, %44, %54, %61
  %65 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %31, align 8
  %66 = icmp eq %"class.blink::AXObject"* %65, null
  %67 = add nsw i32 %5, -1
  br i1 %66, label %68, label %3

68:                                               ; preds = %17, %24, %26, %64
  %69 = phi %"class.blink::AXObject"* [ null, %64 ], [ null, %26 ], [ %4, %17 ], [ null, %24 ]
  ret %"class.blink::AXObject"* %69
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject16DatetimeAncestorEi(%"class.blink::AXObject"*, i32) local_unnamed_addr #2 align 2 {
  br label %3

3:                                                ; preds = %49, %2
  %4 = phi %"class.blink::AXObject"* [ %0, %2 ], [ %50, %49 ]
  %5 = phi i32 [ %1, %2 ], [ %52, %49 ]
  %6 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %4, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %8 [
    i32 29, label %53
    i32 28, label %53
    i32 103, label %53
    i32 173, label %53
  ]

8:                                                ; preds = %3
  %9 = icmp eq i32 %5, 0
  br i1 %9, label %53, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %4, i64 0, i32 14, i32 0, i32 0
  %12 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %11, align 8
  %13 = icmp eq %"class.blink::AXObjectCacheImpl"* %12, null
  br i1 %13, label %53, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %4, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %15, align 8
  %17 = icmp eq %"class.blink::AXObject"* %16, null
  br i1 %17, label %18, label %25

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::AXObject"* %4 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %20 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %20, i64 124
  %22 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %21, align 8
  %23 = tail call %"class.blink::Node"* %22(%"class.blink::AXObject"* %4) #22
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %39, label %29

25:                                               ; preds = %14
  %26 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %16, i64 0, i32 14, i32 0, i32 0
  %27 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %26, align 8
  %28 = icmp eq %"class.blink::AXObjectCacheImpl"* %27, null
  br i1 %28, label %39, label %49

29:                                               ; preds = %18
  %30 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %19, align 8
  %31 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %30, i64 124
  %32 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %31, align 8
  %33 = tail call %"class.blink::Node"* %32(%"class.blink::AXObject"* %4) #22
  %34 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %11, align 8
  %35 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %34, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::Document"*, %"class.blink::Document"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %36, i64 0, i32 0, i32 0
  %38 = icmp eq %"class.blink::Node"* %33, %37
  br i1 %38, label %49, label %39

39:                                               ; preds = %29, %25, %18
  %40 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* %4) #22
  %41 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %4, i64 0, i32 2
  %42 = ptrtoint %"class.blink::AXObject"* %40 to i64
  %43 = bitcast %"class.blink::Member.3082"* %41 to i64*
  store atomic i64 %42, i64* %43 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %39
  %47 = bitcast %"class.blink::AXObject"* %40 to i8*
  %48 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #22
  br label %49

49:                                               ; preds = %25, %29, %39, %46
  %50 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %15, align 8
  %51 = icmp eq %"class.blink::AXObject"* %50, null
  %52 = add nsw i32 %5, -1
  br i1 %51, label %53, label %3

53:                                               ; preds = %3, %3, %3, %3, %8, %10, %49
  %54 = phi %"class.blink::AXObject"* [ null, %49 ], [ null, %10 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ null, %8 ]
  ret %"class.blink::AXObject"* %54
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject40LastKnownIsIgnoredButIncludedInTreeValueEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 2
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink8AXObject26DetermineAccessibilityRoleEv(%"class.blink::AXObject"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to i32 (%"class.blink::AXObject"*)***
  %3 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %3, i64 159
  %5 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::AXObject"* %0) #22
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject39IsFocusableStyleUsingBestAvailableStateEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %3, i64 124
  %5 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::Node"* %5(%"class.blink::AXObject"* %0) #22
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 12
  %12 = icmp eq i32 %11, 0
  %13 = bitcast %"class.blink::Node"* %6 to %"class.blink::Element"*
  %14 = select i1 %12, %"class.blink::Element"* %13, %"class.blink::Element"* null
  br label %15

15:                                               ; preds = %1, %8
  %16 = phi %"class.blink::Element"* [ %14, %8 ], [ null, %1 ]
  %17 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %18 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %18, i64 126
  %20 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %19, align 8
  %21 = tail call %"class.blink::Document"* %20(%"class.blink::AXObject"* %0) #22
  %22 = tail call zeroext i1 @_ZNK5blink8Document13InStyleRecalcEv(%"class.blink::Document"* %21) #22
  br i1 %22, label %30, label %23

23:                                               ; preds = %15
  %24 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %17, align 8
  %25 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %24, i64 126
  %26 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %25, align 8
  %27 = tail call %"class.blink::Document"* %26(%"class.blink::AXObject"* %0) #22
  %28 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %16, i64 0, i32 0, i32 0
  %29 = tail call zeroext i1 @_ZNK5blink8Document50NeedsLayoutTreeUpdateForNodeIncludingDisplayLockedERKNS_4NodeEb(%"class.blink::Document"* %27, %"class.blink::Node"* dereferenceable(64) %28, i1 zeroext false) #22
  br i1 %29, label %36, label %30

30:                                               ; preds = %23, %15
  %31 = bitcast %"class.blink::Element"* %16 to i1 (%"class.blink::Element"*)***
  %32 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %32, i64 147
  %34 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.blink::Element"* %16) #22
  br label %151

36:                                               ; preds = %23
  %37 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %16, i64 0, i32 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %131, label %41

41:                                               ; preds = %36
  %42 = tail call zeroext i1 @_ZNK5blink7Element22HasElementFlagInternalENS_12ElementFlagsE(%"class.blink::Element"* %16, i32 4) #22
  br i1 %42, label %43, label %131

43:                                               ; preds = %41
  %44 = load i32, i32* %37, align 8
  %45 = and i32 %44, 48
  %46 = icmp ne i32 %45, 0
  %47 = icmp eq %"class.blink::Element"* %16, null
  %48 = or i1 %47, %46
  br i1 %48, label %63, label %49

49:                                               ; preds = %43
  %50 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kCanvasTagE, align 8
  %51 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 1, i32 2
  %54 = bitcast %"class.blink::Member.318"* %53 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %55 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %55, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %57, %59
  br i1 %60, label %61, label %63

61:                                               ; preds = %49
  %62 = bitcast %"class.blink::Element"* %16 to %"class.blink::HTMLCanvasElement"*
  br label %92

63:                                               ; preds = %49, %43
  %64 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %28) #22
  %65 = icmp eq %"class.blink::ContainerNode"* %64, null
  br i1 %65, label %89, label %66

66:                                               ; preds = %63
  %67 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kCanvasTagE, align 8
  %68 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %67, i64 0, i32 0, i32 0, i32 0
  br label %69

69:                                               ; preds = %86, %66
  %70 = phi %"class.blink::ContainerNode"* [ %64, %66 ], [ %87, %86 ]
  %71 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %70, i64 0, i32 0
  %72 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %70, i64 0, i32 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = and i32 %73, 48
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %86

76:                                               ; preds = %69
  %77 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %78 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %71, i64 1, i32 2
  %79 = bitcast %"class.blink::Member.318"* %78 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %80 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %80, i64 0, i32 3, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %77, i64 0, i32 3, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %82, %84
  br i1 %85, label %89, label %86

86:                                               ; preds = %76, %69
  %87 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %71) #22
  %88 = icmp eq %"class.blink::ContainerNode"* %87, null
  br i1 %88, label %89, label %69

89:                                               ; preds = %86, %76, %63
  %90 = phi %"class.blink::ContainerNode"* [ null, %63 ], [ null, %86 ], [ %70, %76 ]
  %91 = bitcast %"class.blink::ContainerNode"* %90 to %"class.blink::HTMLCanvasElement"*
  br label %92

92:                                               ; preds = %61, %89
  %93 = phi %"class.blink::HTMLCanvasElement"* [ %62, %61 ], [ %91, %89 ]
  %94 = getelementptr inbounds %"class.blink::HTMLCanvasElement", %"class.blink::HTMLCanvasElement"* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = load i32, i32* %94, align 8
  %96 = and i32 %95, 1
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.blink::HTMLCanvasElement", %"class.blink::HTMLCanvasElement"* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %97, label %103, label %99

99:                                               ; preds = %92
  %100 = bitcast %"class.blink::NodeData"** %98 to %"class.blink::NodeRareData"**
  %101 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %101, i64 0, i32 1, i32 0, i32 0
  br label %105

103:                                              ; preds = %92
  %104 = bitcast %"class.blink::NodeData"** %98 to %"class.blink::NodeRenderingData"**
  br label %105

105:                                              ; preds = %99, %103
  %106 = phi %"class.blink::NodeRenderingData"** [ %102, %99 ], [ %104, %103 ]
  %107 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %107, i64 0, i32 1
  %109 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %108, align 8
  %110 = icmp eq %"class.blink::LayoutObject"* %109, null
  br i1 %110, label %151, label %111

111:                                              ; preds = %105
  br i1 %97, label %116, label %112

112:                                              ; preds = %111
  %113 = bitcast %"class.blink::NodeData"** %98 to %"class.blink::NodeRareData"**
  %114 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %114, i64 0, i32 1, i32 0, i32 0
  br label %118

116:                                              ; preds = %111
  %117 = bitcast %"class.blink::NodeData"** %98 to %"class.blink::NodeRenderingData"**
  br label %118

118:                                              ; preds = %112, %116
  %119 = phi %"class.blink::NodeRenderingData"** [ %115, %112 ], [ %117, %116 ]
  %120 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %120, i64 0, i32 1
  %122 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %122, i64 0, i32 5, i32 0
  %124 = bitcast %"class.blink::ComputedStyle"** %123 to %"class.blink::ComputedStyleBase"**
  %125 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %125, i64 0, i32 9
  %127 = bitcast [20 x i8]* %126 to i160*
  %128 = load i160, i160* %127, align 8
  %129 = and i160 %128, 3802951800684688204490109616128
  %130 = icmp eq i160 %129, 1267650600228229401496703205376
  br label %151

131:                                              ; preds = %36, %41
  %132 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %133 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %132, align 8
  %134 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %133, i64 125
  %135 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %134, align 8
  %136 = tail call %"class.blink::LayoutObject"* %135(%"class.blink::AXObject"* %0) #22
  %137 = icmp eq %"class.blink::LayoutObject"* %136, null
  br i1 %137, label %151, label %138

138:                                              ; preds = %131
  %139 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %132, align 8
  %140 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %139, i64 125
  %141 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %140, align 8
  %142 = tail call %"class.blink::LayoutObject"* %141(%"class.blink::AXObject"* %0) #22
  %143 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %142, i64 0, i32 5, i32 0
  %144 = bitcast %"class.blink::ComputedStyle"** %143 to %"class.blink::ComputedStyleBase"**
  %145 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %145, i64 0, i32 9
  %147 = bitcast [20 x i8]* %146 to i160*
  %148 = load i160, i160* %147, align 8
  %149 = and i160 %148, 3802951800684688204490109616128
  %150 = icmp eq i160 %149, 1267650600228229401496703205376
  br label %151

151:                                              ; preds = %138, %131, %118, %105, %30
  %152 = phi i1 [ %35, %30 ], [ false, %105 ], [ %130, %118 ], [ false, %131 ], [ %150, %138 ]
  ret i1 %152
}

declare zeroext i1 @_ZNK5blink8Document13InStyleRecalcEv(%"class.blink::Document"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK5blink8Document50NeedsLayoutTreeUpdateForNodeIncludingDisplayLockedERKNS_4NodeEb(%"class.blink::Document"*, %"class.blink::Node"* dereferenceable(64), i1 zeroext) local_unnamed_addr #6

declare %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK5blink4Page12InsidePortalEv(%"class.blink::Page"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject21CanBeActiveDescendantEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %3, i64 124
  %5 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::Node"* %5(%"class.blink::AXObject"* %0) #22
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %118, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 12
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %118

13:                                               ; preds = %8
  %14 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %15 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %14, i64 124
  %16 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %15, align 8
  %17 = tail call %"class.blink::Node"* %16(%"class.blink::AXObject"* %0) #22
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 12
  %23 = icmp eq i32 %22, 0
  %24 = bitcast %"class.blink::Node"* %17 to %"class.blink::Element"*
  %25 = select i1 %23, %"class.blink::Element"* %24, %"class.blink::Element"* null
  br label %26

26:                                               ; preds = %13, %19
  %27 = phi %"class.blink::Element"* [ %25, %19 ], [ null, %13 ]
  %28 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %29 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %27, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %29, align 8
  %31 = icmp eq %"class.blink::ElementData"* %30, null
  br i1 %31, label %118, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %30, i64 0, i32 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.blink::ElementData"* %30 to %"class.blink::UniqueElementData"*
  %39 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %30, i64 1, i32 1
  %40 = bitcast %"class.blink::Member.354"* %39 to %"class.blink::Attribute"**
  %41 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %38, i64 0, i32 2, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  br label %49

44:                                               ; preds = %32
  %45 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %30, i64 1
  %46 = bitcast %"class.blink::ElementData"* %45 to %"class.blink::Attribute"*
  %47 = lshr i32 %34, 1
  %48 = and i32 %47, 268435455
  br label %49

49:                                               ; preds = %44, %37
  %50 = phi %"class.blink::Attribute"* [ %46, %44 ], [ %41, %37 ]
  %51 = phi i32 [ %48, %44 ], [ %43, %37 ]
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %50, i64 %52
  %54 = icmp eq i32 %51, 0
  br i1 %54, label %118, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %28, i64 0, i32 0, i32 0
  %57 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 3, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %60

60:                                               ; preds = %76, %55
  %61 = phi %"class.blink::Attribute"* [ %50, %55 ], [ %77, %76 ]
  %62 = phi i32 [ 0, %55 ], [ %78, %76 ]
  %63 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %61, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %63, align 8
  %65 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %64, %57
  br i1 %65, label %80, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %64, i64 0, i32 3, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %68, %69
  br i1 %70, label %71, label %76

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %64, i64 0, i32 4, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %73, %74
  br i1 %75, label %80, label %76

76:                                               ; preds = %71, %66
  %77 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %61, i64 1
  %78 = add i32 %62, 1
  %79 = icmp eq %"class.blink::Attribute"* %77, %53
  br i1 %79, label %118, label %60

80:                                               ; preds = %60, %71
  %81 = icmp eq i32 %62, -1
  br i1 %81, label %118, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %84 = load i32, i32* %83, align 4
  %85 = tail call zeroext i1 @_ZN2ui16IsPresentationalEN2ax5mojom4RoleE(i32 %84) #22
  br i1 %85, label %118, label %86

86:                                               ; preds = %82
  %87 = bitcast %"class.blink::AXObject"* %0 to i32 (%"class.blink::AXObject"*)***
  %88 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %87, align 8
  %89 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %88, i64 102
  %90 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %89, align 8
  %91 = tail call i32 %90(%"class.blink::AXObject"* %0) #22
  %92 = icmp eq i32 %91, 182
  br i1 %92, label %118, label %93

93:                                               ; preds = %86
  %94 = tail call zeroext i1 @_ZNK5blink8AXObject45IsARIAControlledByTextboxWithActiveDescendantEv(%"class.blink::AXObject"* %0)
  br i1 %94, label %118, label %95

95:                                               ; preds = %93
  %96 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* %0) #22
  %97 = icmp eq %"class.blink::AXObject"* %96, null
  br i1 %97, label %118, label %98

98:                                               ; preds = %95, %115
  %99 = phi %"class.blink::AXObject"* [ %116, %115 ], [ %96, %95 ]
  %100 = bitcast %"class.blink::AXObject"* %99 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %101 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %100, align 8
  %102 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %101, i64 124
  %103 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %102, align 8
  %104 = tail call %"class.blink::Node"* %103(%"class.blink::AXObject"* nonnull %99) #22
  %105 = icmp eq %"class.blink::Node"* %104, null
  br i1 %105, label %115, label %106

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %104, i64 0, i32 1
  %108 = load i32, i32* %107, align 8
  %109 = and i32 %108, 12
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %115

111:                                              ; preds = %106
  %112 = bitcast %"class.blink::Node"* %104 to %"class.blink::Element"*
  %113 = tail call %"class.blink::Element"* @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_19AOMRelationPropertyE(%"class.blink::Element"* nonnull %112, i32 0) #22
  %114 = icmp eq %"class.blink::Element"* %113, null
  br i1 %114, label %115, label %118

115:                                              ; preds = %111, %106, %98
  %116 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* nonnull %99) #22
  %117 = icmp eq %"class.blink::AXObject"* %116, null
  br i1 %117, label %118, label %98

118:                                              ; preds = %76, %115, %111, %80, %8, %49, %26, %1, %95, %93, %86, %82
  %119 = phi i1 [ false, %80 ], [ false, %82 ], [ false, %86 ], [ true, %93 ], [ false, %95 ], [ false, %8 ], [ false, %1 ], [ false, %26 ], [ false, %49 ], [ false, %115 ], [ true, %111 ], [ false, %76 ]
  ret i1 %119
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject45IsARIAControlledByTextboxWithActiveDescendantEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.blink::HeapVector.365", align 8
  %3 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %4 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %3, align 8
  %5 = icmp eq %"class.blink::AXObjectCacheImpl"* %4, null
  br i1 %5, label %115, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %8 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %8, i64 126
  %10 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %9, align 8
  %11 = tail call %"class.blink::Document"* %10(%"class.blink::AXObject"* %0) #22
  %12 = icmp eq %"class.blink::Document"* %11, null
  br i1 %12, label %115, label %13

13:                                               ; preds = %6
  %14 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %7, align 8
  %15 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %14, i64 126
  %16 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %15, align 8
  %17 = tail call %"class.blink::Document"* %16(%"class.blink::AXObject"* %0) #22
  %18 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %17, i64 0, i32 43, i32 0, i32 0
  %19 = load %"class.blink::Element"*, %"class.blink::Element"** %18, align 8
  %20 = icmp eq %"class.blink::Element"* %19, null
  br i1 %20, label %115, label %21

21:                                               ; preds = %13
  %22 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %3, align 8
  %23 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %19, i64 0, i32 0, i32 0
  %24 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPKNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %22, %"class.blink::Node"* %23) #22
  %25 = icmp eq %"class.blink::AXObject"* %24, null
  br i1 %25, label %115, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %24, i64 0, i32 14, i32 0, i32 0
  %28 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %27, align 8
  %29 = icmp eq %"class.blink::AXObjectCacheImpl"* %28, null
  br i1 %29, label %115, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.blink::AXObject"* %24 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %32 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %32, i64 124
  %34 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %33, align 8
  %35 = tail call %"class.blink::Node"* %34(%"class.blink::AXObject"* nonnull %24) #22
  %36 = icmp eq %"class.blink::Node"* %35, null
  br i1 %36, label %49, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %35, i64 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 12
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %49

42:                                               ; preds = %37
  %43 = bitcast %"class.blink::Node"* %35 to %"class.blink::Element"*
  %44 = bitcast %"class.blink::Node"* %35 to i1 (%"class.blink::Element"*)***
  %45 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %44, align 8
  %46 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %45, i64 126
  %47 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %46, align 8
  %48 = tail call zeroext i1 %47(%"class.blink::Element"* nonnull %43) #22
  br i1 %48, label %51, label %49

49:                                               ; preds = %30, %37, %42
  %50 = tail call zeroext i1 @_ZNK5blink8AXObject20IsNonAtomicTextFieldEv(%"class.blink::AXObject"* nonnull %24) #22
  br i1 %50, label %51, label %115

51:                                               ; preds = %42, %49
  %52 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %31, align 8
  %53 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %52, i64 124
  %54 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %53, align 8
  %55 = tail call %"class.blink::Node"* %54(%"class.blink::AXObject"* nonnull %24) #22
  %56 = icmp eq %"class.blink::Node"* %55, null
  br i1 %56, label %115, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %55, i64 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, 12
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %115

62:                                               ; preds = %57
  %63 = bitcast %"class.blink::Node"* %55 to %"class.blink::Element"*
  %64 = tail call %"class.blink::Element"* @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_19AOMRelationPropertyE(%"class.blink::Element"* nonnull %63, i32 0) #22
  %65 = icmp eq %"class.blink::Element"* %64, null
  br i1 %65, label %115, label %66

66:                                               ; preds = %62
  %67 = bitcast %"class.blink::HeapVector.365"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #22
  %68 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 0, i64 16, i1 false) #22
  %70 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %31, align 8
  %71 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %70, i64 124
  %72 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %71, align 8
  %73 = tail call %"class.blink::Node"* %72(%"class.blink::AXObject"* nonnull %24) #22
  %74 = icmp eq %"class.blink::Node"* %73, null
  br i1 %74, label %113, label %75

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %73, i64 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = and i32 %77, 12
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %113

80:                                               ; preds = %75
  %81 = bitcast %"class.blink::Node"* %73 to %"class.blink::Element"*
  %82 = call zeroext i1 @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_23AOMRelationListPropertyERNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::Element"* nonnull %81, i32 2, %"class.blink::HeapVector.365"* nonnull dereferenceable(16) %2) #22
  br i1 %82, label %83, label %113

83:                                               ; preds = %80
  %84 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %68, align 8
  %85 = load i32, i32* %69, align 4
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %84, i64 %86
  %88 = icmp eq i32 %85, 0
  br i1 %88, label %113, label %89

89:                                               ; preds = %83
  %90 = icmp ne %"class.blink::AXObject"* %0, null
  br label %91

91:                                               ; preds = %89, %110
  %92 = phi %"class.blink::Member.343"* [ %84, %89 ], [ %111, %110 ]
  %93 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %3, align 8
  %94 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %92, i64 0, i32 0, i32 0
  %95 = load %"class.blink::Element"*, %"class.blink::Element"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %95, i64 0, i32 0, i32 0
  %97 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %93, %"class.blink::Node"* %96) #22
  %98 = icmp eq %"class.blink::AXObject"* %97, null
  br i1 %98, label %110, label %99

99:                                               ; preds = %91
  %100 = icmp ne %"class.blink::AXObject"* %97, %0
  %101 = and i1 %90, %100
  br i1 %101, label %102, label %108

102:                                              ; preds = %99, %102
  %103 = phi %"class.blink::AXObject"* [ %104, %102 ], [ %0, %99 ]
  %104 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* nonnull %103)
  %105 = icmp ne %"class.blink::AXObject"* %104, null
  %106 = icmp ne %"class.blink::AXObject"* %104, %97
  %107 = and i1 %105, %106
  br i1 %107, label %102, label %108

108:                                              ; preds = %102, %99
  %109 = phi i1 [ %90, %99 ], [ %105, %102 ]
  br i1 %109, label %113, label %110

110:                                              ; preds = %108, %91
  %111 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %92, i64 1
  %112 = icmp eq %"class.blink::Member.343"* %111, %87
  br i1 %112, label %113, label %91

113:                                              ; preds = %110, %108, %83, %66, %75, %80
  %114 = phi i1 [ false, %80 ], [ false, %75 ], [ false, %66 ], [ false, %83 ], [ false, %110 ], [ true, %108 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #22
  br label %115

115:                                              ; preds = %51, %57, %26, %13, %62, %49, %21, %113, %1, %6
  %116 = phi i1 [ false, %6 ], [ false, %1 ], [ false, %13 ], [ %114, %113 ], [ false, %21 ], [ false, %49 ], [ false, %62 ], [ false, %26 ], [ false, %57 ], [ false, %51 ]
  ret i1 %116
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject31AncestorExposesActiveDescendantEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* %0)
  %3 = icmp eq %"class.blink::AXObject"* %2, null
  br i1 %3, label %24, label %4

4:                                                ; preds = %1, %21
  %5 = phi %"class.blink::AXObject"* [ %22, %21 ], [ %2, %1 ]
  %6 = bitcast %"class.blink::AXObject"* %5 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %7 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %7, i64 124
  %9 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %8, align 8
  %10 = tail call %"class.blink::Node"* %9(%"class.blink::AXObject"* nonnull %5) #22
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %21, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 12
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %12
  %18 = bitcast %"class.blink::Node"* %10 to %"class.blink::Element"*
  %19 = tail call %"class.blink::Element"* @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_19AOMRelationPropertyE(%"class.blink::Element"* nonnull %18, i32 0) #22
  %20 = icmp eq %"class.blink::Element"* %19, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %4, %12, %17
  %22 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* nonnull %5)
  %23 = icmp eq %"class.blink::AXObject"* %22, null
  br i1 %23, label %24, label %4

24:                                               ; preds = %21, %17, %1
  %25 = phi i1 [ false, %1 ], [ true, %17 ], [ false, %21 ]
  ret i1 %25
}

declare %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPKNS_4NodeE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject23CanSetSelectedAttributeEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = tail call zeroext i1 @_ZNK5blink8AXObject11IsSubWidgetEv(%"class.blink::AXObject"* %0)
  br i1 %2, label %3, label %10

3:                                                ; preds = %1
  %4 = bitcast %"class.blink::AXObject"* %0 to i32 (%"class.blink::AXObject"*)***
  %5 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %5, i64 100
  %7 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::AXObject"* %0) #22
  %9 = icmp ne i32 %8, 2
  br label %10

10:                                               ; preds = %3, %1
  %11 = phi i1 [ false, %1 ], [ %9, %3 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject11IsSubWidgetEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %33 [
    i32 14, label %4
    i32 20, label %4
    i32 148, label %4
    i32 19, label %4
    i32 146, label %4
    i32 114, label %34
    i32 128, label %34
    i32 165, label %34
    i32 181, label %34
  ]

4:                                                ; preds = %1, %1, %1, %1, %1
  %5 = bitcast %"class.blink::AXObject"* %0 to i32 (%"class.blink::AXObject"*)***
  %6 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %6, i64 102
  %8 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %7, align 8
  %9 = tail call i32 %8(%"class.blink::AXObject"* %0) #22
  %10 = icmp eq i32 %9, 182
  br i1 %10, label %11, label %34

11:                                               ; preds = %4
  %12 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* %0) #22, !noalias !24
  %13 = icmp eq %"class.blink::AXObject"* %12, null
  br i1 %13, label %34, label %14

14:                                               ; preds = %11, %31
  %15 = phi %"class.blink::AXObject"* [ %25, %31 ], [ %12, %11 ]
  %16 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %15, i64 0, i32 5
  %17 = load i32, i32* %16, align 4
  switch i32 %17, label %18 [
    i32 180, label %34
    i32 93, label %34
  ]

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %15, i64 0, i32 14, i32 0, i32 0
  %20 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %19, align 8
  %21 = icmp eq %"class.blink::AXObjectCacheImpl"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* nonnull %15) #22
  br label %24

24:                                               ; preds = %22, %18
  %25 = phi %"class.blink::AXObject"* [ %23, %22 ], [ null, %18 ]
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.blink::AXObject"* %25 to i8*
  %30 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %29) #22
  br label %31

31:                                               ; preds = %28, %24
  %32 = icmp eq %"class.blink::AXObject"* %25, null
  br i1 %32, label %34, label %14

33:                                               ; preds = %1
  br label %34

34:                                               ; preds = %31, %14, %14, %11, %1, %1, %1, %1, %4, %33
  %35 = phi i1 [ false, %33 ], [ true, %4 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ false, %11 ], [ true, %14 ], [ true, %14 ], [ false, %31 ]
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8AXObject23UnignoredAncestorsBeginEv(%"class.blink::AXObject::AncestorsIterator"* noalias nocapture sret, %"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %3 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* %1)
  %4 = getelementptr inbounds %"class.blink::AXObject::AncestorsIterator", %"class.blink::AXObject::AncestorsIterator"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::AXObject"* %3, %"class.blink::AXObject"** %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK5blink8AXObject21UnignoredAncestorsEndEv(%"class.blink::AXObject::AncestorsIterator"* noalias nocapture sret, %"class.blink::AXObject"* nocapture readnone) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXObject::AncestorsIterator", %"class.blink::AXObject::AncestorsIterator"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject30SupportsARIASetSizeAndPosInSetEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui9IsSetLikeEN2ax5mojom4RoleE(i32 %3) #22
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4
  %7 = tail call zeroext i1 @_ZN2ui10IsItemLikeEN2ax5mojom4RoleE(i32 %6) #22
  br label %8

8:                                                ; preds = %5, %1
  %9 = phi i1 [ true, %1 ], [ %7, %5 ]
  ret i1 %9
}

declare zeroext i1 @_ZN2ui9IsSetLikeEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

declare zeroext i1 @_ZN2ui10IsItemLikeEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink8AXObject18CollapseWhitespaceERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 48, i1 false)
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %7 = bitcast %union.anon.3194* %6 to i8*
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %9, align 4
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %36, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  br i1 %22, label %28, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i16
  br label %31

28:                                               ; preds = %18
  %29 = bitcast %"class.WTF::StringImpl"* %23 to i16*
  %30 = load i16, i16* %29, align 2
  br label %31

31:                                               ; preds = %24, %28
  %32 = phi i16 [ %27, %24 ], [ %30, %28 ]
  %33 = icmp ult i16 %32, 33
  br i1 %33, label %34, label %36

34:                                               ; preds = %31
  switch i16 %32, label %36 [
    i16 32, label %35
    i16 10, label %35
    i16 9, label %35
    i16 13, label %35
    i16 12, label %35
  ]

35:                                               ; preds = %34, %34, %34, %34, %34
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %2, i8 zeroext 32) #22
  br label %36

36:                                               ; preds = %34, %31, %1, %35, %14
  %37 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #22
  %38 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String18SimplifyWhiteSpaceEPFbDsENS_13StripBehaviorE(%"class.WTF::String"* %0, i1 (i16)* nonnull @_ZN5blink11IsHTMLSpaceIDsEEbT_, i32 0) #22
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %40, label %45

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %41, align 8
  %42 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %43 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 0, i32* %44, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  br label %65

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 1
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %51 = bitcast i8** %50 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %51, align 8
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %48, i32* %52, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %45
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %45
  %62 = phi i32 [ %60, %59 ], [ %58, %45 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #22
  br label %65

65:                                               ; preds = %40, %61, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #22
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %95, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %95, label %72

72:                                               ; preds = %68
  %73 = add i32 %70, -1
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 1
  br i1 %77, label %85, label %79

79:                                               ; preds = %72
  %80 = bitcast %"class.WTF::StringImpl"* %78 to i8*
  %81 = zext i32 %73 to i64
  %82 = getelementptr inbounds i8, i8* %80, i64 %81
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i16
  br label %90

85:                                               ; preds = %72
  %86 = bitcast %"class.WTF::StringImpl"* %78 to i16*
  %87 = zext i32 %73 to i64
  %88 = getelementptr inbounds i16, i16* %86, i64 %87
  %89 = load i16, i16* %88, align 2
  br label %90

90:                                               ; preds = %79, %85
  %91 = phi i16 [ %84, %79 ], [ %89, %85 ]
  %92 = icmp ult i16 %91, 33
  br i1 %92, label %93, label %95

93:                                               ; preds = %90
  switch i16 %91, label %95 [
    i16 32, label %94
    i16 10, label %94
    i16 9, label %94
    i16 13, label %94
    i16 12, label %94
  ]

94:                                               ; preds = %93, %93, %93, %93, %93
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %2, i8 zeroext 32) #22
  br label %95

95:                                               ; preds = %93, %90, %65, %94, %68
  %96 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #22
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #22
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #22
  br label %112

112:                                              ; preds = %95, %108, %111
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #22
  ret %"class.WTF::StringImpl"* %96
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink11IsHTMLSpaceIDsEEbT_(i16 zeroext) #9 comdat {
  %2 = icmp ult i16 %0, 33
  br i1 %2, label %3, label %11

3:                                                ; preds = %1
  %4 = add i16 %0, -9
  %5 = icmp ult i16 %4, 24
  br i1 %5, label %6, label %11

6:                                                ; preds = %3
  %7 = zext i16 %4 to i24
  %8 = lshr i24 -8388581, %7
  %9 = and i24 %8, 1
  %10 = icmp ne i24 %9, 0
  ret i1 %10

11:                                               ; preds = %3, %1
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #22
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #22
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #22
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #22
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #22
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String18SimplifyWhiteSpaceEPFbDsENS_13StripBehaviorE(%"class.WTF::String"*, i1 (i16)*, i32) local_unnamed_addr #6

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject12ComputedNameEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.blink::HeapVector.3084", align 8
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22
  store i32 -1431655766, i32* %2, align 4
  %5 = bitcast %"class.blink::HeapVector.3084"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #22
  %6 = bitcast %"class.blink::AXObject"* %0 to %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.3084"*)***
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.3084"*)**, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.3084"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.3084"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.3084"*)** %7, i64 53
  %9 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.3084"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.3084"*)** %8, align 8
  %10 = call %"class.WTF::StringImpl"* %9(%"class.blink::AXObject"* %0, i32* nonnull dereferenceable(4) %2, %"class.blink::HeapVector.3084"* nonnull %3) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22
  ret %"class.WTF::StringImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject7GetNameERN2ax5mojom8NameFromEPNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, i32* dereferenceable(4), %"class.blink::HeapVector.3084"*) unnamed_addr #2 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::HeapHashSet.3721", align 8
  %6 = alloca %"class.blink::HeapVector.3727", align 8
  %7 = bitcast %"class.blink::HeapHashSet.3721"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #22
  %8 = bitcast %"class.blink::HeapHashSet.3721"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 20, i1 false) #22
  %9 = bitcast %"class.blink::HeapVector.3727"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #22
  %10 = getelementptr inbounds %"class.blink::HeapVector.3727", %"class.blink::HeapVector.3727"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::HeapVector.3727", %"class.blink::HeapVector.3727"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #22
  store i32 0, i32* %1, align 4
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %13 = bitcast %"class.blink::AXObject"* %0 to %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i1, i1, %"class.blink::HeapHashSet.3721"*, i32*, %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*)***
  %14 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i1, i1, %"class.blink::HeapHashSet.3721"*, i32*, %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*)**, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i1, i1, %"class.blink::HeapHashSet.3721"*, i32*, %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i1, i1, %"class.blink::HeapHashSet.3721"*, i32*, %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i1, i1, %"class.blink::HeapHashSet.3721"*, i32*, %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*)** %14, i64 58
  %16 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i1, i1, %"class.blink::HeapHashSet.3721"*, i32*, %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i1, i1, %"class.blink::HeapHashSet.3721"*, i32*, %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*)** %15, align 8
  %17 = call %"class.WTF::StringImpl"* %16(%"class.blink::AXObject"* %0, i1 zeroext false, i1 zeroext false, %"class.blink::HeapHashSet.3721"* nonnull dereferenceable(24) %5, i32* dereferenceable(4) %1, %"class.blink::HeapVector.3727"* nonnull %6, %"class.blink::HeapVector.3738"* null) #22
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %12, align 8
  %18 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %19 = load i32, i32* %18, align 4
  %20 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %21 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %21, i64 124
  %23 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %22, align 8
  %24 = call %"class.blink::Node"* %23(%"class.blink::AXObject"* %0) #22
  %25 = icmp eq %"class.blink::Node"* %24, null
  br i1 %25, label %50, label %26

26:                                               ; preds = %3
  %27 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %20, align 8
  %28 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %27, i64 124
  %29 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %28, align 8
  %30 = call %"class.blink::Node"* %29(%"class.blink::AXObject"* %0) #22
  %31 = icmp eq %"class.blink::Node"* %30, null
  br i1 %31, label %49, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 48
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %32
  %38 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %39 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 1, i32 2
  %42 = bitcast %"class.blink::Member.318"* %41 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %45, %47
  br i1 %48, label %69, label %49

49:                                               ; preds = %37, %32, %26
  switch i32 %19, label %50 [
    i32 159, label %69
    i32 102, label %69
  ]

50:                                               ; preds = %49, %3
  %51 = call %"class.WTF::StringImpl"* @_ZN5blink8AXObject18CollapseWhitespaceERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %4)
  %52 = ptrtoint %"class.WTF::StringImpl"* %51 to i64
  %53 = bitcast %"class.WTF::String"* %4 to i64*
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  store i64 %52, i64* %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #22
  br label %69

69:                                               ; preds = %37, %50, %65, %68, %49, %49
  %70 = icmp eq %"class.blink::HeapVector.3084"* %2, null
  br i1 %70, label %124, label %71

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %2, i64 0, i32 0
  %73 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %88, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  %80 = bitcast %"class.blink::HeapVector.3084"* %2 to i8**
  br i1 %79, label %85, label %81

81:                                               ; preds = %76
  %82 = load i8*, i8** %80, align 8
  %83 = zext i32 %78 to i64
  %84 = shl nuw nsw i64 %83, 3
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %82, i64 %84) #22
  store i32 0, i32* %77, align 4
  br label %85

85:                                               ; preds = %81, %76
  %86 = load i8*, i8** %80, align 8
  %87 = bitcast %"class.blink::HeapVector.3084"* %2 to i64*
  store atomic i64 0, i64* %87 monotonic, align 8
  store i32 0, i32* %73, align 8
  call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %86) #22
  br label %88

88:                                               ; preds = %71, %85
  %89 = load %"class.blink::Member.3733"*, %"class.blink::Member.3733"** %10, align 8
  %90 = load i32, i32* %11, align 4
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %"class.blink::Member.3733", %"class.blink::Member.3733"* %89, i64 %91
  %93 = icmp eq i32 %90, 0
  br i1 %93, label %124, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %96 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %97

97:                                               ; preds = %94, %121
  %98 = phi %"class.blink::Member.3733"* [ %89, %94 ], [ %122, %121 ]
  %99 = getelementptr inbounds %"class.blink::Member.3733", %"class.blink::Member.3733"* %98, i64 0, i32 0, i32 0
  %100 = load %"class.blink::NameSourceRelatedObject"*, %"class.blink::NameSourceRelatedObject"** %99, align 8
  %101 = load i32, i32* %95, align 4
  %102 = load i32, i32* %73, align 8
  %103 = icmp eq i32 %101, %102
  br i1 %103, label %119, label %104, !prof !3

104:                                              ; preds = %97
  %105 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %96, align 8
  %106 = zext i32 %101 to i64
  %107 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %105, i64 %106
  %108 = bitcast %"class.blink::NameSourceRelatedObject"* %100 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.blink::Member.3082"* %107 to i64*
  store atomic i64 %109, i64* %110 monotonic, align 8
  %111 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %104
  %114 = inttoptr i64 %109 to i8*
  %115 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %114) #22
  br label %116

116:                                              ; preds = %113, %104
  %117 = load i32, i32* %95, align 4
  %118 = add i32 %117, 1
  store i32 %118, i32* %95, align 4
  br label %121

119:                                              ; preds = %97
  %120 = getelementptr inbounds %"class.blink::NameSourceRelatedObject", %"class.blink::NameSourceRelatedObject"* %100, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRNS1_10WeakMemberIS3_EEEEvOT_(%"class.WTF::Vector.3087"* %72, %"class.blink::WeakMember.3128"* dereferenceable(8) %120) #22
  br label %121

121:                                              ; preds = %116, %119
  %122 = getelementptr inbounds %"class.blink::Member.3733", %"class.blink::Member.3733"* %98, i64 1
  %123 = icmp eq %"class.blink::Member.3733"* %122, %92
  br i1 %123, label %124, label %97

124:                                              ; preds = %121, %88, %69
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #22
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  ret %"class.WTF::StringImpl"* %125
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject7GetNameEPNS_10HeapVectorINS_10NameSourceELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.3738"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::HeapHashSet.3721", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.blink::HeapVector.3727", align 8
  %7 = bitcast %"class.blink::HeapHashSet.3721"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #22
  %8 = bitcast %"class.blink::HeapHashSet.3721"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 20, i1 false) #22
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #22
  store i32 -1431655766, i32* %5, align 4
  %10 = bitcast %"class.blink::HeapVector.3727"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #22
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %12 = bitcast %"class.blink::AXObject"* %0 to %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i1, i1, %"class.blink::HeapHashSet.3721"*, i32*, %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*)***
  %13 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i1, i1, %"class.blink::HeapHashSet.3721"*, i32*, %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*)**, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i1, i1, %"class.blink::HeapHashSet.3721"*, i32*, %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i1, i1, %"class.blink::HeapHashSet.3721"*, i32*, %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i1, i1, %"class.blink::HeapHashSet.3721"*, i32*, %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*)** %13, i64 58
  %15 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i1, i1, %"class.blink::HeapHashSet.3721"*, i32*, %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i1, i1, %"class.blink::HeapHashSet.3721"*, i32*, %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*)** %14, align 8
  %16 = call %"class.WTF::StringImpl"* %15(%"class.blink::AXObject"* %0, i1 zeroext false, i1 zeroext false, %"class.blink::HeapHashSet.3721"* nonnull dereferenceable(24) %4, i32* nonnull dereferenceable(4) %5, %"class.blink::HeapVector.3727"* nonnull %6, %"class.blink::HeapVector.3738"* %1) #22
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %11, align 8
  %17 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String18SimplifyWhiteSpaceEPFbDsENS_13StripBehaviorE(%"class.WTF::String"* nonnull %3, i1 (i16)* nonnull @_ZN5blink11IsHTMLSpaceIDsEEbT_, i32 0) #22
  %18 = ptrtoint %"class.WTF::StringImpl"* %17 to i64
  %19 = bitcast %"class.WTF::String"* %3 to i64*
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  store i64 %18, i64* %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #22
  br label %35

35:                                               ; preds = %34, %31, %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #22
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  ret %"class.WTF::StringImpl"* %36
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink8AXObject24RecursiveTextAlternativeERKS0_bRNS_11HeapHashSetINS_6MemberIS1_EEN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EEEE(%"class.blink::AXObject"* dereferenceable(120), i1 zeroext, %"class.blink::HeapHashSet.3721"* dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22
  store i32 -1431655766, i32* %4, align 4
  %6 = call %"class.WTF::StringImpl"* @_ZN5blink8AXObject24RecursiveTextAlternativeERKS0_bRNS_11HeapHashSetINS_6MemberIS1_EEN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EEEERN2ax5mojom8NameFromE(%"class.blink::AXObject"* dereferenceable(120) %0, i1 zeroext %1, %"class.blink::HeapHashSet.3721"* dereferenceable(24) %2, i32* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22
  ret %"class.WTF::StringImpl"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink8AXObject24RecursiveTextAlternativeERKS0_bRNS_11HeapHashSetINS_6MemberIS1_EEN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EEEERN2ax5mojom8NameFromE(%"class.blink::AXObject"* dereferenceable(120), i1 zeroext, %"class.blink::HeapHashSet.3721"* dereferenceable(24), i32* dereferenceable(4)) local_unnamed_addr #2 align 2 {
  %5 = ptrtoint %"class.blink::AXObject"* %0 to i64
  %6 = getelementptr inbounds %"class.blink::HeapHashSet.3721", %"class.blink::HeapHashSet.3721"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %6, align 8
  %8 = icmp eq %"class.blink::Member.3459"* %7, null
  br i1 %8, label %71, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::HeapHashSet.3721", %"class.blink::HeapHashSet.3721"* %2, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, -1
  %13 = zext i32 %12 to i64
  %14 = shl i64 %5, 32
  %15 = xor i64 %14, -1
  %16 = add i64 %15, %5
  %17 = lshr i64 %16, 22
  %18 = xor i64 %17, %16
  %19 = shl i64 %18, 13
  %20 = xor i64 %19, -1
  %21 = add i64 %18, %20
  %22 = lshr i64 %21, 8
  %23 = xor i64 %22, %21
  %24 = mul i64 %23, 9
  %25 = lshr i64 %24, 15
  %26 = xor i64 %25, %24
  %27 = shl i64 %26, 27
  %28 = xor i64 %27, -1
  %29 = add i64 %26, %28
  %30 = lshr i64 %29, 31
  %31 = xor i64 %30, %29
  %32 = trunc i64 %31 to i32
  %33 = and i32 %12, %32
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %7, i64 %34
  %36 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %36, align 8
  %38 = icmp eq %"class.blink::AXObject"* %37, %0
  br i1 %38, label %67, label %39

39:                                               ; preds = %9
  %40 = xor i32 %32, -1
  %41 = lshr i32 %32, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::AXObject"* [ %37, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %34, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::AXObject"* %54, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %13
  %63 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %7, i64 %62
  %64 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %63, i64 0, i32 0, i32 0
  %65 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %64, align 8
  %66 = icmp eq %"class.blink::AXObject"* %65, %0
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %9
  %68 = phi %"class.blink::Member.3459"* [ %35, %9 ], [ %63, %58 ]
  %69 = icmp eq %"class.blink::Member.3459"* %68, null
  %70 = or i1 %69, %1
  br i1 %70, label %71, label %77

71:                                               ; preds = %53, %4, %67
  %72 = bitcast %"class.blink::AXObject"* %0 to %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i1, i1, %"class.blink::HeapHashSet.3721"*, i32*, %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*)***
  %73 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i1, i1, %"class.blink::HeapHashSet.3721"*, i32*, %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*)**, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i1, i1, %"class.blink::HeapHashSet.3721"*, i32*, %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*)*** %72, align 8
  %74 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i1, i1, %"class.blink::HeapHashSet.3721"*, i32*, %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i1, i1, %"class.blink::HeapHashSet.3721"*, i32*, %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*)** %73, i64 58
  %75 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i1, i1, %"class.blink::HeapHashSet.3721"*, i32*, %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i1, i1, %"class.blink::HeapHashSet.3721"*, i32*, %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*)** %74, align 8
  %76 = tail call %"class.WTF::StringImpl"* %75(%"class.blink::AXObject"* %0, i1 zeroext true, i1 zeroext %1, %"class.blink::HeapHashSet.3721"* dereferenceable(24) %2, i32* dereferenceable(4) %3, %"class.blink::HeapVector.3727"* null, %"class.blink::HeapVector.3738"* null) #22
  br label %77

77:                                               ; preds = %67, %71
  %78 = phi %"class.WTF::StringImpl"* [ %76, %71 ], [ null, %67 ]
  ret %"class.WTF::StringImpl"* %78
}

declare %"class.blink::Element"* @_ZN5blink20DisplayLockUtilities30NearestLockedExclusiveAncestorERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #6

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject37IsHiddenForTextAlternativeCalculationEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22
  store i8 -86, i8* %2, align 1
  %3 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*, i32, i8*)***
  %4 = load i1 (%"class.blink::AXObject"*, i32, i8*)**, i1 (%"class.blink::AXObject"*, i32, i8*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %4, i64 6
  %6 = load i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %5, align 8
  %7 = call zeroext i1 %6(%"class.blink::AXObject"* %0, i32 4, i8* nonnull dereferenceable(1) %2) #22
  %8 = load i8, i8* %2, align 1
  %9 = icmp eq i8 %8, 0
  %10 = and i1 %7, %9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22
  br i1 %10, label %129, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %13 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %13, i64 124
  %15 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %14, align 8
  %16 = call %"class.blink::Node"* %15(%"class.blink::AXObject"* %0) #22
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %129, label %18

18:                                               ; preds = %11
  %19 = call %"class.blink::Element"* @_ZN5blink20DisplayLockUtilities30NearestLockedExclusiveAncestorERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %16) #22
  %20 = icmp eq %"class.blink::Element"* %19, null
  br i1 %20, label %21, label %129

21:                                               ; preds = %18
  %22 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %23 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %23, i64 126
  %25 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %24, align 8
  %26 = call %"class.blink::Document"* %25(%"class.blink::AXObject"* %0) #22
  %27 = icmp eq %"class.blink::Document"* %26, null
  br i1 %27, label %129, label %28

28:                                               ; preds = %21
  %29 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %26) #22
  %30 = icmp eq %"class.blink::LocalFrame"* %29, null
  br i1 %30, label %129, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 48
  switch i32 %34, label %59 [
    i32 0, label %35
    i32 32, label %47
  ]

35:                                               ; preds = %31
  %36 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kNoscriptTagE, align 8
  %37 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 1, i32 2
  %40 = bitcast %"class.blink::Member.318"* %39 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %43, %45
  br i1 %46, label %129, label %59

47:                                               ; preds = %31
  %48 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kTitleTagE, align 8
  %49 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 1, i32 2
  %52 = bitcast %"class.blink::Member.318"* %51 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %53 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %53, i64 0, i32 3, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %55, %57
  br i1 %58, label %129, label %59

59:                                               ; preds = %31, %35, %47
  call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %60 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %61 = load i8, i8* %60, align 8
  %62 = and i8 %61, 8
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %129, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %66 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %65, align 8
  %67 = icmp eq %"class.blink::AXObjectCacheImpl"* %66, null
  br i1 %67, label %129, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2, i32 0, i32 0
  %70 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %69, align 8
  %71 = icmp eq %"class.blink::AXObject"* %70, null
  br i1 %71, label %72, label %78

72:                                               ; preds = %68
  %73 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %12, align 8
  %74 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %73, i64 124
  %75 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %74, align 8
  %76 = call %"class.blink::Node"* %75(%"class.blink::AXObject"* %0) #22
  %77 = icmp eq %"class.blink::Node"* %76, null
  br i1 %77, label %92, label %82

78:                                               ; preds = %68
  %79 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %70, i64 0, i32 14, i32 0, i32 0
  %80 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %79, align 8
  %81 = icmp eq %"class.blink::AXObjectCacheImpl"* %80, null
  br i1 %81, label %92, label %102

82:                                               ; preds = %72
  %83 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %12, align 8
  %84 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %83, i64 124
  %85 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %84, align 8
  %86 = call %"class.blink::Node"* %85(%"class.blink::AXObject"* %0) #22
  %87 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %65, align 8
  %88 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %87, i64 0, i32 2, i32 0, i32 0
  %89 = load %"class.blink::Document"*, %"class.blink::Document"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %89, i64 0, i32 0, i32 0
  %91 = icmp eq %"class.blink::Node"* %86, %90
  br i1 %91, label %102, label %92

92:                                               ; preds = %82, %78, %72
  %93 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* %0) #22
  %94 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2
  %95 = ptrtoint %"class.blink::AXObject"* %93 to i64
  %96 = bitcast %"class.blink::Member.3082"* %94 to i64*
  store atomic i64 %95, i64* %96 monotonic, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %92
  %100 = bitcast %"class.blink::AXObject"* %93 to i8*
  %101 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #22
  br label %102

102:                                              ; preds = %78, %82, %92, %99
  %103 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %69, align 8
  %104 = icmp eq %"class.blink::AXObject"* %103, null
  br i1 %104, label %129, label %105

105:                                              ; preds = %102
  %106 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %65, align 8
  %107 = icmp eq %"class.blink::AXObjectCacheImpl"* %106, null
  br i1 %107, label %123, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %103, i64 0, i32 14, i32 0, i32 0
  %110 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %109, align 8
  %111 = icmp eq %"class.blink::AXObjectCacheImpl"* %110, null
  br i1 %111, label %112, label %123

112:                                              ; preds = %108
  %113 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* %0) #22
  %114 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2
  %115 = ptrtoint %"class.blink::AXObject"* %113 to i64
  %116 = bitcast %"class.blink::Member.3082"* %114 to i64*
  store atomic i64 %115, i64* %116 monotonic, align 8
  %117 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %123, label %119

119:                                              ; preds = %112
  %120 = bitcast %"class.blink::AXObject"* %113 to i8*
  %121 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %120) #22
  %122 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %69, align 8
  br label %123

123:                                              ; preds = %108, %112, %119, %105
  %124 = phi %"class.blink::AXObject"* [ null, %105 ], [ %122, %119 ], [ %113, %112 ], [ %103, %108 ]
  call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %124, i1 zeroext true) #22
  %125 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %124, i64 0, i32 9
  %126 = load i8, i8* %125, align 8
  %127 = and i8 %126, 8
  %128 = icmp eq i8 %127, 0
  br label %129

129:                                              ; preds = %59, %64, %11, %18, %123, %102, %47, %35, %21, %28, %1
  %130 = phi i1 [ false, %1 ], [ false, %11 ], [ false, %18 ], [ false, %28 ], [ false, %21 ], [ true, %35 ], [ false, %47 ], [ false, %59 ], [ true, %102 ], [ %128, %123 ], [ true, %64 ]
  ret i1 %130
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject19AriaTextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSG_INS_10NameSourceELj0EEEPb(%"class.blink::AXObject"*, i1 zeroext, i1 zeroext, %"class.blink::HeapHashSet.3721"* dereferenceable(24), i32* nocapture dereferenceable(4), %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*, i8* nocapture) local_unnamed_addr #2 align 2 {
  %9 = alloca %"class.blink::AXObject"*, align 8
  %10 = alloca %"class.blink::NameSource", align 8
  %11 = alloca %"class.blink::HeapVector.365", align 8
  %12 = alloca %"class.WTF::Vector.630", align 8
  %13 = alloca %"class.blink::HeapHashSet.3721", align 8
  %14 = alloca %"class.blink::NameSource", align 8
  %15 = ptrtoint %"class.blink::AXObject"* %0 to i64
  %16 = getelementptr inbounds %"class.blink::HeapHashSet.3721", %"class.blink::HeapHashSet.3721"* %3, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %16, align 8
  %18 = icmp eq %"class.blink::Member.3459"* %17, null
  br i1 %18, label %77, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapHashSet.3721", %"class.blink::HeapHashSet.3721"* %3, i64 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = add i32 %21, -1
  %23 = zext i32 %22 to i64
  %24 = shl i64 %15, 32
  %25 = xor i64 %24, -1
  %26 = add i64 %25, %15
  %27 = lshr i64 %26, 22
  %28 = xor i64 %27, %26
  %29 = shl i64 %28, 13
  %30 = xor i64 %29, -1
  %31 = add i64 %28, %30
  %32 = lshr i64 %31, 8
  %33 = xor i64 %32, %31
  %34 = mul i64 %33, 9
  %35 = lshr i64 %34, 15
  %36 = xor i64 %35, %34
  %37 = shl i64 %36, 27
  %38 = xor i64 %37, -1
  %39 = add i64 %36, %38
  %40 = lshr i64 %39, 31
  %41 = xor i64 %40, %39
  %42 = trunc i64 %41 to i32
  %43 = and i32 %22, %42
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %17, i64 %44
  %46 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %46, align 8
  %48 = icmp eq %"class.blink::AXObject"* %47, %0
  br i1 %48, label %77, label %49

49:                                               ; preds = %19
  %50 = xor i32 %42, -1
  %51 = lshr i32 %42, 23
  %52 = add i32 %51, %50
  %53 = shl i32 %52, 12
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 7
  %56 = xor i32 %55, %54
  %57 = shl i32 %56, 2
  %58 = xor i32 %57, %56
  %59 = lshr i32 %58, 20
  %60 = xor i32 %59, %58
  %61 = or i32 %60, 1
  %62 = zext i32 %61 to i64
  br label %63

63:                                               ; preds = %68, %49
  %64 = phi %"class.blink::AXObject"* [ %47, %49 ], [ %75, %68 ]
  %65 = phi i64 [ %44, %49 ], [ %72, %68 ]
  %66 = phi i64 [ 0, %49 ], [ %70, %68 ]
  %67 = icmp eq %"class.blink::AXObject"* %64, null
  br i1 %67, label %77, label %68

68:                                               ; preds = %63
  %69 = icmp eq i64 %66, 0
  %70 = select i1 %69, i64 %62, i64 %66
  %71 = add i64 %70, %65
  %72 = and i64 %71, %23
  %73 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %17, i64 %72
  %74 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %73, i64 0, i32 0, i32 0
  %75 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %74, align 8
  %76 = icmp eq %"class.blink::AXObject"* %75, %0
  br i1 %76, label %77, label %63

77:                                               ; preds = %63, %68, %8, %19
  %78 = phi %"class.blink::Member.3459"* [ null, %8 ], [ %45, %19 ], [ %73, %68 ], [ null, %63 ]
  %79 = icmp eq %"class.blink::Member.3459"* %78, null
  %80 = bitcast %"class.blink::AXObject"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #22
  store %"class.blink::AXObject"* %0, %"class.blink::AXObject"** %9, align 8
  %81 = getelementptr inbounds %"class.blink::HeapHashSet.3721", %"class.blink::HeapHashSet.3721"* %3, i64 0, i32 0, i32 0
  %82 = call { %"class.blink::Member.3459"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS4_SG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.3725"* %81, %"class.blink::AXObject"** nonnull dereferenceable(8) %9, %"class.blink::AXObject"** nonnull dereferenceable(8) %9) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #22
  br i1 %2, label %396, label %83

83:                                               ; preds = %77
  %84 = call zeroext i1 @_ZNK5blink8AXObject37IsHiddenForTextAlternativeCalculationEv(%"class.blink::AXObject"* %0)
  br i1 %84, label %85, label %86

85:                                               ; preds = %83
  store i8 1, i8* %7, align 1
  br label %613

86:                                               ; preds = %83
  br i1 %79, label %87, label %396

87:                                               ; preds = %86
  store i32 7, i32* %4, align 4
  %88 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names18kAriaLabeledbyAttrE, align 8
  %89 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)***
  %90 = load i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)**, i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*** %89, align 8
  %91 = getelementptr inbounds i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*, i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)** %90, i64 130
  %92 = load i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*, i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)** %91, align 8
  %93 = call zeroext i1 %92(%"class.blink::AXObject"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %88) #22
  %94 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kAriaLabelledbyAttrE, align 8
  br i1 %93, label %95, label %100

95:                                               ; preds = %87
  %96 = load i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)**, i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*** %89, align 8
  %97 = getelementptr inbounds i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*, i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)** %96, i64 130
  %98 = load i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*, i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)** %97, align 8
  %99 = call zeroext i1 %98(%"class.blink::AXObject"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %94) #22
  br i1 %99, label %100, label %101

100:                                              ; preds = %87, %95
  br label %101

101:                                              ; preds = %95, %100
  %102 = phi %"class.blink::QualifiedName"* [ %94, %100 ], [ %88, %95 ]
  %103 = icmp ne %"class.blink::HeapVector.3738"* %6, null
  br i1 %103, label %104, label %170

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.blink::HeapVector.3738", %"class.blink::HeapVector.3738"* %6, i64 0, i32 0
  %106 = bitcast %"class.blink::NameSource"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %106) #22
  %107 = load i8, i8* %7, align 1, !range !2
  %108 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %108, align 8
  %109 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %10, i64 0, i32 1
  store i8 %107, i8* %109, align 8
  %110 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %10, i64 0, i32 2
  store i8 0, i8* %110, align 1
  %111 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %10, i64 0, i32 3
  store i32 1, i32* %111, align 4
  %112 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %10, i64 0, i32 4
  store %"class.blink::QualifiedName"* %102, %"class.blink::QualifiedName"** %112, align 8
  %113 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %10, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %113, align 8
  %114 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %10, i64 0, i32 6
  store i32 -1, i32* %114, align 8
  %115 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %10, i64 0, i32 7
  %116 = bitcast %"class.blink::HeapVector.3727"* %115 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 16, i1 false) #22
  %117 = getelementptr inbounds %"class.blink::HeapVector.3738", %"class.blink::HeapVector.3738"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"class.blink::HeapVector.3738", %"class.blink::HeapVector.3738"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %120 = load i32, i32* %119, align 8
  %121 = icmp eq i32 %118, %120
  br i1 %121, label %131, label %122, !prof !3

122:                                              ; preds = %104
  %123 = getelementptr inbounds %"class.blink::HeapVector.3738", %"class.blink::HeapVector.3738"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %124 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %123, align 8
  %125 = zext i32 %118 to i64
  %126 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %124, i64 %125
  %127 = bitcast %"class.blink::NameSource"* %126 to i8*
  %128 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %127, %"class.blink::NameSource"* nonnull dereferenceable(56) %10) #22
  %129 = load i32, i32* %117, align 4
  %130 = add i32 %129, 1
  store i32 %130, i32* %117, align 4
  br label %132

131:                                              ; preds = %104
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3741"* %105, %"class.blink::NameSource"* nonnull dereferenceable(56) %10) #22
  br label %132

132:                                              ; preds = %122, %131
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #22
  br label %148

148:                                              ; preds = %147, %144, %132
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #22
  br label %164

164:                                              ; preds = %148, %160, %163
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %106) #22
  %165 = load i32, i32* %4, align 4
  %166 = load i32, i32* %117, align 4
  %167 = add i32 %166, -1
  %168 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3741"* %105, i32 %167) #22
  %169 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %168, i64 0, i32 3
  store i32 %165, i32* %169, align 4
  br label %170

170:                                              ; preds = %164, %101
  %171 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %172 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %171, align 8
  %173 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %172, i64 124
  %174 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %173, align 8
  %175 = call %"class.blink::Node"* %174(%"class.blink::AXObject"* %0) #22
  %176 = icmp eq %"class.blink::Node"* %175, null
  br i1 %176, label %396, label %177

177:                                              ; preds = %170
  %178 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %175, i64 0, i32 1
  %179 = load i32, i32* %178, align 8
  %180 = and i32 %179, 12
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %396

182:                                              ; preds = %177
  %183 = bitcast %"class.blink::Node"* %175 to %"class.blink::Element"*
  %184 = bitcast %"class.blink::HeapVector.365"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %184) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %184, i8 0, i64 16, i1 false) #22
  %185 = bitcast %"class.WTF::Vector.630"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %185) #22
  %186 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %12, i64 0, i32 0, i32 0, i32 0
  %187 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %12, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %185, i8 0, i64 16, i1 false) #22
  %188 = call zeroext i1 @_ZN5blink8AXObject21ElementsFromAttributeEPNS_7ElementERNS_10HeapVectorINS_6MemberIS1_EELj0EEERKNS_13QualifiedNameERN3WTF6VectorINSB_6StringELj0ENSB_18PartitionAllocatorEEE(%"class.blink::Element"* nonnull %183, %"class.blink::HeapVector.365"* nonnull dereferenceable(16) %11, %"class.blink::QualifiedName"* dereferenceable(8) %102, %"class.WTF::Vector.630"* nonnull dereferenceable(16) %12)
  %189 = bitcast %"class.blink::AXObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)***
  %190 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*** %189, align 8
  %191 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)** %190, i64 131
  %192 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)** %191, align 8
  %193 = call dereferenceable(8) %"class.WTF::AtomicString"* %192(%"class.blink::AXObject"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %102) #22
  %194 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %193, i64 0, i32 0, i32 0, i32 0
  %195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8
  %196 = icmp eq %"class.WTF::StringImpl"* %195, null
  br i1 %196, label %355, label %197

197:                                              ; preds = %182
  br i1 %103, label %198, label %243

198:                                              ; preds = %197
  %199 = getelementptr inbounds %"class.blink::HeapVector.3738", %"class.blink::HeapVector.3738"* %6, i64 0, i32 0
  %200 = getelementptr inbounds %"class.blink::HeapVector.3738", %"class.blink::HeapVector.3738"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %201 = load i32, i32* %200, align 4
  %202 = add i32 %201, -1
  %203 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3741"* %199, i32 %202) #22
  %204 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %203, i64 0, i32 5
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %206, label %224, label %207

207:                                              ; preds = %198
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load atomic i32, i32* %208 monotonic, align 4
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %224

212:                                              ; preds = %207
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 0
  %214 = load i32, i32* %213, align 4
  %215 = zext i32 %214 to i33
  %216 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %215, i33 1) #22
  %217 = extractvalue { i33, i1 } %216, 1
  %218 = extractvalue { i33, i1 } %216, 0
  %219 = icmp slt i33 %218, 0
  %220 = or i1 %217, %219
  br i1 %220, label %221, label %222, !prof !3

221:                                              ; preds = %212
  call void @llvm.trap() #22
  unreachable

222:                                              ; preds = %212
  %223 = trunc i33 %218 to i32
  store i32 %223, i32* %213, align 4
  br label %224

224:                                              ; preds = %222, %207, %198
  %225 = ptrtoint %"class.WTF::StringImpl"* %205 to i64
  %226 = bitcast %"class.WTF::AtomicString"* %204 to i64*
  %227 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %204, i64 0, i32 0, i32 0, i32 0
  %228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8
  store i64 %225, i64* %226, align 8
  %229 = icmp eq %"class.WTF::StringImpl"* %228, null
  br i1 %229, label %243, label %230

230:                                              ; preds = %224
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = and i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  br i1 %234, label %237, label %239

237:                                              ; preds = %230
  %238 = add i32 %236, -1
  store i32 %238, i32* %235, align 4
  br label %239

239:                                              ; preds = %237, %230
  %240 = phi i32 [ %238, %237 ], [ %236, %230 ]
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %243

242:                                              ; preds = %239
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %228) #22
  br label %243

243:                                              ; preds = %242, %239, %224, %197
  %244 = bitcast %"class.blink::HeapHashSet.3721"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %244) #22
  %245 = getelementptr inbounds %"class.blink::HeapHashSet.3721", %"class.blink::HeapHashSet.3721"* %13, i64 0, i32 0, i32 0
  %246 = getelementptr inbounds %"class.blink::HeapHashSet.3721", %"class.blink::HeapHashSet.3721"* %3, i64 0, i32 0, i32 0, i32 2
  %247 = bitcast %"class.blink::HeapHashSet.3721"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %247, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %244, i8 0, i64 20, i1 false) #22
  %248 = load i32, i32* %246, align 4
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %284, label %250

250:                                              ; preds = %243
  call void @_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.3725"* nonnull %245, i32 %248) #22
  %251 = load i32, i32* %246, align 4
  %252 = icmp eq i32 %251, 0
  %253 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %16, align 8
  %254 = getelementptr inbounds %"class.blink::HeapHashSet.3721", %"class.blink::HeapHashSet.3721"* %3, i64 0, i32 0, i32 0, i32 1
  %255 = load i32, i32* %254, align 8
  %256 = zext i32 %255 to i64
  %257 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %253, i64 %256
  br i1 %252, label %284, label %258

258:                                              ; preds = %250
  %259 = icmp eq i32 %255, 0
  br i1 %259, label %267, label %260

260:                                              ; preds = %258, %264
  %261 = phi %"class.blink::Member.3459"* [ %265, %264 ], [ %253, %258 ]
  %262 = bitcast %"class.blink::Member.3459"* %261 to i64*
  %263 = load i64, i64* %262, align 8
  switch i64 %263, label %267 [
    i64 -1, label %264
    i64 0, label %264
  ]

264:                                              ; preds = %260, %260
  %265 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %261, i64 1
  %266 = icmp eq %"class.blink::Member.3459"* %265, %257
  br i1 %266, label %284, label %260

267:                                              ; preds = %260, %258
  %268 = phi %"class.blink::Member.3459"* [ %253, %258 ], [ %261, %260 ]
  %269 = icmp eq %"class.blink::Member.3459"* %268, %257
  br i1 %269, label %284, label %270

270:                                              ; preds = %267, %282
  %271 = phi %"class.blink::Member.3459"* [ %276, %282 ], [ %268, %267 ]
  %272 = call { %"class.blink::Member.3459"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKS5_SH_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.3725"* nonnull %245, %"class.blink::Member.3459"* dereferenceable(8) %271, %"class.blink::Member.3459"* dereferenceable(8) %271) #22
  %273 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %271, i64 1
  %274 = icmp eq %"class.blink::Member.3459"* %273, %257
  br i1 %274, label %284, label %275

275:                                              ; preds = %270, %279
  %276 = phi %"class.blink::Member.3459"* [ %280, %279 ], [ %273, %270 ]
  %277 = bitcast %"class.blink::Member.3459"* %276 to i64*
  %278 = load i64, i64* %277, align 8
  switch i64 %278, label %282 [
    i64 -1, label %279
    i64 0, label %279
  ]

279:                                              ; preds = %275, %275
  %280 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %276, i64 1
  %281 = icmp eq %"class.blink::Member.3459"* %280, %257
  br i1 %281, label %284, label %275

282:                                              ; preds = %275
  %283 = icmp eq %"class.blink::Member.3459"* %276, %257
  br i1 %283, label %284, label %270

284:                                              ; preds = %264, %270, %282, %279, %243, %250, %267
  %285 = call %"class.WTF::StringImpl"* @_ZNK5blink8AXObject16TextFromElementsEbRNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEERNS_10HeapVectorINS2_INS_7ElementEEELj0EEEPNSC_INS2_INS_23NameSourceRelatedObjectEEELj0EEE(%"class.blink::AXObject"* %0, i1 zeroext true, %"class.blink::HeapHashSet.3721"* dereferenceable(24) %3, %"class.blink::HeapVector.365"* nonnull dereferenceable(16) %11, %"class.blink::HeapVector.3727"* %5)
  %286 = ptrtoint %"class.WTF::StringImpl"* %285 to i64
  %287 = load i32, i32* %187, align 4
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %292, label %289

289:                                              ; preds = %284
  %290 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %291 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %290, align 8
  call void @_ZN5blink17AXObjectCacheImpl22UpdateReverseRelationsEPKNS_8AXObjectERKN3WTF6VectorINS4_6StringELj0ENS4_18PartitionAllocatorEEE(%"class.blink::AXObjectCacheImpl"* %291, %"class.blink::AXObject"* %0, %"class.WTF::Vector.630"* nonnull dereferenceable(16) %12) #22
  br label %292

292:                                              ; preds = %289, %284
  %293 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %293, label %340, label %294

294:                                              ; preds = %292
  br i1 %103, label %295, label %348

295:                                              ; preds = %294
  %296 = getelementptr inbounds %"class.blink::HeapVector.3738", %"class.blink::HeapVector.3738"* %6, i64 0, i32 0
  %297 = getelementptr inbounds %"class.blink::HeapVector.3738", %"class.blink::HeapVector.3738"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %298 = load i32, i32* %297, align 4
  %299 = add i32 %298, -1
  %300 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3741"* %296, i32 %299) #22
  %301 = load i32, i32* %4, align 4
  %302 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %300, i64 0, i32 3
  store i32 %301, i32* %302, align 4
  %303 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %300, i64 0, i32 7, i32 0
  %304 = getelementptr inbounds %"class.blink::HeapVector.3727", %"class.blink::HeapVector.3727"* %5, i64 0, i32 0
  %305 = call dereferenceable(16) %"class.WTF::Vector.3730"* @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.3730"* %303, %"class.WTF::Vector.3730"* dereferenceable(16) %304) #22
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = load atomic i32, i32* %306 monotonic, align 4
  %308 = and i32 %307, 2
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %310, label %322

310:                                              ; preds = %295
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %312 = load i32, i32* %311, align 4
  %313 = zext i32 %312 to i33
  %314 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %313, i33 1) #22
  %315 = extractvalue { i33, i1 } %314, 1
  %316 = extractvalue { i33, i1 } %314, 0
  %317 = icmp slt i33 %316, 0
  %318 = or i1 %315, %317
  br i1 %318, label %319, label %320, !prof !3

319:                                              ; preds = %310
  call void @llvm.trap() #22
  unreachable

320:                                              ; preds = %310
  %321 = trunc i33 %316 to i32
  store i32 %321, i32* %311, align 4
  br label %322

322:                                              ; preds = %320, %295
  %323 = bitcast %"class.blink::NameSource"* %300 to i64*
  %324 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %300, i64 0, i32 0, i32 0, i32 0
  %325 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %324, align 8
  store i64 %286, i64* %323, align 8
  %326 = icmp eq %"class.WTF::StringImpl"* %325, null
  br i1 %326, label %348, label %327

327:                                              ; preds = %322
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = load atomic i32, i32* %328 monotonic, align 4
  %330 = and i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 0
  %333 = load i32, i32* %332, align 4
  br i1 %331, label %334, label %336

334:                                              ; preds = %327
  %335 = add i32 %333, -1
  store i32 %335, i32* %332, align 4
  br label %336

336:                                              ; preds = %334, %327
  %337 = phi i32 [ %335, %334 ], [ %333, %327 ]
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %339, label %348

339:                                              ; preds = %336
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %325) #22
  br label %348

340:                                              ; preds = %292
  br i1 %103, label %341, label %352

341:                                              ; preds = %340
  %342 = getelementptr inbounds %"class.blink::HeapVector.3738", %"class.blink::HeapVector.3738"* %6, i64 0, i32 0
  %343 = getelementptr inbounds %"class.blink::HeapVector.3738", %"class.blink::HeapVector.3738"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %344 = load i32, i32* %343, align 4
  %345 = add i32 %344, -1
  %346 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3741"* %342, i32 %345) #22
  %347 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %346, i64 0, i32 2
  br label %348

348:                                              ; preds = %294, %341, %322, %336, %339
  %349 = phi i8* [ %347, %341 ], [ %7, %322 ], [ %7, %336 ], [ %7, %339 ], [ %7, %294 ]
  %350 = phi i64 [ %286, %341 ], [ %286, %322 ], [ %286, %336 ], [ %286, %339 ], [ 0, %294 ]
  %351 = phi i32 [ 0, %341 ], [ 0, %322 ], [ 0, %336 ], [ 0, %339 ], [ 1, %294 ]
  store i8 1, i8* %349, align 1
  br label %352

352:                                              ; preds = %348, %340
  %353 = phi i64 [ %286, %340 ], [ %350, %348 ]
  %354 = phi i32 [ 0, %340 ], [ %351, %348 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %244) #22
  br label %355

355:                                              ; preds = %352, %182
  %356 = phi i64 [ undef, %182 ], [ %286, %352 ]
  %357 = phi i64 [ 0, %182 ], [ %353, %352 ]
  %358 = phi i32 [ 0, %182 ], [ %354, %352 ]
  %359 = load %"class.WTF::String"*, %"class.WTF::String"** %186, align 8
  %360 = icmp eq %"class.WTF::String"* %359, null
  br i1 %360, label %394, label %361, !prof !19

361:                                              ; preds = %355
  %362 = bitcast %"class.WTF::String"* %359 to i8*
  %363 = load i32, i32* %187, align 4
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %392, label %365, !prof !3

365:                                              ; preds = %361
  %366 = zext i32 %363 to i64
  %367 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %359, i64 %366
  br label %368

368:                                              ; preds = %386, %365
  %369 = phi %"class.WTF::String"* [ %387, %386 ], [ %359, %365 ]
  %370 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %369, i64 0, i32 0, i32 0
  %371 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %370, align 8
  %372 = icmp eq %"class.WTF::StringImpl"* %371, null
  br i1 %372, label %386, label %373

373:                                              ; preds = %368
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %375 = load atomic i32, i32* %374 monotonic, align 4
  %376 = and i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 0
  %379 = load i32, i32* %378, align 4
  br i1 %377, label %380, label %382

380:                                              ; preds = %373
  %381 = add i32 %379, -1
  store i32 %381, i32* %378, align 4
  br label %382

382:                                              ; preds = %380, %373
  %383 = phi i32 [ %381, %380 ], [ %379, %373 ]
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %385, label %386

385:                                              ; preds = %382
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %371) #22
  br label %386

386:                                              ; preds = %385, %382, %368
  %387 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %369, i64 1
  %388 = icmp eq %"class.WTF::String"* %387, %367
  br i1 %388, label %389, label %368

389:                                              ; preds = %386
  store i32 0, i32* %187, align 4
  %390 = bitcast %"class.WTF::Vector.630"* %12 to i8**
  %391 = load i8*, i8** %390, align 8
  br label %392

392:                                              ; preds = %389, %361
  %393 = phi i8* [ %391, %389 ], [ %362, %361 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %393) #22
  store %"class.WTF::String"* null, %"class.WTF::String"** %186, align 8
  br label %394

394:                                              ; preds = %355, %392
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %185) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %184) #22
  %395 = icmp eq i32 %358, 0
  br i1 %395, label %396, label %597

396:                                              ; preds = %86, %177, %170, %394, %77
  %397 = phi i64 [ 0, %77 ], [ 0, %86 ], [ %357, %394 ], [ 0, %177 ], [ 0, %170 ]
  store i32 2, i32* %4, align 4
  %398 = icmp ne %"class.blink::HeapVector.3738"* %6, null
  br i1 %398, label %399, label %467

399:                                              ; preds = %396
  %400 = getelementptr inbounds %"class.blink::HeapVector.3738", %"class.blink::HeapVector.3738"* %6, i64 0, i32 0
  %401 = bitcast %"class.blink::NameSource"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %401) #22
  %402 = load i8, i8* %7, align 1, !range !2
  %403 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names14kAriaLabelAttrE to i64*), align 8
  %404 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %404, align 8
  %405 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 1
  store i8 %402, i8* %405, align 8
  %406 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 2
  store i8 0, i8* %406, align 1
  %407 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 3
  store i32 1, i32* %407, align 4
  %408 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 4
  %409 = bitcast %"class.blink::QualifiedName"** %408 to i64*
  store i64 %403, i64* %409, align 8
  %410 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %410, align 8
  %411 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 6
  store i32 -1, i32* %411, align 8
  %412 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 7
  %413 = bitcast %"class.blink::HeapVector.3727"* %412 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %413, i8 0, i64 16, i1 false) #22
  %414 = getelementptr inbounds %"class.blink::HeapVector.3738", %"class.blink::HeapVector.3738"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %415 = load i32, i32* %414, align 4
  %416 = getelementptr inbounds %"class.blink::HeapVector.3738", %"class.blink::HeapVector.3738"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %417 = load i32, i32* %416, align 8
  %418 = icmp eq i32 %415, %417
  br i1 %418, label %428, label %419, !prof !3

419:                                              ; preds = %399
  %420 = getelementptr inbounds %"class.blink::HeapVector.3738", %"class.blink::HeapVector.3738"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %421 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %420, align 8
  %422 = zext i32 %415 to i64
  %423 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %421, i64 %422
  %424 = bitcast %"class.blink::NameSource"* %423 to i8*
  %425 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %424, %"class.blink::NameSource"* nonnull dereferenceable(56) %14) #22
  %426 = load i32, i32* %414, align 4
  %427 = add i32 %426, 1
  store i32 %427, i32* %414, align 4
  br label %429

428:                                              ; preds = %399
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3741"* %400, %"class.blink::NameSource"* nonnull dereferenceable(56) %14) #22
  br label %429

429:                                              ; preds = %419, %428
  %430 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %410, align 8
  %431 = icmp eq %"class.WTF::StringImpl"* %430, null
  br i1 %431, label %445, label %432

432:                                              ; preds = %429
  %433 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %430, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %434 = load atomic i32, i32* %433 monotonic, align 4
  %435 = and i32 %434, 2
  %436 = icmp eq i32 %435, 0
  %437 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %430, i64 0, i32 0
  %438 = load i32, i32* %437, align 4
  br i1 %436, label %439, label %441

439:                                              ; preds = %432
  %440 = add i32 %438, -1
  store i32 %440, i32* %437, align 4
  br label %441

441:                                              ; preds = %439, %432
  %442 = phi i32 [ %440, %439 ], [ %438, %432 ]
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %444, label %445

444:                                              ; preds = %441
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %430) #22
  br label %445

445:                                              ; preds = %444, %441, %429
  %446 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %404, align 8
  %447 = icmp eq %"class.WTF::StringImpl"* %446, null
  br i1 %447, label %461, label %448

448:                                              ; preds = %445
  %449 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %446, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %450 = load atomic i32, i32* %449 monotonic, align 4
  %451 = and i32 %450, 2
  %452 = icmp eq i32 %451, 0
  %453 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %446, i64 0, i32 0
  %454 = load i32, i32* %453, align 4
  br i1 %452, label %455, label %457

455:                                              ; preds = %448
  %456 = add i32 %454, -1
  store i32 %456, i32* %453, align 4
  br label %457

457:                                              ; preds = %455, %448
  %458 = phi i32 [ %456, %455 ], [ %454, %448 ]
  %459 = icmp eq i32 %458, 0
  br i1 %459, label %460, label %461

460:                                              ; preds = %457
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %446) #22
  br label %461

461:                                              ; preds = %445, %457, %460
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %401) #22
  %462 = load i32, i32* %4, align 4
  %463 = load i32, i32* %414, align 4
  %464 = add i32 %463, -1
  %465 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3741"* %400, i32 %464) #22
  %466 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %465, i64 0, i32 3
  store i32 %462, i32* %466, align 4
  br label %467

467:                                              ; preds = %461, %396
  %468 = bitcast %"class.blink::AXObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)***
  %469 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*** %468, align 8
  %470 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %469, i64 5
  %471 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %470, align 8
  %472 = call dereferenceable(8) %"class.WTF::AtomicString"* %471(%"class.blink::AXObject"* %0, i32 7) #22
  %473 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %472, i64 0, i32 0, i32 0, i32 0
  %474 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %473, align 8
  %475 = icmp eq %"class.WTF::StringImpl"* %474, null
  br i1 %475, label %613, label %476

476:                                              ; preds = %467
  %477 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %474, i64 0, i32 1
  %478 = load i32, i32* %477, align 4
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %613, label %480

480:                                              ; preds = %476
  %481 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %474, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %482 = load atomic i32, i32* %481 monotonic, align 4
  %483 = and i32 %482, 2
  %484 = icmp eq i32 %483, 0
  br i1 %484, label %485, label %497

485:                                              ; preds = %480
  %486 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %474, i64 0, i32 0
  %487 = load i32, i32* %486, align 4
  %488 = zext i32 %487 to i33
  %489 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %488, i33 1) #22
  %490 = extractvalue { i33, i1 } %489, 1
  %491 = extractvalue { i33, i1 } %489, 0
  %492 = icmp slt i33 %491, 0
  %493 = or i1 %490, %492
  br i1 %493, label %494, label %495, !prof !3

494:                                              ; preds = %485
  call void @llvm.trap() #22
  unreachable

495:                                              ; preds = %485
  %496 = trunc i33 %491 to i32
  store i32 %496, i32* %486, align 4
  br label %497

497:                                              ; preds = %495, %480
  %498 = ptrtoint %"class.WTF::StringImpl"* %474 to i64
  %499 = inttoptr i64 %397 to %"class.WTF::StringImpl"*
  %500 = icmp eq i64 %397, 0
  br i1 %500, label %514, label %501

501:                                              ; preds = %497
  %502 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %499, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %503 = load atomic i32, i32* %502 monotonic, align 4
  %504 = and i32 %503, 2
  %505 = icmp eq i32 %504, 0
  %506 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %499, i64 0, i32 0
  %507 = load i32, i32* %506, align 4
  br i1 %505, label %508, label %510

508:                                              ; preds = %501
  %509 = add i32 %507, -1
  store i32 %509, i32* %506, align 4
  br label %510

510:                                              ; preds = %508, %501
  %511 = phi i32 [ %509, %508 ], [ %507, %501 ]
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %513, label %514

513:                                              ; preds = %510
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %499) #22
  br label %514

514:                                              ; preds = %497, %510, %513
  br i1 %398, label %515, label %596

515:                                              ; preds = %514
  %516 = getelementptr inbounds %"class.blink::HeapVector.3738", %"class.blink::HeapVector.3738"* %6, i64 0, i32 0
  %517 = getelementptr inbounds %"class.blink::HeapVector.3738", %"class.blink::HeapVector.3738"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %518 = load i32, i32* %517, align 4
  %519 = add i32 %518, -1
  %520 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3741"* %516, i32 %519) #22
  %521 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %474, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %522 = load atomic i32, i32* %521 monotonic, align 4
  %523 = and i32 %522, 2
  %524 = icmp eq i32 %523, 0
  br i1 %524, label %525, label %537

525:                                              ; preds = %515
  %526 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %474, i64 0, i32 0
  %527 = load i32, i32* %526, align 4
  %528 = zext i32 %527 to i33
  %529 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %528, i33 1) #22
  %530 = extractvalue { i33, i1 } %529, 1
  %531 = extractvalue { i33, i1 } %529, 0
  %532 = icmp slt i33 %531, 0
  %533 = or i1 %530, %532
  br i1 %533, label %534, label %535, !prof !3

534:                                              ; preds = %525
  call void @llvm.trap() #22
  unreachable

535:                                              ; preds = %525
  %536 = trunc i33 %531 to i32
  store i32 %536, i32* %526, align 4
  br label %537

537:                                              ; preds = %535, %515
  %538 = bitcast %"class.blink::NameSource"* %520 to i64*
  %539 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %520, i64 0, i32 0, i32 0, i32 0
  %540 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %539, align 8
  store i64 %498, i64* %538, align 8
  %541 = icmp eq %"class.WTF::StringImpl"* %540, null
  br i1 %541, label %555, label %542

542:                                              ; preds = %537
  %543 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %540, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %544 = load atomic i32, i32* %543 monotonic, align 4
  %545 = and i32 %544, 2
  %546 = icmp eq i32 %545, 0
  %547 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %540, i64 0, i32 0
  %548 = load i32, i32* %547, align 4
  br i1 %546, label %549, label %551

549:                                              ; preds = %542
  %550 = add i32 %548, -1
  store i32 %550, i32* %547, align 4
  br label %551

551:                                              ; preds = %549, %542
  %552 = phi i32 [ %550, %549 ], [ %548, %542 ]
  %553 = icmp eq i32 %552, 0
  br i1 %553, label %554, label %555

554:                                              ; preds = %551
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %540) #22
  br label %555

555:                                              ; preds = %537, %551, %554
  %556 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %520, i64 0, i32 5
  %557 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %473, align 8
  %558 = icmp eq %"class.WTF::StringImpl"* %557, null
  br i1 %558, label %576, label %559

559:                                              ; preds = %555
  %560 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %561 = load atomic i32, i32* %560 monotonic, align 4
  %562 = and i32 %561, 2
  %563 = icmp eq i32 %562, 0
  br i1 %563, label %564, label %576

564:                                              ; preds = %559
  %565 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 0
  %566 = load i32, i32* %565, align 4
  %567 = zext i32 %566 to i33
  %568 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %567, i33 1) #22
  %569 = extractvalue { i33, i1 } %568, 1
  %570 = extractvalue { i33, i1 } %568, 0
  %571 = icmp slt i33 %570, 0
  %572 = or i1 %569, %571
  br i1 %572, label %573, label %574, !prof !3

573:                                              ; preds = %564
  call void @llvm.trap() #22
  unreachable

574:                                              ; preds = %564
  %575 = trunc i33 %570 to i32
  store i32 %575, i32* %565, align 4
  br label %576

576:                                              ; preds = %574, %559, %555
  %577 = ptrtoint %"class.WTF::StringImpl"* %557 to i64
  %578 = bitcast %"class.WTF::AtomicString"* %556 to i64*
  %579 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %556, i64 0, i32 0, i32 0, i32 0
  %580 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %579, align 8
  store i64 %577, i64* %578, align 8
  %581 = icmp eq %"class.WTF::StringImpl"* %580, null
  br i1 %581, label %595, label %582

582:                                              ; preds = %576
  %583 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %580, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %584 = load atomic i32, i32* %583 monotonic, align 4
  %585 = and i32 %584, 2
  %586 = icmp eq i32 %585, 0
  %587 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %580, i64 0, i32 0
  %588 = load i32, i32* %587, align 4
  br i1 %586, label %589, label %591

589:                                              ; preds = %582
  %590 = add i32 %588, -1
  store i32 %590, i32* %587, align 4
  br label %591

591:                                              ; preds = %589, %582
  %592 = phi i32 [ %590, %589 ], [ %588, %582 ]
  %593 = icmp eq i32 %592, 0
  br i1 %593, label %594, label %595

594:                                              ; preds = %591
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %580) #22
  br label %595

595:                                              ; preds = %576, %591, %594
  store i8 1, i8* %7, align 1
  br label %613

596:                                              ; preds = %514
  store i8 1, i8* %7, align 1
  br label %613

597:                                              ; preds = %394
  %598 = inttoptr i64 %357 to %"class.WTF::StringImpl"*
  %599 = icmp eq i64 %357, 0
  br i1 %599, label %613, label %600

600:                                              ; preds = %597
  %601 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %598, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %602 = load atomic i32, i32* %601 monotonic, align 4
  %603 = and i32 %602, 2
  %604 = icmp eq i32 %603, 0
  %605 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %598, i64 0, i32 0
  %606 = load i32, i32* %605, align 4
  br i1 %604, label %607, label %609

607:                                              ; preds = %600
  %608 = add i32 %606, -1
  store i32 %608, i32* %605, align 4
  br label %609

609:                                              ; preds = %607, %600
  %610 = phi i32 [ %608, %607 ], [ %606, %600 ]
  %611 = icmp eq i32 %610, 0
  br i1 %611, label %612, label %613

612:                                              ; preds = %609
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %598) #22
  br label %613

613:                                              ; preds = %467, %476, %595, %85, %596, %597, %609, %612
  %614 = phi i64 [ %356, %597 ], [ %356, %609 ], [ %356, %612 ], [ %498, %595 ], [ %397, %476 ], [ 0, %85 ], [ %498, %596 ], [ %397, %467 ]
  %615 = inttoptr i64 %614 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %615
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject21ElementsFromAttributeEPNS_7ElementERNS_10HeapVectorINS_6MemberIS1_EELj0EEERKNS_13QualifiedNameERN3WTF6VectorINSB_6StringELj0ENSB_18PartitionAllocatorEEE(%"class.blink::Element"*, %"class.blink::HeapVector.365"* dereferenceable(16), %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::Vector.630"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.absl::optional.3746", align 8
  %6 = icmp eq %"class.blink::Element"* %0, null
  br i1 %6, label %56, label %7

7:                                                ; preds = %4
  tail call void @_ZN5blink8AXObject24TokenVectorFromAttributeEPNS_7ElementERN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %0, %"class.WTF::Vector.630"* dereferenceable(16) %3, %"class.blink::QualifiedName"* dereferenceable(8) %2)
  %8 = getelementptr inbounds %"class.absl::optional.3746", %"class.absl::optional.3746"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @_ZN5blink7Element24GetElementArrayAttributeERKNS_13QualifiedNameE(%"class.absl::optional.3746"* nonnull sret %5, %"class.blink::Element"* nonnull %0, %"class.blink::QualifiedName"* dereferenceable(8) %2) #22
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %54, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.absl::optional.3746", %"class.absl::optional.3746"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %12, align 8
  %14 = getelementptr inbounds %"class.absl::optional.3746", %"class.absl::optional.3746"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %13, i64 %16
  %18 = icmp eq i32 %15, 0
  %19 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %1, i64 0, i32 0
  %20 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  br i1 %18, label %25, label %22

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %28

25:                                               ; preds = %50, %11
  %26 = phi i32 [ %21, %11 ], [ %51, %50 ]
  %27 = icmp ne i32 %26, 0
  br label %54

28:                                               ; preds = %22, %50
  %29 = phi i32 [ %21, %22 ], [ %51, %50 ]
  %30 = phi %"class.blink::Member.343"* [ %13, %22 ], [ %52, %50 ]
  %31 = load i32, i32* %23, align 8
  %32 = icmp eq i32 %29, %31
  br i1 %32, label %48, label %33, !prof !3

33:                                               ; preds = %28
  %34 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %24, align 8
  %35 = zext i32 %29 to i64
  %36 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %34, i64 %35
  %37 = bitcast %"class.blink::Member.343"* %30 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::Member.343"* %36 to i64*
  store atomic i64 %38, i64* %39 monotonic, align 8
  %40 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %33
  %43 = inttoptr i64 %38 to i8*
  %44 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %43) #22
  br label %45

45:                                               ; preds = %42, %33
  %46 = load i32, i32* %20, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %20, align 4
  br label %50

48:                                               ; preds = %28
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.368"* %19, %"class.blink::Member.343"* dereferenceable(8) %30) #22
  %49 = load i32, i32* %20, align 4
  br label %50

50:                                               ; preds = %45, %48
  %51 = phi i32 [ %47, %45 ], [ %49, %48 ]
  %52 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %30, i64 1
  %53 = icmp eq %"class.blink::Member.343"* %52, %17
  br i1 %53, label %25, label %28

54:                                               ; preds = %7, %25
  %55 = phi i1 [ %27, %25 ], [ false, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #22
  br label %56

56:                                               ; preds = %4, %54
  %57 = phi i1 [ %55, %54 ], [ false, %4 ]
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject16TextFromElementsEbRNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEERNS_10HeapVectorINS2_INS_7ElementEEELj0EEEPNSC_INS2_INS_23NameSourceRelatedObjectEEELj0EEE(%"class.blink::AXObject"* nocapture readonly, i1 zeroext, %"class.blink::HeapHashSet.3721"* dereferenceable(24), %"class.blink::HeapVector.365"* nocapture readonly dereferenceable(16), %"class.blink::HeapVector.3727"*) local_unnamed_addr #2 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.WTF::StringBuilder", align 8
  %8 = alloca %"class.blink::HeapVector.3727", align 8
  %9 = alloca %"class.blink::AXObject"*, align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.blink::NameSourceRelatedObject"*, align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = bitcast %"class.WTF::StringBuilder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 48, i1 false)
  %14 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %14, align 8
  %15 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 1
  %16 = bitcast %union.anon.3194* %15 to i8*
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 2
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 3
  store i8 1, i8* %18, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 4
  store i8 0, i8* %19, align 1
  %20 = bitcast %"class.blink::HeapVector.3727"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #22
  %21 = getelementptr inbounds %"class.blink::HeapVector.3727", %"class.blink::HeapVector.3727"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.blink::HeapVector.3727", %"class.blink::HeapVector.3727"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.blink::HeapVector.3727", %"class.blink::HeapVector.3727"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 16, i1 false) #22
  %24 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %25, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %132, label %31

31:                                               ; preds = %5
  %32 = bitcast %"class.blink::AXObject"** %9 to i8*
  %33 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %34 = bitcast %"class.WTF::String"* %10 to i8*
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %36 = bitcast i32* %6 to i8*
  %37 = getelementptr inbounds %"class.blink::HeapHashSet.3721", %"class.blink::HeapHashSet.3721"* %2, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::NameSourceRelatedObject"** %11 to i8*
  %39 = getelementptr inbounds %"class.blink::HeapVector.3727", %"class.blink::HeapVector.3727"* %8, i64 0, i32 0
  %40 = bitcast %"class.WTF::StringView"* %12 to i8*
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %43 = bitcast i8** %42 to %"class.WTF::StringImpl"**
  %44 = bitcast %"class.WTF::StringView"* %12 to i64*
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  br label %49

46:                                               ; preds = %120
  %47 = and i8 %121, 1
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %132, label %124

49:                                               ; preds = %31, %120
  %50 = phi i8 [ 0, %31 ], [ %121, %120 ]
  %51 = phi %"class.blink::Member.343"* [ %25, %31 ], [ %122, %120 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #22
  store %"class.blink::AXObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::AXObject"*), %"class.blink::AXObject"** %9, align 8
  %52 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %33, align 8
  %53 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %51, i64 0, i32 0, i32 0
  %54 = load %"class.blink::Element"*, %"class.blink::Element"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %54, i64 0, i32 0, i32 0
  %56 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %52, %"class.blink::Node"* %55) #22
  store %"class.blink::AXObject"* %56, %"class.blink::AXObject"** %9, align 8
  %57 = icmp eq %"class.blink::AXObject"* %56, null
  br i1 %57, label %120, label %58

58:                                               ; preds = %49
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #22
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #22
  store i32 -1431655766, i32* %6, align 4
  %59 = call %"class.WTF::StringImpl"* @_ZN5blink8AXObject24RecursiveTextAlternativeERKS0_bRNS_11HeapHashSetINS_6MemberIS1_EEN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EEEERN2ax5mojom8NameFromE(%"class.blink::AXObject"* nonnull dereferenceable(120) %56, i1 zeroext %1, %"class.blink::HeapHashSet.3721"* dereferenceable(24) %2, i32* nonnull dereferenceable(4) %6) #22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #22
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %35, align 8
  %60 = call { %"class.blink::Member.3459"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS3_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.3725"* %37, %"class.blink::AXObject"** nonnull dereferenceable(8) %9, %"class.blink::AXObject"** nonnull dereferenceable(8) %9) #22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #22
  %61 = call %"class.blink::NameSourceRelatedObject"* @_ZN5blink25MakeGarbageCollectedTraitINS_23NameSourceRelatedObjectEE4CallIJRPNS_8AXObjectERN3WTF6StringEEEEPS1_DpOT_(%"class.blink::AXObject"** nonnull dereferenceable(8) %9, %"class.WTF::String"* nonnull dereferenceable(8) %10) #22
  store %"class.blink::NameSourceRelatedObject"* %61, %"class.blink::NameSourceRelatedObject"** %11, align 8
  %62 = load i32, i32* %23, align 4
  %63 = load i32, i32* %22, align 8
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %79, label %65, !prof !3

65:                                               ; preds = %58
  %66 = ptrtoint %"class.blink::NameSourceRelatedObject"* %61 to i64
  %67 = load %"class.blink::Member.3733"*, %"class.blink::Member.3733"** %21, align 8
  %68 = zext i32 %62 to i64
  %69 = getelementptr inbounds %"class.blink::Member.3733", %"class.blink::Member.3733"* %67, i64 %68
  %70 = bitcast %"class.blink::Member.3733"* %69 to i64*
  store atomic i64 %66, i64* %70 monotonic, align 8
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.blink::NameSourceRelatedObject"* %61 to i8*
  %75 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %74) #22
  br label %76

76:                                               ; preds = %73, %65
  %77 = load i32, i32* %23, align 4
  %78 = add i32 %77, 1
  store i32 %78, i32* %23, align 4
  br label %80

79:                                               ; preds = %58
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.3730"* nonnull %39, %"class.blink::NameSourceRelatedObject"** nonnull dereferenceable(8) %11) #22
  br label %80

80:                                               ; preds = %76, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #22
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %119, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %105, label %87

87:                                               ; preds = %83
  %88 = load i32, i32* %17, align 8
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #22
  br label %96

91:                                               ; preds = %87
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %7, i8 zeroext 32) #22
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #22
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %94, label %96

94:                                               ; preds = %91
  store i8* null, i8** %42, align 8
  %95 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %95, i64* %44, align 8
  br label %101

96:                                               ; preds = %90, %91
  %97 = phi %"class.WTF::StringImpl"* [ %81, %90 ], [ %92, %91 ]
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %41, align 8
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 1
  store %"class.WTF::StringImpl"* %100, %"class.WTF::StringImpl"** %43, align 8
  br label %101

101:                                              ; preds = %96, %94
  %102 = phi i32 [ %99, %96 ], [ 0, %94 ]
  store i32 %102, i32* %45, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #22
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %119, label %105

105:                                              ; preds = %83, %101
  %106 = phi %"class.WTF::StringImpl"* [ %103, %101 ], [ %81, %83 ]
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %105
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %105
  %116 = phi i32 [ %114, %113 ], [ %112, %105 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #22
  br label %119

119:                                              ; preds = %80, %101, %115, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #22
  br label %120

120:                                              ; preds = %49, %119
  %121 = phi i8 [ 1, %119 ], [ %50, %49 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #22
  %122 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %51, i64 1
  %123 = icmp eq %"class.blink::Member.343"* %122, %29
  br i1 %123, label %46, label %49

124:                                              ; preds = %46
  %125 = icmp eq %"class.blink::HeapVector.3727"* %4, null
  br i1 %125, label %130, label %126

126:                                              ; preds = %124
  %127 = getelementptr inbounds %"class.blink::HeapVector.3727", %"class.blink::HeapVector.3727"* %4, i64 0, i32 0
  %128 = getelementptr inbounds %"class.blink::HeapVector.3727", %"class.blink::HeapVector.3727"* %8, i64 0, i32 0
  %129 = call dereferenceable(16) %"class.WTF::Vector.3730"* @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.3730"* %127, %"class.WTF::Vector.3730"* nonnull dereferenceable(16) %128) #22
  br label %130

130:                                              ; preds = %124, %126
  %131 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %7) #22
  br label %132

132:                                              ; preds = %5, %46, %130
  %133 = phi %"class.WTF::StringImpl"* [ %131, %130 ], [ null, %46 ], [ null, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #22
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %7) #22
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %149, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %136
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %136
  %146 = phi i32 [ %144, %143 ], [ %142, %136 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %134) #22
  br label %149

149:                                              ; preds = %132, %145, %148
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #22
  ret %"class.WTF::StringImpl"* %133
}

declare void @_ZN5blink17AXObjectCacheImpl22UpdateReverseRelationsEPKNS_8AXObjectERKN3WTF6VectorINS4_6StringELj0ENS4_18PartitionAllocatorEEE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObject"*, %"class.WTF::Vector.630"* dereferenceable(16)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8AXObject24TokenVectorFromAttributeEPNS_7ElementERN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERKNS_13QualifiedNameE(%"class.blink::Element"* readonly, %"class.WTF::Vector.630"* dereferenceable(16), %"class.blink::QualifiedName"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = icmp eq %"class.blink::Element"* %0, null
  br i1 %5, label %130, label %6

6:                                                ; preds = %3
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #22
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %9, align 8
  %11 = icmp eq %"class.blink::ElementData"* %10, null
  br i1 %11, label %62, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %10, i64 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %12
  %18 = bitcast %"class.blink::ElementData"* %10 to %"class.blink::UniqueElementData"*
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %10, i64 1, i32 1
  %20 = bitcast %"class.blink::Member.354"* %19 to %"class.blink::Attribute"**
  %21 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %18, i64 0, i32 2, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  br label %29

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %10, i64 1
  %26 = bitcast %"class.blink::ElementData"* %25 to %"class.blink::Attribute"*
  %27 = lshr i32 %14, 1
  %28 = and i32 %27, 268435455
  br label %29

29:                                               ; preds = %24, %17
  %30 = phi %"class.blink::Attribute"* [ %26, %24 ], [ %21, %17 ]
  %31 = phi i32 [ %28, %24 ], [ %23, %17 ]
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %30, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %62, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %40

40:                                               ; preds = %55, %35
  %41 = phi %"class.blink::Attribute"* [ %30, %35 ], [ %56, %55 ]
  %42 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %42, align 8
  %44 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %43, %37
  br i1 %44, label %58, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, %48
  br i1 %49, label %50, label %55

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 4, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %52, %53
  br i1 %54, label %58, label %55

55:                                               ; preds = %50, %45
  %56 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %41, i64 1
  %57 = icmp eq %"class.blink::Attribute"* %56, %33
  br i1 %57, label %62, label %40

58:                                               ; preds = %50, %40
  %59 = icmp eq %"class.blink::Attribute"* %41, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %41, i64 0, i32 1
  br label %64

62:                                               ; preds = %55, %58, %29, %6
  %63 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %64

64:                                               ; preds = %60, %62
  %65 = phi %"class.WTF::AtomicString"* [ %63, %62 ], [ %61, %60 ]
  %66 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %8, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %129, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %88

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i33
  %78 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %77, i33 1) #22
  %79 = extractvalue { i33, i1 } %78, 1
  %80 = extractvalue { i33, i1 } %78, 0
  %81 = icmp slt i33 %80, 0
  %82 = or i1 %79, %81
  br i1 %82, label %83, label %84, !prof !3

83:                                               ; preds = %74
  tail call void @llvm.trap() #22
  unreachable

84:                                               ; preds = %74
  %85 = trunc i33 %80 to i32
  store i32 %85, i32* %75, align 4
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %129, label %88

88:                                               ; preds = %69, %84
  %89 = phi %"class.WTF::StringImpl"* [ %86, %84 ], [ %67, %69 ]
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %115, label %93

93:                                               ; preds = %88
  %94 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String18SimplifyWhiteSpaceENS_13StripBehaviorE(%"class.WTF::String"* nonnull %4, i32 0) #22
  %95 = ptrtoint %"class.WTF::StringImpl"* %94 to i64
  %96 = bitcast %"class.WTF::String"* %4 to i64*
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  store i64 %95, i64* %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #22
  br label %112

112:                                              ; preds = %93, %108, %111
  call void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* nonnull %4, i16 zeroext 32, i1 zeroext false, %"class.WTF::Vector.630"* dereferenceable(16) %1) #22
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %129, label %115

115:                                              ; preds = %88, %112
  %116 = phi %"class.WTF::StringImpl"* [ %113, %112 ], [ %89, %88 ]
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %125

123:                                              ; preds = %115
  %124 = add i32 %122, -1
  store i32 %124, i32* %121, align 4
  br label %125

125:                                              ; preds = %123, %115
  %126 = phi i32 [ %124, %123 ], [ %122, %115 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #22
  br label %129

129:                                              ; preds = %84, %64, %112, %125, %128
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #22
  br label %130

130:                                              ; preds = %3, %129
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String18SimplifyWhiteSpaceENS_13StripBehaviorE(%"class.WTF::String"*, i32) local_unnamed_addr #6

declare void @_ZN5blink7Element24GetElementArrayAttributeERKNS_13QualifiedNameE(%"class.absl::optional.3746"* sret, %"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject27AriaLabelledbyElementVectorEPNS_7ElementERNS_10HeapVectorINS_6MemberIS1_EELj0EEERN3WTF6VectorINS8_6StringELj0ENS8_18PartitionAllocatorEEE(%"class.blink::Element"*, %"class.blink::HeapVector.365"* dereferenceable(16), %"class.WTF::Vector.630"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kAriaLabelledbyAttrE, align 8
  %5 = tail call zeroext i1 @_ZN5blink8AXObject21ElementsFromAttributeEPNS_7ElementERNS_10HeapVectorINS_6MemberIS1_EELj0EEERKNS_13QualifiedNameERN3WTF6VectorINSB_6StringELj0ENSB_18PartitionAllocatorEEE(%"class.blink::Element"* %0, %"class.blink::HeapVector.365"* dereferenceable(16) %1, %"class.blink::QualifiedName"* dereferenceable(8) %4, %"class.WTF::Vector.630"* dereferenceable(16) %2)
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names18kAriaLabeledbyAttrE, align 8
  %8 = tail call zeroext i1 @_ZN5blink8AXObject21ElementsFromAttributeEPNS_7ElementERNS_10HeapVectorINS_6MemberIS1_EELj0EEERKNS_13QualifiedNameERN3WTF6VectorINSB_6StringELj0ENSB_18PartitionAllocatorEEE(%"class.blink::Element"* %0, %"class.blink::HeapVector.365"* dereferenceable(16) %1, %"class.blink::QualifiedName"* dereferenceable(8) %7, %"class.WTF::Vector.630"* dereferenceable(16) %2)
  br label %9

9:                                                ; preds = %3, %6
  %10 = phi i1 [ %8, %6 ], [ true, %3 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject23IsNameFromAriaAttributeEPNS_7ElementE(%"class.blink::Element"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.blink::HeapVector.365", align 8
  %3 = alloca %"class.WTF::Vector.630", align 8
  %4 = icmp eq %"class.blink::Element"* %0, null
  br i1 %4, label %63, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::HeapVector.365"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #22
  %7 = bitcast %"class.WTF::Vector.630"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #22
  %8 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #22
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kAriaLabelledbyAttrE, align 8
  %11 = call zeroext i1 @_ZN5blink8AXObject21ElementsFromAttributeEPNS_7ElementERNS_10HeapVectorINS_6MemberIS1_EELj0EEERKNS_13QualifiedNameERN3WTF6VectorINSB_6StringELj0ENSB_18PartitionAllocatorEEE(%"class.blink::Element"* nonnull %0, %"class.blink::HeapVector.365"* nonnull dereferenceable(16) %2, %"class.blink::QualifiedName"* dereferenceable(8) %10, %"class.WTF::Vector.630"* nonnull dereferenceable(16) %3) #22
  br i1 %11, label %25, label %12

12:                                               ; preds = %5
  %13 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names18kAriaLabeledbyAttrE, align 8
  %14 = call zeroext i1 @_ZN5blink8AXObject21ElementsFromAttributeEPNS_7ElementERNS_10HeapVectorINS_6MemberIS1_EELj0EEERKNS_13QualifiedNameERN3WTF6VectorINSB_6StringELj0ENSB_18PartitionAllocatorEEE(%"class.blink::Element"* nonnull %0, %"class.blink::HeapVector.365"* nonnull dereferenceable(16) %2, %"class.blink::QualifiedName"* dereferenceable(8) %13, %"class.WTF::Vector.630"* nonnull dereferenceable(16) %3) #22
  br i1 %14, label %25, label %15

15:                                               ; preds = %12
  %16 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_17AOMStringPropertyE(%"class.blink::Element"* nonnull %0, i32 7) #22
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %15, %20
  br label %25

25:                                               ; preds = %5, %24, %20, %12
  %26 = phi i1 [ true, %12 ], [ false, %24 ], [ true, %20 ], [ true, %5 ]
  %27 = load %"class.WTF::String"*, %"class.WTF::String"** %8, align 8
  %28 = icmp eq %"class.WTF::String"* %27, null
  br i1 %28, label %62, label %29, !prof !19

29:                                               ; preds = %25
  %30 = bitcast %"class.WTF::String"* %27 to i8*
  %31 = load i32, i32* %9, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %60, label %33, !prof !3

33:                                               ; preds = %29
  %34 = zext i32 %31 to i64
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 %34
  br label %36

36:                                               ; preds = %54, %33
  %37 = phi %"class.WTF::String"* [ %55, %54 ], [ %27, %33 ]
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #22
  br label %54

54:                                               ; preds = %53, %50, %36
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 1
  %56 = icmp eq %"class.WTF::String"* %55, %35
  br i1 %56, label %57, label %36

57:                                               ; preds = %54
  store i32 0, i32* %9, align 4
  %58 = bitcast %"class.WTF::Vector.630"* %3 to i8**
  %59 = load i8*, i8** %58, align 8
  br label %60

60:                                               ; preds = %57, %29
  %61 = phi i8* [ %59, %57 ], [ %30, %29 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %61) #22
  store %"class.WTF::String"* null, %"class.WTF::String"** %8, align 8
  br label %62

62:                                               ; preds = %25, %60
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #22
  br label %63

63:                                               ; preds = %1, %62
  %64 = phi i1 [ %26, %62 ], [ false, %1 ]
  ret i1 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject25IsNameFromAuthorAttributeEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %3, i64 124
  %5 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::Node"* %5(%"class.blink::AXObject"* %0) #22
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 12
  %12 = icmp eq i32 %11, 0
  %13 = bitcast %"class.blink::Node"* %6 to %"class.blink::Element"*
  %14 = select i1 %12, %"class.blink::Element"* %13, %"class.blink::Element"* null
  br label %15

15:                                               ; preds = %1, %8
  %16 = phi %"class.blink::Element"* [ %14, %8 ], [ null, %1 ]
  %17 = tail call zeroext i1 @_ZN5blink8AXObject23IsNameFromAriaAttributeEPNS_7ElementE(%"class.blink::Element"* %16)
  br i1 %17, label %25, label %18

18:                                               ; preds = %15
  %19 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kTitleAttrE, align 8
  %20 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)***
  %21 = load i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)**, i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*, i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)** %21, i64 130
  %23 = load i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*, i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::AXObject"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %19) #22
  br label %25

25:                                               ; preds = %18, %15
  %26 = phi i1 [ true, %15 ], [ %24, %18 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject22TextFromAriaLabelledbyERNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEERNS5_6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEE(%"class.blink::AXObject"*, %"class.blink::HeapHashSet.3721"* dereferenceable(24), %"class.blink::HeapVector.3727"*, %"class.WTF::Vector.630"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.blink::HeapVector.365", align 8
  %6 = bitcast %"class.blink::HeapVector.365"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #22
  %7 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %8 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %8, i64 124
  %10 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %9, align 8
  %11 = tail call %"class.blink::Node"* %10(%"class.blink::AXObject"* %0) #22
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %11, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 12
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::Node"* %11 to %"class.blink::Element"*
  %19 = select i1 %17, %"class.blink::Element"* %18, %"class.blink::Element"* null
  br label %20

20:                                               ; preds = %4, %13
  %21 = phi %"class.blink::Element"* [ %19, %13 ], [ null, %4 ]
  %22 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kAriaLabelledbyAttrE, align 8
  %23 = call zeroext i1 @_ZN5blink8AXObject21ElementsFromAttributeEPNS_7ElementERNS_10HeapVectorINS_6MemberIS1_EELj0EEERKNS_13QualifiedNameERN3WTF6VectorINSB_6StringELj0ENSB_18PartitionAllocatorEEE(%"class.blink::Element"* %21, %"class.blink::HeapVector.365"* nonnull dereferenceable(16) %5, %"class.blink::QualifiedName"* dereferenceable(8) %22, %"class.WTF::Vector.630"* dereferenceable(16) %3) #22
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  %25 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names18kAriaLabeledbyAttrE, align 8
  %26 = call zeroext i1 @_ZN5blink8AXObject21ElementsFromAttributeEPNS_7ElementERNS_10HeapVectorINS_6MemberIS1_EELj0EEERKNS_13QualifiedNameERN3WTF6VectorINSB_6StringELj0ENSB_18PartitionAllocatorEEE(%"class.blink::Element"* %21, %"class.blink::HeapVector.365"* nonnull dereferenceable(16) %5, %"class.blink::QualifiedName"* dereferenceable(8) %25, %"class.WTF::Vector.630"* dereferenceable(16) %3) #22
  br label %27

27:                                               ; preds = %20, %24
  %28 = call %"class.WTF::StringImpl"* @_ZNK5blink8AXObject16TextFromElementsEbRNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEERNS_10HeapVectorINS2_INS_7ElementEEELj0EEEPNSC_INS2_INS_23NameSourceRelatedObjectEEELj0EEE(%"class.blink::AXObject"* %0, i1 zeroext true, %"class.blink::HeapHashSet.3721"* dereferenceable(24) %1, %"class.blink::HeapVector.365"* nonnull dereferenceable(16) %5, %"class.blink::HeapVector.3727"* %2)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #22
  ret %"class.WTF::StringImpl"* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject23TextFromAriaDescribedbyEPNS_10HeapVectorINS_6MemberINS_23NameSourceRelatedObjectEEELj0EEERN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.3727"*, %"class.WTF::Vector.630"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.blink::HeapHashSet.3721", align 8
  %5 = alloca %"class.blink::HeapVector.365", align 8
  %6 = bitcast %"class.blink::HeapHashSet.3721"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #22
  %7 = bitcast %"class.blink::HeapHashSet.3721"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 20, i1 false) #22
  %8 = bitcast %"class.blink::HeapVector.365"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #22
  %9 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %10 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %10, i64 124
  %12 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %11, align 8
  %13 = tail call %"class.blink::Node"* %12(%"class.blink::AXObject"* %0) #22
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 12
  %19 = icmp eq i32 %18, 0
  %20 = bitcast %"class.blink::Node"* %13 to %"class.blink::Element"*
  %21 = select i1 %19, %"class.blink::Element"* %20, %"class.blink::Element"* null
  br label %22

22:                                               ; preds = %3, %15
  %23 = phi %"class.blink::Element"* [ %21, %15 ], [ null, %3 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kAriaDescribedbyAttrE, align 8
  %25 = call zeroext i1 @_ZN5blink8AXObject21ElementsFromAttributeEPNS_7ElementERNS_10HeapVectorINS_6MemberIS1_EELj0EEERKNS_13QualifiedNameERN3WTF6VectorINSB_6StringELj0ENSB_18PartitionAllocatorEEE(%"class.blink::Element"* %23, %"class.blink::HeapVector.365"* nonnull dereferenceable(16) %5, %"class.blink::QualifiedName"* dereferenceable(8) %24, %"class.WTF::Vector.630"* dereferenceable(16) %2)
  %26 = call %"class.WTF::StringImpl"* @_ZNK5blink8AXObject16TextFromElementsEbRNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEERNS_10HeapVectorINS2_INS_7ElementEEELj0EEEPNSC_INS2_INS_23NameSourceRelatedObjectEEELj0EEE(%"class.blink::AXObject"* %0, i1 zeroext true, %"class.blink::HeapHashSet.3721"* nonnull dereferenceable(24) %4, %"class.blink::HeapVector.365"* nonnull dereferenceable(16) %5, %"class.blink::HeapVector.3727"* %1)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #22
  ret %"class.WTF::StringImpl"* %26
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink8AXObject11OrientationEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8AXObject19LoadInlineTextBoxesEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = load i8, i8* @_ZN5blink8AXObject24is_loading_inline_boxes_E, align 1, !range !2
  store i8 1, i8* @_ZN5blink8AXObject24is_loading_inline_boxes_E, align 1
  %3 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %4 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %4, i64 83
  %6 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %5, align 8
  tail call void %6(%"class.blink::AXObject"* %0) #22
  store i8 %2, i8* @_ZN5blink8AXObject24is_loading_inline_boxes_E, align 1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink8AXObject28LoadInlineTextBoxesRecursiveEv(%"class.blink::AXObject"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.blink::AXObject"* @_ZNK5blink8AXObject10NextOnLineEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret %"class.blink::AXObject"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.blink::AXObject"* @_ZNK5blink8AXObject14PreviousOnLineEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret %"class.blink::AXObject"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink8AXObject30GetAriaSpellingOrGrammarMarkerEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #22
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  %7 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* %0) #22, !noalias !27
  %8 = ptrtoint %"class.blink::AXObject"* %7 to i64
  %9 = icmp eq %"class.blink::AXObject"* %7, null
  br i1 %9, label %39, label %10

10:                                               ; preds = %1, %37
  %11 = phi i64 [ %31, %37 ], [ %8, %1 ]
  %12 = phi %"class.blink::AXObject"* [ %30, %37 ], [ %7, %1 ]
  %13 = call zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_17AOMStringPropertyERN3WTF12AtomicStringE(%"class.blink::AXObject"* nonnull %12, i32 5, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %2) #22, !noalias !30
  br i1 %13, label %39, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.blink::AXObject"* %12 to i1 (%"class.blink::AXObject"*)***
  %16 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %15, align 8, !noalias !30
  %17 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %16, i64 38
  %18 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %17, align 8, !noalias !30
  %19 = tail call zeroext i1 %18(%"class.blink::AXObject"* nonnull %12) #22, !noalias !30
  br i1 %19, label %39, label %20

20:                                               ; preds = %14
  %21 = inttoptr i64 %11 to %"class.blink::AXObject"*
  %22 = icmp eq i64 %11, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %21, i64 0, i32 14, i32 0, i32 0
  %25 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %24, align 8, !noalias !30
  %26 = icmp eq %"class.blink::AXObjectCacheImpl"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* nonnull %21) #22, !noalias !30
  br label %29

29:                                               ; preds = %27, %23, %20
  %30 = phi %"class.blink::AXObject"* [ %28, %27 ], [ null, %23 ], [ null, %20 ]
  %31 = ptrtoint %"class.blink::AXObject"* %30 to i64
  %32 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4, !noalias !30
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::AXObject"* %30 to i8*
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %35) #22, !noalias !30
  br label %37

37:                                               ; preds = %34, %29
  %38 = icmp eq %"class.blink::AXObject"* %30, null
  br i1 %38, label %42, label %10

39:                                               ; preds = %14, %10, %1
  %40 = phi i64 [ %8, %1 ], [ %11, %10 ], [ %11, %14 ]
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %37, %39
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  br label %81

44:                                               ; preds = %39
  %45 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #22
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %48, label %52

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %49, align 8
  %50 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %51 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %50, i64* %51, align 8
  br label %59

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %46, %"class.WTF::StringImpl"** %53, align 8
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 1
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %58 = bitcast i8** %57 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %58, align 8
  br label %59

59:                                               ; preds = %48, %52
  %60 = phi i32 [ %55, %52 ], [ 0, %48 ]
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %60, i32* %61, align 8
  %62 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [9 x i8]* nonnull dereferenceable(9) @.str.11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #22
  br i1 %62, label %81, label %63

63:                                               ; preds = %59
  %64 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #22
  br i1 %47, label %65, label %69

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %66, align 8
  %67 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %68 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %67, i64* %68, align 8
  br label %76

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %46, %"class.WTF::StringImpl"** %70, align 8
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 1
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %75 = bitcast i8** %74 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %75, align 8
  br label %76

76:                                               ; preds = %65, %69
  %77 = phi i32 [ %72, %69 ], [ 0, %65 ]
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %77, i32* %78, align 8
  %79 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [8 x i8]* nonnull dereferenceable(8) @.str.12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #22
  %80 = zext i1 %79 to i64
  br label %81

81:                                               ; preds = %42, %76, %59
  %82 = phi %"class.WTF::StringImpl"* [ %43, %42 ], [ %46, %59 ], [ %46, %76 ]
  %83 = phi i64 [ 0, %42 ], [ 1, %59 ], [ %80, %76 ]
  %84 = phi i64 [ 0, %42 ], [ 4294967296, %59 ], [ 8589934592, %76 ]
  %85 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #22
  br label %99

99:                                               ; preds = %81, %95, %98
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #22
  %100 = or i64 %84, %83
  ret i64 %100
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [9 x i8]* dereferenceable(9)) local_unnamed_addr #9 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 8
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %173, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %243, %14, %28, %173, %187, %201, %215, %229, %42, %59, %77, %93, %109, %125, %141, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %14 ], [ false, %28 ], [ false, %173 ], [ false, %187 ], [ false, %201 ], [ false, %215 ], [ false, %229 ], [ %256, %243 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  ret i1 %172

173:                                              ; preds = %28
  %174 = getelementptr inbounds i8, i8* %15, i64 2
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i64
  %177 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i64
  %183 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = sext i8 %184 to i32
  %186 = icmp eq i32 %179, %185
  br i1 %186, label %187, label %75

187:                                              ; preds = %173
  %188 = getelementptr inbounds i8, i8* %15, i64 3
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i64
  %191 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i64
  %197 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = sext i8 %198 to i32
  %200 = icmp eq i32 %193, %199
  br i1 %200, label %201, label %75

201:                                              ; preds = %187
  %202 = getelementptr inbounds i8, i8* %15, i64 4
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i64
  %205 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %204
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i64
  %211 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %210
  %212 = load i8, i8* %211, align 1
  %213 = sext i8 %212 to i32
  %214 = icmp eq i32 %207, %213
  br i1 %214, label %215, label %75

215:                                              ; preds = %201
  %216 = getelementptr inbounds i8, i8* %15, i64 5
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i64
  %219 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %218
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i64
  %225 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %224
  %226 = load i8, i8* %225, align 1
  %227 = sext i8 %226 to i32
  %228 = icmp eq i32 %221, %227
  br i1 %228, label %229, label %75

229:                                              ; preds = %215
  %230 = getelementptr inbounds i8, i8* %15, i64 6
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %232
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i64
  %239 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = sext i8 %240 to i32
  %242 = icmp eq i32 %235, %241
  br i1 %242, label %243, label %75

243:                                              ; preds = %229
  %244 = getelementptr inbounds i8, i8* %15, i64 7
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i64
  %247 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %246
  %248 = load i8, i8* %247, align 1
  %249 = zext i8 %248 to i32
  %250 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i64
  %253 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %252
  %254 = load i8, i8* %253, align 1
  %255 = sext i8 %254 to i32
  %256 = icmp eq i32 %249, %255
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [8 x i8]* dereferenceable(8)) local_unnamed_addr #9 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 7
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %157, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %213, %14, %28, %157, %171, %185, %199, %42, %59, %77, %93, %109, %125, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %14 ], [ false, %28 ], [ false, %157 ], [ false, %171 ], [ false, %185 ], [ false, %199 ], [ %226, %213 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  ret i1 %156

157:                                              ; preds = %28
  %158 = getelementptr inbounds i8, i8* %15, i64 2
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i64
  %161 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 2
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i64
  %167 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %166
  %168 = load i8, i8* %167, align 1
  %169 = sext i8 %168 to i32
  %170 = icmp eq i32 %163, %169
  br i1 %170, label %171, label %75

171:                                              ; preds = %157
  %172 = getelementptr inbounds i8, i8* %15, i64 3
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i64
  %175 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %174
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i32
  %178 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 3
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i64
  %181 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = sext i8 %182 to i32
  %184 = icmp eq i32 %177, %183
  br i1 %184, label %185, label %75

185:                                              ; preds = %171
  %186 = getelementptr inbounds i8, i8* %15, i64 4
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i64
  %189 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i32
  %192 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 4
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i64
  %195 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = sext i8 %196 to i32
  %198 = icmp eq i32 %191, %197
  br i1 %198, label %199, label %75

199:                                              ; preds = %185
  %200 = getelementptr inbounds i8, i8* %15, i64 5
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i64
  %203 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %202
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 5
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i64
  %209 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = sext i8 %210 to i32
  %212 = icmp eq i32 %205, %211
  br i1 %212, label %213, label %75

213:                                              ; preds = %199
  %214 = getelementptr inbounds i8, i8* %15, i64 6
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i64
  %217 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = zext i8 %218 to i32
  %220 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 6
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i64
  %223 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = sext i8 %224 to i32
  %226 = icmp eq i32 %219, %225
  br label %75
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5blink8AXObject20TextCharacterOffsetsERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::AXObject"* nocapture, %"class.WTF::Vector.3757"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5blink8AXObject17GetWordBoundariesERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEES5_(%"class.blink::AXObject"* nocapture, %"class.WTF::Vector.3757"* nocapture dereferenceable(16), %"class.WTF::Vector.3757"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8AXObject10TextLengthEv(%"class.blink::AXObject"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %3, i64 124
  %5 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::Node"* %5(%"class.blink::AXObject"* %0) #22
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %42, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 12
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::Node"* %6 to %"class.blink::Element"*
  %15 = bitcast %"class.blink::Node"* %6 to i1 (%"class.blink::Element"*)***
  %16 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %16, i64 126
  %18 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::Element"* nonnull %14) #22
  br i1 %19, label %20, label %42

20:                                               ; preds = %13
  %21 = bitcast %"class.blink::AXObject"* %0 to %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)***
  %22 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)**, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)** %22, i64 98
  %24 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*)** %23, align 8
  %25 = tail call %"class.WTF::StringImpl"* %24(%"class.blink::AXObject"* %0) #22
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %42, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %27
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %27
  %39 = phi i32 [ %37, %36 ], [ %35, %27 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #22
  br label %42

42:                                               ; preds = %20, %8, %1, %41, %38, %13
  %43 = phi i32 [ 0, %13 ], [ %29, %38 ], [ %29, %41 ], [ 0, %1 ], [ 0, %8 ], [ 0, %20 ]
  ret i32 %43
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink8AXObject29TextOffsetInFormattingContextEi(%"class.blink::AXObject"* nocapture readnone, i32 returned) unnamed_addr #0 align 2 {
  ret i32 %1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink8AXObject21TextOffsetInContainerEi(%"class.blink::AXObject"* nocapture readnone, i32 returned) unnamed_addr #0 align 2 {
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8AXObject6ActionEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Element"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::Element"* (%"class.blink::AXObject"*)**, %"class.blink::Element"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Element"* (%"class.blink::AXObject"*)*, %"class.blink::Element"* (%"class.blink::AXObject"*)** %3, i64 128
  %5 = load %"class.blink::Element"* (%"class.blink::AXObject"*)*, %"class.blink::Element"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::Element"* %5(%"class.blink::AXObject"* %0) #22
  %7 = icmp eq %"class.blink::Element"* %6, null
  br i1 %7, label %61, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %10 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %9, align 8
  %11 = icmp eq %"class.blink::AXObjectCacheImpl"* %10, null
  br i1 %11, label %33, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %14 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %14, i64 124
  %16 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %15, align 8
  %17 = tail call %"class.blink::Node"* %16(%"class.blink::AXObject"* %0) #22
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 12
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = bitcast %"class.blink::Node"* %17 to %"class.blink::Element"*
  %26 = bitcast %"class.blink::Node"* %17 to i1 (%"class.blink::Element"*)***
  %27 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %26, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %27, i64 126
  %29 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::Element"* nonnull %25) #22
  br i1 %30, label %61, label %31

31:                                               ; preds = %12, %19, %24
  %32 = tail call zeroext i1 @_ZNK5blink8AXObject20IsNonAtomicTextFieldEv(%"class.blink::AXObject"* %0) #22
  br i1 %32, label %61, label %33

33:                                               ; preds = %8, %31
  %34 = tail call zeroext i1 @_ZNK5blink8AXObject11IsCheckableEv(%"class.blink::AXObject"* %0)
  br i1 %34, label %35, label %39

35:                                               ; preds = %33
  %36 = tail call i32 @_ZNK5blink8AXObject12CheckedStateEv(%"class.blink::AXObject"* %0)
  %37 = icmp eq i32 %36, 2
  %38 = select i1 %37, i32 9, i32 2
  br label %61

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 10
  br i1 %42, label %43, label %47

43:                                               ; preds = %39
  %44 = tail call zeroext i1 @_ZNK5blink8AXObject20CanSetFocusAttributeEv(%"class.blink::AXObject"* %0)
  br i1 %44, label %45, label %61

45:                                               ; preds = %43
  %46 = load i32, i32* %40, align 4
  br label %47

47:                                               ; preds = %45, %39
  %48 = phi i32 [ %46, %45 ], [ %41, %39 ]
  switch i32 %48, label %52 [
    i32 10, label %61
    i32 38, label %61
    i32 176, label %61
    i32 114, label %49
    i32 127, label %49
    i32 125, label %49
    i32 128, label %49
    i32 111, label %50
    i32 22, label %51
    i32 138, label %51
  ]

49:                                               ; preds = %47, %47, %47, %47
  br label %61

50:                                               ; preds = %47
  br label %61

51:                                               ; preds = %47, %47
  br label %61

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %6, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %55 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %54, align 8
  %56 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %55, i64 124
  %57 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %56, align 8
  %58 = tail call %"class.blink::Node"* %57(%"class.blink::AXObject"* %0) #22
  %59 = icmp eq %"class.blink::Node"* %53, %58
  %60 = select i1 %59, i32 3, i32 4
  br label %61

61:                                               ; preds = %24, %52, %47, %47, %47, %43, %31, %1, %51, %50, %49, %35
  %62 = phi i32 [ %38, %35 ], [ 6, %51 ], [ 5, %50 ], [ 8, %49 ], [ 0, %1 ], [ 1, %31 ], [ 3, %43 ], [ 7, %47 ], [ 7, %47 ], [ 7, %47 ], [ %60, %52 ], [ 1, %24 ]
  ret i32 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject20AriaPressedIsPresentEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #22
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4, align 8
  %5 = call zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_17AOMStringPropertyERN3WTF12AtomicStringE(%"class.blink::AXObject"* %0, i32 11, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %2)
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #22
  br label %21

21:                                               ; preds = %1, %17, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #22
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject20SupportsARIAExpandedEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %4 [
    i32 5, label %5
    i32 10, label %5
    i32 15, label %5
    i32 20, label %5
    i32 21, label %5
    i32 22, label %5
    i32 38, label %5
    i32 113, label %5
    i32 111, label %5
    i32 138, label %5
    i32 125, label %5
    i32 126, label %5
    i32 127, label %5
    i32 146, label %5
    i32 148, label %5
    i32 164, label %5
    i32 165, label %5
    i32 172, label %5
    i32 181, label %5
    i32 14, label %5
  ]

4:                                                ; preds = %1
  br label %5

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %4
  %6 = phi i1 [ false, %4 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 {
  %2 = alloca [16 x %"class.WTF::AtomicString"], align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %65, !prof !23

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties) #22
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %65, label %8

8:                                                ; preds = %5
  %9 = bitcast [16 x %"class.WTF::AtomicString"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %9) #22
  %10 = getelementptr inbounds [16 x %"class.WTF::AtomicString"], [16 x %"class.WTF::AtomicString"]* %2, i64 0, i64 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %10, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.192, i64 0, i64 0), i64 11) #22
  %11 = getelementptr inbounds [16 x %"class.WTF::AtomicString"], [16 x %"class.WTF::AtomicString"]* %2, i64 0, i64 1
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.193, i64 0, i64 0), i64 9) #22
  %12 = getelementptr inbounds [16 x %"class.WTF::AtomicString"], [16 x %"class.WTF::AtomicString"]* %2, i64 0, i64 2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.194, i64 0, i64 0), i64 13) #22
  %13 = getelementptr inbounds [16 x %"class.WTF::AtomicString"], [16 x %"class.WTF::AtomicString"]* %2, i64 0, i64 3
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %13, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.195, i64 0, i64 0), i64 12) #22
  %14 = getelementptr inbounds [16 x %"class.WTF::AtomicString"], [16 x %"class.WTF::AtomicString"]* %2, i64 0, i64 4
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %14, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.196, i64 0, i64 0), i64 16) #22
  %15 = getelementptr inbounds [16 x %"class.WTF::AtomicString"], [16 x %"class.WTF::AtomicString"]* %2, i64 0, i64 5
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %15, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.197, i64 0, i64 0), i64 16) #22
  %16 = getelementptr inbounds [16 x %"class.WTF::AtomicString"], [16 x %"class.WTF::AtomicString"]* %2, i64 0, i64 6
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.198, i64 0, i64 0), i64 12) #22
  %17 = getelementptr inbounds [16 x %"class.WTF::AtomicString"], [16 x %"class.WTF::AtomicString"]* %2, i64 0, i64 7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %17, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.199, i64 0, i64 0), i64 15) #22
  %18 = getelementptr inbounds [16 x %"class.WTF::AtomicString"], [16 x %"class.WTF::AtomicString"]* %2, i64 0, i64 8
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %18, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.200, i64 0, i64 0), i64 11) #22
  %19 = getelementptr inbounds [16 x %"class.WTF::AtomicString"], [16 x %"class.WTF::AtomicString"]* %2, i64 0, i64 9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %19, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.201, i64 0, i64 0), i64 12) #22
  %20 = getelementptr inbounds [16 x %"class.WTF::AtomicString"], [16 x %"class.WTF::AtomicString"]* %2, i64 0, i64 10
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %20, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.202, i64 0, i64 0), i64 11) #22
  %21 = getelementptr inbounds [16 x %"class.WTF::AtomicString"], [16 x %"class.WTF::AtomicString"]* %2, i64 0, i64 11
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %21, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.203, i64 0, i64 0), i64 17) #22
  %22 = getelementptr inbounds [16 x %"class.WTF::AtomicString"], [16 x %"class.WTF::AtomicString"]* %2, i64 0, i64 12
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %22, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i64 0, i64 0), i64 9) #22
  %23 = getelementptr inbounds [16 x %"class.WTF::AtomicString"], [16 x %"class.WTF::AtomicString"]* %2, i64 0, i64 13
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %23, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.205, i64 0, i64 0), i64 9) #22
  %24 = getelementptr inbounds [16 x %"class.WTF::AtomicString"], [16 x %"class.WTF::AtomicString"]* %2, i64 0, i64 14
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %24, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.206, i64 0, i64 0), i64 13) #22
  %25 = getelementptr inbounds [16 x %"class.WTF::AtomicString"], [16 x %"class.WTF::AtomicString"]* %2, i64 0, i64 15
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %25, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.207, i64 0, i64 0), i64 20) #22
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #22
  call void @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.426"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties to %"class.WTF::HashTable.426"*), i32 16) #22
  %26 = getelementptr inbounds [16 x %"class.WTF::AtomicString"], [16 x %"class.WTF::AtomicString"]* %2, i64 0, i64 16
  %27 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.426"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties to %"class.WTF::HashTable.426"*), %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10) #22
  %28 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.426"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties to %"class.WTF::HashTable.426"*), %"class.WTF::AtomicString"* dereferenceable(8) %11, %"class.WTF::AtomicString"* dereferenceable(8) %11) #22
  %29 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.426"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties to %"class.WTF::HashTable.426"*), %"class.WTF::AtomicString"* dereferenceable(8) %12, %"class.WTF::AtomicString"* dereferenceable(8) %12) #22
  %30 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.426"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties to %"class.WTF::HashTable.426"*), %"class.WTF::AtomicString"* dereferenceable(8) %13, %"class.WTF::AtomicString"* dereferenceable(8) %13) #22
  %31 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.426"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties to %"class.WTF::HashTable.426"*), %"class.WTF::AtomicString"* dereferenceable(8) %14, %"class.WTF::AtomicString"* dereferenceable(8) %14) #22
  %32 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.426"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties to %"class.WTF::HashTable.426"*), %"class.WTF::AtomicString"* dereferenceable(8) %15, %"class.WTF::AtomicString"* dereferenceable(8) %15) #22
  %33 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.426"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties to %"class.WTF::HashTable.426"*), %"class.WTF::AtomicString"* dereferenceable(8) %16, %"class.WTF::AtomicString"* dereferenceable(8) %16) #22
  %34 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.426"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties to %"class.WTF::HashTable.426"*), %"class.WTF::AtomicString"* dereferenceable(8) %17, %"class.WTF::AtomicString"* dereferenceable(8) %17) #22
  %35 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.426"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties to %"class.WTF::HashTable.426"*), %"class.WTF::AtomicString"* dereferenceable(8) %18, %"class.WTF::AtomicString"* dereferenceable(8) %18) #22
  %36 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.426"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties to %"class.WTF::HashTable.426"*), %"class.WTF::AtomicString"* dereferenceable(8) %19, %"class.WTF::AtomicString"* dereferenceable(8) %19) #22
  %37 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.426"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties to %"class.WTF::HashTable.426"*), %"class.WTF::AtomicString"* dereferenceable(8) %20, %"class.WTF::AtomicString"* dereferenceable(8) %20) #22
  %38 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.426"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties to %"class.WTF::HashTable.426"*), %"class.WTF::AtomicString"* dereferenceable(8) %21, %"class.WTF::AtomicString"* dereferenceable(8) %21) #22
  %39 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.426"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties to %"class.WTF::HashTable.426"*), %"class.WTF::AtomicString"* dereferenceable(8) %22, %"class.WTF::AtomicString"* dereferenceable(8) %22) #22
  %40 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.426"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties to %"class.WTF::HashTable.426"*), %"class.WTF::AtomicString"* dereferenceable(8) %23, %"class.WTF::AtomicString"* dereferenceable(8) %23) #22
  %41 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.426"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties to %"class.WTF::HashTable.426"*), %"class.WTF::AtomicString"* dereferenceable(8) %24, %"class.WTF::AtomicString"* dereferenceable(8) %24) #22
  %42 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.426"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties to %"class.WTF::HashTable.426"*), %"class.WTF::AtomicString"* dereferenceable(8) %25, %"class.WTF::AtomicString"* dereferenceable(8) %25) #22
  br label %43

43:                                               ; preds = %62, %8
  %44 = phi %"class.WTF::AtomicString"* [ %26, %8 ], [ %45, %62 ]
  %45 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %44, i64 -1
  %46 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #22
  br label %62

62:                                               ; preds = %61, %58, %43
  %63 = icmp eq %"class.WTF::AtomicString"* %45, %10
  br i1 %63, label %64, label %43

64:                                               ; preds = %62
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %9) #22
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties) #22
  br label %65

65:                                               ; preds = %5, %64, %1
  %66 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties to %"class.WTF::AtomicString"**), align 8
  %67 = icmp eq %"class.WTF::AtomicString"* %66, null
  br i1 %67, label %116, label %68

68:                                               ; preds = %65
  %69 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink24DoesUndoRolePresentationERKN3WTF12AtomicStringEE24s_aria_global_properties, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %70 = add i32 %69, -1
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = lshr i32 %75, 8
  %77 = and i32 %76, %70
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %66, i64 %78
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %79, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %116, label %83

83:                                               ; preds = %68
  %84 = xor i32 %76, -1
  %85 = lshr i32 %75, 31
  %86 = add nsw i32 %85, %84
  %87 = shl i32 %86, 12
  %88 = xor i32 %87, %86
  %89 = lshr i32 %88, 7
  %90 = xor i32 %89, %88
  %91 = shl i32 %90, 2
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 20
  %94 = xor i32 %93, %92
  %95 = or i32 %94, 1
  %96 = zext i32 %95 to i64
  br label %97

97:                                               ; preds = %107, %83
  %98 = phi %"class.WTF::StringImpl"* [ %81, %83 ], [ %114, %107 ]
  %99 = phi %"class.WTF::AtomicString"* [ %79, %83 ], [ %112, %107 ]
  %100 = phi i64 [ %78, %83 ], [ %111, %107 ]
  %101 = phi i64 [ 0, %83 ], [ %109, %107 ]
  %102 = bitcast %"class.WTF::AtomicString"* %99 to i8**
  %103 = load i8*, i8** %102, align 8
  %104 = icmp ne i8* %103, inttoptr (i64 -1 to i8*)
  %105 = icmp eq %"class.WTF::StringImpl"* %98, %73
  %106 = and i1 %105, %104
  br i1 %106, label %116, label %107

107:                                              ; preds = %97
  %108 = icmp eq i64 %101, 0
  %109 = select i1 %108, i64 %96, i64 %101
  %110 = add i64 %109, %100
  %111 = and i64 %110, %71
  %112 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %66, i64 %111
  %113 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %112, i64 0, i32 0, i32 0, i32 0
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %116, label %97

116:                                              ; preds = %97, %107, %65, %68
  %117 = phi %"class.WTF::AtomicString"* [ null, %65 ], [ null, %68 ], [ null, %107 ], [ %99, %97 ]
  %118 = icmp ne %"class.WTF::AtomicString"* %117, null
  ret i1 %118
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #11

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8AXObject13IndexInParentEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject26ParentObjectIncludedInTreeEv(%"class.blink::AXObject"* %0)
  %3 = icmp eq %"class.blink::AXObject"* %2, null
  br i1 %3, label %37, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %2, i64 0, i32 4
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.blink::AXObject"* %2 to void (%"class.blink::AXObject"*)***
  %10 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %10, i64 160
  %12 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %11, align 8
  tail call void %12(%"class.blink::AXObject"* nonnull %2) #22
  br label %13

13:                                               ; preds = %4, %8
  %14 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %15, i64 %18
  %20 = icmp eq i32 %17, 0
  br i1 %20, label %36, label %21

21:                                               ; preds = %13, %26
  %22 = phi %"class.blink::Member.3082"* [ %27, %26 ], [ %15, %13 ]
  %23 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %23, align 8
  %25 = icmp eq %"class.blink::AXObject"* %24, %0
  br i1 %25, label %29, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %22, i64 1
  %28 = icmp ult %"class.blink::Member.3082"* %27, %19
  br i1 %28, label %21, label %36

29:                                               ; preds = %21
  %30 = ptrtoint %"class.blink::Member.3082"* %22 to i64
  %31 = ptrtoint %"class.blink::Member.3082"* %15 to i64
  %32 = sub i64 %30, %31
  %33 = lshr exact i64 %32, 3
  %34 = trunc i64 %33 to i32
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %36, label %37

36:                                               ; preds = %26, %13, %29
  br label %37

37:                                               ; preds = %36, %29, %1
  %38 = phi i32 [ 0, %1 ], [ 0, %36 ], [ %34, %29 ]
  ret i32 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject26ParentObjectIncludedInTreeEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2, align 8
  %4 = icmp eq %"class.blink::AXObjectCacheImpl"* %3, null
  br i1 %4, label %95, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %6, align 8
  %8 = icmp eq %"class.blink::AXObject"* %7, null
  br i1 %8, label %9, label %16

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %11 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %11, i64 124
  %13 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %12, align 8
  %14 = tail call %"class.blink::Node"* %13(%"class.blink::AXObject"* %0) #22
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %30, label %20

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %7, i64 0, i32 14, i32 0, i32 0
  %18 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %17, align 8
  %19 = icmp eq %"class.blink::AXObjectCacheImpl"* %18, null
  br i1 %19, label %30, label %40

20:                                               ; preds = %9
  %21 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %10, align 8
  %22 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %21, i64 124
  %23 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %22, align 8
  %24 = tail call %"class.blink::Node"* %23(%"class.blink::AXObject"* %0) #22
  %25 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2, align 8
  %26 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %25, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.blink::Document"*, %"class.blink::Document"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %27, i64 0, i32 0, i32 0
  %29 = icmp eq %"class.blink::Node"* %24, %28
  br i1 %29, label %40, label %30

30:                                               ; preds = %20, %16, %9
  %31 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* %0) #22
  %32 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2
  %33 = ptrtoint %"class.blink::AXObject"* %31 to i64
  %34 = bitcast %"class.blink::Member.3082"* %32 to i64*
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %30
  %38 = bitcast %"class.blink::AXObject"* %31 to i8*
  %39 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %38) #22
  br label %40

40:                                               ; preds = %16, %20, %30, %37
  %41 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %6, align 8
  %42 = icmp eq %"class.blink::AXObject"* %41, null
  br i1 %42, label %95, label %43

43:                                               ; preds = %40, %92
  %44 = phi %"class.blink::AXObject"* [ %93, %92 ], [ %41, %40 ]
  %45 = bitcast %"class.blink::AXObject"* %44 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* nonnull %44, i1 zeroext true) #22
  %46 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %44, i64 0, i32 9
  %47 = load i8, i8* %46, align 8
  %48 = and i8 %47, 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %95, label %50

50:                                               ; preds = %43
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* nonnull %44, i1 zeroext true) #22
  %51 = load i8, i8* %46, align 8
  %52 = and i8 %51, 2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %95

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %44, i64 0, i32 14, i32 0, i32 0
  %56 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %55, align 8
  %57 = icmp eq %"class.blink::AXObjectCacheImpl"* %56, null
  br i1 %57, label %95, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %44, i64 0, i32 2, i32 0, i32 0
  %60 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %59, align 8
  %61 = icmp eq %"class.blink::AXObject"* %60, null
  br i1 %61, label %62, label %68

62:                                               ; preds = %58
  %63 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %45, align 8
  %64 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %63, i64 124
  %65 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %64, align 8
  %66 = tail call %"class.blink::Node"* %65(%"class.blink::AXObject"* nonnull %44) #22
  %67 = icmp eq %"class.blink::Node"* %66, null
  br i1 %67, label %82, label %72

68:                                               ; preds = %58
  %69 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %60, i64 0, i32 14, i32 0, i32 0
  %70 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %69, align 8
  %71 = icmp eq %"class.blink::AXObjectCacheImpl"* %70, null
  br i1 %71, label %82, label %92

72:                                               ; preds = %62
  %73 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %45, align 8
  %74 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %73, i64 124
  %75 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %74, align 8
  %76 = tail call %"class.blink::Node"* %75(%"class.blink::AXObject"* nonnull %44) #22
  %77 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %55, align 8
  %78 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %77, i64 0, i32 2, i32 0, i32 0
  %79 = load %"class.blink::Document"*, %"class.blink::Document"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %79, i64 0, i32 0, i32 0
  %81 = icmp eq %"class.blink::Node"* %76, %80
  br i1 %81, label %92, label %82

82:                                               ; preds = %72, %68, %62
  %83 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* nonnull %44) #22
  %84 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %44, i64 0, i32 2
  %85 = ptrtoint %"class.blink::AXObject"* %83 to i64
  %86 = bitcast %"class.blink::Member.3082"* %84 to i64*
  store atomic i64 %85, i64* %86 monotonic, align 8
  %87 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %82
  %90 = bitcast %"class.blink::AXObject"* %83 to i8*
  %91 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %90) #22
  br label %92

92:                                               ; preds = %68, %72, %82, %89
  %93 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %59, align 8
  %94 = icmp eq %"class.blink::AXObject"* %93, null
  br i1 %94, label %95, label %43

95:                                               ; preds = %54, %92, %43, %50, %1, %40
  %96 = phi %"class.blink::AXObject"* [ null, %40 ], [ null, %1 ], [ null, %54 ], [ %44, %50 ], [ %44, %43 ], [ null, %92 ]
  ret %"class.blink::AXObject"* %96
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.blink::HeapVector.3084"* @_ZN5blink8AXObject24ChildrenIncludingIgnoredEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %7 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %7, i64 160
  %9 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %8, align 8
  tail call void %9(%"class.blink::AXObject"* %0) #22
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 3
  ret %"class.blink::HeapVector.3084"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject22IsActiveLiveRegionRootEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)***
  %3 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)** %3, i64 115
  %5 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %5(%"class.blink::AXObject"* %0) #22
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %86, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %86, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %16 = bitcast %"class.WTF::StringImpl"* %15 to i8*
  %17 = icmp eq i32 %12, 3
  br i1 %17, label %18, label %83

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %42, label %23

23:                                               ; preds = %18
  %24 = load i8, i8* %16, align 1
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %30 = sext i8 %29 to i32
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %83

32:                                               ; preds = %23
  %33 = getelementptr inbounds i8, i8* %16, i64 1
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i64
  %36 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 102), align 2
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %38, %40
  br i1 %41, label %76, label %83

42:                                               ; preds = %18
  %43 = bitcast %"class.WTF::StringImpl"* %15 to i16*
  %44 = load i16, i16* %43, align 2
  %45 = add i16 %44, -65
  %46 = icmp ult i16 %45, 26
  %47 = zext i1 %46 to i16
  %48 = shl nuw nsw i16 %47, 5
  %49 = or i16 %48, %44
  %50 = zext i16 %49 to i32
  %51 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %52 = sext i8 %51 to i32
  %53 = icmp eq i32 %50, %52
  br i1 %53, label %54, label %83

54:                                               ; preds = %42
  %55 = getelementptr inbounds i16, i16* %43, i64 1
  %56 = load i16, i16* %55, align 2
  %57 = add i16 %56, -65
  %58 = icmp ult i16 %57, 26
  %59 = zext i1 %58 to i16
  %60 = shl nuw nsw i16 %59, 5
  %61 = or i16 %60, %56
  %62 = zext i16 %61 to i32
  %63 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 102), align 2
  %64 = sext i8 %63 to i32
  %65 = icmp eq i32 %62, %64
  br i1 %65, label %66, label %83

66:                                               ; preds = %54
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1, i32 1
  %68 = bitcast i32* %67 to i16*
  %69 = load i16, i16* %68, align 2
  %70 = add i16 %69, -65
  %71 = icmp ult i16 %70, 26
  %72 = zext i1 %71 to i16
  %73 = shl nuw nsw i16 %72, 5
  %74 = or i16 %73, %69
  %75 = icmp eq i16 %74, %61
  br label %83

76:                                               ; preds = %32
  %77 = getelementptr inbounds i8, i8* %16, i64 2
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i64
  %80 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, %37
  br label %83

83:                                               ; preds = %14, %23, %32, %42, %54, %76, %66
  %84 = phi i1 [ %75, %66 ], [ false, %14 ], [ false, %42 ], [ false, %54 ], [ false, %23 ], [ false, %32 ], [ %82, %76 ]
  %85 = xor i1 %84, true
  br label %86

86:                                               ; preds = %1, %83, %10
  %87 = phi i1 [ false, %10 ], [ %85, %83 ], [ false, %1 ]
  ret i1 %87
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject16LiveRegionStatusEv(%"class.blink::AXObject"*) unnamed_addr #2 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink8AXObject16LiveRegionStatusEvE30s_live_region_status_assertive to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !23

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink8AXObject16LiveRegionStatusEvE30s_live_region_status_assertive) #22
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton.3764"* @_ZZNK5blink8AXObject16LiveRegionStatusEvE30s_live_region_status_assertive to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i64 0, i64 0), i64 9) #22
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink8AXObject16LiveRegionStatusEvE30s_live_region_status_assertive) #22
  br label %8

8:                                                ; preds = %4, %7, %1
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink8AXObject16LiveRegionStatusEvE27s_live_region_status_polite to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %15, !prof !23

11:                                               ; preds = %8
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink8AXObject16LiveRegionStatusEvE27s_live_region_status_polite) #22
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton.3764"* @_ZZNK5blink8AXObject16LiveRegionStatusEvE27s_live_region_status_polite to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.209, i64 0, i64 0), i64 6) #22
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink8AXObject16LiveRegionStatusEvE27s_live_region_status_polite) #22
  br label %15

15:                                               ; preds = %11, %14, %8
  %16 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink8AXObject16LiveRegionStatusEvE24s_live_region_status_off to i8*) acquire, align 8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %22, !prof !23

18:                                               ; preds = %15
  %19 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink8AXObject16LiveRegionStatusEvE24s_live_region_status_off) #22
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %18
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton.3764"* @_ZZNK5blink8AXObject16LiveRegionStatusEvE24s_live_region_status_off to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i64 3) #22
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink8AXObject16LiveRegionStatusEvE24s_live_region_status_off) #22
  br label %22

22:                                               ; preds = %18, %21, %15
  %23 = bitcast %"class.blink::AXObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)***
  %24 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*** %23, align 8
  %25 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %24, i64 5
  %26 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %25, align 8
  %27 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %26(%"class.blink::AXObject"* %0, i32 8) #22
  %28 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %40

35:                                               ; preds = %22, %31
  %36 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  switch i32 %37, label %40 [
    i32 2, label %41
    i32 118, label %38
    i32 160, label %38
    i32 174, label %39
    i32 121, label %39
  ]

38:                                               ; preds = %35, %35
  br label %41

39:                                               ; preds = %35, %35
  br label %41

40:                                               ; preds = %35, %31
  br label %41

41:                                               ; preds = %35, %40, %39, %38
  %42 = phi %"class.WTF::AtomicString"* [ %27, %40 ], [ bitcast (%"class.WTF::StaticSingleton.3764"* @_ZZNK5blink8AXObject16LiveRegionStatusEvE24s_live_region_status_off to %"class.WTF::AtomicString"*), %39 ], [ bitcast (%"class.WTF::StaticSingleton.3764"* @_ZZNK5blink8AXObject16LiveRegionStatusEvE27s_live_region_status_polite to %"class.WTF::AtomicString"*), %38 ], [ bitcast (%"class.WTF::StaticSingleton.3764"* @_ZZNK5blink8AXObject16LiveRegionStatusEvE30s_live_region_status_assertive to %"class.WTF::AtomicString"*), %35 ]
  ret %"class.WTF::AtomicString"* %42
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject18LiveRegionRelevantEv(%"class.blink::AXObject"*) unnamed_addr #2 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink8AXObject18LiveRegionRelevantEvE30s_default_live_region_relevant to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !23

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink8AXObject18LiveRegionRelevantEvE30s_default_live_region_relevant) #22
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton.3764"* @_ZZNK5blink8AXObject18LiveRegionRelevantEvE30s_default_live_region_relevant to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.210, i64 0, i64 0), i64 14) #22
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink8AXObject18LiveRegionRelevantEvE30s_default_live_region_relevant) #22
  br label %8

8:                                                ; preds = %4, %7, %1
  %9 = bitcast %"class.blink::AXObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)***
  %10 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %10, i64 5
  %12 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %11, align 8
  %13 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %12(%"class.blink::AXObject"* %0, i32 12) #22
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %8, %17
  br label %22

22:                                               ; preds = %17, %21
  %23 = phi %"class.WTF::AtomicString"* [ bitcast (%"class.WTF::StaticSingleton.3764"* @_ZZNK5blink8AXObject18LiveRegionRelevantEvE30s_default_live_region_relevant to %"class.WTF::AtomicString"*), %21 ], [ %13, %17 ]
  ret %"class.WTF::AtomicString"* %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8AXObject11RestrictionEv(%"class.blink::AXObject"*) unnamed_addr #2 align 2 {
  %2 = alloca i8, align 1
  %3 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22
  store i8 -86, i8* %2, align 1
  %4 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*, i32, i8*)***
  %5 = load i1 (%"class.blink::AXObject"*, i32, i8*)**, i1 (%"class.blink::AXObject"*, i32, i8*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %5, i64 6
  %7 = load i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %6, align 8
  %8 = call zeroext i1 %7(%"class.blink::AXObject"* %0, i32 2, i8* nonnull dereferenceable(1) %2) #22
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = load i8, i8* %2, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %19, label %31

12:                                               ; preds = %1
  %13 = call zeroext i1 @_ZNK5blink8AXObject20CanSetFocusAttributeEv(%"class.blink::AXObject"* %0)
  br i1 %13, label %14, label %19

14:                                               ; preds = %12
  call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %15 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %16 = load i8, i8* %15, align 8
  %17 = and i8 %16, 16
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14, %9, %12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22
  store i8 -86, i8* %3, align 1
  %20 = call zeroext i1 @_ZNK5blink8AXObject20SupportsARIAReadOnlyEv(%"class.blink::AXObject"* %0)
  br i1 %20, label %21, label %29

21:                                               ; preds = %19
  %22 = load i1 (%"class.blink::AXObject"*, i32, i8*)**, i1 (%"class.blink::AXObject"*, i32, i8*)*** %4, align 8
  %23 = getelementptr inbounds i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %22, i64 6
  %24 = load i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %23, align 8
  %25 = call zeroext i1 %24(%"class.blink::AXObject"* %0, i32 8, i8* nonnull dereferenceable(1) %3) #22
  br i1 %25, label %26, label %29

26:                                               ; preds = %21
  %27 = load i8, i8* %3, align 1, !range !2
  %28 = zext i8 %27 to i32
  br label %29

29:                                               ; preds = %19, %21, %26
  %30 = phi i32 [ %28, %26 ], [ 0, %21 ], [ 0, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22
  br label %31

31:                                               ; preds = %14, %9, %29
  %32 = phi i32 [ %30, %29 ], [ 2, %9 ], [ 2, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject20SupportsARIAReadOnlyEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui19IsReadOnlySupportedEN2ax5mojom4RoleE(i32 %3) #22
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4
  %7 = tail call zeroext i1 @_ZN2ui19IsCellOrTableHeaderEN2ax5mojom4RoleE(i32 %6) #22
  br i1 %7, label %8, label %30

8:                                                ; preds = %5
  %9 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* %0) #22, !noalias !33
  %10 = icmp eq %"class.blink::AXObject"* %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %8, %28
  %12 = phi %"class.blink::AXObject"* [ %22, %28 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %12, i64 0, i32 5
  %14 = load i32, i32* %13, align 4
  switch i32 %14, label %15 [
    i32 180, label %30
    i32 93, label %30
  ]

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %12, i64 0, i32 14, i32 0, i32 0
  %17 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %16, align 8
  %18 = icmp eq %"class.blink::AXObjectCacheImpl"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* nonnull %12) #22
  br label %21

21:                                               ; preds = %19, %15
  %22 = phi %"class.blink::AXObject"* [ %20, %19 ], [ null, %15 ]
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.blink::AXObject"* %22 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #22
  br label %28

28:                                               ; preds = %25, %21
  %29 = icmp eq %"class.blink::AXObject"* %22, null
  br i1 %29, label %30, label %11

30:                                               ; preds = %28, %11, %11, %8, %5, %1
  %31 = phi i1 [ true, %1 ], [ false, %5 ], [ false, %8 ], [ true, %11 ], [ true, %11 ], [ false, %28 ]
  ret i1 %31
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink8AXObject17AriaRoleAttributeEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i32 182
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8AXObject11RawAriaRoleEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)***
  %3 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*** %2, align 8
  %4 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %3, i64 5
  %5 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %4, align 8
  %6 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %5(%"class.blink::AXObject"* %0, i32 13) #22
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0
  %16 = tail call i32 @_ZN5blink8AXObject24AriaRoleStringToRoleEnumERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %15)
  br label %17

17:                                               ; preds = %1, %10, %14
  %18 = phi i32 [ %16, %14 ], [ 182, %10 ], [ 182, %1 ]
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink8AXObject24AriaRoleStringToRoleEnumERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::Vector.630", align 8
  %8 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink8AXObject24AriaRoleStringToRoleEnumERKN3WTF6StringEE8role_map to i8*) acquire, align 8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %168, !prof !23

10:                                               ; preds = %1
  %11 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink8AXObject24AriaRoleStringToRoleEnumERKN3WTF6StringEE8role_map) #22
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %168, label %13

13:                                               ; preds = %10
  %14 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([213 x i8], [213 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapINS_6StringEN2ax5mojom4RoleENS_15CaseFoldingHashENS_10HashTraitsIS2_EEN5blink12_GLOBAL__N_114RoleHashTraitsENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #22
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false) #22
  %15 = bitcast %"class.WTF::String"* %6 to i8*
  %16 = bitcast i8* %14 to %"class.WTF::HashTable.3826"*
  %17 = bitcast i8* %14 to %"struct.WTF::KeyValuePair.3829"**
  %18 = getelementptr inbounds i8, i8* %14, i64 8
  %19 = bitcast i8* %18 to i32*
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringView"* %4 to i8*
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %24 = bitcast %"class.WTF::StringView"* %5 to i8*
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %27 = bitcast i8** %26 to %"class.WTF::StringImpl"**
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %29 = bitcast %"class.WTF::StringView"* %4 to i8**
  %30 = getelementptr inbounds i8, i8* %14, i64 16
  %31 = bitcast i8* %30 to i32*
  %32 = bitcast %"class.WTF::String"* %6 to i64*
  %33 = getelementptr inbounds i8, i8* %14, i64 12
  %34 = bitcast i8* %33 to i32*
  br label %35

35:                                               ; preds = %164, %13
  %36 = phi %"struct.blink::(anonymous namespace)::RoleEntry"* [ getelementptr inbounds ([127 x %"struct.blink::(anonymous namespace)::RoleEntry"], [127 x %"struct.blink::(anonymous namespace)::RoleEntry"]* @_ZN5blink12_GLOBAL__N_110kAriaRolesE, i64 0, i64 0), %13 ], [ %165, %164 ]
  %37 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RoleEntry", %"struct.blink::(anonymous namespace)::RoleEntry"* %36, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RoleEntry", %"struct.blink::(anonymous namespace)::RoleEntry"* %36, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #22
  %41 = icmp eq i8* %38, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %35
  %43 = call i64 @strlen(i8* nonnull %38) #24
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i64 [ %43, %42 ], [ 0, %35 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* %38, i64 %45) #22
  %46 = load %"struct.WTF::KeyValuePair.3829"*, %"struct.WTF::KeyValuePair.3829"** %17, align 8
  %47 = icmp eq %"struct.WTF::KeyValuePair.3829"* %46, null
  br i1 %47, label %48, label %51

48:                                               ; preds = %44
  %49 = call fastcc %"struct.WTF::KeyValuePair.3829"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N2ax5mojom4RoleEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EEN5blink12_GLOBAL__N_114RoleHashTraitsEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.3826"* %16, %"struct.WTF::KeyValuePair.3829"* null) #22
  %50 = load %"struct.WTF::KeyValuePair.3829"*, %"struct.WTF::KeyValuePair.3829"** %17, align 8
  br label %51

51:                                               ; preds = %48, %44
  %52 = phi %"struct.WTF::KeyValuePair.3829"* [ %46, %44 ], [ %50, %48 ]
  %53 = load i32, i32* %19, align 8
  %54 = add i32 %53, -1
  %55 = zext i32 %54 to i64
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %57 = call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %56) #22
  %58 = and i32 %57, %54
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.3829", %"struct.WTF::KeyValuePair.3829"* %52, i64 %59
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.3829", %"struct.WTF::KeyValuePair.3829"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %115, label %64

64:                                               ; preds = %51
  %65 = xor i32 %57, -1
  %66 = lshr i32 %57, 23
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 12
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 7
  %71 = xor i32 %70, %69
  %72 = shl i32 %71, 2
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 20
  %75 = xor i32 %74, %73
  %76 = or i32 %75, 1
  %77 = zext i32 %76 to i64
  br label %78

78:                                               ; preds = %96, %64
  %79 = phi %"struct.WTF::KeyValuePair.3829"* [ %60, %64 ], [ %102, %96 ]
  %80 = phi %"struct.WTF::KeyValuePair.3829"* [ null, %64 ], [ %97, %96 ]
  %81 = phi i64 [ %59, %64 ], [ %101, %96 ]
  %82 = phi i64 [ 0, %64 ], [ %99, %96 ]
  %83 = bitcast %"struct.WTF::KeyValuePair.3829"* %79 to i8**
  %84 = load i8*, i8** %83, align 8
  %85 = icmp eq i8* %84, inttoptr (i64 -1 to i8*)
  br i1 %85, label %96, label %86

86:                                               ; preds = %78
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #22
  store i8* %84, i8** %29, align 8
  %88 = getelementptr inbounds i8, i8* %84, i64 12
  store i8* %88, i8** %22, align 8
  %89 = getelementptr inbounds i8, i8* %84, i64 4
  %90 = bitcast i8* %89 to i32*
  %91 = load i32, i32* %90, align 4
  store i32 %91, i32* %23, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #22
  store %"class.WTF::StringImpl"* %87, %"class.WTF::StringImpl"** %25, align 8
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 1
  store %"class.WTF::StringImpl"* %92, %"class.WTF::StringImpl"** %27, align 8
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 1
  %94 = load i32, i32* %93, align 4
  store i32 %94, i32* %28, align 8
  %95 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #22
  br i1 %95, label %146, label %96

96:                                               ; preds = %86, %78
  %97 = phi %"struct.WTF::KeyValuePair.3829"* [ %80, %86 ], [ %79, %78 ]
  %98 = icmp eq i64 %82, 0
  %99 = select i1 %98, i64 %77, i64 %82
  %100 = add i64 %99, %81
  %101 = and i64 %100, %55
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.3829", %"struct.WTF::KeyValuePair.3829"* %52, i64 %101
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.3829", %"struct.WTF::KeyValuePair.3829"* %102, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %106, label %78

106:                                              ; preds = %96
  %107 = icmp eq %"struct.WTF::KeyValuePair.3829"* %97, null
  br i1 %107, label %115, label %108

108:                                              ; preds = %106
  %109 = bitcast %"struct.WTF::KeyValuePair.3829"* %97 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 0, i64 16, i1 false) #22
  %110 = load i32, i32* %31, align 8
  %111 = add i32 %110, 2147483647
  %112 = and i32 %111, 2147483647
  %113 = and i32 %110, -2147483648
  %114 = or i32 %112, %113
  store i32 %114, i32* %31, align 8
  br label %115

115:                                              ; preds = %108, %106, %51
  %116 = phi %"struct.WTF::KeyValuePair.3829"* [ %97, %108 ], [ %102, %106 ], [ %60, %51 ]
  %117 = load i64, i64* %32, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %20, align 8
  %118 = bitcast %"struct.WTF::KeyValuePair.3829"* %116 to i64*
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.3829", %"struct.WTF::KeyValuePair.3829"* %116, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  store i64 %117, i64* %118, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %135, label %122

122:                                              ; preds = %115
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  br i1 %126, label %129, label %131

129:                                              ; preds = %122
  %130 = add i32 %128, -1
  store i32 %130, i32* %127, align 4
  br label %131

131:                                              ; preds = %129, %122
  %132 = phi i32 [ %130, %129 ], [ %128, %122 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %120) #22
  br label %135

135:                                              ; preds = %134, %131, %115
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair.3829", %"struct.WTF::KeyValuePair.3829"* %116, i64 0, i32 1
  store i32 %40, i32* %136, align 4
  %137 = load i32, i32* %34, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %34, align 4
  %139 = load i32, i32* %31, align 8
  %140 = add i32 %139, %138
  %141 = shl i32 %140, 1
  %142 = load i32, i32* %19, align 8
  %143 = icmp ult i32 %141, %142
  br i1 %143, label %148, label %144

144:                                              ; preds = %135
  %145 = call fastcc %"struct.WTF::KeyValuePair.3829"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N2ax5mojom4RoleEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EEN5blink12_GLOBAL__N_114RoleHashTraitsEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.3826"* %16, %"struct.WTF::KeyValuePair.3829"* %116) #22
  br label %148

146:                                              ; preds = %86
  %147 = getelementptr inbounds %"struct.WTF::KeyValuePair.3829", %"struct.WTF::KeyValuePair.3829"* %79, i64 0, i32 1
  store i32 %40, i32* %147, align 4
  br label %148

148:                                              ; preds = %146, %144, %135
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #22
  br label %164

164:                                              ; preds = %163, %160, %148
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #22
  %165 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RoleEntry", %"struct.blink::(anonymous namespace)::RoleEntry"* %36, i64 1
  %166 = icmp eq %"struct.blink::(anonymous namespace)::RoleEntry"* %165, getelementptr inbounds ([127 x %"struct.blink::(anonymous namespace)::RoleEntry"], [127 x %"struct.blink::(anonymous namespace)::RoleEntry"]* @_ZN5blink12_GLOBAL__N_110kAriaRolesE, i64 1, i64 0)
  br i1 %166, label %167, label %35

167:                                              ; preds = %164
  store i8* %14, i8** bitcast (%"class.WTF::HashMap.3825"** @_ZZN5blink8AXObject24AriaRoleStringToRoleEnumERKN3WTF6StringEE8role_map to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink8AXObject24AriaRoleStringToRoleEnumERKN3WTF6StringEE8role_map) #22
  br label %168

168:                                              ; preds = %10, %167, %1
  %169 = bitcast %"class.WTF::Vector.630"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %169) #22
  %170 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %7, i64 0, i32 0, i32 0, i32 0
  %171 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %7, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %169, i8 0, i64 16, i1 false) #22
  call void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* %0, i16 zeroext 32, i1 zeroext false, %"class.WTF::Vector.630"* nonnull dereferenceable(16) %7) #22
  %172 = load %"class.WTF::String"*, %"class.WTF::String"** %170, align 8
  %173 = load i32, i32* %171, align 4
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %172, i64 %174
  %176 = icmp eq i32 %173, 0
  br i1 %176, label %259, label %177

177:                                              ; preds = %168
  %178 = bitcast %"class.WTF::StringView"* %2 to i8*
  %179 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %180 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %181 = bitcast %"class.WTF::StringView"* %3 to i8*
  %182 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %183 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %184 = bitcast i8** %183 to %"class.WTF::StringImpl"**
  %185 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %186 = bitcast %"class.WTF::StringView"* %2 to i8**
  br label %187

187:                                              ; preds = %177, %253
  %188 = phi %"class.WTF::String"* [ %172, %177 ], [ %254, %253 ]
  %189 = load %"class.WTF::HashMap.3825"*, %"class.WTF::HashMap.3825"** @_ZZN5blink8AXObject24AriaRoleStringToRoleEnumERKN3WTF6StringEE8role_map, align 8
  %190 = getelementptr inbounds %"class.WTF::HashMap.3825", %"class.WTF::HashMap.3825"* %189, i64 0, i32 0, i32 0
  %191 = load %"struct.WTF::KeyValuePair.3829"*, %"struct.WTF::KeyValuePair.3829"** %190, align 8
  %192 = icmp eq %"struct.WTF::KeyValuePair.3829"* %191, null
  br i1 %192, label %253, label %193

193:                                              ; preds = %187
  %194 = getelementptr inbounds %"class.WTF::HashMap.3825", %"class.WTF::HashMap.3825"* %189, i64 0, i32 0, i32 1
  %195 = load i32, i32* %194, align 8
  %196 = add i32 %195, -1
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 0, i32 0, i32 0
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  %200 = call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %199) #22
  %201 = and i32 %200, %196
  %202 = zext i32 %201 to i64
  %203 = getelementptr inbounds %"struct.WTF::KeyValuePair.3829", %"struct.WTF::KeyValuePair.3829"* %191, i64 %202
  %204 = getelementptr inbounds %"struct.WTF::KeyValuePair.3829", %"struct.WTF::KeyValuePair.3829"* %203, i64 0, i32 0, i32 0, i32 0
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %206, label %253, label %207

207:                                              ; preds = %193
  %208 = xor i32 %200, -1
  %209 = lshr i32 %200, 23
  %210 = add i32 %209, %208
  %211 = shl i32 %210, 12
  %212 = xor i32 %211, %210
  %213 = lshr i32 %212, 7
  %214 = xor i32 %213, %212
  %215 = shl i32 %214, 2
  %216 = xor i32 %215, %214
  %217 = lshr i32 %216, 20
  %218 = xor i32 %217, %216
  %219 = or i32 %218, 1
  %220 = zext i32 %219 to i64
  br label %221

221:                                              ; preds = %238, %207
  %222 = phi %"struct.WTF::KeyValuePair.3829"* [ %203, %207 ], [ %243, %238 ]
  %223 = phi i64 [ %202, %207 ], [ %242, %238 ]
  %224 = phi i64 [ 0, %207 ], [ %240, %238 ]
  %225 = bitcast %"struct.WTF::KeyValuePair.3829"* %222 to i8**
  %226 = load i8*, i8** %225, align 8
  %227 = icmp eq i8* %226, inttoptr (i64 -1 to i8*)
  br i1 %227, label %238, label %228

228:                                              ; preds = %221
  %229 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %178) #22
  store i8* %226, i8** %186, align 8
  %230 = getelementptr inbounds i8, i8* %226, i64 12
  store i8* %230, i8** %179, align 8
  %231 = getelementptr inbounds i8, i8* %226, i64 4
  %232 = bitcast i8* %231 to i32*
  %233 = load i32, i32* %232, align 4
  store i32 %233, i32* %180, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %181) #22
  store %"class.WTF::StringImpl"* %229, %"class.WTF::StringImpl"** %182, align 8
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 1
  store %"class.WTF::StringImpl"* %234, %"class.WTF::StringImpl"** %184, align 8
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 1
  %236 = load i32, i32* %235, align 4
  store i32 %236, i32* %185, align 8
  %237 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %181) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %178) #22
  br i1 %237, label %247, label %238

238:                                              ; preds = %228, %221
  %239 = icmp eq i64 %224, 0
  %240 = select i1 %239, i64 %220, i64 %224
  %241 = add i64 %240, %223
  %242 = and i64 %241, %197
  %243 = getelementptr inbounds %"struct.WTF::KeyValuePair.3829", %"struct.WTF::KeyValuePair.3829"* %191, i64 %242
  %244 = getelementptr inbounds %"struct.WTF::KeyValuePair.3829", %"struct.WTF::KeyValuePair.3829"* %243, i64 0, i32 0, i32 0, i32 0
  %245 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %244, align 8
  %246 = icmp eq %"class.WTF::StringImpl"* %245, null
  br i1 %246, label %253, label %221

247:                                              ; preds = %228
  %248 = icmp eq %"struct.WTF::KeyValuePair.3829"* %222, null
  br i1 %248, label %253, label %249

249:                                              ; preds = %247
  %250 = getelementptr inbounds %"struct.WTF::KeyValuePair.3829", %"struct.WTF::KeyValuePair.3829"* %222, i64 0, i32 1
  %251 = load i32, i32* %250, align 4
  %252 = icmp eq i32 %251, 182
  br i1 %252, label %253, label %256

253:                                              ; preds = %238, %193, %187, %247, %249
  %254 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 1
  %255 = icmp eq %"class.WTF::String"* %254, %175
  br i1 %255, label %256, label %187

256:                                              ; preds = %253, %249
  %257 = phi i32 [ %251, %249 ], [ 182, %253 ]
  %258 = load %"class.WTF::String"*, %"class.WTF::String"** %170, align 8
  br label %259

259:                                              ; preds = %256, %168
  %260 = phi %"class.WTF::String"* [ %172, %168 ], [ %258, %256 ]
  %261 = phi i32 [ 182, %168 ], [ %257, %256 ]
  %262 = icmp eq %"class.WTF::String"* %260, null
  br i1 %262, label %296, label %263, !prof !19

263:                                              ; preds = %259
  %264 = bitcast %"class.WTF::String"* %260 to i8*
  %265 = load i32, i32* %171, align 4
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %294, label %267, !prof !3

267:                                              ; preds = %263
  %268 = zext i32 %265 to i64
  %269 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %260, i64 %268
  br label %270

270:                                              ; preds = %288, %267
  %271 = phi %"class.WTF::String"* [ %289, %288 ], [ %260, %267 ]
  %272 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %271, i64 0, i32 0, i32 0
  %273 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %272, align 8
  %274 = icmp eq %"class.WTF::StringImpl"* %273, null
  br i1 %274, label %288, label %275

275:                                              ; preds = %270
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %277 = load atomic i32, i32* %276 monotonic, align 4
  %278 = and i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 0
  %281 = load i32, i32* %280, align 4
  br i1 %279, label %282, label %284

282:                                              ; preds = %275
  %283 = add i32 %281, -1
  store i32 %283, i32* %280, align 4
  br label %284

284:                                              ; preds = %282, %275
  %285 = phi i32 [ %283, %282 ], [ %281, %275 ]
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %288

287:                                              ; preds = %284
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %273) #22
  br label %288

288:                                              ; preds = %287, %284, %270
  %289 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %271, i64 1
  %290 = icmp eq %"class.WTF::String"* %289, %269
  br i1 %290, label %291, label %270

291:                                              ; preds = %288
  store i32 0, i32* %171, align 4
  %292 = bitcast %"class.WTF::Vector.630"* %7 to i8**
  %293 = load i8*, i8** %292, align 8
  br label %294

294:                                              ; preds = %291, %263
  %295 = phi i8* [ %293, %291 ], [ %264, %263 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %295) #22
  store %"class.WTF::String"* null, %"class.WTF::String"** %170, align 8
  br label %296

296:                                              ; preds = %259, %294
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %169) #22
  ret i32 %261
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8AXObject26DetermineAriaRoleAttributeEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = bitcast %"class.blink::AXObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)***
  %4 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %4, i64 5
  %6 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %5, align 8
  %7 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %6(%"class.blink::AXObject"* %0, i32 13) #22
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %49, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0
  %17 = tail call i32 @_ZN5blink8AXObject24AriaRoleStringToRoleEnumERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %16) #22
  %18 = icmp eq i32 %17, 144
  br i1 %18, label %19, label %49

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %21 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %21, i64 124
  %23 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %22, align 8
  %24 = tail call %"class.blink::Node"* %23(%"class.blink::AXObject"* %0) #22
  %25 = icmp eq %"class.blink::Node"* %24, null
  br i1 %25, label %33, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 12
  %30 = icmp eq i32 %29, 0
  %31 = bitcast %"class.blink::Node"* %24 to %"class.blink::Element"*
  %32 = select i1 %30, %"class.blink::Element"* %31, %"class.blink::Element"* null
  br label %33

33:                                               ; preds = %26, %19
  %34 = phi %"class.blink::Element"* [ %32, %26 ], [ null, %19 ]
  %35 = tail call zeroext i1 @_ZN5blink8AXObject23IsNameFromAriaAttributeEPNS_7ElementE(%"class.blink::Element"* %34) #22
  br i1 %35, label %49, label %36

36:                                               ; preds = %33
  %37 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kTitleAttrE, align 8
  %38 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)***
  %39 = load i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)**, i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*, i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)** %39, i64 130
  %41 = load i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*, i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.blink::AXObject"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %37) #22
  br i1 %42, label %49, label %43

43:                                               ; preds = %36
  %44 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names24kAriaRoledescriptionAttrE, align 8
  %45 = load i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)**, i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*** %38, align 8
  %46 = getelementptr inbounds i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*, i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)** %45, i64 130
  %47 = load i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*, i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)** %46, align 8
  %48 = tail call zeroext i1 %47(%"class.blink::AXObject"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %44) #22
  br i1 %48, label %49, label %212

49:                                               ; preds = %33, %1, %11, %43, %36, %15
  %50 = phi i32 [ 144, %43 ], [ 144, %36 ], [ %17, %15 ], [ 182, %11 ], [ 182, %1 ], [ 144, %33 ]
  %51 = tail call zeroext i1 @_ZN2ui16IsPresentationalEN2ax5mojom4RoleE(i32 %50) #22
  br i1 %51, label %52, label %132

52:                                               ; preds = %49
  %53 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %54 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %53, align 8
  %55 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %54, i64 124
  %56 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %55, align 8
  %57 = tail call %"class.blink::Node"* %56(%"class.blink::AXObject"* %0) #22
  %58 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %57, i64 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, 48
  %61 = icmp ne i32 %60, 0
  %62 = icmp eq %"class.blink::Node"* %57, null
  %63 = or i1 %62, %61
  br i1 %63, label %76, label %64

64:                                               ; preds = %52
  %65 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kIFrameTagE, align 8
  %66 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %57, i64 1, i32 2
  %69 = bitcast %"class.blink::Member.318"* %68 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %70 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %70, i64 0, i32 3, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %67, i64 0, i32 3, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %72, %74
  br i1 %75, label %212, label %76

76:                                               ; preds = %52, %64
  %77 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %53, align 8
  %78 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %77, i64 124
  %79 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %78, align 8
  %80 = tail call %"class.blink::Node"* %79(%"class.blink::AXObject"* %0) #22
  %81 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %80, i64 0, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = and i32 %82, 48
  %84 = icmp ne i32 %83, 0
  %85 = icmp eq %"class.blink::Node"* %80, null
  %86 = or i1 %85, %84
  br i1 %86, label %99, label %87

87:                                               ; preds = %76
  %88 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kFrameTagE, align 8
  %89 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %88, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %80, i64 1, i32 2
  %92 = bitcast %"class.blink::Member.318"* %91 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %93 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %93, i64 0, i32 3, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %90, i64 0, i32 3, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %95, %97
  br i1 %98, label %212, label %99

99:                                               ; preds = %76, %87
  %100 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %53, align 8
  %101 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %100, i64 124
  %102 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %101, align 8
  %103 = tail call %"class.blink::Node"* %102(%"class.blink::AXObject"* %0) #22
  %104 = icmp eq %"class.blink::Node"* %103, null
  br i1 %104, label %130, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %103, i64 0, i32 1
  %107 = load i32, i32* %106, align 8
  %108 = and i32 %107, 12
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %130

110:                                              ; preds = %105
  %111 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %53, align 8
  %112 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %111, i64 124
  %113 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %112, align 8
  %114 = tail call %"class.blink::Node"* %113(%"class.blink::AXObject"* %0) #22
  %115 = icmp eq %"class.blink::Node"* %114, null
  br i1 %115, label %123, label %116

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %114, i64 0, i32 1
  %118 = load i32, i32* %117, align 8
  %119 = and i32 %118, 12
  %120 = icmp eq i32 %119, 0
  %121 = bitcast %"class.blink::Node"* %114 to %"class.blink::Element"*
  %122 = select i1 %120, %"class.blink::Element"* %121, %"class.blink::Element"* null
  br label %123

123:                                              ; preds = %110, %116
  %124 = phi %"class.blink::Element"* [ %122, %116 ], [ null, %110 ]
  %125 = bitcast %"class.blink::Element"* %124 to i1 (%"class.blink::Element"*)***
  %126 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %125, align 8
  %127 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %126, i64 102
  %128 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %127, align 8
  %129 = tail call zeroext i1 %128(%"class.blink::Element"* %124) #22
  br i1 %129, label %212, label %130

130:                                              ; preds = %105, %99, %123
  %131 = tail call zeroext i1 @_ZNK5blink8AXObject16HasAriaAttributeEb(%"class.blink::AXObject"* %0, i1 zeroext true)
  br i1 %131, label %212, label %132

132:                                              ; preds = %130, %49
  switch i32 %50, label %212 [
    i32 10, label %133
    i32 21, label %161
  ]

133:                                              ; preds = %132
  %134 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #22
  %135 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %135, align 8
  %136 = call zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_17AOMStringPropertyERN3WTF12AtomicStringE(%"class.blink::AXObject"* %0, i32 11, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %2) #22
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %152, label %139

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  br i1 %143, label %146, label %148

146:                                              ; preds = %139
  %147 = add i32 %145, -1
  store i32 %147, i32* %144, align 4
  br label %148

148:                                              ; preds = %146, %139
  %149 = phi i32 [ %147, %146 ], [ %145, %139 ]
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %148
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %137) #22
  br label %152

152:                                              ; preds = %151, %148, %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #22
  br i1 %136, label %212, label %153

153:                                              ; preds = %152
  %154 = bitcast %"class.blink::AXObject"* %0 to i32 (%"class.blink::AXObject"*)***
  %155 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %154, align 8
  %156 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %155, i64 108
  %157 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %156, align 8
  %158 = tail call i32 %157(%"class.blink::AXObject"* %0) #22
  %159 = icmp eq i32 %158, 0
  %160 = select i1 %159, i32 10, i32 138
  br label %212

161:                                              ; preds = %132
  %162 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %163 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %162, align 8
  %164 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %163, i64 124
  %165 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %164, align 8
  %166 = tail call %"class.blink::Node"* %165(%"class.blink::AXObject"* %0) #22
  %167 = icmp eq %"class.blink::Node"* %166, null
  br i1 %167, label %180, label %168

168:                                              ; preds = %161
  %169 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %166, i64 0, i32 1
  %170 = load i32, i32* %169, align 8
  %171 = and i32 %170, 12
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %180

173:                                              ; preds = %168
  %174 = bitcast %"class.blink::Node"* %166 to %"class.blink::Element"*
  %175 = bitcast %"class.blink::Node"* %166 to i1 (%"class.blink::Element"*)***
  %176 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %175, align 8
  %177 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %176, i64 126
  %178 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %177, align 8
  %179 = tail call zeroext i1 %178(%"class.blink::Element"* nonnull %174) #22
  br i1 %179, label %212, label %180

180:                                              ; preds = %168, %161, %173
  %181 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %162, align 8
  %182 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %181, i64 124
  %183 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %182, align 8
  %184 = tail call %"class.blink::Node"* %183(%"class.blink::AXObject"* %0) #22
  %185 = icmp eq %"class.blink::Node"* %184, null
  br i1 %185, label %212, label %186

186:                                              ; preds = %180
  %187 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %184, i64 0, i32 1
  %188 = load i32, i32* %187, align 8
  %189 = and i32 %188, 12
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %212

191:                                              ; preds = %186
  %192 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %162, align 8
  %193 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %192, i64 124
  %194 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %193, align 8
  %195 = tail call %"class.blink::Node"* %194(%"class.blink::AXObject"* %0) #22
  %196 = icmp eq %"class.blink::Node"* %195, null
  br i1 %196, label %204, label %197

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %195, i64 0, i32 1
  %199 = load i32, i32* %198, align 8
  %200 = and i32 %199, 12
  %201 = icmp eq i32 %200, 0
  %202 = bitcast %"class.blink::Node"* %195 to %"class.blink::Element"*
  %203 = select i1 %201, %"class.blink::Element"* %202, %"class.blink::Element"* null
  br label %204

204:                                              ; preds = %191, %197
  %205 = phi %"class.blink::Element"* [ %203, %197 ], [ null, %191 ]
  %206 = bitcast %"class.blink::Element"* %205 to i1 (%"class.blink::Element"*)***
  %207 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %206, align 8
  %208 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %207, i64 102
  %209 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %208, align 8
  %210 = tail call zeroext i1 %209(%"class.blink::Element"* %205) #22
  %211 = select i1 %210, i32 22, i32 21
  ret i32 %211

212:                                              ; preds = %186, %132, %180, %153, %152, %173, %123, %130, %64, %87, %43
  %213 = phi i32 [ 182, %43 ], [ 99, %87 ], [ 99, %64 ], [ 182, %130 ], [ 182, %123 ], [ 172, %173 ], [ %160, %153 ], [ 176, %152 ], [ 21, %186 ], [ 21, %180 ], [ %50, %132 ]
  ret i32 %213
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8AXObject14ButtonRoleTypeEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #22
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4, align 8
  %5 = call zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_17AOMStringPropertyERN3WTF12AtomicStringE(%"class.blink::AXObject"* %0, i32 11, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %2) #22
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #22
  br label %21

21:                                               ; preds = %1, %17, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #22
  br i1 %5, label %30, label %22

22:                                               ; preds = %21
  %23 = bitcast %"class.blink::AXObject"* %0 to i32 (%"class.blink::AXObject"*)***
  %24 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %23, align 8
  %25 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %24, i64 108
  %26 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %25, align 8
  %27 = tail call i32 %26(%"class.blink::AXObject"* %0) #22
  %28 = icmp eq i32 %27, 0
  %29 = select i1 %28, i32 10, i32 138
  br label %30

30:                                               ; preds = %22, %21
  %31 = phi i32 [ 176, %21 ], [ %29, %22 ]
  ret i32 %31
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink8AXObject8HasPopupEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i32 0
}

declare zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject14IsEditableRootEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject30HasContentEditableAttributeSetEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink22HasRichlyEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject16LiveRegionAtomicEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22
  store i8 0, i8* %2, align 1
  %3 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*, i32, i8*)***
  %4 = load i1 (%"class.blink::AXObject"*, i32, i8*)**, i1 (%"class.blink::AXObject"*, i32, i8*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %4, i64 6
  %6 = load i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %5, align 8
  %7 = call zeroext i1 %6(%"class.blink::AXObject"* %0, i32 0, i8* nonnull dereferenceable(1) %2) #22
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = load i8, i8* %2, align 1, !range !2
  %10 = icmp ne i8 %9, 0
  br label %17

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 2
  %15 = icmp eq i32 %13, 160
  %16 = or i1 %14, %15
  br label %17

17:                                               ; preds = %11, %8
  %18 = phi i1 [ %10, %8 ], [ %16, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject25ContainerLiveRegionStatusEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true)
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 10, i32 0, i32 0
  %3 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %2, align 8
  %4 = icmp eq %"class.blink::AXObject"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::AXObject"* %3 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)***
  %7 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)** %7, i64 115
  %9 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)** %8, align 8
  %10 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %9(%"class.blink::AXObject"* nonnull %3) #22
  br label %13

11:                                               ; preds = %1
  %12 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %13

13:                                               ; preds = %11, %5
  %14 = phi %"class.WTF::AtomicString"* [ %10, %5 ], [ %12, %11 ]
  ret %"class.WTF::AtomicString"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject27ContainerLiveRegionRelevantEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true)
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 10, i32 0, i32 0
  %3 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %2, align 8
  %4 = icmp eq %"class.blink::AXObject"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::AXObject"* %3 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)***
  %7 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)** %7, i64 116
  %9 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*)** %8, align 8
  %10 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %9(%"class.blink::AXObject"* nonnull %3) #22
  br label %13

11:                                               ; preds = %1
  %12 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %13

13:                                               ; preds = %11, %5
  %14 = phi %"class.WTF::AtomicString"* [ %10, %5 ], [ %12, %11 ]
  ret %"class.WTF::AtomicString"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject25ContainerLiveRegionAtomicEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca i8, align 1
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true)
  %3 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %3, align 8
  %5 = icmp eq %"class.blink::AXObject"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22
  store i8 0, i8* %2, align 1
  %7 = bitcast %"class.blink::AXObject"* %4 to i1 (%"class.blink::AXObject"*, i32, i8*)***
  %8 = load i1 (%"class.blink::AXObject"*, i32, i8*)**, i1 (%"class.blink::AXObject"*, i32, i8*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %8, i64 6
  %10 = load i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %9, align 8
  %11 = call zeroext i1 %10(%"class.blink::AXObject"* nonnull %4, i32 0, i8* nonnull dereferenceable(1) %2) #22
  br i1 %11, label %12, label %15

12:                                               ; preds = %6
  %13 = load i8, i8* %2, align 1, !range !2
  %14 = icmp ne i8 %13, 0
  br label %21

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %4, i64 0, i32 5
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 2
  %19 = icmp eq i32 %17, 160
  %20 = or i1 %18, %19
  br label %21

21:                                               ; preds = %12, %15
  %22 = phi i1 [ %14, %12 ], [ %20, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22
  br label %23

23:                                               ; preds = %1, %21
  %24 = phi i1 [ false, %1 ], [ %22, %21 ]
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject23ContainerLiveRegionBusyEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca i8, align 1
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true)
  %3 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %3, align 8
  %5 = icmp eq %"class.blink::AXObject"* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22
  store i8 -86, i8* %2, align 1
  %7 = bitcast %"class.blink::AXObject"* %4 to i1 (%"class.blink::AXObject"*, i32, i8*)***
  %8 = load i1 (%"class.blink::AXObject"*, i32, i8*)**, i1 (%"class.blink::AXObject"*, i32, i8*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %8, i64 6
  %10 = load i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %9, align 8
  %11 = call zeroext i1 %10(%"class.blink::AXObject"* nonnull %4, i32 1, i8* nonnull dereferenceable(1) %2) #22
  %12 = load i8, i8* %2, align 1
  %13 = icmp ne i8 %12, 0
  %14 = and i1 %11, %13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22
  br label %15

15:                                               ; preds = %1, %6
  %16 = phi i1 [ false, %1 ], [ %14, %6 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject27ElementAccessibilityHitTestERKNS_8IntPointE(%"class.blink::AXObject"*, %"class.blink::IntPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %1, i64 0, i32 1
  br label %5

5:                                                ; preds = %81, %2
  %6 = phi %"class.blink::AXObject"* [ %0, %2 ], [ %82, %81 ]
  %7 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %6, i64 0, i32 4
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::AXObject"* %6 to void (%"class.blink::AXObject"*)***
  %12 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %12, i64 160
  %14 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %13, align 8
  tail call void %14(%"class.blink::AXObject"* %6) #22
  br label %15

15:                                               ; preds = %5, %10
  %16 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %6, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %6, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %17, i64 %20
  %22 = icmp eq i32 %19, 0
  br i1 %22, label %83, label %23

23:                                               ; preds = %15, %78
  %24 = phi %"class.blink::Member.3082"* [ %79, %78 ], [ %17, %15 ]
  %25 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %25, align 8
  %27 = bitcast %"class.blink::AXObject"* %26 to i1 (%"class.blink::AXObject"*)***
  %28 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %28, i64 18
  %30 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::AXObject"* %26) #22
  br i1 %31, label %32, label %78

32:                                               ; preds = %23
  %33 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %25, align 8
  %34 = tail call { i64, i64 } @_ZNK5blink8AXObject27GetBoundsInFrameCoordinatesEv(%"class.blink::AXObject"* %33)
  %35 = extractvalue { i64, i64 } %34, 0
  %36 = trunc i64 %35 to i32
  %37 = lshr i64 %35, 32
  %38 = trunc i64 %37 to i32
  %39 = extractvalue { i64, i64 } %34, 1
  %40 = load i32, i32* %3, align 4
  %41 = icmp sgt i32 %40, 33554431
  br i1 %41, label %46, label %42

42:                                               ; preds = %32
  %43 = icmp slt i32 %40, -33554432
  %44 = shl i32 %40, 6
  %45 = select i1 %43, i32 -2147483648, i32 %44
  br label %46

46:                                               ; preds = %42, %32
  %47 = phi i32 [ 2147483647, %32 ], [ %45, %42 ]
  %48 = load i32, i32* %4, align 4
  %49 = icmp sgt i32 %48, 33554431
  br i1 %49, label %54, label %50

50:                                               ; preds = %46
  %51 = icmp slt i32 %48, -33554432
  %52 = shl i32 %48, 6
  %53 = select i1 %51, i32 -2147483648, i32 %52
  br label %54

54:                                               ; preds = %50, %46
  %55 = phi i32 [ 2147483647, %46 ], [ %53, %50 ]
  %56 = icmp slt i32 %47, %36
  br i1 %56, label %78, label %57

57:                                               ; preds = %54
  %58 = trunc i64 %39 to i32
  %59 = icmp slt i32 %58, 0
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %36, i32 %58) #22
  %62 = extractvalue { i32, i1 } %61, 1
  %63 = extractvalue { i32, i1 } %61, 0
  %64 = select i1 %62, i32 %60, i32 %63, !prof !3
  %65 = icmp sle i32 %64, %47
  %66 = icmp slt i32 %55, %38
  %67 = or i1 %65, %66
  br i1 %67, label %78, label %68

68:                                               ; preds = %57
  %69 = lshr i64 %39, 32
  %70 = trunc i64 %69 to i32
  %71 = icmp slt i32 %70, 0
  %72 = select i1 %71, i32 -2147483648, i32 2147483647
  %73 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %70) #22
  %74 = extractvalue { i32, i1 } %73, 1
  %75 = extractvalue { i32, i1 } %73, 0
  %76 = select i1 %74, i32 %72, i32 %75, !prof !3
  %77 = icmp sgt i32 %76, %55
  br i1 %77, label %81, label %78

78:                                               ; preds = %57, %54, %68, %23
  %79 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %24, i64 1
  %80 = icmp eq %"class.blink::Member.3082"* %79, %21
  br i1 %80, label %83, label %23

81:                                               ; preds = %68
  %82 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %25, align 8
  br label %5

83:                                               ; preds = %15, %78
  ret %"class.blink::AXObject"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.blink::HeapVector.3084"* @_ZNK5blink8AXObject24ChildrenIncludingIgnoredEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %7 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %7, i64 160
  %9 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %8, align 8
  tail call void %9(%"class.blink::AXObject"* %0) #22
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 3
  ret %"class.blink::HeapVector.3084"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink8AXObject27GetBoundsInFrameCoordinatesEv(%"class.blink::AXObject"*) local_unnamed_addr #12 align 2 {
  %2 = alloca %"class.blink::AXObject"*, align 8
  %3 = alloca %"class.blink::FloatRect", align 4
  %4 = alloca %class.SkMatrix44, align 8
  %5 = alloca %"class.blink::FloatRect", align 8
  %6 = alloca %"class.blink::TransformationMatrix", align 16
  %7 = bitcast %"class.blink::AXObject"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #22
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %2, align 8
  %8 = bitcast %"class.blink::FloatRect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #22
  %9 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %3, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %3, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %3, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %3, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %8, i8 0, i64 16, i1 false) #22
  %13 = bitcast %class.SkMatrix44* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %13) #22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 4 bitcast (%class.SkMatrix44* @__const._ZNK5blink8AXObject27GetBoundsInFrameCoordinatesEv.transform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #22
  %14 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %4, i64 0, i32 1
  store i8 0, i8* %14, align 8
  %15 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)***
  %16 = load void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)**, void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)*, void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)** %16, i64 117
  %18 = load void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)*, void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)** %17, align 8
  call void %18(%"class.blink::AXObject"* %0, %"class.blink::AXObject"** nonnull %2, %"class.blink::FloatRect"* nonnull dereferenceable(16) %3, %class.SkMatrix44* nonnull dereferenceable(68) %4, i8* null) #22
  %19 = bitcast %"class.blink::FloatRect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #22
  %20 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %5, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %5, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %5, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %5, i64 0, i32 1, i32 1
  %24 = bitcast float* %11 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = bitcast float* %12 to i32*
  %27 = load i32, i32* %26, align 4
  store float 0.000000e+00, float* %20, align 8
  store float 0.000000e+00, float* %21, align 4
  %28 = bitcast float* %22 to i32*
  store i32 %25, i32* %28, align 8
  %29 = bitcast float* %23 to i32*
  store i32 %27, i32* %29, align 4
  %30 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %2, align 8
  %31 = icmp ne %"class.blink::AXObject"* %30, null
  %32 = icmp ne %"class.blink::AXObject"* %30, %0
  %33 = and i1 %32, %31
  br i1 %33, label %34, label %162

34:                                               ; preds = %1
  %35 = bitcast %"class.blink::TransformationMatrix"* %6 to i8*
  %36 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %4, i64 0, i32 0, i64 0, i64 2
  %37 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %4, i64 0, i32 0, i64 1, i64 0
  %38 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %4, i64 0, i32 0, i64 1, i64 2
  %39 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %4, i64 0, i32 0, i64 2, i64 0
  %40 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %4, i64 0, i32 0, i64 2, i64 2
  %41 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %4, i64 0, i32 0, i64 3, i64 0
  %42 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %4, i64 0, i32 0, i64 3, i64 2
  %43 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 0, i64 2
  %44 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 1, i64 0
  %45 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 1, i64 2
  %46 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 2, i64 0
  %47 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 2, i64 2
  %48 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 3, i64 0
  %49 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 3, i64 2
  %50 = bitcast %class.SkMatrix44* %4 to <2 x float>*
  %51 = bitcast float* %36 to <2 x float>*
  %52 = bitcast float* %37 to <2 x float>*
  %53 = bitcast float* %38 to <2 x float>*
  %54 = bitcast float* %39 to <2 x float>*
  %55 = bitcast float* %40 to <2 x float>*
  %56 = bitcast float* %41 to <2 x float>*
  %57 = bitcast float* %42 to <2 x float>*
  %58 = bitcast %"class.blink::TransformationMatrix"* %6 to <2 x double>*
  %59 = bitcast double* %43 to <2 x double>*
  %60 = bitcast double* %44 to <2 x double>*
  %61 = bitcast double* %45 to <2 x double>*
  %62 = bitcast double* %46 to <2 x double>*
  %63 = bitcast double* %47 to <2 x double>*
  %64 = bitcast double* %48 to <2 x double>*
  %65 = bitcast double* %49 to <2 x double>*
  br label %66

66:                                               ; preds = %159, %34
  %67 = phi float [ 0.000000e+00, %34 ], [ %161, %159 ]
  %68 = phi float [ 0.000000e+00, %34 ], [ %160, %159 ]
  %69 = phi %"class.blink::AXObject"* [ %30, %34 ], [ %155, %159 ]
  %70 = load float, float* %9, align 4
  %71 = load float, float* %10, align 4
  %72 = fadd float %70, %68
  store float %72, float* %20, align 8
  %73 = fadd float %71, %67
  store float %73, float* %21, align 4
  %74 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %69, i64 0, i32 5
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 145
  br i1 %76, label %128, label %77

77:                                               ; preds = %66
  %78 = bitcast %"class.blink::AXObject"* %69 to %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)***
  %79 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)**, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*** %78, align 8
  %80 = getelementptr inbounds %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %79, i64 144
  %81 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %80, align 8
  %82 = call %"class.blink::ScrollableArea"* %81(%"class.blink::AXObject"* nonnull %69) #22
  %83 = icmp eq %"class.blink::ScrollableArea"* %82, null
  br i1 %83, label %95, label %84

84:                                               ; preds = %77
  %85 = bitcast %"class.blink::ScrollableArea"* %82 to i64 (%"class.blink::ScrollableArea"*)***
  %86 = load i64 (%"class.blink::ScrollableArea"*)**, i64 (%"class.blink::ScrollableArea"*)*** %85, align 8
  %87 = getelementptr inbounds i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %86, i64 46
  %88 = load i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %87, align 8
  %89 = call i64 %88(%"class.blink::ScrollableArea"* nonnull %82) #22
  %90 = load i64 (%"class.blink::ScrollableArea"*)**, i64 (%"class.blink::ScrollableArea"*)*** %85, align 8
  %91 = getelementptr inbounds i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %90, i64 46
  %92 = load i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %91, align 8
  %93 = call i64 %92(%"class.blink::ScrollableArea"* nonnull %82) #22
  %94 = and i64 %89, 4294967295
  br label %95

95:                                               ; preds = %77, %84
  %96 = phi i64 [ %94, %84 ], [ 0, %77 ]
  %97 = trunc i64 %96 to i32
  %98 = sub nsw i32 0, %97
  %99 = sitofp i32 %98 to float
  %100 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %2, align 8
  %101 = bitcast %"class.blink::AXObject"* %100 to %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)***
  %102 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)**, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*** %101, align 8
  %103 = getelementptr inbounds %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %102, i64 144
  %104 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %103, align 8
  %105 = call %"class.blink::ScrollableArea"* %104(%"class.blink::AXObject"* %100) #22
  %106 = icmp eq %"class.blink::ScrollableArea"* %105, null
  br i1 %106, label %118, label %107

107:                                              ; preds = %95
  %108 = bitcast %"class.blink::ScrollableArea"* %105 to i64 (%"class.blink::ScrollableArea"*)***
  %109 = load i64 (%"class.blink::ScrollableArea"*)**, i64 (%"class.blink::ScrollableArea"*)*** %108, align 8
  %110 = getelementptr inbounds i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %109, i64 46
  %111 = load i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %110, align 8
  %112 = call i64 %111(%"class.blink::ScrollableArea"* nonnull %105) #22
  %113 = load i64 (%"class.blink::ScrollableArea"*)**, i64 (%"class.blink::ScrollableArea"*)*** %108, align 8
  %114 = getelementptr inbounds i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %113, i64 46
  %115 = load i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %114, align 8
  %116 = call i64 %115(%"class.blink::ScrollableArea"* nonnull %105) #22
  %117 = and i64 %116, -4294967296
  br label %118

118:                                              ; preds = %95, %107
  %119 = phi i64 [ %117, %107 ], [ 0, %95 ]
  %120 = lshr exact i64 %119, 32
  %121 = trunc i64 %120 to i32
  %122 = sub nsw i32 0, %121
  %123 = sitofp i32 %122 to float
  %124 = load float, float* %20, align 8
  %125 = fadd float %124, %99
  store float %125, float* %20, align 8
  %126 = load float, float* %21, align 4
  %127 = fadd float %126, %123
  store float %127, float* %21, align 4
  br label %128

128:                                              ; preds = %118, %66
  %129 = load i8, i8* %14, align 8
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %149, label %131

131:                                              ; preds = %128
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %35) #22
  %132 = load <2 x float>, <2 x float>* %50, align 8
  %133 = fpext <2 x float> %132 to <2 x double>
  %134 = load <2 x float>, <2 x float>* %51, align 8
  %135 = fpext <2 x float> %134 to <2 x double>
  %136 = load <2 x float>, <2 x float>* %52, align 8
  %137 = fpext <2 x float> %136 to <2 x double>
  %138 = load <2 x float>, <2 x float>* %53, align 8
  %139 = fpext <2 x float> %138 to <2 x double>
  %140 = load <2 x float>, <2 x float>* %54, align 8
  %141 = fpext <2 x float> %140 to <2 x double>
  %142 = load <2 x float>, <2 x float>* %55, align 8
  %143 = fpext <2 x float> %142 to <2 x double>
  %144 = load <2 x float>, <2 x float>* %56, align 8
  %145 = fpext <2 x float> %144 to <2 x double>
  %146 = load <2 x float>, <2 x float>* %57, align 8
  %147 = fpext <2 x float> %146 to <2 x double>
  store <2 x double> %133, <2 x double>* %58, align 16
  store <2 x double> %135, <2 x double>* %59, align 16
  store <2 x double> %137, <2 x double>* %60, align 16
  store <2 x double> %139, <2 x double>* %61, align 16
  store <2 x double> %141, <2 x double>* %62, align 16
  store <2 x double> %143, <2 x double>* %63, align 16
  store <2 x double> %145, <2 x double>* %64, align 16
  store <2 x double> %147, <2 x double>* %65, align 16
  %148 = call { <2 x float>, <2 x float> } @_ZNK5blink20TransformationMatrix7MapRectERKNS_9FloatRectE(%"class.blink::TransformationMatrix"* nonnull %6, %"class.blink::FloatRect"* nonnull dereferenceable(16) %5) #22
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %35) #22
  br label %149

149:                                              ; preds = %131, %128
  %150 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %2, align 8
  %151 = bitcast %"class.blink::AXObject"* %150 to void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)***
  %152 = load void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)**, void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)*, void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)** %152, i64 117
  %154 = load void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)*, void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)** %153, align 8
  call void %154(%"class.blink::AXObject"* %150, %"class.blink::AXObject"** nonnull %2, %"class.blink::FloatRect"* nonnull dereferenceable(16) %3, %class.SkMatrix44* nonnull dereferenceable(68) %4, i8* null) #22
  %155 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %2, align 8
  %156 = icmp ne %"class.blink::AXObject"* %155, null
  %157 = icmp ne %"class.blink::AXObject"* %155, %0
  %158 = and i1 %157, %156
  br i1 %158, label %159, label %162

159:                                              ; preds = %149
  %160 = load float, float* %20, align 8
  %161 = load float, float* %21, align 4
  br label %66

162:                                              ; preds = %149, %1
  %163 = bitcast %"class.blink::FloatRect"* %5 to <2 x float>*
  %164 = load <2 x float>, <2 x float>* %163, align 8
  %165 = extractelement <2 x float> %164, i32 0
  %166 = fmul float %165, 6.400000e+01
  %167 = fcmp ult float %166, 0xC1E0000000000000
  %168 = fcmp ugt float %166, 0x41DFFFFFE0000000
  %169 = fcmp ogt float %166, 0xC1E0000000000000
  %170 = select i1 %169, float %166, float 0xC1E0000000000000
  %171 = fptosi float %170 to i32
  %172 = select i1 %167, i32 0, i32 2147483647
  %173 = select i1 %168, i32 %172, i32 %171
  %174 = extractelement <2 x float> %164, i32 1
  %175 = fmul float %174, 6.400000e+01
  %176 = fcmp ult float %175, 0xC1E0000000000000
  %177 = fcmp ugt float %175, 0x41DFFFFFE0000000
  %178 = fcmp ogt float %175, 0xC1E0000000000000
  %179 = select i1 %178, float %175, float 0xC1E0000000000000
  %180 = fptosi float %179 to i32
  %181 = select i1 %176, i32 0, i32 2147483647
  %182 = select i1 %177, i32 %181, i32 %180
  %183 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %5, i64 0, i32 1
  %184 = bitcast %"class.blink::FloatSize"* %183 to <2 x float>*
  %185 = load <2 x float>, <2 x float>* %184, align 8
  %186 = extractelement <2 x float> %185, i32 0
  %187 = fmul float %186, 6.400000e+01
  %188 = fcmp ult float %187, 0xC1E0000000000000
  %189 = fcmp ugt float %187, 0x41DFFFFFE0000000
  %190 = fcmp ogt float %187, 0xC1E0000000000000
  %191 = select i1 %190, float %187, float 0xC1E0000000000000
  %192 = fptosi float %191 to i32
  %193 = select i1 %188, i32 0, i32 2147483647
  %194 = select i1 %189, i32 %193, i32 %192
  %195 = extractelement <2 x float> %185, i32 1
  %196 = fmul float %195, 6.400000e+01
  %197 = fcmp ult float %196, 0xC1E0000000000000
  %198 = fcmp ugt float %196, 0x41DFFFFFE0000000
  %199 = fcmp ogt float %196, 0xC1E0000000000000
  %200 = select i1 %199, float %196, float 0xC1E0000000000000
  %201 = fptosi float %200 to i32
  %202 = select i1 %197, i32 0, i32 2147483647
  %203 = select i1 %198, i32 %202, i32 %201
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #22
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %13) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #22
  %204 = zext i32 %182 to i64
  %205 = shl nuw i64 %204, 32
  %206 = zext i32 %173 to i64
  %207 = or i64 %205, %206
  %208 = insertvalue { i64, i64 } undef, i64 %207, 0
  %209 = zext i32 %203 to i64
  %210 = shl nuw i64 %209, 32
  %211 = zext i32 %194 to i64
  %212 = or i64 %210, %211
  %213 = insertvalue { i64, i64 } %208, i64 %212, 1
  ret { i64, i64 } %213
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink8AXObject27GetInOrderTraversalIteratorEv(%"class.blink::AXObject::InOrderTraversalIterator"* noalias nocapture sret, %"class.blink::AXObject"*) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXObject::InOrderTraversalIterator", %"class.blink::AXObject::InOrderTraversalIterator"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::AXObject"* %1, %"class.blink::AXObject"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::AXObject::InOrderTraversalIterator", %"class.blink::AXObject::InOrderTraversalIterator"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject23ChildAtIncludingIgnoredEi(%"class.blink::AXObject"*, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 4
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %8 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %8, i64 160
  %10 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %9, align 8
  tail call void %10(%"class.blink::AXObject"* %0) #22
  br label %11

11:                                               ; preds = %2, %6
  %12 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, %1
  br i1 %14, label %15, label %28

15:                                               ; preds = %11
  %16 = load i8, i8* %3, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %15
  %19 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %20 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %20, i64 160
  %22 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %21, align 8
  tail call void %22(%"class.blink::AXObject"* %0) #22
  br label %23

23:                                               ; preds = %15, %18
  %24 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 3, i32 0
  %25 = tail call dereferenceable(8) %"class.blink::Member.3082"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3087"* %24, i32 %1) #22
  %26 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %26, align 8
  br label %28

28:                                               ; preds = %11, %23
  %29 = phi %"class.blink::AXObject"* [ %27, %23 ], [ null, %11 ]
  ret %"class.blink::AXObject"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8AXObject25UpdateChildrenIfNecessaryEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %7 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %7, i64 160
  %9 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %8, align 8
  tail call void %9(%"class.blink::AXObject"* %0) #22
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8AXObject17UnignoredChildrenEv(%"class.blink::HeapVector.3084"* noalias nocapture sret, %"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  tail call void @_ZN5blink8AXObject17UnignoredChildrenEv(%"class.blink::HeapVector.3084"* sret %0, %"class.blink::AXObject"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8AXObject17UnignoredChildrenEv(%"class.blink::HeapVector.3084"* noalias nocapture sret, %"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::HeapVector.3084", align 8
  %4 = alloca %"class.blink::AXObject"*, align 8
  %5 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %1, i64 0, i32 4
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::AXObject"* %1 to void (%"class.blink::AXObject"*)***
  %10 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %10, i64 160
  %12 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %11, align 8
  tail call void %12(%"class.blink::AXObject"* %1) #22
  br label %13

13:                                               ; preds = %2, %8
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %1, i1 zeroext true) #22
  %14 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %1, i64 0, i32 9
  %15 = load i8, i8* %14, align 8
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %1, i1 zeroext true) #22
  %19 = load i8, i8* %14, align 8
  %20 = and i8 %19, 2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = bitcast %"class.blink::HeapVector.3084"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false)
  br label %134

24:                                               ; preds = %18, %13
  %25 = bitcast %"class.blink::HeapVector.3084"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #22
  %26 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 16, i1 false) #22
  %29 = bitcast %"class.blink::AXObject"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #22
  store %"class.blink::AXObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::AXObject"*), %"class.blink::AXObject"** %4, align 8
  %30 = load i8, i8* %5, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %24
  %33 = bitcast %"class.blink::AXObject"* %1 to void (%"class.blink::AXObject"*)***
  %34 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %34, i64 160
  %36 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %35, align 8
  tail call void %36(%"class.blink::AXObject"* %1) #22
  br label %37

37:                                               ; preds = %32, %24
  %38 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %4, align 8
  br label %58

42:                                               ; preds = %37
  %43 = load i8, i8* %5, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %42
  %46 = bitcast %"class.blink::AXObject"* %1 to void (%"class.blink::AXObject"*)***
  %47 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %47, i64 160
  %49 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %48, align 8
  tail call void %49(%"class.blink::AXObject"* %1) #22
  br label %50

50:                                               ; preds = %42, %45
  %51 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %52 = bitcast %"class.blink::Member.3082"** %51 to %"class.blink::AXObject"***
  %53 = load %"class.blink::AXObject"**, %"class.blink::AXObject"*** %52, align 8
  %54 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %53, align 8
  store %"class.blink::AXObject"* %54, %"class.blink::AXObject"** %4, align 8
  %55 = icmp ne %"class.blink::AXObject"* %54, null
  %56 = icmp ne %"class.blink::AXObject"* %54, %1
  %57 = and i1 %56, %55
  br i1 %57, label %60, label %58

58:                                               ; preds = %41, %50
  %59 = bitcast %"class.blink::HeapVector.3084"* %3 to i64*
  br label %112

60:                                               ; preds = %50
  %61 = bitcast %"class.blink::AXObject"** %4 to i64*
  %62 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %3, i64 0, i32 0
  br label %63

63:                                               ; preds = %60, %72
  %64 = phi %"class.blink::AXObject"* [ %54, %60 ], [ %73, %72 ]
  call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* nonnull %64, i1 zeroext true) #22
  %65 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %64, i64 0, i32 9
  %66 = load i8, i8* %65, align 8
  %67 = and i8 %66, 1
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %63
  %70 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %4, align 8
  %71 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject30NextInPreOrderIncludingIgnoredEPKS0_(%"class.blink::AXObject"* %70, %"class.blink::AXObject"* %1)
  br label %72

72:                                               ; preds = %99, %69
  %73 = phi %"class.blink::AXObject"* [ %71, %69 ], [ %101, %99 ]
  store %"class.blink::AXObject"* %73, %"class.blink::AXObject"** %4, align 8
  %74 = icmp ne %"class.blink::AXObject"* %73, null
  %75 = icmp ne %"class.blink::AXObject"* %73, %1
  %76 = and i1 %75, %74
  br i1 %76, label %63, label %107

77:                                               ; preds = %63
  %78 = load i32, i32* %28, align 4
  %79 = load i32, i32* %27, align 8
  %80 = icmp eq i32 %78, %79
  br i1 %80, label %95, label %81, !prof !3

81:                                               ; preds = %77
  %82 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %26, align 8
  %83 = zext i32 %78 to i64
  %84 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %82, i64 %83
  %85 = load i64, i64* %61, align 8
  %86 = bitcast %"class.blink::Member.3082"* %84 to i64*
  store atomic i64 %85, i64* %86 monotonic, align 8
  %87 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %81
  %90 = inttoptr i64 %85 to i8*
  %91 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %90) #22
  br label %92

92:                                               ; preds = %89, %81
  %93 = load i32, i32* %28, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %28, align 4
  br label %96

95:                                               ; preds = %77
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.3087"* nonnull %62, %"class.blink::AXObject"** nonnull dereferenceable(8) %4) #22
  br label %96

96:                                               ; preds = %92, %95
  %97 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %4, align 8
  %98 = icmp eq %"class.blink::AXObject"* %97, %1
  br i1 %98, label %107, label %99

99:                                               ; preds = %96, %103
  %100 = phi %"class.blink::AXObject"* [ %105, %103 ], [ %97, %96 ]
  %101 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject27NextSiblingIncludingIgnoredEv(%"class.blink::AXObject"* %100)
  %102 = icmp eq %"class.blink::AXObject"* %101, null
  br i1 %102, label %103, label %72

103:                                              ; preds = %99
  %104 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %4, align 8
  %105 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject26ParentObjectIncludedInTreeEv(%"class.blink::AXObject"* %104)
  store %"class.blink::AXObject"* %105, %"class.blink::AXObject"** %4, align 8
  %106 = icmp eq %"class.blink::AXObject"* %105, %1
  br i1 %106, label %107, label %99

107:                                              ; preds = %96, %72, %103
  %108 = bitcast %"class.blink::HeapVector.3084"* %3 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = load i32, i32* %27, align 8
  %111 = load i32, i32* %28, align 4
  br label %112

112:                                              ; preds = %58, %107
  %113 = phi i64* [ %59, %58 ], [ %108, %107 ]
  %114 = phi i32 [ 0, %58 ], [ %111, %107 ]
  %115 = phi i32 [ 0, %58 ], [ %110, %107 ]
  %116 = phi i64 [ 0, %58 ], [ %109, %107 ]
  %117 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %118 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %119 = bitcast %"class.blink::HeapVector.3084"* %0 to i64*
  store i64 0, i64* %119, align 8
  %120 = bitcast %"class.blink::HeapVector.3084"* %0 to i64*
  store atomic i64 0, i64* %113 monotonic, align 8
  store atomic i64 %116, i64* %120 monotonic, align 8
  store i32 %115, i32* %117, align 8
  store i32 0, i32* %27, align 8
  store i32 %114, i32* %118, align 4
  store i32 0, i32* %28, align 4
  %121 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %126, label %123

123:                                              ; preds = %112
  %124 = inttoptr i64 %116 to i8*
  %125 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %124) #22
  br label %126

126:                                              ; preds = %123, %112
  %127 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %133, label %129

129:                                              ; preds = %126
  %130 = bitcast %"class.blink::HeapVector.3084"* %3 to i8**
  %131 = load i8*, i8** %130, align 8
  %132 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %131) #22
  br label %133

133:                                              ; preds = %126, %129
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #22
  br label %134

134:                                              ; preds = %133, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject26FirstChildIncludingIgnoredEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %7 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %7, i64 160
  %9 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %8, align 8
  tail call void %9(%"class.blink::AXObject"* %0) #22
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = load i8, i8* %2, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %14
  %18 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %19 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %19, i64 160
  %21 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %20, align 8
  tail call void %21(%"class.blink::AXObject"* %0) #22
  br label %22

22:                                               ; preds = %14, %17
  %23 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.blink::Member.3082"** %23 to %"class.blink::AXObject"***
  %25 = load %"class.blink::AXObject"**, %"class.blink::AXObject"*** %24, align 8
  %26 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %25, align 8
  br label %27

27:                                               ; preds = %10, %22
  %28 = phi %"class.blink::AXObject"* [ %26, %22 ], [ null, %10 ]
  ret %"class.blink::AXObject"* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject30NextInPreOrderIncludingIgnoredEPKS0_(%"class.blink::AXObject"*, %"class.blink::AXObject"* readnone) local_unnamed_addr #2 align 2 {
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %3 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 8
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %8 = load i8, i8* %3, align 8
  %9 = and i8 %8, 2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %60, label %11

11:                                               ; preds = %7, %2
  %12 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 4
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %17 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %17, i64 160
  %19 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %18, align 8
  tail call void %19(%"class.blink::AXObject"* %0) #22
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %46, label %24

24:                                               ; preds = %20
  %25 = load i8, i8* %12, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %41, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %29 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %29, i64 160
  %31 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %30, align 8
  tail call void %31(%"class.blink::AXObject"* %0) #22
  %32 = load i32, i32* %21, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %60, label %34

34:                                               ; preds = %27
  %35 = load i8, i8* %12, align 8
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %34
  %38 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %28, align 8
  %39 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %38, i64 160
  %40 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %39, align 8
  tail call void %40(%"class.blink::AXObject"* %0) #22
  br label %41

41:                                               ; preds = %24, %37, %34
  %42 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.blink::Member.3082"** %42 to %"class.blink::AXObject"***
  %44 = load %"class.blink::AXObject"**, %"class.blink::AXObject"*** %43, align 8
  %45 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %44, align 8
  br label %60

46:                                               ; preds = %20
  %47 = icmp eq %"class.blink::AXObject"* %1, %0
  br i1 %47, label %60, label %48

48:                                               ; preds = %46
  %49 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject27NextSiblingIncludingIgnoredEv(%"class.blink::AXObject"* %0)
  %50 = icmp eq %"class.blink::AXObject"* %49, null
  br i1 %50, label %51, label %60

51:                                               ; preds = %48, %57
  %52 = phi %"class.blink::AXObject"* [ %53, %57 ], [ %0, %48 ]
  %53 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject26ParentObjectIncludedInTreeEv(%"class.blink::AXObject"* %52)
  %54 = icmp eq %"class.blink::AXObject"* %53, null
  %55 = icmp eq %"class.blink::AXObject"* %53, %1
  %56 = or i1 %54, %55
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject27NextSiblingIncludingIgnoredEv(%"class.blink::AXObject"* nonnull %53)
  %59 = icmp eq %"class.blink::AXObject"* %58, null
  br i1 %59, label %51, label %60

60:                                               ; preds = %57, %51, %48, %7, %41, %27, %46
  %61 = phi %"class.blink::AXObject"* [ null, %7 ], [ null, %46 ], [ %45, %41 ], [ null, %27 ], [ %49, %48 ], [ %58, %57 ], [ null, %51 ]
  ret %"class.blink::AXObject"* %61
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject27NextSiblingIncludingIgnoredEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %7 = load i8, i8* %2, align 8
  %8 = and i8 %7, 2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %90, label %10

10:                                               ; preds = %6, %1
  %11 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject26ParentObjectIncludedInTreeEv(%"class.blink::AXObject"* %0)
  %12 = icmp eq %"class.blink::AXObject"* %11, null
  br i1 %12, label %90, label %13

13:                                               ; preds = %10
  %14 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject26ParentObjectIncludedInTreeEv(%"class.blink::AXObject"* %0) #22
  %15 = icmp eq %"class.blink::AXObject"* %14, null
  br i1 %15, label %49, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %14, i64 0, i32 4
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::AXObject"* %14 to void (%"class.blink::AXObject"*)***
  %22 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %22, i64 160
  %24 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %23, align 8
  tail call void %24(%"class.blink::AXObject"* nonnull %14) #22
  br label %25

25:                                               ; preds = %20, %16
  %26 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %14, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %14, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %27, i64 %30
  %32 = icmp eq i32 %29, 0
  br i1 %32, label %48, label %33

33:                                               ; preds = %25, %38
  %34 = phi %"class.blink::Member.3082"* [ %39, %38 ], [ %27, %25 ]
  %35 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %35, align 8
  %37 = icmp eq %"class.blink::AXObject"* %36, %0
  br i1 %37, label %41, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %34, i64 1
  %40 = icmp ult %"class.blink::Member.3082"* %39, %31
  br i1 %40, label %33, label %48

41:                                               ; preds = %33
  %42 = ptrtoint %"class.blink::Member.3082"* %34 to i64
  %43 = ptrtoint %"class.blink::Member.3082"* %27 to i64
  %44 = sub i64 %42, %43
  %45 = lshr exact i64 %44, 3
  %46 = trunc i64 %45 to i32
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %48, label %49

48:                                               ; preds = %38, %41, %25
  br label %49

49:                                               ; preds = %13, %41, %48
  %50 = phi i32 [ 0, %13 ], [ 0, %48 ], [ %46, %41 ]
  %51 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %11, i64 0, i32 4
  %52 = load i8, i8* %51, align 8, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %59, label %54

54:                                               ; preds = %49
  %55 = bitcast %"class.blink::AXObject"* %11 to void (%"class.blink::AXObject"*)***
  %56 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %56, i64 160
  %58 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %57, align 8
  tail call void %58(%"class.blink::AXObject"* nonnull %11) #22
  br label %59

59:                                               ; preds = %49, %54
  %60 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %11, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = add nsw i32 %61, -1
  %63 = icmp slt i32 %50, %62
  br i1 %63, label %64, label %90

64:                                               ; preds = %59
  %65 = add nuw nsw i32 %50, 1
  %66 = load i8, i8* %51, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %74, label %68

68:                                               ; preds = %64
  %69 = bitcast %"class.blink::AXObject"* %11 to void (%"class.blink::AXObject"*)***
  %70 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %70, i64 160
  %72 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %71, align 8
  tail call void %72(%"class.blink::AXObject"* nonnull %11) #22
  %73 = load i32, i32* %60, align 4
  br label %74

74:                                               ; preds = %68, %64
  %75 = phi i32 [ %73, %68 ], [ %61, %64 ]
  %76 = icmp sgt i32 %75, %65
  br i1 %76, label %77, label %90

77:                                               ; preds = %74
  %78 = load i8, i8* %51, align 8, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %85, label %80

80:                                               ; preds = %77
  %81 = bitcast %"class.blink::AXObject"* %11 to void (%"class.blink::AXObject"*)***
  %82 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %82, i64 160
  %84 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %83, align 8
  tail call void %84(%"class.blink::AXObject"* nonnull %11) #22
  br label %85

85:                                               ; preds = %80, %77
  %86 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %11, i64 0, i32 3, i32 0
  %87 = tail call dereferenceable(8) %"class.blink::Member.3082"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3087"* %86, i32 %65) #22
  %88 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %87, i64 0, i32 0, i32 0
  %89 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %88, align 8
  br label %90

90:                                               ; preds = %6, %85, %74, %10, %59
  %91 = phi %"class.blink::AXObject"* [ null, %6 ], [ null, %10 ], [ null, %59 ], [ %89, %85 ], [ null, %74 ]
  ret %"class.blink::AXObject"* %91
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject25LastChildIncludingIgnoredEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %7 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %7, i64 160
  %9 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %8, align 8
  tail call void %9(%"class.blink::AXObject"* %0) #22
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %32, label %14

14:                                               ; preds = %10
  %15 = load i8, i8* %2, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %14
  %18 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %19 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %19, i64 160
  %21 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %20, align 8
  tail call void %21(%"class.blink::AXObject"* %0) #22
  %22 = load i32, i32* %11, align 4
  br label %23

23:                                               ; preds = %14, %17
  %24 = phi i32 [ %12, %14 ], [ %22, %17 ]
  %25 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %25, align 8
  %27 = zext i32 %24 to i64
  %28 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %26, i64 %27
  %29 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %28, i64 -1
  %30 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %30, align 8
  br label %32

32:                                               ; preds = %10, %23
  %33 = phi %"class.blink::AXObject"* [ %31, %23 ], [ null, %10 ]
  ret %"class.blink::AXObject"* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject33DeepestFirstChildIncludingIgnoredEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2, align 8
  %4 = icmp eq %"class.blink::AXObjectCacheImpl"* %3, null
  br i1 %4, label %80, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 4
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %11 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %11, i64 160
  %13 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %12, align 8
  tail call void %13(%"class.blink::AXObject"* %0) #22
  br label %14

14:                                               ; preds = %5, %9
  %15 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %80, label %18

18:                                               ; preds = %14
  %19 = load i8, i8* %6, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %35, label %21

21:                                               ; preds = %18
  %22 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %23 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %23, i64 160
  %25 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %24, align 8
  tail call void %25(%"class.blink::AXObject"* %0) #22
  %26 = load i32, i32* %15, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %40, label %28

28:                                               ; preds = %21
  %29 = load i8, i8* %6, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %22, align 8
  %33 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %32, i64 160
  %34 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %33, align 8
  tail call void %34(%"class.blink::AXObject"* %0) #22
  br label %35

35:                                               ; preds = %18, %31, %28
  %36 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.blink::Member.3082"** %36 to %"class.blink::AXObject"***
  %38 = load %"class.blink::AXObject"**, %"class.blink::AXObject"*** %37, align 8
  %39 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %38, align 8
  br label %40

40:                                               ; preds = %21, %35
  %41 = phi %"class.blink::AXObject"* [ null, %21 ], [ %39, %35 ]
  br label %42

42:                                               ; preds = %66, %40
  %43 = phi %"class.blink::AXObject"* [ %41, %40 ], [ %67, %66 ]
  %44 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %43, i64 0, i32 4
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %42
  %48 = bitcast %"class.blink::AXObject"* %43 to void (%"class.blink::AXObject"*)***
  %49 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %49, i64 160
  %51 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %50, align 8
  tail call void %51(%"class.blink::AXObject"* %43) #22
  br label %52

52:                                               ; preds = %42, %47
  %53 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %43, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %80, label %56

56:                                               ; preds = %52
  %57 = load i8, i8* %44, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %75, label %59

59:                                               ; preds = %56
  %60 = bitcast %"class.blink::AXObject"* %43 to void (%"class.blink::AXObject"*)***
  %61 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %61, i64 160
  %63 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %62, align 8
  tail call void %63(%"class.blink::AXObject"* %43) #22
  %64 = load i32, i32* %53, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %59, %75
  %67 = phi %"class.blink::AXObject"* [ %79, %75 ], [ null, %59 ]
  br label %42

68:                                               ; preds = %59
  %69 = load i8, i8* %44, align 8
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %75, label %71

71:                                               ; preds = %68
  %72 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %60, align 8
  %73 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %72, i64 160
  %74 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %73, align 8
  tail call void %74(%"class.blink::AXObject"* %43) #22
  br label %75

75:                                               ; preds = %56, %71, %68
  %76 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %43, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %77 = bitcast %"class.blink::Member.3082"** %76 to %"class.blink::AXObject"***
  %78 = load %"class.blink::AXObject"**, %"class.blink::AXObject"*** %77, align 8
  %79 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %78, align 8
  br label %66

80:                                               ; preds = %52, %14, %1
  %81 = phi %"class.blink::AXObject"* [ null, %1 ], [ null, %14 ], [ %43, %52 ]
  ret %"class.blink::AXObject"* %81
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject32DeepestLastChildIncludingIgnoredEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2, align 8
  %4 = icmp eq %"class.blink::AXObjectCacheImpl"* %3, null
  br i1 %4, label %93, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 4
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %11 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %11, i64 160
  %13 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %12, align 8
  tail call void %13(%"class.blink::AXObject"* %0) #22
  br label %14

14:                                               ; preds = %5, %9
  %15 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %93, label %18

18:                                               ; preds = %14
  %19 = load i8, i8* %6, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %36, label %21

21:                                               ; preds = %18
  %22 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %23 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %23, i64 160
  %25 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %24, align 8
  tail call void %25(%"class.blink::AXObject"* %0) #22
  %26 = load i32, i32* %15, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %46, label %28

28:                                               ; preds = %21
  %29 = load i8, i8* %6, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %22, align 8
  %33 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %32, i64 160
  %34 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %33, align 8
  tail call void %34(%"class.blink::AXObject"* %0) #22
  %35 = load i32, i32* %15, align 4
  br label %36

36:                                               ; preds = %18, %31, %28
  %37 = phi i32 [ %26, %28 ], [ %35, %31 ], [ %16, %18 ]
  %38 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %38, align 8
  %40 = zext i32 %37 to i64
  %41 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %39, i64 %40
  %42 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %41, i64 -1
  %43 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %43, align 8
  %45 = bitcast %"class.blink::AXObject"* %44 to void (%"class.blink::AXObject"*)***
  br label %46

46:                                               ; preds = %21, %36
  %47 = phi void (%"class.blink::AXObject"*)*** [ null, %21 ], [ %45, %36 ]
  %48 = phi %"class.blink::AXObject"* [ null, %21 ], [ %44, %36 ]
  br label %49

49:                                               ; preds = %72, %46
  %50 = phi void (%"class.blink::AXObject"*)*** [ %47, %46 ], [ %73, %72 ]
  %51 = phi %"class.blink::AXObject"* [ %48, %46 ], [ %74, %72 ]
  %52 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %51, i64 0, i32 4
  %53 = load i8, i8* %52, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %49
  %56 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %50, align 8
  %57 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %56, i64 160
  %58 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %57, align 8
  tail call void %58(%"class.blink::AXObject"* %51) #22
  br label %59

59:                                               ; preds = %49, %55
  %60 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %51, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %93, label %63

63:                                               ; preds = %59
  %64 = load i8, i8* %52, align 8, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %83, label %66

66:                                               ; preds = %63
  %67 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %50, align 8
  %68 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %67, i64 160
  %69 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %68, align 8
  tail call void %69(%"class.blink::AXObject"* %51) #22
  %70 = load i32, i32* %60, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %66, %83
  %73 = phi void (%"class.blink::AXObject"*)*** [ %92, %83 ], [ null, %66 ]
  %74 = phi %"class.blink::AXObject"* [ %91, %83 ], [ null, %66 ]
  br label %49

75:                                               ; preds = %66
  %76 = load i8, i8* %52, align 8
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %83, label %78

78:                                               ; preds = %75
  %79 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %50, align 8
  %80 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %79, i64 160
  %81 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %80, align 8
  tail call void %81(%"class.blink::AXObject"* %51) #22
  %82 = load i32, i32* %60, align 4
  br label %83

83:                                               ; preds = %63, %78, %75
  %84 = phi i32 [ %70, %75 ], [ %82, %78 ], [ %61, %63 ]
  %85 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %51, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %86 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %85, align 8
  %87 = zext i32 %84 to i64
  %88 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %86, i64 -1
  %89 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %88, i64 %87
  %90 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %89, i64 0, i32 0, i32 0
  %91 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %90, align 8
  %92 = bitcast %"class.blink::AXObject"* %91 to void (%"class.blink::AXObject"*)***
  br label %72

93:                                               ; preds = %59, %14, %1
  %94 = phi %"class.blink::AXObject"* [ null, %1 ], [ null, %14 ], [ %51, %59 ]
  ret %"class.blink::AXObject"* %94
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject12IsAncestorOfERKS0_(%"class.blink::AXObject"* readnone, %"class.blink::AXObject"* dereferenceable(120)) local_unnamed_addr #2 align 2 {
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject14IsDescendantOfERKS0_(%"class.blink::AXObject"* %1, %"class.blink::AXObject"* dereferenceable(120) %0)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject31PreviousSiblingIncludingIgnoredEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %7 = load i8, i8* %2, align 8
  %8 = and i8 %7, 2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %75, label %10

10:                                               ; preds = %6, %1
  %11 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject26ParentObjectIncludedInTreeEv(%"class.blink::AXObject"* %0)
  %12 = icmp eq %"class.blink::AXObject"* %11, null
  br i1 %12, label %75, label %13

13:                                               ; preds = %10
  %14 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject26ParentObjectIncludedInTreeEv(%"class.blink::AXObject"* %0) #22
  %15 = icmp eq %"class.blink::AXObject"* %14, null
  br i1 %15, label %75, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %14, i64 0, i32 4
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::AXObject"* %14 to void (%"class.blink::AXObject"*)***
  %22 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %22, i64 160
  %24 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %23, align 8
  tail call void %24(%"class.blink::AXObject"* nonnull %14) #22
  br label %25

25:                                               ; preds = %20, %16
  %26 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %14, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %14, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %27, i64 %30
  %32 = icmp eq i32 %29, 0
  br i1 %32, label %75, label %33

33:                                               ; preds = %25, %38
  %34 = phi %"class.blink::Member.3082"* [ %39, %38 ], [ %27, %25 ]
  %35 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %35, align 8
  %37 = icmp eq %"class.blink::AXObject"* %36, %0
  br i1 %37, label %41, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %34, i64 1
  %40 = icmp ult %"class.blink::Member.3082"* %39, %31
  br i1 %40, label %33, label %75

41:                                               ; preds = %33
  %42 = ptrtoint %"class.blink::Member.3082"* %34 to i64
  %43 = ptrtoint %"class.blink::Member.3082"* %27 to i64
  %44 = sub i64 %42, %43
  %45 = lshr exact i64 %44, 3
  %46 = trunc i64 %45 to i32
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %48, label %75

48:                                               ; preds = %41
  %49 = add nsw i32 %46, -1
  %50 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %11, i64 0, i32 4
  %51 = load i8, i8* %50, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %48
  %54 = bitcast %"class.blink::AXObject"* %11 to void (%"class.blink::AXObject"*)***
  %55 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %55, i64 160
  %57 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %56, align 8
  tail call void %57(%"class.blink::AXObject"* nonnull %11) #22
  br label %58

58:                                               ; preds = %53, %48
  %59 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %11, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = icmp slt i32 %60, %46
  br i1 %61, label %75, label %62

62:                                               ; preds = %58
  %63 = load i8, i8* %50, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %70, label %65

65:                                               ; preds = %62
  %66 = bitcast %"class.blink::AXObject"* %11 to void (%"class.blink::AXObject"*)***
  %67 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %67, i64 160
  %69 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %68, align 8
  tail call void %69(%"class.blink::AXObject"* nonnull %11) #22
  br label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %11, i64 0, i32 3, i32 0
  %72 = tail call dereferenceable(8) %"class.blink::Member.3082"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3087"* %71, i32 %49) #22
  %73 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %73, align 8
  br label %75

75:                                               ; preds = %38, %58, %6, %41, %25, %13, %70, %10
  %76 = phi %"class.blink::AXObject"* [ null, %6 ], [ null, %10 ], [ %74, %70 ], [ null, %58 ], [ null, %13 ], [ null, %41 ], [ null, %25 ], [ null, %38 ]
  ret %"class.blink::AXObject"* %76
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject34PreviousInPreOrderIncludingIgnoredEPKS0_(%"class.blink::AXObject"*, %"class.blink::AXObject"* readnone) local_unnamed_addr #2 align 2 {
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %3 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 8
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %8 = load i8, i8* %3, align 8
  %9 = and i8 %8, 2
  %10 = icmp eq i8 %9, 0
  br label %11

11:                                               ; preds = %2, %7
  %12 = phi i1 [ false, %2 ], [ %10, %7 ]
  %13 = icmp eq %"class.blink::AXObject"* %1, %0
  %14 = or i1 %13, %12
  br i1 %14, label %35, label %15

15:                                               ; preds = %11
  %16 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject31PreviousSiblingIncludingIgnoredEv(%"class.blink::AXObject"* %0)
  %17 = icmp eq %"class.blink::AXObject"* %16, null
  br i1 %17, label %33, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %16, i64 0, i32 4
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.blink::AXObject"* %16 to void (%"class.blink::AXObject"*)***
  %24 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %24, i64 160
  %26 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %25, align 8
  tail call void %26(%"class.blink::AXObject"* nonnull %16) #22
  br label %27

27:                                               ; preds = %18, %22
  %28 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %16, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %27
  %32 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject32DeepestLastChildIncludingIgnoredEv(%"class.blink::AXObject"* nonnull %16)
  br label %35

33:                                               ; preds = %15
  %34 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject26ParentObjectIncludedInTreeEv(%"class.blink::AXObject"* %0)
  br label %35

35:                                               ; preds = %27, %31, %11, %33
  %36 = phi %"class.blink::AXObject"* [ %34, %33 ], [ null, %11 ], [ %16, %27 ], [ %32, %31 ]
  ret %"class.blink::AXObject"* %36
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject35PreviousInPostOrderIncludingIgnoredEPKS0_(%"class.blink::AXObject"*, %"class.blink::AXObject"* readnone) local_unnamed_addr #2 align 2 {
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %3 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 8
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %8 = load i8, i8* %3, align 8
  %9 = and i8 %8, 2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %65, label %11

11:                                               ; preds = %7, %2
  %12 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 4
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %17 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %17, i64 160
  %19 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %18, align 8
  tail call void %19(%"class.blink::AXObject"* %0) #22
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %51, label %24

24:                                               ; preds = %20
  %25 = load i8, i8* %12, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %42, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::AXObject"* %0 to void (%"class.blink::AXObject"*)***
  %29 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %29, i64 160
  %31 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %30, align 8
  tail call void %31(%"class.blink::AXObject"* %0) #22
  %32 = load i32, i32* %21, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %65, label %34

34:                                               ; preds = %27
  %35 = load i8, i8* %12, align 8
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %34
  %38 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %28, align 8
  %39 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %38, i64 160
  %40 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %39, align 8
  tail call void %40(%"class.blink::AXObject"* %0) #22
  %41 = load i32, i32* %21, align 4
  br label %42

42:                                               ; preds = %24, %37, %34
  %43 = phi i32 [ %32, %34 ], [ %41, %37 ], [ %22, %24 ]
  %44 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %44, align 8
  %46 = zext i32 %43 to i64
  %47 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %45, i64 %46
  %48 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %47, i64 -1
  %49 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %49, align 8
  br label %65

51:                                               ; preds = %20
  %52 = icmp eq %"class.blink::AXObject"* %1, %0
  br i1 %52, label %65, label %53

53:                                               ; preds = %51
  %54 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject31PreviousSiblingIncludingIgnoredEv(%"class.blink::AXObject"* %0)
  %55 = icmp eq %"class.blink::AXObject"* %54, null
  br i1 %55, label %56, label %65

56:                                               ; preds = %53, %62
  %57 = phi %"class.blink::AXObject"* [ %58, %62 ], [ %0, %53 ]
  %58 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject26ParentObjectIncludedInTreeEv(%"class.blink::AXObject"* %57)
  %59 = icmp eq %"class.blink::AXObject"* %58, null
  %60 = icmp eq %"class.blink::AXObject"* %58, %1
  %61 = or i1 %59, %60
  br i1 %61, label %65, label %62

62:                                               ; preds = %56
  %63 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject31PreviousSiblingIncludingIgnoredEv(%"class.blink::AXObject"* nonnull %58)
  %64 = icmp eq %"class.blink::AXObject"* %63, null
  br i1 %64, label %56, label %65

65:                                               ; preds = %62, %56, %53, %7, %42, %27, %51
  %66 = phi %"class.blink::AXObject"* [ null, %7 ], [ null, %51 ], [ %50, %42 ], [ null, %27 ], [ %54, %53 ], [ %63, %62 ], [ null, %56 ]
  ret %"class.blink::AXObject"* %66
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8AXObject19UnignoredChildCountEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.blink::HeapVector.3084", align 8
  %3 = bitcast %"class.blink::HeapVector.3084"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #22
  call void @_ZN5blink8AXObject17UnignoredChildrenEv(%"class.blink::HeapVector.3084"* nonnull sret %2, %"class.blink::AXObject"* %0) #22
  %4 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #22
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject16UnignoredChildAtEi(%"class.blink::AXObject"*, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::HeapVector.3084", align 8
  %4 = bitcast %"class.blink::HeapVector.3084"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #22
  %5 = bitcast %"class.blink::HeapVector.3084"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 16, i1 false)
  call void @_ZN5blink8AXObject17UnignoredChildrenEv(%"class.blink::HeapVector.3084"* nonnull sret %3, %"class.blink::AXObject"* %0) #22
  %6 = icmp slt i32 %1, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, %1
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %3, i64 0, i32 0
  %13 = call dereferenceable(8) %"class.blink::Member.3082"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3087"* nonnull %12, i32 %1) #22
  %14 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %14, align 8
  br label %16

16:                                               ; preds = %2, %7, %11
  %17 = phi %"class.blink::AXObject"* [ %15, %11 ], [ null, %7 ], [ null, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #22
  ret %"class.blink::AXObject"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject20UnignoredNextSiblingEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %31

6:                                                ; preds = %1
  %7 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* %0)
  br label %8

8:                                                ; preds = %26, %6
  %9 = phi %"class.blink::AXObject"* [ %0, %6 ], [ %24, %26 ]
  %10 = icmp eq %"class.blink::AXObject"* %9, null
  br i1 %10, label %31, label %11

11:                                               ; preds = %8
  %12 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject27NextSiblingIncludingIgnoredEv(%"class.blink::AXObject"* nonnull %9)
  %13 = icmp eq %"class.blink::AXObject"* %12, null
  br i1 %13, label %23, label %14

14:                                               ; preds = %11, %20
  %15 = phi %"class.blink::AXObject"* [ %21, %20 ], [ %12, %11 ]
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* nonnull %15, i1 zeroext true) #22
  %16 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %15, i64 0, i32 9
  %17 = load i8, i8* %16, align 8
  %18 = and i8 %17, 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %31, label %20

20:                                               ; preds = %14
  %21 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject30NextInPreOrderIncludingIgnoredEPKS0_(%"class.blink::AXObject"* nonnull %15, %"class.blink::AXObject"* %7)
  %22 = icmp eq %"class.blink::AXObject"* %21, null
  br i1 %22, label %31, label %14

23:                                               ; preds = %11
  %24 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject26ParentObjectIncludedInTreeEv(%"class.blink::AXObject"* nonnull %9)
  %25 = icmp eq %"class.blink::AXObject"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %23
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* nonnull %24, i1 zeroext true) #22
  %27 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %24, i64 0, i32 9
  %28 = load i8, i8* %27, align 8
  %29 = and i8 %28, 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %8

31:                                               ; preds = %23, %8, %26, %20, %14, %1
  %32 = phi %"class.blink::AXObject"* [ null, %1 ], [ null, %20 ], [ %15, %14 ], [ null, %26 ], [ null, %8 ], [ null, %23 ]
  ret %"class.blink::AXObject"* %32
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject24UnignoredPreviousSiblingEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true) #22
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %31

6:                                                ; preds = %1, %26
  %7 = phi %"class.blink::AXObject"* [ %24, %26 ], [ %0, %1 ]
  %8 = icmp eq %"class.blink::AXObject"* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %6
  %10 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject31PreviousSiblingIncludingIgnoredEv(%"class.blink::AXObject"* nonnull %7)
  %11 = icmp eq %"class.blink::AXObject"* %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %9
  %13 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* %0)
  br label %14

14:                                               ; preds = %12, %20
  %15 = phi %"class.blink::AXObject"* [ %21, %20 ], [ %10, %12 ]
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* nonnull %15, i1 zeroext true) #22
  %16 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %15, i64 0, i32 9
  %17 = load i8, i8* %16, align 8
  %18 = and i8 %17, 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %31, label %20

20:                                               ; preds = %14
  %21 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject35PreviousInPostOrderIncludingIgnoredEPKS0_(%"class.blink::AXObject"* nonnull %15, %"class.blink::AXObject"* %13)
  %22 = icmp eq %"class.blink::AXObject"* %21, null
  br i1 %22, label %31, label %14

23:                                               ; preds = %9
  %24 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject26ParentObjectIncludedInTreeEv(%"class.blink::AXObject"* nonnull %7)
  %25 = icmp eq %"class.blink::AXObject"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %23
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* nonnull %24, i1 zeroext true) #22
  %27 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %24, i64 0, i32 9
  %28 = load i8, i8* %27, align 8
  %29 = and i8 %28, 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %6

31:                                               ; preds = %23, %6, %26, %20, %14, %1
  %32 = phi %"class.blink::AXObject"* [ null, %1 ], [ null, %20 ], [ %15, %14 ], [ null, %26 ], [ null, %6 ], [ null, %23 ]
  ret %"class.blink::AXObject"* %32
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject23UnignoredNextInPreOrderEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject30NextInPreOrderIncludingIgnoredEPKS0_(%"class.blink::AXObject"* %0, %"class.blink::AXObject"* null)
  %3 = icmp eq %"class.blink::AXObject"* %2, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %1, %10
  %5 = phi %"class.blink::AXObject"* [ %11, %10 ], [ %2, %1 ]
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* nonnull %5, i1 zeroext true) #22
  %6 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %5, i64 0, i32 9
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject30NextInPreOrderIncludingIgnoredEPKS0_(%"class.blink::AXObject"* nonnull %5, %"class.blink::AXObject"* null)
  %12 = icmp eq %"class.blink::AXObject"* %11, null
  br i1 %12, label %13, label %4

13:                                               ; preds = %10, %4, %1
  %14 = phi %"class.blink::AXObject"* [ null, %1 ], [ %5, %4 ], [ null, %10 ]
  ret %"class.blink::AXObject"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject27UnignoredPreviousInPreOrderEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject34PreviousInPreOrderIncludingIgnoredEPKS0_(%"class.blink::AXObject"* %0, %"class.blink::AXObject"* null)
  %3 = icmp eq %"class.blink::AXObject"* %2, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %1, %10
  %5 = phi %"class.blink::AXObject"* [ %11, %10 ], [ %2, %1 ]
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* nonnull %5, i1 zeroext true) #22
  %6 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %5, i64 0, i32 9
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject34PreviousInPreOrderIncludingIgnoredEPKS0_(%"class.blink::AXObject"* nonnull %5, %"class.blink::AXObject"* null)
  %12 = icmp eq %"class.blink::AXObject"* %11, null
  br i1 %12, label %13, label %4

13:                                               ; preds = %10, %4, %1
  %14 = phi %"class.blink::AXObject"* [ null, %1 ], [ %5, %4 ], [ null, %10 ]
  ret %"class.blink::AXObject"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject17IsContainerWidgetEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui33IsContainerWithSelectableChildrenEN2ax5mojom4RoleE(i32 %3) #22
  ret i1 %4
}

declare zeroext i1 @_ZN2ui33IsContainerWithSelectableChildrenEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject15ContainerWidgetEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* %0)
  %3 = icmp eq %"class.blink::AXObject"* %2, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %1, %9
  %5 = phi %"class.blink::AXObject"* [ %10, %9 ], [ %2, %1 ]
  %6 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %5, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = tail call zeroext i1 @_ZN2ui33IsContainerWithSelectableChildrenEN2ax5mojom4RoleE(i32 %7) #22
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* nonnull %5)
  %11 = icmp eq %"class.blink::AXObject"* %10, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %9, %4, %1
  %13 = phi %"class.blink::AXObject"* [ null, %1 ], [ %5, %4 ], [ null, %9 ]
  ret %"class.blink::AXObject"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject41ShouldUseLayoutObjectTraversalForChildrenEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %3, i64 124
  %5 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::Node"* %5(%"class.blink::AXObject"* %0) #22
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %19, label %8

8:                                                ; preds = %1
  %9 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %10 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %9, i64 124
  %11 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %10, align 8
  %12 = tail call %"class.blink::Node"* %11(%"class.blink::AXObject"* %0) #22
  %13 = bitcast %"class.blink::Node"* %12 to i8 (%"class.blink::Node"*)***
  %14 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %13, align 8
  %15 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %14, i64 34
  %16 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %15, align 8
  %17 = tail call zeroext i8 %16(%"class.blink::Node"* %12) #22
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %33

19:                                               ; preds = %8, %1
  %20 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %21 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %20, i64 124
  %22 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %21, align 8
  %23 = tail call %"class.blink::Node"* %22(%"class.blink::AXObject"* %0) #22
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %25, label %32

25:                                               ; preds = %19
  %26 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %27 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %26, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %27, i64 125
  %29 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %28, align 8
  %30 = tail call %"class.blink::LayoutObject"* %29(%"class.blink::AXObject"* %0) #22
  %31 = icmp eq %"class.blink::LayoutObject"* %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %25, %19
  br label %33

33:                                               ; preds = %8, %25, %32
  %34 = phi i1 [ false, %32 ], [ true, %8 ], [ true, %25 ]
  ret i1 %34
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject21NeedsToUpdateChildrenEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8AXObject13ClearChildrenEv(%"class.blink::AXObject"*) unnamed_addr #2 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = load i8, i8* @_ZN5blink8AXObject24is_loading_inline_boxes_E, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %30, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #22
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 4200, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #22
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #22
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %8, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.15, i64 0, i64 0), i64 70) #22
  %10 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #22
  %11 = call %"class.WTF::StringImpl"* @_ZNK5blink8AXObject8ToStringEbb(%"class.blink::AXObject"* %0, i1 zeroext true, i1 zeroext true)
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3WTFlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6StringE(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, %"class.WTF::String"* nonnull dereferenceable(8) %3) #22
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #22
  br label %29

29:                                               ; preds = %6, %25, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #22
  br label %30

30:                                               ; preds = %1, %29
  %31 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 3, i32 0
  %32 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %33, i64 %36
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %64, label %39

39:                                               ; preds = %30
  %40 = shl nuw nsw i64 %36, 3
  %41 = add nsw i64 %40, -8
  %42 = lshr exact i64 %41, 3
  %43 = add nuw nsw i64 %42, 1
  %44 = and i64 %43, 3
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %61, label %46

46:                                               ; preds = %39, %57
  %47 = phi %"class.blink::Member.3082"* [ %58, %57 ], [ %33, %39 ]
  %48 = phi i64 [ %59, %57 ], [ %44, %39 ]
  %49 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %47, i64 0, i32 0, i32 0
  %50 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %50, i64 0, i32 2, i32 0, i32 0
  %52 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %51, align 8
  %53 = icmp eq %"class.blink::AXObject"* %52, %0
  br i1 %53, label %54, label %57

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %50, i64 0, i32 2
  %56 = bitcast %"class.blink::Member.3082"* %55 to i64*
  store atomic i64 0, i64* %56 monotonic, align 8
  br label %57

57:                                               ; preds = %54, %46
  %58 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %47, i64 1
  %59 = add i64 %48, -1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %46, !llvm.loop !36

61:                                               ; preds = %57, %39
  %62 = phi %"class.blink::Member.3082"* [ %33, %39 ], [ %58, %57 ]
  %63 = icmp ult i64 %41, 24
  br i1 %63, label %64, label %86

64:                                               ; preds = %61, %255, %30
  %65 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %64
  %69 = load i32, i32* %34, align 4
  %70 = icmp eq i32 %69, 0
  %71 = bitcast %"class.WTF::Vector.3087"* %31 to i8**
  br i1 %70, label %76, label %72

72:                                               ; preds = %68
  %73 = load i8*, i8** %71, align 8
  %74 = zext i32 %69 to i64
  %75 = shl nuw nsw i64 %74, 3
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %73, i64 %75) #22
  store i32 0, i32* %34, align 4
  br label %76

76:                                               ; preds = %72, %68
  %77 = load i8*, i8** %71, align 8
  %78 = bitcast %"class.WTF::Vector.3087"* %31 to i64*
  store atomic i64 0, i64* %78 monotonic, align 8
  store i32 0, i32* %65, align 8
  call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %77) #22
  br label %79

79:                                               ; preds = %64, %76
  %80 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %81 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %80, align 8
  %82 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %81, i64 124
  %83 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %82, align 8
  %84 = call %"class.blink::Node"* %83(%"class.blink::AXObject"* %0) #22
  %85 = icmp eq %"class.blink::Node"* %84, null
  br i1 %85, label %233, label %102

86:                                               ; preds = %61, %255
  %87 = phi %"class.blink::Member.3082"* [ %256, %255 ], [ %62, %61 ]
  %88 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %87, i64 0, i32 0, i32 0
  %89 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %89, i64 0, i32 2, i32 0, i32 0
  %91 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %90, align 8
  %92 = icmp eq %"class.blink::AXObject"* %91, %0
  br i1 %92, label %93, label %96

93:                                               ; preds = %86
  %94 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %89, i64 0, i32 2
  %95 = bitcast %"class.blink::Member.3082"* %94 to i64*
  store atomic i64 0, i64* %95 monotonic, align 8
  br label %96

96:                                               ; preds = %93, %86
  %97 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %87, i64 1, i32 0, i32 0
  %98 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %98, i64 0, i32 2, i32 0, i32 0
  %100 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %99, align 8
  %101 = icmp eq %"class.blink::AXObject"* %100, %0
  br i1 %101, label %234, label %237

102:                                              ; preds = %79
  %103 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %104 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %103, align 8
  %105 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %104, i64 126
  %106 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %105, align 8
  %107 = call %"class.blink::Document"* %106(%"class.blink::AXObject"* %0) #22
  %108 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %107, i64 0, i32 150
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %233

111:                                              ; preds = %102
  %112 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %84, i64 0, i32 1
  %113 = load i32, i32* %112, align 8
  %114 = and i32 %113, 48
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %212

116:                                              ; preds = %111
  %117 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE, align 8
  %118 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %117, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %84, i64 1, i32 2
  %121 = bitcast %"class.blink::Member.318"* %120 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %122 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %122, i64 0, i32 3, i32 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %119, i64 0, i32 3, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp ne %"class.WTF::StringImpl"* %124, %126
  %128 = and i32 %113, 512
  %129 = icmp eq i32 %128, 0
  %130 = or i1 %127, %129
  br i1 %130, label %131, label %233

131:                                              ; preds = %116
  %132 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %133 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %132, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %84, i64 1, i32 2
  %136 = bitcast %"class.blink::Member.318"* %135 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %137 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %137, i64 0, i32 3, i32 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %134, i64 0, i32 3, i32 0, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %139, %141
  br i1 %142, label %143, label %212

143:                                              ; preds = %131
  %144 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %103, align 8
  %145 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %144, i64 126
  %146 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %145, align 8
  %147 = call %"class.blink::Document"* %146(%"class.blink::AXObject"* %0) #22
  %148 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %147, i64 0, i32 1
  %149 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kUsemapAttrE, align 8
  %150 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %84, i64 1, i32 3
  %151 = bitcast %"class.blink::Member.320"* %150 to %"class.blink::ElementData"**
  %152 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %151, align 8
  %153 = icmp eq %"class.blink::ElementData"* %152, null
  br i1 %153, label %204, label %154

154:                                              ; preds = %143
  %155 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %152, i64 0, i32 0, i32 0, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = and i32 %156, 1
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %166, label %159

159:                                              ; preds = %154
  %160 = bitcast %"class.blink::ElementData"* %152 to %"class.blink::UniqueElementData"*
  %161 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %152, i64 1, i32 1
  %162 = bitcast %"class.blink::Member.354"* %161 to %"class.blink::Attribute"**
  %163 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %162, align 8
  %164 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %160, i64 0, i32 2, i32 0, i32 0, i32 2
  %165 = load i32, i32* %164, align 4
  br label %171

166:                                              ; preds = %154
  %167 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %152, i64 1
  %168 = bitcast %"class.blink::ElementData"* %167 to %"class.blink::Attribute"*
  %169 = lshr i32 %156, 1
  %170 = and i32 %169, 268435455
  br label %171

171:                                              ; preds = %166, %159
  %172 = phi %"class.blink::Attribute"* [ %168, %166 ], [ %163, %159 ]
  %173 = phi i32 [ %170, %166 ], [ %165, %159 ]
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %172, i64 %174
  %176 = icmp eq i32 %173, 0
  br i1 %176, label %204, label %177

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %149, i64 0, i32 0, i32 0
  %179 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %178, align 8
  %180 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %179, i64 0, i32 3, i32 0, i32 0, i32 0
  %181 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %179, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %182

182:                                              ; preds = %197, %177
  %183 = phi %"class.blink::Attribute"* [ %172, %177 ], [ %198, %197 ]
  %184 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %183, i64 0, i32 0, i32 0, i32 0
  %185 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %184, align 8
  %186 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %185, %179
  br i1 %186, label %200, label %187

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %185, i64 0, i32 3, i32 0, i32 0, i32 0
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %188, align 8
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %180, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %189, %190
  br i1 %191, label %192, label %197

192:                                              ; preds = %187
  %193 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %185, i64 0, i32 4, i32 0, i32 0, i32 0
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %193, align 8
  %195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  %196 = icmp eq %"class.WTF::StringImpl"* %194, %195
  br i1 %196, label %200, label %197

197:                                              ; preds = %192, %187
  %198 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %183, i64 1
  %199 = icmp eq %"class.blink::Attribute"* %198, %175
  br i1 %199, label %204, label %182

200:                                              ; preds = %192, %182
  %201 = icmp eq %"class.blink::Attribute"* %183, null
  br i1 %201, label %204, label %202

202:                                              ; preds = %200
  %203 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %183, i64 0, i32 1
  br label %206

204:                                              ; preds = %197, %200, %171, %143
  %205 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %206

206:                                              ; preds = %202, %204
  %207 = phi %"class.WTF::AtomicString"* [ %205, %204 ], [ %203, %202 ]
  %208 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %207, i64 0, i32 0
  %209 = call %"class.blink::HTMLMapElement"* @_ZNK5blink9TreeScope11GetImageMapERKN3WTF6StringE(%"class.blink::TreeScope"* %148, %"class.WTF::String"* dereferenceable(8) %208) #22
  %210 = getelementptr inbounds %"class.blink::HTMLMapElement", %"class.blink::HTMLMapElement"* %209, i64 0, i32 0, i32 0, i32 0, i32 0
  %211 = icmp eq %"class.blink::HTMLMapElement"* %209, null
  br i1 %211, label %233, label %212

212:                                              ; preds = %111, %131, %206
  %213 = phi %"class.blink::Node"* [ %210, %206 ], [ %84, %131 ], [ %84, %111 ]
  %214 = call %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal10FirstChildERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %213) #22
  %215 = icmp eq %"class.blink::Node"* %214, null
  br i1 %215, label %233, label %216

216:                                              ; preds = %212
  %217 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  br label %218

218:                                              ; preds = %216, %230
  %219 = phi %"class.blink::Node"* [ %214, %216 ], [ %231, %230 ]
  %220 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %217, align 8
  %221 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl3GetEPKNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %220, %"class.blink::Node"* nonnull %219) #22
  %222 = icmp eq %"class.blink::AXObject"* %221, null
  br i1 %222, label %230, label %223

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %221, i64 0, i32 2, i32 0, i32 0
  %225 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %224, align 8
  %226 = icmp eq %"class.blink::AXObject"* %225, %0
  br i1 %226, label %227, label %230

227:                                              ; preds = %223
  %228 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %221, i64 0, i32 2
  %229 = bitcast %"class.blink::Member.3082"* %228 to i64*
  store atomic i64 0, i64* %229 monotonic, align 8
  br label %230

230:                                              ; preds = %218, %227, %223
  %231 = call %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal11NextSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %219) #22
  %232 = icmp eq %"class.blink::Node"* %231, null
  br i1 %232, label %233, label %218

233:                                              ; preds = %230, %116, %212, %102, %206, %79
  ret void

234:                                              ; preds = %96
  %235 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %98, i64 0, i32 2
  %236 = bitcast %"class.blink::Member.3082"* %235 to i64*
  store atomic i64 0, i64* %236 monotonic, align 8
  br label %237

237:                                              ; preds = %234, %96
  %238 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %87, i64 2, i32 0, i32 0
  %239 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %238, align 8
  %240 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %239, i64 0, i32 2, i32 0, i32 0
  %241 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %240, align 8
  %242 = icmp eq %"class.blink::AXObject"* %241, %0
  br i1 %242, label %243, label %246

243:                                              ; preds = %237
  %244 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %239, i64 0, i32 2
  %245 = bitcast %"class.blink::Member.3082"* %244 to i64*
  store atomic i64 0, i64* %245 monotonic, align 8
  br label %246

246:                                              ; preds = %243, %237
  %247 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %87, i64 3, i32 0, i32 0
  %248 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %247, align 8
  %249 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %248, i64 0, i32 2, i32 0, i32 0
  %250 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %249, align 8
  %251 = icmp eq %"class.blink::AXObject"* %250, %0
  br i1 %251, label %252, label %255

252:                                              ; preds = %246
  %253 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %248, i64 0, i32 2
  %254 = bitcast %"class.blink::Member.3082"* %253 to i64*
  store atomic i64 0, i64* %254 monotonic, align 8
  br label %255

255:                                              ; preds = %252, %246
  %256 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %87, i64 4
  %257 = icmp eq %"class.blink::Member.3082"* %256, %37
  br i1 %257, label %64, label %86
}

declare %"class.blink::HTMLMapElement"* @_ZNK5blink9TreeScope11GetImageMapERKN3WTF6StringE(%"class.blink::TreeScope"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #6

declare %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal10FirstChildERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #6

declare %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl3GetEPKNS_4NodeE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*) local_unnamed_addr #6

declare %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal11NextSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.blink::Node"* @_ZNK5blink8AXObject7GetNodeEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret %"class.blink::Node"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.blink::LayoutObject"* @_ZNK5blink8AXObject15GetLayoutObjectEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret %"class.blink::LayoutObject"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject12RootScrollerEv(%"class.blink::AXObject"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %3, i64 126
  %5 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::Document"* %5(%"class.blink::AXObject"* %0) #22
  %7 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %6) #22
  %8 = tail call dereferenceable(24) %"class.blink::TopDocumentRootScrollerController"* @_ZNK5blink4Page28GlobalRootScrollerControllerEv(%"class.blink::Page"* %7) #22
  %9 = tail call %"class.blink::Node"* @_ZNK5blink33TopDocumentRootScrollerController18GlobalRootScrollerEv(%"class.blink::TopDocumentRootScrollerController"* %8) #22
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %25, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  %16 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %2, align 8
  %17 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %16, i64 126
  %18 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %17, align 8
  %19 = tail call %"class.blink::Document"* %18(%"class.blink::AXObject"* %0) #22
  %20 = icmp eq %"class.blink::Document"* %15, %19
  br i1 %20, label %21, label %25

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %23 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %22, align 8
  %24 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %23, %"class.blink::Node"* nonnull %9) #22
  br label %25

25:                                               ; preds = %11, %1, %21
  %26 = phi %"class.blink::AXObject"* [ %24, %21 ], [ null, %1 ], [ null, %11 ]
  ret %"class.blink::AXObject"* %26
}

declare dereferenceable(24) %"class.blink::TopDocumentRootScrollerController"* @_ZNK5blink4Page28GlobalRootScrollerControllerEv(%"class.blink::Page"*) local_unnamed_addr #6

declare %"class.blink::Node"* @_ZNK5blink33TopDocumentRootScrollerController18GlobalRootScrollerEv(%"class.blink::TopDocumentRootScrollerController"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LocalFrameView"* @_ZNK5blink8AXObject17DocumentFrameViewEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %3, i64 126
  %5 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::Document"* %5(%"class.blink::AXObject"* %0) #22
  %7 = icmp eq %"class.blink::Document"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* nonnull %6) #22
  br label %10

10:                                               ; preds = %1, %8
  %11 = phi %"class.blink::LocalFrameView"* [ %9, %8 ], [ null, %1 ]
  ret %"class.blink::LocalFrameView"* %11
}

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject8LanguageEv(%"class.blink::AXObject"*) unnamed_addr #2 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::Vector.630", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::Vector.630", align 8
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kLangAttrE, align 8
  %7 = bitcast %"class.blink::AXObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)***
  %8 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)** %8, i64 131
  %10 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)** %9, align 8
  %11 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %10(%"class.blink::AXObject"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %6) #22
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %37, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %37, label %19

19:                                               ; preds = %15
  %20 = ptrtoint %"class.WTF::StringImpl"* %13 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %356

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i33
  %29 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %28, i33 1) #22
  %30 = extractvalue { i33, i1 } %29, 1
  %31 = extractvalue { i33, i1 } %29, 0
  %32 = icmp slt i33 %31, 0
  %33 = or i1 %30, %32
  br i1 %33, label %34, label %35, !prof !3

34:                                               ; preds = %25
  tail call void @llvm.trap() #22
  unreachable

35:                                               ; preds = %25
  %36 = trunc i33 %31 to i32
  store i32 %36, i32* %26, align 4
  br label %356

37:                                               ; preds = %1, %15
  %38 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 145
  br i1 %40, label %41, label %333

41:                                               ; preds = %37
  %42 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %43 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %42, align 8
  %44 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %43, i64 126
  %45 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %44, align 8
  %46 = tail call %"class.blink::Document"* %45(%"class.blink::AXObject"* %0) #22
  %47 = icmp eq %"class.blink::Document"* %46, null
  br i1 %47, label %330, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %46, i64 0, i32 94, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %194, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #22
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %71

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = zext i32 %61 to i33
  %63 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %62, i33 1) #22
  %64 = extractvalue { i33, i1 } %63, 1
  %65 = extractvalue { i33, i1 } %63, 0
  %66 = icmp slt i33 %65, 0
  %67 = or i1 %64, %66
  br i1 %67, label %68, label %69, !prof !3

68:                                               ; preds = %59
  tail call void @llvm.trap() #22
  unreachable

69:                                               ; preds = %59
  %70 = trunc i33 %65 to i32
  store i32 %70, i32* %60, align 4
  br label %71

71:                                               ; preds = %52, %69
  %72 = bitcast %"class.WTF::Vector.630"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #22
  %73 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %3, i64 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 0, i64 16, i1 false) #22
  call void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* nonnull %2, i16 zeroext 44, i1 zeroext false, %"class.WTF::Vector.630"* nonnull dereferenceable(16) %3) #22
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %172, label %77

77:                                               ; preds = %71
  %78 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"* nonnull %3, i32 0) #22
  %79 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* %78) #22
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %118, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 acquire, align 4
  %84 = and i32 %83, 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %102, label %86

86:                                               ; preds = %81
  %87 = load atomic i32, i32* %82 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %104

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i33
  %94 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %93, i33 1) #22
  %95 = extractvalue { i33, i1 } %94, 1
  %96 = extractvalue { i33, i1 } %94, 0
  %97 = icmp slt i33 %96, 0
  %98 = or i1 %95, %97
  br i1 %98, label %99, label %100, !prof !3

99:                                               ; preds = %90
  call void @llvm.trap() #22
  unreachable

100:                                              ; preds = %90
  %101 = trunc i33 %96 to i32
  store i32 %101, i32* %91, align 4
  br label %104

102:                                              ; preds = %81
  %103 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %79) #22
  br label %104

104:                                              ; preds = %86, %100, %102
  %105 = phi %"class.WTF::StringImpl"* [ %79, %100 ], [ %79, %86 ], [ %103, %102 ]
  %106 = ptrtoint %"class.WTF::StringImpl"* %105 to i64
  %107 = load atomic i32, i32* %82 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %104
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %104
  %115 = phi i32 [ %113, %112 ], [ %111, %104 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #22
  br label %118

118:                                              ; preds = %77, %114, %117
  %119 = phi i64 [ %106, %114 ], [ %106, %117 ], [ 0, %77 ]
  %120 = load %"class.WTF::String"*, %"class.WTF::String"** %73, align 8
  %121 = icmp eq %"class.WTF::String"* %120, null
  br i1 %121, label %155, label %122, !prof !19

122:                                              ; preds = %118
  %123 = bitcast %"class.WTF::String"* %120 to i8*
  %124 = load i32, i32* %74, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %153, label %126, !prof !3

126:                                              ; preds = %122
  %127 = zext i32 %124 to i64
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %120, i64 %127
  br label %129

129:                                              ; preds = %147, %126
  %130 = phi %"class.WTF::String"* [ %148, %147 ], [ %120, %126 ]
  %131 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %130, i64 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #22
  br label %147

147:                                              ; preds = %146, %143, %129
  %148 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %130, i64 1
  %149 = icmp eq %"class.WTF::String"* %148, %128
  br i1 %149, label %150, label %129

150:                                              ; preds = %147
  store i32 0, i32* %74, align 4
  %151 = bitcast %"class.WTF::Vector.630"* %3 to i8**
  %152 = load i8*, i8** %151, align 8
  br label %153

153:                                              ; preds = %150, %122
  %154 = phi i8* [ %152, %150 ], [ %123, %122 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %154) #22
  store %"class.WTF::String"* null, %"class.WTF::String"** %73, align 8
  br label %155

155:                                              ; preds = %118, %153
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #22
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #22
  br label %171

171:                                              ; preds = %155, %167, %170
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #22
  br label %356

172:                                              ; preds = %71
  %173 = load %"class.WTF::String"*, %"class.WTF::String"** %73, align 8
  %174 = icmp eq %"class.WTF::String"* %173, null
  br i1 %174, label %177, label %175, !prof !19

175:                                              ; preds = %172
  %176 = bitcast %"class.WTF::String"* %173 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %176) #22
  store %"class.WTF::String"* null, %"class.WTF::String"** %73, align 8
  br label %177

177:                                              ; preds = %172, %175
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #22
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %193, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %189

187:                                              ; preds = %180
  %188 = add i32 %186, -1
  store i32 %188, i32* %185, align 4
  br label %189

189:                                              ; preds = %187, %180
  %190 = phi i32 [ %188, %187 ], [ %186, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #22
  br label %193

193:                                              ; preds = %177, %189, %192
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #22
  br label %194

194:                                              ; preds = %48, %193
  %195 = call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* nonnull %46) #22
  %196 = icmp eq %"class.blink::Page"* %195, null
  br i1 %196, label %330, label %197

197:                                              ; preds = %194
  %198 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #22
  %199 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %199, align 8
  %200 = call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* nonnull %46) #22
  %201 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %200, i64 0, i32 7, i32 0, i32 0
  %202 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %201, align 8
  %203 = bitcast %"class.blink::ChromeClient"* %202 to %"class.WTF::StringImpl"* (%"class.blink::ChromeClient"*)***
  %204 = load %"class.WTF::StringImpl"* (%"class.blink::ChromeClient"*)**, %"class.WTF::StringImpl"* (%"class.blink::ChromeClient"*)*** %203, align 8
  %205 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ChromeClient"*)*, %"class.WTF::StringImpl"* (%"class.blink::ChromeClient"*)** %204, i64 80
  %206 = load %"class.WTF::StringImpl"* (%"class.blink::ChromeClient"*)*, %"class.WTF::StringImpl"* (%"class.blink::ChromeClient"*)** %205, align 8
  %207 = call %"class.WTF::StringImpl"* %206(%"class.blink::ChromeClient"* %202) #22
  store %"class.WTF::StringImpl"* %207, %"class.WTF::StringImpl"** %199, align 8
  %208 = bitcast %"class.WTF::Vector.630"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %208) #22
  %209 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %5, i64 0, i32 0, i32 0, i32 0
  %210 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %208, i8 0, i64 16, i1 false) #22
  call void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* nonnull %4, i16 zeroext 44, i1 zeroext false, %"class.WTF::Vector.630"* nonnull dereferenceable(16) %5) #22
  %211 = load i32, i32* %210, align 4
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %308, label %213

213:                                              ; preds = %197
  %214 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"* nonnull %5, i32 0) #22
  %215 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* %214) #22
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %254, label %217

217:                                              ; preds = %213
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 acquire, align 4
  %220 = and i32 %219, 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %238, label %222

222:                                              ; preds = %217
  %223 = load atomic i32, i32* %218 monotonic, align 4
  %224 = and i32 %223, 2
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %240

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %228 = load i32, i32* %227, align 4
  %229 = zext i32 %228 to i33
  %230 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %229, i33 1) #22
  %231 = extractvalue { i33, i1 } %230, 1
  %232 = extractvalue { i33, i1 } %230, 0
  %233 = icmp slt i33 %232, 0
  %234 = or i1 %231, %233
  br i1 %234, label %235, label %236, !prof !3

235:                                              ; preds = %226
  call void @llvm.trap() #22
  unreachable

236:                                              ; preds = %226
  %237 = trunc i33 %232 to i32
  store i32 %237, i32* %227, align 4
  br label %240

238:                                              ; preds = %217
  %239 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %215) #22
  br label %240

240:                                              ; preds = %222, %236, %238
  %241 = phi %"class.WTF::StringImpl"* [ %215, %236 ], [ %215, %222 ], [ %239, %238 ]
  %242 = ptrtoint %"class.WTF::StringImpl"* %241 to i64
  %243 = load atomic i32, i32* %218 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %247 = load i32, i32* %246, align 4
  br i1 %245, label %248, label %250

248:                                              ; preds = %240
  %249 = add i32 %247, -1
  store i32 %249, i32* %246, align 4
  br label %250

250:                                              ; preds = %248, %240
  %251 = phi i32 [ %249, %248 ], [ %247, %240 ]
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %250
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #22
  br label %254

254:                                              ; preds = %213, %250, %253
  %255 = phi i64 [ %242, %250 ], [ %242, %253 ], [ 0, %213 ]
  %256 = load %"class.WTF::String"*, %"class.WTF::String"** %209, align 8
  %257 = icmp eq %"class.WTF::String"* %256, null
  br i1 %257, label %291, label %258, !prof !19

258:                                              ; preds = %254
  %259 = bitcast %"class.WTF::String"* %256 to i8*
  %260 = load i32, i32* %210, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %289, label %262, !prof !3

262:                                              ; preds = %258
  %263 = zext i32 %260 to i64
  %264 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %256, i64 %263
  br label %265

265:                                              ; preds = %283, %262
  %266 = phi %"class.WTF::String"* [ %284, %283 ], [ %256, %262 ]
  %267 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %266, i64 0, i32 0, i32 0
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %267, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %283, label %270

270:                                              ; preds = %265
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  br i1 %274, label %277, label %279

277:                                              ; preds = %270
  %278 = add i32 %276, -1
  store i32 %278, i32* %275, align 4
  br label %279

279:                                              ; preds = %277, %270
  %280 = phi i32 [ %278, %277 ], [ %276, %270 ]
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %279
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %268) #22
  br label %283

283:                                              ; preds = %282, %279, %265
  %284 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %266, i64 1
  %285 = icmp eq %"class.WTF::String"* %284, %264
  br i1 %285, label %286, label %265

286:                                              ; preds = %283
  store i32 0, i32* %210, align 4
  %287 = bitcast %"class.WTF::Vector.630"* %5 to i8**
  %288 = load i8*, i8** %287, align 8
  br label %289

289:                                              ; preds = %286, %258
  %290 = phi i8* [ %288, %286 ], [ %259, %258 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %290) #22
  store %"class.WTF::String"* null, %"class.WTF::String"** %209, align 8
  br label %291

291:                                              ; preds = %254, %289
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %208) #22
  %292 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %199, align 8
  %293 = icmp eq %"class.WTF::StringImpl"* %292, null
  br i1 %293, label %307, label %294

294:                                              ; preds = %291
  %295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %296 = load atomic i32, i32* %295 monotonic, align 4
  %297 = and i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 0
  %300 = load i32, i32* %299, align 4
  br i1 %298, label %301, label %303

301:                                              ; preds = %294
  %302 = add i32 %300, -1
  store i32 %302, i32* %299, align 4
  br label %303

303:                                              ; preds = %301, %294
  %304 = phi i32 [ %302, %301 ], [ %300, %294 ]
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %307

306:                                              ; preds = %303
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %292) #22
  br label %307

307:                                              ; preds = %291, %303, %306
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #22
  br label %356

308:                                              ; preds = %197
  %309 = load %"class.WTF::String"*, %"class.WTF::String"** %209, align 8
  %310 = icmp eq %"class.WTF::String"* %309, null
  br i1 %310, label %313, label %311, !prof !19

311:                                              ; preds = %308
  %312 = bitcast %"class.WTF::String"* %309 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %312) #22
  store %"class.WTF::String"* null, %"class.WTF::String"** %209, align 8
  br label %313

313:                                              ; preds = %308, %311
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %208) #22
  %314 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %199, align 8
  %315 = icmp eq %"class.WTF::StringImpl"* %314, null
  br i1 %315, label %329, label %316

316:                                              ; preds = %313
  %317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %314, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %318 = load atomic i32, i32* %317 monotonic, align 4
  %319 = and i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %314, i64 0, i32 0
  %322 = load i32, i32* %321, align 4
  br i1 %320, label %323, label %325

323:                                              ; preds = %316
  %324 = add i32 %322, -1
  store i32 %324, i32* %321, align 4
  br label %325

325:                                              ; preds = %323, %316
  %326 = phi i32 [ %324, %323 ], [ %322, %316 ]
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %329

328:                                              ; preds = %325
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %314) #22
  br label %329

329:                                              ; preds = %313, %325, %328
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #22
  br label %330

330:                                              ; preds = %41, %194, %329
  %331 = call %"class.WTF::StringImpl"* @_ZN5blink15DefaultLanguageEv() #22
  %332 = ptrtoint %"class.WTF::StringImpl"* %331 to i64
  br label %356

333:                                              ; preds = %37
  %334 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %335 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %334, i64 0, i32 0, i32 0, i32 0
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %335, align 8
  %337 = ptrtoint %"class.WTF::StringImpl"* %336 to i64
  %338 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %338, label %356, label %339

339:                                              ; preds = %333
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %341 = load atomic i32, i32* %340 monotonic, align 4
  %342 = and i32 %341, 2
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %344, label %356

344:                                              ; preds = %339
  %345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %346 = load i32, i32* %345, align 4
  %347 = zext i32 %346 to i33
  %348 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %347, i33 1) #22
  %349 = extractvalue { i33, i1 } %348, 1
  %350 = extractvalue { i33, i1 } %348, 0
  %351 = icmp slt i33 %350, 0
  %352 = or i1 %349, %351
  br i1 %352, label %353, label %354, !prof !3

353:                                              ; preds = %344
  tail call void @llvm.trap() #22
  unreachable

354:                                              ; preds = %344
  %355 = trunc i33 %350 to i32
  store i32 %355, i32* %345, align 4
  br label %356

356:                                              ; preds = %354, %339, %333, %35, %19, %330, %171, %307
  %357 = phi i64 [ %332, %330 ], [ %255, %307 ], [ %119, %171 ], [ %20, %19 ], [ %20, %35 ], [ %337, %333 ], [ %337, %339 ], [ %337, %354 ]
  %358 = inttoptr i64 %357 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %358
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"*) local_unnamed_addr #6

declare %"class.WTF::StringImpl"* @_ZN5blink15DefaultLanguageEv() local_unnamed_addr #6

declare zeroext i1 @_ZNK5blink9LayoutBox33CanBeScrolledAndHasScrollableAreaEv(%"class.blink::LayoutBox"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8AXObject15SetScrollOffsetERKNS_8IntPointE(%"class.blink::AXObject"*, %"class.blink::IntPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::FloatSize", align 4
  %4 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)***
  %5 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)**, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %5, i64 144
  %7 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %6, align 8
  %8 = tail call %"class.blink::ScrollableArea"* %7(%"class.blink::AXObject"* %0) #22
  %9 = icmp eq %"class.blink::ScrollableArea"* %8, null
  br i1 %9, label %24, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::FloatSize"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #22
  %12 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sitofp i32 %13 to float
  %15 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = sitofp i32 %16 to float
  %18 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %3, i64 0, i32 0
  store float %14, float* %18, align 4
  %19 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %3, i64 0, i32 1
  store float %17, float* %19, align 4
  %20 = bitcast %"class.blink::ScrollableArea"* %8 to void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)***
  %21 = load void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)**, void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)*, void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)** %21, i64 5
  %23 = load void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)*, void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)** %22, align 8
  call void %23(%"class.blink::ScrollableArea"* nonnull %8, %"class.blink::FloatSize"* nonnull dereferenceable(8) %3, i32 1, i32 1) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #22
  br label %24

24:                                               ; preds = %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject15IsTableLikeRoleEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %3) #22
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4
  %7 = icmp eq i32 %6, 106
  br label %8

8:                                                ; preds = %5, %1
  %9 = phi i1 [ true, %1 ], [ %7, %5 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject18IsTableRowLikeRoleEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui10IsTableRowEN2ax5mojom4RoleE(i32 %3) #22
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4
  %7 = icmp eq i32 %6, 108
  br label %8

8:                                                ; preds = %5, %1
  %9 = phi i1 [ true, %1 ], [ %7, %5 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject19IsTableCellLikeRoleEv(%"class.blink::AXObject"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui19IsCellOrTableHeaderEN2ax5mojom4RoleE(i32 %3) #22
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4
  %7 = icmp eq i32 %6, 107
  br label %8

8:                                                ; preds = %5, %1
  %9 = phi i1 [ true, %1 ], [ %7, %5 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8AXObject11ColumnCountEv(%"class.blink::AXObject"*) unnamed_addr #2 align 2 {
  %2 = alloca %"class.blink::HeapVector.3084", align 8
  %3 = alloca %"class.blink::HeapVector.3084", align 8
  %4 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %5) #22
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = load i32, i32* %4, align 4
  %9 = icmp eq i32 %8, 106
  br i1 %9, label %10, label %34

10:                                               ; preds = %1, %7
  %11 = bitcast %"class.blink::HeapVector.3084"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #22
  call void @_ZNK5blink8AXObject16TableRowChildrenEv(%"class.blink::HeapVector.3084"* nonnull sret %2, %"class.blink::AXObject"* %0)
  %12 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %13, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %10
  %20 = bitcast %"class.blink::HeapVector.3084"* %3 to i8*
  %21 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  br label %24

22:                                               ; preds = %24, %10
  %23 = phi i32 [ 0, %10 ], [ %31, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #22
  br label %34

24:                                               ; preds = %19, %24
  %25 = phi %"class.blink::Member.3082"* [ %13, %19 ], [ %32, %24 ]
  %26 = phi i32 [ 0, %19 ], [ %31, %24 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #22
  %27 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %25, i64 0, i32 0, i32 0
  %28 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %27, align 8
  call void @_ZNK5blink8AXObject17TableCellChildrenEv(%"class.blink::HeapVector.3084"* nonnull sret %3, %"class.blink::AXObject"* %28)
  %29 = load i32, i32* %21, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #22
  %30 = icmp ult i32 %29, %26
  %31 = select i1 %30, i32 %26, i32 %29
  %32 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %25, i64 1
  %33 = icmp eq %"class.blink::Member.3082"* %32, %17
  br i1 %33, label %22, label %24

34:                                               ; preds = %7, %22
  %35 = phi i32 [ %23, %22 ], [ 0, %7 ]
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8AXObject16TableRowChildrenEv(%"class.blink::HeapVector.3084"* noalias sret, %"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::HeapVector.3084", align 8
  %4 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.blink::HeapVector.3084"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #22
  %8 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %1, i64 0, i32 4
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::AXObject"* %1 to void (%"class.blink::AXObject"*)***
  %13 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %13, i64 160
  %15 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %14, align 8
  tail call void %15(%"class.blink::AXObject"* %1) #22
  br label %16

16:                                               ; preds = %2, %11
  %17 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %18, i64 %21
  %23 = icmp eq i32 %20, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %0, i64 0, i32 0
  %26 = bitcast %"class.blink::HeapVector.3084"* %3 to i8*
  %27 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  br label %30

29:                                               ; preds = %68, %16
  ret void

30:                                               ; preds = %24, %68
  %31 = phi %"class.blink::Member.3082"* [ %18, %24 ], [ %69, %68 ]
  %32 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %33, i64 0, i32 5
  %35 = load i32, i32* %34, align 4
  %36 = call zeroext i1 @_ZN2ui10IsTableRowEN2ax5mojom4RoleE(i32 %35) #22
  br i1 %36, label %40, label %37

37:                                               ; preds = %30
  %38 = load i32, i32* %34, align 4
  %39 = icmp eq i32 %38, 108
  br i1 %39, label %40, label %60

40:                                               ; preds = %30, %37
  %41 = load i32, i32* %6, align 4
  %42 = load i32, i32* %5, align 8
  %43 = icmp eq i32 %41, %42
  br i1 %43, label %59, label %44, !prof !3

44:                                               ; preds = %40
  %45 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %4, align 8
  %46 = zext i32 %41 to i64
  %47 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %45, i64 %46
  %48 = bitcast %"class.blink::Member.3082"* %31 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.blink::Member.3082"* %47 to i64*
  store atomic i64 %49, i64* %50 monotonic, align 8
  %51 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %44
  %54 = inttoptr i64 %49 to i8*
  %55 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %54) #22
  br label %56

56:                                               ; preds = %53, %44
  %57 = load i32, i32* %6, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %6, align 4
  br label %68

59:                                               ; preds = %40
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.3087"* %25, %"class.blink::Member.3082"* dereferenceable(8) %31) #22
  br label %68

60:                                               ; preds = %37
  %61 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %32, align 8
  %62 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %61, i64 0, i32 5
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 147
  br i1 %64, label %65, label %68

65:                                               ; preds = %60
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #22
  call void @_ZNK5blink8AXObject16TableRowChildrenEv(%"class.blink::HeapVector.3084"* nonnull sret %3, %"class.blink::AXObject"* %61)
  %66 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %27, align 8
  %67 = load i32, i32* %28, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j(%"class.WTF::Vector.3087"* %25, %"class.blink::Member.3082"* %66, i32 %67) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #22
  br label %68

68:                                               ; preds = %59, %56, %60, %65
  %69 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %31, i64 1
  %70 = icmp eq %"class.blink::Member.3082"* %69, %22
  br i1 %70, label %29, label %30
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8AXObject17TableCellChildrenEv(%"class.blink::HeapVector.3084"* noalias sret, %"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::HeapVector.3084", align 8
  %4 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.blink::HeapVector.3084"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #22
  %8 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %1, i64 0, i32 4
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::AXObject"* %1 to void (%"class.blink::AXObject"*)***
  %13 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %13, i64 160
  %15 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %14, align 8
  tail call void %15(%"class.blink::AXObject"* %1) #22
  br label %16

16:                                               ; preds = %2, %11
  %17 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %18, i64 %21
  %23 = icmp eq i32 %20, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %0, i64 0, i32 0
  %26 = bitcast %"class.blink::HeapVector.3084"* %3 to i8*
  %27 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  br label %30

29:                                               ; preds = %68, %16
  ret void

30:                                               ; preds = %24, %68
  %31 = phi %"class.blink::Member.3082"* [ %18, %24 ], [ %69, %68 ]
  %32 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %33, i64 0, i32 5
  %35 = load i32, i32* %34, align 4
  %36 = call zeroext i1 @_ZN2ui19IsCellOrTableHeaderEN2ax5mojom4RoleE(i32 %35) #22
  br i1 %36, label %40, label %37

37:                                               ; preds = %30
  %38 = load i32, i32* %34, align 4
  %39 = icmp eq i32 %38, 107
  br i1 %39, label %40, label %60

40:                                               ; preds = %30, %37
  %41 = load i32, i32* %6, align 4
  %42 = load i32, i32* %5, align 8
  %43 = icmp eq i32 %41, %42
  br i1 %43, label %59, label %44, !prof !3

44:                                               ; preds = %40
  %45 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %4, align 8
  %46 = zext i32 %41 to i64
  %47 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %45, i64 %46
  %48 = bitcast %"class.blink::Member.3082"* %31 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.blink::Member.3082"* %47 to i64*
  store atomic i64 %49, i64* %50 monotonic, align 8
  %51 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %44
  %54 = inttoptr i64 %49 to i8*
  %55 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %54) #22
  br label %56

56:                                               ; preds = %53, %44
  %57 = load i32, i32* %6, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %6, align 4
  br label %68

59:                                               ; preds = %40
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.3087"* %25, %"class.blink::Member.3082"* dereferenceable(8) %31) #22
  br label %68

60:                                               ; preds = %37
  %61 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %32, align 8
  %62 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %61, i64 0, i32 5
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 89
  br i1 %64, label %65, label %68

65:                                               ; preds = %60
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #22
  call void @_ZNK5blink8AXObject17TableCellChildrenEv(%"class.blink::HeapVector.3084"* nonnull sret %3, %"class.blink::AXObject"* %61)
  %66 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %27, align 8
  %67 = load i32, i32* %28, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j(%"class.WTF::Vector.3087"* %25, %"class.blink::Member.3082"* %66, i32 %67) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #22
  br label %68

68:                                               ; preds = %59, %56, %60, %65
  %69 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %31, i64 1
  %70 = icmp eq %"class.blink::Member.3082"* %69, %22
  br i1 %70, label %29, label %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8AXObject8RowCountEv(%"class.blink::AXObject"*) unnamed_addr #2 align 2 {
  %2 = alloca %"class.blink::HeapVector.3084", align 8
  %3 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %4) #22
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = load i32, i32* %3, align 4
  %8 = icmp eq i32 %7, 106
  br i1 %8, label %9, label %13

9:                                                ; preds = %1, %6
  %10 = bitcast %"class.blink::HeapVector.3084"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #22
  call void @_ZNK5blink8AXObject16TableRowChildrenEv(%"class.blink::HeapVector.3084"* nonnull sret %2, %"class.blink::AXObject"* %0)
  %11 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #22
  br label %13

13:                                               ; preds = %6, %9
  %14 = phi i32 [ %12, %9 ], [ 0, %6 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8AXObject13ColumnHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.3084"* dereferenceable(16)) unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::HeapVector.3084", align 8
  %4 = alloca %"class.blink::HeapVector.3084", align 8
  %5 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 4
  %7 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %6) #22
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = load i32, i32* %5, align 4
  %10 = icmp eq i32 %9, 106
  br i1 %10, label %11, label %70

11:                                               ; preds = %2, %8
  %12 = bitcast %"class.blink::HeapVector.3084"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #22
  call void @_ZNK5blink8AXObject16TableRowChildrenEv(%"class.blink::HeapVector.3084"* nonnull sret %3, %"class.blink::AXObject"* %0)
  %13 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %14, i64 %17
  %19 = icmp eq i32 %16, 0
  br i1 %19, label %28, label %20

20:                                               ; preds = %11
  %21 = bitcast %"class.blink::HeapVector.3084"* %4 to i8*
  %22 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %24 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %25 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %1, i64 0, i32 0
  br label %29

28:                                               ; preds = %38, %11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #22
  br label %70

29:                                               ; preds = %20, %38
  %30 = phi %"class.blink::Member.3082"* [ %14, %20 ], [ %39, %38 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #22
  %31 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %31, align 8
  call void @_ZNK5blink8AXObject17TableCellChildrenEv(%"class.blink::HeapVector.3084"* nonnull sret %4, %"class.blink::AXObject"* %32)
  %33 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %22, align 8
  %34 = load i32, i32* %23, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %33, i64 %35
  %37 = icmp eq i32 %34, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %67, %29
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #22
  %39 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %30, i64 1
  %40 = icmp eq %"class.blink::Member.3082"* %39, %18
  br i1 %40, label %28, label %29

41:                                               ; preds = %29, %67
  %42 = phi %"class.blink::Member.3082"* [ %68, %67 ], [ %33, %29 ]
  %43 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %44, i64 0, i32 5
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 20
  %48 = ptrtoint %"class.blink::AXObject"* %44 to i64
  br i1 %47, label %49, label %67

49:                                               ; preds = %41
  %50 = load i32, i32* %24, align 4
  %51 = load i32, i32* %25, align 8
  %52 = icmp eq i32 %50, %51
  br i1 %52, label %66, label %53, !prof !3

53:                                               ; preds = %49
  %54 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %26, align 8
  %55 = zext i32 %50 to i64
  %56 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %54, i64 %55
  %57 = bitcast %"class.blink::Member.3082"* %56 to i64*
  store atomic i64 %48, i64* %57 monotonic, align 8
  %58 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %53
  %61 = bitcast %"class.blink::AXObject"* %44 to i8*
  %62 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %61) #22
  br label %63

63:                                               ; preds = %60, %53
  %64 = load i32, i32* %24, align 4
  %65 = add i32 %64, 1
  store i32 %65, i32* %24, align 4
  br label %67

66:                                               ; preds = %49
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.3087"* %27, %"class.blink::Member.3082"* dereferenceable(8) %42) #22
  br label %67

67:                                               ; preds = %66, %63, %41
  %68 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %42, i64 1
  %69 = icmp eq %"class.blink::Member.3082"* %68, %36
  br i1 %69, label %38, label %41

70:                                               ; preds = %8, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8AXObject10RowHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.3084"* dereferenceable(16)) unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::HeapVector.3084", align 8
  %4 = alloca %"class.blink::HeapVector.3084", align 8
  %5 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 4
  %7 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %6) #22
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = load i32, i32* %5, align 4
  %10 = icmp eq i32 %9, 106
  br i1 %10, label %11, label %70

11:                                               ; preds = %2, %8
  %12 = bitcast %"class.blink::HeapVector.3084"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #22
  call void @_ZNK5blink8AXObject16TableRowChildrenEv(%"class.blink::HeapVector.3084"* nonnull sret %3, %"class.blink::AXObject"* %0)
  %13 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %14, i64 %17
  %19 = icmp eq i32 %16, 0
  br i1 %19, label %28, label %20

20:                                               ; preds = %11
  %21 = bitcast %"class.blink::HeapVector.3084"* %4 to i8*
  %22 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %24 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %25 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %1, i64 0, i32 0
  br label %29

28:                                               ; preds = %38, %11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #22
  br label %70

29:                                               ; preds = %20, %38
  %30 = phi %"class.blink::Member.3082"* [ %14, %20 ], [ %39, %38 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #22
  %31 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %31, align 8
  call void @_ZNK5blink8AXObject17TableCellChildrenEv(%"class.blink::HeapVector.3084"* nonnull sret %4, %"class.blink::AXObject"* %32)
  %33 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %22, align 8
  %34 = load i32, i32* %23, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %33, i64 %35
  %37 = icmp eq i32 %34, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %67, %29
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #22
  %39 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %30, i64 1
  %40 = icmp eq %"class.blink::Member.3082"* %39, %18
  br i1 %40, label %28, label %29

41:                                               ; preds = %29, %67
  %42 = phi %"class.blink::Member.3082"* [ %68, %67 ], [ %33, %29 ]
  %43 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %44, i64 0, i32 5
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 148
  %48 = ptrtoint %"class.blink::AXObject"* %44 to i64
  br i1 %47, label %49, label %67

49:                                               ; preds = %41
  %50 = load i32, i32* %24, align 4
  %51 = load i32, i32* %25, align 8
  %52 = icmp eq i32 %50, %51
  br i1 %52, label %66, label %53, !prof !3

53:                                               ; preds = %49
  %54 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %26, align 8
  %55 = zext i32 %50 to i64
  %56 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %54, i64 %55
  %57 = bitcast %"class.blink::Member.3082"* %56 to i64*
  store atomic i64 %48, i64* %57 monotonic, align 8
  %58 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %53
  %61 = bitcast %"class.blink::AXObject"* %44 to i8*
  %62 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %61) #22
  br label %63

63:                                               ; preds = %60, %53
  %64 = load i32, i32* %24, align 4
  %65 = add i32 %64, 1
  store i32 %65, i32* %24, align 4
  br label %67

66:                                               ; preds = %49
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.3087"* %27, %"class.blink::Member.3082"* dereferenceable(8) %42) #22
  br label %67

67:                                               ; preds = %66, %63, %41
  %68 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %42, i64 1
  %69 = icmp eq %"class.blink::Member.3082"* %68, %36
  br i1 %69, label %38, label %41

70:                                               ; preds = %8, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject19CellForColumnAndRowEjj(%"class.blink::AXObject"*, i32, i32) unnamed_addr #2 align 2 {
  %4 = alloca %"class.blink::HeapVector.3084", align 8
  %5 = alloca %"class.blink::HeapVector.3084", align 8
  %6 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %7) #22
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = load i32, i32* %6, align 4
  %11 = icmp eq i32 %10, 106
  br i1 %11, label %12, label %55

12:                                               ; preds = %3, %9
  %13 = bitcast %"class.blink::HeapVector.3084"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #22
  call void @_ZNK5blink8AXObject16TableRowChildrenEv(%"class.blink::HeapVector.3084"* nonnull sret %4, %"class.blink::AXObject"* %0)
  %14 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %15, i64 %18
  %20 = icmp eq i32 %17, 0
  br i1 %20, label %53, label %21

21:                                               ; preds = %12
  %22 = bitcast %"class.blink::HeapVector.3084"* %5 to i8*
  %23 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.blink::HeapVector.3084", %"class.blink::HeapVector.3084"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  br label %25

25:                                               ; preds = %21, %46
  %26 = phi i32 [ 0, %21 ], [ %47, %46 ]
  %27 = phi %"class.blink::Member.3082"* [ %15, %21 ], [ %48, %46 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #22
  %28 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %28, align 8
  call void @_ZNK5blink8AXObject17TableCellChildrenEv(%"class.blink::HeapVector.3084"* nonnull sret %5, %"class.blink::AXObject"* %29)
  %30 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %23, align 8
  %31 = load i32, i32* %24, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %30, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %46, label %35

35:                                               ; preds = %25
  %36 = icmp eq i32 %26, %2
  br label %37

37:                                               ; preds = %35, %42
  %38 = phi %"class.blink::Member.3082"* [ %30, %35 ], [ %44, %42 ]
  %39 = phi i32 [ 0, %35 ], [ %43, %42 ]
  %40 = icmp eq i32 %39, %1
  %41 = and i1 %36, %40
  br i1 %41, label %50, label %42

42:                                               ; preds = %37
  %43 = add i32 %39, 1
  %44 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %38, i64 1
  %45 = icmp eq %"class.blink::Member.3082"* %44, %33
  br i1 %45, label %46, label %37

46:                                               ; preds = %42, %25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #22
  %47 = add i32 %26, 1
  %48 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %27, i64 1
  %49 = icmp eq %"class.blink::Member.3082"* %48, %19
  br i1 %49, label %53, label %25

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %38, i64 0, i32 0, i32 0
  %52 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #22
  br label %53

53:                                               ; preds = %46, %12, %50
  %54 = phi %"class.blink::AXObject"* [ %52, %50 ], [ null, %12 ], [ null, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #22
  br label %55

55:                                               ; preds = %53, %9
  %56 = phi %"class.blink::AXObject"* [ null, %9 ], [ %54, %53 ]
  ret %"class.blink::AXObject"* %56
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink8AXObject11ColumnIndexEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink8AXObject8RowIndexEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8AXObject10ColumnSpanEv(%"class.blink::AXObject"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui19IsCellOrTableHeaderEN2ax5mojom4RoleE(i32 %3) #22
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4
  %7 = icmp eq i32 %6, 107
  %8 = zext i1 %7 to i32
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i32 [ 1, %1 ], [ %8, %5 ]
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8AXObject7RowSpanEv(%"class.blink::AXObject"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui19IsCellOrTableHeaderEN2ax5mojom4RoleE(i32 %3) #22
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4
  %7 = icmp eq i32 %6, 107
  %8 = zext i1 %7 to i32
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i32 [ 1, %1 ], [ %8, %5 ]
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject14TableRowParentEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* %0)
  %3 = icmp eq %"class.blink::AXObject"* %2, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %1, %12
  %5 = phi %"class.blink::AXObject"* [ %13, %12 ], [ %2, %1 ]
  %6 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %5, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = tail call zeroext i1 @_ZN2ui10IsTableRowEN2ax5mojom4RoleE(i32 %7) #22
  br i1 %8, label %15, label %9

9:                                                ; preds = %4
  %10 = load i32, i32* %6, align 4
  %11 = icmp eq i32 %10, 89
  br i1 %11, label %12, label %15

12:                                               ; preds = %9
  %13 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* nonnull %5)
  %14 = icmp eq %"class.blink::AXObject"* %13, null
  br i1 %14, label %15, label %4

15:                                               ; preds = %12, %4, %9, %1
  %16 = phi %"class.blink::AXObject"* [ null, %1 ], [ %5, %4 ], [ null, %12 ], [ %5, %9 ]
  ret %"class.blink::AXObject"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject11TableParentEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* %0)
  %3 = icmp eq %"class.blink::AXObject"* %2, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %1, %12
  %5 = phi %"class.blink::AXObject"* [ %13, %12 ], [ %2, %1 ]
  %6 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %5, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %7) #22
  br i1 %8, label %15, label %9

9:                                                ; preds = %4
  %10 = load i32, i32* %6, align 4
  %11 = icmp eq i32 %10, 89
  br i1 %11, label %12, label %15

12:                                               ; preds = %9
  %13 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* nonnull %5)
  %14 = icmp eq %"class.blink::AXObject"* %13, null
  br i1 %14, label %15, label %4

15:                                               ; preds = %12, %4, %9, %1
  %16 = phi %"class.blink::AXObject"* [ null, %1 ], [ %5, %4 ], [ null, %12 ], [ %5, %9 ]
  ret %"class.blink::AXObject"* %16
}

declare i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8AXObject17GetRelativeBoundsEPPS0_RNS_9FloatRectER10SkMatrix44Pb(%"class.blink::AXObject"*, %"class.blink::AXObject"** nocapture, %"class.blink::FloatRect"* nocapture dereferenceable(16), %class.SkMatrix44* dereferenceable(68), i8*) unnamed_addr #12 align 2 {
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"class.blink::IntRect"*
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %"class.blink::IntRect"*
  %10 = alloca %"class.blink::TransformationMatrix", align 8
  %11 = alloca %class.SkMatrix44, align 4
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %1, align 8
  %12 = bitcast %"class.blink::FloatRect"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 16, i1 false)
  tail call void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44* %3) #22
  %13 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %110, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 6, i32 1, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 1
  br i1 %19, label %110, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %22 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 7
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %22, i64 0, i32 5, i32 0, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair.3099"*, %"struct.WTF::KeyValuePair.3099"** %25, align 8
  %27 = icmp eq %"struct.WTF::KeyValuePair.3099"* %26, null
  br i1 %27, label %83, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %22, i64 0, i32 5, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, -1
  %32 = zext i32 %31 to i64
  %33 = shl i32 %24, 15
  %34 = xor i32 %33, -1
  %35 = add i32 %24, %34
  %36 = lshr i32 %35, 10
  %37 = xor i32 %36, %35
  %38 = mul i32 %37, 9
  %39 = lshr i32 %38, 6
  %40 = xor i32 %39, %38
  %41 = shl i32 %40, 11
  %42 = xor i32 %41, -1
  %43 = add i32 %40, %42
  %44 = lshr i32 %43, 16
  %45 = xor i32 %44, %43
  %46 = and i32 %31, %45
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.3099", %"struct.WTF::KeyValuePair.3099"* %26, i64 %47
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.3099", %"struct.WTF::KeyValuePair.3099"* %48, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, %24
  br i1 %51, label %80, label %52

52:                                               ; preds = %28
  %53 = xor i32 %45, -1
  %54 = lshr i32 %43, 23
  %55 = add i32 %54, %53
  %56 = shl i32 %55, 12
  %57 = xor i32 %56, %55
  %58 = lshr i32 %57, 7
  %59 = xor i32 %58, %57
  %60 = shl i32 %59, 2
  %61 = xor i32 %60, %59
  %62 = lshr i32 %61, 20
  %63 = xor i32 %62, %61
  %64 = or i32 %63, 1
  %65 = zext i32 %64 to i64
  br label %66

66:                                               ; preds = %71, %52
  %67 = phi i32 [ %50, %52 ], [ %78, %71 ]
  %68 = phi i64 [ %47, %52 ], [ %75, %71 ]
  %69 = phi i64 [ 0, %52 ], [ %73, %71 ]
  %70 = icmp eq i32 %67, 0
  br i1 %70, label %83, label %71

71:                                               ; preds = %66
  %72 = icmp eq i64 %69, 0
  %73 = select i1 %72, i64 %65, i64 %69
  %74 = add i64 %73, %68
  %75 = and i64 %74, %32
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.3099", %"struct.WTF::KeyValuePair.3099"* %26, i64 %75
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.3099", %"struct.WTF::KeyValuePair.3099"* %76, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, %24
  br i1 %79, label %80, label %66

80:                                               ; preds = %71, %28
  %81 = phi %"struct.WTF::KeyValuePair.3099"* [ %48, %28 ], [ %76, %71 ]
  %82 = icmp eq %"struct.WTF::KeyValuePair.3099"* %81, null
  br i1 %82, label %83, label %84

83:                                               ; preds = %66, %80, %20
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %1, align 8
  br label %110

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.3099", %"struct.WTF::KeyValuePair.3099"* %81, i64 0, i32 1, i32 0, i32 0
  %86 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %85, align 8
  store %"class.blink::AXObject"* %86, %"class.blink::AXObject"** %1, align 8
  %87 = icmp eq %"class.blink::AXObject"* %86, null
  br i1 %87, label %110, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = sitofp i32 %90 to float
  %92 = fmul float %91, 1.562500e-02
  %93 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 6, i32 0, i32 1, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = sitofp i32 %94 to float
  %96 = fmul float %95, 1.562500e-02
  %97 = load i32, i32* %13, align 4
  %98 = sitofp i32 %97 to float
  %99 = fmul float %98, 1.562500e-02
  %100 = load i32, i32* %17, align 4
  %101 = sitofp i32 %100 to float
  %102 = fmul float %101, 1.562500e-02
  %103 = insertelement <2 x float> undef, float %92, i32 0
  %104 = insertelement <2 x float> %103, float %96, i32 1
  %105 = insertelement <2 x float> undef, float %99, i32 0
  %106 = insertelement <2 x float> %105, float %102, i32 1
  %107 = bitcast %"class.blink::FloatRect"* %2 to <2 x float>*
  store <2 x float> %104, <2 x float>* %107, align 4
  %108 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1
  %109 = bitcast %"class.blink::FloatSize"* %108 to <2 x float>*
  store <2 x float> %106, <2 x float>* %109, align 4
  br label %478

110:                                              ; preds = %5, %83, %84, %16
  %111 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %112 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %111, align 8
  %113 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %112, i64 125
  %114 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %113, align 8
  %115 = tail call %"class.blink::LayoutObject"* %114(%"class.blink::AXObject"* %0) #22
  %116 = icmp eq %"class.blink::LayoutObject"* %115, null
  br i1 %116, label %478, label %117

117:                                              ; preds = %110
  %118 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %115, i64 0, i32 4
  %119 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %118 to i96*
  %120 = load i96, i96* %119, align 4
  %121 = trunc i96 %120 to i77
  %122 = and i77 %121, -37778931862957161709568
  switch i77 %122, label %134 [
    i77 -75557863725914323419136, label %123
    i77 -37778931862957161709568, label %131
  ]

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %115, i64 0, i32 5, i32 0
  %125 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %125, i64 0, i32 0, i32 9
  %127 = bitcast [20 x i8]* %126 to i160*
  %128 = load i160, i160* %127, align 8
  %129 = and i160 %128, 8462480737302404222943232
  %130 = icmp eq i160 %129, 1208925819614629174706176
  br i1 %130, label %131, label %134

131:                                              ; preds = %117, %123
  %132 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %133 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %132, align 8
  tail call void @_ZN5blink17AXObjectCacheImpl26AddToFixedOrStickyNodeListEPKNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %133, %"class.blink::AXObject"* %0) #22
  br label %134

134:                                              ; preds = %117, %123, %131
  %135 = icmp eq i8* %4, null
  br i1 %135, label %147, label %136

136:                                              ; preds = %134
  %137 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %138 = load i32, i32* %137, align 4
  %139 = icmp eq i32 %138, 145
  br i1 %139, label %145, label %140

140:                                              ; preds = %136
  %141 = load i96, i96* %119, align 4
  %142 = lshr i96 %141, 33
  %143 = trunc i96 %142 to i8
  %144 = and i8 %143, 1
  br label %145

145:                                              ; preds = %136, %140
  %146 = phi i8 [ %144, %140 ], [ 1, %136 ]
  store i8 %146, i8* %4, align 1
  br label %147

147:                                              ; preds = %145, %134
  %148 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, 145
  br i1 %150, label %151, label %255

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %115, i64 0, i32 6, i32 0, i32 0
  %153 = load %"class.blink::Node"*, %"class.blink::Node"** %152, align 8
  %154 = icmp eq %"class.blink::Node"* %153, null
  br i1 %154, label %155, label %162

155:                                              ; preds = %151, %155
  %156 = phi %"class.blink::LayoutObject"* [ %158, %155 ], [ %115, %151 ]
  %157 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %156, i64 0, i32 7
  %158 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %157, align 8
  %159 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %158, i64 0, i32 6, i32 0, i32 0
  %160 = load %"class.blink::Node"*, %"class.blink::Node"** %159, align 8
  %161 = icmp eq %"class.blink::Node"* %160, null
  br i1 %161, label %155, label %162

162:                                              ; preds = %155, %151
  %163 = phi %"class.blink::Node"* [ %153, %151 ], [ %160, %155 ]
  %164 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %163, i64 0, i32 3, i32 0, i32 0
  %165 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %165, i64 0, i32 2, i32 0, i32 0
  %167 = load %"class.blink::Document"*, %"class.blink::Document"** %166, align 8
  %168 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %167) #22
  %169 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %168, i64 0, i32 11, i32 0, i32 0
  %170 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %169, align 8
  %171 = icmp eq %"class.blink::LocalFrameView"* %170, null
  br i1 %171, label %478, label %172

172:                                              ; preds = %162
  %173 = getelementptr inbounds %"class.blink::LocalFrameView", %"class.blink::LocalFrameView"* %170, i64 0, i32 0, i32 0, i32 1, i32 1
  %174 = bitcast %"class.blink::IntSize"* %173 to i64*
  %175 = load i64, i64* %174, align 4
  %176 = trunc i64 %175 to i32
  %177 = lshr i64 %175, 32
  %178 = trunc i64 %177 to i32
  %179 = sitofp i32 %176 to float
  %180 = sitofp i32 %178 to float
  %181 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1, i32 0
  store float %179, float* %181, align 4
  %182 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1, i32 1
  store float %180, float* %182, align 4
  %183 = tail call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %170) #22
  %184 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %183, i64 0, i32 7, i32 0, i32 0
  %185 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %184, align 8
  %186 = bitcast %"class.blink::ChromeClient"* %185 to i1 (%"class.blink::ChromeClient"*)***
  %187 = load i1 (%"class.blink::ChromeClient"*)**, i1 (%"class.blink::ChromeClient"*)*** %186, align 8
  %188 = getelementptr inbounds i1 (%"class.blink::ChromeClient"*)*, i1 (%"class.blink::ChromeClient"*)** %187, i64 4
  %189 = load i1 (%"class.blink::ChromeClient"*)*, i1 (%"class.blink::ChromeClient"*)** %188, align 8
  %190 = tail call zeroext i1 %189(%"class.blink::ChromeClient"* %185) #22
  br i1 %190, label %191, label %478

191:                                              ; preds = %172
  %192 = bitcast %"class.blink::LocalFrameView"* %170 to %"class.blink::EmbeddedContentView"*
  %193 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %193) #22
  %194 = tail call i64 @_ZNK5blink19EmbeddedContentView8LocationEv(%"class.blink::EmbeddedContentView"* nonnull %192) #22
  %195 = load i64, i64* %174, align 4
  %196 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %194, i64* %196, align 8
  %197 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %195, i64* %197, align 8
  %198 = call { i64, i64 } @_ZNK5blink14LocalFrameView13FrameToScreenERKNS_7IntRectE(%"class.blink::LocalFrameView"* nonnull %170, %"class.blink::IntRect"* nonnull dereferenceable(16) %7) #22
  %199 = extractvalue { i64, i64 } %198, 0
  %200 = trunc i64 %199 to i32
  %201 = lshr i64 %199, 32
  %202 = trunc i64 %201 to i32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %193) #22
  %203 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %204 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %203, align 8
  %205 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %204, i64 0, i32 2, i32 0, i32 0
  %206 = load %"class.blink::Document"*, %"class.blink::Document"** %205, align 8
  %207 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %206) #22
  %208 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %207, i64 0, i32 11, i32 0, i32 0
  %209 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %208, align 8
  %210 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %210) #22
  %211 = bitcast %"class.blink::LocalFrameView"* %209 to %"class.blink::EmbeddedContentView"*
  %212 = call i64 @_ZNK5blink19EmbeddedContentView8LocationEv(%"class.blink::EmbeddedContentView"* %211) #22
  %213 = getelementptr inbounds %"class.blink::LocalFrameView", %"class.blink::LocalFrameView"* %209, i64 0, i32 0, i32 0, i32 1, i32 1
  %214 = bitcast %"class.blink::IntSize"* %213 to i64*
  %215 = load i64, i64* %214, align 4
  %216 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  store i64 %212, i64* %216, align 8
  %217 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  store i64 %215, i64* %217, align 8
  %218 = call { i64, i64 } @_ZNK5blink14LocalFrameView13FrameToScreenERKNS_7IntRectE(%"class.blink::LocalFrameView"* %209, %"class.blink::IntRect"* nonnull dereferenceable(16) %9) #22
  %219 = extractvalue { i64, i64 } %218, 0
  %220 = trunc i64 %219 to i32
  %221 = lshr i64 %219, 32
  %222 = trunc i64 %221 to i32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %210) #22
  %223 = call %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"* nonnull %170) #22
  %224 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %223, i64 0, i32 7, i32 0, i32 0
  %225 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %224, align 8
  %226 = load %"class.blink::Node"*, %"class.blink::Node"** %152, align 8
  %227 = icmp eq %"class.blink::Node"* %226, null
  br i1 %227, label %228, label %235

228:                                              ; preds = %191, %228
  %229 = phi %"class.blink::LayoutObject"* [ %231, %228 ], [ %115, %191 ]
  %230 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %229, i64 0, i32 7
  %231 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %230, align 8
  %232 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %231, i64 0, i32 6, i32 0, i32 0
  %233 = load %"class.blink::Node"*, %"class.blink::Node"** %232, align 8
  %234 = icmp eq %"class.blink::Node"* %233, null
  br i1 %234, label %228, label %235

235:                                              ; preds = %228, %191
  %236 = phi %"class.blink::Node"* [ %226, %191 ], [ %233, %228 ]
  %237 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %236, i64 0, i32 3, i32 0, i32 0
  %238 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %237, align 8
  %239 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %238, i64 0, i32 2, i32 0, i32 0
  %240 = load %"class.blink::Document"*, %"class.blink::Document"** %239, align 8
  %241 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %240) #22
  %242 = bitcast %"class.blink::ChromeClient"* %225 to float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)***
  %243 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)**, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*** %242, align 8
  %244 = getelementptr inbounds float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %243, i64 3
  %245 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %244, align 8
  %246 = call float %245(%"class.blink::ChromeClient"* %225, %"class.blink::LocalFrame"* %241, float 1.000000e+00) #22
  %247 = sub nsw i32 %200, %220
  %248 = sitofp i32 %247 to float
  %249 = fmul float %246, %248
  %250 = sub nsw i32 %202, %222
  %251 = sitofp i32 %250 to float
  %252 = fmul float %246, %251
  %253 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 0
  store float %249, float* %253, align 4
  %254 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 1
  store float %252, float* %254, align 4
  br label %478

255:                                              ; preds = %147
  %256 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* %0)
  %257 = load i96, i96* %119, align 4
  %258 = and i96 %257, 113336795588871485128704
  %259 = icmp eq i96 %258, 75557863725914323419136
  br i1 %259, label %260, label %268

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %115, i64 0, i32 5, i32 0
  %262 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %261, align 8
  %263 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %262, i64 0, i32 0, i32 9
  %264 = bitcast [20 x i8]* %263 to i160*
  %265 = load i160, i160* %264, align 8
  %266 = and i160 %265, 8462480737302404222943232
  %267 = icmp eq i160 %266, 1208925819614629174706176
  br i1 %267, label %321, label %268

268:                                              ; preds = %260, %255
  %269 = icmp eq %"class.blink::AXObject"* %256, null
  br i1 %269, label %478, label %270

270:                                              ; preds = %268
  %271 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %115, i64 0, i32 5, i32 0
  br label %272

272:                                              ; preds = %270, %318
  %273 = phi %"class.blink::AXObject"* [ %256, %270 ], [ %319, %318 ]
  %274 = bitcast %"class.blink::AXObject"* %273 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %275 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %274, align 8
  %276 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %275, i64 125
  %277 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %276, align 8
  %278 = tail call %"class.blink::LayoutObject"* %277(%"class.blink::AXObject"* nonnull %273) #22
  %279 = icmp eq %"class.blink::LayoutObject"* %278, null
  br i1 %279, label %318, label %280

280:                                              ; preds = %272
  %281 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %278, i64 0, i32 4
  %282 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %281 to i96*
  %283 = load i96, i96* %282, align 4
  %284 = and i96 %283, 67108864
  %285 = icmp eq i96 %284, 0
  br i1 %285, label %318, label %286

286:                                              ; preds = %280
  %287 = tail call zeroext i1 @_ZNK5blink12LayoutObject14IsDescendantOfEPKS0_(%"class.blink::LayoutObject"* nonnull %115, %"class.blink::LayoutObject"* nonnull %278) #22
  br i1 %287, label %288, label %318

288:                                              ; preds = %286
  %289 = bitcast %"class.blink::AXObject"* %273 to %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)***
  %290 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)**, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*** %289, align 8
  %291 = getelementptr inbounds %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %290, i64 144
  %292 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %291, align 8
  %293 = tail call %"class.blink::ScrollableArea"* %292(%"class.blink::AXObject"* nonnull %273) #22
  %294 = icmp eq %"class.blink::ScrollableArea"* %293, null
  br i1 %294, label %295, label %299

295:                                              ; preds = %288
  %296 = load i96, i96* %282, align 4
  %297 = and i96 %296, 4294967296
  %298 = icmp eq i96 %297, 0
  br i1 %298, label %318, label %299

299:                                              ; preds = %295, %288
  %300 = load i96, i96* %119, align 4
  %301 = and i96 %300, 113336795588871485128704
  %302 = icmp eq i96 %301, 75557863725914323419136
  br i1 %302, label %303, label %332

303:                                              ; preds = %299
  %304 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %271, align 8
  %305 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %304, i64 0, i32 0, i32 9
  %306 = bitcast [20 x i8]* %305 to i160*
  %307 = load i160, i160* %306, align 8
  %308 = and i160 %307, 8462480737302404222943232
  %309 = icmp eq i160 %308, 0
  br i1 %309, label %310, label %332

310:                                              ; preds = %303
  %311 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %273, i64 0, i32 5
  %312 = load i32, i32* %311, align 4
  %313 = icmp eq i32 %312, 145
  br i1 %313, label %332, label %314

314:                                              ; preds = %310
  %315 = load i96, i96* %282, align 4
  %316 = and i96 %315, 113336795588871485128704
  %317 = icmp eq i96 %316, 0
  br i1 %317, label %318, label %332

318:                                              ; preds = %314, %295, %280, %272, %286
  %319 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* nonnull %273)
  %320 = icmp eq %"class.blink::AXObject"* %319, null
  br i1 %320, label %478, label %272

321:                                              ; preds = %260
  %322 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %323 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %322, align 8
  %324 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %325 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %324, align 8
  %326 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %325, i64 126
  %327 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %326, align 8
  %328 = tail call %"class.blink::Document"* %327(%"class.blink::AXObject"* %0) #22
  %329 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %328, i64 0, i32 0, i32 0
  %330 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %323, %"class.blink::Node"* %329) #22
  %331 = icmp eq %"class.blink::AXObject"* %330, null
  br i1 %331, label %478, label %334

332:                                              ; preds = %310, %303, %299, %314
  %333 = bitcast %"class.blink::LayoutObject"* %278 to %"class.blink::LayoutBoxModelObject"*
  br label %334

334:                                              ; preds = %332, %321
  %335 = phi %"class.blink::AXObject"* [ %330, %321 ], [ %273, %332 ]
  %336 = phi %"class.blink::LayoutBoxModelObject"* [ null, %321 ], [ %333, %332 ]
  store %"class.blink::AXObject"* %335, %"class.blink::AXObject"** %1, align 8
  %337 = bitcast %"class.blink::LayoutObject"* %115 to { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)***
  %338 = load { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)**, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*** %337, align 8
  %339 = getelementptr inbounds { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)** %338, i64 68
  %340 = load { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)** %339, align 8
  %341 = tail call { <2 x float>, <2 x float> } %340(%"class.blink::LayoutObject"* nonnull %115) #22
  %342 = extractvalue { <2 x float>, <2 x float> } %341, 0
  %343 = extractvalue { <2 x float>, <2 x float> } %341, 1
  %344 = bitcast %"class.blink::FloatRect"* %2 to <2 x float>*
  store <2 x float> %342, <2 x float>* %344, align 4
  %345 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1
  %346 = bitcast %"class.blink::FloatSize"* %345 to <2 x float>*
  store <2 x float> %343, <2 x float>* %346, align 4
  %347 = load i96, i96* %119, align 4
  %348 = and i96 %347, 83886080
  %349 = icmp eq i96 %348, 67108864
  br i1 %349, label %350, label %383

350:                                              ; preds = %334
  %351 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %115, i64 0, i32 6, i32 0, i32 0
  %352 = load %"class.blink::Node"*, %"class.blink::Node"** %351, align 8
  %353 = icmp eq %"class.blink::Node"* %352, null
  br i1 %353, label %383, label %354

354:                                              ; preds = %350
  %355 = bitcast %"class.blink::Node"* %352 to i1 (%"class.blink::Node"*)***
  %356 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %355, align 8
  %357 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %356, i64 42
  %358 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %357, align 8
  %359 = tail call zeroext i1 %358(%"class.blink::Node"* nonnull %352) #22
  br i1 %359, label %360, label %383

360:                                              ; preds = %354
  %361 = bitcast %"class.blink::LayoutObject"* %115 to %"class.blink::LayoutBox"*
  %362 = tail call { i64, i64 } @_ZNK5blink9LayoutBox22PhysicalContentBoxRectEv(%"class.blink::LayoutBox"* nonnull %361)
  %363 = extractvalue { i64, i64 } %362, 0
  %364 = trunc i64 %363 to i32
  %365 = lshr i64 %363, 32
  %366 = trunc i64 %365 to i32
  %367 = extractvalue { i64, i64 } %362, 1
  %368 = sitofp i32 %364 to float
  %369 = fmul float %368, 1.562500e-02
  %370 = sitofp i32 %366 to float
  %371 = fmul float %370, 1.562500e-02
  %372 = trunc i64 %367 to i32
  %373 = sitofp i32 %372 to float
  %374 = fmul float %373, 1.562500e-02
  %375 = lshr i64 %367, 32
  %376 = trunc i64 %375 to i32
  %377 = sitofp i32 %376 to float
  %378 = fmul float %377, 1.562500e-02
  %379 = insertelement <2 x float> undef, float %369, i32 0
  %380 = insertelement <2 x float> %379, float %371, i32 1
  %381 = insertelement <2 x float> undef, float %374, i32 0
  %382 = insertelement <2 x float> %381, float %378, i32 1
  store <2 x float> %380, <2 x float>* %344, align 4
  store <2 x float> %382, <2 x float>* %346, align 4
  br label %383

383:                                              ; preds = %350, %360, %354, %334
  %384 = bitcast %"class.blink::AXObject"* %335 to %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)***
  %385 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)**, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*** %384, align 8
  %386 = getelementptr inbounds %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %385, i64 144
  %387 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %386, align 8
  %388 = tail call %"class.blink::ScrollableArea"* %387(%"class.blink::AXObject"* nonnull %335) #22
  %389 = icmp eq %"class.blink::ScrollableArea"* %388, null
  br i1 %389, label %404, label %390

390:                                              ; preds = %383
  %391 = bitcast %"class.blink::ScrollableArea"* %388 to <2 x float> (%"class.blink::ScrollableArea"*)***
  %392 = load <2 x float> (%"class.blink::ScrollableArea"*)**, <2 x float> (%"class.blink::ScrollableArea"*)*** %391, align 8
  %393 = getelementptr inbounds <2 x float> (%"class.blink::ScrollableArea"*)*, <2 x float> (%"class.blink::ScrollableArea"*)** %392, i64 47
  %394 = load <2 x float> (%"class.blink::ScrollableArea"*)*, <2 x float> (%"class.blink::ScrollableArea"*)** %393, align 8
  %395 = tail call <2 x float> %394(%"class.blink::ScrollableArea"* nonnull %388) #22
  %396 = extractelement <2 x float> %395, i32 0
  %397 = extractelement <2 x float> %395, i32 1
  %398 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 0
  %399 = load float, float* %398, align 4
  %400 = fadd float %396, %399
  store float %400, float* %398, align 4
  %401 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 1
  %402 = load float, float* %401, align 4
  %403 = fadd float %397, %402
  store float %403, float* %401, align 4
  br label %404

404:                                              ; preds = %383, %390
  %405 = bitcast %"class.blink::TransformationMatrix"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %405) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %405, i8 -1, i64 128, i1 false)
  call void @_ZNK5blink12LayoutObject24LocalToAncestorTransformEPKNS_20LayoutBoxModelObjectEj(%"class.blink::TransformationMatrix"* nonnull sret %10, %"class.blink::LayoutObject"* nonnull %115, %"class.blink::LayoutBoxModelObject"* %336, i32 0) #22
  %406 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %10, i64 0, i32 0, i32 0, i64 0, i64 0
  %407 = load double, double* %406, align 8
  %408 = fcmp oeq double %407, 1.000000e+00
  br i1 %408, label %409, label %474

409:                                              ; preds = %404
  %410 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %10, i64 0, i32 0, i32 0, i64 0, i64 1
  %411 = load double, double* %410, align 8
  %412 = fcmp oeq double %411, 0.000000e+00
  br i1 %412, label %413, label %474

413:                                              ; preds = %409
  %414 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %10, i64 0, i32 0, i32 0, i64 0, i64 2
  %415 = load double, double* %414, align 8
  %416 = fcmp oeq double %415, 0.000000e+00
  br i1 %416, label %417, label %474

417:                                              ; preds = %413
  %418 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %10, i64 0, i32 0, i32 0, i64 0, i64 3
  %419 = load double, double* %418, align 8
  %420 = fcmp oeq double %419, 0.000000e+00
  br i1 %420, label %421, label %474

421:                                              ; preds = %417
  %422 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %10, i64 0, i32 0, i32 0, i64 1, i64 0
  %423 = load double, double* %422, align 8
  %424 = fcmp oeq double %423, 0.000000e+00
  br i1 %424, label %425, label %474

425:                                              ; preds = %421
  %426 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %10, i64 0, i32 0, i32 0, i64 1, i64 1
  %427 = load double, double* %426, align 8
  %428 = fcmp oeq double %427, 1.000000e+00
  br i1 %428, label %429, label %474

429:                                              ; preds = %425
  %430 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %10, i64 0, i32 0, i32 0, i64 1, i64 2
  %431 = load double, double* %430, align 8
  %432 = fcmp oeq double %431, 0.000000e+00
  br i1 %432, label %433, label %474

433:                                              ; preds = %429
  %434 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %10, i64 0, i32 0, i32 0, i64 1, i64 3
  %435 = load double, double* %434, align 8
  %436 = fcmp oeq double %435, 0.000000e+00
  br i1 %436, label %437, label %474

437:                                              ; preds = %433
  %438 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %10, i64 0, i32 0, i32 0, i64 2, i64 0
  %439 = load double, double* %438, align 8
  %440 = fcmp oeq double %439, 0.000000e+00
  br i1 %440, label %441, label %474

441:                                              ; preds = %437
  %442 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %10, i64 0, i32 0, i32 0, i64 2, i64 1
  %443 = load double, double* %442, align 8
  %444 = fcmp oeq double %443, 0.000000e+00
  br i1 %444, label %445, label %474

445:                                              ; preds = %441
  %446 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %10, i64 0, i32 0, i32 0, i64 2, i64 2
  %447 = load double, double* %446, align 8
  %448 = fcmp oeq double %447, 1.000000e+00
  br i1 %448, label %449, label %474

449:                                              ; preds = %445
  %450 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %10, i64 0, i32 0, i32 0, i64 2, i64 3
  %451 = load double, double* %450, align 8
  %452 = fcmp oeq double %451, 0.000000e+00
  br i1 %452, label %453, label %474

453:                                              ; preds = %449
  %454 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %10, i64 0, i32 0, i32 0, i64 3, i64 3
  %455 = load double, double* %454, align 8
  %456 = fcmp oeq double %455, 1.000000e+00
  br i1 %456, label %457, label %474

457:                                              ; preds = %453
  %458 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %10, i64 0, i32 0, i32 0, i64 3, i64 2
  %459 = load double, double* %458, align 8
  %460 = fcmp oeq double %459, 0.000000e+00
  br i1 %460, label %461, label %474

461:                                              ; preds = %457
  %462 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %10, i64 0, i32 0, i32 0, i64 3, i64 0
  %463 = load double, double* %462, align 8
  %464 = fptrunc double %463 to float
  %465 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %10, i64 0, i32 0, i32 0, i64 3, i64 1
  %466 = load double, double* %465, align 8
  %467 = fptrunc double %466 to float
  %468 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 0
  %469 = load float, float* %468, align 4
  %470 = fadd float %469, %464
  store float %470, float* %468, align 4
  %471 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 1
  %472 = load float, float* %471, align 4
  %473 = fadd float %472, %467
  store float %473, float* %471, align 4
  br label %477

474:                                              ; preds = %404, %409, %413, %417, %421, %425, %429, %433, %437, %441, %445, %449, %453, %457
  %475 = bitcast %class.SkMatrix44* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %475) #22
  call void @_ZN5blink20TransformationMatrix12ToSkMatrix44ERKS0_(%class.SkMatrix44* nonnull sret %11, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %10) #22
  %476 = bitcast %class.SkMatrix44* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %476, i8* nonnull align 4 %475, i64 65, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %475) #22
  br label %477

477:                                              ; preds = %474, %461
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %405) #22
  br label %478

478:                                              ; preds = %318, %268, %110, %162, %172, %235, %321, %477, %88
  ret void
}

declare void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44*) local_unnamed_addr #6

declare void @_ZN5blink17AXObjectCacheImpl26AddToFixedOrStickyNodeListEPKNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObject"*) local_unnamed_addr #6

declare %"class.blink::Page"* @_ZNK5blink14LocalFrameView7GetPageEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #6

declare { i64, i64 } @_ZNK5blink14LocalFrameView13FrameToScreenERKNS_7IntRectE(%"class.blink::LocalFrameView"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #6

declare zeroext i1 @_ZNK5blink12LayoutObject14IsDescendantOfEPKS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox22PhysicalContentBoxRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 1190036353683150593851392
  %8 = icmp eq i160 %7, 340010386766614455386112
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #22
  %18 = icmp eq %"class.blink::PaintLayerScrollableArea"* %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #22
  %21 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %26, align 8
  %28 = icmp eq %"class.blink::Scrollbar"* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %25, %19
  %30 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #22
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %36, align 8
  %38 = icmp eq %"class.blink::Scrollbar"* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %35, %29, %9, %1
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 270215977642229760
  %45 = icmp eq i160 %44, 0
  br label %46

46:                                               ; preds = %15, %25, %35, %39
  %47 = phi i1 [ false, %35 ], [ false, %25 ], [ false, %15 ], [ %45, %39 ]
  %48 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %49 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %50 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %51 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %50, i64 124
  %52 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %51, align 8
  %53 = tail call i32 %52(%"class.blink::LayoutBoxModelObject"* %48) #22
  br i1 %47, label %65, label %54

54:                                               ; preds = %46
  %55 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1) #22
  %56 = extractvalue { i64, i64 } %55, 1
  %57 = lshr i64 %56, 32
  %58 = trunc i64 %57 to i32
  %59 = icmp slt i32 %58, 0
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %53, i32 %58) #22
  %62 = extractvalue { i32, i1 } %61, 1
  %63 = extractvalue { i32, i1 } %61, 0
  %64 = select i1 %62, i32 %60, i32 %63, !prof !3
  br label %65

65:                                               ; preds = %46, %54
  %66 = phi i32 [ %64, %54 ], [ %53, %46 ]
  %67 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %68 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %67, i64 120
  %69 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %68, align 8
  %70 = tail call i32 %69(%"class.blink::LayoutBoxModelObject"* %48) #22
  %71 = icmp slt i32 %70, 0
  %72 = select i1 %71, i32 -2147483648, i32 2147483647
  %73 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %66, i32 %70) #22
  %74 = extractvalue { i32, i1 } %73, 1
  %75 = extractvalue { i32, i1 } %73, 0
  %76 = select i1 %74, i32 %72, i32 %75, !prof !3
  %77 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %78 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %77, i64 0, i32 0, i32 9
  %79 = bitcast [20 x i8]* %78 to i160*
  %80 = load i160, i160* %79, align 8
  %81 = and i160 %80, 1190036353683150593851392
  %82 = icmp eq i160 %81, 340010386766614455386112
  br i1 %82, label %112, label %83

83:                                               ; preds = %65
  %84 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %85 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %84 to i96*
  %86 = load i96, i96* %85, align 4
  %87 = and i96 %86, 8589934592
  %88 = icmp eq i96 %87, 0
  br i1 %88, label %112, label %89

89:                                               ; preds = %83
  %90 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %48) #22
  %91 = icmp eq %"class.blink::PaintLayerScrollableArea"* %90, null
  br i1 %91, label %119, label %92

92:                                               ; preds = %89
  %93 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %48) #22
  %94 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %93, i64 0, i32 6, i32 3
  %95 = load i8, i8* %94, align 8
  %96 = and i8 %95, 1
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %102, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %93, i64 0, i32 6, i32 1, i32 0, i32 0
  %100 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %99, align 8
  %101 = icmp eq %"class.blink::Scrollbar"* %100, null
  br i1 %101, label %102, label %119

102:                                              ; preds = %98, %92
  %103 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %48) #22
  %104 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %103, i64 0, i32 6, i32 3
  %105 = load i8, i8* %104, align 8
  %106 = and i8 %105, 2
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %112, label %108

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %103, i64 0, i32 6, i32 2, i32 0, i32 0
  %110 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %109, align 8
  %111 = icmp eq %"class.blink::Scrollbar"* %110, null
  br i1 %111, label %112, label %119

112:                                              ; preds = %108, %102, %83, %65
  %113 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %114 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %113, i64 0, i32 0, i32 9
  %115 = bitcast [20 x i8]* %114 to i160*
  %116 = load i160, i160* %115, align 8
  %117 = and i160 %116, 270215977642229760
  %118 = icmp eq i160 %117, 0
  br label %119

119:                                              ; preds = %89, %98, %108, %112
  %120 = phi i1 [ false, %108 ], [ false, %98 ], [ false, %89 ], [ %118, %112 ]
  %121 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %122 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %121, i64 122
  %123 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %122, align 8
  %124 = tail call i32 %123(%"class.blink::LayoutBoxModelObject"* %48) #22
  br i1 %120, label %135, label %125

125:                                              ; preds = %119
  %126 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1) #22
  %127 = extractvalue { i64, i64 } %126, 0
  %128 = trunc i64 %127 to i32
  %129 = icmp slt i32 %128, 0
  %130 = select i1 %129, i32 -2147483648, i32 2147483647
  %131 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %124, i32 %128) #22
  %132 = extractvalue { i32, i1 } %131, 1
  %133 = extractvalue { i32, i1 } %131, 0
  %134 = select i1 %132, i32 %130, i32 %133, !prof !3
  br label %135

135:                                              ; preds = %119, %125
  %136 = phi i32 [ %134, %125 ], [ %124, %119 ]
  %137 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %138 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %137, i64 118
  %139 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %138, align 8
  %140 = tail call i32 %139(%"class.blink::LayoutBoxModelObject"* %48) #22
  %141 = icmp slt i32 %140, 0
  %142 = select i1 %141, i32 -2147483648, i32 2147483647
  %143 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %136, i32 %140) #22
  %144 = extractvalue { i32, i1 } %143, 1
  %145 = extractvalue { i32, i1 } %143, 0
  %146 = select i1 %144, i32 %142, i32 %145, !prof !3
  %147 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #22
  %148 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %149 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %148, i64 120
  %150 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %149, align 8
  %151 = tail call i32 %150(%"class.blink::LayoutBoxModelObject"* %48) #22
  %152 = icmp sgt i32 %151, -1
  %153 = select i1 %152, i32 -2147483648, i32 2147483647
  %154 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %147, i32 %151) #22
  %155 = extractvalue { i32, i1 } %154, 1
  %156 = extractvalue { i32, i1 } %154, 0
  %157 = select i1 %155, i32 %153, i32 %156, !prof !3
  %158 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %159 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %158, i64 121
  %160 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %159, align 8
  %161 = tail call i32 %160(%"class.blink::LayoutBoxModelObject"* %48) #22
  %162 = icmp sgt i32 %161, -1
  %163 = select i1 %162, i32 -2147483648, i32 2147483647
  %164 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %157, i32 %161) #22
  %165 = extractvalue { i32, i1 } %164, 1
  %166 = extractvalue { i32, i1 } %164, 0
  %167 = select i1 %165, i32 %163, i32 %166, !prof !3
  %168 = icmp sgt i32 %167, 0
  %169 = select i1 %168, i32 %167, i32 0
  %170 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #22
  %171 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %172 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %171, i64 118
  %173 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %172, align 8
  %174 = tail call i32 %173(%"class.blink::LayoutBoxModelObject"* %48) #22
  %175 = icmp sgt i32 %174, -1
  %176 = select i1 %175, i32 -2147483648, i32 2147483647
  %177 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %170, i32 %174) #22
  %178 = extractvalue { i32, i1 } %177, 1
  %179 = extractvalue { i32, i1 } %177, 0
  %180 = select i1 %178, i32 %176, i32 %179, !prof !3
  %181 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %182 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %181, i64 119
  %183 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %182, align 8
  %184 = tail call i32 %183(%"class.blink::LayoutBoxModelObject"* %48) #22
  %185 = icmp sgt i32 %184, -1
  %186 = select i1 %185, i32 -2147483648, i32 2147483647
  %187 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %180, i32 %184) #22
  %188 = extractvalue { i32, i1 } %187, 1
  %189 = extractvalue { i32, i1 } %187, 0
  %190 = select i1 %188, i32 %186, i32 %189, !prof !3
  %191 = icmp sgt i32 %190, 0
  %192 = select i1 %191, i32 %190, i32 0
  %193 = zext i32 %146 to i64
  %194 = shl nuw i64 %193, 32
  %195 = zext i32 %76 to i64
  %196 = or i64 %194, %195
  %197 = insertvalue { i64, i64 } undef, i64 %196, 0
  %198 = zext i32 %192 to i64
  %199 = shl nuw nsw i64 %198, 32
  %200 = zext i32 %169 to i64
  %201 = or i64 %199, %200
  %202 = insertvalue { i64, i64 } %197, i64 %201, 1
  ret { i64, i64 } %202
}

declare void @_ZNK5blink12LayoutObject24LocalToAncestorTransformEPKNS_20LayoutBoxModelObjectEj(%"class.blink::TransformationMatrix"* sret, %"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #6

declare void @_ZN5blink20TransformationMatrix12ToSkMatrix44ERKS0_(%class.SkMatrix44* sret, %"class.blink::TransformationMatrix"* dereferenceable(128)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN5blink8AXObject36LocalBoundingBoxRectForAccessibilityEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %3, i64 125
  %5 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::LayoutObject"* %5(%"class.blink::AXObject"* %0) #22
  %7 = icmp eq %"class.blink::LayoutObject"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %1
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %0, i1 zeroext true)
  %9 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 13
  %10 = bitcast %"class.blink::FloatRect"* %9 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 8
  %12 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 13, i32 1
  %13 = bitcast %"class.blink::FloatSize"* %12 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 8
  br label %15

15:                                               ; preds = %1, %8
  %16 = phi <2 x float> [ %14, %8 ], [ zeroinitializer, %1 ]
  %17 = phi <2 x float> [ %11, %8 ], [ zeroinitializer, %1 ]
  %18 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %17, 0
  %19 = insertvalue { <2 x float>, <2 x float> } %18, <2 x float> %16, 1
  ret { <2 x float>, <2 x float> } %19
}

declare { <2 x float>, <2 x float> } @_ZNK5blink20TransformationMatrix7MapRectERKNS_9FloatRectE(%"class.blink::TransformationMatrix"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject13PerformActionERKN2ui12AXActionDataE(%"class.blink::AXObject"*, %"struct.ui::AXActionData"* dereferenceable(168)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::FloatSize", align 4
  %4 = alloca %"class.blink::IntPoint", align 4
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %176 [
    i32 2, label %8
    i32 3, label %23
    i32 6, label %29
    i32 7, label %44
    i32 9, label %59
    i32 14, label %74
    i32 25, label %89
    i32 26, label %98
    i32 27, label %104
    i32 29, label %125
    i32 30, label %131
    i32 31, label %165
    i32 1, label %177
    i32 4, label %177
    i32 5, label %177
    i32 8, label %177
    i32 10, label %177
    i32 11, label %177
    i32 12, label %177
    i32 13, label %177
    i32 15, label %177
    i32 16, label %177
    i32 0, label %177
    i32 17, label %177
    i32 18, label %177
    i32 19, label %177
    i32 20, label %177
    i32 21, label %177
    i32 22, label %177
    i32 24, label %177
    i32 23, label %177
    i32 28, label %177
    i32 33, label %177
    i32 32, label %177
    i32 34, label %177
    i32 35, label %177
    i32 36, label %177
    i32 37, label %177
  ]

8:                                                ; preds = %2
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names16kAccessiblefocusE, align 8
  %10 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #22
  %11 = bitcast i8* %10 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %11, %"class.WTF::AtomicString"* dereferenceable(8) %9, i32 1, i32 0, i32 1) #22
  %12 = getelementptr inbounds i8, i8* %10, i64 -4
  %13 = bitcast i8* %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  %16 = tail call zeroext i1 @_ZN5blink8AXObject32DispatchEventToAOMEventListenersERNS_5EventE(%"class.blink::AXObject"* %0, %"class.blink::Event"* dereferenceable(104) %11) #22
  br i1 %16, label %177, label %17

17:                                               ; preds = %8
  %18 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %19 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %19, i64 149
  %21 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.blink::AXObject"* %0) #22
  br label %177

23:                                               ; preds = %2
  %24 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %25 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %25, i64 146
  %27 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::AXObject"* %0) #22
  br label %177

29:                                               ; preds = %2
  %30 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names20kAccessibledecrementE, align 8
  %31 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #22
  %32 = bitcast i8* %31 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %32, %"class.WTF::AtomicString"* dereferenceable(8) %30, i32 1, i32 0, i32 1) #22
  %33 = getelementptr inbounds i8, i8* %31, i64 -4
  %34 = bitcast i8* %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = or i16 %35, 1
  store atomic i16 %36, i16* %34 release, align 2
  %37 = tail call zeroext i1 @_ZN5blink8AXObject32DispatchEventToAOMEventListenersERNS_5EventE(%"class.blink::AXObject"* %0, %"class.blink::Event"* dereferenceable(104) %32) #22
  br i1 %37, label %177, label %38

38:                                               ; preds = %29
  %39 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %40 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %40, i64 147
  %42 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.blink::AXObject"* %0) #22
  br label %177

44:                                               ; preds = %2
  %45 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names16kAccessibleclickE, align 8
  %46 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #22
  %47 = bitcast i8* %46 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %47, %"class.WTF::AtomicString"* dereferenceable(8) %45, i32 1, i32 0, i32 1) #22
  %48 = getelementptr inbounds i8, i8* %46, i64 -4
  %49 = bitcast i8* %48 to i16*
  %50 = load atomic i16, i16* %49 monotonic, align 2
  %51 = or i16 %50, 1
  store atomic i16 %51, i16* %49 release, align 2
  %52 = tail call zeroext i1 @_ZN5blink8AXObject32DispatchEventToAOMEventListenersERNS_5EventE(%"class.blink::AXObject"* %0, %"class.blink::Event"* dereferenceable(104) %47) #22
  br i1 %52, label %177, label %53

53:                                               ; preds = %44
  %54 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %55 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %54, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %55, i64 148
  %57 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.blink::AXObject"* %0) #22
  br label %177

59:                                               ; preds = %2
  %60 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names16kAccessiblefocusE, align 8
  %61 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #22
  %62 = bitcast i8* %61 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %62, %"class.WTF::AtomicString"* dereferenceable(8) %60, i32 1, i32 0, i32 1) #22
  %63 = getelementptr inbounds i8, i8* %61, i64 -4
  %64 = bitcast i8* %63 to i16*
  %65 = load atomic i16, i16* %64 monotonic, align 2
  %66 = or i16 %65, 1
  store atomic i16 %66, i16* %64 release, align 2
  %67 = tail call zeroext i1 @_ZN5blink8AXObject32DispatchEventToAOMEventListenersERNS_5EventE(%"class.blink::AXObject"* %0, %"class.blink::Event"* dereferenceable(104) %62) #22
  br i1 %67, label %177, label %68

68:                                               ; preds = %59
  %69 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %70 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %69, align 8
  %71 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %70, i64 149
  %72 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %71, align 8
  %73 = tail call zeroext i1 %72(%"class.blink::AXObject"* %0) #22
  br label %177

74:                                               ; preds = %2
  %75 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names20kAccessibleincrementE, align 8
  %76 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #22
  %77 = bitcast i8* %76 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %77, %"class.WTF::AtomicString"* dereferenceable(8) %75, i32 1, i32 0, i32 1) #22
  %78 = getelementptr inbounds i8, i8* %76, i64 -4
  %79 = bitcast i8* %78 to i16*
  %80 = load atomic i16, i16* %79 monotonic, align 2
  %81 = or i16 %80, 1
  store atomic i16 %81, i16* %79 release, align 2
  %82 = tail call zeroext i1 @_ZN5blink8AXObject32DispatchEventToAOMEventListenersERNS_5EventE(%"class.blink::AXObject"* %0, %"class.blink::Event"* dereferenceable(104) %77) #22
  br i1 %82, label %177, label %83

83:                                               ; preds = %74
  %84 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %85 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %84, align 8
  %86 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %85, i64 150
  %87 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %86, align 8
  %88 = tail call zeroext i1 %87(%"class.blink::AXObject"* %0) #22
  br label %177

89:                                               ; preds = %2
  %90 = bitcast %"class.blink::IntPoint"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #22
  %91 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %4, i64 0, i32 0
  %92 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %1, i64 0, i32 14, i32 0
  %93 = load i32, i32* %92, align 4
  store i32 %93, i32* %91, align 4
  %94 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %4, i64 0, i32 1
  %95 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %1, i64 0, i32 14, i32 1
  %96 = load i32, i32* %95, align 4
  store i32 %96, i32* %94, align 4
  %97 = call zeroext i1 @_ZNK5blink8AXObject33OnNativeScrollToGlobalPointActionERKNS_8IntPointE(%"class.blink::AXObject"* %0, %"class.blink::IntPoint"* nonnull dereferenceable(8) %4) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #22
  br label %177

98:                                               ; preds = %2
  %99 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %100 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %99, align 8
  %101 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %100, i64 145
  %102 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %101, align 8
  %103 = tail call zeroext i1 %102(%"class.blink::AXObject"* %0) #22
  br label %177

104:                                              ; preds = %2
  %105 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %1, i64 0, i32 14, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %1, i64 0, i32 14, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)***
  %110 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)**, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*** %109, align 8
  %111 = getelementptr inbounds %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %110, i64 144
  %112 = load %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)*, %"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)** %111, align 8
  %113 = tail call %"class.blink::ScrollableArea"* %112(%"class.blink::AXObject"* %0) #22
  %114 = icmp eq %"class.blink::ScrollableArea"* %113, null
  br i1 %114, label %177, label %115

115:                                              ; preds = %104
  %116 = bitcast %"class.blink::FloatSize"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #22
  %117 = sitofp i32 %106 to float
  %118 = sitofp i32 %108 to float
  %119 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %3, i64 0, i32 0
  store float %117, float* %119, align 4
  %120 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %3, i64 0, i32 1
  store float %118, float* %120, align 4
  %121 = bitcast %"class.blink::ScrollableArea"* %113 to void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)***
  %122 = load void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)**, void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)*, void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)** %122, i64 5
  %124 = load void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)*, void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)** %123, align 8
  call void %124(%"class.blink::ScrollableArea"* nonnull %113, %"class.blink::FloatSize"* nonnull dereferenceable(8) %3, i32 1, i32 1) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #22
  br label %177

125:                                              ; preds = %2
  %126 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %127 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %126, align 8
  %128 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %127, i64 152
  %129 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %128, align 8
  %130 = tail call zeroext i1 %129(%"class.blink::AXObject"* %0) #22
  br label %177

131:                                              ; preds = %2
  %132 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #22
  %133 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %1, i64 0, i32 15
  %134 = bitcast %"class.std::__1::basic_string"* %133 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  %138 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load i8*, i8** %138, align 8
  %140 = bitcast %"class.std::__1::basic_string"* %133 to i8*
  %141 = select i1 %137, i8* %139, i8* %140
  %142 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8* %141) #22
  %143 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %142, %"class.WTF::StringImpl"** %143, align 8
  %144 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*, %"class.WTF::String"*)***
  %145 = load i1 (%"class.blink::AXObject"*, %"class.WTF::String"*)**, i1 (%"class.blink::AXObject"*, %"class.WTF::String"*)*** %144, align 8
  %146 = getelementptr inbounds i1 (%"class.blink::AXObject"*, %"class.WTF::String"*)*, i1 (%"class.blink::AXObject"*, %"class.WTF::String"*)** %145, i64 153
  %147 = load i1 (%"class.blink::AXObject"*, %"class.WTF::String"*)*, i1 (%"class.blink::AXObject"*, %"class.WTF::String"*)** %146, align 8
  %148 = call zeroext i1 %147(%"class.blink::AXObject"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %5) #22
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %131
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #22
  br label %164

164:                                              ; preds = %131, %160, %163
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #22
  br label %177

165:                                              ; preds = %2
  %166 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names22kAccessiblecontextmenuE, align 8
  %167 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #22
  %168 = bitcast i8* %167 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %168, %"class.WTF::AtomicString"* dereferenceable(8) %166, i32 1, i32 0, i32 1) #22
  %169 = getelementptr inbounds i8, i8* %167, i64 -4
  %170 = bitcast i8* %169 to i16*
  %171 = load atomic i16, i16* %170 monotonic, align 2
  %172 = or i16 %171, 1
  store atomic i16 %172, i16* %170 release, align 2
  %173 = tail call zeroext i1 @_ZN5blink8AXObject32DispatchEventToAOMEventListenersERNS_5EventE(%"class.blink::AXObject"* %0, %"class.blink::Event"* dereferenceable(104) %168) #22
  br i1 %173, label %177, label %174

174:                                              ; preds = %165
  %175 = tail call zeroext i1 @_ZN5blink8AXObject29OnNativeShowContextMenuActionEv(%"class.blink::AXObject"* %0) #22
  br label %177

176:                                              ; preds = %2
  unreachable

177:                                              ; preds = %174, %165, %115, %104, %83, %74, %68, %59, %53, %44, %38, %29, %17, %8, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %164, %125, %98, %89, %23
  %178 = phi i1 [ %148, %164 ], [ %130, %125 ], [ %103, %98 ], [ %97, %89 ], [ %28, %23 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ %22, %17 ], [ true, %8 ], [ %43, %38 ], [ true, %29 ], [ %58, %53 ], [ true, %44 ], [ %73, %68 ], [ true, %59 ], [ %88, %83 ], [ true, %74 ], [ true, %104 ], [ true, %115 ], [ %175, %174 ], [ true, %165 ]
  ret i1 %178
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject18RequestFocusActionEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names16kAccessiblefocusE, align 8
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #22
  %4 = bitcast i8* %3 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %4, %"class.WTF::AtomicString"* dereferenceable(8) %2, i32 1, i32 0, i32 1) #22
  %5 = getelementptr inbounds i8, i8* %3, i64 -4
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = or i16 %7, 1
  store atomic i16 %8, i16* %6 release, align 2
  %9 = tail call zeroext i1 @_ZN5blink8AXObject32DispatchEventToAOMEventListenersERNS_5EventE(%"class.blink::AXObject"* %0, %"class.blink::Event"* dereferenceable(104) %4)
  br i1 %9, label %16, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %12 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %12, i64 149
  %14 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::AXObject"* %0) #22
  br label %16

16:                                               ; preds = %1, %10
  %17 = phi i1 [ %15, %10 ], [ true, %1 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject22RequestDecrementActionEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names20kAccessibledecrementE, align 8
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #22
  %4 = bitcast i8* %3 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %4, %"class.WTF::AtomicString"* dereferenceable(8) %2, i32 1, i32 0, i32 1) #22
  %5 = getelementptr inbounds i8, i8* %3, i64 -4
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = or i16 %7, 1
  store atomic i16 %8, i16* %6 release, align 2
  %9 = tail call zeroext i1 @_ZN5blink8AXObject32DispatchEventToAOMEventListenersERNS_5EventE(%"class.blink::AXObject"* %0, %"class.blink::Event"* dereferenceable(104) %4)
  br i1 %9, label %16, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %12 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %12, i64 147
  %14 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::AXObject"* %0) #22
  br label %16

16:                                               ; preds = %1, %10
  %17 = phi i1 [ %15, %10 ], [ true, %1 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject18RequestClickActionEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names16kAccessibleclickE, align 8
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #22
  %4 = bitcast i8* %3 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %4, %"class.WTF::AtomicString"* dereferenceable(8) %2, i32 1, i32 0, i32 1) #22
  %5 = getelementptr inbounds i8, i8* %3, i64 -4
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = or i16 %7, 1
  store atomic i16 %8, i16* %6 release, align 2
  %9 = tail call zeroext i1 @_ZN5blink8AXObject32DispatchEventToAOMEventListenersERNS_5EventE(%"class.blink::AXObject"* %0, %"class.blink::Event"* dereferenceable(104) %4)
  br i1 %9, label %16, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %12 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %12, i64 148
  %14 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::AXObject"* %0) #22
  br label %16

16:                                               ; preds = %1, %10
  %17 = phi i1 [ %15, %10 ], [ true, %1 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject22RequestIncrementActionEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names20kAccessibleincrementE, align 8
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #22
  %4 = bitcast i8* %3 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %4, %"class.WTF::AtomicString"* dereferenceable(8) %2, i32 1, i32 0, i32 1) #22
  %5 = getelementptr inbounds i8, i8* %3, i64 -4
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = or i16 %7, 1
  store atomic i16 %8, i16* %6 release, align 2
  %9 = tail call zeroext i1 @_ZN5blink8AXObject32DispatchEventToAOMEventListenersERNS_5EventE(%"class.blink::AXObject"* %0, %"class.blink::Event"* dereferenceable(104) %4)
  br i1 %9, label %16, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %12 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %12, i64 150
  %14 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::AXObject"* %0) #22
  br label %16

16:                                               ; preds = %1, %10
  %17 = phi i1 [ %15, %10 ], [ true, %1 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject32RequestScrollToGlobalPointActionERKNS_8IntPointE(%"class.blink::AXObject"*, %"class.blink::IntPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject33OnNativeScrollToGlobalPointActionERKNS_8IntPointE(%"class.blink::AXObject"* %0, %"class.blink::IntPoint"* dereferenceable(8) %1)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject54RequestSetSequentialFocusNavigationStartingPointActionEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %3 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %3, i64 152
  %5 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::AXObject"* %0) #22
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject21RequestSetValueActionERKN3WTF6StringE(%"class.blink::AXObject"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*, %"class.WTF::String"*)***
  %4 = load i1 (%"class.blink::AXObject"*, %"class.WTF::String"*)**, i1 (%"class.blink::AXObject"*, %"class.WTF::String"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::AXObject"*, %"class.WTF::String"*)*, i1 (%"class.blink::AXObject"*, %"class.WTF::String"*)** %4, i64 153
  %6 = load i1 (%"class.blink::AXObject"*, %"class.WTF::String"*)*, i1 (%"class.blink::AXObject"*, %"class.WTF::String"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::AXObject"* %0, %"class.WTF::String"* dereferenceable(8) %1) #22
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject28RequestShowContextMenuActionEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names22kAccessiblecontextmenuE, align 8
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #22
  %4 = bitcast i8* %3 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %4, %"class.WTF::AtomicString"* dereferenceable(8) %2, i32 1, i32 0, i32 1) #22
  %5 = getelementptr inbounds i8, i8* %3, i64 -4
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = or i16 %7, 1
  store atomic i16 %8, i16* %6 release, align 2
  %9 = tail call zeroext i1 @_ZN5blink8AXObject32DispatchEventToAOMEventListenersERNS_5EventE(%"class.blink::AXObject"* %0, %"class.blink::Event"* dereferenceable(104) %4)
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = tail call zeroext i1 @_ZN5blink8AXObject29OnNativeShowContextMenuActionEv(%"class.blink::AXObject"* %0)
  br label %12

12:                                               ; preds = %1, %10
  %13 = phi i1 [ %11, %10 ], [ true, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject19OnNativeClickActionEv(%"class.blink::AXObject"*) unnamed_addr #2 align 2 {
  %2 = alloca %"struct.blink::FocusParams", align 8
  %3 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %4 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %4, i64 126
  %6 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %5, align 8
  %7 = tail call %"class.blink::Document"* %6(%"class.blink::AXObject"* %0) #22
  %8 = icmp eq %"class.blink::Document"* %7, null
  br i1 %8, label %132, label %9

9:                                                ; preds = %1
  %10 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %7) #22
  tail call void @_ZN5blink10LocalFrame20NotifyUserActivationEPS0_NS_5mojom30UserActivationNotificationTypeEb(%"class.blink::LocalFrame"* %10, i32 1, i1 zeroext false) #22
  %11 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %12 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %12, i64 124
  %14 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %13, align 8
  %15 = tail call %"class.blink::Node"* %14(%"class.blink::AXObject"* %0) #22
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 12
  %21 = icmp eq i32 %20, 0
  %22 = bitcast %"class.blink::Node"* %15 to %"class.blink::Element"*
  br i1 %21, label %43, label %23

23:                                               ; preds = %17, %9
  %24 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %11, align 8
  %25 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %24, i64 124
  %26 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %25, align 8
  %27 = tail call %"class.blink::Node"* %26(%"class.blink::AXObject"* %0) #22
  %28 = icmp eq %"class.blink::Node"* %27, null
  br i1 %28, label %43, label %29

29:                                               ; preds = %23
  %30 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %11, align 8
  %31 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %30, i64 124
  %32 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %31, align 8
  %33 = tail call %"class.blink::Node"* %32(%"class.blink::AXObject"* %0) #22
  %34 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %33) #22
  %35 = icmp eq %"class.blink::ContainerNode"* %34, null
  br i1 %35, label %43, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %34, i64 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 12
  %40 = icmp eq i32 %39, 0
  %41 = bitcast %"class.blink::ContainerNode"* %34 to %"class.blink::Element"*
  %42 = select i1 %40, %"class.blink::Element"* %41, %"class.blink::Element"* null
  br label %43

43:                                               ; preds = %17, %36, %29, %23
  %44 = phi %"class.blink::Element"* [ null, %23 ], [ %42, %36 ], [ null, %29 ], [ %22, %17 ]
  %45 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %46 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %45, align 8
  %47 = icmp eq %"class.blink::AXObjectCacheImpl"* %46, null
  br i1 %47, label %74, label %48

48:                                               ; preds = %43
  %49 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %11, align 8
  %50 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %49, i64 124
  %51 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %50, align 8
  %52 = tail call %"class.blink::Node"* %51(%"class.blink::AXObject"* %0) #22
  %53 = icmp eq %"class.blink::Node"* %52, null
  br i1 %53, label %66, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %52, i64 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = and i32 %56, 12
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %66

59:                                               ; preds = %54
  %60 = bitcast %"class.blink::Node"* %52 to %"class.blink::Element"*
  %61 = bitcast %"class.blink::Node"* %52 to i1 (%"class.blink::Element"*)***
  %62 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %61, align 8
  %63 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %62, i64 126
  %64 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %63, align 8
  %65 = tail call zeroext i1 %64(%"class.blink::Element"* nonnull %60) #22
  br i1 %65, label %68, label %66

66:                                               ; preds = %48, %54, %59
  %67 = tail call zeroext i1 @_ZNK5blink8AXObject20IsNonAtomicTextFieldEv(%"class.blink::AXObject"* %0) #22
  br i1 %67, label %68, label %74

68:                                               ; preds = %59, %66
  %69 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %70 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %69, align 8
  %71 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %70, i64 149
  %72 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %71, align 8
  %73 = tail call zeroext i1 %72(%"class.blink::AXObject"* %0) #22
  br label %132

74:                                               ; preds = %43, %66
  %75 = icmp eq %"class.blink::Element"* %44, null
  br i1 %75, label %124, label %76

76:                                               ; preds = %74
  %77 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %3, align 8
  %78 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %77, i64 126
  %79 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %78, align 8
  %80 = tail call %"class.blink::Document"* %79(%"class.blink::AXObject"* %0) #22
  %81 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %44, i64 0, i32 0, i32 0
  tail call void @_ZN5blink8Document41SetSequentialFocusNavigationStartingPointEPNS_4NodeE(%"class.blink::Document"* %80, %"class.blink::Node"* %81) #22
  %82 = bitcast %"class.blink::Element"* %44 to i1 (%"class.blink::Element"*)***
  %83 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %82, align 8
  %84 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %83, i64 104
  %85 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %84, align 8
  %86 = tail call zeroext i1 %85(%"class.blink::Element"* nonnull %44) #22
  br i1 %86, label %87, label %119

87:                                               ; preds = %76
  %88 = tail call zeroext i1 @_ZNK5blink7Element26IsFocusedElementInDocumentEv(%"class.blink::Element"* nonnull %44) #22
  br i1 %88, label %119, label %89

89:                                               ; preds = %87
  %90 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %3, align 8
  %91 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %90, i64 126
  %92 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %91, align 8
  %93 = tail call %"class.blink::Document"* %92(%"class.blink::AXObject"* %0) #22
  %94 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %93) #22
  %95 = icmp eq %"class.blink::Page"* %94, null
  br i1 %95, label %119, label %96

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %94, i64 0, i32 10, i32 0, i32 0
  %98 = load %"class.blink::FocusController"*, %"class.blink::FocusController"** %97, align 8
  %99 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %3, align 8
  %100 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %99, i64 126
  %101 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %100, align 8
  %102 = tail call %"class.blink::Document"* %101(%"class.blink::AXObject"* %0) #22
  %103 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %102) #22
  %104 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %103, i64 0, i32 0
  %105 = bitcast %"struct.blink::FocusParams"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %105) #22
  %106 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 16) #22
  %107 = bitcast i8* %106 to %"class.blink::FocusOptions"*
  tail call void @_ZN5blink12FocusOptionsC1Ev(%"class.blink::FocusOptions"* %107) #22
  %108 = getelementptr inbounds i8, i8* %106, i64 -4
  %109 = bitcast i8* %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = or i16 %110, 1
  store atomic i16 %111, i16* %109 release, align 2
  %112 = getelementptr inbounds %"struct.blink::FocusParams", %"struct.blink::FocusParams"* %2, i64 0, i32 0
  store i32 2, i32* %112, align 8
  %113 = getelementptr inbounds %"struct.blink::FocusParams", %"struct.blink::FocusParams"* %2, i64 0, i32 1
  store i32 4, i32* %113, align 4
  %114 = getelementptr inbounds %"struct.blink::FocusParams", %"struct.blink::FocusParams"* %2, i64 0, i32 2
  store %"class.blink::InputDeviceCapabilities"* null, %"class.blink::InputDeviceCapabilities"** %114, align 8
  %115 = getelementptr inbounds %"struct.blink::FocusParams", %"struct.blink::FocusParams"* %2, i64 0, i32 3
  %116 = bitcast %"class.blink::FocusOptions"** %115 to i8**
  store i8* %106, i8** %116, align 8
  %117 = getelementptr inbounds %"struct.blink::FocusParams", %"struct.blink::FocusParams"* %2, i64 0, i32 4
  store i8 0, i8* %117, align 8
  %118 = call zeroext i1 @_ZN5blink15FocusController17SetFocusedElementEPNS_7ElementEPNS_5FrameERKNS_11FocusParamsE(%"class.blink::FocusController"* %98, %"class.blink::Element"* nonnull %44, %"class.blink::Frame"* %104, %"struct.blink::FocusParams"* nonnull dereferenceable(32) %2) #22
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %105) #22
  br label %119

119:                                              ; preds = %96, %89, %87, %76
  %120 = bitcast %"class.blink::Element"* %44 to void (%"class.blink::Element"*, i32)***
  %121 = load void (%"class.blink::Element"*, i32)**, void (%"class.blink::Element"*, i32)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.blink::Element"*, i32)*, void (%"class.blink::Element"*, i32)** %121, i64 92
  %123 = load void (%"class.blink::Element"*, i32)*, void (%"class.blink::Element"*, i32)** %122, align 8
  call void %123(%"class.blink::Element"* nonnull %44, i32 2) #22
  br label %132

124:                                              ; preds = %74
  %125 = tail call zeroext i1 @_ZNK5blink8AXObject20CanSetFocusAttributeEv(%"class.blink::AXObject"* %0)
  br i1 %125, label %126, label %132

126:                                              ; preds = %124
  %127 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %128 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %127, align 8
  %129 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %128, i64 149
  %130 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %129, align 8
  %131 = tail call zeroext i1 %130(%"class.blink::AXObject"* %0) #22
  br label %132

132:                                              ; preds = %68, %119, %126, %124, %1
  %133 = phi i1 [ false, %1 ], [ %73, %68 ], [ true, %119 ], [ %131, %126 ], [ false, %124 ]
  ret i1 %133
}

declare void @_ZN5blink10LocalFrame20NotifyUserActivationEPS0_NS_5mojom30UserActivationNotificationTypeEb(%"class.blink::LocalFrame"*, i32, i1 zeroext) local_unnamed_addr #6

declare void @_ZN5blink8Document41SetSequentialFocusNavigationStartingPointEPNS_4NodeE(%"class.blink::Document"*, %"class.blink::Node"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK5blink7Element26IsFocusedElementInDocumentEv(%"class.blink::Element"*) local_unnamed_addr #6

declare zeroext i1 @_ZN5blink15FocusController17SetFocusedElementEPNS_7ElementEPNS_5FrameERKNS_11FocusParamsE(%"class.blink::FocusController"*, %"class.blink::Element"*, %"class.blink::Frame"*, %"struct.blink::FocusParams"* dereferenceable(32)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject33OnNativeScrollToGlobalPointActionERKNS_8IntPointE(%"class.blink::AXObject"*, %"class.blink::IntPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"struct.blink::PhysicalRect", align 8
  %4 = alloca %"class.mojo::StructPtr.3817", align 8
  %5 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %6 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %6, i64 124
  %8 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %7, align 8
  %9 = tail call %"class.blink::Node"* %8(%"class.blink::AXObject"* %0) #22
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %162, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 256
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %162, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %18 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %18, i64 126
  %20 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %19, align 8
  %21 = tail call %"class.blink::Document"* %20(%"class.blink::AXObject"* %0) #22
  tail call void @_ZN5blink8Document27UpdateStyleAndLayoutForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %21, %"class.blink::Node"* nonnull %9, i32 5) #22
  %22 = load i32, i32* %12, align 8
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 6, i32 0, i32 0
  br i1 %24, label %30, label %26

26:                                               ; preds = %16
  %27 = bitcast %"class.blink::NodeData"** %25 to %"class.blink::NodeRareData"**
  %28 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %28, i64 0, i32 1, i32 0, i32 0
  br label %32

30:                                               ; preds = %16
  %31 = bitcast %"class.blink::NodeData"** %25 to %"class.blink::NodeRenderingData"**
  br label %32

32:                                               ; preds = %26, %30
  %33 = phi %"class.blink::NodeRenderingData"** [ %29, %26 ], [ %31, %30 ]
  %34 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %34, i64 0, i32 1
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = icmp eq %"class.blink::LayoutObject"* %36, null
  br i1 %37, label %162, label %38

38:                                               ; preds = %32
  %39 = bitcast %"struct.blink::PhysicalRect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #22
  %40 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"struct.blink::PhysicalRect"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 16, i1 false)
  %42 = tail call { i64, i64 } @_ZNK5blink12LayoutObject23AbsoluteBoundingBoxRectEj(%"class.blink::LayoutObject"* nonnull %36, i32 0) #22
  %43 = extractvalue { i64, i64 } %42, 0
  %44 = extractvalue { i64, i64 } %42, 1
  %45 = trunc i64 %43 to i32
  %46 = lshr i64 %43, 32
  %47 = trunc i64 %46 to i32
  %48 = icmp sgt i32 %45, 33554431
  br i1 %48, label %53, label %49

49:                                               ; preds = %38
  %50 = icmp slt i32 %45, -33554432
  %51 = shl i32 %45, 6
  %52 = select i1 %50, i32 -2147483648, i32 %51
  br label %53

53:                                               ; preds = %49, %38
  %54 = phi i32 [ 2147483647, %38 ], [ %52, %49 ]
  store i32 %54, i32* %40, align 8
  %55 = icmp sgt i32 %47, 33554431
  br i1 %55, label %61, label %56

56:                                               ; preds = %53
  %57 = icmp slt i32 %47, -33554432
  br i1 %57, label %61, label %58

58:                                               ; preds = %56
  %59 = shl nuw nsw i64 %46, 6
  %60 = trunc i64 %59 to i32
  br label %61

61:                                               ; preds = %56, %53, %58
  %62 = phi i32 [ %60, %58 ], [ 2147483647, %53 ], [ -2147483648, %56 ]
  %63 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 0, i32 1, i32 0
  store i32 %62, i32* %63, align 4
  %64 = trunc i64 %44 to i32
  %65 = lshr i64 %44, 32
  %66 = trunc i64 %65 to i32
  %67 = icmp sgt i32 %64, 33554431
  br i1 %67, label %72, label %68

68:                                               ; preds = %61
  %69 = icmp slt i32 %64, -33554432
  %70 = shl i32 %64, 6
  %71 = select i1 %69, i32 -2147483648, i32 %70
  br label %72

72:                                               ; preds = %68, %61
  %73 = phi i32 [ 2147483647, %61 ], [ %71, %68 ]
  %74 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1, i32 0, i32 0
  store i32 %73, i32* %74, align 8
  %75 = icmp sgt i32 %66, 33554431
  br i1 %75, label %81, label %76

76:                                               ; preds = %72
  %77 = icmp slt i32 %66, -33554432
  br i1 %77, label %81, label %78

78:                                               ; preds = %76
  %79 = shl nuw nsw i64 %65, 6
  %80 = trunc i64 %79 to i32
  br label %81

81:                                               ; preds = %76, %72, %78
  %82 = phi i32 [ %80, %78 ], [ 2147483647, %72 ], [ -2147483648, %76 ]
  %83 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1, i32 1, i32 0
  store i32 %82, i32* %83, align 4
  %84 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %1, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp sgt i32 %85, 33554431
  br i1 %86, label %91, label %87

87:                                               ; preds = %81
  %88 = icmp slt i32 %85, -33554432
  %89 = shl i32 %85, 6
  %90 = select i1 %88, i32 -2147483648, i32 %89
  br label %91

91:                                               ; preds = %87, %81
  %92 = phi i32 [ 2147483647, %81 ], [ %90, %87 ]
  %93 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %1, i64 0, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 33554431
  br i1 %95, label %100, label %96

96:                                               ; preds = %91
  %97 = icmp slt i32 %94, -33554432
  %98 = shl i32 %94, 6
  %99 = select i1 %97, i32 -2147483648, i32 %98
  br label %100

100:                                              ; preds = %96, %91
  %101 = phi i32 [ 2147483647, %91 ], [ %99, %96 ]
  %102 = tail call i1 @llvm.is.constant.i32(i32 %92) #22
  br i1 %102, label %103, label %107

103:                                              ; preds = %100
  %104 = sub i32 0, %92
  %105 = icmp eq i32 %104, -2147483648
  %106 = select i1 %105, i32 2147483647, i32 %104
  br label %112

107:                                              ; preds = %100
  %108 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %92) #22
  %109 = extractvalue { i32, i1 } %108, 1
  %110 = extractvalue { i32, i1 } %108, 0
  %111 = select i1 %109, i32 2147483647, i32 %110
  br label %112

112:                                              ; preds = %107, %103
  %113 = phi i32 [ %106, %103 ], [ %111, %107 ]
  %114 = tail call i1 @llvm.is.constant.i32(i32 %101) #22
  br i1 %114, label %115, label %119

115:                                              ; preds = %112
  %116 = sub i32 0, %101
  %117 = icmp eq i32 %116, -2147483648
  %118 = select i1 %117, i32 2147483647, i32 %116
  br label %124

119:                                              ; preds = %112
  %120 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %101) #22
  %121 = extractvalue { i32, i1 } %120, 1
  %122 = extractvalue { i32, i1 } %120, 0
  %123 = select i1 %121, i32 2147483647, i32 %122
  br label %124

124:                                              ; preds = %115, %119
  %125 = phi i32 [ %118, %115 ], [ %123, %119 ]
  %126 = icmp slt i32 %113, 0
  %127 = select i1 %126, i32 -2147483648, i32 2147483647
  %128 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %54, i32 %113) #22
  %129 = extractvalue { i32, i1 } %128, 1
  %130 = extractvalue { i32, i1 } %128, 0
  %131 = select i1 %129, i32 %127, i32 %130, !prof !3
  %132 = icmp slt i32 %125, 0
  %133 = select i1 %132, i32 -2147483648, i32 2147483647
  %134 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %62, i32 %125) #22
  %135 = extractvalue { i32, i1 } %134, 1
  %136 = extractvalue { i32, i1 } %134, 0
  %137 = select i1 %135, i32 %133, i32 %136, !prof !3
  %138 = zext i32 %137 to i64
  %139 = shl nuw i64 %138, 32
  %140 = zext i32 %131 to i64
  %141 = or i64 %139, %140
  %142 = bitcast %"struct.blink::PhysicalRect"* %3 to i64*
  store i64 %141, i64* %142, align 8
  %143 = tail call dereferenceable(12) %"class.blink::mojom::blink::ScrollAlignment"* @_ZN5blink15ScrollAlignment10LeftAlwaysEv() #22
  %144 = tail call dereferenceable(12) %"class.blink::mojom::blink::ScrollAlignment"* @_ZN5blink15ScrollAlignment9TopAlwaysEv() #22
  call void @_ZN5blink15ScrollAlignment26CreateScrollIntoViewParamsERKNS_5mojom5blink15ScrollAlignmentES5_NS1_10ScrollTypeEbNS1_14ScrollBehaviorEbb(%"class.mojo::StructPtr.3817"* nonnull sret %4, %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12) %143, %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12) %144, i32 1, i1 zeroext false, i32 0, i1 zeroext false, i1 zeroext false) #22
  %145 = call { i64, i64 } @_ZN5blink12LayoutObject19ScrollRectToVisibleERKNS_12PhysicalRectEN4mojo9StructPtrINS_5mojom5blink20ScrollIntoViewParamsEEE(%"class.blink::LayoutObject"* nonnull %36, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %3, %"class.mojo::StructPtr.3817"* nonnull %4) #22
  %146 = getelementptr inbounds %"class.mojo::StructPtr.3817", %"class.mojo::StructPtr.3817"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %147 = load %"class.blink::mojom::blink::ScrollIntoViewParams"*, %"class.blink::mojom::blink::ScrollIntoViewParams"** %146, align 8
  store %"class.blink::mojom::blink::ScrollIntoViewParams"* null, %"class.blink::mojom::blink::ScrollIntoViewParams"** %146, align 8
  %148 = icmp eq %"class.blink::mojom::blink::ScrollIntoViewParams"* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %124
  call void @_ZN5blink5mojom5blink20ScrollIntoViewParamsD1Ev(%"class.blink::mojom::blink::ScrollIntoViewParams"* nonnull %147) #22
  %150 = bitcast %"class.blink::mojom::blink::ScrollIntoViewParams"* %147 to i8*
  call void @_ZdlPv(i8* %150) #23
  br label %151

151:                                              ; preds = %124, %149
  %152 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %153 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %152, align 8
  %154 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %17, align 8
  %155 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %154, i64 126
  %156 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %155, align 8
  %157 = call %"class.blink::Document"* %156(%"class.blink::AXObject"* %0) #22
  %158 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %157, i64 0, i32 113
  %159 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %158, align 8
  %160 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %159, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_12LayoutObjectE(%"class.blink::AXObjectCacheImpl"* %153, %"class.blink::LayoutObject"* %160) #22
  call void @_ZN5blink17AXObjectCacheImpl16PostNotificationEPNS_8AXObjectEN2ax5mojom5EventE(%"class.blink::AXObjectCacheImpl"* %153, %"class.blink::AXObject"* %161, i32 26) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #22
  br label %162

162:                                              ; preds = %11, %2, %32, %151
  %163 = phi i1 [ true, %151 ], [ false, %32 ], [ false, %2 ], [ false, %11 ]
  ret i1 %163
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject32RequestScrollToMakeVisibleActionEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names25kAccessiblescrollintoviewE, align 8
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #22
  %4 = bitcast i8* %3 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %4, %"class.WTF::AtomicString"* dereferenceable(8) %2, i32 1, i32 0, i32 1) #22
  %5 = getelementptr inbounds i8, i8* %3, i64 -4
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = or i16 %7, 1
  store atomic i16 %8, i16* %6 release, align 2
  %9 = tail call zeroext i1 @_ZN5blink8AXObject32DispatchEventToAOMEventListenersERNS_5EventE(%"class.blink::AXObject"* %0, %"class.blink::Event"* dereferenceable(104) %4)
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = tail call zeroext i1 @_ZNK5blink8AXObject33OnNativeScrollToMakeVisibleActionEv(%"class.blink::AXObject"* %0)
  br label %12

12:                                               ; preds = %1, %10
  %13 = phi i1 [ %11, %10 ], [ true, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject33OnNativeScrollToMakeVisibleActionEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"struct.blink::PhysicalRect", align 4
  %3 = alloca %"class.mojo::StructPtr.3817", align 8
  %4 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %5 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %5, i64 124
  %7 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %6, align 8
  %8 = tail call %"class.blink::Node"* %7(%"class.blink::AXObject"* %0) #22
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %102, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 256
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %102, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %17 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %17, i64 126
  %19 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %18, align 8
  %20 = tail call %"class.blink::Document"* %19(%"class.blink::AXObject"* %0) #22
  tail call void @_ZN5blink8Document27UpdateStyleAndLayoutForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %20, %"class.blink::Node"* nonnull %8, i32 5) #22
  %21 = load i32, i32* %11, align 8
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 6, i32 0, i32 0
  br i1 %23, label %29, label %25

25:                                               ; preds = %15
  %26 = bitcast %"class.blink::NodeData"** %24 to %"class.blink::NodeRareData"**
  %27 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %27, i64 0, i32 1, i32 0, i32 0
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %"class.blink::NodeData"** %24 to %"class.blink::NodeRenderingData"**
  br label %31

31:                                               ; preds = %25, %29
  %32 = phi %"class.blink::NodeRenderingData"** [ %28, %25 ], [ %30, %29 ]
  %33 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %33, i64 0, i32 1
  %35 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutObject"* %35, null
  br i1 %36, label %102, label %37

37:                                               ; preds = %31
  %38 = bitcast %"struct.blink::PhysicalRect"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #22
  %39 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 0, i32 0
  %40 = bitcast %"struct.blink::PhysicalRect"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %40, i8 -86, i64 16, i1 false)
  %41 = tail call { i64, i64 } @_ZNK5blink12LayoutObject23AbsoluteBoundingBoxRectEj(%"class.blink::LayoutObject"* nonnull %35, i32 0) #22
  %42 = extractvalue { i64, i64 } %41, 0
  %43 = extractvalue { i64, i64 } %41, 1
  %44 = trunc i64 %42 to i32
  %45 = lshr i64 %42, 32
  %46 = trunc i64 %45 to i32
  %47 = icmp sgt i32 %44, 33554431
  br i1 %47, label %52, label %48

48:                                               ; preds = %37
  %49 = icmp slt i32 %44, -33554432
  %50 = shl i32 %44, 6
  %51 = select i1 %49, i32 -2147483648, i32 %50
  br label %52

52:                                               ; preds = %48, %37
  %53 = phi i32 [ 2147483647, %37 ], [ %51, %48 ]
  store i32 %53, i32* %39, align 4
  %54 = icmp sgt i32 %46, 33554431
  br i1 %54, label %60, label %55

55:                                               ; preds = %52
  %56 = icmp slt i32 %46, -33554432
  br i1 %56, label %60, label %57

57:                                               ; preds = %55
  %58 = shl nuw nsw i64 %45, 6
  %59 = trunc i64 %58 to i32
  br label %60

60:                                               ; preds = %55, %52, %57
  %61 = phi i32 [ %59, %57 ], [ 2147483647, %52 ], [ -2147483648, %55 ]
  %62 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 1, i32 0
  store i32 %61, i32* %62, align 4
  %63 = trunc i64 %43 to i32
  %64 = lshr i64 %43, 32
  %65 = trunc i64 %64 to i32
  %66 = icmp sgt i32 %63, 33554431
  br i1 %66, label %71, label %67

67:                                               ; preds = %60
  %68 = icmp slt i32 %63, -33554432
  %69 = shl i32 %63, 6
  %70 = select i1 %68, i32 -2147483648, i32 %69
  br label %71

71:                                               ; preds = %67, %60
  %72 = phi i32 [ 2147483647, %60 ], [ %70, %67 ]
  %73 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 0, i32 0
  store i32 %72, i32* %73, align 4
  %74 = icmp sgt i32 %65, 33554431
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = icmp slt i32 %65, -33554432
  br i1 %76, label %80, label %77

77:                                               ; preds = %75
  %78 = shl nuw nsw i64 %64, 6
  %79 = trunc i64 %78 to i32
  br label %80

80:                                               ; preds = %75, %71, %77
  %81 = phi i32 [ %79, %77 ], [ 2147483647, %71 ], [ -2147483648, %75 ]
  %82 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 1, i32 0
  store i32 %81, i32* %82, align 4
  %83 = tail call dereferenceable(12) %"class.blink::mojom::blink::ScrollAlignment"* @_ZN5blink15ScrollAlignment14CenterIfNeededEv() #22
  %84 = tail call dereferenceable(12) %"class.blink::mojom::blink::ScrollAlignment"* @_ZN5blink15ScrollAlignment14CenterIfNeededEv() #22
  call void @_ZN5blink15ScrollAlignment26CreateScrollIntoViewParamsERKNS_5mojom5blink15ScrollAlignmentES5_NS1_10ScrollTypeEbNS1_14ScrollBehaviorEbb(%"class.mojo::StructPtr.3817"* nonnull sret %3, %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12) %83, %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12) %84, i32 1, i1 zeroext false, i32 0, i1 zeroext false, i1 zeroext false) #22
  %85 = call { i64, i64 } @_ZN5blink12LayoutObject19ScrollRectToVisibleERKNS_12PhysicalRectEN4mojo9StructPtrINS_5mojom5blink20ScrollIntoViewParamsEEE(%"class.blink::LayoutObject"* nonnull %35, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %2, %"class.mojo::StructPtr.3817"* nonnull %3) #22
  %86 = getelementptr inbounds %"class.mojo::StructPtr.3817", %"class.mojo::StructPtr.3817"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %87 = load %"class.blink::mojom::blink::ScrollIntoViewParams"*, %"class.blink::mojom::blink::ScrollIntoViewParams"** %86, align 8
  store %"class.blink::mojom::blink::ScrollIntoViewParams"* null, %"class.blink::mojom::blink::ScrollIntoViewParams"** %86, align 8
  %88 = icmp eq %"class.blink::mojom::blink::ScrollIntoViewParams"* %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %80
  call void @_ZN5blink5mojom5blink20ScrollIntoViewParamsD1Ev(%"class.blink::mojom::blink::ScrollIntoViewParams"* nonnull %87) #22
  %90 = bitcast %"class.blink::mojom::blink::ScrollIntoViewParams"* %87 to i8*
  call void @_ZdlPv(i8* %90) #23
  br label %91

91:                                               ; preds = %80, %89
  %92 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %93 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %92, align 8
  %94 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %16, align 8
  %95 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %94, i64 126
  %96 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %95, align 8
  %97 = call %"class.blink::Document"* %96(%"class.blink::AXObject"* %0) #22
  %98 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %97, i64 0, i32 113
  %99 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_12LayoutObjectE(%"class.blink::AXObjectCacheImpl"* %93, %"class.blink::LayoutObject"* %100) #22
  call void @_ZN5blink17AXObjectCacheImpl16PostNotificationEPNS_8AXObjectEN2ax5mojom5EventE(%"class.blink::AXObjectCacheImpl"* %93, %"class.blink::AXObject"* %101, i32 26) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #22
  br label %102

102:                                              ; preds = %10, %1, %31, %91
  %103 = phi i1 [ true, %91 ], [ false, %31 ], [ false, %1 ], [ false, %10 ]
  ret i1 %103
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject44RequestScrollToMakeVisibleWithSubFocusActionERKNS_7IntRectENS_5mojom5blink15ScrollAlignmentES6_(%"class.blink::AXObject"*, %"class.blink::IntRect"* nocapture readonly dereferenceable(16), %"class.blink::mojom::blink::ScrollAlignment"* nocapture readonly, %"class.blink::mojom::blink::ScrollAlignment"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.blink::mojom::blink::ScrollAlignment", align 4
  %6 = alloca %"class.blink::mojom::blink::ScrollAlignment", align 4
  %7 = bitcast %"class.blink::mojom::blink::ScrollAlignment"* %5 to i8*
  %8 = bitcast %"class.blink::mojom::blink::ScrollAlignment"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 4 %8, i64 12, i1 false)
  %9 = bitcast %"class.blink::mojom::blink::ScrollAlignment"* %6 to i8*
  %10 = bitcast %"class.blink::mojom::blink::ScrollAlignment"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %9, i8* align 4 %10, i64 12, i1 false)
  %11 = call zeroext i1 @_ZNK5blink8AXObject45OnNativeScrollToMakeVisibleWithSubFocusActionERKNS_7IntRectENS_5mojom5blink15ScrollAlignmentES6_(%"class.blink::AXObject"* %0, %"class.blink::IntRect"* dereferenceable(16) %1, %"class.blink::mojom::blink::ScrollAlignment"* nonnull %5, %"class.blink::mojom::blink::ScrollAlignment"* nonnull %6)
  call void @_ZN5blink5mojom5blink15ScrollAlignmentD1Ev(%"class.blink::mojom::blink::ScrollAlignment"* nonnull %6) #22
  call void @_ZN5blink5mojom5blink15ScrollAlignmentD1Ev(%"class.blink::mojom::blink::ScrollAlignment"* nonnull %5) #22
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject45OnNativeScrollToMakeVisibleWithSubFocusActionERKNS_7IntRectENS_5mojom5blink15ScrollAlignmentES6_(%"class.blink::AXObject"*, %"class.blink::IntRect"* nocapture readonly dereferenceable(16), %"class.blink::mojom::blink::ScrollAlignment"*, %"class.blink::mojom::blink::ScrollAlignment"*) local_unnamed_addr #2 align 2 {
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"struct.blink::PhysicalRect"*
  %7 = alloca %"struct.blink::PhysicalRect", align 4
  %8 = alloca %"class.mojo::StructPtr.3817", align 8
  %9 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %10 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %10, i64 124
  %12 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %11, align 8
  %13 = tail call %"class.blink::Node"* %12(%"class.blink::AXObject"* %0) #22
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %113, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 256
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %113, label %20

20:                                               ; preds = %15
  %21 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %22 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %22, i64 126
  %24 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %23, align 8
  %25 = tail call %"class.blink::Document"* %24(%"class.blink::AXObject"* %0) #22
  tail call void @_ZN5blink8Document27UpdateStyleAndLayoutForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %25, %"class.blink::Node"* nonnull %13, i32 5) #22
  %26 = load i32, i32* %16, align 8
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 6, i32 0, i32 0
  br i1 %28, label %34, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::NodeData"** %29 to %"class.blink::NodeRareData"**
  %32 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %32, i64 0, i32 1, i32 0, i32 0
  br label %36

34:                                               ; preds = %20
  %35 = bitcast %"class.blink::NodeData"** %29 to %"class.blink::NodeRenderingData"**
  br label %36

36:                                               ; preds = %30, %34
  %37 = phi %"class.blink::NodeRenderingData"** [ %33, %30 ], [ %35, %34 ]
  %38 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %38, i64 0, i32 1
  %40 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %39, align 8
  %41 = icmp eq %"class.blink::LayoutObject"* %40, null
  br i1 %41, label %113, label %42

42:                                               ; preds = %36
  %43 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #22
  %44 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %45 = bitcast %"struct.blink::PhysicalRect"* %7 to i8*
  %46 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #22
  %47 = bitcast %"class.blink::IntRect"* %1 to i64*
  %48 = load i64, i64* %47, align 4
  %49 = trunc i64 %48 to i32
  %50 = lshr i64 %48, 32
  %51 = trunc i64 %50 to i32
  %52 = icmp sgt i32 %49, 33554431
  br i1 %52, label %57, label %53

53:                                               ; preds = %42
  %54 = icmp slt i32 %49, -33554432
  %55 = shl i32 %49, 6
  %56 = select i1 %54, i32 -2147483648, i32 %55
  br label %57

57:                                               ; preds = %53, %42
  %58 = phi i32 [ 2147483647, %42 ], [ %56, %53 ]
  %59 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 0, i32 0, i32 0, i32 0
  store i32 %58, i32* %59, align 4
  %60 = icmp sgt i32 %51, 33554431
  br i1 %60, label %66, label %61

61:                                               ; preds = %57
  %62 = icmp slt i32 %51, -33554432
  br i1 %62, label %66, label %63

63:                                               ; preds = %61
  %64 = shl nuw nsw i64 %50, 6
  %65 = trunc i64 %64 to i32
  br label %66

66:                                               ; preds = %61, %57, %63
  %67 = phi i32 [ %65, %63 ], [ 2147483647, %57 ], [ -2147483648, %61 ]
  %68 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 0, i32 0, i32 1, i32 0
  store i32 %67, i32* %68, align 4
  %69 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %1, i64 0, i32 1
  %70 = bitcast %"class.blink::IntSize"* %69 to i64*
  %71 = load i64, i64* %70, align 4
  %72 = trunc i64 %71 to i32
  %73 = lshr i64 %71, 32
  %74 = trunc i64 %73 to i32
  %75 = icmp sgt i32 %72, 33554431
  br i1 %75, label %80, label %76

76:                                               ; preds = %66
  %77 = icmp slt i32 %72, -33554432
  %78 = shl i32 %72, 6
  %79 = select i1 %77, i32 -2147483648, i32 %78
  br label %80

80:                                               ; preds = %76, %66
  %81 = phi i32 [ 2147483647, %66 ], [ %79, %76 ]
  %82 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 0, i32 1, i32 0, i32 0
  store i32 %81, i32* %82, align 4
  %83 = icmp sgt i32 %74, 33554431
  br i1 %83, label %89, label %84

84:                                               ; preds = %80
  %85 = icmp slt i32 %74, -33554432
  br i1 %85, label %89, label %86

86:                                               ; preds = %84
  %87 = shl nuw nsw i64 %73, 6
  %88 = trunc i64 %87 to i32
  br label %89

89:                                               ; preds = %84, %80, %86
  %90 = phi i32 [ %88, %86 ], [ 2147483647, %80 ], [ -2147483648, %84 ]
  %91 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 0, i32 1, i32 1, i32 0
  store i32 %90, i32* %91, align 4
  %92 = call { i64, i64 } @_ZNK5blink12LayoutObject19LocalToAncestorRectERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"* nonnull %40, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %7, %"class.blink::LayoutBoxModelObject"* null, i32 0) #22
  %93 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %94 = extractvalue { i64, i64 } %92, 0
  store i64 %94, i64* %93, align 8
  %95 = extractvalue { i64, i64 } %92, 1
  store i64 %95, i64* %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #22
  call void @_ZN5blink15ScrollAlignment26CreateScrollIntoViewParamsERKNS_5mojom5blink15ScrollAlignmentES5_NS1_10ScrollTypeEbNS1_14ScrollBehaviorEbb(%"class.mojo::StructPtr.3817"* nonnull sret %8, %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12) %2, %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12) %3, i32 1, i1 zeroext false, i32 0, i1 zeroext false, i1 zeroext false) #22
  %96 = call { i64, i64 } @_ZN5blink12LayoutObject19ScrollRectToVisibleERKNS_12PhysicalRectEN4mojo9StructPtrINS_5mojom5blink20ScrollIntoViewParamsEEE(%"class.blink::LayoutObject"* nonnull %40, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6, %"class.mojo::StructPtr.3817"* nonnull %8) #22
  %97 = getelementptr inbounds %"class.mojo::StructPtr.3817", %"class.mojo::StructPtr.3817"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.blink::mojom::blink::ScrollIntoViewParams"*, %"class.blink::mojom::blink::ScrollIntoViewParams"** %97, align 8
  store %"class.blink::mojom::blink::ScrollIntoViewParams"* null, %"class.blink::mojom::blink::ScrollIntoViewParams"** %97, align 8
  %99 = icmp eq %"class.blink::mojom::blink::ScrollIntoViewParams"* %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %89
  call void @_ZN5blink5mojom5blink20ScrollIntoViewParamsD1Ev(%"class.blink::mojom::blink::ScrollIntoViewParams"* nonnull %98) #22
  %101 = bitcast %"class.blink::mojom::blink::ScrollIntoViewParams"* %98 to i8*
  call void @_ZdlPv(i8* %101) #23
  br label %102

102:                                              ; preds = %89, %100
  %103 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %104 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %103, align 8
  %105 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %21, align 8
  %106 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %105, i64 126
  %107 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %106, align 8
  %108 = call %"class.blink::Document"* %107(%"class.blink::AXObject"* %0) #22
  %109 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %108, i64 0, i32 113
  %110 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_12LayoutObjectE(%"class.blink::AXObjectCacheImpl"* %104, %"class.blink::LayoutObject"* %111) #22
  call void @_ZN5blink17AXObjectCacheImpl16PostNotificationEPNS_8AXObjectEN2ax5mojom5EventE(%"class.blink::AXObjectCacheImpl"* %104, %"class.blink::AXObject"* %112, i32 26) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #22
  br label %113

113:                                              ; preds = %15, %4, %36, %102
  %114 = phi i1 [ true, %102 ], [ false, %36 ], [ false, %4 ], [ false, %15 ]
  ret i1 %114
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink15ScrollAlignmentD1Ev(%"class.blink::mojom::blink::ScrollAlignment"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject24RequestSetSelectedActionEb(%"class.blink::AXObject"*, i1 zeroext) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.blink::AXObject"* %0 to i1 (%"class.blink::AXObject"*, i1)***
  %4 = load i1 (%"class.blink::AXObject"*, i1)**, i1 (%"class.blink::AXObject"*, i1)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::AXObject"*, i1)*, i1 (%"class.blink::AXObject"*, i1)** %4, i64 151
  %6 = load i1 (%"class.blink::AXObject"*, i1)*, i1 (%"class.blink::AXObject"*, i1)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::AXObject"* %0, i1 zeroext %1) #22
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject29OnNativeShowContextMenuActionEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.blink::ContextMenuAllowedScope", align 1
  %3 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %4 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %4, i64 124
  %6 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %5, align 8
  %7 = tail call %"class.blink::Node"* %6(%"class.blink::AXObject"* %0) #22
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 12
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %89, label %14

14:                                               ; preds = %9, %1
  %15 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %16 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %15, align 8
  %17 = icmp eq %"class.blink::AXObjectCacheImpl"* %16, null
  br i1 %17, label %107, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %19, align 8
  %21 = icmp eq %"class.blink::AXObject"* %20, null
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %3, align 8
  %24 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %23, i64 124
  %25 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %24, align 8
  %26 = tail call %"class.blink::Node"* %25(%"class.blink::AXObject"* %0) #22
  %27 = icmp eq %"class.blink::Node"* %26, null
  br i1 %27, label %42, label %32

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %20, i64 0, i32 14, i32 0, i32 0
  %30 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %29, align 8
  %31 = icmp eq %"class.blink::AXObjectCacheImpl"* %30, null
  br i1 %31, label %42, label %52

32:                                               ; preds = %22
  %33 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %3, align 8
  %34 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %33, i64 124
  %35 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %34, align 8
  %36 = tail call %"class.blink::Node"* %35(%"class.blink::AXObject"* %0) #22
  %37 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %15, align 8
  %38 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %37, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.blink::Document"*, %"class.blink::Document"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %39, i64 0, i32 0, i32 0
  %41 = icmp eq %"class.blink::Node"* %36, %40
  br i1 %41, label %52, label %42

42:                                               ; preds = %32, %28, %22
  %43 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* %0) #22
  %44 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2
  %45 = ptrtoint %"class.blink::AXObject"* %43 to i64
  %46 = bitcast %"class.blink::Member.3082"* %44 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  %47 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %42
  %50 = bitcast %"class.blink::AXObject"* %43 to i8*
  %51 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %50) #22
  br label %52

52:                                               ; preds = %28, %32, %42, %49
  %53 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %19, align 8
  %54 = icmp eq %"class.blink::AXObject"* %53, null
  br i1 %54, label %107, label %55

55:                                               ; preds = %52
  %56 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %15, align 8
  %57 = icmp eq %"class.blink::AXObjectCacheImpl"* %56, null
  br i1 %57, label %76, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %53, i64 0, i32 14, i32 0, i32 0
  %60 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %59, align 8
  %61 = icmp eq %"class.blink::AXObjectCacheImpl"* %60, null
  br i1 %61, label %62, label %73

62:                                               ; preds = %58
  %63 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* %0) #22
  %64 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2
  %65 = ptrtoint %"class.blink::AXObject"* %63 to i64
  %66 = bitcast %"class.blink::Member.3082"* %64 to i64*
  store atomic i64 %65, i64* %66 monotonic, align 8
  %67 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %62
  %70 = bitcast %"class.blink::AXObject"* %63 to i8*
  %71 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %70) #22
  %72 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %19, align 8
  br label %73

73:                                               ; preds = %69, %62, %58
  %74 = phi %"class.blink::AXObject"* [ %72, %69 ], [ %63, %62 ], [ %53, %58 ]
  %75 = bitcast %"class.blink::AXObject"* %74 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  br label %76

76:                                               ; preds = %55, %73
  %77 = phi %"class.blink::Node"* (%"class.blink::AXObject"*)*** [ %75, %73 ], [ null, %55 ]
  %78 = phi %"class.blink::AXObject"* [ %74, %73 ], [ null, %55 ]
  %79 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %77, align 8
  %80 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %79, i64 124
  %81 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %80, align 8
  %82 = tail call %"class.blink::Node"* %81(%"class.blink::AXObject"* %78) #22
  %83 = icmp eq %"class.blink::Node"* %82, null
  br i1 %83, label %107, label %84

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %82, i64 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, 12
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %107

89:                                               ; preds = %84, %9
  %90 = phi %"class.blink::Node"* [ %7, %9 ], [ %82, %84 ]
  %91 = bitcast %"class.blink::Node"* %90 to %"class.blink::Element"*
  %92 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %93 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %92, align 8
  %94 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %93, i64 126
  %95 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %94, align 8
  %96 = tail call %"class.blink::Document"* %95(%"class.blink::AXObject"* %0) #22
  %97 = icmp eq %"class.blink::Document"* %96, null
  br i1 %97, label %107, label %98

98:                                               ; preds = %89
  %99 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %96) #22
  %100 = icmp eq %"class.blink::LocalFrame"* %99, null
  br i1 %100, label %107, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"class.blink::ContextMenuAllowedScope", %"class.blink::ContextMenuAllowedScope"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %102) #22
  store i8 -86, i8* %102, align 1
  call void @_ZN5blink23ContextMenuAllowedScopeC1Ev(%"class.blink::ContextMenuAllowedScope"* nonnull %2) #22
  %103 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %96) #22
  %104 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %103, i64 0, i32 15, i32 0, i32 0
  %105 = load %"class.blink::EventHandler"*, %"class.blink::EventHandler"** %104, align 8
  %106 = call i32 @_ZN5blink12EventHandler25ShowNonLocatedContextMenuEPNS_7ElementENS_17WebMenuSourceTypeE(%"class.blink::EventHandler"* %105, %"class.blink::Element"* nonnull %91, i32 2) #22
  call void @_ZN5blink23ContextMenuAllowedScopeD1Ev(%"class.blink::ContextMenuAllowedScope"* nonnull %2) #22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %102) #22
  br label %107

107:                                              ; preds = %84, %14, %76, %52, %101, %98, %89
  %108 = phi i1 [ true, %101 ], [ false, %98 ], [ false, %89 ], [ false, %52 ], [ false, %84 ], [ false, %76 ], [ false, %14 ]
  ret i1 %108
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject35InternalSetAccessibilityFocusActionEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject37InternalClearAccessibilityFocusActionEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutObject"* @_ZNK5blink8AXObject36GetLayoutObjectForNativeScrollActionEv(%"class.blink::AXObject"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %3 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %3, i64 124
  %5 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %4, align 8
  %6 = tail call %"class.blink::Node"* %5(%"class.blink::AXObject"* %0) #22
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %34, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %34, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %15 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %15, i64 126
  %17 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %16, align 8
  %18 = tail call %"class.blink::Document"* %17(%"class.blink::AXObject"* %0) #22
  tail call void @_ZN5blink8Document27UpdateStyleAndLayoutForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %18, %"class.blink::Node"* nonnull %6, i32 5) #22
  %19 = load i32, i32* %9, align 8
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 6, i32 0, i32 0
  br i1 %21, label %27, label %23

23:                                               ; preds = %13
  %24 = bitcast %"class.blink::NodeData"** %22 to %"class.blink::NodeRareData"**
  %25 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %25, i64 0, i32 1, i32 0, i32 0
  br label %29

27:                                               ; preds = %13
  %28 = bitcast %"class.blink::NodeData"** %22 to %"class.blink::NodeRenderingData"**
  br label %29

29:                                               ; preds = %23, %27
  %30 = phi %"class.blink::NodeRenderingData"** [ %26, %23 ], [ %28, %27 ]
  %31 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %31, i64 0, i32 1
  %33 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %32, align 8
  br label %34

34:                                               ; preds = %8, %1, %29
  %35 = phi %"class.blink::LayoutObject"* [ %33, %29 ], [ null, %1 ], [ null, %8 ]
  ret %"class.blink::LayoutObject"* %35
}

declare void @_ZN5blink8Document27UpdateStyleAndLayoutForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"*, %"class.blink::Node"*, i32) local_unnamed_addr #6

declare { i64, i64 } @_ZNK5blink12LayoutObject23AbsoluteBoundingBoxRectEj(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #6

declare { i64, i64 } @_ZN5blink12LayoutObject19ScrollRectToVisibleERKNS_12PhysicalRectEN4mojo9StructPtrINS_5mojom5blink20ScrollIntoViewParamsEEE(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.mojo::StructPtr.3817"*) local_unnamed_addr #6

declare void @_ZN5blink15ScrollAlignment26CreateScrollIntoViewParamsERKNS_5mojom5blink15ScrollAlignmentES5_NS1_10ScrollTypeEbNS1_14ScrollBehaviorEbb(%"class.mojo::StructPtr.3817"* sret, %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12), %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12), i32, i1 zeroext, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #6

declare dereferenceable(12) %"class.blink::mojom::blink::ScrollAlignment"* @_ZN5blink15ScrollAlignment14CenterIfNeededEv() local_unnamed_addr #6

declare void @_ZN5blink17AXObjectCacheImpl16PostNotificationEPNS_8AXObjectEN2ax5mojom5EventE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObject"*, i32) local_unnamed_addr #6

declare dereferenceable(12) %"class.blink::mojom::blink::ScrollAlignment"* @_ZN5blink15ScrollAlignment10LeftAlwaysEv() local_unnamed_addr #6

declare dereferenceable(12) %"class.blink::mojom::blink::ScrollAlignment"* @_ZN5blink15ScrollAlignment9TopAlwaysEv() local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject55OnNativeSetSequentialFocusNavigationStartingPointActionEv(%"class.blink::AXObject"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2, align 8
  %4 = icmp eq %"class.blink::AXObjectCacheImpl"* %3, null
  br i1 %4, label %71, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %6, align 8
  %8 = icmp eq %"class.blink::AXObject"* %7, null
  br i1 %8, label %9, label %16

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %11 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %11, i64 124
  %13 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %12, align 8
  %14 = tail call %"class.blink::Node"* %13(%"class.blink::AXObject"* %0) #22
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %30, label %20

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %7, i64 0, i32 14, i32 0, i32 0
  %18 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %17, align 8
  %19 = icmp eq %"class.blink::AXObjectCacheImpl"* %18, null
  br i1 %19, label %30, label %40

20:                                               ; preds = %9
  %21 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %10, align 8
  %22 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %21, i64 124
  %23 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %22, align 8
  %24 = tail call %"class.blink::Node"* %23(%"class.blink::AXObject"* %0) #22
  %25 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2, align 8
  %26 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %25, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.blink::Document"*, %"class.blink::Document"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %27, i64 0, i32 0, i32 0
  %29 = icmp eq %"class.blink::Node"* %24, %28
  br i1 %29, label %40, label %30

30:                                               ; preds = %20, %16, %9
  %31 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* %0) #22
  %32 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2
  %33 = ptrtoint %"class.blink::AXObject"* %31 to i64
  %34 = bitcast %"class.blink::Member.3082"* %32 to i64*
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %30
  %38 = bitcast %"class.blink::AXObject"* %31 to i8*
  %39 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %38) #22
  br label %40

40:                                               ; preds = %16, %20, %30, %37
  %41 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %6, align 8
  %42 = icmp eq %"class.blink::AXObject"* %41, null
  br i1 %42, label %71, label %43

43:                                               ; preds = %40
  %44 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2, align 8
  %45 = icmp eq %"class.blink::AXObjectCacheImpl"* %44, null
  br i1 %45, label %64, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %41, i64 0, i32 14, i32 0, i32 0
  %48 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %47, align 8
  %49 = icmp eq %"class.blink::AXObjectCacheImpl"* %48, null
  br i1 %49, label %50, label %61

50:                                               ; preds = %46
  %51 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* %0) #22
  %52 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2
  %53 = ptrtoint %"class.blink::AXObject"* %51 to i64
  %54 = bitcast %"class.blink::Member.3082"* %52 to i64*
  store atomic i64 %53, i64* %54 monotonic, align 8
  %55 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %50
  %58 = bitcast %"class.blink::AXObject"* %51 to i8*
  %59 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %58) #22
  %60 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %6, align 8
  br label %61

61:                                               ; preds = %57, %50, %46
  %62 = phi %"class.blink::AXObject"* [ %60, %57 ], [ %51, %50 ], [ %41, %46 ]
  %63 = bitcast %"class.blink::AXObject"* %62 to i1 (%"class.blink::AXObject"*)***
  br label %64

64:                                               ; preds = %43, %61
  %65 = phi i1 (%"class.blink::AXObject"*)*** [ %63, %61 ], [ null, %43 ]
  %66 = phi %"class.blink::AXObject"* [ %62, %61 ], [ null, %43 ]
  %67 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %65, align 8
  %68 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %67, i64 152
  %69 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %68, align 8
  %70 = tail call zeroext i1 %69(%"class.blink::AXObject"* %66) #22
  br label %71

71:                                               ; preds = %1, %40, %64
  %72 = phi i1 [ %70, %64 ], [ false, %40 ], [ false, %1 ]
  ret i1 %72
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject23OnNativeDecrementActionEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject19OnNativeFocusActionEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject23OnNativeIncrementActionEv(%"class.blink::AXObject"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject22OnNativeSetValueActionERKN3WTF6StringE(%"class.blink::AXObject"* nocapture readnone, %"class.WTF::String"* nocapture readnone dereferenceable(8)) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject25OnNativeSetSelectedActionEb(%"class.blink::AXObject"* nocapture readnone, i1 zeroext) unnamed_addr #0 align 2 {
  ret i1 false
}

declare void @_ZN5blink23ContextMenuAllowedScopeC1Ev(%"class.blink::ContextMenuAllowedScope"*) unnamed_addr #6

declare i32 @_ZN5blink12EventHandler25ShowNonLocatedContextMenuEPNS_7ElementENS_17WebMenuSourceTypeE(%"class.blink::EventHandler"*, %"class.blink::Element"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN5blink23ContextMenuAllowedScopeD1Ev(%"class.blink::ContextMenuAllowedScope"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8AXObject16SelectionChangedEv(%"class.blink::AXObject"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2, align 8
  %4 = icmp eq %"class.blink::AXObjectCacheImpl"* %3, null
  br i1 %4, label %48, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %6, align 8
  %8 = icmp eq %"class.blink::AXObject"* %7, null
  br i1 %8, label %9, label %16

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %11 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %11, i64 124
  %13 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %12, align 8
  %14 = tail call %"class.blink::Node"* %13(%"class.blink::AXObject"* %0) #22
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %30, label %20

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %7, i64 0, i32 14, i32 0, i32 0
  %18 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %17, align 8
  %19 = icmp eq %"class.blink::AXObjectCacheImpl"* %18, null
  br i1 %19, label %30, label %40

20:                                               ; preds = %9
  %21 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %10, align 8
  %22 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %21, i64 124
  %23 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %22, align 8
  %24 = tail call %"class.blink::Node"* %23(%"class.blink::AXObject"* %0) #22
  %25 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2, align 8
  %26 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %25, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.blink::Document"*, %"class.blink::Document"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %27, i64 0, i32 0, i32 0
  %29 = icmp eq %"class.blink::Node"* %24, %28
  br i1 %29, label %40, label %30

30:                                               ; preds = %20, %16, %9
  %31 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject13ComputeParentEv(%"class.blink::AXObject"* %0) #22
  %32 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2
  %33 = ptrtoint %"class.blink::AXObject"* %31 to i64
  %34 = bitcast %"class.blink::Member.3082"* %32 to i64*
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %30
  %38 = bitcast %"class.blink::AXObject"* %31 to i8*
  %39 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %38) #22
  br label %40

40:                                               ; preds = %16, %20, %30, %37
  %41 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %6, align 8
  %42 = icmp eq %"class.blink::AXObject"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %40
  %44 = bitcast %"class.blink::AXObject"* %41 to void (%"class.blink::AXObject"*)***
  %45 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %45, i64 158
  %47 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %46, align 8
  tail call void %47(%"class.blink::AXObject"* nonnull %41) #22
  br label %48

48:                                               ; preds = %1, %40, %43
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject13IsARIAControlEN2ax5mojom4RoleE(i32) local_unnamed_addr #0 align 2 {
  switch i32 %0, label %2 [
    i32 171, label %3
    i32 164, label %3
    i32 154, label %3
    i32 142, label %3
    i32 15, label %3
    i32 172, label %3
    i32 22, label %3
    i32 10, label %3
    i32 156, label %3
  ]

2:                                                ; preds = %1
  br label %3

3:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %2
  %4 = phi i1 [ false, %2 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink8AXObject11IsARIAInputEN2ax5mojom4RoleE(i32) local_unnamed_addr #0 align 2 {
  switch i32 %0, label %2 [
    i32 171, label %3
    i32 164, label %3
    i32 154, label %3
    i32 142, label %3
    i32 15, label %3
    i32 172, label %3
  ]

2:                                                ; preds = %1
  br label %3

3:                                                ; preds = %1, %1, %1, %1, %1, %1, %2
  %4 = phi i1 [ true, %1 ], [ false, %2 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %4
}

declare zeroext i1 @_ZN5blink7Element38HasExplicitlySetAttrAssociatedElementsERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8AXObject24SupportsNameFromContentsEb(%"class.blink::AXObject"*, i1 zeroext) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %88 [
    i32 4, label %5
    i32 10, label %5
    i32 14, label %5
    i32 15, label %5
    i32 20, label %5
    i32 43, label %5
    i32 46, label %5
    i32 66, label %5
    i32 63, label %5
    i32 38, label %5
    i32 97, label %5
    i32 107, label %5
    i32 110, label %5
    i32 111, label %5
    i32 114, label %5
    i32 122, label %5
    i32 125, label %5
    i32 126, label %5
    i32 127, label %5
    i32 128, label %5
    i32 138, label %5
    i32 139, label %5
    i32 142, label %5
    i32 148, label %5
    i32 159, label %5
    i32 164, label %5
    i32 165, label %5
    i32 176, label %5
    i32 181, label %5
    i32 178, label %5
    i32 145, label %62
    i32 150, label %60
    i32 173, label %6
    i32 161, label %6
    i32 155, label %6
    i32 149, label %6
    i32 146, label %6
    i32 144, label %6
    i32 140, label %6
    i32 134, label %6
    i32 0, label %6
    i32 120, label %6
    i32 117, label %6
    i32 116, label %6
    i32 112, label %6
    i32 109, label %6
    i32 108, label %6
    i32 106, label %6
    i32 105, label %6
    i32 102, label %6
    i32 96, label %6
    i32 89, label %6
    i32 87, label %6
    i32 86, label %6
    i32 84, label %6
    i32 82, label %6
    i32 35, label %6
    i32 33, label %6
    i32 31, label %6
    i32 32, label %6
    i32 30, label %6
    i32 26, label %6
    i32 25, label %6
    i32 17, label %6
    i32 12, label %6
    i32 11, label %6
    i32 1, label %6
  ]

5:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  br label %88

6:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  br i1 %1, label %88, label %7

7:                                                ; preds = %6
  %8 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase40is_keyboard_focusable_scrollers_enabled_E, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %7
  %11 = tail call zeroext i1 @_ZNK5blink8AXObject16IsUserScrollableEv(%"class.blink::AXObject"* %0)
  br i1 %11, label %14, label %12

12:                                               ; preds = %7, %10
  %13 = tail call zeroext i1 @_ZNK5blink8AXObject20CanSetFocusAttributeEv(%"class.blink::AXObject"* %0)
  br i1 %13, label %14, label %88

14:                                               ; preds = %10, %12
  %15 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %16 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %16, i64 124
  %18 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %17, align 8
  %19 = tail call %"class.blink::Node"* %18(%"class.blink::AXObject"* %0) #22
  %20 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %21 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %20, align 8
  %22 = icmp ne %"class.blink::AXObjectCacheImpl"* %21, null
  %23 = icmp ne %"class.blink::Node"* %19, null
  %24 = and i1 %23, %22
  br i1 %24, label %25, label %45

25:                                               ; preds = %14
  %26 = tail call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %19) #22
  br i1 %26, label %88, label %27

27:                                               ; preds = %25
  %28 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %15, align 8
  %29 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %28, i64 124
  %30 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %29, align 8
  %31 = tail call %"class.blink::Node"* %30(%"class.blink::AXObject"* %0) #22
  %32 = icmp eq %"class.blink::Node"* %31, null
  br i1 %32, label %45, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 12
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %33
  %39 = bitcast %"class.blink::Node"* %31 to %"class.blink::Element"*
  %40 = bitcast %"class.blink::Node"* %31 to i1 (%"class.blink::Element"*)***
  %41 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %40, align 8
  %42 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %41, i64 126
  %43 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %42, align 8
  %44 = tail call zeroext i1 %43(%"class.blink::Element"* nonnull %39) #22
  br i1 %44, label %88, label %45

45:                                               ; preds = %33, %27, %14, %38
  %46 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %15, align 8
  %47 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %46, i64 124
  %48 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %47, align 8
  %49 = tail call %"class.blink::Node"* %48(%"class.blink::AXObject"* %0) #22
  %50 = icmp eq %"class.blink::Node"* %49, null
  br i1 %50, label %88, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %49, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, 12
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %88

56:                                               ; preds = %51
  %57 = bitcast %"class.blink::Node"* %49 to %"class.blink::Element"*
  %58 = tail call %"class.blink::Element"* @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_19AOMRelationPropertyE(%"class.blink::Element"* nonnull %57, i32 0) #22
  %59 = icmp eq %"class.blink::Element"* %58, null
  br label %88

60:                                               ; preds = %2
  %61 = xor i1 %1, true
  br label %88

62:                                               ; preds = %2
  %63 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %64 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %63, align 8
  %65 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %64, i64 124
  %66 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %65, align 8
  %67 = tail call %"class.blink::Node"* %66(%"class.blink::AXObject"* %0) #22
  %68 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %67, i64 0, i32 3, i32 0, i32 0
  %69 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %69, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::Document"*, %"class.blink::Document"** %70, align 8
  %72 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %71) #22
  %73 = icmp eq %"class.blink::LocalFrame"* %72, null
  br i1 %73, label %78, label %74

74:                                               ; preds = %62
  %75 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %71) #22
  %76 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %75, i64 0, i32 0
  %77 = tail call zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"* %76) #22
  br label %78

78:                                               ; preds = %62, %74
  %79 = phi i1 [ false, %62 ], [ %77, %74 ]
  %80 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %71) #22
  %81 = icmp eq %"class.blink::Page"* %80, null
  br i1 %81, label %85, label %82

82:                                               ; preds = %78
  %83 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %71) #22
  %84 = tail call zeroext i1 @_ZNK5blink4Page12InsidePortalEv(%"class.blink::Page"* %83) #22
  br label %85

85:                                               ; preds = %78, %82
  %86 = phi i1 [ false, %78 ], [ %84, %82 ]
  %87 = and i1 %79, %86
  br label %88

88:                                               ; preds = %56, %51, %45, %25, %5, %2, %6, %38, %12, %85, %60
  %89 = phi i1 [ %87, %85 ], [ %61, %60 ], [ true, %5 ], [ false, %2 ], [ true, %6 ], [ false, %38 ], [ false, %12 ], [ false, %25 ], [ %59, %56 ], [ true, %51 ], [ true, %45 ]
  ret i1 %89
}

declare zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"*) local_unnamed_addr #6

declare zeroext i1 @_ZN2ui19IsReadOnlySupportedEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.284"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #22
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #22
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.181, i64 0, i64 0), i8* %14, i8* %15) #22
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.42, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #22
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #22
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #22
  %23 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 %25
  ret %"class.WTF::AtomicString"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink8AXObject16InternalRoleNameEN2ax5mojom4RoleE(i32) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.std::__1::basic_ostringstream", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %6) #22
  %7 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_stringbuf"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 256, i1 false)
  %9 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %16 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i8**
  %17 = inttoptr i64 %13 to i8*
  %18 = getelementptr i8, i8* %17, i64 -24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds i8, i8* %6, i64 %20
  %22 = bitcast i8* %21 to i64*
  store i64 %15, i64* %22, align 8
  %23 = load i8*, i8** %16, align 8
  %24 = getelementptr i8, i8* %23, i64 -24
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds i8, i8* %6, i64 %26
  %28 = bitcast i8* %27 to %"class.std::__1::ios_base"*
  %29 = bitcast %"class.std::__1::basic_stringbuf"* %11 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %28, i8* %29) #22
  %30 = getelementptr inbounds i8, i8* %27, i64 136
  %31 = bitcast i8* %30 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %31, align 8
  %32 = getelementptr inbounds i8, i8* %27, i64 144
  %33 = bitcast i8* %32 to i32*
  store i32 -1, i32* %33, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %12) #22
  %34 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1, i32 1
  %36 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1, i32 3
  %37 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 32, i1 false) #22
  store i32 16, i32* %36, align 8
  %38 = bitcast %"class.std::__1::basic_ostringstream"* %3 to %"class.std::__1::basic_ostream"*
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2ax5mojomlsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEENS0_4RoleE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %38, i32 %0) #22
  %40 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #22
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #22
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.std::__1::basic_stringbuf"* %11) #22
  %44 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i64 1, i64 -1, %"class.std::__1::allocator"* nonnull dereferenceable(1) %44) #22
  %45 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %1
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #23
  br label %52

52:                                               ; preds = %1, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #22
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %53, align 8
  %54 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %52
  %59 = load i8*, i8** %41, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %64, label %61

61:                                               ; preds = %52, %58
  %62 = phi i8* [ %59, %58 ], [ %40, %52 ]
  %63 = call i64 @strlen(i8* nonnull %62) #24
  br label %64

64:                                               ; preds = %58, %61
  %65 = phi i8* [ %62, %61 ], [ null, %58 ]
  %66 = phi i64 [ %63, %61 ], [ 0, %58 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %65, i64 %66) #22
  %67 = load i8, i8* %55, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %64
  %70 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %70) #23
  br label %71

71:                                               ; preds = %64, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #22
  %72 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %72, i64* %14, align 8
  %73 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %74 = inttoptr i64 %72 to i8*
  %75 = getelementptr i8, i8* %74, i64 -24
  %76 = bitcast i8* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds i8, i8* %6, i64 %77
  %79 = bitcast i8* %78 to i64*
  store i64 %73, i64* %79, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %80 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %71
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  call void @_ZdlPv(i8* %86) #23
  br label %87

87:                                               ; preds = %71, %84
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %12) #22
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %38, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #22
  %88 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 2
  %89 = bitcast %"class.std::__1::basic_ios.base"* %88 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %89) #22
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %6) #22
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  ret %"class.WTF::StringImpl"* %90
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2ax5mojomlsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEENS0_4RoleE(%"class.std::__1::basic_ostream"* dereferenceable(160), i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink8AXObject8RoleNameEN2ax5mojom4RoleEPb(i32, i8*) local_unnamed_addr #2 align 2 {
  %3 = icmp ne i8* %1, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i8 0, i8* %1, align 1
  br label %5

5:                                                ; preds = %4, %2
  %6 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink8AXObject12ARIARoleNameEN2ax5mojom4RoleE(i32 %0)
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %31

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #22
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %15
  tail call void @llvm.trap() #22
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %31

27:                                               ; preds = %5
  br i1 %3, label %28, label %29

28:                                               ; preds = %27
  store i8 1, i8* %1, align 1
  br label %29

29:                                               ; preds = %28, %27
  %30 = tail call %"class.WTF::StringImpl"* @_ZN5blink8AXObject16InternalRoleNameEN2ax5mojom4RoleE(i32 %0)
  br label %31

31:                                               ; preds = %25, %10, %29
  %32 = phi %"class.WTF::StringImpl"* [ %30, %29 ], [ %8, %10 ], [ %8, %25 ]
  ret %"class.WTF::StringImpl"* %32
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZN5blink8AXObject20LowestCommonAncestorERKS0_S2_PiS3_(%"class.blink::AXObject"* dereferenceable(120), %"class.blink::AXObject"* dereferenceable(120), i32* nocapture, i32* nocapture) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.blink::HeapVector.3832", align 8
  %6 = alloca %"class.blink::AXObject"*, align 8
  %7 = alloca %"class.blink::AXObject"*, align 8
  %8 = alloca %"class.blink::HeapVector.3832", align 8
  %9 = alloca %"class.blink::AXObject"*, align 8
  %10 = alloca %"class.blink::AXObject"*, align 8
  store i32 -1, i32* %2, align 4
  store i32 -1, i32* %3, align 4
  %11 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %12 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %11, align 8
  %13 = icmp eq %"class.blink::AXObjectCacheImpl"* %12, null
  br i1 %13, label %271, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %1, i64 0, i32 14, i32 0, i32 0
  %16 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %15, align 8
  %17 = icmp eq %"class.blink::AXObjectCacheImpl"* %16, null
  br i1 %17, label %271, label %18

18:                                               ; preds = %14
  %19 = icmp eq %"class.blink::AXObject"* %0, %1
  br i1 %19, label %271, label %20

20:                                               ; preds = %18
  %21 = bitcast %"class.blink::HeapVector.3832"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #22
  %22 = getelementptr inbounds %"class.blink::HeapVector.3832", %"class.blink::HeapVector.3832"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::HeapVector.3832", %"class.blink::HeapVector.3832"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.blink::HeapVector.3832", %"class.blink::HeapVector.3832"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 16, i1 false) #22
  %25 = getelementptr inbounds %"class.blink::HeapVector.3832", %"class.blink::HeapVector.3832"* %5, i64 0, i32 0
  %26 = bitcast %"class.blink::AXObject"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #22
  store %"class.blink::AXObject"* %0, %"class.blink::AXObject"** %6, align 8
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS4_EEvOT_(%"class.WTF::Vector.3835"* nonnull %25, %"class.blink::AXObject"** nonnull dereferenceable(8) %6) #22
  %27 = load i32, i32* %24, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #22
  %28 = add i32 %27, -1
  %29 = call dereferenceable(8) %"class.blink::Member.3459"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3835"* nonnull %25, i32 %28) #22
  %30 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %30, align 8
  %32 = icmp eq %"class.blink::AXObject"* %31, null
  br i1 %32, label %68, label %33

33:                                               ; preds = %20
  %34 = bitcast %"class.blink::AXObject"** %7 to i8*
  br label %35

35:                                               ; preds = %33, %61
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #22
  %36 = load i32, i32* %24, align 4
  %37 = add i32 %36, -1
  %38 = call dereferenceable(8) %"class.blink::Member.3459"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3835"* nonnull %25, i32 %37) #22
  %39 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %39, align 8
  %41 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject26ParentObjectIncludedInTreeEv(%"class.blink::AXObject"* %40)
  store %"class.blink::AXObject"* %41, %"class.blink::AXObject"** %7, align 8
  %42 = load i32, i32* %24, align 4
  %43 = load i32, i32* %23, align 8
  %44 = icmp eq i32 %42, %43
  br i1 %44, label %59, label %45, !prof !3

45:                                               ; preds = %35
  %46 = ptrtoint %"class.blink::AXObject"* %41 to i64
  %47 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %22, align 8
  %48 = zext i32 %42 to i64
  %49 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %47, i64 %48
  %50 = bitcast %"class.blink::Member.3459"* %49 to i64*
  store atomic i64 %46, i64* %50 monotonic, align 8
  %51 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %45
  %54 = bitcast %"class.blink::AXObject"* %41 to i8*
  %55 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %54) #22
  br label %56

56:                                               ; preds = %53, %45
  %57 = load i32, i32* %24, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %24, align 4
  br label %61

59:                                               ; preds = %35
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.3835"* nonnull %25, %"class.blink::AXObject"** nonnull dereferenceable(8) %7) #22
  %60 = load i32, i32* %24, align 4
  br label %61

61:                                               ; preds = %56, %59
  %62 = phi i32 [ %58, %56 ], [ %60, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #22
  %63 = add i32 %62, -1
  %64 = call dereferenceable(8) %"class.blink::Member.3459"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3835"* nonnull %25, i32 %63) #22
  %65 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %65, align 8
  %67 = icmp eq %"class.blink::AXObject"* %66, null
  br i1 %67, label %68, label %35

68:                                               ; preds = %61, %20
  %69 = bitcast %"class.blink::HeapVector.3832"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #22
  %70 = getelementptr inbounds %"class.blink::HeapVector.3832", %"class.blink::HeapVector.3832"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::HeapVector.3832", %"class.blink::HeapVector.3832"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.blink::HeapVector.3832", %"class.blink::HeapVector.3832"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 16, i1 false) #22
  %73 = getelementptr inbounds %"class.blink::HeapVector.3832", %"class.blink::HeapVector.3832"* %8, i64 0, i32 0
  %74 = bitcast %"class.blink::AXObject"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #22
  store %"class.blink::AXObject"* %1, %"class.blink::AXObject"** %9, align 8
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS4_EEvOT_(%"class.WTF::Vector.3835"* nonnull %73, %"class.blink::AXObject"** nonnull dereferenceable(8) %9) #22
  %75 = load i32, i32* %72, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #22
  %76 = add i32 %75, -1
  %77 = call dereferenceable(8) %"class.blink::Member.3459"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3835"* nonnull %73, i32 %76) #22
  %78 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %77, i64 0, i32 0, i32 0
  %79 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %78, align 8
  %80 = icmp eq %"class.blink::AXObject"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %68
  %82 = bitcast %"class.blink::AXObject"** %10 to i8*
  br label %100

83:                                               ; preds = %126, %68
  %84 = load i32, i32* %24, align 4
  %85 = icmp eq i32 %84, 0
  %86 = load i32, i32* %72, align 4
  %87 = icmp eq i32 %86, 0
  %88 = or i1 %85, %87
  br i1 %88, label %269, label %89

89:                                               ; preds = %83
  %90 = add i32 %84, -1
  %91 = call dereferenceable(8) %"class.blink::Member.3459"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3835"* nonnull %25, i32 %90) #22
  %92 = load i32, i32* %72, align 4
  %93 = add i32 %92, -1
  %94 = call dereferenceable(8) %"class.blink::Member.3459"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3835"* nonnull %73, i32 %93) #22
  %95 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %91, i64 0, i32 0, i32 0
  %96 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %94, i64 0, i32 0, i32 0
  %98 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %97, align 8
  %99 = icmp eq %"class.blink::AXObject"* %96, %98
  br i1 %99, label %144, label %176

100:                                              ; preds = %81, %126
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #22
  %101 = load i32, i32* %72, align 4
  %102 = add i32 %101, -1
  %103 = call dereferenceable(8) %"class.blink::Member.3459"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3835"* nonnull %73, i32 %102) #22
  %104 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %103, i64 0, i32 0, i32 0
  %105 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %104, align 8
  %106 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject26ParentObjectIncludedInTreeEv(%"class.blink::AXObject"* %105)
  store %"class.blink::AXObject"* %106, %"class.blink::AXObject"** %10, align 8
  %107 = load i32, i32* %72, align 4
  %108 = load i32, i32* %71, align 8
  %109 = icmp eq i32 %107, %108
  br i1 %109, label %124, label %110, !prof !3

110:                                              ; preds = %100
  %111 = ptrtoint %"class.blink::AXObject"* %106 to i64
  %112 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %70, align 8
  %113 = zext i32 %107 to i64
  %114 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %112, i64 %113
  %115 = bitcast %"class.blink::Member.3459"* %114 to i64*
  store atomic i64 %111, i64* %115 monotonic, align 8
  %116 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %121, label %118

118:                                              ; preds = %110
  %119 = bitcast %"class.blink::AXObject"* %106 to i8*
  %120 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %119) #22
  br label %121

121:                                              ; preds = %118, %110
  %122 = load i32, i32* %72, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %72, align 4
  br label %126

124:                                              ; preds = %100
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.3835"* nonnull %73, %"class.blink::AXObject"** nonnull dereferenceable(8) %10) #22
  %125 = load i32, i32* %72, align 4
  br label %126

126:                                              ; preds = %121, %124
  %127 = phi i32 [ %123, %121 ], [ %125, %124 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #22
  %128 = add i32 %127, -1
  %129 = call dereferenceable(8) %"class.blink::Member.3459"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3835"* nonnull %73, i32 %128) #22
  %130 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %130, align 8
  %132 = icmp eq %"class.blink::AXObject"* %131, null
  br i1 %132, label %83, label %100

133:                                              ; preds = %144
  %134 = add i32 %172, -1
  %135 = call dereferenceable(8) %"class.blink::Member.3459"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3835"* nonnull %25, i32 %134) #22
  %136 = load i32, i32* %72, align 4
  %137 = add i32 %136, -1
  %138 = call dereferenceable(8) %"class.blink::Member.3459"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3835"* nonnull %73, i32 %137) #22
  %139 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %135, i64 0, i32 0, i32 0
  %140 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %138, i64 0, i32 0, i32 0
  %142 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %141, align 8
  %143 = icmp eq %"class.blink::AXObject"* %140, %142
  br i1 %143, label %144, label %176

144:                                              ; preds = %89, %133
  %145 = load i32, i32* %24, align 4
  %146 = add i32 %145, -1
  %147 = call dereferenceable(8) %"class.blink::Member.3459"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3835"* nonnull %25, i32 %146) #22
  %148 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %147, i64 0, i32 0, i32 0
  %149 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %148, align 8
  %150 = load i32, i32* %24, align 4
  %151 = add i32 %150, -1
  %152 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %22, align 8
  %153 = zext i32 %151 to i64
  %154 = zext i32 %150 to i64
  %155 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %152, i64 %153
  %156 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %152, i64 %154
  %157 = bitcast %"class.blink::Member.3459"* %155 to i8*
  %158 = ptrtoint %"class.blink::Member.3459"* %156 to i64
  %159 = ptrtoint %"class.blink::Member.3459"* %155 to i64
  %160 = sub i64 %158, %159
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %157, i64 %160) #22
  store i32 %151, i32* %24, align 4
  %161 = load i32, i32* %72, align 4
  %162 = add i32 %161, -1
  %163 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %70, align 8
  %164 = zext i32 %162 to i64
  %165 = zext i32 %161 to i64
  %166 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %163, i64 %164
  %167 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %163, i64 %165
  %168 = bitcast %"class.blink::Member.3459"* %166 to i8*
  %169 = ptrtoint %"class.blink::Member.3459"* %167 to i64
  %170 = ptrtoint %"class.blink::Member.3459"* %166 to i64
  %171 = sub i64 %169, %170
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %168, i64 %171) #22
  store i32 %162, i32* %72, align 4
  %172 = load i32, i32* %24, align 4
  %173 = icmp eq i32 %172, 0
  %174 = icmp eq i32 %162, 0
  %175 = or i1 %173, %174
  br i1 %175, label %176, label %133

176:                                              ; preds = %144, %133, %89
  %177 = phi %"class.blink::AXObject"* [ null, %89 ], [ %149, %133 ], [ %149, %144 ]
  %178 = icmp eq %"class.blink::AXObject"* %177, null
  br i1 %178, label %269, label %179

179:                                              ; preds = %176
  %180 = load i32, i32* %24, align 4
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %224, label %182

182:                                              ; preds = %179
  %183 = add i32 %180, -1
  %184 = call dereferenceable(8) %"class.blink::Member.3459"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3835"* nonnull %25, i32 %183) #22
  %185 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %184, i64 0, i32 0, i32 0
  %186 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %185, align 8
  %187 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject26ParentObjectIncludedInTreeEv(%"class.blink::AXObject"* %186) #22
  %188 = icmp eq %"class.blink::AXObject"* %187, null
  br i1 %188, label %222, label %189

189:                                              ; preds = %182
  %190 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %187, i64 0, i32 4
  %191 = load i8, i8* %190, align 8, !range !2
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %198, label %193

193:                                              ; preds = %189
  %194 = bitcast %"class.blink::AXObject"* %187 to void (%"class.blink::AXObject"*)***
  %195 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %194, align 8
  %196 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %195, i64 160
  %197 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %196, align 8
  call void %197(%"class.blink::AXObject"* nonnull %187) #22
  br label %198

198:                                              ; preds = %193, %189
  %199 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %187, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %200 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %199, align 8
  %201 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %187, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %202 = load i32, i32* %201, align 4
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %200, i64 %203
  %205 = icmp eq i32 %202, 0
  br i1 %205, label %221, label %206

206:                                              ; preds = %198, %211
  %207 = phi %"class.blink::Member.3082"* [ %212, %211 ], [ %200, %198 ]
  %208 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %207, i64 0, i32 0, i32 0
  %209 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %208, align 8
  %210 = icmp eq %"class.blink::AXObject"* %209, %186
  br i1 %210, label %214, label %211

211:                                              ; preds = %206
  %212 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %207, i64 1
  %213 = icmp ult %"class.blink::Member.3082"* %212, %204
  br i1 %213, label %206, label %221

214:                                              ; preds = %206
  %215 = ptrtoint %"class.blink::Member.3082"* %207 to i64
  %216 = ptrtoint %"class.blink::Member.3082"* %200 to i64
  %217 = sub i64 %215, %216
  %218 = lshr exact i64 %217, 3
  %219 = trunc i64 %218 to i32
  %220 = icmp eq i32 %219, -1
  br i1 %220, label %221, label %222

221:                                              ; preds = %211, %214, %198
  br label %222

222:                                              ; preds = %182, %214, %221
  %223 = phi i32 [ 0, %182 ], [ 0, %221 ], [ %219, %214 ]
  store i32 %223, i32* %2, align 4
  br label %224

224:                                              ; preds = %222, %179
  %225 = load i32, i32* %72, align 4
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %269, label %227

227:                                              ; preds = %224
  %228 = add i32 %225, -1
  %229 = call dereferenceable(8) %"class.blink::Member.3459"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3835"* nonnull %73, i32 %228) #22
  %230 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %229, i64 0, i32 0, i32 0
  %231 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %230, align 8
  %232 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject26ParentObjectIncludedInTreeEv(%"class.blink::AXObject"* %231) #22
  %233 = icmp eq %"class.blink::AXObject"* %232, null
  br i1 %233, label %267, label %234

234:                                              ; preds = %227
  %235 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %232, i64 0, i32 4
  %236 = load i8, i8* %235, align 8, !range !2
  %237 = icmp eq i8 %236, 0
  br i1 %237, label %243, label %238

238:                                              ; preds = %234
  %239 = bitcast %"class.blink::AXObject"* %232 to void (%"class.blink::AXObject"*)***
  %240 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %239, align 8
  %241 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %240, i64 160
  %242 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %241, align 8
  call void %242(%"class.blink::AXObject"* nonnull %232) #22
  br label %243

243:                                              ; preds = %238, %234
  %244 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %232, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %245 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %244, align 8
  %246 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %232, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %247 = load i32, i32* %246, align 4
  %248 = zext i32 %247 to i64
  %249 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %245, i64 %248
  %250 = icmp eq i32 %247, 0
  br i1 %250, label %266, label %251

251:                                              ; preds = %243, %256
  %252 = phi %"class.blink::Member.3082"* [ %257, %256 ], [ %245, %243 ]
  %253 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %252, i64 0, i32 0, i32 0
  %254 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %253, align 8
  %255 = icmp eq %"class.blink::AXObject"* %254, %231
  br i1 %255, label %259, label %256

256:                                              ; preds = %251
  %257 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %252, i64 1
  %258 = icmp ult %"class.blink::Member.3082"* %257, %249
  br i1 %258, label %251, label %266

259:                                              ; preds = %251
  %260 = ptrtoint %"class.blink::Member.3082"* %252 to i64
  %261 = ptrtoint %"class.blink::Member.3082"* %245 to i64
  %262 = sub i64 %260, %261
  %263 = lshr exact i64 %262, 3
  %264 = trunc i64 %263 to i32
  %265 = icmp eq i32 %264, -1
  br i1 %265, label %266, label %267

266:                                              ; preds = %256, %259, %243
  br label %267

267:                                              ; preds = %227, %259, %266
  %268 = phi i32 [ 0, %227 ], [ 0, %266 ], [ %264, %259 ]
  store i32 %268, i32* %3, align 4
  br label %269

269:                                              ; preds = %83, %176, %224, %267
  %270 = phi %"class.blink::AXObject"* [ null, %176 ], [ %177, %224 ], [ %177, %267 ], [ null, %83 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #22
  br label %271

271:                                              ; preds = %18, %4, %14, %269
  %272 = phi %"class.blink::AXObject"* [ %270, %269 ], [ null, %14 ], [ null, %4 ], [ %0, %18 ]
  ret %"class.blink::AXObject"* %272
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blinkeqERKNS_8AXObjectES2_(%"class.blink::AXObject"* readonly dereferenceable(120), %"class.blink::AXObject"* readonly dereferenceable(120)) local_unnamed_addr #7 {
  %3 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %4 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %3, align 8
  %5 = icmp eq %"class.blink::AXObjectCacheImpl"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %1, i64 0, i32 14, i32 0, i32 0
  %8 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %7, align 8
  %9 = icmp ne %"class.blink::AXObjectCacheImpl"* %8, null
  %10 = icmp eq %"class.blink::AXObject"* %0, %1
  %11 = and i1 %10, %9
  ret i1 %11

12:                                               ; preds = %2
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String18EncodeForDebuggingEv(%"class.WTF::String"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.4050", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.4050", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.4050", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.4050"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #22
  %15 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #22
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4050"* nonnull %6, i8* %16) #22
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #22
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #22
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #22
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #22
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #22
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter.4050"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #22
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4050"* nonnull %5, i8* %45) #22
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.4049"* nonnull %46, i8* %25) #22
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.4050"* nonnull %5, i8* %49) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #22
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #22
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !3

65:                                               ; preds = %58
  call void @llvm.trap() #22
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #22
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #22
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #22
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #22
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #22
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter.4050"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #22
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4050"* nonnull %3, i8* %105) #22
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4049"* nonnull %106, i16* %85) #22
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4050"* nonnull %3, i16* %109) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #22
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #22
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !3

125:                                              ; preds = %118
  call void @llvm.trap() #22
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #22
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #22
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.3839"* noalias sret, %"class.WTF::StringAppend"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #2 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #22
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #22
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #22
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !3

43:                                               ; preds = %34
  tail call void @llvm.trap() #22
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.3839"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.3839"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #22
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend.3839"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.4050", align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = select i1 %10, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %9
  %12 = bitcast %"class.WTF::StringTypeAdapter.4050"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #22
  %13 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #22
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4050"* nonnull %2, i8* %14) #22
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #22
  br i1 %18, label %62, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %6, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %6
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %62, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #22
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %28 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.3839"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %3) #22
  %30 = load i8*, i8** %3, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend.3839"* %0, i8* %30)
  %31 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %31, label %98, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %49

39:                                               ; preds = %32
  %40 = zext i32 %38 to i33
  %41 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #22
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %39
  call void @llvm.trap() #22
  unreachable

47:                                               ; preds = %39
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %37, align 4
  br label %49

49:                                               ; preds = %32, %47
  %50 = phi i32 [ %48, %47 ], [ %38, %32 ]
  %51 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %52 = load atomic i32, i32* %33 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %57 = add i32 %50, -1
  store i32 %57, i32* %56, align 4
  br label %58

58:                                               ; preds = %55, %49
  %59 = phi i32 [ %57, %55 ], [ %50, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %98

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #22
  br label %98

62:                                               ; preds = %19, %1
  %63 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #22
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %64 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.3839"* %0)
  %65 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %64, i16** nonnull dereferenceable(8) %4) #22
  %66 = load i16*, i16** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend.3839"* %0, i16* %66)
  %67 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %67, label %98, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %85

75:                                               ; preds = %68
  %76 = zext i32 %74 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #22
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !3

82:                                               ; preds = %75
  call void @llvm.trap() #22
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %73, align 4
  br label %85

85:                                               ; preds = %68, %83
  %86 = phi i32 [ %84, %83 ], [ %74, %68 ]
  %87 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  %88 = load atomic i32, i32* %69 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %93 = add i32 %86, -1
  store i32 %93, i32* %92, align 4
  br label %94

94:                                               ; preds = %91, %85
  %95 = phi i32 [ %93, %91 ], [ %86, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #22
  br label %98

98:                                               ; preds = %97, %94, %62, %61, %58, %26
  %99 = phi i8* [ %27, %26 ], [ %27, %58 ], [ %27, %61 ], [ %63, %62 ], [ %63, %94 ], [ %63, %97 ]
  %100 = phi i64 [ 0, %26 ], [ %51, %58 ], [ %51, %61 ], [ 0, %62 ], [ %87, %94 ], [ %87, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #22
  %101 = inttoptr i64 %100 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %101
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_113GetNodeStringEPNS_4NodeE(%"class.blink::Node"*) unnamed_addr #2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::StringAppend.3844", align 8
  %4 = alloca %"class.WTF::StringAppend", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend.3844", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringAppend.3840", align 8
  %9 = alloca %"class.WTF::StringAppend", align 8
  %10 = alloca %"class.WTF::StringAppend.3840", align 8
  %11 = alloca %"class.WTF::StringAppend", align 8
  %12 = alloca %"class.WTF::StringAppend", align 8
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 12
  %16 = icmp eq i32 %15, 4
  br i1 %16, label %17, label %165

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %18, align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.182, i64 0, i64 0), i64 1) #22
  %19 = bitcast %"class.WTF::StringAppend.3844"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #22
  %20 = bitcast %"class.blink::Node"* %0 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %21 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %21, i64 28
  %23 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %22, align 8
  %24 = call %"class.WTF::StringImpl"* %23(%"class.blink::Node"* %0) #22
  %25 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.WTF::StringImpl"* %24)
  %26 = getelementptr inbounds %"class.WTF::StringAppend.3844", %"class.WTF::StringAppend.3844"* %3, i64 0, i32 0, i32 0, i32 0
  %27 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %25, 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend.3844", %"class.WTF::StringAppend.3844"* %3, i64 0, i32 1, i32 0, i32 0
  %29 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %25, 1
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %28, align 8
  %30 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.3844"* nonnull %3)
  %31 = ptrtoint %"class.WTF::StringImpl"* %30 to i64
  %32 = bitcast %"class.WTF::String"* %2 to i64*
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  store i64 %31, i64* %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %17
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #22
  br label %48

48:                                               ; preds = %47, %44, %17
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #22
  br label %64

64:                                               ; preds = %63, %60, %48
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #22
  br label %80

80:                                               ; preds = %64, %76, %79
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #22
  %81 = bitcast %"class.WTF::StringAppend"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #22
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %128, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %101

91:                                               ; preds = %84
  %92 = zext i32 %90 to i33
  %93 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %92, i33 1) #22
  %94 = extractvalue { i33, i1 } %93, 1
  %95 = extractvalue { i33, i1 } %93, 0
  %96 = icmp slt i33 %95, 0
  %97 = or i1 %94, %96
  br i1 %97, label %98, label %99, !prof !3

98:                                               ; preds = %91
  call void @llvm.trap() #22
  unreachable

99:                                               ; preds = %91
  %100 = trunc i33 %95 to i32
  store i32 %100, i32* %89, align 4
  br label %101

101:                                              ; preds = %84, %99
  %102 = phi i32 [ %100, %99 ], [ %90, %84 ]
  %103 = load atomic i32, i32* %85 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  br i1 %105, label %107, label %117

107:                                              ; preds = %101
  %108 = zext i32 %102 to i33
  %109 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %108, i33 1) #22
  %110 = extractvalue { i33, i1 } %109, 1
  %111 = extractvalue { i33, i1 } %109, 0
  %112 = icmp slt i33 %111, 0
  %113 = or i1 %110, %112
  br i1 %113, label %114, label %115, !prof !3

114:                                              ; preds = %107
  call void @llvm.trap() #22
  unreachable

115:                                              ; preds = %107
  %116 = trunc i33 %111 to i32
  store i32 %116, i32* %106, align 4
  br label %117

117:                                              ; preds = %115, %101
  %118 = phi i32 [ %116, %115 ], [ %102, %101 ]
  %119 = load atomic i32, i32* %85 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %117
  %123 = add i32 %118, -1
  store i32 %123, i32* %106, align 4
  br label %124

124:                                              ; preds = %122, %117
  %125 = phi i32 [ %123, %122 ], [ %118, %117 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #22
  br label %128

128:                                              ; preds = %80, %124, %127
  %129 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %129, align 8
  %130 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.182, i64 0, i64 0), i8** %130, align 8
  %131 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %4)
  %132 = ptrtoint %"class.WTF::StringImpl"* %131 to i64
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  store i64 %132, i64* %32, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #22
  br label %148

148:                                              ; preds = %147, %144, %128
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #22
  br label %164

164:                                              ; preds = %148, %160, %163
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #22
  br label %847

165:                                              ; preds = %1
  %166 = icmp ne %"class.blink::Node"* %0, null
  %167 = icmp eq i32 %15, 0
  %168 = and i1 %166, %167
  br i1 %168, label %170, label %169

169:                                              ; preds = %165
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.183, i64 0, i64 0), i64 6) #22
  br label %847

170:                                              ; preds = %165
  %171 = bitcast %"class.blink::Node"* %0 to %"class.blink::Element"*
  %172 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #22
  %173 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %173, align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i64 0, i64 0), i64 1) #22
  %174 = bitcast %"class.WTF::StringAppend.3844"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %174) #22
  %175 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #22
  %176 = bitcast %"class.blink::Node"* %0 to %"class.WTF::StringImpl"* (%"class.blink::Element"*)***
  %177 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)**, %"class.WTF::StringImpl"* (%"class.blink::Element"*)*** %176, align 8
  %178 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %177, i64 27
  %179 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %178, align 8
  %180 = call %"class.WTF::StringImpl"* %179(%"class.blink::Element"* nonnull %171) #22
  %181 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %180, %"class.WTF::StringImpl"** %181, align 8
  %182 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"* nonnull %7) #22
  %183 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::StringImpl"* %182)
  %184 = getelementptr inbounds %"class.WTF::StringAppend.3844", %"class.WTF::StringAppend.3844"* %6, i64 0, i32 0, i32 0, i32 0
  %185 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %183, 0
  store %"class.WTF::StringImpl"* %185, %"class.WTF::StringImpl"** %184, align 8
  %186 = getelementptr inbounds %"class.WTF::StringAppend.3844", %"class.WTF::StringAppend.3844"* %6, i64 0, i32 1, i32 0, i32 0
  %187 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %183, 1
  store %"class.WTF::StringImpl"* %187, %"class.WTF::StringImpl"** %186, align 8
  %188 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.3844"* nonnull %6)
  %189 = ptrtoint %"class.WTF::StringImpl"* %188 to i64
  %190 = bitcast %"class.WTF::String"* %5 to i64*
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  store i64 %189, i64* %190, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %206, label %193

193:                                              ; preds = %170
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  br i1 %197, label %200, label %202

200:                                              ; preds = %193
  %201 = add i32 %199, -1
  store i32 %201, i32* %198, align 4
  br label %202

202:                                              ; preds = %200, %193
  %203 = phi i32 [ %201, %200 ], [ %199, %193 ]
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %202
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %191) #22
  br label %206

206:                                              ; preds = %205, %202, %170
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %186, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %222, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %207) #22
  br label %222

222:                                              ; preds = %221, %218, %206
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %223, null
  br i1 %224, label %238, label %225

225:                                              ; preds = %222
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 0
  %231 = load i32, i32* %230, align 4
  br i1 %229, label %232, label %234

232:                                              ; preds = %225
  %233 = add i32 %231, -1
  store i32 %233, i32* %230, align 4
  br label %234

234:                                              ; preds = %232, %225
  %235 = phi i32 [ %233, %232 ], [ %231, %225 ]
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %234
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %223) #22
  br label %238

238:                                              ; preds = %222, %234, %237
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  %240 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %240, label %254, label %241

241:                                              ; preds = %238
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %247 = load i32, i32* %246, align 4
  br i1 %245, label %248, label %250

248:                                              ; preds = %241
  %249 = add i32 %247, -1
  store i32 %249, i32* %246, align 4
  br label %250

250:                                              ; preds = %248, %241
  %251 = phi i32 [ %249, %248 ], [ %247, %241 ]
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %250
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %239) #22
  br label %254

254:                                              ; preds = %238, %250, %253
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #22
  %255 = load i32, i32* %13, align 8
  %256 = and i32 %255, 48
  %257 = icmp eq i32 %256, 32
  br i1 %257, label %510, label %258

258:                                              ; preds = %254
  %259 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kClassAttrE, align 8
  %260 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 3
  %261 = bitcast %"class.blink::Member.320"* %260 to %"class.blink::ElementData"**
  %262 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %261, align 8
  %263 = icmp eq %"class.blink::ElementData"* %262, null
  br i1 %263, label %510, label %264

264:                                              ; preds = %258
  %265 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %262, i64 0, i32 0, i32 0, i32 0
  %266 = load i32, i32* %265, align 4
  %267 = and i32 %266, 1
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %276, label %269

269:                                              ; preds = %264
  %270 = bitcast %"class.blink::ElementData"* %262 to %"class.blink::UniqueElementData"*
  %271 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %262, i64 1, i32 1
  %272 = bitcast %"class.blink::Member.354"* %271 to %"class.blink::Attribute"**
  %273 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %272, align 8
  %274 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %270, i64 0, i32 2, i32 0, i32 0, i32 2
  %275 = load i32, i32* %274, align 4
  br label %281

276:                                              ; preds = %264
  %277 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %262, i64 1
  %278 = bitcast %"class.blink::ElementData"* %277 to %"class.blink::Attribute"*
  %279 = lshr i32 %266, 1
  %280 = and i32 %279, 268435455
  br label %281

281:                                              ; preds = %276, %269
  %282 = phi %"class.blink::Attribute"* [ %278, %276 ], [ %273, %269 ]
  %283 = phi i32 [ %280, %276 ], [ %275, %269 ]
  %284 = zext i32 %283 to i64
  %285 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %282, i64 %284
  %286 = icmp eq i32 %283, 0
  br i1 %286, label %510, label %287

287:                                              ; preds = %281
  %288 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %259, i64 0, i32 0, i32 0
  %289 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %288, align 8
  %290 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %289, i64 0, i32 3, i32 0, i32 0, i32 0
  %291 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %289, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %292

292:                                              ; preds = %308, %287
  %293 = phi %"class.blink::Attribute"* [ %282, %287 ], [ %309, %308 ]
  %294 = phi i32 [ 0, %287 ], [ %310, %308 ]
  %295 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %293, i64 0, i32 0, i32 0, i32 0
  %296 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %295, align 8
  %297 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %296, %289
  br i1 %297, label %312, label %298

298:                                              ; preds = %292
  %299 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %296, i64 0, i32 3, i32 0, i32 0, i32 0
  %300 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %299, align 8
  %301 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %290, align 8
  %302 = icmp eq %"class.WTF::StringImpl"* %300, %301
  br i1 %302, label %303, label %308

303:                                              ; preds = %298
  %304 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %296, i64 0, i32 4, i32 0, i32 0, i32 0
  %305 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %304, align 8
  %306 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %291, align 8
  %307 = icmp eq %"class.WTF::StringImpl"* %305, %306
  br i1 %307, label %312, label %308

308:                                              ; preds = %303, %298
  %309 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %293, i64 1
  %310 = add i32 %294, 1
  %311 = icmp eq %"class.blink::Attribute"* %309, %285
  br i1 %311, label %510, label %292

312:                                              ; preds = %292, %303
  %313 = icmp eq i32 %294, -1
  br i1 %313, label %510, label %314

314:                                              ; preds = %312
  %315 = bitcast %"class.WTF::StringAppend.3840"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %315) #22
  %316 = bitcast %"class.WTF::StringAppend"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %316) #22
  %317 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %318 = icmp eq %"class.WTF::StringImpl"* %317, null
  br i1 %318, label %363, label %319

319:                                              ; preds = %314
  %320 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %317, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %321 = load atomic i32, i32* %320 monotonic, align 4
  %322 = and i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %317, i64 0, i32 0
  %325 = load i32, i32* %324, align 4
  br i1 %323, label %326, label %336

326:                                              ; preds = %319
  %327 = zext i32 %325 to i33
  %328 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %327, i33 1) #22
  %329 = extractvalue { i33, i1 } %328, 1
  %330 = extractvalue { i33, i1 } %328, 0
  %331 = icmp slt i33 %330, 0
  %332 = or i1 %329, %331
  br i1 %332, label %333, label %334, !prof !3

333:                                              ; preds = %326
  call void @llvm.trap() #22
  unreachable

334:                                              ; preds = %326
  %335 = trunc i33 %330 to i32
  store i32 %335, i32* %324, align 4
  br label %336

336:                                              ; preds = %319, %334
  %337 = phi i32 [ %335, %334 ], [ %325, %319 ]
  %338 = load atomic i32, i32* %320 monotonic, align 4
  %339 = and i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %317, i64 0, i32 0
  br i1 %340, label %342, label %352

342:                                              ; preds = %336
  %343 = zext i32 %337 to i33
  %344 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %343, i33 1) #22
  %345 = extractvalue { i33, i1 } %344, 1
  %346 = extractvalue { i33, i1 } %344, 0
  %347 = icmp slt i33 %346, 0
  %348 = or i1 %345, %347
  br i1 %348, label %349, label %350, !prof !3

349:                                              ; preds = %342
  call void @llvm.trap() #22
  unreachable

350:                                              ; preds = %342
  %351 = trunc i33 %346 to i32
  store i32 %351, i32* %341, align 4
  br label %352

352:                                              ; preds = %350, %336
  %353 = phi i32 [ %351, %350 ], [ %337, %336 ]
  %354 = load atomic i32, i32* %320 monotonic, align 4
  %355 = and i32 %354, 2
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %359

357:                                              ; preds = %352
  %358 = add i32 %353, -1
  store i32 %358, i32* %341, align 4
  br label %359

359:                                              ; preds = %357, %352
  %360 = phi i32 [ %358, %357 ], [ %353, %352 ]
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %363

362:                                              ; preds = %359
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %317) #22
  br label %363

363:                                              ; preds = %314, %359, %362
  %364 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %317, %"class.WTF::StringImpl"** %364, align 8
  %365 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.184, i64 0, i64 0), i8** %365, align 8
  %366 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %261, align 8
  %367 = icmp eq %"class.blink::ElementData"* %366, null
  br i1 %367, label %417, label %368

368:                                              ; preds = %363
  %369 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %366, i64 0, i32 0, i32 0, i32 0
  %370 = load i32, i32* %369, align 4
  %371 = and i32 %370, 1
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %380, label %373

373:                                              ; preds = %368
  %374 = bitcast %"class.blink::ElementData"* %366 to %"class.blink::UniqueElementData"*
  %375 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %366, i64 1, i32 1
  %376 = bitcast %"class.blink::Member.354"* %375 to %"class.blink::Attribute"**
  %377 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %376, align 8
  %378 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %374, i64 0, i32 2, i32 0, i32 0, i32 2
  %379 = load i32, i32* %378, align 4
  br label %385

380:                                              ; preds = %368
  %381 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %366, i64 1
  %382 = bitcast %"class.blink::ElementData"* %381 to %"class.blink::Attribute"*
  %383 = lshr i32 %370, 1
  %384 = and i32 %383, 268435455
  br label %385

385:                                              ; preds = %380, %373
  %386 = phi %"class.blink::Attribute"* [ %382, %380 ], [ %377, %373 ]
  %387 = phi i32 [ %384, %380 ], [ %379, %373 ]
  %388 = zext i32 %387 to i64
  %389 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %386, i64 %388
  %390 = icmp eq i32 %387, 0
  br i1 %390, label %417, label %391

391:                                              ; preds = %385
  %392 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %288, align 8
  %393 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %392, i64 0, i32 3, i32 0, i32 0, i32 0
  %394 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %392, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %395

395:                                              ; preds = %410, %391
  %396 = phi %"class.blink::Attribute"* [ %386, %391 ], [ %411, %410 ]
  %397 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %396, i64 0, i32 0, i32 0, i32 0
  %398 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %397, align 8
  %399 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %398, %392
  br i1 %399, label %413, label %400

400:                                              ; preds = %395
  %401 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %398, i64 0, i32 3, i32 0, i32 0, i32 0
  %402 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %401, align 8
  %403 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %393, align 8
  %404 = icmp eq %"class.WTF::StringImpl"* %402, %403
  br i1 %404, label %405, label %410

405:                                              ; preds = %400
  %406 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %398, i64 0, i32 4, i32 0, i32 0, i32 0
  %407 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %406, align 8
  %408 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %394, align 8
  %409 = icmp eq %"class.WTF::StringImpl"* %407, %408
  br i1 %409, label %413, label %410

410:                                              ; preds = %405, %400
  %411 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %396, i64 1
  %412 = icmp eq %"class.blink::Attribute"* %411, %389
  br i1 %412, label %417, label %395

413:                                              ; preds = %405, %395
  %414 = icmp eq %"class.blink::Attribute"* %396, null
  br i1 %414, label %417, label %415

415:                                              ; preds = %413
  %416 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %396, i64 0, i32 1
  br label %419

417:                                              ; preds = %410, %413, %385, %363
  %418 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %419

419:                                              ; preds = %415, %417
  %420 = phi %"class.WTF::AtomicString"* [ %418, %417 ], [ %416, %415 ]
  %421 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %420, i64 0, i32 0, i32 0, i32 0
  %422 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %421, align 8
  %423 = icmp eq %"class.WTF::StringImpl"* %422, null
  br i1 %423, label %441, label %424

424:                                              ; preds = %419
  %425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %422, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %426 = load atomic i32, i32* %425 monotonic, align 4
  %427 = and i32 %426, 2
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %429, label %441

429:                                              ; preds = %424
  %430 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %422, i64 0, i32 0
  %431 = load i32, i32* %430, align 4
  %432 = zext i32 %431 to i33
  %433 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %432, i33 1) #22
  %434 = extractvalue { i33, i1 } %433, 1
  %435 = extractvalue { i33, i1 } %433, 0
  %436 = icmp slt i33 %435, 0
  %437 = or i1 %434, %436
  br i1 %437, label %438, label %439, !prof !3

438:                                              ; preds = %429
  call void @llvm.trap() #22
  unreachable

439:                                              ; preds = %429
  %440 = trunc i33 %435 to i32
  store i32 %440, i32* %430, align 4
  br label %441

441:                                              ; preds = %419, %424, %439
  call void @_ZN3WTFplINS_6StringEPKcNS_12AtomicStringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.3840"* nonnull sret %8, %"class.WTF::StringAppend"* nonnull dereferenceable(16) %9, %"class.WTF::StringImpl"* %422)
  %442 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEENS_12AtomicStringEEcvS1_Ev(%"class.WTF::StringAppend.3840"* nonnull %8)
  %443 = ptrtoint %"class.WTF::StringImpl"* %442 to i64
  %444 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  store i64 %443, i64* %190, align 8
  %445 = icmp eq %"class.WTF::StringImpl"* %444, null
  br i1 %445, label %459, label %446

446:                                              ; preds = %441
  %447 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %444, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %448 = load atomic i32, i32* %447 monotonic, align 4
  %449 = and i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %444, i64 0, i32 0
  %452 = load i32, i32* %451, align 4
  br i1 %450, label %453, label %455

453:                                              ; preds = %446
  %454 = add i32 %452, -1
  store i32 %454, i32* %451, align 4
  br label %455

455:                                              ; preds = %453, %446
  %456 = phi i32 [ %454, %453 ], [ %452, %446 ]
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %458, label %459

458:                                              ; preds = %455
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %444) #22
  br label %459

459:                                              ; preds = %458, %455, %441
  %460 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %461 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %460, align 8
  %462 = icmp eq %"class.WTF::StringImpl"* %461, null
  br i1 %462, label %476, label %463

463:                                              ; preds = %459
  %464 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %461, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %465 = load atomic i32, i32* %464 monotonic, align 4
  %466 = and i32 %465, 2
  %467 = icmp eq i32 %466, 0
  %468 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %461, i64 0, i32 0
  %469 = load i32, i32* %468, align 4
  br i1 %467, label %470, label %472

470:                                              ; preds = %463
  %471 = add i32 %469, -1
  store i32 %471, i32* %468, align 4
  br label %472

472:                                              ; preds = %470, %463
  %473 = phi i32 [ %471, %470 ], [ %469, %463 ]
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %475, label %476

475:                                              ; preds = %472
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %461) #22
  br label %476

476:                                              ; preds = %475, %472, %459
  %477 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %478 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %477, align 8
  %479 = icmp eq %"class.WTF::StringImpl"* %478, null
  br i1 %479, label %493, label %480

480:                                              ; preds = %476
  %481 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %478, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %482 = load atomic i32, i32* %481 monotonic, align 4
  %483 = and i32 %482, 2
  %484 = icmp eq i32 %483, 0
  %485 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %478, i64 0, i32 0
  %486 = load i32, i32* %485, align 4
  br i1 %484, label %487, label %489

487:                                              ; preds = %480
  %488 = add i32 %486, -1
  store i32 %488, i32* %485, align 4
  br label %489

489:                                              ; preds = %487, %480
  %490 = phi i32 [ %488, %487 ], [ %486, %480 ]
  %491 = icmp eq i32 %490, 0
  br i1 %491, label %492, label %493

492:                                              ; preds = %489
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %478) #22
  br label %493

493:                                              ; preds = %476, %489, %492
  %494 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %364, align 8
  %495 = icmp eq %"class.WTF::StringImpl"* %494, null
  br i1 %495, label %509, label %496

496:                                              ; preds = %493
  %497 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %494, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %498 = load atomic i32, i32* %497 monotonic, align 4
  %499 = and i32 %498, 2
  %500 = icmp eq i32 %499, 0
  %501 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %494, i64 0, i32 0
  %502 = load i32, i32* %501, align 4
  br i1 %500, label %503, label %505

503:                                              ; preds = %496
  %504 = add i32 %502, -1
  store i32 %504, i32* %501, align 4
  br label %505

505:                                              ; preds = %503, %496
  %506 = phi i32 [ %504, %503 ], [ %502, %496 ]
  %507 = icmp eq i32 %506, 0
  br i1 %507, label %508, label %509

508:                                              ; preds = %505
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %494) #22
  br label %509

509:                                              ; preds = %493, %505, %508
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %316) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %315) #22
  br label %510

510:                                              ; preds = %308, %254, %312, %281, %258, %509
  %511 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %512 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 3
  %513 = bitcast %"class.blink::Member.320"* %512 to %"class.blink::ElementData"**
  %514 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %513, align 8
  %515 = icmp eq %"class.blink::ElementData"* %514, null
  br i1 %515, label %762, label %516

516:                                              ; preds = %510
  %517 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %514, i64 0, i32 0, i32 0, i32 0
  %518 = load i32, i32* %517, align 4
  %519 = and i32 %518, 1
  %520 = icmp eq i32 %519, 0
  br i1 %520, label %528, label %521

521:                                              ; preds = %516
  %522 = bitcast %"class.blink::ElementData"* %514 to %"class.blink::UniqueElementData"*
  %523 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %514, i64 1, i32 1
  %524 = bitcast %"class.blink::Member.354"* %523 to %"class.blink::Attribute"**
  %525 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %524, align 8
  %526 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %522, i64 0, i32 2, i32 0, i32 0, i32 2
  %527 = load i32, i32* %526, align 4
  br label %533

528:                                              ; preds = %516
  %529 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %514, i64 1
  %530 = bitcast %"class.blink::ElementData"* %529 to %"class.blink::Attribute"*
  %531 = lshr i32 %518, 1
  %532 = and i32 %531, 268435455
  br label %533

533:                                              ; preds = %528, %521
  %534 = phi %"class.blink::Attribute"* [ %530, %528 ], [ %525, %521 ]
  %535 = phi i32 [ %532, %528 ], [ %527, %521 ]
  %536 = zext i32 %535 to i64
  %537 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %534, i64 %536
  %538 = icmp eq i32 %535, 0
  br i1 %538, label %762, label %539

539:                                              ; preds = %533
  %540 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %511, i64 0, i32 0, i32 0
  %541 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %540, align 8
  %542 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %541, i64 0, i32 3, i32 0, i32 0, i32 0
  %543 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %541, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %544

544:                                              ; preds = %560, %539
  %545 = phi %"class.blink::Attribute"* [ %534, %539 ], [ %561, %560 ]
  %546 = phi i32 [ 0, %539 ], [ %562, %560 ]
  %547 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %545, i64 0, i32 0, i32 0, i32 0
  %548 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %547, align 8
  %549 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %548, %541
  br i1 %549, label %564, label %550

550:                                              ; preds = %544
  %551 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %548, i64 0, i32 3, i32 0, i32 0, i32 0
  %552 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %551, align 8
  %553 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %542, align 8
  %554 = icmp eq %"class.WTF::StringImpl"* %552, %553
  br i1 %554, label %555, label %560

555:                                              ; preds = %550
  %556 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %548, i64 0, i32 4, i32 0, i32 0, i32 0
  %557 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %556, align 8
  %558 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %543, align 8
  %559 = icmp eq %"class.WTF::StringImpl"* %557, %558
  br i1 %559, label %564, label %560

560:                                              ; preds = %555, %550
  %561 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %545, i64 1
  %562 = add i32 %546, 1
  %563 = icmp eq %"class.blink::Attribute"* %561, %537
  br i1 %563, label %762, label %544

564:                                              ; preds = %544, %555
  %565 = icmp eq i32 %546, -1
  br i1 %565, label %762, label %566

566:                                              ; preds = %564
  %567 = bitcast %"class.WTF::StringAppend.3840"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %567) #22
  %568 = bitcast %"class.WTF::StringAppend"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %568) #22
  %569 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %570 = icmp eq %"class.WTF::StringImpl"* %569, null
  br i1 %570, label %615, label %571

571:                                              ; preds = %566
  %572 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %569, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %573 = load atomic i32, i32* %572 monotonic, align 4
  %574 = and i32 %573, 2
  %575 = icmp eq i32 %574, 0
  %576 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %569, i64 0, i32 0
  %577 = load i32, i32* %576, align 4
  br i1 %575, label %578, label %588

578:                                              ; preds = %571
  %579 = zext i32 %577 to i33
  %580 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %579, i33 1) #22
  %581 = extractvalue { i33, i1 } %580, 1
  %582 = extractvalue { i33, i1 } %580, 0
  %583 = icmp slt i33 %582, 0
  %584 = or i1 %581, %583
  br i1 %584, label %585, label %586, !prof !3

585:                                              ; preds = %578
  call void @llvm.trap() #22
  unreachable

586:                                              ; preds = %578
  %587 = trunc i33 %582 to i32
  store i32 %587, i32* %576, align 4
  br label %588

588:                                              ; preds = %571, %586
  %589 = phi i32 [ %587, %586 ], [ %577, %571 ]
  %590 = load atomic i32, i32* %572 monotonic, align 4
  %591 = and i32 %590, 2
  %592 = icmp eq i32 %591, 0
  %593 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %569, i64 0, i32 0
  br i1 %592, label %594, label %604

594:                                              ; preds = %588
  %595 = zext i32 %589 to i33
  %596 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %595, i33 1) #22
  %597 = extractvalue { i33, i1 } %596, 1
  %598 = extractvalue { i33, i1 } %596, 0
  %599 = icmp slt i33 %598, 0
  %600 = or i1 %597, %599
  br i1 %600, label %601, label %602, !prof !3

601:                                              ; preds = %594
  call void @llvm.trap() #22
  unreachable

602:                                              ; preds = %594
  %603 = trunc i33 %598 to i32
  store i32 %603, i32* %593, align 4
  br label %604

604:                                              ; preds = %602, %588
  %605 = phi i32 [ %603, %602 ], [ %589, %588 ]
  %606 = load atomic i32, i32* %572 monotonic, align 4
  %607 = and i32 %606, 2
  %608 = icmp eq i32 %607, 0
  br i1 %608, label %609, label %611

609:                                              ; preds = %604
  %610 = add i32 %605, -1
  store i32 %610, i32* %593, align 4
  br label %611

611:                                              ; preds = %609, %604
  %612 = phi i32 [ %610, %609 ], [ %605, %604 ]
  %613 = icmp eq i32 %612, 0
  br i1 %613, label %614, label %615

614:                                              ; preds = %611
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %569) #22
  br label %615

615:                                              ; preds = %566, %611, %614
  %616 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %569, %"class.WTF::StringImpl"** %616, align 8
  %617 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.185, i64 0, i64 0), i8** %617, align 8
  %618 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %513, align 8
  %619 = icmp eq %"class.blink::ElementData"* %618, null
  br i1 %619, label %669, label %620

620:                                              ; preds = %615
  %621 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %618, i64 0, i32 0, i32 0, i32 0
  %622 = load i32, i32* %621, align 4
  %623 = and i32 %622, 1
  %624 = icmp eq i32 %623, 0
  br i1 %624, label %632, label %625

625:                                              ; preds = %620
  %626 = bitcast %"class.blink::ElementData"* %618 to %"class.blink::UniqueElementData"*
  %627 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %618, i64 1, i32 1
  %628 = bitcast %"class.blink::Member.354"* %627 to %"class.blink::Attribute"**
  %629 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %628, align 8
  %630 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %626, i64 0, i32 2, i32 0, i32 0, i32 2
  %631 = load i32, i32* %630, align 4
  br label %637

632:                                              ; preds = %620
  %633 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %618, i64 1
  %634 = bitcast %"class.blink::ElementData"* %633 to %"class.blink::Attribute"*
  %635 = lshr i32 %622, 1
  %636 = and i32 %635, 268435455
  br label %637

637:                                              ; preds = %632, %625
  %638 = phi %"class.blink::Attribute"* [ %634, %632 ], [ %629, %625 ]
  %639 = phi i32 [ %636, %632 ], [ %631, %625 ]
  %640 = zext i32 %639 to i64
  %641 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %638, i64 %640
  %642 = icmp eq i32 %639, 0
  br i1 %642, label %669, label %643

643:                                              ; preds = %637
  %644 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %540, align 8
  %645 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %644, i64 0, i32 3, i32 0, i32 0, i32 0
  %646 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %644, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %647

647:                                              ; preds = %662, %643
  %648 = phi %"class.blink::Attribute"* [ %638, %643 ], [ %663, %662 ]
  %649 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %648, i64 0, i32 0, i32 0, i32 0
  %650 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %649, align 8
  %651 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %650, %644
  br i1 %651, label %665, label %652

652:                                              ; preds = %647
  %653 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %650, i64 0, i32 3, i32 0, i32 0, i32 0
  %654 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %653, align 8
  %655 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %645, align 8
  %656 = icmp eq %"class.WTF::StringImpl"* %654, %655
  br i1 %656, label %657, label %662

657:                                              ; preds = %652
  %658 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %650, i64 0, i32 4, i32 0, i32 0, i32 0
  %659 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %658, align 8
  %660 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %646, align 8
  %661 = icmp eq %"class.WTF::StringImpl"* %659, %660
  br i1 %661, label %665, label %662

662:                                              ; preds = %657, %652
  %663 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %648, i64 1
  %664 = icmp eq %"class.blink::Attribute"* %663, %641
  br i1 %664, label %669, label %647

665:                                              ; preds = %657, %647
  %666 = icmp eq %"class.blink::Attribute"* %648, null
  br i1 %666, label %669, label %667

667:                                              ; preds = %665
  %668 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %648, i64 0, i32 1
  br label %671

669:                                              ; preds = %662, %665, %637, %615
  %670 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %671

671:                                              ; preds = %667, %669
  %672 = phi %"class.WTF::AtomicString"* [ %670, %669 ], [ %668, %667 ]
  %673 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %672, i64 0, i32 0, i32 0, i32 0
  %674 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %673, align 8
  %675 = icmp eq %"class.WTF::StringImpl"* %674, null
  br i1 %675, label %693, label %676

676:                                              ; preds = %671
  %677 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %674, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %678 = load atomic i32, i32* %677 monotonic, align 4
  %679 = and i32 %678, 2
  %680 = icmp eq i32 %679, 0
  br i1 %680, label %681, label %693

681:                                              ; preds = %676
  %682 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %674, i64 0, i32 0
  %683 = load i32, i32* %682, align 4
  %684 = zext i32 %683 to i33
  %685 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %684, i33 1) #22
  %686 = extractvalue { i33, i1 } %685, 1
  %687 = extractvalue { i33, i1 } %685, 0
  %688 = icmp slt i33 %687, 0
  %689 = or i1 %686, %688
  br i1 %689, label %690, label %691, !prof !3

690:                                              ; preds = %681
  call void @llvm.trap() #22
  unreachable

691:                                              ; preds = %681
  %692 = trunc i33 %687 to i32
  store i32 %692, i32* %682, align 4
  br label %693

693:                                              ; preds = %671, %676, %691
  call void @_ZN3WTFplINS_6StringEPKcNS_12AtomicStringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.3840"* nonnull sret %10, %"class.WTF::StringAppend"* nonnull dereferenceable(16) %11, %"class.WTF::StringImpl"* %674)
  %694 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEENS_12AtomicStringEEcvS1_Ev(%"class.WTF::StringAppend.3840"* nonnull %10)
  %695 = ptrtoint %"class.WTF::StringImpl"* %694 to i64
  %696 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  store i64 %695, i64* %190, align 8
  %697 = icmp eq %"class.WTF::StringImpl"* %696, null
  br i1 %697, label %711, label %698

698:                                              ; preds = %693
  %699 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %696, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %700 = load atomic i32, i32* %699 monotonic, align 4
  %701 = and i32 %700, 2
  %702 = icmp eq i32 %701, 0
  %703 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %696, i64 0, i32 0
  %704 = load i32, i32* %703, align 4
  br i1 %702, label %705, label %707

705:                                              ; preds = %698
  %706 = add i32 %704, -1
  store i32 %706, i32* %703, align 4
  br label %707

707:                                              ; preds = %705, %698
  %708 = phi i32 [ %706, %705 ], [ %704, %698 ]
  %709 = icmp eq i32 %708, 0
  br i1 %709, label %710, label %711

710:                                              ; preds = %707
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %696) #22
  br label %711

711:                                              ; preds = %710, %707, %693
  %712 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %713 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %712, align 8
  %714 = icmp eq %"class.WTF::StringImpl"* %713, null
  br i1 %714, label %728, label %715

715:                                              ; preds = %711
  %716 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %713, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %717 = load atomic i32, i32* %716 monotonic, align 4
  %718 = and i32 %717, 2
  %719 = icmp eq i32 %718, 0
  %720 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %713, i64 0, i32 0
  %721 = load i32, i32* %720, align 4
  br i1 %719, label %722, label %724

722:                                              ; preds = %715
  %723 = add i32 %721, -1
  store i32 %723, i32* %720, align 4
  br label %724

724:                                              ; preds = %722, %715
  %725 = phi i32 [ %723, %722 ], [ %721, %715 ]
  %726 = icmp eq i32 %725, 0
  br i1 %726, label %727, label %728

727:                                              ; preds = %724
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %713) #22
  br label %728

728:                                              ; preds = %727, %724, %711
  %729 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %730 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %729, align 8
  %731 = icmp eq %"class.WTF::StringImpl"* %730, null
  br i1 %731, label %745, label %732

732:                                              ; preds = %728
  %733 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %730, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %734 = load atomic i32, i32* %733 monotonic, align 4
  %735 = and i32 %734, 2
  %736 = icmp eq i32 %735, 0
  %737 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %730, i64 0, i32 0
  %738 = load i32, i32* %737, align 4
  br i1 %736, label %739, label %741

739:                                              ; preds = %732
  %740 = add i32 %738, -1
  store i32 %740, i32* %737, align 4
  br label %741

741:                                              ; preds = %739, %732
  %742 = phi i32 [ %740, %739 ], [ %738, %732 ]
  %743 = icmp eq i32 %742, 0
  br i1 %743, label %744, label %745

744:                                              ; preds = %741
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %730) #22
  br label %745

745:                                              ; preds = %728, %741, %744
  %746 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %616, align 8
  %747 = icmp eq %"class.WTF::StringImpl"* %746, null
  br i1 %747, label %761, label %748

748:                                              ; preds = %745
  %749 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %746, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %750 = load atomic i32, i32* %749 monotonic, align 4
  %751 = and i32 %750, 2
  %752 = icmp eq i32 %751, 0
  %753 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %746, i64 0, i32 0
  %754 = load i32, i32* %753, align 4
  br i1 %752, label %755, label %757

755:                                              ; preds = %748
  %756 = add i32 %754, -1
  store i32 %756, i32* %753, align 4
  br label %757

757:                                              ; preds = %755, %748
  %758 = phi i32 [ %756, %755 ], [ %754, %748 ]
  %759 = icmp eq i32 %758, 0
  br i1 %759, label %760, label %761

760:                                              ; preds = %757
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %746) #22
  br label %761

761:                                              ; preds = %745, %757, %760
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %568) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %567) #22
  br label %762

762:                                              ; preds = %560, %564, %533, %510, %761
  %763 = bitcast %"class.WTF::StringAppend"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %763) #22
  %764 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %765 = icmp eq %"class.WTF::StringImpl"* %764, null
  br i1 %765, label %810, label %766

766:                                              ; preds = %762
  %767 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %764, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %768 = load atomic i32, i32* %767 monotonic, align 4
  %769 = and i32 %768, 2
  %770 = icmp eq i32 %769, 0
  %771 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %764, i64 0, i32 0
  %772 = load i32, i32* %771, align 4
  br i1 %770, label %773, label %783

773:                                              ; preds = %766
  %774 = zext i32 %772 to i33
  %775 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %774, i33 1) #22
  %776 = extractvalue { i33, i1 } %775, 1
  %777 = extractvalue { i33, i1 } %775, 0
  %778 = icmp slt i33 %777, 0
  %779 = or i1 %776, %778
  br i1 %779, label %780, label %781, !prof !3

780:                                              ; preds = %773
  call void @llvm.trap() #22
  unreachable

781:                                              ; preds = %773
  %782 = trunc i33 %777 to i32
  store i32 %782, i32* %771, align 4
  br label %783

783:                                              ; preds = %766, %781
  %784 = phi i32 [ %782, %781 ], [ %772, %766 ]
  %785 = load atomic i32, i32* %767 monotonic, align 4
  %786 = and i32 %785, 2
  %787 = icmp eq i32 %786, 0
  %788 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %764, i64 0, i32 0
  br i1 %787, label %789, label %799

789:                                              ; preds = %783
  %790 = zext i32 %784 to i33
  %791 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %790, i33 1) #22
  %792 = extractvalue { i33, i1 } %791, 1
  %793 = extractvalue { i33, i1 } %791, 0
  %794 = icmp slt i33 %793, 0
  %795 = or i1 %792, %794
  br i1 %795, label %796, label %797, !prof !3

796:                                              ; preds = %789
  call void @llvm.trap() #22
  unreachable

797:                                              ; preds = %789
  %798 = trunc i33 %793 to i32
  store i32 %798, i32* %788, align 4
  br label %799

799:                                              ; preds = %797, %783
  %800 = phi i32 [ %798, %797 ], [ %784, %783 ]
  %801 = load atomic i32, i32* %767 monotonic, align 4
  %802 = and i32 %801, 2
  %803 = icmp eq i32 %802, 0
  br i1 %803, label %804, label %806

804:                                              ; preds = %799
  %805 = add i32 %800, -1
  store i32 %805, i32* %788, align 4
  br label %806

806:                                              ; preds = %804, %799
  %807 = phi i32 [ %805, %804 ], [ %800, %799 ]
  %808 = icmp eq i32 %807, 0
  br i1 %808, label %809, label %810

809:                                              ; preds = %806
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %764) #22
  br label %810

810:                                              ; preds = %762, %806, %809
  %811 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %764, %"class.WTF::StringImpl"** %811, align 8
  %812 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0), i8** %812, align 8
  %813 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %12)
  %814 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %813, %"class.WTF::StringImpl"** %814, align 8
  %815 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %811, align 8
  %816 = icmp eq %"class.WTF::StringImpl"* %815, null
  br i1 %816, label %830, label %817

817:                                              ; preds = %810
  %818 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %815, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %819 = load atomic i32, i32* %818 monotonic, align 4
  %820 = and i32 %819, 2
  %821 = icmp eq i32 %820, 0
  %822 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %815, i64 0, i32 0
  %823 = load i32, i32* %822, align 4
  br i1 %821, label %824, label %826

824:                                              ; preds = %817
  %825 = add i32 %823, -1
  store i32 %825, i32* %822, align 4
  br label %826

826:                                              ; preds = %824, %817
  %827 = phi i32 [ %825, %824 ], [ %823, %817 ]
  %828 = icmp eq i32 %827, 0
  br i1 %828, label %829, label %830

829:                                              ; preds = %826
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %815) #22
  br label %830

830:                                              ; preds = %810, %826, %829
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %763) #22
  %831 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %832 = icmp eq %"class.WTF::StringImpl"* %831, null
  br i1 %832, label %846, label %833

833:                                              ; preds = %830
  %834 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %831, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %835 = load atomic i32, i32* %834 monotonic, align 4
  %836 = and i32 %835, 2
  %837 = icmp eq i32 %836, 0
  %838 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %831, i64 0, i32 0
  %839 = load i32, i32* %838, align 4
  br i1 %837, label %840, label %842

840:                                              ; preds = %833
  %841 = add i32 %839, -1
  store i32 %841, i32* %838, align 4
  br label %842

842:                                              ; preds = %840, %833
  %843 = phi i32 [ %841, %840 ], [ %839, %833 ]
  %844 = icmp eq i32 %843, 0
  br i1 %844, label %845, label %846

845:                                              ; preds = %842
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %831) #22
  br label %846

846:                                              ; preds = %830, %842, %845
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #22
  br label %847

847:                                              ; preds = %169, %846, %164
  %848 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %849 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %848, align 8
  ret %"class.WTF::StringImpl"* %849
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_6StringEPKcNS_12AtomicStringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.3840"* noalias sret, %"class.WTF::StringAppend"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #2 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #22
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #22
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #22
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !3

43:                                               ; preds = %34
  tail call void @llvm.trap() #22
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEENS_12AtomicStringEEC2ES4_S5_(%"class.WTF::StringAppend.3840"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEENS_12AtomicStringEEC2ES4_S5_(%"class.WTF::StringAppend.3840"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #22
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEENS_12AtomicStringEEcvS1_Ev(%"class.WTF::StringAppend.3840"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.4050", align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = select i1 %10, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %9
  %12 = bitcast %"class.WTF::StringTypeAdapter.4050"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #22
  %13 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #22
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4050"* nonnull %2, i8* %14) #22
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #22
  br i1 %18, label %62, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %6, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %6
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %62, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #22
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %28 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEENS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.3840"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %3) #22
  %30 = load i8*, i8** %3, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEENS_12AtomicStringEE7WriteToEPh(%"class.WTF::StringAppend.3840"* %0, i8* %30)
  %31 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %31, label %98, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %49

39:                                               ; preds = %32
  %40 = zext i32 %38 to i33
  %41 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #22
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %39
  call void @llvm.trap() #22
  unreachable

47:                                               ; preds = %39
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %37, align 4
  br label %49

49:                                               ; preds = %32, %47
  %50 = phi i32 [ %48, %47 ], [ %38, %32 ]
  %51 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %52 = load atomic i32, i32* %33 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %57 = add i32 %50, -1
  store i32 %57, i32* %56, align 4
  br label %58

58:                                               ; preds = %55, %49
  %59 = phi i32 [ %57, %55 ], [ %50, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %98

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #22
  br label %98

62:                                               ; preds = %19, %1
  %63 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #22
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %64 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEENS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.3840"* %0)
  %65 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %64, i16** nonnull dereferenceable(8) %4) #22
  %66 = load i16*, i16** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEENS_12AtomicStringEE7WriteToEPDs(%"class.WTF::StringAppend.3840"* %0, i16* %66)
  %67 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %67, label %98, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %85

75:                                               ; preds = %68
  %76 = zext i32 %74 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #22
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !3

82:                                               ; preds = %75
  call void @llvm.trap() #22
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %73, align 4
  br label %85

85:                                               ; preds = %68, %83
  %86 = phi i32 [ %84, %83 ], [ %74, %68 ]
  %87 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  %88 = load atomic i32, i32* %69 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %93 = add i32 %86, -1
  store i32 %93, i32* %92, align 4
  br label %94

94:                                               ; preds = %91, %85
  %95 = phi i32 [ %93, %91 ], [ %86, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #22
  br label %98

98:                                               ; preds = %97, %94, %62, %61, %58, %26
  %99 = phi i8* [ %27, %26 ], [ %27, %58 ], [ %27, %61 ], [ %63, %62 ], [ %63, %94 ], [ %63, %97 ]
  %100 = phi i64 [ 0, %26 ], [ %51, %58 ], [ %51, %61 ], [ 0, %62 ], [ %87, %94 ], [ %87, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #22
  %101 = inttoptr i64 %100 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %101
}

declare %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend.3841"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.4050", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.4050", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.4050", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.4050", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = bitcast %"class.WTF::StringTypeAdapter.4050"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #22
  %9 = getelementptr inbounds %"class.WTF::StringAppend.3841", %"class.WTF::StringAppend.3841"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false) #22
  %10 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4050"* nonnull %5, i8* %10) #22
  %11 = getelementptr inbounds %"class.WTF::StringAppend.3841", %"class.WTF::StringAppend.3841"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %14 = getelementptr inbounds %"class.WTF::StringAppend.3841", %"class.WTF::StringAppend.3841"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  %17 = select i1 %16, %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"* %15
  %18 = bitcast %"class.WTF::StringTypeAdapter.4050"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #22
  %19 = getelementptr inbounds %"class.WTF::StringAppend.3841", %"class.WTF::StringAppend.3841"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false) #22
  %20 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4050"* nonnull %4, i8* %20) #22
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #22
  br i1 %24, label %25, label %26

25:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #22
  br label %75

26:                                               ; preds = %1
  %27 = icmp eq %"class.WTF::StringImpl"* %12, null
  %28 = select i1 %27, %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"* %12
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #22
  br i1 %32, label %75, label %33

33:                                               ; preds = %26
  %34 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #22
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %35 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.3841"* %0)
  %36 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %35, i8** nonnull dereferenceable(8) %6) #22
  %37 = load i8*, i8** %6, align 8
  %38 = getelementptr inbounds %"class.WTF::StringAppend.3841", %"class.WTF::StringAppend.3841"* %0, i64 0, i32 0
  %39 = bitcast %"class.WTF::StringTypeAdapter.4050"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false) #22
  %40 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4050"* nonnull %3, i8* %40) #22
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend.3839"* %38, i8* %37) #22
  %41 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.3839"* %38) #22
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %37, i64 %42
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.4050"* nonnull %3, i8* %43) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #22
  %44 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %44, label %117, label %45

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %62

52:                                               ; preds = %45
  %53 = zext i32 %51 to i33
  %54 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %53, i33 1) #22
  %55 = extractvalue { i33, i1 } %54, 1
  %56 = extractvalue { i33, i1 } %54, 0
  %57 = icmp slt i33 %56, 0
  %58 = or i1 %55, %57
  br i1 %58, label %59, label %60, !prof !3

59:                                               ; preds = %52
  call void @llvm.trap() #22
  unreachable

60:                                               ; preds = %52
  %61 = trunc i33 %56 to i32
  store i32 %61, i32* %50, align 4
  br label %62

62:                                               ; preds = %45, %60
  %63 = phi i32 [ %61, %60 ], [ %51, %45 ]
  %64 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %65 = load atomic i32, i32* %46 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %70 = add i32 %63, -1
  store i32 %70, i32* %69, align 4
  br label %71

71:                                               ; preds = %68, %62
  %72 = phi i32 [ %70, %68 ], [ %63, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %117

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #22
  br label %117

75:                                               ; preds = %26, %25
  %76 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #22
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %77 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.3841"* %0)
  %78 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %77, i16** nonnull dereferenceable(8) %7) #22
  %79 = load i16*, i16** %7, align 8
  %80 = getelementptr inbounds %"class.WTF::StringAppend.3841", %"class.WTF::StringAppend.3841"* %0, i64 0, i32 0
  %81 = bitcast %"class.WTF::StringTypeAdapter.4050"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 16, i1 false) #22
  %82 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4050"* nonnull %2, i8* %82) #22
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend.3839"* %80, i16* %79) #22
  %83 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.3839"* %80) #22
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i16, i16* %79, i64 %84
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4050"* nonnull %2, i16* %85) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #22
  %86 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %86, label %117, label %87

87:                                               ; preds = %75
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %104

94:                                               ; preds = %87
  %95 = zext i32 %93 to i33
  %96 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #22
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !3

101:                                              ; preds = %94
  call void @llvm.trap() #22
  unreachable

102:                                              ; preds = %94
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %92, align 4
  br label %104

104:                                              ; preds = %87, %102
  %105 = phi i32 [ %103, %102 ], [ %93, %87 ]
  %106 = ptrtoint %"class.WTF::StringImpl"* %78 to i64
  %107 = load atomic i32, i32* %88 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %112 = add i32 %105, -1
  store i32 %112, i32* %111, align 4
  br label %113

113:                                              ; preds = %110, %104
  %114 = phi i32 [ %112, %110 ], [ %105, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #22
  br label %117

117:                                              ; preds = %116, %113, %75, %74, %71, %33
  %118 = phi i8* [ %34, %33 ], [ %34, %71 ], [ %34, %74 ], [ %76, %75 ], [ %76, %113 ], [ %76, %116 ]
  %119 = phi i64 [ 0, %33 ], [ %64, %71 ], [ %64, %74 ], [ 0, %75 ], [ %106, %113 ], [ %106, %116 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #22
  %120 = inttoptr i64 %119 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %120
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringImpl"*) local_unnamed_addr #2 comdat {
  %3 = alloca %"class.WTF::StringAppend.3844", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #22
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #22
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  %25 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #22
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %31
  tail call void @llvm.trap() #22
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %44

43:                                               ; preds = %24
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.3844"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* null)
  br label %56

44:                                               ; preds = %26, %41
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.3844"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* nonnull %1)
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %44
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %51, %50 ], [ %49, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #22
  br label %56

56:                                               ; preds = %43, %52, %55
  %57 = getelementptr inbounds %"class.WTF::StringAppend.3844", %"class.WTF::StringAppend.3844"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringAppend.3844", %"class.WTF::StringAppend.3844"* %3, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %59, %"class.WTF::StringImpl"* %61, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.3844"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.3844", %"class.WTF::StringAppend.3844"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %12 = select i1 %10, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %9
  %13 = getelementptr inbounds %"class.WTF::StringAppend.3844", %"class.WTF::StringAppend.3844"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %103, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %14, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %103, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #22
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %28 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.3844"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %6) #22
  %30 = load i8*, i8** %6, align 8
  %31 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #22
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false) #22
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %26
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %44

38:                                               ; preds = %26
  %39 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %38, %36
  %45 = phi i8* [ null, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = phi i32 [ 0, %36 ], [ %41, %38 ]
  %48 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %46, i64* %48, align 8
  store i8* %45, i8** %32, align 8
  store i32 %47, i32* %33, align 8
  %49 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #22
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false) #22
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %44
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %62

56:                                               ; preds = %44
  %57 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  %61 = bitcast %"class.WTF::StringImpl"* %60 to i8*
  br label %62

62:                                               ; preds = %54, %56
  %63 = phi i8* [ null, %54 ], [ %61, %56 ]
  %64 = phi i64 [ %55, %54 ], [ %57, %56 ]
  %65 = phi i32 [ 0, %54 ], [ %59, %56 ]
  %66 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i64*
  store i64 %64, i64* %66, align 8
  store i8* %63, i8** %50, align 8
  store i32 %65, i32* %51, align 8
  %67 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.4049"* nonnull %67, i8* %30) #22
  %68 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0
  %69 = load i32, i32* %33, align 8
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %30, i64 %70
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.4049"* nonnull %68, i8* %71) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #22
  %72 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %72, label %180, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %90

80:                                               ; preds = %73
  %81 = zext i32 %79 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #22
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !3

87:                                               ; preds = %80
  call void @llvm.trap() #22
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %78, align 4
  br label %90

90:                                               ; preds = %73, %88
  %91 = phi i32 [ %89, %88 ], [ %79, %73 ]
  %92 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %93 = load atomic i32, i32* %74 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %98 = add i32 %91, -1
  store i32 %98, i32* %97, align 4
  br label %99

99:                                               ; preds = %96, %90
  %100 = phi i32 [ %98, %96 ], [ %91, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %180

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #22
  br label %180

103:                                              ; preds = %19, %1
  %104 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #22
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %105 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.3844"* %0)
  %106 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %105, i16** nonnull dereferenceable(8) %7) #22
  %107 = load i16*, i16** %7, align 8
  %108 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #22
  %109 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 24, i1 false) #22
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %113, label %115

113:                                              ; preds = %103
  %114 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %121

115:                                              ; preds = %103
  %116 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 1
  %120 = bitcast %"class.WTF::StringImpl"* %119 to i8*
  br label %121

121:                                              ; preds = %115, %113
  %122 = phi i8* [ null, %113 ], [ %120, %115 ]
  %123 = phi i64 [ %114, %113 ], [ %116, %115 ]
  %124 = phi i32 [ 0, %113 ], [ %118, %115 ]
  %125 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %123, i64* %125, align 8
  store i8* %122, i8** %109, align 8
  store i32 %124, i32* %110, align 8
  %126 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #22
  %127 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 24, i1 false) #22
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %131, label %133

131:                                              ; preds = %121
  %132 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %139

133:                                              ; preds = %121
  %134 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 1
  %138 = bitcast %"class.WTF::StringImpl"* %137 to i8*
  br label %139

139:                                              ; preds = %131, %133
  %140 = phi i8* [ null, %131 ], [ %138, %133 ]
  %141 = phi i64 [ %132, %131 ], [ %134, %133 ]
  %142 = phi i32 [ 0, %131 ], [ %136, %133 ]
  %143 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i64*
  store i64 %141, i64* %143, align 8
  store i8* %140, i8** %127, align 8
  store i32 %142, i32* %128, align 8
  %144 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4049"* nonnull %144, i16* %107) #22
  %145 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0
  %146 = load i32, i32* %110, align 8
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds i16, i16* %107, i64 %147
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4049"* nonnull %145, i16* %148) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #22
  %149 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %149, label %180, label %150

150:                                              ; preds = %139
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %167

157:                                              ; preds = %150
  %158 = zext i32 %156 to i33
  %159 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %158, i33 1) #22
  %160 = extractvalue { i33, i1 } %159, 1
  %161 = extractvalue { i33, i1 } %159, 0
  %162 = icmp slt i33 %161, 0
  %163 = or i1 %160, %162
  br i1 %163, label %164, label %165, !prof !3

164:                                              ; preds = %157
  call void @llvm.trap() #22
  unreachable

165:                                              ; preds = %157
  %166 = trunc i33 %161 to i32
  store i32 %166, i32* %155, align 4
  br label %167

167:                                              ; preds = %150, %165
  %168 = phi i32 [ %166, %165 ], [ %156, %150 ]
  %169 = ptrtoint %"class.WTF::StringImpl"* %106 to i64
  %170 = load atomic i32, i32* %151 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %175 = add i32 %168, -1
  store i32 %175, i32* %174, align 4
  br label %176

176:                                              ; preds = %173, %167
  %177 = phi i32 [ %175, %173 ], [ %168, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #22
  br label %180

180:                                              ; preds = %179, %176, %139, %102, %99, %62
  %181 = phi i8* [ %27, %62 ], [ %27, %99 ], [ %27, %102 ], [ %104, %139 ], [ %104, %176 ], [ %104, %179 ]
  %182 = phi i64 [ 0, %62 ], [ %92, %99 ], [ %92, %102 ], [ 0, %139 ], [ %169, %176 ], [ %169, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #22
  %183 = inttoptr i64 %182 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %183
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blinkneERKNS_8AXObjectES2_(%"class.blink::AXObject"* readonly dereferenceable(120), %"class.blink::AXObject"* readonly dereferenceable(120)) local_unnamed_addr #7 {
  %3 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %4 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %3, align 8
  %5 = icmp eq %"class.blink::AXObjectCacheImpl"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %1, i64 0, i32 14, i32 0, i32 0
  %8 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %7, align 8
  %9 = icmp eq %"class.blink::AXObjectCacheImpl"* %8, null
  %10 = icmp ne %"class.blink::AXObject"* %0, %1
  %11 = or i1 %10, %9
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi i1 [ %11, %6 ], [ true, %2 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blinkltERKNS_8AXObjectES2_(%"class.blink::AXObject"* dereferenceable(120), %"class.blink::AXObject"* dereferenceable(120)) local_unnamed_addr #2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %6 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %5, align 8
  %7 = icmp eq %"class.blink::AXObjectCacheImpl"* %6, null
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %1, i64 0, i32 14, i32 0, i32 0
  %10 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %9, align 8
  %11 = icmp eq %"class.blink::AXObjectCacheImpl"* %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %8
  %13 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #22
  store i32 -1431655766, i32* %3, align 4
  %14 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #22
  store i32 -1431655766, i32* %4, align 4
  %15 = call %"class.blink::AXObject"* @_ZN5blink8AXObject20LowestCommonAncestorERKS0_S2_PiS3_(%"class.blink::AXObject"* dereferenceable(120) %0, %"class.blink::AXObject"* dereferenceable(120) %1, i32* nonnull %3, i32* nonnull %4)
  %16 = icmp eq %"class.blink::AXObject"* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %12
  %18 = load i32, i32* %3, align 4
  %19 = load i32, i32* %4, align 4
  %20 = icmp slt i32 %18, %19
  br label %21

21:                                               ; preds = %12, %17
  %22 = phi i1 [ %20, %17 ], [ false, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #22
  br label %23

23:                                               ; preds = %2, %8, %21
  %24 = phi i1 [ %22, %21 ], [ false, %8 ], [ false, %2 ]
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blinkleERKNS_8AXObjectES2_(%"class.blink::AXObject"* dereferenceable(120), %"class.blink::AXObject"* dereferenceable(120)) local_unnamed_addr #2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %6 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %5, align 8
  %7 = icmp eq %"class.blink::AXObjectCacheImpl"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %1, i64 0, i32 14, i32 0, i32 0
  %10 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %9, align 8
  %11 = icmp ne %"class.blink::AXObjectCacheImpl"* %10, null
  %12 = icmp eq %"class.blink::AXObject"* %0, %1
  %13 = and i1 %12, %11
  br i1 %13, label %27, label %14

14:                                               ; preds = %8
  %15 = icmp eq %"class.blink::AXObjectCacheImpl"* %10, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %14
  %17 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #22
  store i32 -1431655766, i32* %3, align 4
  %18 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #22
  store i32 -1431655766, i32* %4, align 4
  %19 = call %"class.blink::AXObject"* @_ZN5blink8AXObject20LowestCommonAncestorERKS0_S2_PiS3_(%"class.blink::AXObject"* dereferenceable(120) %0, %"class.blink::AXObject"* dereferenceable(120) %1, i32* nonnull %3, i32* nonnull %4) #22
  %20 = icmp eq %"class.blink::AXObject"* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = load i32, i32* %3, align 4
  %23 = load i32, i32* %4, align 4
  %24 = icmp slt i32 %22, %23
  br label %25

25:                                               ; preds = %21, %16
  %26 = phi i1 [ %24, %21 ], [ false, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #22
  br label %27

27:                                               ; preds = %2, %25, %14, %8
  %28 = phi i1 [ true, %8 ], [ %26, %25 ], [ false, %14 ], [ false, %2 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blinkgtERKNS_8AXObjectES2_(%"class.blink::AXObject"* dereferenceable(120), %"class.blink::AXObject"* dereferenceable(120)) local_unnamed_addr #2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %6 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %5, align 8
  %7 = icmp eq %"class.blink::AXObjectCacheImpl"* %6, null
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %1, i64 0, i32 14, i32 0, i32 0
  %10 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %9, align 8
  %11 = icmp eq %"class.blink::AXObjectCacheImpl"* %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %8
  %13 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #22
  store i32 -1431655766, i32* %3, align 4
  %14 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #22
  store i32 -1431655766, i32* %4, align 4
  %15 = call %"class.blink::AXObject"* @_ZN5blink8AXObject20LowestCommonAncestorERKS0_S2_PiS3_(%"class.blink::AXObject"* dereferenceable(120) %0, %"class.blink::AXObject"* dereferenceable(120) %1, i32* nonnull %3, i32* nonnull %4)
  %16 = icmp eq %"class.blink::AXObject"* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %12
  %18 = load i32, i32* %3, align 4
  %19 = load i32, i32* %4, align 4
  %20 = icmp sgt i32 %18, %19
  br label %21

21:                                               ; preds = %12, %17
  %22 = phi i1 [ %20, %17 ], [ false, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #22
  br label %23

23:                                               ; preds = %2, %8, %21
  %24 = phi i1 [ %22, %21 ], [ false, %8 ], [ false, %2 ]
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blinkgeERKNS_8AXObjectES2_(%"class.blink::AXObject"* dereferenceable(120), %"class.blink::AXObject"* dereferenceable(120)) local_unnamed_addr #2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  %6 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %5, align 8
  %7 = icmp eq %"class.blink::AXObjectCacheImpl"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %1, i64 0, i32 14, i32 0, i32 0
  %10 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %9, align 8
  %11 = icmp ne %"class.blink::AXObjectCacheImpl"* %10, null
  %12 = icmp eq %"class.blink::AXObject"* %0, %1
  %13 = and i1 %12, %11
  br i1 %13, label %27, label %14

14:                                               ; preds = %8
  %15 = icmp eq %"class.blink::AXObjectCacheImpl"* %10, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %14
  %17 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #22
  store i32 -1431655766, i32* %3, align 4
  %18 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #22
  store i32 -1431655766, i32* %4, align 4
  %19 = call %"class.blink::AXObject"* @_ZN5blink8AXObject20LowestCommonAncestorERKS0_S2_PiS3_(%"class.blink::AXObject"* dereferenceable(120) %0, %"class.blink::AXObject"* dereferenceable(120) %1, i32* nonnull %3, i32* nonnull %4) #22
  %20 = icmp eq %"class.blink::AXObject"* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = load i32, i32* %3, align 4
  %23 = load i32, i32* %4, align 4
  %24 = icmp sgt i32 %22, %23
  br label %25

25:                                               ; preds = %21, %16
  %26 = phi i1 [ %24, %21 ], [ false, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #22
  br label %27

27:                                               ; preds = %2, %25, %14, %8
  %28 = phi i1 [ true, %8 ], [ %26, %25 ], [ false, %14 ], [ false, %2 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEEPKNS_8AXObjectE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.blink::AXObject"*) local_unnamed_addr #2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = icmp eq %"class.blink::AXObject"* %1, null
  br i1 %5, label %44, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #22
  %8 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #22
  %9 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8AXObject8ToStringEbb(%"class.blink::AXObject"* nonnull %1, i1 zeroext true, i1 zeroext false)
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* nonnull %4, i32 0) #22
  %11 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %13 to i64
  %20 = select i1 %14, i8* %16, i8* %7
  %21 = select i1 %14, i64 %18, i64 %19
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %20, i64 %21) #22
  %23 = load i8, i8* %12, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %6
  %26 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %26) #23
  br label %27

27:                                               ; preds = %6, %25
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #22
  br label %43

43:                                               ; preds = %27, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #22
  br label %46

44:                                               ; preds = %2
  %45 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.40, i64 0, i64 0), i64 18) #22
  br label %46

46:                                               ; preds = %44, %43
  %47 = phi %"class.std::__1::basic_ostream"* [ %22, %43 ], [ %45, %44 ]
  ret %"class.std::__1::basic_ostream"* %47
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_8AXObjectE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.blink::AXObject"* dereferenceable(120)) local_unnamed_addr #2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #22
  %6 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #22
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8AXObject8ToStringEbb(%"class.blink::AXObject"* %1, i1 zeroext true, i1 zeroext false)
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* nonnull %4, i32 0) #22
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %11 to i64
  %18 = select i1 %12, i8* %14, i8* %5
  %19 = select i1 %12, i64 %16, i64 %17
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %18, i64 %19) #22
  %21 = load i8, i8* %10, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %2
  %24 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %24) #23
  br label %25

25:                                               ; preds = %2, %23
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #22
  br label %41

41:                                               ; preds = %25, %37, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #22
  ret %"class.std::__1::basic_ostream"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8AXObject5TraceEPNS_7VisitorE(%"class.blink::AXObject"*, %"class.blink::Visitor"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::HeapVector.3084"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::HeapVector.3084"* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #22
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #22
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 2
  %20 = bitcast %"class.blink::Member.3082"* %19 to i64*
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %18
  %24 = inttoptr i64 %21 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #22
  br label %29

29:                                               ; preds = %18, %23
  %30 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 10
  %31 = bitcast %"class.blink::Member.3082"* %30 to i64*
  %32 = load atomic i64, i64* %31 monotonic, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = inttoptr i64 %32 to i8*
  %36 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, i64 5
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8* nonnull %35, i8* nonnull %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #22
  br label %40

40:                                               ; preds = %29, %34
  %41 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14
  %42 = bitcast %"class.blink::Member.3091"* %41 to i64*
  %43 = load atomic i64, i64* %42 monotonic, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %51, label %45

45:                                               ; preds = %40
  %46 = inttoptr i64 %43 to i8*
  %47 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %48, i64 5
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %49, align 8
  tail call void %50(%"class.blink::Visitor"* %1, i8* nonnull %46, i8* nonnull %46, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17AXObjectCacheImplEE5TraceEPNS_7VisitorEPKv) #22
  br label %51

51:                                               ; preds = %40, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject29ComputeAccessibilityIsIgnoredEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.3453"*) unnamed_addr #2 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, i32, i32* dereferenceable(4), %"class.blink::HeapVector.3084"*) unnamed_addr #2 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_17DescriptionSourceELj0EEEPNS6_INS_6MemberINS_23NameSourceRelatedObjectEEELj0EEE(%"class.blink::AXObject"*, i32, i32* dereferenceable(4), %"class.blink::HeapVector.3845"*, %"class.blink::HeapVector.3727"*) unnamed_addr #2 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject11PlaceholderEN2ax5mojom8NameFromE(%"class.blink::AXObject"*, i32) unnamed_addr #2 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject5TitleEN2ax5mojom8NameFromE(%"class.blink::AXObject"*, i32) unnamed_addr #2 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject15TextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSG_INS_10NameSourceELj0EEE(%"class.blink::AXObject"*, i1 zeroext, i1 zeroext, %"class.blink::HeapHashSet.3721"* dereferenceable(24), i32* dereferenceable(4), %"class.blink::HeapVector.3727"*, %"class.blink::HeapVector.3738"*) unnamed_addr #2 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject19TextFromDescendantsERNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEb(%"class.blink::AXObject"*, %"class.blink::HeapHashSet.3721"* dereferenceable(24), i1 zeroext) unnamed_addr #2 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject9AccessKeyEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject15BackgroundColorEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject8GetColorEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret i32 -16777216
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject10ColorValueEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject24CanvasHasFallbackContentEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject18ComputedFontFamilyEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject26FontFamilyForSerializationEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK5blink8AXObject8FontSizeEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret float 0.000000e+00
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK5blink8AXObject10FontWeightEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret float 0.000000e+00
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject12HeadingLevelEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject17HierarchicalLevelEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject12ImageDataUrlERKNS_7IntSizeE(%"class.blink::AXObject"*, %"class.blink::IntSize"* dereferenceable(8)) unnamed_addr #2 comdat align 2 {
  %3 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #22
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #22
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  ret %"class.WTF::StringImpl"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject16InPageLinkTargetEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret %"class.blink::AXObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject12GetListStyleEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject12GetTextAlignEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject16GetTextDirectionEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK5blink8AXObject13GetTextIndentEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret float 0.000000e+00
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject15GetTextPositionEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8AXObject34GetTextStyleAndTextDecorationStyleEPiPN2ax5mojom19TextDecorationStyleES5_S5_(%"class.blink::AXObject"*, i32*, i32*, i32*, i32*) unnamed_addr #2 comdat align 2 {
  store i32 0, i32* %1, align 4
  store i32 0, i32* %2, align 4
  store i32 0, i32* %3, align 4
  store i32 0, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8AXObject19RadioButtonsInGroupEv(%"class.blink::HeapVector.3084"* noalias sret, %"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  %3 = bitcast %"class.blink::HeapVector.3084"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8AXObject3UrlEv(%"class.blink::KURL"* noalias sret, %"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %0) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject12ChooserPopupEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret %"class.blink::AXObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject19GetAriaCurrentStateEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject15GetInvalidStateEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject16AriaInvalidValueEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject13ValueForRangeEPf(%"class.blink::AXObject"*, float*) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject16MaxValueForRangeEPf(%"class.blink::AXObject"*, float*) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject16MinValueForRangeEPf(%"class.blink::AXObject"*, float*) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject17StepValueForRangeEPf(%"class.blink::AXObject"*, float*) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AXObject"* @_ZN5blink8AXObject16ActiveDescendantEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret %"class.blink::AXObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject12AutoCompleteEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8AXObject16AriaOwnsElementsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.3084"* dereferenceable(16)) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8AXObject23AriaDescribedbyElementsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.3084"* dereferenceable(16)) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject12ErrorMessageEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret %"class.blink::AXObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject20SupportsARIADraggingEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8AXObject11DropeffectsERN3WTF6VectorIN2ax5mojom10DropeffectELj0ENS1_18PartitionAllocatorEEE(%"class.blink::AXObject"*, %"class.WTF::Vector.3846"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject8PosInSetEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject7SetSizeEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject20AccessibilityHitTestERKNS_8IntPointE(%"class.blink::AXObject"*, %"class.blink::IntPoint"* dereferenceable(8)) unnamed_addr #2 comdat align 2 {
  ret %"class.blink::AXObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject15CanHaveChildrenEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8AXObject15SelectedOptionsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.3084"* dereferenceable(16)) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK5blink8AXObject24EstimatedLoadingProgressEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret double 0.000000e+00
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Element"* @_ZNK5blink8AXObject13AnchorElementEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret %"class.blink::Element"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Element"* @_ZNK5blink8AXObject13ActionElementEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret %"class.blink::Element"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject12HasAttributeERKNS_13QualifiedNameE(%"class.blink::AXObject"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject12GetAttributeERKNS_13QualifiedNameE(%"class.blink::AXObject"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #2 comdat align 2 {
  %3 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  ret %"class.WTF::AtomicString"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject11IsDataTableEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject16GetSortDirectionEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject12HeaderObjectEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret %"class.blink::AXObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScrollableArea"* @_ZNK5blink8AXObject29GetScrollableAreaIfScrollableEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret %"class.blink::ScrollableArea"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8AXObject15ChildrenChangedEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8AXObject29HandleActiveDescendantChangedEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8AXObject26HandleAutofillStateChangedENS_18WebAXAutofillStateE(%"class.blink::AXObject"*, i32) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8AXObject25HandleAriaExpandedChangedEv(%"class.blink::AXObject"*) unnamed_addr #2 comdat align 2 {
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #6

declare %"class.blink::HTMLImageElement"* @_ZN5blink14HTMLMapElement12ImageElementEv(%"class.blink::HTMLMapElement"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AXObject"**
  %4 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %3, align 8
  %5 = icmp eq %"class.blink::AXObject"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #22
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #22
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %4, i64 -1, i32 14
  %20 = bitcast %"class.blink::Member.3091"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #22
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !3

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #22
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #6

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #6

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #6

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #6

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #6

declare void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"*) local_unnamed_addr #6

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17AXObjectCacheImplELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::AXObjectCacheImpl"**
  %5 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #22
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #22
  %7 = icmp eq %"class.blink::AXObjectCacheImpl"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::AXObjectCacheImpl"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17AXObjectCacheImplEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #22
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #22
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17AXObjectCacheImplEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AXObjectCacheImpl"*
  %4 = bitcast i8* %1 to void (%"class.blink::AXObjectCacheImpl"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::AXObjectCacheImpl"*, %"class.blink::Visitor"*)**, void (%"class.blink::AXObjectCacheImpl"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::AXObjectCacheImpl"*, %"class.blink::Visitor"*)*, void (%"class.blink::AXObjectCacheImpl"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::AXObjectCacheImpl"*, %"class.blink::Visitor"*)*, void (%"class.blink::AXObjectCacheImpl"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::AXObjectCacheImpl"* %3, %"class.blink::Visitor"* %0) #22
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #8

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #6

declare %"class.blink::HTMLDialogElement"* @_ZNK5blink8Document17ActiveModalDialogEv(%"class.blink::Document"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK5blink7Element22HasElementFlagInternalENS_12ElementFlagsE(%"class.blink::Element"*, i32) local_unnamed_addr #6

declare %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #6

declare zeroext i1 @_ZNK5blink16EventListenerMap8ContainsERKN3WTF12AtomicStringE(%"class.blink::EventListenerMap"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #6

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #6

declare zeroext i1 @_ZN5blink20DisplayLockUtilities32IsInUnlockedOrActivatableSubtreeERKNS_4NodeENS_27DisplayLockActivationReasonE(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #22
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !3

22:                                               ; preds = %15
  %23 = bitcast %union.anon.3194* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.3194* %16 to %"class.WTF::Vector.3200"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.3200"* %30, i16* nonnull dereferenceable(2) %3) #22
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #22
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !3

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.3195", %"class.WTF::Vector.3195"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.3195"* %41, i8* nonnull dereferenceable(1) %4) #22
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.3200"*, i16* dereferenceable(2)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3200", %"class.WTF::Vector.3200"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3200", %"class.WTF::Vector.3200"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3200"* %0, i32 %5) #22
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3200"* %0, i32 %5) #22
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3200"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.3200", %"class.WTF::Vector.3200"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #22
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #22
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.41, i64 0, i64 0), i8* %15, i8* %16) #22
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.42, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #22
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #22
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #22
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !19

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.3200", %"class.WTF::Vector.3200"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #22
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #22
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.3200"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.3200", %"class.WTF::Vector.3200"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.3200"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3200"* %0, i32 %27) #22
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #6

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3200"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3200", %"class.WTF::Vector.3200"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.3200", %"class.WTF::Vector.3200"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.3200"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.3200", %"class.WTF::Vector.3200"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.3200", %"class.WTF::Vector.3200"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.3200", %"class.WTF::Vector.3200"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.3200"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.3200", %"class.WTF::Vector.3200"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #22
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.3201"* %19, i16* nonnull %6) #22
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #22
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #22
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.3200", %"class.WTF::Vector.3200"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !19

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.3200", %"class.WTF::Vector.3200"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #22
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.3200", %"class.WTF::Vector.3200"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !19

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.3200", %"class.WTF::Vector.3200"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.3201"* %53, i16* %48) #22
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.3200"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.3200", %"class.WTF::Vector.3200"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #22
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #22
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.44, i64 0, i64 0), i8* %11, i8* %12) #22
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.45, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #22
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #22
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #22
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #22
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #6

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.3201"*, i16*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #22
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.3195"*, i8* dereferenceable(1)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3195", %"class.WTF::Vector.3195"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3195", %"class.WTF::Vector.3195"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3195"* %0, i32 %5) #22
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3195"* %0, i32 %5) #22
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3195"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.3195", %"class.WTF::Vector.3195"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #22
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #22
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.41, i64 0, i64 0), i8* %15, i8* %16) #22
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.42, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #22
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #22
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #22
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !19

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.3195", %"class.WTF::Vector.3195"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #22
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #22
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.3195"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.3195", %"class.WTF::Vector.3195"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.3195"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3195"* %0, i32 %27) #22
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3195"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3195", %"class.WTF::Vector.3195"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.3195", %"class.WTF::Vector.3195"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.3195"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.3195", %"class.WTF::Vector.3195"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.3195", %"class.WTF::Vector.3195"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.3195", %"class.WTF::Vector.3195"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.3195"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.3195", %"class.WTF::Vector.3195"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #22
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.3196"* %18, i8* nonnull %6) #22
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #22
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #22
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.3195", %"class.WTF::Vector.3195"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !19

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.3195", %"class.WTF::Vector.3195"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #22
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.3195", %"class.WTF::Vector.3195"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !19

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.3195", %"class.WTF::Vector.3195"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.3196"* %46, i8* %42) #22
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.3195"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.3195", %"class.WTF::Vector.3195"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #22
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #22
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.44, i64 0, i64 0), i8* %11, i8* %12) #22
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.45, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #22
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #22
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #22
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #22
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.3196"*, i8*) local_unnamed_addr #13 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #22
  ret void
}

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #6

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #14

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.3725"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %10, %6 ], [ %1, %2 ]
  %8 = phi i32 [ %9, %6 ], [ %1, %2 ]
  %9 = or i32 %8, %7
  %10 = lshr i32 %7, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %6

12:                                               ; preds = %6
  %13 = shl i32 %9, 1
  %14 = add i32 %13, 2
  %15 = icmp ugt i32 %14, 8
  %16 = select i1 %15, i32 %14, i32 8
  br label %17

17:                                               ; preds = %12, %2
  %18 = phi i32 [ 8, %2 ], [ %16, %12 ]
  %19 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp ugt i32 %18, %20
  br i1 %21, label %22, label %40

22:                                               ; preds = %17
  %23 = icmp slt i32 %18, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %22
  %25 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #22
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.46, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.47, i64 0, i64 0)) #22
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #22
  %27 = load i32, i32* %19, align 8
  br label %28

28:                                               ; preds = %22, %24
  %29 = phi i32 [ %20, %22 ], [ %27, %24 ]
  %30 = icmp ult i32 %29, %18
  br i1 %30, label %31, label %35

31:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22
  store i8 -86, i8* %3, align 1
  %32 = call %"class.blink::Member.3459"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb(%"class.WTF::HashTable.3725"* %0, i32 %18, %"class.blink::Member.3459"* null, i8* nonnull dereferenceable(1) %3) #22
  %33 = load i8, i8* %3, align 1, !range !2
  %34 = icmp eq i8 %33, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22
  br i1 %34, label %35, label %40

35:                                               ; preds = %31, %28
  %36 = zext i32 %18 to i64
  %37 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_8AXObjectEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %36) #22
  %38 = bitcast %"class.blink::HeapHashTableBacking"* %37 to %"class.blink::Member.3459"*
  %39 = call %"class.blink::Member.3459"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.3725"* %0, %"class.blink::Member.3459"* %38, i32 %18, %"class.blink::Member.3459"* null) #22
  br label %40

40:                                               ; preds = %35, %31, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.3459"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb(%"class.WTF::HashTable.3725"*, i32, %"class.blink::Member.3459"*, i8* dereferenceable(1)) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #22
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #22
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #22
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.46, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.43, i64 0, i64 0)) #22
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #22
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %31, align 8
  %33 = icmp eq %"class.blink::Member.3459"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.3459"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #22
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_8AXObjectEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #22
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member.3459"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.3459"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.3459"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.3459"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.3459"* %61, %"class.blink::Member.3459"* %55
  %63 = bitcast %"class.blink::Member.3459"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.3459"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.3459"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.3725"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #22
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.3459"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.3459"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.3725"* %0, %"class.blink::Member.3459"* %42, i32 %1, %"class.blink::Member.3459"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.3459"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.3459"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.3459"* %87, %"class.blink::Member.3459"* %82
  %89 = bitcast %"class.blink::Member.3459"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.3459"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.3459"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.3459"* %99, %"class.blink::Member.3459"* %88
  %101 = bitcast %"class.blink::Member.3459"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.3459"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.3459"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.3459"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.3459"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.3725"*, %"class.blink::Member.3459"*, i32, %"class.blink::Member.3459"*) local_unnamed_addr #2 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.3459"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.3459"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.3459"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #22
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.3725"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.3459"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #22
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.3459"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.3459"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #22
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.3459"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.3459"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.3459"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.3459"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.3459"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %70, align 8
  %72 = icmp eq %"class.blink::AXObject"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::AXObject"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.3459"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.3459"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.3459"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.3459"* %93, null
  %95 = ptrtoint %"class.blink::Member.3459"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::AXObject"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::AXObject"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::AXObject"* %99, inttoptr (i64 -1 to %"class.blink::AXObject"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.3459"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %113, align 8
  %115 = icmp eq %"class.blink::AXObject"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.3459"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.3459"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.3459"* %118, %"class.blink::Member.3459"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.3459"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.3459"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_8AXObjectEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #22
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #22
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i64 0, i64 0), i8* %11, i8* %12) #22
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.49, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #22
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #22
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #22
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_8AXObjectEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_8AXObjectEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #22
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #22
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_8AXObjectEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_8AXObjectEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_8AXObjectEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #22
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([366 x i8], [366 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberIKNS1_8AXObjectEEES7_NS_17IdentityExtractorENS_10MemberHashIS6_EENS_10HashTraitsIS7_EESC_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #9 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #22
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #22
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #22
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #22
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.50, i64 0, i64 0), i8* %21, i8* %22) #22
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #22
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.51, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #22
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #22
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #22
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #22
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_8AXObjectEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.3459"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #22
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.3459"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #22
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #22
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_8AXObjectEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AXObject"*
  %4 = bitcast i8* %1 to void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)**, void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)*, void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)*, void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::AXObject"* %3, %"class.blink::Visitor"* %0) #22
  ret void
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #6

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.3459"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKS5_SH_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.3725"*, %"class.blink::Member.3459"* dereferenceable(8), %"class.blink::Member.3459"* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %4, align 8
  %6 = icmp eq %"class.blink::Member.3459"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.3459"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.3725"* %0, %"class.blink::Member.3459"* null)
  %9 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.3459"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Member.3459"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %40, align 8
  %42 = icmp eq %"class.blink::AXObject"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::AXObject"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::AXObject"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.3459"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.3459"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::AXObject"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::AXObject"* %59, inttoptr (i64 -1 to %"class.blink::AXObject"*)
  %67 = select i1 %66, %"class.blink::Member.3459"* %60, %"class.blink::Member.3459"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %73, align 8
  %75 = icmp eq %"class.blink::AXObject"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.3459"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.3459"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #22
  %80 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.3459"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = bitcast %"class.blink::Member.3459"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::Member.3459"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = inttoptr i64 %89 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #22
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.3459"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #22
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.3459"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.3725"* %0, %"class.blink::Member.3459"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.3459"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.3459"*, i8 } undef, %"class.blink::Member.3459"* %117, 0
  %119 = insertvalue { %"class.blink::Member.3459"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.3459"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.3459"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.3725"*, %"class.blink::Member.3459"*) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #22
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #22
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0), i8* %23, i8* %24) #22
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.46, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #22
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #22
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #22
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.3459"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb(%"class.WTF::HashTable.3725"* %0, i32 %35, %"class.blink::Member.3459"* %1, i8* nonnull dereferenceable(1) %4) #22
  %37 = load i8, i8* %4, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_8AXObjectEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #22
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member.3459"*
  %44 = call %"class.blink::Member.3459"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.3725"* %0, %"class.blink::Member.3459"* %43, i32 %40, %"class.blink::Member.3459"* %1) #22
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.3459"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.3459"* %46
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #6

declare void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"*, i16 zeroext, i1 zeroext, %"class.WTF::Vector.630"* dereferenceable(16)) local_unnamed_addr #6

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13QualifiedName18LocalNameUpperSlowEv(%"class.blink::QualifiedName"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #14

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #16

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #6

declare i64 @_ZNK5blink19EmbeddedContentView8LocationEv(%"class.blink::EmbeddedContentView"*) local_unnamed_addr #6

declare { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"*, i32, i32, i32) local_unnamed_addr #6

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #6

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #14

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #6

declare %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8*) local_unnamed_addr #6

declare void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, i32) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #22
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #22
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #22
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #2 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #2 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #22
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #6

declare void @_ZN5blink12FocusOptionsC1Ev(%"class.blink::FocusOptions"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #22
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #22
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #22
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #2 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink20ScrollIntoViewParamsD1Ev(%"class.blink::mojom::blink::ScrollIntoViewParams"*) unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #17

declare { i64, i64 } @_ZNK5blink12LayoutObject19LocalToAncestorRectERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #6

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"struct.WTF::KeyValuePair.3829"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N2ax5mojom4RoleEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EEN5blink12_GLOBAL__N_114RoleHashTraitsEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.3826"* nocapture, %"struct.WTF::KeyValuePair.3829"* readnone) unnamed_addr #2 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::HashTable.3826", %"class.WTF::HashTable.3826"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %33, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::HashTable.3826", %"class.WTF::HashTable.3826"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = mul i32 %13, 6
  %15 = shl i32 %9, 1
  %16 = icmp ult i32 %14, %15
  br i1 %16, label %33, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #22
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = icmp ugt i32 %15, %9
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* null, i8** %19, align 8
  br label %32

23:                                               ; preds = %17
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #22
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0), i8* %24, i8* %25) #22
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* %27, i8** %19, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.46, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %6) #22
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #22
  br label %32

32:                                               ; preds = %22, %23, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #22
  br label %33

33:                                               ; preds = %11, %2, %32
  %34 = phi i32 [ %15, %32 ], [ 8, %2 ], [ %9, %11 ]
  %35 = zext i32 %34 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %36, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN2ax5mojom4RoleEEEEEPKcv, i64 0, i64 0)) #22
  call void @llvm.memset.p0i8.i64(i8* align 1 %37, i8 0, i64 %36, i1 false) #22
  %38 = bitcast i8* %37 to %"struct.WTF::KeyValuePair.3829"*
  %39 = ptrtoint i8* %37 to i64
  %40 = load i32, i32* %8, align 8
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::HashTable.3826", %"class.WTF::HashTable.3826"* %0, i64 0, i32 0
  br i1 %41, label %43, label %46

43:                                               ; preds = %33
  %44 = bitcast %"class.WTF::HashTable.3826"* %0 to i64*
  %45 = load i64, i64* %44, align 8
  br label %62

46:                                               ; preds = %33
  %47 = add i32 %34, -1
  %48 = zext i32 %47 to i64
  %49 = bitcast %"class.WTF::StringView"* %4 to i8*
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %52 = bitcast %"class.WTF::StringView"* %5 to i8*
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %55 = bitcast i8** %54 to %"class.WTF::StringImpl"**
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %57 = bitcast %"class.WTF::StringView"* %4 to i8**
  %58 = load %"struct.WTF::KeyValuePair.3829"*, %"struct.WTF::KeyValuePair.3829"** %42, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair.3829"* %58 to i64
  br label %99

60:                                               ; preds = %203
  %61 = bitcast %"class.WTF::HashTable.3826"* %0 to i64*
  br label %62

62:                                               ; preds = %60, %43
  %63 = phi i64* [ %44, %43 ], [ %61, %60 ]
  %64 = phi i64 [ %45, %43 ], [ %204, %60 ]
  %65 = phi %"struct.WTF::KeyValuePair.3829"* [ null, %43 ], [ %207, %60 ]
  %66 = phi i32 [ 0, %43 ], [ %205, %60 ]
  store atomic i64 %39, i64* %63 monotonic, align 8
  store i32 %34, i32* %8, align 8
  %67 = inttoptr i64 %64 to %"struct.WTF::KeyValuePair.3829"*
  %68 = icmp eq i64 %64, 0
  br i1 %68, label %210, label %69

69:                                               ; preds = %62
  %70 = icmp eq i32 %66, 0
  br i1 %70, label %97, label %71

71:                                               ; preds = %69
  %72 = zext i32 %66 to i64
  br label %73

73:                                               ; preds = %94, %71
  %74 = phi i64 [ 0, %71 ], [ %95, %94 ]
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.3829", %"struct.WTF::KeyValuePair.3829"* %67, i64 %74
  %76 = bitcast %"struct.WTF::KeyValuePair.3829"* %75 to i8**
  %77 = load i8*, i8** %76, align 8
  %78 = bitcast i8* %77 to %"class.WTF::StringImpl"*
  %79 = ptrtoint i8* %77 to i64
  switch i64 %79, label %80 [
    i64 -1, label %94
    i64 0, label %94
  ]

80:                                               ; preds = %73
  %81 = getelementptr inbounds i8, i8* %77, i64 8
  %82 = bitcast i8* %81 to i32*
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = bitcast i8* %77 to i32*
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %80
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %80
  %91 = phi i32 [ %89, %88 ], [ %87, %80 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #22
  br label %94

94:                                               ; preds = %93, %90, %73, %73
  %95 = add nuw nsw i64 %74, 1
  %96 = icmp eq i64 %95, %72
  br i1 %96, label %97, label %73

97:                                               ; preds = %94, %69
  %98 = inttoptr i64 %64 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %98) #22
  br label %210

99:                                               ; preds = %203, %46
  %100 = phi i64 [ %59, %46 ], [ %204, %203 ]
  %101 = phi i32 [ %40, %46 ], [ %205, %203 ]
  %102 = phi %"struct.WTF::KeyValuePair.3829"* [ %58, %46 ], [ %206, %203 ]
  %103 = phi %"struct.WTF::KeyValuePair.3829"* [ null, %46 ], [ %207, %203 ]
  %104 = phi i32 [ 0, %46 ], [ %208, %203 ]
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.3829", %"struct.WTF::KeyValuePair.3829"* %102, i64 %105
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.3829", %"struct.WTF::KeyValuePair.3829"* %106, i64 0, i32 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = ptrtoint %"class.WTF::StringImpl"* %108 to i64
  switch i64 %109, label %110 [
    i64 -1, label %203
    i64 0, label %203
  ]

110:                                              ; preds = %99
  %111 = call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %108) #22
  %112 = and i32 %111, %47
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.3829", %"struct.WTF::KeyValuePair.3829"* %38, i64 %113
  %115 = ptrtoint %"struct.WTF::KeyValuePair.3829"* %114 to i64
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.3829", %"struct.WTF::KeyValuePair.3829"* %114, i64 0, i32 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %135, label %119

119:                                              ; preds = %110
  %120 = xor i32 %111, -1
  %121 = lshr i32 %111, 23
  %122 = add i32 %121, %120
  %123 = shl i32 %122, 12
  %124 = xor i32 %123, %122
  %125 = lshr i32 %124, 7
  %126 = xor i32 %125, %124
  %127 = shl i32 %126, 2
  %128 = xor i32 %127, %126
  %129 = lshr i32 %128, 20
  %130 = xor i32 %129, %128
  %131 = or i32 %130, 1
  %132 = zext i32 %131 to i64
  br label %141

133:                                              ; preds = %160
  %134 = ptrtoint %"struct.WTF::KeyValuePair.3829"* %166 to i64
  br label %135

135:                                              ; preds = %133, %110
  %136 = phi i64 [ %115, %110 ], [ %134, %133 ]
  %137 = phi %"struct.WTF::KeyValuePair.3829"* [ null, %110 ], [ %161, %133 ]
  %138 = icmp eq %"struct.WTF::KeyValuePair.3829"* %137, null
  %139 = ptrtoint %"struct.WTF::KeyValuePair.3829"* %137 to i64
  %140 = select i1 %138, i64 %136, i64 %139
  br label %171

141:                                              ; preds = %160, %119
  %142 = phi %"struct.WTF::KeyValuePair.3829"* [ null, %119 ], [ %161, %160 ]
  %143 = phi i64 [ %115, %119 ], [ %167, %160 ]
  %144 = phi %"struct.WTF::KeyValuePair.3829"* [ %114, %119 ], [ %166, %160 ]
  %145 = phi i64 [ %113, %119 ], [ %165, %160 ]
  %146 = phi i64 [ 0, %119 ], [ %163, %160 ]
  %147 = bitcast %"struct.WTF::KeyValuePair.3829"* %144 to i8**
  %148 = load i8*, i8** %147, align 8
  %149 = icmp eq i8* %148, inttoptr (i64 -1 to i8*)
  br i1 %149, label %160, label %150

150:                                              ; preds = %141
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #22
  store i8* %148, i8** %57, align 8
  %152 = getelementptr inbounds i8, i8* %148, i64 12
  store i8* %152, i8** %50, align 8
  %153 = getelementptr inbounds i8, i8* %148, i64 4
  %154 = bitcast i8* %153 to i32*
  %155 = load i32, i32* %154, align 4
  store i32 %155, i32* %51, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #22
  store %"class.WTF::StringImpl"* %151, %"class.WTF::StringImpl"** %53, align 8
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 1
  store %"class.WTF::StringImpl"* %156, %"class.WTF::StringImpl"** %55, align 8
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 1
  %158 = load i32, i32* %157, align 4
  store i32 %158, i32* %56, align 8
  %159 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #22
  br i1 %159, label %171, label %160

160:                                              ; preds = %150, %141
  %161 = phi %"struct.WTF::KeyValuePair.3829"* [ %142, %150 ], [ %144, %141 ]
  %162 = icmp eq i64 %146, 0
  %163 = select i1 %162, i64 %132, i64 %146
  %164 = add i64 %163, %145
  %165 = and i64 %164, %48
  %166 = getelementptr inbounds %"struct.WTF::KeyValuePair.3829", %"struct.WTF::KeyValuePair.3829"* %38, i64 %165
  %167 = ptrtoint %"struct.WTF::KeyValuePair.3829"* %166 to i64
  %168 = getelementptr inbounds %"struct.WTF::KeyValuePair.3829", %"struct.WTF::KeyValuePair.3829"* %166, i64 0, i32 0, i32 0, i32 0
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %168, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %169, null
  br i1 %170, label %133, label %141

171:                                              ; preds = %150, %135
  %172 = phi i64 [ %140, %135 ], [ %143, %150 ]
  %173 = inttoptr i64 %172 to %"struct.WTF::KeyValuePair.3829"*
  %174 = getelementptr inbounds %"struct.WTF::KeyValuePair.3829", %"struct.WTF::KeyValuePair.3829"* %173, i64 0, i32 0, i32 0, i32 0
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %175, null
  br i1 %176, label %190, label %177

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  br i1 %181, label %184, label %186

184:                                              ; preds = %177
  %185 = add i32 %183, -1
  store i32 %185, i32* %182, align 4
  br label %186

186:                                              ; preds = %184, %177
  %187 = phi i32 [ %185, %184 ], [ %183, %177 ]
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %186
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %175) #22
  br label %190

190:                                              ; preds = %189, %186, %171
  %191 = bitcast %"struct.WTF::KeyValuePair.3829"* %106 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = inttoptr i64 %172 to i64*
  store i64 %192, i64* %193, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %107, align 8
  %194 = getelementptr inbounds %"struct.WTF::KeyValuePair.3829", %"struct.WTF::KeyValuePair.3829"* %173, i64 0, i32 1
  %195 = getelementptr inbounds %"struct.WTF::KeyValuePair.3829", %"struct.WTF::KeyValuePair.3829"* %102, i64 %105, i32 1
  %196 = load i32, i32* %195, align 8
  store i32 %196, i32* %194, align 8
  %197 = load %"struct.WTF::KeyValuePair.3829"*, %"struct.WTF::KeyValuePair.3829"** %42, align 8
  %198 = getelementptr inbounds %"struct.WTF::KeyValuePair.3829", %"struct.WTF::KeyValuePair.3829"* %197, i64 %105
  %199 = icmp eq %"struct.WTF::KeyValuePair.3829"* %198, %1
  %200 = select i1 %199, %"struct.WTF::KeyValuePair.3829"* %173, %"struct.WTF::KeyValuePair.3829"* %103
  %201 = load i32, i32* %8, align 8
  %202 = ptrtoint %"struct.WTF::KeyValuePair.3829"* %197 to i64
  br label %203

203:                                              ; preds = %190, %99, %99
  %204 = phi i64 [ %100, %99 ], [ %202, %190 ], [ %100, %99 ]
  %205 = phi i32 [ %101, %99 ], [ %201, %190 ], [ %101, %99 ]
  %206 = phi %"struct.WTF::KeyValuePair.3829"* [ %102, %99 ], [ %197, %190 ], [ %102, %99 ]
  %207 = phi %"struct.WTF::KeyValuePair.3829"* [ %103, %99 ], [ %200, %190 ], [ %103, %99 ]
  %208 = add i32 %104, 1
  %209 = icmp eq i32 %208, %205
  br i1 %209, label %60, label %99

210:                                              ; preds = %62, %97
  %211 = getelementptr inbounds %"class.WTF::HashTable.3826", %"class.WTF::HashTable.3826"* %0, i64 0, i32 3
  %212 = load i32, i32* %211, align 8
  %213 = and i32 %212, -2147483648
  store i32 %213, i32* %211, align 8
  ret %"struct.WTF::KeyValuePair.3829"* %65
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 1
  br i1 %6, label %77, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::StringImpl"* %7 to i8*
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = lshr i32 %11, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %48, label %16

16:                                               ; preds = %8
  %17 = add nsw i32 %14, -1
  %18 = zext i32 %17 to i64
  br label %19

19:                                               ; preds = %19, %16
  %20 = phi i32 [ %41, %19 ], [ -1640531527, %16 ]
  %21 = phi i32 [ %23, %19 ], [ %14, %16 ]
  %22 = phi i8* [ %42, %19 ], [ %9, %16 ]
  %23 = add nsw i32 %21, -1
  %24 = load i8, i8* %22, align 1
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds i8, i8* %22, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %27 to i32
  %34 = add i32 %20, %33
  %35 = shl i32 %34, 16
  %36 = zext i16 %32 to i32
  %37 = shl nuw nsw i32 %36, 11
  %38 = xor i32 %35, %34
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 11
  %41 = add i32 %40, %39
  %42 = getelementptr inbounds i8, i8* %22, i64 2
  %43 = icmp eq i32 %23, 0
  br i1 %43, label %44, label %19

44:                                               ; preds = %19
  %45 = shl nuw nsw i64 %18, 1
  %46 = add nuw nsw i64 %45, 2
  %47 = getelementptr i8, i8* %9, i64 %46
  br label %48

48:                                               ; preds = %44, %8
  %49 = phi i32 [ -1640531527, %8 ], [ %41, %44 ]
  %50 = phi i8* [ %9, %8 ], [ %47, %44 ]
  br i1 %13, label %62, label %51

51:                                               ; preds = %48
  %52 = load i8, i8* %50, align 1
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add i32 %49, %56
  %58 = shl i32 %57, 11
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 17
  %61 = add i32 %60, %59
  br label %62

62:                                               ; preds = %48, %51
  %63 = phi i32 [ %61, %51 ], [ %49, %48 ]
  %64 = shl i32 %63, 3
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 5
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 15
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 10
  %73 = xor i32 %72, %71
  %74 = and i32 %73, 16777215
  %75 = icmp eq i32 %74, 0
  %76 = select i1 %75, i32 8388608, i32 %74
  br label %112

77:                                               ; preds = %1
  %78 = bitcast %"class.WTF::StringImpl"* %7 to i16*
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = bitcast i64* %2 to %"class.WTF::StringHasher"*
  %82 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #22
  store i64 186919631157689, i64* %2, align 8
  %83 = bitcast i64* %2 to i32*
  %84 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 1
  call void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"* nonnull %81, i16* %78, i32 %80) #22
  %85 = load i32, i32* %83, align 8
  %86 = load i8, i8* %84, align 4, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %97, label %88

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 2
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = add i32 %85, %91
  %93 = shl i32 %92, 11
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 17
  %96 = add i32 %95, %94
  br label %97

97:                                               ; preds = %77, %88
  %98 = phi i32 [ %96, %88 ], [ %85, %77 ]
  %99 = shl i32 %98, 3
  %100 = xor i32 %99, %98
  %101 = lshr i32 %100, 5
  %102 = add i32 %101, %100
  %103 = shl i32 %102, 2
  %104 = xor i32 %103, %102
  %105 = lshr i32 %104, 15
  %106 = add i32 %105, %104
  %107 = shl i32 %106, 10
  %108 = xor i32 %107, %106
  %109 = and i32 %108, 16777215
  %110 = icmp eq i32 %109, 0
  %111 = select i1 %110, i32 8388608, i32 %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #22
  br label %112

112:                                              ; preds = %97, %62
  %113 = phi i32 [ %76, %62 ], [ %111, %97 ]
  ret i32 %113
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"*, i16*, i32) local_unnamed_addr #2 comdat align 2 {
  %4 = and i32 %2, 1
  %5 = icmp eq i32 %4, 0
  %6 = lshr i32 %2, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %33, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  br label %10

10:                                               ; preds = %8, %10
  %11 = phi i32 [ %6, %8 ], [ %13, %10 ]
  %12 = phi i16* [ %1, %8 ], [ %31, %10 ]
  %13 = add nsw i32 %11, -1
  %14 = load i16, i16* %12, align 2
  %15 = zext i16 %14 to i32
  %16 = tail call i32 @u_foldCase_69(i32 %15, i32 0) #22
  %17 = getelementptr inbounds i16, i16* %12, i64 1
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = tail call i32 @u_foldCase_69(i32 %19, i32 0) #22
  %21 = and i32 %16, 65535
  %22 = load i32, i32* %9, align 4
  %23 = add i32 %22, %21
  %24 = shl i32 %23, 16
  %25 = shl i32 %20, 11
  %26 = and i32 %25, 134215680
  %27 = xor i32 %23, %26
  %28 = xor i32 %27, %24
  %29 = lshr i32 %28, 11
  %30 = add i32 %29, %28
  store i32 %30, i32* %9, align 4
  %31 = getelementptr inbounds i16, i16* %12, i64 2
  %32 = icmp eq i32 %13, 0
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %3
  %34 = phi i16* [ %1, %3 ], [ %31, %10 ]
  br i1 %5, label %59, label %35

35:                                               ; preds = %33
  %36 = load i16, i16* %34, align 2
  %37 = zext i16 %36 to i32
  %38 = tail call i32 @u_foldCase_69(i32 %37, i32 0) #22
  %39 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 1
  %40 = load i8, i8* %39, align 4, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %35
  store i8 0, i8* %39, align 4
  %43 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, %45
  %49 = shl i32 %48, 16
  %50 = shl i32 %38, 11
  %51 = and i32 %50, 134215680
  %52 = xor i32 %48, %51
  %53 = xor i32 %52, %49
  %54 = lshr i32 %53, 11
  %55 = add i32 %54, %53
  store i32 %55, i32* %46, align 4
  br label %59

56:                                               ; preds = %35
  %57 = trunc i32 %38 to i16
  %58 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  store i16 %57, i16* %58, align 2
  store i8 1, i8* %39, align 4
  br label %59

59:                                               ; preds = %56, %42, %33
  ret void
}

declare i32 @u_foldCase_69(i32, i32) local_unnamed_addr #6

declare zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE4FillIS2_EENSt3__19enable_ifIXntsrT_19kIsGarbageCollectedEvE4typeERKS1_j(%"class.WTF::Vector.284"*, %"class.WTF::AtomicString"* dereferenceable(8), i32) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %0, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp ugt i32 %5, %2
  br i1 %6, label %7, label %36

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %8, align 8
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 %10
  %12 = zext i32 %2 to i64
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 %12
  br label %14

14:                                               ; preds = %32, %7
  %15 = phi %"class.WTF::AtomicString"* [ %33, %32 ], [ %13, %7 ]
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #22
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 1
  %34 = icmp eq %"class.WTF::AtomicString"* %33, %11
  br i1 %34, label %35, label %14

35:                                               ; preds = %32
  store i32 %2, i32* %4, align 4
  br label %111

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %0, i64 0, i32 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp ult i32 %38, %2
  br i1 %39, label %40, label %109

40:                                               ; preds = %36
  %41 = icmp eq i32 %38, 0
  br i1 %41, label %76, label %42

42:                                               ; preds = %40
  %43 = icmp eq i32 %5, 0
  br i1 %43, label %71, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %0, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %45, align 8
  %47 = zext i32 %5 to i64
  %48 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %46, i64 %47
  br label %49

49:                                               ; preds = %67, %44
  %50 = phi %"class.WTF::AtomicString"* [ %68, %67 ], [ %46, %44 ]
  %51 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #22
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %50, i64 1
  %69 = icmp eq %"class.WTF::AtomicString"* %68, %48
  br i1 %69, label %70, label %49

70:                                               ; preds = %67
  store i32 0, i32* %4, align 4
  br label %71

71:                                               ; preds = %70, %42
  %72 = bitcast %"class.WTF::Vector.284"* %0 to i8**
  %73 = load i8*, i8** %72, align 8
  %74 = bitcast %"class.WTF::Vector.284"* %0 to i64*
  store atomic i64 0, i64* %74 monotonic, align 8
  store i32 0, i32* %37, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %73) #22
  %75 = load i32, i32* %37, align 8
  br label %76

76:                                               ; preds = %40, %71
  %77 = phi i32 [ 0, %40 ], [ %75, %71 ]
  %78 = icmp ult i32 %77, %2
  br i1 %78, label %79, label %109, !prof !19

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %0, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %80, align 8
  %82 = icmp eq %"class.WTF::AtomicString"* %81, null
  %83 = zext i32 %2 to i64
  %84 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm(i64 %83) #22
  %85 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %84, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #22
  br i1 %82, label %86, label %91

86:                                               ; preds = %79
  %87 = ptrtoint i8* %85 to i64
  %88 = bitcast %"class.WTF::Vector.284"* %0 to i64*
  store atomic i64 %87, i64* %88 monotonic, align 8
  %89 = lshr i64 %84, 3
  %90 = trunc i64 %89 to i32
  store i32 %90, i32* %37, align 8
  br label %109

91:                                               ; preds = %79
  %92 = lshr i64 %84, 3
  %93 = ptrtoint i8* %85 to i64
  %94 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %80, align 8
  %95 = icmp ne i8* %85, null
  %96 = icmp ne %"class.WTF::AtomicString"* %94, null
  %97 = and i1 %95, %96
  %98 = bitcast %"class.WTF::AtomicString"* %94 to i8*
  br i1 %97, label %99, label %105, !prof !19

99:                                               ; preds = %91
  %100 = load i32, i32* %4, align 4
  %101 = zext i32 %100 to i64
  %102 = shl nuw nsw i64 %101, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %85, i8* nonnull align 8 %98, i64 %102, i1 false) #22
  %103 = bitcast %"class.WTF::Vector.284"* %0 to i8**
  %104 = load i8*, i8** %103, align 8
  br label %105

105:                                              ; preds = %99, %91
  %106 = phi i8* [ %104, %99 ], [ %98, %91 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %106) #22
  %107 = bitcast %"class.WTF::Vector.284"* %0 to i64*
  store atomic i64 %93, i64* %107 monotonic, align 8
  %108 = trunc i64 %92 to i32
  store i32 %108, i32* %37, align 8
  br label %109

109:                                              ; preds = %36, %76, %86, %105
  %110 = load i32, i32* %4, align 4
  br label %111

111:                                              ; preds = %109, %35
  %112 = phi i32 [ %110, %109 ], [ %2, %35 ]
  %113 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %0, i64 0, i32 0, i32 0, i32 0
  %114 = icmp eq i32 %112, 0
  br i1 %114, label %166, label %115

115:                                              ; preds = %111
  %116 = zext i32 %112 to i64
  %117 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %113, align 8
  %118 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  br label %119

119:                                              ; preds = %160, %115
  %120 = phi %"class.WTF::AtomicString"* [ %117, %115 ], [ %161, %160 ]
  %121 = phi i64 [ %116, %115 ], [ %162, %160 ]
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %141, label %124

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %141

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  %132 = zext i32 %131 to i33
  %133 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %132, i33 1) #22
  %134 = extractvalue { i33, i1 } %133, 1
  %135 = extractvalue { i33, i1 } %133, 0
  %136 = icmp slt i33 %135, 0
  %137 = or i1 %134, %136
  br i1 %137, label %138, label %139, !prof !3

138:                                              ; preds = %129
  tail call void @llvm.trap() #22
  unreachable

139:                                              ; preds = %129
  %140 = trunc i33 %135 to i32
  store i32 %140, i32* %130, align 4
  br label %141

141:                                              ; preds = %139, %124, %119
  %142 = ptrtoint %"class.WTF::StringImpl"* %122 to i64
  %143 = bitcast %"class.WTF::AtomicString"* %120 to i64*
  %144 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %120, i64 0, i32 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  store i64 %142, i64* %143, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #22
  br label %160

160:                                              ; preds = %159, %156, %141
  %161 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %120, i64 1
  %162 = add nsw i64 %121, -1
  %163 = icmp sgt i64 %162, 0
  br i1 %163, label %119, label %164

164:                                              ; preds = %160
  %165 = load i32, i32* %4, align 4
  br label %166

166:                                              ; preds = %164, %111
  %167 = phi i32 [ %165, %164 ], [ 0, %111 ]
  %168 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %113, align 8
  %169 = zext i32 %2 to i64
  %170 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %168, i64 %169
  %171 = icmp eq i32 %167, %2
  br i1 %171, label %202, label %172

172:                                              ; preds = %166
  %173 = zext i32 %167 to i64
  %174 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %168, i64 %173
  %175 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  br label %176

176:                                              ; preds = %198, %172
  %177 = phi %"class.WTF::AtomicString"* [ %174, %172 ], [ %200, %198 ]
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8
  %179 = ptrtoint %"class.WTF::StringImpl"* %178 to i64
  %180 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %180, label %198, label %181

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %198

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = zext i32 %188 to i33
  %190 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %189, i33 1) #22
  %191 = extractvalue { i33, i1 } %190, 1
  %192 = extractvalue { i33, i1 } %190, 0
  %193 = icmp slt i33 %192, 0
  %194 = or i1 %191, %193
  br i1 %194, label %195, label %196, !prof !3

195:                                              ; preds = %186
  tail call void @llvm.trap() #22
  unreachable

196:                                              ; preds = %186
  %197 = trunc i33 %192 to i32
  store i32 %197, i32* %187, align 4
  br label %198

198:                                              ; preds = %196, %181, %176
  %199 = bitcast %"class.WTF::AtomicString"* %177 to i64*
  store i64 %179, i64* %199, align 8
  %200 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %177, i64 1
  %201 = icmp eq %"class.WTF::AtomicString"* %200, %170
  br i1 %201, label %202, label %176

202:                                              ; preds = %198, %166
  store i32 %2, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #22
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #22
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.44, i64 0, i64 0), i8* %11, i8* %12) #22
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.45, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #22
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #22
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #22
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #22
  ret i64 %21
}

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.284"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #22
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #22
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.181, i64 0, i64 0), i8* %14, i8* %15) #22
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.42, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #22
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #22
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #22
  %23 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 %25
  ret %"class.WTF::AtomicString"* %26
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #8

declare %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"*) local_unnamed_addr #6

declare %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #6

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #2 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #22
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #22
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #22
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #22
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #22
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #22
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #22
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #22
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #2 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #22
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #22
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #23
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #22
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #22
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #23
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #22
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #22
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #18

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #19

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #8

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #6

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #6

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.3844"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.3844", %"class.WTF::StringAppend.3844"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #22
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !3

20:                                               ; preds = %11
  tail call void @llvm.trap() #22
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %3, %6, %21
  %24 = getelementptr inbounds %"class.WTF::StringAppend.3844", %"class.WTF::StringAppend.3844"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %26
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #22
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %33
  tail call void @llvm.trap() #22
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %26, %41
  %44 = phi i32 [ %42, %41 ], [ %32, %26 ]
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %50 = add i32 %44, -1
  store i32 %50, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i32 [ %50, %48 ], [ %44, %43 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #22
  br label %55

55:                                               ; preds = %23, %51, %54
  br i1 %5, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #22
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.4050", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.4050"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #22
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4050", %"class.WTF::StringTypeAdapter.4050"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.4050"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4050"* nonnull %4, i8* %21) #22
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #22
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #22
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.187, i64 0, i64 0), i8* %30, i8* %31) #22
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.188, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #22
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #22
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #22
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #22
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #22
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.189, i64 0, i64 0), i8* %46, i8* %47) #22
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.188, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #22
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #22
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #22
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #6

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4050"*, i8*) unnamed_addr #6

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.4049"*, i8*) local_unnamed_addr #6

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.4050"*, i8*) local_unnamed_addr #6

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4049"*, i16*) local_unnamed_addr #6

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4050"*, i16*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.3844"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.3844", %"class.WTF::StringAppend.3844"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = getelementptr inbounds %"class.WTF::StringAppend.3844", %"class.WTF::StringAppend.3844"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  %24 = add i32 %23, %15
  %25 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #22
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp ult i32 %24, %15
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %22
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #22
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.187, i64 0, i64 0), i8* %31, i8* %32) #22
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.188, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #22
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #22
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #22
  %40 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #22
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %24, %23
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %41, align 8
  br label %54

45:                                               ; preds = %39
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #22
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.189, i64 0, i64 0), i8* %46, i8* %47) #22
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %41, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.188, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #22
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #22
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #22
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEENS_12AtomicStringEEC2ES4_S5_(%"class.WTF::StringAppend.3840"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #2 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #22
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #22
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #22
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %37
  tail call void @llvm.trap() #22
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #22
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #22
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEENS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.3840"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %8) #22
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #22
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %8) #22
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #22
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.187, i64 0, i64 0), i8* %26, i8* %27) #22
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.188, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #22
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #22
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #22
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #22
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #22
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.189, i64 0, i64 0), i8* %41, i8* %42) #22
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.188, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #22
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #22
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #22
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEENS_12AtomicStringEE7WriteToEPh(%"class.WTF::StringAppend.3840"*, i8*) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.4050", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.4052", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.4052"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #22
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4052", %"class.WTF::StringTypeAdapter.4052"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4052", %"class.WTF::StringTypeAdapter.4052"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.4052"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.4052"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #22
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #22
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.4050"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #22
  %47 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #22
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4050"* nonnull %4, i8* %48) #22
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.4049"* nonnull %49, i8* %1) #22
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.4050"* nonnull %4, i8* %52) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #22
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4052", %"class.WTF::StringTypeAdapter.4052"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %6) #22
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.4049"* nonnull %53, i8* %56) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEENS_12AtomicStringEE7WriteToEPDs(%"class.WTF::StringAppend.3840"*, i16*) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.4050", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.4052", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.4052"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #22
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4052", %"class.WTF::StringTypeAdapter.4052"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4052", %"class.WTF::StringTypeAdapter.4052"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.4052"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.4052"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #22
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #22
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.4050"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #22
  %47 = getelementptr inbounds %"class.WTF::StringAppend.3840", %"class.WTF::StringAppend.3840"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #22
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4050"* nonnull %4, i8* %48) #22
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4049"* nonnull %49, i16* %1) #22
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4050"* nonnull %4, i16* %52) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #22
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4052", %"class.WTF::StringTypeAdapter.4052"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %6) #22
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4049"* nonnull %53, i16* %56) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #22
  ret void
}

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS5_IS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector.3314"*, %"struct.std::__1::pair.3316"* dereferenceable(48)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3314", %"class.std::__1::vector.3314"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.std::__1::pair.3316"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3314"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3314"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #21
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3314", %"class.std::__1::vector.3314"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.std::__1::pair.3316"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #23
  %30 = bitcast i8* %29 to %"struct.std::__1::pair.3316"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.std::__1::pair.3316"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.std::__1::pair.3316", %"struct.std::__1::pair.3316"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.std::__1::pair.3316", %"struct.std::__1::pair.3316"* %33, i64 %32
  %36 = ptrtoint %"struct.std::__1::pair.3316"* %35 to i64
  %37 = bitcast %"struct.std::__1::pair.3316"* %34 to i8*
  %38 = bitcast %"struct.std::__1::pair.3316"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #22
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #22
  %39 = getelementptr inbounds %"struct.std::__1::pair.3316", %"struct.std::__1::pair.3316"* %33, i64 %9, i32 1
  %40 = getelementptr inbounds %"struct.std::__1::pair.3316", %"struct.std::__1::pair.3316"* %1, i64 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  %42 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #22
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #22
  %43 = getelementptr inbounds %"struct.std::__1::pair.3316", %"struct.std::__1::pair.3316"* %34, i64 1
  %44 = ptrtoint %"struct.std::__1::pair.3316"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector.3314", %"class.std::__1::vector.3314"* %0, i64 0, i32 0, i32 0
  %46 = load %"struct.std::__1::pair.3316"*, %"struct.std::__1::pair.3316"** %45, align 8
  %47 = load %"struct.std::__1::pair.3316"*, %"struct.std::__1::pair.3316"** %3, align 8
  %48 = icmp eq %"struct.std::__1::pair.3316"* %47, %46
  br i1 %48, label %49, label %51

49:                                               ; preds = %31
  %50 = ptrtoint %"struct.std::__1::pair.3316"* %46 to i64
  br label %66

51:                                               ; preds = %31, %51
  %52 = phi %"struct.std::__1::pair.3316"* [ %54, %51 ], [ %34, %31 ]
  %53 = phi %"struct.std::__1::pair.3316"* [ %55, %51 ], [ %47, %31 ]
  %54 = getelementptr inbounds %"struct.std::__1::pair.3316", %"struct.std::__1::pair.3316"* %52, i64 -1
  %55 = getelementptr inbounds %"struct.std::__1::pair.3316", %"struct.std::__1::pair.3316"* %53, i64 -1
  %56 = bitcast %"struct.std::__1::pair.3316"* %54 to i8*
  %57 = bitcast %"struct.std::__1::pair.3316"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #22
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #22
  %58 = getelementptr inbounds %"struct.std::__1::pair.3316", %"struct.std::__1::pair.3316"* %52, i64 -1, i32 1
  %59 = getelementptr inbounds %"struct.std::__1::pair.3316", %"struct.std::__1::pair.3316"* %53, i64 -1, i32 1
  %60 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  %61 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false) #22
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #22
  %62 = icmp eq %"struct.std::__1::pair.3316"* %55, %46
  br i1 %62, label %63, label %51

63:                                               ; preds = %51
  %64 = load i64, i64* %6, align 8
  %65 = load %"struct.std::__1::pair.3316"*, %"struct.std::__1::pair.3316"** %3, align 8
  br label %66

66:                                               ; preds = %49, %63
  %67 = phi %"struct.std::__1::pair.3316"* [ %46, %49 ], [ %65, %63 ]
  %68 = phi %"struct.std::__1::pair.3316"* [ %34, %49 ], [ %54, %63 ]
  %69 = phi i64 [ %50, %49 ], [ %64, %63 ]
  %70 = ptrtoint %"struct.std::__1::pair.3316"* %68 to i64
  store i64 %70, i64* %6, align 8
  store i64 %44, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %71 = inttoptr i64 %69 to %"struct.std::__1::pair.3316"*
  %72 = icmp eq %"struct.std::__1::pair.3316"* %67, %71
  br i1 %72, label %94, label %73

73:                                               ; preds = %66, %92
  %74 = phi %"struct.std::__1::pair.3316"* [ %75, %92 ], [ %67, %66 ]
  %75 = getelementptr inbounds %"struct.std::__1::pair.3316", %"struct.std::__1::pair.3316"* %74, i64 -1
  %76 = getelementptr inbounds %"struct.std::__1::pair.3316", %"struct.std::__1::pair.3316"* %74, i64 -1, i32 1
  %77 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  tail call void @_ZdlPv(i8* %83) #23
  br label %84

84:                                               ; preds = %81, %73
  %85 = bitcast %"struct.std::__1::pair.3316"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"struct.std::__1::pair.3316", %"struct.std::__1::pair.3316"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  tail call void @_ZdlPv(i8* %91) #23
  br label %92

92:                                               ; preds = %89, %84
  %93 = icmp eq %"struct.std::__1::pair.3316"* %75, %71
  br i1 %93, label %94, label %73

94:                                               ; preds = %92, %66
  %95 = icmp eq i64 %69, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = inttoptr i64 %69 to i8*
  tail call void @_ZdlPv(i8* %97) #23
  br label %98

98:                                               ; preds = %94, %96
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #20

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.3365"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3365", %"class.WTF::HashTable.3365"* %0, i64 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %4, align 8
  %6 = icmp eq %"class.blink::QualifiedName"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.3365"* %0, %"class.blink::QualifiedName"* null)
  %9 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::QualifiedName"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3365", %"class.WTF::HashTable.3365"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 16777215
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %17) #22
  %24 = load i32, i32* %18, align 4
  %25 = and i32 %23, 16777215
  %26 = and i32 %24, -16777216
  %27 = or i32 %26, %25
  store i32 %27, i32* %18, align 4
  br label %28

28:                                               ; preds = %10, %22
  %29 = phi i32 [ %20, %10 ], [ %25, %22 ]
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 %31
  %33 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %32, i64 0, i32 0, i32 0
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %33, i64 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %35, %37
  br i1 %38, label %94, label %39

39:                                               ; preds = %28
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %41 = xor i32 %29, -1
  %42 = lshr i32 %29, 23
  %43 = add nsw i32 %42, %41
  %44 = shl i32 %43, 12
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 7
  %47 = xor i32 %46, %45
  %48 = shl i32 %47, 2
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 20
  %51 = xor i32 %50, %49
  %52 = or i32 %51, 1
  %53 = zext i32 %52 to i64
  br label %54

54:                                               ; preds = %39, %65
  %55 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %35, %39 ], [ %73, %65 ]
  %56 = phi %"class.blink::QualifiedName"* [ %32, %39 ], [ %71, %65 ]
  %57 = phi %"class.blink::QualifiedName"* [ null, %39 ], [ %66, %65 ]
  %58 = phi i64 [ %31, %39 ], [ %70, %65 ]
  %59 = phi i64 [ 0, %39 ], [ %68, %65 ]
  %60 = bitcast %"class.blink::QualifiedName"* %56 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, inttoptr (i64 -1 to i8*)
  br i1 %62, label %65, label %63

63:                                               ; preds = %54
  %64 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %55, %40
  br i1 %64, label %136, label %65

65:                                               ; preds = %54, %63
  %66 = phi %"class.blink::QualifiedName"* [ %57, %63 ], [ %56, %54 ]
  %67 = icmp eq i64 %59, 0
  %68 = select i1 %67, i64 %53, i64 %59
  %69 = add i64 %68, %58
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 %70
  %72 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %72, align 8
  %74 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %73, %37
  br i1 %74, label %75, label %54

75:                                               ; preds = %65
  %76 = icmp eq %"class.blink::QualifiedName"* %66, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %66, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %"class.blink::QualifiedName::QualifiedNameImpl"** %78, align 8
  %79 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, null
  br i1 %79, label %87, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = and i32 %82, 16777216
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %86) #22
  br label %87

87:                                               ; preds = %77, %80, %85
  %88 = getelementptr inbounds %"class.WTF::HashTable.3365", %"class.WTF::HashTable.3365"* %0, i64 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, 2147483647
  %91 = and i32 %90, 2147483647
  %92 = and i32 %89, -2147483648
  %93 = or i32 %91, %92
  store i32 %93, i32* %88, align 8
  br label %94

94:                                               ; preds = %28, %75, %87
  %95 = phi %"class.blink::QualifiedName"* [ %66, %87 ], [ %71, %75 ], [ %32, %28 ]
  %96 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %97 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %96, align 8
  %98 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %97, null
  br i1 %98, label %106, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = and i32 %101, 16777216
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %105) #22
  br label %106

106:                                              ; preds = %104, %99, %94
  %107 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %97 to i64
  %108 = bitcast %"class.blink::QualifiedName"* %95 to i64*
  %109 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %95, i64 0, i32 0, i32 0
  %110 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %109, align 8
  store i64 %107, i64* %108, align 8
  %111 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %110, null
  br i1 %111, label %124, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = and i32 %114, 16777216
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %124

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %118) #22
  %119 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %117
  tail call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %110) #22
  %123 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %110 to i8*
  tail call void @free(i8* %123) #22
  br label %124

124:                                              ; preds = %106, %112, %117, %122
  %125 = getelementptr inbounds %"class.WTF::HashTable.3365", %"class.WTF::HashTable.3365"* %0, i64 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %125, align 4
  %128 = getelementptr inbounds %"class.WTF::HashTable.3365", %"class.WTF::HashTable.3365"* %0, i64 0, i32 3
  %129 = load i32, i32* %128, align 8
  %130 = add i32 %129, %127
  %131 = shl i32 %130, 1
  %132 = load i32, i32* %12, align 8
  %133 = icmp ult i32 %131, %132
  br i1 %133, label %136, label %134

134:                                              ; preds = %124
  %135 = tail call %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.3365"* %0, %"class.blink::QualifiedName"* %95)
  br label %136

136:                                              ; preds = %63, %124, %134
  %137 = phi i8 [ 1, %124 ], [ 1, %134 ], [ 0, %63 ]
  %138 = phi %"class.blink::QualifiedName"* [ %95, %124 ], [ %135, %134 ], [ %56, %63 ]
  %139 = insertvalue { %"class.blink::QualifiedName"*, i8 } undef, %"class.blink::QualifiedName"* %138, 0
  %140 = insertvalue { %"class.blink::QualifiedName"*, i8 } %139, i8 %137, 1
  ret { %"class.blink::QualifiedName"*, i8 } %140
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.3365"*, %"class.blink::QualifiedName"*) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.3365", %"class.WTF::HashTable.3365"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3365", %"class.WTF::HashTable.3365"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #22
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #22
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0), i8* %22, i8* %23) #22
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.46, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #22
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #22
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #22
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13QualifiedNameEEEPKcv, i64 0, i64 0)) #22
  %36 = bitcast i8* %35 to %"class.blink::QualifiedName"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %31
  %39 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %39, i64 0, i32 0, i32 0
  br label %41

41:                                               ; preds = %53, %38
  %42 = phi i64 [ 0, %38 ], [ %54, %53 ]
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %36, i64 %42, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %43, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %45 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %43, null
  br i1 %45, label %53, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %48, 16777216
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %52) #22
  br label %53

53:                                               ; preds = %51, %46, %41
  %54 = add nuw nsw i64 %42, 1
  %55 = icmp eq i64 %54, %33
  br i1 %55, label %56, label %41

56:                                               ; preds = %53, %31
  %57 = call %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_(%"class.WTF::HashTable.3365"* %0, %"class.blink::QualifiedName"* %36, i32 %32, %"class.blink::QualifiedName"* %1) #22
  ret %"class.blink::QualifiedName"* %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_(%"class.WTF::HashTable.3365"*, %"class.blink::QualifiedName"*, i32, %"class.blink::QualifiedName"*) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.3365", align 8
  %6 = bitcast %"class.WTF::HashTable.3365"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #22
  %7 = getelementptr inbounds %"class.WTF::HashTable.3365", %"class.WTF::HashTable.3365"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.3365", %"class.WTF::HashTable.3365"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.3365", %"class.WTF::HashTable.3365"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3365", %"class.WTF::HashTable.3365"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.3365"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.blink::QualifiedName"* %1, %"class.blink::QualifiedName"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.3365", %"class.WTF::HashTable.3365"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.3365", %"class.WTF::HashTable.3365"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.blink::QualifiedName"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.3365"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.3365"* %5 to i64*
  br label %30

21:                                               ; preds = %4
  %22 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %15, align 8
  %25 = ptrtoint %"class.blink::QualifiedName"* %24 to i64
  br label %59

26:                                               ; preds = %93
  %27 = bitcast %"class.WTF::HashTable.3365"* %5 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.WTF::HashTable.3365"* %0 to i64*
  br label %30

30:                                               ; preds = %16, %26
  %31 = phi i64* [ %20, %16 ], [ %27, %26 ]
  %32 = phi i64* [ %18, %16 ], [ %29, %26 ]
  %33 = phi i64 [ %17, %16 ], [ %28, %26 ]
  %34 = phi i64 [ %19, %16 ], [ %94, %26 ]
  %35 = phi %"class.blink::QualifiedName"* [ null, %16 ], [ %97, %26 ]
  %36 = phi i32 [ 0, %16 ], [ %95, %26 ]
  store atomic i64 %33, i64* %32 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %34, i64* %31, align 8
  store i32 %36, i32* %8, align 8
  %37 = inttoptr i64 %34 to %"class.blink::QualifiedName"*
  %38 = icmp eq i64 %34, 0
  br i1 %38, label %55, label %39

39:                                               ; preds = %30
  %40 = icmp eq i32 %36, 0
  br i1 %40, label %53, label %41

41:                                               ; preds = %39
  %42 = zext i32 %36 to i64
  br label %43

43:                                               ; preds = %50, %41
  %44 = phi i64 [ 0, %41 ], [ %51, %50 ]
  %45 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %37, i64 %44
  %46 = bitcast %"class.blink::QualifiedName"* %45 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %50, label %49

49:                                               ; preds = %43
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %45) #22
  br label %50

50:                                               ; preds = %49, %43
  %51 = add nuw nsw i64 %44, 1
  %52 = icmp eq i64 %51, %42
  br i1 %52, label %53, label %43

53:                                               ; preds = %50, %39
  %54 = inttoptr i64 %34 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #22
  store atomic i64 0, i64* %31 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %55

55:                                               ; preds = %30, %53
  %56 = getelementptr inbounds %"class.WTF::HashTable.3365", %"class.WTF::HashTable.3365"* %0, i64 0, i32 3
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, -2147483648
  store i32 %58, i32* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #22
  ret %"class.blink::QualifiedName"* %35

59:                                               ; preds = %21, %93
  %60 = phi i64 [ %25, %21 ], [ %94, %93 ]
  %61 = phi i32 [ %13, %21 ], [ %95, %93 ]
  %62 = phi %"class.blink::QualifiedName"* [ %24, %21 ], [ %96, %93 ]
  %63 = phi %"class.blink::QualifiedName"* [ null, %21 ], [ %97, %93 ]
  %64 = phi i32 [ 0, %21 ], [ %98, %93 ]
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %62, i64 %65
  %67 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %67, align 8
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %70 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %68, %69
  %71 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %68, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %72 = or i1 %71, %70
  br i1 %72, label %93, label %73

73:                                               ; preds = %59
  %74 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.3365"* nonnull %5, %"class.blink::QualifiedName"* dereferenceable(8) %66) #22
  %75 = extractvalue { %"class.blink::QualifiedName"*, i8 } %74, 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %75) #22
  %76 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %67, align 8
  %77 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %75, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %76, %"class.blink::QualifiedName::QualifiedNameImpl"** %77, align 8
  %78 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %76, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %76, i64 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = and i32 %81, 16777216
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %76, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %85) #22
  br label %86

86:                                               ; preds = %73, %79, %84
  %87 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %15, align 8
  %88 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %87, i64 %65
  %89 = icmp eq %"class.blink::QualifiedName"* %88, %3
  %90 = select i1 %89, %"class.blink::QualifiedName"* %75, %"class.blink::QualifiedName"* %63
  %91 = load i32, i32* %12, align 8
  %92 = ptrtoint %"class.blink::QualifiedName"* %87 to i64
  br label %93

93:                                               ; preds = %59, %86
  %94 = phi i64 [ %60, %59 ], [ %92, %86 ]
  %95 = phi i32 [ %61, %59 ], [ %91, %86 ]
  %96 = phi %"class.blink::QualifiedName"* [ %62, %59 ], [ %87, %86 ]
  %97 = phi %"class.blink::QualifiedName"* [ %63, %59 ], [ %90, %86 ]
  %98 = add i32 %64, 1
  %99 = icmp eq i32 %98, %95
  br i1 %99, label %26, label %59
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.3365"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3365", %"class.WTF::HashTable.3365"* %0, i64 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.3365", %"class.WTF::HashTable.3365"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 16777215
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %10) #22
  %17 = load i32, i32* %11, align 4
  %18 = and i32 %16, 16777215
  %19 = and i32 %17, -16777216
  %20 = or i32 %19, %18
  store i32 %20, i32* %11, align 4
  br label %21

21:                                               ; preds = %15, %2
  %22 = phi i32 [ %13, %2 ], [ %18, %15 ]
  %23 = and i32 %22, %7
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 %24
  %26 = ptrtoint %"class.blink::QualifiedName"* %25 to i64
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %28 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %25, i64 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %29, %31
  br i1 %32, label %50, label %33

33:                                               ; preds = %21
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %35 = xor i32 %22, -1
  %36 = lshr i32 %22, 23
  %37 = add nsw i32 %36, %35
  %38 = shl i32 %37, 12
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 7
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 20
  %45 = xor i32 %44, %43
  %46 = or i32 %45, 1
  %47 = zext i32 %46 to i64
  br label %56

48:                                               ; preds = %68
  %49 = ptrtoint %"class.blink::QualifiedName"* %74 to i64
  br label %50

50:                                               ; preds = %48, %21
  %51 = phi i64 [ %26, %21 ], [ %49, %48 ]
  %52 = phi %"class.blink::QualifiedName"* [ null, %21 ], [ %69, %48 ]
  %53 = icmp eq %"class.blink::QualifiedName"* %52, null
  %54 = ptrtoint %"class.blink::QualifiedName"* %52 to i64
  %55 = select i1 %53, i64 %51, i64 %54
  br label %79

56:                                               ; preds = %68, %33
  %57 = phi %"class.blink::QualifiedName"* [ null, %33 ], [ %69, %68 ]
  %58 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %29, %33 ], [ %77, %68 ]
  %59 = phi i64 [ %26, %33 ], [ %75, %68 ]
  %60 = phi %"class.blink::QualifiedName"* [ %25, %33 ], [ %74, %68 ]
  %61 = phi i64 [ %24, %33 ], [ %73, %68 ]
  %62 = phi i64 [ 0, %33 ], [ %71, %68 ]
  %63 = bitcast %"class.blink::QualifiedName"* %60 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = icmp eq i8* %64, inttoptr (i64 -1 to i8*)
  br i1 %65, label %68, label %66

66:                                               ; preds = %56
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %58, %34
  br i1 %67, label %79, label %68

68:                                               ; preds = %66, %56
  %69 = phi %"class.blink::QualifiedName"* [ %57, %66 ], [ %60, %56 ]
  %70 = icmp eq i64 %62, 0
  %71 = select i1 %70, i64 %47, i64 %62
  %72 = add i64 %71, %61
  %73 = and i64 %72, %8
  %74 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 %73
  %75 = ptrtoint %"class.blink::QualifiedName"* %74 to i64
  %76 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %74, i64 0, i32 0, i32 0
  %77 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %76, align 8
  %78 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %77, %31
  br i1 %78, label %48, label %56

79:                                               ; preds = %66, %50
  %80 = phi i64 [ %55, %50 ], [ %59, %66 ]
  %81 = phi i8 [ 0, %50 ], [ 1, %66 ]
  %82 = inttoptr i64 %80 to %"class.blink::QualifiedName"*
  %83 = insertvalue { %"class.blink::QualifiedName"*, i8 } undef, %"class.blink::QualifiedName"* %82, 0
  %84 = insertvalue { %"class.blink::QualifiedName"*, i8 } %83, i8 %81, 1
  ret { %"class.blink::QualifiedName"*, i8 } %84
}

declare i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"*) local_unnamed_addr #6

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3363"* @_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_N4base17RepeatingCallbackIFvPNS1_8AXObjectEPN2ui10AXNodeDataERKNS_12AtomicStringEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSK_ISF_EEEESL_NS_18PartitionAllocatorEE6LookupERKS2_(%"class.WTF::HashTable.3360"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3360", %"class.WTF::HashTable.3360"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3363"*, %"struct.WTF::KeyValuePair.3363"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.3363"* %4, null
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.3360", %"class.WTF::HashTable.3360"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 16777215
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %12) #22
  %19 = load i32, i32* %13, align 4
  %20 = and i32 %18, 16777215
  %21 = and i32 %19, -16777216
  %22 = or i32 %21, %20
  store i32 %22, i32* %13, align 4
  br label %23

23:                                               ; preds = %17, %6
  %24 = phi i32 [ %15, %6 ], [ %20, %17 ]
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.3363", %"struct.WTF::KeyValuePair.3363"* %4, i64 %26
  %28 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.3363", %"struct.WTF::KeyValuePair.3363"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %28, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %30, %32
  br i1 %33, label %68, label %34

34:                                               ; preds = %23
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %36 = xor i32 %24, -1
  %37 = lshr i32 %24, 23
  %38 = add nsw i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %59, %34
  %50 = phi %"struct.WTF::KeyValuePair.3363"* [ %27, %34 ], [ %64, %59 ]
  %51 = phi i64 [ %26, %34 ], [ %63, %59 ]
  %52 = phi i64 [ 0, %34 ], [ %61, %59 ]
  %53 = bitcast %"struct.WTF::KeyValuePair.3363"* %50 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = icmp ne i8* %54, inttoptr (i64 -1 to i8*)
  %56 = bitcast i8* %54 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %57 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %35, %56
  %58 = and i1 %55, %57
  br i1 %58, label %68, label %59

59:                                               ; preds = %49
  %60 = icmp eq i64 %52, 0
  %61 = select i1 %60, i64 %48, i64 %52
  %62 = add i64 %61, %51
  %63 = and i64 %62, %10
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3363", %"struct.WTF::KeyValuePair.3363"* %4, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.3363", %"struct.WTF::KeyValuePair.3363"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %32
  br i1 %67, label %68, label %49

68:                                               ; preds = %49, %59, %2, %23
  %69 = phi %"struct.WTF::KeyValuePair.3363"* [ null, %2 ], [ null, %23 ], [ %50, %49 ], [ null, %59 ]
  ret %"struct.WTF::KeyValuePair.3363"* %69
}

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3373"* @_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6LookupERKS2_(%"class.WTF::HashTable.3370"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3370", %"class.WTF::HashTable.3370"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3373"*, %"struct.WTF::KeyValuePair.3373"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.3373"* %4, null
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.3370", %"class.WTF::HashTable.3370"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 16777215
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %12) #22
  %19 = load i32, i32* %13, align 4
  %20 = and i32 %18, 16777215
  %21 = and i32 %19, -16777216
  %22 = or i32 %21, %20
  store i32 %22, i32* %13, align 4
  br label %23

23:                                               ; preds = %17, %6
  %24 = phi i32 [ %15, %6 ], [ %20, %17 ]
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.3373", %"struct.WTF::KeyValuePair.3373"* %4, i64 %26
  %28 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.3373", %"struct.WTF::KeyValuePair.3373"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %28, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %30, %32
  br i1 %33, label %68, label %34

34:                                               ; preds = %23
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %36 = xor i32 %24, -1
  %37 = lshr i32 %24, 23
  %38 = add nsw i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %59, %34
  %50 = phi %"struct.WTF::KeyValuePair.3373"* [ %27, %34 ], [ %64, %59 ]
  %51 = phi i64 [ %26, %34 ], [ %63, %59 ]
  %52 = phi i64 [ 0, %34 ], [ %61, %59 ]
  %53 = bitcast %"struct.WTF::KeyValuePair.3373"* %50 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = icmp ne i8* %54, inttoptr (i64 -1 to i8*)
  %56 = bitcast i8* %54 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %57 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %35, %56
  %58 = and i1 %55, %57
  br i1 %58, label %68, label %59

59:                                               ; preds = %49
  %60 = icmp eq i64 %52, 0
  %61 = select i1 %60, i64 %48, i64 %52
  %62 = add i64 %61, %51
  %63 = and i64 %62, %10
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3373", %"struct.WTF::KeyValuePair.3373"* %4, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.3373", %"struct.WTF::KeyValuePair.3373"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %32
  br i1 %67, label %68, label %49

68:                                               ; preds = %49, %59, %2, %23
  %69 = phi %"struct.WTF::KeyValuePair.3373"* [ null, %2 ], [ null, %23 ], [ %50, %49 ], [ null, %59 ]
  ret %"struct.WTF::KeyValuePair.3373"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::IgnoredReason"* @_ZN3WTF15ConstructTraitsIN5blink13IgnoredReasonENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8*, %"class.blink::IgnoredReason"* dereferenceable(16)) local_unnamed_addr #2 comdat align 2 {
  %3 = bitcast i8* %0 to %"class.blink::IgnoredReason"*
  %4 = bitcast i8* %0 to i32*
  %5 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %1, i64 0, i32 1
  %9 = bitcast %"class.blink::Member.3459"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast i8* %7 to i64*
  store i64 %10, i64* %11, align 8
  %12 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %47, label %14

14:                                               ; preds = %2
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #22
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !3

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #22
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 9
  %26 = load i8, i8* %25, align 1, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %47, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 13
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %33 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %32, align 8
  %34 = load atomic i64, i64* %11 monotonic, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %33, i64 0, i32 0, i32 0
  %38 = inttoptr i64 %34 to i8*
  %39 = bitcast %"class.blink::MarkingVisitor"* %33 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %37, i8* nonnull %38, i8* %38, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #22
  %43 = load i64, i64* %29, align 8
  br label %44

44:                                               ; preds = %36, %28
  %45 = phi i64 [ %31, %28 ], [ %43, %36 ]
  %46 = add i64 %45, -1
  store i64 %46, i64* %29, align 8
  br label %47

47:                                               ; preds = %2, %21, %44
  ret %"class.blink::IgnoredReason"* %3
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3456"*, %"class.blink::IgnoredReason"* dereferenceable(16)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3456", %"class.WTF::Vector.3456"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3456", %"class.WTF::Vector.3456"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %6, align 8
  %8 = icmp ugt %"class.blink::IgnoredReason"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %7, i64 %10
  %12 = icmp ugt %"class.blink::IgnoredReason"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.3456", %"class.WTF::Vector.3456"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3456"* %0, i32 %22) #22
  %23 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::IgnoredReason"* %1 to i64
  %26 = ptrtoint %"class.blink::IgnoredReason"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 4
  %29 = getelementptr inbounds %"class.WTF::Vector.3456", %"class.WTF::Vector.3456"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3456"* %0, i32 %37) #22
  %38 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::IgnoredReason"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::IgnoredReason"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %41, i64 %44
  %46 = bitcast %"class.blink::IgnoredReason"* %45 to i8*
  %47 = tail call %"class.blink::IgnoredReason"* @_ZN3WTF15ConstructTraitsIN5blink13IgnoredReasonENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %46, %"class.blink::IgnoredReason"* dereferenceable(16) %42)
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3456"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.3456", %"class.WTF::Vector.3456"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !19

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.3456", %"class.WTF::Vector.3456"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %8, align 8
  %10 = icmp eq %"class.blink::IgnoredReason"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_13IgnoredReasonEEEmm(i64 %11) #22
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 4
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %14) #22
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.3456"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #22
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %8, align 8
  %26 = icmp eq %"class.blink::IgnoredReason"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::IgnoredReason"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #22
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 4
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #22
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #22
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #22
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.42, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.43, i64 0, i64 0)) #22
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #22
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3456"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3456"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %67

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3456", %"class.WTF::Vector.3456"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3456", %"class.WTF::Vector.3456"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.3456"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.3456", %"class.WTF::Vector.3456"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %64, label %14

14:                                               ; preds = %4, %60
  %15 = phi %"class.blink::IgnoredReason"* [ %62, %60 ], [ %6, %4 ]
  %16 = phi %"class.blink::IgnoredReason"* [ %61, %60 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %16, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %15, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %16, i64 0, i32 1
  %21 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %15, i64 0, i32 1
  %22 = bitcast %"class.blink::Member.3459"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.blink::Member.3459"* %20 to i64*
  store i64 %23, i64* %24, align 8
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %60, label %27

27:                                               ; preds = %14
  %28 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %29 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %28, i64 0, i32 1
  %30 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %29) #22
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %34, !prof !3

32:                                               ; preds = %27
  %33 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %29, i8* %33) #22
  br label %34

34:                                               ; preds = %32, %27
  %35 = phi i8* [ %33, %32 ], [ %30, %27 ]
  %36 = bitcast i8* %35 to %"class.blink::ThreadState"**
  %37 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 9
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %60, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 13
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %42, align 8
  %45 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %45, align 8
  %47 = load atomic i64, i64* %24 monotonic, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %57, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %46, i64 0, i32 0, i32 0
  %51 = inttoptr i64 %47 to i8*
  %52 = bitcast %"class.blink::MarkingVisitor"* %46 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %53 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %53, i64 5
  %55 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, align 8
  tail call void %55(%"class.blink::Visitor"* %50, i8* nonnull %51, i8* %51, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #22
  %56 = load i64, i64* %42, align 8
  br label %57

57:                                               ; preds = %49, %41
  %58 = phi i64 [ %44, %41 ], [ %56, %49 ]
  %59 = add i64 %58, -1
  store i64 %59, i64* %42, align 8
  br label %60

60:                                               ; preds = %14, %34, %57
  %61 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %16, i64 1
  %62 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %15, i64 1
  %63 = icmp eq %"class.blink::IgnoredReason"* %62, %10
  br i1 %63, label %64, label %14

64:                                               ; preds = %60, %4
  %65 = bitcast %"class.blink::IgnoredReason"* %6 to i8*
  %66 = shl nuw nsw i64 %9, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %65, i64 %66) #22
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %65) #22
  br label %168

67:                                               ; preds = %2
  %68 = zext i32 %1 to i64
  %69 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_13IgnoredReasonEEEmm(i64 %68) #22
  %70 = lshr i64 %69, 4
  %71 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %70) #22
  %72 = ptrtoint %"class.blink::HeapVectorBacking"* %71 to i64
  %73 = getelementptr inbounds %"class.WTF::Vector.3456", %"class.WTF::Vector.3456"* %0, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %73, align 8
  %75 = getelementptr inbounds %"class.WTF::Vector.3456", %"class.WTF::Vector.3456"* %0, i64 0, i32 0, i32 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %74, i64 %77
  %79 = icmp eq i32 %76, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %67
  %81 = bitcast %"class.blink::IgnoredReason"* %74 to i8*
  %82 = bitcast %"class.WTF::Vector.3456"* %0 to i8**
  br label %155

83:                                               ; preds = %67
  %84 = bitcast %"class.blink::HeapVectorBacking"* %71 to %"class.blink::IgnoredReason"*
  %85 = shl nuw nsw i64 %77, 4
  %86 = add nsw i64 %85, -16
  %87 = lshr exact i64 %86, 4
  %88 = add nuw nsw i64 %87, 1
  %89 = and i64 %88, 3
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %107, label %91

91:                                               ; preds = %83, %91
  %92 = phi %"class.blink::IgnoredReason"* [ %104, %91 ], [ %74, %83 ]
  %93 = phi %"class.blink::IgnoredReason"* [ %103, %91 ], [ %84, %83 ]
  %94 = phi i64 [ %105, %91 ], [ %89, %83 ]
  %95 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %93, i64 0, i32 0
  %96 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %92, i64 0, i32 0
  %97 = load i32, i32* %96, align 8
  store i32 %97, i32* %95, align 8
  %98 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %93, i64 0, i32 1
  %99 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %92, i64 0, i32 1
  %100 = bitcast %"class.blink::Member.3459"* %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.blink::Member.3459"* %98 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %93, i64 1
  %104 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %92, i64 1
  %105 = add i64 %94, -1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %91, !llvm.loop !38

107:                                              ; preds = %91, %83
  %108 = phi %"class.blink::IgnoredReason"* [ %74, %83 ], [ %104, %91 ]
  %109 = phi %"class.blink::IgnoredReason"* [ %84, %83 ], [ %103, %91 ]
  %110 = icmp ult i64 %86, 48
  br i1 %110, label %149, label %111

111:                                              ; preds = %107, %111
  %112 = phi %"class.blink::IgnoredReason"* [ %147, %111 ], [ %108, %107 ]
  %113 = phi %"class.blink::IgnoredReason"* [ %146, %111 ], [ %109, %107 ]
  %114 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 0, i32 0
  %115 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  store i32 %116, i32* %114, align 8
  %117 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 0, i32 1
  %118 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 0, i32 1
  %119 = bitcast %"class.blink::Member.3459"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %"class.blink::Member.3459"* %117 to i64*
  store i64 %120, i64* %121, align 8
  %122 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 1, i32 0
  %123 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 1, i32 0
  %124 = load i32, i32* %123, align 8
  store i32 %124, i32* %122, align 8
  %125 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 1, i32 1
  %126 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 1, i32 1
  %127 = bitcast %"class.blink::Member.3459"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.blink::Member.3459"* %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 2, i32 0
  %131 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 2, i32 0
  %132 = load i32, i32* %131, align 8
  store i32 %132, i32* %130, align 8
  %133 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 2, i32 1
  %134 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 2, i32 1
  %135 = bitcast %"class.blink::Member.3459"* %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"class.blink::Member.3459"* %133 to i64*
  store i64 %136, i64* %137, align 8
  %138 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 3, i32 0
  %139 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 3, i32 0
  %140 = load i32, i32* %139, align 8
  store i32 %140, i32* %138, align 8
  %141 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 3, i32 1
  %142 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 3, i32 1
  %143 = bitcast %"class.blink::Member.3459"* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.blink::Member.3459"* %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 4
  %147 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 4
  %148 = icmp eq %"class.blink::IgnoredReason"* %147, %78
  br i1 %148, label %149, label %111

149:                                              ; preds = %111, %107
  %150 = bitcast %"class.WTF::Vector.3456"* %0 to i8**
  %151 = load i8*, i8** %150, align 8
  %152 = load i32, i32* %75, align 4
  %153 = zext i32 %152 to i64
  %154 = shl nuw nsw i64 %153, 4
  br label %155

155:                                              ; preds = %80, %149
  %156 = phi i8** [ %82, %80 ], [ %150, %149 ]
  %157 = phi i64 [ 0, %80 ], [ %154, %149 ]
  %158 = phi i8* [ %81, %80 ], [ %151, %149 ]
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %158, i64 %157) #22
  %159 = load i8*, i8** %156, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %159) #22
  %160 = bitcast %"class.WTF::Vector.3456"* %0 to i64*
  store atomic i64 %72, i64* %160 monotonic, align 8
  %161 = trunc i64 %70 to i32
  %162 = getelementptr inbounds %"class.WTF::Vector.3456", %"class.WTF::Vector.3456"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %161, i32* %162, align 8
  %163 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %168, label %165

165:                                              ; preds = %155
  %166 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %71, i64 0, i32 0
  %167 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %166) #22
  br label %168

168:                                              ; preds = %165, %155, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_13IgnoredReasonEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #22
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 8388608
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #22
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 8388608) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.44, i64 0, i64 0), i8* %11, i8* %12) #22
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.190, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #22
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #22
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #22
  %20 = shl i64 %0, 4
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #22
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #22
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i64 0, i64 0), i8* %11, i8* %12) #22
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.191, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #22
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #22
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #22
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #22
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #22
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #22
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([136 x i8], [136 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_13IgnoredReasonENS_12VectorTraitsIS3_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #22
  br i1 %28, label %68, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::IgnoredReason"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !3

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 4
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %68, label %52

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %54

54:                                               ; preds = %65, %52
  %55 = phi i64 [ 0, %52 ], [ %66, %65 ]
  %56 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %30, i64 %55, i32 1
  %57 = bitcast %"class.blink::Member.3459"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %58 to i8*
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, i64 5
  %64 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %0, i8* nonnull %61, i8* nonnull %61, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #22
  br label %65

65:                                               ; preds = %60, %54
  %66 = add nuw nsw i64 %55, 1
  %67 = icmp eq i64 %66, %50
  br i1 %67, label %68, label %54

68:                                               ; preds = %65, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #6

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.3260"*, %"class.blink::AccessibleNode"** dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3260", %"class.WTF::Vector.3260"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3260", %"class.WTF::Vector.3260"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3260"* %0, i32 %14) #22
  %15 = getelementptr inbounds %"class.WTF::Vector.3260", %"class.WTF::Vector.3260"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.3263"*, %"class.blink::Member.3263"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.3263", %"class.blink::Member.3263"* %16, i64 %18
  %20 = bitcast %"class.blink::AccessibleNode"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.3263"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #22
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3260"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.3260", %"class.WTF::Vector.3260"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !19

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.3260", %"class.WTF::Vector.3260"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.3263"*, %"class.blink::Member.3263"** %8, align 8
  %10 = icmp eq %"class.blink::Member.3263"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14AccessibleNodeEEEEEmm(i64 %11) #22
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.4086"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #22
  %16 = ptrtoint %"class.blink::HeapVectorBacking.4086"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.3260"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.4086", %"class.blink::HeapVectorBacking.4086"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #22
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.3263"*, %"class.blink::Member.3263"** %8, align 8
  %26 = icmp eq %"class.blink::Member.3263"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.3263"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #22
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #22
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #22
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #22
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.42, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.43, i64 0, i64 0)) #22
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #22
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3260"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3260"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.3260"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3260", %"class.WTF::Vector.3260"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.3260"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.3260", %"class.WTF::Vector.3260"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #22
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #22
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14AccessibleNodeEEEEEmm(i64 %14) #22
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.4086"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #22
  %18 = ptrtoint %"class.blink::HeapVectorBacking.4086"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.3260", %"class.WTF::Vector.3260"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.3263"*, %"class.blink::Member.3263"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.3260", %"class.WTF::Vector.3260"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.4086"* %17, null
  %23 = icmp ne %"class.blink::Member.3263"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.3263"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !19

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.3260"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.4086", %"class.blink::HeapVectorBacking.4086"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #22
  %33 = bitcast %"class.WTF::Vector.3260"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #22
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #22
  %42 = bitcast %"class.WTF::Vector.3260"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.3260", %"class.WTF::Vector.3260"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.4086", %"class.blink::HeapVectorBacking.4086"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #22
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14AccessibleNodeEEEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #22
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #22
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.44, i64 0, i64 0), i8* %11, i8* %12) #22
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.190, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #22
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #22
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #22
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.4086"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #22
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #22
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i64 0, i64 0), i8* %11, i8* %12) #22
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.191, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #22
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #22
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #22
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.4086"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.4086"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #22
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #22
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #22
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14AccessibleNodeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.3263"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.3263", %"class.blink::Member.3263"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.3263"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14AccessibleNodeEE5TraceEPNS_7VisitorEPKv) #22
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14AccessibleNodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AccessibleNode"*
  %4 = bitcast i8* %1 to void (%"class.blink::AccessibleNode"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::AccessibleNode"*, %"class.blink::Visitor"*)**, void (%"class.blink::AccessibleNode"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::AccessibleNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::AccessibleNode"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::AccessibleNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::AccessibleNode"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::AccessibleNode"* %3, %"class.blink::Visitor"* %0) #22
  ret void
}

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.3263"* @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3260"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #22
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3260", %"class.WTF::Vector.3260"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #22
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.181, i64 0, i64 0), i8* %14, i8* %15) #22
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.42, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #22
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #22
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #22
  %23 = getelementptr inbounds %"class.WTF::Vector.3260", %"class.WTF::Vector.3260"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.3263"*, %"class.blink::Member.3263"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.3263", %"class.blink::Member.3263"* %24, i64 %25
  ret %"class.blink::Member.3263"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3087"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.3087"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.3087"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #22
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #22
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8AXObjectEEEEEmm(i64 %14) #22
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.4108"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #22
  %18 = ptrtoint %"class.blink::HeapVectorBacking.4108"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.4108"* %17, null
  %23 = icmp ne %"class.blink::Member.3082"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.3082"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !19

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.3087"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.4108", %"class.blink::HeapVectorBacking.4108"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #22
  %33 = bitcast %"class.WTF::Vector.3087"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #22
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #22
  %42 = bitcast %"class.WTF::Vector.3087"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.4108", %"class.blink::HeapVectorBacking.4108"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #22
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8AXObjectEEEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #22
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #22
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.44, i64 0, i64 0), i8* %11, i8* %12) #22
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.190, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #22
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #22
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #22
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.4108"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #22
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #22
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i64 0, i64 0), i8* %11, i8* %12) #22
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.191, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #22
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #22
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #22
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.4108"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.4108"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #22
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #22
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #22
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8AXObjectEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.3082"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.3082"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #22
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i64 0, i64 0), i8 1 }
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRNS1_10WeakMemberIS3_EEEEvOT_(%"class.WTF::Vector.3087"*, %"class.blink::WeakMember.3128"* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3087"* %0, i32 %14) #22
  %15 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %16, i64 %18
  %20 = bitcast %"class.blink::WeakMember.3128"* %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.3082"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #22
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3087"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !19

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %8, align 8
  %10 = icmp eq %"class.blink::Member.3082"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8AXObjectEEEEEmm(i64 %11) #22
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.4108"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #22
  %16 = ptrtoint %"class.blink::HeapVectorBacking.4108"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.3087"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.4108", %"class.blink::HeapVectorBacking.4108"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #22
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %8, align 8
  %26 = icmp eq %"class.blink::Member.3082"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.3082"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #22
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #22
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #22
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #22
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.42, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.43, i64 0, i64 0)) #22
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #22
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3087"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.3459"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS4_SG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.3725"*, %"class.blink::AXObject"** dereferenceable(8), %"class.blink::AXObject"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %4, align 8
  %6 = icmp eq %"class.blink::Member.3459"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.3459"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.3725"* %0, %"class.blink::Member.3459"* null)
  %9 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.3459"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::AXObject"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %40, align 8
  %42 = icmp eq %"class.blink::AXObject"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::AXObject"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::AXObject"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.3459"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.3459"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::AXObject"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::AXObject"* %59, inttoptr (i64 -1 to %"class.blink::AXObject"*)
  %67 = select i1 %66, %"class.blink::Member.3459"* %60, %"class.blink::Member.3459"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %73, align 8
  %75 = icmp eq %"class.blink::AXObject"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.3459"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.3459"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #22
  %80 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.3459"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %2, align 8
  %89 = ptrtoint %"class.blink::AXObject"* %88 to i64
  %90 = bitcast %"class.blink::Member.3459"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::AXObject"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #22
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.3459"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #22
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.3459"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.3725"* %0, %"class.blink::Member.3459"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.3459"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.3459"*, i8 } undef, %"class.blink::Member.3459"* %117, 0
  %119 = insertvalue { %"class.blink::Member.3459"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.3459"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8*, %"class.blink::NameSource"* dereferenceable(56)) local_unnamed_addr #2 comdat align 2 {
  %3 = bitcast i8* %0 to %"class.blink::NameSource"*
  %4 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::NameSource"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast i8* %0 to i64*
  store i64 %6, i64* %7, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 8
  %9 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false) #22
  %10 = getelementptr inbounds i8, i8* %0, i64 24
  %11 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 5
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::AtomicString"* %11 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast i8* %10 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %16 = getelementptr inbounds i8, i8* %0, i64 32
  %17 = bitcast i8* %16 to i32*
  %18 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 6
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds i8, i8* %0, i64 40
  %21 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 7
  %22 = getelementptr inbounds i8, i8* %0, i64 48
  %23 = bitcast i8* %22 to i32*
  %24 = getelementptr inbounds i8, i8* %0, i64 52
  %25 = bitcast i8* %24 to i32*
  %26 = bitcast %"class.blink::HeapVector.3727"* %21 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #22
  %27 = load i64, i64* %26, align 8
  %28 = bitcast i8* %20 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %23, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %23, align 4
  store i32 %30, i32* %29, align 4
  %32 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %25, align 4
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %25, align 4
  store i32 %33, i32* %32, align 4
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %2
  %38 = bitcast i8* %20 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %39) #22
  br label %41

41:                                               ; preds = %37, %2
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %41
  %45 = bitcast %"class.blink::HeapVector.3727"* %21 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %46) #22
  br label %48

48:                                               ; preds = %41, %44
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %75, label %51

51:                                               ; preds = %48
  %52 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %53 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %52, i64 0, i32 1
  %54 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %53) #22
  %55 = icmp eq i8* %54, null
  br i1 %55, label %56, label %58, !prof !3

56:                                               ; preds = %51
  %57 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %53, i8* %57) #22
  br label %58

58:                                               ; preds = %56, %51
  %59 = phi i8* [ %57, %56 ], [ %54, %51 ]
  %60 = bitcast i8* %59 to %"class.blink::ThreadState"**
  %61 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 9
  %63 = load i8, i8* %62, align 1, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %75, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 13
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 1
  store i64 %68, i64* %66, align 8
  %69 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %70 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %70, i64 0, i32 0, i32 0
  %72 = bitcast i8* %20 to %"class.WTF::Vector.3730"*
  tail call void @_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.3730"* %72, %"class.blink::Visitor"* %71) #22
  %73 = load i64, i64* %66, align 8
  %74 = add i64 %73, -1
  store i64 %74, i64* %66, align 8
  br label %75

75:                                               ; preds = %48, %58, %65
  ret %"class.blink::NameSource"* %3
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3741"*, %"class.blink::NameSource"* dereferenceable(56)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3741", %"class.WTF::Vector.3741"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3741", %"class.WTF::Vector.3741"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %6, align 8
  %8 = icmp ugt %"class.blink::NameSource"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 %10
  %12 = icmp ugt %"class.blink::NameSource"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.3741", %"class.WTF::Vector.3741"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3741"* %0, i32 %22) #22
  %23 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::NameSource"* %1 to i64
  %26 = ptrtoint %"class.blink::NameSource"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = sdiv exact i64 %27, 56
  %29 = getelementptr inbounds %"class.WTF::Vector.3741", %"class.WTF::Vector.3741"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3741"* %0, i32 %37) #22
  %38 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::NameSource"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::NameSource"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %41, i64 %44
  %46 = bitcast %"class.blink::NameSource"* %45 to i8*
  %47 = tail call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %46, %"class.blink::NameSource"* dereferenceable(56) %42)
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.3730"*, %"class.blink::Visitor"*) local_unnamed_addr #2 comdat align 2 {
  %3 = bitcast %"class.WTF::Vector.3730"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast %"class.WTF::Vector.3730"* %0 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #22
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %1, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #22
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.3733"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.3733", %"class.blink::Member.3733"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.3733"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23NameSourceRelatedObjectEE5TraceEPNS_7VisitorEPKv) #22
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23NameSourceRelatedObjectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %9, i64 6
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* %1, i8* %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_8AXObjectEEEvRKNS_14LivenessBrokerEPKv) #22
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_8AXObjectEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AXObject"**
  %4 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %3, align 8
  %5 = ptrtoint %"class.blink::AXObject"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #22
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #22
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %4, i64 -1, i32 14
  %20 = bitcast %"class.blink::Member.3091"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3741"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.3741", %"class.WTF::Vector.3741"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !19

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.3741", %"class.WTF::Vector.3741"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %8, align 8
  %10 = icmp eq %"class.blink::NameSource"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm(i64 %11) #22
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = udiv i64 %12, 56
  %15 = tail call %"class.blink::HeapVectorBacking.4130"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %14) #22
  %16 = ptrtoint %"class.blink::HeapVectorBacking.4130"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.3741"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.4130", %"class.blink::HeapVectorBacking.4130"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #22
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %8, align 8
  %26 = icmp eq %"class.blink::NameSource"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::NameSource"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #22
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = udiv i64 %12, 56
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #22
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #22
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #22
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.42, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.43, i64 0, i64 0)) #22
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #22
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3741"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3741"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %15

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3741", %"class.WTF::Vector.3741"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3741", %"class.WTF::Vector.3741"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.3741"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.3741", %"class.WTF::Vector.3741"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::NameSource"* %6, %"class.blink::NameSource"* %10, %"class.blink::NameSource"* null, i1 zeroext true)
  %13 = bitcast %"class.blink::NameSource"* %6 to i8*
  %14 = mul nuw nsw i64 %9, 56
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %13, i64 %14) #22
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %13) #22
  br label %42

15:                                               ; preds = %2
  %16 = zext i32 %1 to i64
  %17 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm(i64 %16) #22
  %18 = udiv i64 %17, 56
  %19 = tail call %"class.blink::HeapVectorBacking.4130"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %18) #22
  %20 = bitcast %"class.blink::HeapVectorBacking.4130"* %19 to %"class.blink::NameSource"*
  %21 = ptrtoint %"class.blink::HeapVectorBacking.4130"* %19 to i64
  %22 = getelementptr inbounds %"class.WTF::Vector.3741", %"class.WTF::Vector.3741"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %22, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.3741", %"class.WTF::Vector.3741"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 %26
  tail call void @_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::NameSource"* %23, %"class.blink::NameSource"* %27, %"class.blink::NameSource"* %20, i1 zeroext false)
  %28 = bitcast %"class.WTF::Vector.3741"* %0 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = load i32, i32* %24, align 4
  %31 = zext i32 %30 to i64
  %32 = mul nuw nsw i64 %31, 56
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %29, i64 %32) #22
  %33 = load i8*, i8** %28, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %33) #22
  %34 = bitcast %"class.WTF::Vector.3741"* %0 to i64*
  store atomic i64 %21, i64* %34 monotonic, align 8
  %35 = trunc i64 %18 to i32
  %36 = getelementptr inbounds %"class.WTF::Vector.3741", %"class.WTF::Vector.3741"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %35, i32* %36, align 8
  %37 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %15
  %40 = getelementptr inbounds %"class.blink::HeapVectorBacking.4130", %"class.blink::HeapVectorBacking.4130"* %19, i64 0, i32 0
  %41 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %40) #22
  br label %42

42:                                               ; preds = %39, %15, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #22
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2396745
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #22
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2396745) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.44, i64 0, i64 0), i8* %11, i8* %12) #22
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.190, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #22
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #22
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #22
  %20 = mul i64 %0, 56
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.4130"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #22
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #22
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i64 0, i64 0), i8* %11, i8* %12) #22
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.191, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #22
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #22
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #22
  %20 = mul i64 %0, 56
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.4130"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.4130"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #22
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #22
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #22
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([130 x i8], [130 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_10NameSourceENS_12VectorTraitsIS3_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #22
  br i1 %28, label %73, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::NameSource"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !3

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = udiv i64 %49, 56
  %51 = icmp ugt i64 %49, 55
  br i1 %51, label %52, label %73

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %54 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %55

55:                                               ; preds = %70, %52
  %56 = phi i64 [ 0, %52 ], [ %71, %70 ]
  %57 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %30, i64 %56, i32 7
  %58 = bitcast %"class.blink::HeapVector.3727"* %57 to i64*
  %59 = load atomic i64, i64* %58 monotonic, align 8
  %60 = icmp eq i64 %59, 0
  %61 = bitcast %"class.blink::HeapVector.3727"* %57 to i8**
  %62 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %53, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %62, i64 11
  %64 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %0, i8** %61) #22
  br i1 %60, label %70, label %65

65:                                               ; preds = %55
  %66 = inttoptr i64 %59 to i8*
  %67 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %54, align 8
  %68 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %67, i64 5
  %69 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %68, align 8
  tail call void %69(%"class.blink::Visitor"* %0, i8* nonnull %66, i8* nonnull %66, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #22
  br label %70

70:                                               ; preds = %65, %55
  %71 = add nuw nsw i64 %56, 1
  %72 = icmp ult i64 %71, %50
  br i1 %72, label %55, label %73

73:                                               ; preds = %70, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv(i8*) #2 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::HeapVectorBacking.4130"*
  tail call void @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE8FinalizeEv(%"class.blink::HeapVectorBacking.4130"* %2) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE8FinalizeEv(%"class.blink::HeapVectorBacking.4130"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapVectorBacking.4130", %"class.blink::HeapVectorBacking.4130"* %0, i64 -8, i32 0
  %3 = getelementptr inbounds i8, i8* %2, i64 6
  %4 = bitcast i8* %3 to i16*
  %5 = load i16, i16* %4, align 2
  %6 = lshr i16 %5, 2
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %8, label %15, !prof !3

8:                                                ; preds = %1
  %9 = ptrtoint i8* %2 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %6 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %8, %15
  %19 = phi i64 [ %14, %8 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 56
  %22 = getelementptr inbounds i8, i8* %2, i64 8
  %23 = bitcast i8* %22 to %"class.blink::NameSource"*
  %24 = icmp ugt i64 %20, 55
  br i1 %24, label %26, label %25

25:                                               ; preds = %62, %18
  ret void

26:                                               ; preds = %18, %62
  %27 = phi i64 [ %64, %62 ], [ 0, %18 ]
  %28 = phi i32 [ %63, %62 ], [ 0, %18 ]
  %29 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 %27, i32 5, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #22
  br label %45

45:                                               ; preds = %44, %41, %26
  %46 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 %27, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #22
  br label %62

62:                                               ; preds = %45, %58, %61
  %63 = add i32 %28, 1
  %64 = zext i32 %63 to i64
  %65 = icmp ugt i64 %21, %64
  br i1 %65, label %26, label %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::NameSource"*, %"class.blink::NameSource"*, %"class.blink::NameSource"*, i1 zeroext) local_unnamed_addr #2 comdat align 2 {
  %5 = icmp eq %"class.blink::NameSource"* %0, %1
  br i1 %5, label %116, label %6

6:                                                ; preds = %4, %112
  %7 = phi %"class.blink::NameSource"* [ %114, %112 ], [ %0, %4 ]
  %8 = phi %"class.blink::NameSource"* [ %113, %112 ], [ %2, %4 ]
  %9 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.blink::NameSource"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::NameSource"* %8 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %13 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 1
  %14 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false) #22
  %15 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 5
  %16 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 5
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.WTF::AtomicString"* %16 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::AtomicString"* %15 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %21 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 6
  %22 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 6
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %21, align 8
  %24 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7
  %25 = bitcast %"class.blink::HeapVector.3727"* %24 to i8*
  %26 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 7
  %27 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %29 = bitcast %"class.blink::HeapVector.3727"* %26 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #22
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::HeapVector.3727"* %24 to i64*
  store atomic i64 0, i64* %29 monotonic, align 8
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %33 = load i32, i32* %27, align 4
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %27, align 4
  store i32 %33, i32* %32, align 4
  %35 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %28, align 4
  %37 = load i32, i32* %35, align 4
  store i32 %37, i32* %28, align 4
  store i32 %36, i32* %35, align 4
  %38 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %6
  %41 = bitcast %"class.blink::HeapVector.3727"* %24 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #22
  br label %44

44:                                               ; preds = %40, %6
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %44
  %48 = bitcast %"class.blink::HeapVector.3727"* %26 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %49) #22
  br label %51

51:                                               ; preds = %44, %47
  br i1 %3, label %52, label %79

52:                                               ; preds = %51
  %53 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %79, label %55

55:                                               ; preds = %52
  %56 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %57 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %56, i64 0, i32 1
  %58 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %57) #22
  %59 = icmp eq i8* %58, null
  br i1 %59, label %60, label %62, !prof !3

60:                                               ; preds = %55
  %61 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %57, i8* %61) #22
  br label %62

62:                                               ; preds = %60, %55
  %63 = phi i8* [ %61, %60 ], [ %58, %55 ]
  %64 = bitcast i8* %63 to %"class.blink::ThreadState"**
  %65 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %65, i64 0, i32 9
  %67 = load i8, i8* %66, align 1, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %79, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %65, i64 0, i32 13
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %70, align 8
  %73 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %65, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %74 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %74, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7, i32 0
  tail call void @_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.3730"* %76, %"class.blink::Visitor"* %75) #22
  %77 = load i64, i64* %70, align 8
  %78 = add i64 %77, -1
  store i64 %78, i64* %70, align 8
  br label %79

79:                                               ; preds = %69, %62, %52, %51
  %80 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 5, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #22
  br label %96

96:                                               ; preds = %95, %92, %79
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #22
  br label %112

112:                                              ; preds = %96, %108, %111
  %113 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 1
  %114 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 1
  %115 = icmp eq %"class.blink::NameSource"* %114, %1
  br i1 %115, label %116, label %6

116:                                              ; preds = %112, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3741"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #22
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3741", %"class.WTF::Vector.3741"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #22
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.181, i64 0, i64 0), i8* %14, i8* %15) #22
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.42, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #22
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #22
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #22
  %23 = getelementptr inbounds %"class.WTF::Vector.3741", %"class.WTF::Vector.3741"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %24, i64 %25
  ret %"class.blink::NameSource"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.3730"* @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.3730"*, %"class.WTF::Vector.3730"* dereferenceable(16)) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.3730"* %1, %0
  br i1 %3, label %87, label %4, !prof !3

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3730", %"class.WTF::Vector.3730"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.3730", %"class.WTF::Vector.3730"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %21

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.3730", %"class.WTF::Vector.3730"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Member.3733"*, %"class.blink::Member.3733"** %11, align 8
  %13 = zext i32 %8 to i64
  %14 = zext i32 %6 to i64
  %15 = getelementptr inbounds %"class.blink::Member.3733", %"class.blink::Member.3733"* %12, i64 %13
  %16 = getelementptr inbounds %"class.blink::Member.3733", %"class.blink::Member.3733"* %12, i64 %14
  %17 = bitcast %"class.blink::Member.3733"* %15 to i8*
  %18 = ptrtoint %"class.blink::Member.3733"* %16 to i64
  %19 = ptrtoint %"class.blink::Member.3733"* %15 to i64
  %20 = sub i64 %18, %19
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %17, i64 %20) #22
  store i32 %8, i32* %5, align 4
  br label %41

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.WTF::Vector.3730", %"class.WTF::Vector.3730"* %0, i64 0, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = icmp ugt i32 %8, %23
  br i1 %24, label %25, label %41

25:                                               ; preds = %21
  %26 = icmp eq i32 %23, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %25
  %28 = icmp eq i32 %6, 0
  %29 = bitcast %"class.WTF::Vector.3730"* %0 to i8**
  br i1 %28, label %34, label %30

30:                                               ; preds = %27
  %31 = load i8*, i8** %29, align 8
  %32 = zext i32 %6 to i64
  %33 = shl nuw nsw i64 %32, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %31, i64 %33) #22
  store i32 0, i32* %5, align 4
  br label %34

34:                                               ; preds = %30, %27
  %35 = load i8*, i8** %29, align 8
  %36 = bitcast %"class.WTF::Vector.3730"* %0 to i64*
  store atomic i64 0, i64* %36 monotonic, align 8
  store i32 0, i32* %22, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %35) #22
  %37 = load i32, i32* %7, align 4
  br label %38

38:                                               ; preds = %25, %34
  %39 = phi i32 [ %8, %25 ], [ %37, %34 ]
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3730"* %0, i32 %39)
  %40 = load i32, i32* %5, align 4
  br label %41

41:                                               ; preds = %21, %38, %10
  %42 = phi i32 [ %6, %21 ], [ %40, %38 ], [ %8, %10 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.3730", %"class.WTF::Vector.3730"* %1, i64 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.WTF::Vector.3730"* %1 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = zext i32 %42 to i64
  %47 = getelementptr inbounds %"class.WTF::Vector.3730", %"class.WTF::Vector.3730"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.WTF::Vector.3730"* %0 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = shl nuw nsw i64 %46, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* %49, i8* %45, i64 %50) #22
  %51 = load %"class.blink::Member.3733"*, %"class.blink::Member.3733"** %43, align 8
  %52 = load i32, i32* %5, align 4
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.blink::Member.3733", %"class.blink::Member.3733"* %51, i64 %53
  %55 = load %"class.blink::Member.3733"*, %"class.blink::Member.3733"** %47, align 8
  %56 = getelementptr inbounds %"class.blink::Member.3733", %"class.blink::Member.3733"* %55, i64 %53
  %57 = icmp ne %"class.blink::Member.3733"* %56, null
  %58 = icmp ne %"class.blink::Member.3733"* %54, null
  %59 = and i1 %58, %57
  br i1 %59, label %60, label %85, !prof !19

60:                                               ; preds = %41
  %61 = load i32, i32* %7, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::Member.3733", %"class.blink::Member.3733"* %51, i64 %62
  %64 = bitcast %"class.blink::Member.3733"* %56 to i8*
  %65 = bitcast %"class.blink::Member.3733"* %54 to i8*
  %66 = ptrtoint %"class.blink::Member.3733"* %63 to i64
  %67 = ptrtoint %"class.blink::Member.3733"* %54 to i64
  %68 = sub i64 %66, %67
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %64, i8* nonnull %65, i64 %68) #22
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %85, label %70

70:                                               ; preds = %60
  %71 = ashr exact i64 %68, 3
  br label %72

72:                                               ; preds = %82, %70
  %73 = phi i64 [ %75, %82 ], [ %71, %70 ]
  %74 = phi %"class.blink::Member.3733"* [ %83, %82 ], [ %56, %70 ]
  %75 = add i64 %73, -1
  %76 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %72
  %79 = bitcast %"class.blink::Member.3733"* %74 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %80) #22
  br label %82

82:                                               ; preds = %78, %72
  %83 = getelementptr inbounds %"class.blink::Member.3733", %"class.blink::Member.3733"* %74, i64 1
  %84 = icmp eq i64 %75, 0
  br i1 %84, label %85, label %72

85:                                               ; preds = %82, %41, %60
  %86 = load i32, i32* %7, align 4
  store i32 %86, i32* %5, align 4
  br label %87

87:                                               ; preds = %2, %85
  ret %"class.WTF::Vector.3730"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3730"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.3730", %"class.WTF::Vector.3730"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !19

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.3730", %"class.WTF::Vector.3730"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.3733"*, %"class.blink::Member.3733"** %8, align 8
  %10 = icmp eq %"class.blink::Member.3733"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_23NameSourceRelatedObjectEEEEEmm(i64 %11) #22
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.4118"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #22
  %16 = ptrtoint %"class.blink::HeapVectorBacking.4118"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.3730"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.4118", %"class.blink::HeapVectorBacking.4118"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #22
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.3733"*, %"class.blink::Member.3733"** %8, align 8
  %26 = icmp eq %"class.blink::Member.3733"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.3733"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #22
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #22
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #22
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #22
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.42, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.43, i64 0, i64 0)) #22
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #22
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3730"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3730"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.3730"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3730", %"class.WTF::Vector.3730"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.3730"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.3730", %"class.WTF::Vector.3730"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #22
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #22
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_23NameSourceRelatedObjectEEEEEmm(i64 %14) #22
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.4118"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #22
  %18 = ptrtoint %"class.blink::HeapVectorBacking.4118"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.3730", %"class.WTF::Vector.3730"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.3733"*, %"class.blink::Member.3733"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.3730", %"class.WTF::Vector.3730"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.4118"* %17, null
  %23 = icmp ne %"class.blink::Member.3733"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.3733"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !19

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.3730"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.4118", %"class.blink::HeapVectorBacking.4118"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #22
  %33 = bitcast %"class.WTF::Vector.3730"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #22
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #22
  %42 = bitcast %"class.WTF::Vector.3730"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.3730", %"class.WTF::Vector.3730"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.4118", %"class.blink::HeapVectorBacking.4118"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #22
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_23NameSourceRelatedObjectEEEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #22
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #22
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.44, i64 0, i64 0), i8* %11, i8* %12) #22
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.190, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #22
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #22
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #22
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.4118"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #22
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #22
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i64 0, i64 0), i8* %11, i8* %12) #22
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.191, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #22
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #22
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #22
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.4118"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.4118"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #22
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #22
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #22
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([187 x i8], [187 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_23NameSourceRelatedObjectEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.3459"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS3_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.3725"*, %"class.blink::AXObject"** dereferenceable(8), %"class.blink::AXObject"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %4, align 8
  %6 = icmp eq %"class.blink::Member.3459"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.3459"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.3725"* %0, %"class.blink::Member.3459"* null)
  %9 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.3459"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::AXObject"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %40, align 8
  %42 = icmp eq %"class.blink::AXObject"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::AXObject"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::AXObject"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.3459"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.3459"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::AXObject"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::AXObject"* %59, inttoptr (i64 -1 to %"class.blink::AXObject"*)
  %67 = select i1 %66, %"class.blink::Member.3459"* %60, %"class.blink::Member.3459"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %73, align 8
  %75 = icmp eq %"class.blink::AXObject"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.3459"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.3459"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #22
  %80 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.3459"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %2, align 8
  %89 = ptrtoint %"class.blink::AXObject"* %88 to i64
  %90 = bitcast %"class.blink::Member.3459"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::AXObject"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #22
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.3459"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #22
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.3725", %"class.WTF::HashTable.3725"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.3459"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_8AXObjectEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.3725"* %0, %"class.blink::Member.3459"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.3459"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.3459"*, i8 } undef, %"class.blink::Member.3459"* %117, 0
  %119 = insertvalue { %"class.blink::Member.3459"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.3459"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::NameSourceRelatedObject"* @_ZN5blink25MakeGarbageCollectedTraitINS_23NameSourceRelatedObjectEE4CallIJRPNS_8AXObjectERN3WTF6StringEEEEPS1_DpOT_(%"class.blink::AXObject"** dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_23NameSourceRelatedObjectEEEPhm(i64 16) #22
  %4 = bitcast i8* %3 to %"class.blink::NameSourceRelatedObject"*
  %5 = bitcast %"class.blink::AXObject"** %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %31

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #22
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %15
  tail call void @llvm.trap() #22
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %31

27:                                               ; preds = %2
  %28 = bitcast i8* %3 to i64*
  store i64 %6, i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %3, i64 8
  %30 = bitcast i8* %29 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %30, align 8
  br label %61

31:                                               ; preds = %10, %25
  %32 = bitcast i8* %3 to i64*
  store i64 %6, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %3, i64 8
  %34 = bitcast i8* %33 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %34, align 8
  %35 = load atomic i32, i32* %11 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %50

40:                                               ; preds = %31
  %41 = zext i32 %39 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #22
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !3

47:                                               ; preds = %40
  tail call void @llvm.trap() #22
  unreachable

48:                                               ; preds = %40
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %38, align 4
  br label %50

50:                                               ; preds = %48, %31
  %51 = phi i32 [ %49, %48 ], [ %39, %31 ]
  %52 = load atomic i32, i32* %11 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  %56 = add i32 %51, -1
  store i32 %56, i32* %38, align 4
  br label %57

57:                                               ; preds = %55, %50
  %58 = phi i32 [ %56, %55 ], [ %51, %50 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #22
  br label %61

61:                                               ; preds = %27, %57, %60
  %62 = getelementptr inbounds i8, i8* %3, i64 -4
  %63 = bitcast i8* %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = or i16 %64, 1
  store atomic i16 %65, i16* %63 release, align 2
  ret %"class.blink::NameSourceRelatedObject"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_23NameSourceRelatedObjectEEEPhm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #22
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #22
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_23NameSourceRelatedObjectEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_23NameSourceRelatedObjectEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_23NameSourceRelatedObjectEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #22
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23NameSourceRelatedObjectEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_23NameSourceRelatedObjectEE8FinalizeEPv(i8*) #2 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 8
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #22
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_23NameSourceRelatedObjectEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i64 0, i64 0), i8 1 }
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.3730"*, %"class.blink::NameSourceRelatedObject"** dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3730", %"class.WTF::Vector.3730"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3730", %"class.WTF::Vector.3730"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3730"* %0, i32 %14) #22
  %15 = getelementptr inbounds %"class.WTF::Vector.3730", %"class.WTF::Vector.3730"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.3733"*, %"class.blink::Member.3733"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.3733", %"class.blink::Member.3733"* %16, i64 %18
  %20 = bitcast %"class.blink::NameSourceRelatedObject"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.3733"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #22
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.368"*, %"class.blink::Member.343"* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %6, align 8
  %8 = icmp ugt %"class.blink::Member.343"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %7, i64 %10
  %12 = icmp ugt %"class.blink::Member.343"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.368"* %0, i32 %22) #22
  %23 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::Member.343"* %1 to i64
  %26 = ptrtoint %"class.blink::Member.343"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.368"* %0, i32 %37) #22
  %38 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::Member.343"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::Member.343"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %41, i64 %44
  %46 = bitcast %"class.blink::Member.343"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::Member.343"* %45 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %40
  %52 = inttoptr i64 %47 to i8*
  %53 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #22
  br label %54

54:                                               ; preds = %40, %51
  %55 = load i32, i32* %3, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.368"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !19

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %8, align 8
  %10 = icmp eq %"class.blink::Member.343"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64 %11) #22
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.4143"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #22
  %16 = ptrtoint %"class.blink::HeapVectorBacking.4143"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.368"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.4143", %"class.blink::HeapVectorBacking.4143"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #22
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %8, align 8
  %26 = icmp eq %"class.blink::Member.343"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.343"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #22
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #22
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #22
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #22
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.42, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.43, i64 0, i64 0)) #22
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #22
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.368"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.368"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.368"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.368"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #22
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #22
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64 %14) #22
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.4143"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #22
  %18 = ptrtoint %"class.blink::HeapVectorBacking.4143"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.4143"* %17, null
  %23 = icmp ne %"class.blink::Member.343"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.343"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !19

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.368"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.4143", %"class.blink::HeapVectorBacking.4143"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #22
  %33 = bitcast %"class.WTF::Vector.368"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #22
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #22
  %42 = bitcast %"class.WTF::Vector.368"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.4143", %"class.blink::HeapVectorBacking.4143"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #22
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #22
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #22
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.44, i64 0, i64 0), i8* %11, i8* %12) #22
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.190, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #22
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #22
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #22
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.4143"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #22
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #22
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i64 0, i64 0), i8* %11, i8* %12) #22
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.191, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #22
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #22
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #22
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #22
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7ElementEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #22
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking.4143"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking.4143"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.343"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.343"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #22
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.426"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.426", %"class.WTF::HashTable.426"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #22
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.46, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.47, i64 0, i64 0)) #22
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #22
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 3
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #22
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #22
  %30 = bitcast i8* %29 to %"class.WTF::AtomicString"*
  %31 = call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.426"* %0, %"class.WTF::AtomicString"* %30, i32 %17, %"class.WTF::AtomicString"* null) #22
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.426"*, %"class.WTF::AtomicString"*, i32, %"class.WTF::AtomicString"*) local_unnamed_addr #2 comdat align 2 {
  %5 = ptrtoint %"class.WTF::AtomicString"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.426", %"class.WTF::HashTable.426"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.426", %"class.WTF::HashTable.426"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.426"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %17 = ptrtoint %"class.WTF::AtomicString"* %16 to i64
  br label %61

18:                                               ; preds = %157
  %19 = bitcast %"class.WTF::HashTable.426"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %158, %18 ]
  %23 = phi %"class.WTF::AtomicString"* [ null, %10 ], [ %161, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %159, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"class.WTF::AtomicString"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %57, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi i64 [ 0, %29 ], [ %53, %52 ]
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %25, i64 %32
  %34 = bitcast %"class.WTF::AtomicString"* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8* %35 to %"class.WTF::StringImpl"*
  %37 = ptrtoint i8* %35 to i64
  switch i64 %37, label %38 [
    i64 -1, label %52
    i64 0, label %52
  ]

38:                                               ; preds = %31
  %39 = getelementptr inbounds i8, i8* %35, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = bitcast i8* %35 to i32*
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %38
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %38
  %49 = phi i32 [ %47, %46 ], [ %45, %38 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #22
  br label %52

52:                                               ; preds = %51, %48, %31, %31
  %53 = add nuw nsw i64 %32, 1
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %55, label %31

55:                                               ; preds = %52, %27
  %56 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #22
  br label %57

57:                                               ; preds = %20, %55
  %58 = getelementptr inbounds %"class.WTF::HashTable.426", %"class.WTF::HashTable.426"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, -2147483648
  store i32 %60, i32* %58, align 8
  ret %"class.WTF::AtomicString"* %23

61:                                               ; preds = %13, %157
  %62 = phi i64 [ %17, %13 ], [ %158, %157 ]
  %63 = phi i32 [ %7, %13 ], [ %159, %157 ]
  %64 = phi %"class.WTF::AtomicString"* [ %16, %13 ], [ %160, %157 ]
  %65 = phi %"class.WTF::AtomicString"* [ null, %13 ], [ %161, %157 ]
  %66 = phi i32 [ 0, %13 ], [ %162, %157 ]
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 %67
  %69 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = ptrtoint %"class.WTF::StringImpl"* %70 to i64
  switch i64 %71, label %72 [
    i64 -1, label %157
    i64 0, label %157
  ]

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = lshr i32 %74, 8
  %76 = and i32 %75, %14
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 %77
  %79 = ptrtoint %"class.WTF::AtomicString"* %78 to i64
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %78, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %99, label %83

83:                                               ; preds = %72
  %84 = xor i32 %75, -1
  %85 = lshr i32 %74, 31
  %86 = add nsw i32 %85, %84
  %87 = shl i32 %86, 12
  %88 = xor i32 %87, %86
  %89 = lshr i32 %88, 7
  %90 = xor i32 %89, %88
  %91 = shl i32 %90, 2
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 20
  %94 = xor i32 %93, %92
  %95 = or i32 %94, 1
  %96 = zext i32 %95 to i64
  br label %105

97:                                               ; preds = %117
  %98 = ptrtoint %"class.WTF::AtomicString"* %123 to i64
  br label %99

99:                                               ; preds = %97, %72
  %100 = phi i64 [ %79, %72 ], [ %98, %97 ]
  %101 = phi %"class.WTF::AtomicString"* [ null, %72 ], [ %118, %97 ]
  %102 = icmp eq %"class.WTF::AtomicString"* %101, null
  %103 = ptrtoint %"class.WTF::AtomicString"* %101 to i64
  %104 = select i1 %102, i64 %100, i64 %103
  br label %128

105:                                              ; preds = %117, %83
  %106 = phi %"class.WTF::AtomicString"* [ null, %83 ], [ %118, %117 ]
  %107 = phi %"class.WTF::StringImpl"* [ %81, %83 ], [ %126, %117 ]
  %108 = phi i64 [ %79, %83 ], [ %124, %117 ]
  %109 = phi %"class.WTF::AtomicString"* [ %78, %83 ], [ %123, %117 ]
  %110 = phi i64 [ %77, %83 ], [ %122, %117 ]
  %111 = phi i64 [ 0, %83 ], [ %120, %117 ]
  %112 = bitcast %"class.WTF::AtomicString"* %109 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, inttoptr (i64 -1 to i8*)
  br i1 %114, label %117, label %115

115:                                              ; preds = %105
  %116 = icmp eq %"class.WTF::StringImpl"* %107, %70
  br i1 %116, label %128, label %117

117:                                              ; preds = %115, %105
  %118 = phi %"class.WTF::AtomicString"* [ %106, %115 ], [ %109, %105 ]
  %119 = icmp eq i64 %111, 0
  %120 = select i1 %119, i64 %96, i64 %111
  %121 = add i64 %120, %110
  %122 = and i64 %121, %15
  %123 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 %122
  %124 = ptrtoint %"class.WTF::AtomicString"* %123 to i64
  %125 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %123, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %97, label %105

128:                                              ; preds = %115, %99
  %129 = phi i64 [ %104, %99 ], [ %108, %115 ]
  %130 = inttoptr i64 %129 to %"class.WTF::AtomicString"*
  %131 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %130, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #22
  br label %147

147:                                              ; preds = %128, %143, %146
  %148 = bitcast %"class.WTF::AtomicString"* %68 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = inttoptr i64 %129 to i64*
  store i64 %149, i64* %150, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %151 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %152 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %151, i64 %67
  %153 = icmp eq %"class.WTF::AtomicString"* %152, %3
  %154 = select i1 %153, %"class.WTF::AtomicString"* %130, %"class.WTF::AtomicString"* %65
  %155 = load i32, i32* %6, align 8
  %156 = ptrtoint %"class.WTF::AtomicString"* %151 to i64
  br label %157

157:                                              ; preds = %61, %61, %147
  %158 = phi i64 [ %62, %61 ], [ %156, %147 ], [ %62, %61 ]
  %159 = phi i32 [ %63, %61 ], [ %155, %147 ], [ %63, %61 ]
  %160 = phi %"class.WTF::AtomicString"* [ %64, %61 ], [ %151, %147 ], [ %64, %61 ]
  %161 = phi %"class.WTF::AtomicString"* [ %65, %61 ], [ %154, %147 ], [ %65, %61 ]
  %162 = add i32 %66, 1
  %163 = icmp eq i32 %162, %159
  br i1 %163, label %18, label %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.426"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.426", %"class.WTF::HashTable.426"* %0, i64 0, i32 0
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %4, align 8
  %6 = icmp eq %"class.WTF::AtomicString"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.426"* %0, %"class.WTF::AtomicString"* null)
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::AtomicString"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.426", %"class.WTF::HashTable.426"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 %22
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"class.WTF::StringImpl"* [ %25, %27 ], [ %60, %52 ]
  %43 = phi %"class.WTF::AtomicString"* [ %23, %27 ], [ %58, %52 ]
  %44 = phi %"class.WTF::AtomicString"* [ null, %27 ], [ %53, %52 ]
  %45 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %46 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %47 = bitcast %"class.WTF::AtomicString"* %43 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, inttoptr (i64 -1 to i8*)
  br i1 %49, label %52, label %50

50:                                               ; preds = %41
  %51 = icmp eq %"class.WTF::StringImpl"* %42, %17
  br i1 %51, label %125, label %52

52:                                               ; preds = %41, %50
  %53 = phi %"class.WTF::AtomicString"* [ %44, %50 ], [ %43, %41 ]
  %54 = icmp eq i64 %46, 0
  %55 = select i1 %54, i64 %40, i64 %46
  %56 = add i64 %55, %45
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 %57
  %59 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"class.WTF::AtomicString"* %53, null
  br i1 %63, label %72, label %64

64:                                               ; preds = %62
  %65 = bitcast %"class.WTF::AtomicString"* %53 to i64*
  store i64 0, i64* %65, align 8
  %66 = getelementptr inbounds %"class.WTF::HashTable.426", %"class.WTF::HashTable.426"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  br label %72

72:                                               ; preds = %10, %62, %64
  %73 = phi %"class.WTF::AtomicString"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  %74 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #22
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !3

91:                                               ; preds = %82
  tail call void @llvm.trap() #22
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %94

94:                                               ; preds = %92, %77, %72
  %95 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %96 = bitcast %"class.WTF::AtomicString"* %73 to i64*
  %97 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %73, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  store i64 %95, i64* %96, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #22
  br label %113

113:                                              ; preds = %94, %109, %112
  %114 = getelementptr inbounds %"class.WTF::HashTable.426", %"class.WTF::HashTable.426"* %0, i64 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %114, align 4
  %117 = getelementptr inbounds %"class.WTF::HashTable.426", %"class.WTF::HashTable.426"* %0, i64 0, i32 3
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, %116
  %120 = shl i32 %119, 1
  %121 = load i32, i32* %12, align 8
  %122 = icmp ult i32 %120, %121
  br i1 %122, label %125, label %123

123:                                              ; preds = %113
  %124 = tail call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.426"* %0, %"class.WTF::AtomicString"* %73)
  br label %125

125:                                              ; preds = %50, %113, %123
  %126 = phi i8 [ 1, %113 ], [ 1, %123 ], [ 0, %50 ]
  %127 = phi %"class.WTF::AtomicString"* [ %73, %113 ], [ %124, %123 ], [ %43, %50 ]
  %128 = insertvalue { %"class.WTF::AtomicString"*, i8 } undef, %"class.WTF::AtomicString"* %127, 0
  %129 = insertvalue { %"class.WTF::AtomicString"*, i8 } %128, i8 %126, 1
  ret { %"class.WTF::AtomicString"*, i8 } %129
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.426"*, %"class.WTF::AtomicString"*) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.426", %"class.WTF::HashTable.426"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.426", %"class.WTF::HashTable.426"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #22
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #22
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0), i8* %22, i8* %23) #22
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.46, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #22
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #22
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #22
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #22
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #22
  %36 = bitcast i8* %35 to %"class.WTF::AtomicString"*
  %37 = call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.426"* %0, %"class.WTF::AtomicString"* %36, i32 %32, %"class.WTF::AtomicString"* %1) #22
  ret %"class.WTF::AtomicString"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.3082"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3087"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #22
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #22
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.181, i64 0, i64 0), i8* %14, i8* %15) #22
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.42, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #22
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #22
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #22
  %23 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %24, i64 %25
  ret %"class.blink::Member.3082"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.3087"*, %"class.blink::AXObject"** dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3087"* %0, i32 %14) #22
  %15 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %16, i64 %18
  %20 = bitcast %"class.blink::AXObject"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.3082"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #22
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #22
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #22
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.181, i64 0, i64 0), i8* %14, i8* %15) #22
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.42, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #22
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #22
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #22
  %23 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.3087"*, %"class.blink::Member.3082"* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %6, align 8
  %8 = icmp ugt %"class.blink::Member.3082"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %7, i64 %10
  %12 = icmp ugt %"class.blink::Member.3082"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3087"* %0, i32 %22) #22
  %23 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::Member.3082"* %1 to i64
  %26 = ptrtoint %"class.blink::Member.3082"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3087"* %0, i32 %37) #22
  %38 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::Member.3082"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::Member.3082"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %41, i64 %44
  %46 = bitcast %"class.blink::Member.3082"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::Member.3082"* %45 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %40
  %52 = inttoptr i64 %47 to i8*
  %53 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #22
  br label %54

54:                                               ; preds = %40, %51
  %55 = load i32, i32* %3, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j(%"class.WTF::Vector.3087"*, %"class.blink::Member.3082"*, i32) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %43

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %14, align 8
  %16 = icmp ugt %"class.blink::Member.3082"* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %15, i64 %18
  %20 = icmp ugt %"class.blink::Member.3082"* %19, %1
  br i1 %20, label %29, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3087"* %0, i32 %28) #22
  br label %43

29:                                               ; preds = %17
  %30 = ptrtoint %"class.blink::Member.3082"* %1 to i64
  %31 = ptrtoint %"class.blink::Member.3082"* %15 to i64
  %32 = sub i64 %30, %31
  %33 = ashr exact i64 %32, 3
  %34 = lshr i32 %11, 2
  %35 = add nuw i32 %11, 1
  %36 = add i32 %35, %34
  %37 = icmp ugt i32 %36, 4
  %38 = select i1 %37, i32 %36, i32 4
  %39 = icmp ugt i32 %38, %9
  %40 = select i1 %39, i32 %38, i32 %9
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3087"* %0, i32 %40) #22
  %41 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %14, align 8
  %42 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %41, i64 %33
  br label %43

43:                                               ; preds = %29, %21, %3
  %44 = phi %"class.blink::Member.3082"* [ %1, %3 ], [ %1, %21 ], [ %42, %29 ]
  %45 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #22
  %46 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %46, align 8
  %47 = load i32, i32* %7, align 4
  %48 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48)
  %49 = icmp ult i32 %9, %47
  br i1 %49, label %51, label %50

50:                                               ; preds = %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* null, i8** %46, align 8
  br label %60

51:                                               ; preds = %43
  %52 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #22
  %53 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %47) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.211, i64 0, i64 0), i8* %52, i8* %53) #22
  %54 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* %55, i8** %46, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.42, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #22
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #22
  br label %60

60:                                               ; preds = %50, %51, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #22
  %61 = getelementptr inbounds %"class.WTF::Vector.3087", %"class.WTF::Vector.3087"* %0, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::Member.3082"*, %"class.blink::Member.3082"** %61, align 8
  %63 = load i32, i32* %7, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %62, i64 %64
  %66 = icmp ne %"class.blink::Member.3082"* %65, null
  %67 = icmp ne %"class.blink::Member.3082"* %44, null
  %68 = and i1 %67, %66
  br i1 %68, label %69, label %88, !prof !19

69:                                               ; preds = %60
  %70 = zext i32 %2 to i64
  %71 = bitcast %"class.blink::Member.3082"* %65 to i8*
  %72 = bitcast %"class.blink::Member.3082"* %44 to i8*
  %73 = shl nuw nsw i64 %70, 3
  call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %71, i8* nonnull %72, i64 %73) #22
  %74 = icmp eq i32 %2, 0
  br i1 %74, label %88, label %75

75:                                               ; preds = %69, %85
  %76 = phi i64 [ %78, %85 ], [ %70, %69 ]
  %77 = phi %"class.blink::Member.3082"* [ %86, %85 ], [ %65, %69 ]
  %78 = add nsw i64 %76, -1
  %79 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %75
  %82 = bitcast %"class.blink::Member.3082"* %77 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %83) #22
  br label %85

85:                                               ; preds = %81, %75
  %86 = getelementptr inbounds %"class.blink::Member.3082", %"class.blink::Member.3082"* %77, i64 1
  %87 = icmp eq i64 %78, 0
  br i1 %87, label %88, label %75

88:                                               ; preds = %85, %60, %69
  store i32 %9, i32* %7, align 4
  ret void
}

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #6

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #6

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS4_EEvOT_(%"class.WTF::Vector.3835"*, %"class.blink::AXObject"** dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3835", %"class.WTF::Vector.3835"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3835", %"class.WTF::Vector.3835"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3835"* %0, i32 %14) #22
  %15 = getelementptr inbounds %"class.WTF::Vector.3835", %"class.WTF::Vector.3835"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %16, i64 %18
  %20 = bitcast %"class.blink::AXObject"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.3459"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #22
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3835"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.3835", %"class.WTF::Vector.3835"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !19

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.3835", %"class.WTF::Vector.3835"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %8, align 8
  %10 = icmp eq %"class.blink::Member.3459"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8AXObjectEEEEEmm(i64 %11) #22
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.4150"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8AXObjectEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %14) #22
  %16 = ptrtoint %"class.blink::HeapVectorBacking.4150"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.3835"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.4150", %"class.blink::HeapVectorBacking.4150"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #22
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %8, align 8
  %26 = icmp eq %"class.blink::Member.3459"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.3459"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #22
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #22
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #22
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #22
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.42, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.43, i64 0, i64 0)) #22
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #22
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3835"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3835"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.3835"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3835", %"class.WTF::Vector.3835"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.3835"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.3835", %"class.WTF::Vector.3835"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #22
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #22
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8AXObjectEEEEEmm(i64 %14) #22
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.4150"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8AXObjectEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #22
  %18 = ptrtoint %"class.blink::HeapVectorBacking.4150"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.3835", %"class.WTF::Vector.3835"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.3835", %"class.WTF::Vector.3835"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.4150"* %17, null
  %23 = icmp ne %"class.blink::Member.3459"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.3459"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !19

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.3835"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.4150", %"class.blink::HeapVectorBacking.4150"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #22
  %33 = bitcast %"class.WTF::Vector.3835"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #22
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #22
  %42 = bitcast %"class.WTF::Vector.3835"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.3835", %"class.WTF::Vector.3835"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.4150", %"class.blink::HeapVectorBacking.4150"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #22
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8AXObjectEEEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #22
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #22
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.44, i64 0, i64 0), i8* %11, i8* %12) #22
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.190, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #22
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #22
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #22
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.4150"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8AXObjectEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #22
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #22
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i64 0, i64 0), i8* %11, i8* %12) #22
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.191, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #22
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #22
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #22
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.4150"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.4150"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #22
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #22
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #22
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8AXObjectEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8AXObjectEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8AXObjectEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #22
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_8AXObjectEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8AXObjectEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.3459"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.3459"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #22
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8AXObjectEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.3459"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3835"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #22
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3835", %"class.WTF::Vector.3835"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #22
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.181, i64 0, i64 0), i8* %14, i8* %15) #22
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.42, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #22
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #22
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #22
  %23 = getelementptr inbounds %"class.WTF::Vector.3835", %"class.WTF::Vector.3835"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %24, i64 %25
  ret %"class.blink::Member.3459"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.3835"*, %"class.blink::AXObject"** dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3835", %"class.WTF::Vector.3835"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3835", %"class.WTF::Vector.3835"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3835"* %0, i32 %14) #22
  %15 = getelementptr inbounds %"class.WTF::Vector.3835", %"class.WTF::Vector.3835"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.3459"*, %"class.blink::Member.3459"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.3459", %"class.blink::Member.3459"* %16, i64 %18
  %20 = bitcast %"class.blink::AXObject"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.3459"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #22
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.3839"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #2 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #22
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #22
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #22
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %37
  tail call void @llvm.trap() #22
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #22
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #22
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.3839"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %8) #22
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #22
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %8) #22
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #22
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.187, i64 0, i64 0), i8* %26, i8* %27) #22
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.188, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #22
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #22
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #22
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #22
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #22
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.189, i64 0, i64 0), i8* %41, i8* %42) #22
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.188, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #22
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #22
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #22
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend.3839"*, i8*) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.4050", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #22
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #22
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #22
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.4050"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #22
  %47 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #22
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4050"* nonnull %4, i8* %48) #22
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.4049"* nonnull %49, i8* %1) #22
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.4050"* nonnull %4, i8* %52) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #22
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %6) #22
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.4049"* nonnull %53, i8* %56) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend.3839"*, i16*) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.4050", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #22
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #22
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #22
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.4050"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #22
  %47 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #22
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4050"* nonnull %4, i8* %48) #22
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4049"* nonnull %49, i16* %1) #22
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4050"* nonnull %4, i16* %52) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #22
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %6) #22
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4049"* nonnull %53, i16* %56) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.3841"*, %"class.WTF::StringAppend.3839"* byval(%"class.WTF::StringAppend.3839") align 8, i8*) unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.3841", %"class.WTF::StringAppend.3841"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #22
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #22
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %3
  %26 = getelementptr inbounds %"class.WTF::StringAppend.3841", %"class.WTF::StringAppend.3841"* %0, i64 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %1, i64 0, i32 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8** %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringAppend.3839", %"class.WTF::StringAppend.3839"* %1, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.WTF::StringAppend.3841", %"class.WTF::StringAppend.3841"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %54

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #22
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !3

49:                                               ; preds = %40
  tail call void @llvm.trap() #22
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %54

52:                                               ; preds = %25
  %53 = getelementptr inbounds %"class.WTF::StringAppend.3841", %"class.WTF::StringAppend.3841"* %0, i64 0, i32 1
  store i8* %2, i8** %53, align 8
  br label %67

54:                                               ; preds = %35, %50
  %55 = getelementptr inbounds %"class.WTF::StringAppend.3841", %"class.WTF::StringAppend.3841"* %0, i64 0, i32 1
  store i8* %2, i8** %55, align 8
  %56 = load atomic i32, i32* %36 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #22
  br label %67

67:                                               ; preds = %52, %66, %63
  br i1 %7, label %81, label %68

68:                                               ; preds = %67
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #22
  br label %81

81:                                               ; preds = %67, %77, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.3841"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.4050", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.3841", %"class.WTF::StringAppend.3841"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.4050"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #22
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4050", %"class.WTF::StringTypeAdapter.4050"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.3841", %"class.WTF::StringAppend.3841"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.4050"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4050"* nonnull %4, i8* %14) #22
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.3839"* %9) #22
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #22
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.3839"* %9) #22
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #22
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.187, i64 0, i64 0), i8* %25, i8* %26) #22
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.188, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #22
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #22
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #22
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #22
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #22
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #22
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.189, i64 0, i64 0), i8* %41, i8* %42) #22
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #22
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.188, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #22
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #22
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #22
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #22
  ret i32 %17
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind }
attributes #12 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone }
attributes #17 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #20 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #21 = { noreturn nounwind }
attributes #22 = { nounwind }
attributes #23 = { builtin nounwind }
attributes #24 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_: argument 0"}
!6 = distinct !{!6, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK3WTF7HashMapIN5blink13QualifiedNameEN4base17RepeatingCallbackIFvPNS1_8AXObjectEPN2ui10AXNodeDataERKNS_12AtomicStringEEEENS1_17QualifiedNameHashENS_10HashTraitsIS2_EENSG_ISE_EENS_18PartitionAllocatorEE2atERKS2_: argument 0"}
!9 = distinct !{!9, !"_ZNK3WTF7HashMapIN5blink13QualifiedNameEN4base17RepeatingCallbackIFvPNS1_8AXObjectEPN2ui10AXNodeDataERKNS_12AtomicStringEEEENS1_17QualifiedNameHashENS_10HashTraitsIS2_EENSG_ISE_EENS_18PartitionAllocatorEE2atERKS2_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN3WTF17GenericHashTraitsIN4base17RepeatingCallbackIFvPN5blink8AXObjectEPN2ui10AXNodeDataERKNS_12AtomicStringEEEEE10EmptyValueEv: argument 0"}
!12 = distinct !{!12, !"_ZN3WTF17GenericHashTraitsIN4base17RepeatingCallbackIFvPN5blink8AXObjectEPN2ui10AXNodeDataERKNS_12AtomicStringEEEEE10EmptyValueEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK3WTF7HashMapIN5blink13QualifiedNameEN4base17RepeatingCallbackIFvPNS1_8AXObjectEPN2ui10AXNodeDataERKNS_12AtomicStringEEEENS1_17QualifiedNameHashENS_10HashTraitsIS2_EENSG_ISE_EENS_18PartitionAllocatorEE2atERKS2_: argument 0"}
!15 = distinct !{!15, !"_ZNK3WTF7HashMapIN5blink13QualifiedNameEN4base17RepeatingCallbackIFvPNS1_8AXObjectEPN2ui10AXNodeDataERKNS_12AtomicStringEEEENS1_17QualifiedNameHashENS_10HashTraitsIS2_EENSG_ISE_EENS_18PartitionAllocatorEE2atERKS2_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN3WTF17GenericHashTraitsIN4base17RepeatingCallbackIFvPN5blink8AXObjectEPN2ui10AXNodeDataERKNS_12AtomicStringEEEEE10EmptyValueEv: argument 0"}
!18 = distinct !{!18, !"_ZN3WTF17GenericHashTraitsIN4base17RepeatingCallbackIFvPN5blink8AXObjectEPN2ui10AXNodeDataERKNS_12AtomicStringEEEEE10EmptyValueEv"}
!19 = !{!"branch_weights", i32 2000, i32 1}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNSt3__19make_pairIRNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS9_IT0_E4typeEEEOSA_OSD_: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__19make_pairIRNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS9_IT0_E4typeEEEOSA_OSD_"}
!23 = !{!"branch_weights", i32 1, i32 1048575}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK5blink8AXObject23UnignoredAncestorsBeginEv: argument 0"}
!26 = distinct !{!26, !"_ZNK5blink8AXObject23UnignoredAncestorsBeginEv"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK5blink8AXObject23UnignoredAncestorsBeginEv: argument 0"}
!29 = distinct !{!29, !"_ZNK5blink8AXObject23UnignoredAncestorsBeginEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__17find_ifIN5blink8AXObject17AncestorsIteratorEZNKS2_30GetAriaSpellingOrGrammarMarkerEvE3$_1EET_S5_S5_T0_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__17find_ifIN5blink8AXObject17AncestorsIteratorEZNKS2_30GetAriaSpellingOrGrammarMarkerEvE3$_1EET_S5_S5_T0_"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNK5blink8AXObject23UnignoredAncestorsBeginEv: argument 0"}
!35 = distinct !{!35, !"_ZNK5blink8AXObject23UnignoredAncestorsBeginEv"}
!36 = distinct !{!36, !37}
!37 = !{!"llvm.loop.unroll.disable"}
!38 = distinct !{!38, !37}
