; ModuleID = 'gen/third_party/blink/public/mojom/worker/shared_worker.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/worker/shared_worker.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::SharedWorkerAsyncWaiter" = type { %"class.blink::mojom::blink::SharedWorker"* }
%"class.blink::mojom::blink::SharedWorker" = type { i32 (...)** }
%"class.blink::mojom::blink::SharedWorkerInterceptorForTesting" = type { %"class.blink::mojom::blink::SharedWorker" }
%"class.blink::MessagePortDescriptor" = type { %"class.mojo::ScopedHandleBase", %"class.base::UnguessableToken", i64 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }

$_ZN5blink5mojom5blink12SharedWorkerD2Ev = comdat any

$_ZN5blink5mojom5blink33SharedWorkerInterceptorForTestingD0Ev = comdat any

@_ZTVN5blink5mojom5blink33SharedWorkerInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::SharedWorker"*)* @_ZN5blink5mojom5blink12SharedWorkerD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"*)* @_ZN5blink5mojom5blink33SharedWorkerInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"*, i32, %"class.blink::MessagePortDescriptor"*)* @_ZN5blink5mojom5blink33SharedWorkerInterceptorForTesting7ConnectEiNS_21MessagePortDescriptorE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"*)* @_ZN5blink5mojom5blink33SharedWorkerInterceptorForTesting9TerminateEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom5blink23SharedWorkerAsyncWaiterC1EPNS1_12SharedWorkerE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::SharedWorkerAsyncWaiter"*, %"class.blink::mojom::blink::SharedWorker"*), void (%"class.blink::mojom::blink::SharedWorkerAsyncWaiter"*, %"class.blink::mojom::blink::SharedWorker"*)* @_ZN5blink5mojom5blink23SharedWorkerAsyncWaiterC2EPNS1_12SharedWorkerE
@_ZN5blink5mojom5blink23SharedWorkerAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::SharedWorkerAsyncWaiter"*), void (%"class.blink::mojom::blink::SharedWorkerAsyncWaiter"*)* @_ZN5blink5mojom5blink23SharedWorkerAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink33SharedWorkerInterceptorForTesting7ConnectEiNS_21MessagePortDescriptorE(%"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"*, i32, %"class.blink::MessagePortDescriptor"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::MessagePortDescriptor", align 8
  %5 = bitcast %"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"* %0 to %"class.blink::mojom::blink::SharedWorker"* (%"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::SharedWorker"* (%"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"*)**, %"class.blink::mojom::blink::SharedWorker"* (%"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::SharedWorker"* (%"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"*)*, %"class.blink::mojom::blink::SharedWorker"* (%"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"*)** %6, i64 4
  %8 = load %"class.blink::mojom::blink::SharedWorker"* (%"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"*)*, %"class.blink::mojom::blink::SharedWorker"* (%"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::SharedWorker"* %8(%"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"* %0) #7
  call void @_ZN5blink21MessagePortDescriptorC1EOS0_(%"class.blink::MessagePortDescriptor"* nonnull %4, %"class.blink::MessagePortDescriptor"* dereferenceable(32) %2) #7
  %10 = bitcast %"class.blink::mojom::blink::SharedWorker"* %9 to void (%"class.blink::mojom::blink::SharedWorker"*, i32, %"class.blink::MessagePortDescriptor"*)***
  %11 = load void (%"class.blink::mojom::blink::SharedWorker"*, i32, %"class.blink::MessagePortDescriptor"*)**, void (%"class.blink::mojom::blink::SharedWorker"*, i32, %"class.blink::MessagePortDescriptor"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::mojom::blink::SharedWorker"*, i32, %"class.blink::MessagePortDescriptor"*)*, void (%"class.blink::mojom::blink::SharedWorker"*, i32, %"class.blink::MessagePortDescriptor"*)** %11, i64 2
  %13 = load void (%"class.blink::mojom::blink::SharedWorker"*, i32, %"class.blink::MessagePortDescriptor"*)*, void (%"class.blink::mojom::blink::SharedWorker"*, i32, %"class.blink::MessagePortDescriptor"*)** %12, align 8
  call void %13(%"class.blink::mojom::blink::SharedWorker"* %9, i32 %1, %"class.blink::MessagePortDescriptor"* nonnull %4) #7
  call void @_ZN5blink21MessagePortDescriptorD1Ev(%"class.blink::MessagePortDescriptor"* nonnull %4) #7
  ret void
}

declare void @_ZN5blink21MessagePortDescriptorC1EOS0_(%"class.blink::MessagePortDescriptor"*, %"class.blink::MessagePortDescriptor"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink21MessagePortDescriptorD1Ev(%"class.blink::MessagePortDescriptor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink33SharedWorkerInterceptorForTesting9TerminateEv(%"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"* %0 to %"class.blink::mojom::blink::SharedWorker"* (%"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"*)***
  %3 = load %"class.blink::mojom::blink::SharedWorker"* (%"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"*)**, %"class.blink::mojom::blink::SharedWorker"* (%"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::mojom::blink::SharedWorker"* (%"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"*)*, %"class.blink::mojom::blink::SharedWorker"* (%"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"*)** %3, i64 4
  %5 = load %"class.blink::mojom::blink::SharedWorker"* (%"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"*)*, %"class.blink::mojom::blink::SharedWorker"* (%"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.blink::mojom::blink::SharedWorker"* %5(%"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"* %0) #7
  %7 = bitcast %"class.blink::mojom::blink::SharedWorker"* %6 to void (%"class.blink::mojom::blink::SharedWorker"*)***
  %8 = load void (%"class.blink::mojom::blink::SharedWorker"*)**, void (%"class.blink::mojom::blink::SharedWorker"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::mojom::blink::SharedWorker"*)*, void (%"class.blink::mojom::blink::SharedWorker"*)** %8, i64 3
  %10 = load void (%"class.blink::mojom::blink::SharedWorker"*)*, void (%"class.blink::mojom::blink::SharedWorker"*)** %9, align 8
  tail call void %10(%"class.blink::mojom::blink::SharedWorker"* %6) #7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink23SharedWorkerAsyncWaiterC2EPNS1_12SharedWorkerE(%"class.blink::mojom::blink::SharedWorkerAsyncWaiter"* nocapture, %"class.blink::mojom::blink::SharedWorker"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::SharedWorkerAsyncWaiter", %"class.blink::mojom::blink::SharedWorkerAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::SharedWorker"* %1, %"class.blink::mojom::blink::SharedWorker"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink23SharedWorkerAsyncWaiterD2Ev(%"class.blink::mojom::blink::SharedWorkerAsyncWaiter"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink12SharedWorkerD2Ev(%"class.blink::mojom::blink::SharedWorker"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink33SharedWorkerInterceptorForTestingD0Ev(%"class.blink::mojom::blink::SharedWorkerInterceptorForTesting"*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
