; ModuleID = '../../third_party/blink/renderer/core/svg/svg_script_element.cc'
source_filename = "../../third_party/blink/renderer/core/svg/svg_script_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashMap<WTF::AtomicString, blink::SpecificTrustedType, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<blink::SpecificTrustedType>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<WTF::AtomicString, blink::SpecificTrustedType, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<blink::SpecificTrustedType>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.297", i32, [4 x i8], %"class.std::__1::unique_ptr.433", %"class.std::__1::unique_ptr.433", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.443", %"class.std::__1::unique_ptr.449", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.461", %"class.std::__1::unique_ptr.467", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.474", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.300", %"class.std::__1::unique_ptr.306", %"class.std::__1::unique_ptr.312", %"class.std::__1::unique_ptr.318", %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.330", %"class.std::__1::unique_ptr.341", %"class.std::__1::unique_ptr.348", %"class.std::__1::unique_ptr.348", %"class.std::__1::unique_ptr.355", %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.369", %"class.std::__1::unique_ptr.369", %"class.std::__1::unique_ptr.376", %"class.std::__1::unique_ptr.383", %"class.std::__1::unique_ptr.390", %"class.std::__1::unique_ptr.413", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.333" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.333" = type { %"struct.std::__1::__atomic_base.334" }
%"struct.std::__1::__atomic_base.334" = type { %"struct.std::__1::__atomic_base.335" }
%"struct.std::__1::__atomic_base.335" = type { %"struct.std::__1::__cxx_atomic_impl.336" }
%"struct.std::__1::__cxx_atomic_impl.336" = type { %"struct.std::__1::__cxx_atomic_base_impl.337" }
%"struct.std::__1::__cxx_atomic_base_impl.337" = type { i64 }
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.blink::Worklist.344"* }
%"class.blink::Worklist.344" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.333" }
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.blink::Worklist.351"* }
%"class.blink::Worklist.351" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.333" }
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.blink::Worklist.358"* }
%"class.blink::Worklist.358" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.333" }
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.blink::Worklist.365"* }
%"class.blink::Worklist.365" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.333" }
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.blink::Worklist.372"* }
%"class.blink::Worklist.372" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.333" }
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.blink::Worklist.379"* }
%"class.blink::Worklist.379" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.333" }
%"class.std::__1::unique_ptr.383" = type { %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"class.blink::Worklist.386"* }
%"class.blink::Worklist.386" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.333" }
%"class.std::__1::unique_ptr.390" = type { %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.393", %"class.std::__1::__compressed_pair.400", %"class.std::__1::__compressed_pair.405", %"class.std::__1::__compressed_pair.407", [4 x i8] }>
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395", %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { i64 }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { float }
%"class.std::__1::unique_ptr.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.416", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.425" }
%"class.WTF::Vector.425" = type { %"class.WTF::VectorBuffer.426" }
%"class.WTF::VectorBuffer.426" = type { %"class.WTF::VectorBufferBase.427" }
%"class.WTF::VectorBufferBase.427" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.441" }
%"class.WTF::VectorBuffer.441" = type { %"class.WTF::VectorBufferBase.442" }
%"class.WTF::VectorBufferBase.442" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.455" }
%"class.std::__1::unique_ptr.455" = type { %"class.std::__1::__compressed_pair.456" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.457" }
%"struct.std::__1::__compressed_pair_elem.457" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.344"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.351"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.358"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.365"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.372"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.722" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.723" }
%"struct.std::__1::__compressed_pair_elem.723" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.461" = type { %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.463" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.473 }
%class.scoped_refptr.473 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.474" = type { %"struct.std::__1::__atomic_base.475" }
%"struct.std::__1::__atomic_base.475" = type { %"struct.std::__1::__cxx_atomic_impl.476" }
%"struct.std::__1::__cxx_atomic_impl.476" = type { %"struct.std::__1::__cxx_atomic_base_impl.477" }
%"struct.std::__1::__cxx_atomic_base_impl.477" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.295", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.295" = type { %"class.base::RefCounted.296" }
%"class.base::RefCounted.296" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::SVGScriptElement" = type { %"class.blink::SVGElement", %"class.blink::SVGURIReference", %"class.blink::ScriptElementBase", i8, %"class.blink::ParkableString", %"class.blink::Member.57" }
%"class.blink::SVGElement" = type { %"class.blink::Element", %"class.blink::HeapHashSet", %"class.blink::HeapHashMap", %"class.blink::Member.26", %"class.blink::Member.28" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.198", %"class.blink::Member.200", %"class.blink::Member.0", %"class.blink::Member.201", %"class.blink::Member.201", %"class.blink::Member.225", %"class.blink::Member.227", %"class.blink::Member.229", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.234", %"class.blink::HeapVector.236" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.198" = type { %"class.blink::MemberBase.199" }
%"class.blink::MemberBase.199" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.200" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::Document"* }
%"class.blink::Member.201" = type { %"class.blink::MemberBase.202" }
%"class.blink::MemberBase.202" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.205" }
%"class.blink::HeapHashMap.205" = type { %"class.WTF::HashMap.208" }
%"class.WTF::HashMap.208" = type { %"class.WTF::HashTable.209" }
%"class.WTF::HashTable.209" = type <{ %"struct.WTF::KeyValuePair.211"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.211" = type { %"class.WTF::AtomicString", %"class.blink::Member.212" }
%"class.blink::Member.212" = type { %"class.blink::MemberBase.213" }
%"class.blink::MemberBase.213" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.216", i32, %"class.blink::HeapVector.218" }
%"class.blink::Member.216" = type { %"class.blink::MemberBase.217" }
%"class.blink::MemberBase.217" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.218" = type { %"class.WTF::Vector.221" }
%"class.WTF::Vector.221" = type { %"class.WTF::VectorBuffer.222" }
%"class.WTF::VectorBuffer.222" = type { %"class.WTF::VectorBufferBase.223" }
%"class.WTF::VectorBufferBase.223" = type { %"class.blink::Member.216"*, i32, i32 }
%"class.blink::Member.225" = type { %"class.blink::MemberBase.226" }
%"class.blink::MemberBase.226" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.227" = type { %"class.blink::MemberBase.228" }
%"class.blink::MemberBase.228" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.229" = type { %"class.blink::MemberBase.230" }
%"class.blink::MemberBase.230" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.231" }
%"class.blink::Member.231" = type { %"class.blink::MemberBase.232" }
%"class.blink::MemberBase.232" = type { %"class.blink::HeapHashMap.233"* }
%"class.blink::HeapHashMap.233" = type opaque
%"class.blink::Member.234" = type { %"class.blink::MemberBase.235" }
%"class.blink::MemberBase.235" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.236" = type { %"class.WTF::Vector.239" }
%"class.WTF::Vector.239" = type { %"class.WTF::VectorBuffer.240" }
%"class.WTF::VectorBuffer.240" = type { %"class.WTF::VectorBufferBase.241" }
%"class.WTF::VectorBufferBase.241" = type { %"class.blink::Member.242"*, i32, i32 }
%"class.blink::Member.242" = type { %"class.blink::MemberBase.243" }
%"class.blink::MemberBase.243" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.17", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.17" = type { %"class.base::RefCounted.18" }
%"class.base::RefCounted.18" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.24" }
%"class.WTF::HashTable.24" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::Member.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::SVGElementRareData"* }
%"class.blink::SVGElementRareData" = type opaque
%"class.blink::Member.28" = type { %"class.blink::MemberBase.29" }
%"class.blink::MemberBase.29" = type { %"class.blink::SVGAnimatedString"* }
%"class.blink::SVGAnimatedString" = type opaque
%"class.blink::SVGURIReference" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.30" }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::SVGAnimatedHref"* }
%"class.blink::SVGAnimatedHref" = type opaque
%"class.blink::ScriptElementBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.33", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"class.WTF::RefCounted.33" = type { %"class.base::RefCounted.34" }
%"class.base::RefCounted.34" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.44", %"class.WTF::Vector.50", i8, i32 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.WTF::Vector.38"* }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.50" = type { %"class.WTF::VectorBuffer.51" }
%"class.WTF::VectorBuffer.51" = type { %"class.WTF::VectorBufferBase.40", [32 x i8] }
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::ScriptLoader"* }
%"class.blink::ScriptLoader" = type { %"class.blink::PendingScriptClient", %"class.blink::NameClient", %"class.blink::Member.61", i8, %"class.blink::WeakMember.63", i8, i8, i8, i8, i32, i8, i8, i8, %"class.blink::Member.65", %"class.blink::Member.65", %"class.blink::Member.73" }
%"class.blink::PendingScriptClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::ScriptElementBase"* }
%"class.blink::WeakMember.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::PendingScript"* }
%"class.blink::PendingScript" = type <{ %"class.blink::NameClient", %"class.blink::Member.61", %"class.WTF::TextPosition", %"class.base::TimeTicks", i32, [4 x i8], %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.69", %"class.blink::WeakMember.63", %"class.blink::WeakMember.71", i8, [7 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.6 }
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::PendingScriptClient"* }
%"class.blink::WeakMember.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.118", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.127", %"class.blink::Member.129", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.138", %"class.blink::Member.144", %"class.blink::Member.146", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.75" }
%"class.blink::HeapHashMap.75" = type { %"class.WTF::HashMap.78" }
%"class.WTF::HashMap.78" = type { %"class.WTF::HashTable.79" }
%"class.WTF::HashTable.79" = type <{ %"struct.WTF::KeyValuePair.81"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.81" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.89" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.82" }
%"class.blink::HeapHashSet.82" = type { %"class.WTF::HashSet.85" }
%"class.WTF::HashSet.85" = type { %"class.WTF::HashTable.86" }
%"class.WTF::HashTable.86" = type <{ %"class.blink::WeakMember.88"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.88" = type opaque
%"class.blink::Supplementable.89" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.90" }
%"class.blink::HeapHashMap.90" = type { %"class.WTF::HashMap.93" }
%"class.WTF::HashMap.93" = type { %"class.WTF::HashTable.94" }
%"class.WTF::HashTable.94" = type <{ %"struct.WTF::KeyValuePair.96"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.96" = type { i8*, %"class.blink::Member.801" }
%"class.blink::Member.801" = type { %"class.blink::MemberBase.802" }
%"class.blink::MemberBase.802" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.803" }
%"class.blink::Member.803" = type { %"class.blink::MemberBase.804" }
%"class.blink::MemberBase.804" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.97, %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.107", %"class.blink::Member.113", i32, [4 x i8], %"class.WTF::HashSet.114", i32, i32 }
%class.scoped_refptr.97 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.98", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.100 }
%"class.WTF::RefCounted.98" = type { %"class.base::RefCounted.99" }
%"class.base::RefCounted.99" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.100 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.113" = type { %"class.blink::MemberBase.72" }
%"class.WTF::HashSet.114" = type { %"class.WTF::HashTable.115" }
%"class.WTF::HashTable.115" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.118" = type { %"class.blink::MemberBase.119" }
%"class.blink::MemberBase.119" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.122" }
%"class.WTF::Vector.122" = type { %"class.WTF::VectorBuffer.123" }
%"class.WTF::VectorBuffer.123" = type { %"class.WTF::VectorBufferBase.124" }
%"class.WTF::VectorBufferBase.124" = type { %"class.blink::Member.125"*, i32, i32 }
%"class.blink::Member.125" = type opaque
%"class.blink::Member.127" = type { %"class.blink::MemberBase.128" }
%"class.blink::MemberBase.128" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.129" = type { %"class.blink::MemberBase.130" }
%"class.blink::MemberBase.130" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.131", i32, i32 }
%"class.blink::HeapHashMap.131" = type { %"class.WTF::HashMap.134" }
%"class.WTF::HashMap.134" = type { %"class.WTF::HashTable.135" }
%"class.WTF::HashTable.135" = type <{ %"struct.WTF::KeyValuePair.137"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.137" = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.129", i8, [7 x i8], %"class.WTF::Vector.150", %"class.blink::HeapVector.190", i8, [7 x i8], %"class.WTF::HashSet.114", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.WTF::Vector.150" = type { %"class.WTF::VectorBuffer.151" }
%"class.WTF::VectorBuffer.151" = type { %"class.WTF::VectorBufferBase.152" }
%"class.WTF::VectorBufferBase.152" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.153" }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.156", %"class.WTF::HashMap.163", %"class.WTF::HashMap.168", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.173", i32, %"class.mojo::StructPtr.178", %"class.WTF::Vector.173" }
%"class.mojo::StructPtr.156" = type { %"class.std::__1::unique_ptr.157" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.163" = type { %"class.WTF::HashTable.164" }
%"class.WTF::HashTable.164" = type <{ %"struct.WTF::KeyValuePair.167"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.167" = type opaque
%"class.WTF::HashMap.168" = type { %"class.WTF::HashTable.169" }
%"class.WTF::HashTable.169" = type <{ %"struct.WTF::KeyValuePair.172"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.172" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.178" = type { %"class.std::__1::unique_ptr.179" }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.173", i8, i8, [6 x i8] }>
%"class.WTF::Vector.173" = type { %"class.WTF::VectorBuffer.174" }
%"class.WTF::VectorBuffer.174" = type { %"class.WTF::VectorBufferBase.175" }
%"class.WTF::VectorBufferBase.175" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::HeapVector.190" = type { %"class.WTF::Vector.193" }
%"class.WTF::Vector.193" = type { %"class.WTF::VectorBuffer.194" }
%"class.WTF::VectorBuffer.194" = type { %"class.WTF::VectorBufferBase.195" }
%"class.WTF::VectorBufferBase.195" = type { %"class.blink::Member.196"*, i32, i32 }
%"class.blink::Member.196" = type opaque
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type opaque
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.245", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.253", %"class.WTF::Vector.253", i8, i32, %"class.blink::Member.264", %"class.blink::Member.113", %"class.blink::Member.266", %"class.blink::Member.268", %"class.blink::Member.270", %"class.blink::Member.272", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.280", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.286", %"class.blink::Member.288", %"class.blink::Member.242", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.291", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.218", %"class.blink::Member.216", %"class.blink::Member.489", %"class.blink::Member.216", %"class.blink::Member.216", %"class.blink::Member.216", %"class.blink::UserActionElementSet", %"class.blink::Member.498", double, double, i64, i64, %"class.blink::HeapHashSet.500", %"class.blink::HeapHashSet.507", i16, i8, %"class.blink::Member.514", %"class.blink::Member.516", %"class.blink::Member.518", %"class.blink::Member.520", %"class.blink::TextLinkColors", %"class.blink::Member.522", i8, [7 x i8], %"class.blink::HeapHashMap.524", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.216", %"class.WTF::Vector.531", %"class.blink::Member.536", %"class.blink::Member.538", i8, %"class.blink::Member.216", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.540", %"class.blink::HeapVector.558", %"class.std::__1::unique_ptr.565", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.571", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.584", %"class.WTF::Vector.586", i8, i8, %"class.std::__1::unique_ptr.591", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.218", %"class.blink::HeapVector.597", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.605", i8, i32, %"class.blink::Member.607", %"class.blink::Member.609", %"class.blink::Member.611", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.613", %"class.WTF::HashMap.615", %"class.blink::Member.620", %"class.blink::Member.622", %"class.blink::Member.624", %"class.blink::Member.626", %"class.blink::Member.200", %"class.blink::Member.200", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.628", i8, i32, %"class.blink::Member.635", %"class.blink::Member.637", i32, %"class.blink::Member.639", %"class.blink::Member.641", %"class.blink::Member.643", %"class.std::__1::unique_ptr.645", i64, %"class.std::__1::unique_ptr.651", i32, i32, %"class.blink::Member.657", %"class.blink::Member.659", %"class.blink::Member.661", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.663", %"class.WTF::Vector.665", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.670", %"class.blink::Member.677", %"class.std::__1::unique_ptr.679", %"class.blink::Member.685", i8, i8, %"class.WTF::String", %"class.blink::Member.687", i8, [7 x i8], %"class.blink::HeapHashMap.689", %"class.blink::HeapObserverSet.696", %"class.blink::Member.704", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.706", i32, i8, i8, %"class.blink::WeakMember.708", %"class.blink::Member.709" }
%"class.blink::Supplementable.245" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.246" }
%"class.blink::HeapHashMap.246" = type { %"class.WTF::HashMap.249" }
%"class.WTF::HashMap.249" = type { %"class.WTF::HashTable.250" }
%"class.WTF::HashTable.250" = type <{ %"struct.WTF::KeyValuePair.252"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.252" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.253" = type { %"class.WTF::VectorBuffer.254" }
%"class.WTF::VectorBuffer.254" = type { %"class.WTF::VectorBufferBase.255" }
%"class.WTF::VectorBufferBase.255" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.256 }
%class.scoped_refptr.256 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.257" }
%"struct.std::__1::atomic.257" = type { %"struct.std::__1::__atomic_base.258" }
%"struct.std::__1::__atomic_base.258" = type { %"struct.std::__1::__atomic_base.259" }
%"struct.std::__1::__atomic_base.259" = type { %"struct.std::__1::__cxx_atomic_impl.260" }
%"struct.std::__1::__cxx_atomic_impl.260" = type { %"struct.std::__1::__cxx_atomic_base_impl.261" }
%"struct.std::__1::__cxx_atomic_base_impl.261" = type { i32 }
%"class.blink::Member.264" = type { %"class.blink::MemberBase.265" }
%"class.blink::MemberBase.265" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.266" = type { %"class.blink::MemberBase.267" }
%"class.blink::MemberBase.267" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.268" = type { %"class.blink::MemberBase.269" }
%"class.blink::MemberBase.269" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.270" = type { %"class.blink::MemberBase.271" }
%"class.blink::MemberBase.271" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.274" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.blink::KURL"* }
%"class.blink::Member.286" = type { %"class.blink::MemberBase.287" }
%"class.blink::MemberBase.287" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.288" = type { %"class.blink::MemberBase.289" }
%"class.blink::MemberBase.289" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.290 }
%class.scoped_refptr.290 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.291" = type { %"class.WTF::VectorBuffer.292" }
%"class.WTF::VectorBuffer.292" = type { %"class.WTF::VectorBufferBase.293" }
%"class.WTF::VectorBufferBase.293" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.294 }
%class.scoped_refptr.294 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.489" = type { %"class.blink::MemberBase.490" }
%"class.blink::MemberBase.490" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.491" }
%"class.blink::HeapHashMap.491" = type { %"class.WTF::HashMap.494" }
%"class.WTF::HashMap.494" = type { %"class.WTF::HashTable.495" }
%"class.WTF::HashTable.495" = type <{ %"struct.WTF::KeyValuePair.497"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.497" = type opaque
%"class.blink::Member.498" = type { %"class.blink::MemberBase.499" }
%"class.blink::MemberBase.499" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.500" = type { %"class.WTF::HashSet.503" }
%"class.WTF::HashSet.503" = type { %"class.WTF::HashTable.504" }
%"class.WTF::HashTable.504" = type <{ %"class.blink::WeakMember.506"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.506" = type opaque
%"class.blink::HeapHashSet.507" = type { %"class.WTF::HashSet.510" }
%"class.WTF::HashSet.510" = type { %"class.WTF::HashTable.511" }
%"class.WTF::HashTable.511" = type <{ %"class.blink::WeakMember.513"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.513" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.518" = type { %"class.blink::MemberBase.519" }
%"class.blink::MemberBase.519" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.520" = type { %"class.blink::MemberBase.521" }
%"class.blink::MemberBase.521" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.522" = type { %"class.blink::MemberBase.523" }
%"class.blink::MemberBase.523" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.524" = type { %"class.WTF::HashMap.527" }
%"class.WTF::HashMap.527" = type { %"class.WTF::HashTable.528" }
%"class.WTF::HashTable.528" = type <{ %"struct.WTF::KeyValuePair.530"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.530" = type opaque
%"class.WTF::Vector.531" = type { %"class.WTF::VectorBuffer.532" }
%"class.WTF::VectorBuffer.532" = type { %"class.WTF::VectorBufferBase.533" }
%"class.WTF::VectorBufferBase.533" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.538" = type { %"class.blink::MemberBase.539" }
%"class.blink::MemberBase.539" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.540" = type { %"class.blink::MemberBase.541" }
%"class.blink::MemberBase.541" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type <{ %"class.blink::ExecutionContextLifecycleStateObserver.base", [4 x i8], %"class.blink::NameClient", %"class.blink::Member.200", %"class.blink::HeapDeque", %"class.blink::HeapHashSet.552", %"class.blink::HeapDeque", %"class.blink::HeapDeque", %"class.blink::HeapDeque", %class.scoped_refptr.480, i32, i8, i8, [2 x i8] }>
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.544" }
%"class.blink::WeakMember.544" = type { %"class.blink::MemberBase.545" }
%"class.blink::MemberBase.545" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::HeapHashSet.552" = type { %"class.WTF::HashSet.555" }
%"class.WTF::HashSet.555" = type { %"class.WTF::HashTable.556" }
%"class.WTF::HashTable.556" = type <{ %"class.blink::Member.65"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapDeque" = type { %"class.WTF::Deque.548" }
%"class.WTF::Deque.548" = type { %"class.WTF::Deque<blink::Member<blink::PendingScript>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::PendingScript>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.550" }
%"class.WTF::VectorBuffer.550" = type { %"class.WTF::VectorBufferBase.551" }
%"class.WTF::VectorBufferBase.551" = type { %"class.blink::Member.65"*, i32, i32 }
%class.scoped_refptr.480 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.481" }>
%"class.base::RefCountedThreadSafe.481" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::HeapVector.558" = type { %"class.WTF::Vector.561" }
%"class.WTF::Vector.561" = type { %"class.WTF::VectorBuffer.562" }
%"class.WTF::VectorBuffer.562" = type { %"class.WTF::VectorBufferBase.563" }
%"class.WTF::VectorBufferBase.563" = type { %"class.blink::Member.61"*, i32, i32 }
%"class.std::__1::unique_ptr.565" = type { %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.571" = type { %"class.WTF::HashSet.574" }
%"class.WTF::HashSet.574" = type { %"class.WTF::HashTable.575" }
%"class.WTF::HashTable.575" = type <{ %"class.blink::WeakMember.577"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.577" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.578", i32, [4 x i8] }>
%"class.WTF::Vector.578" = type { %"class.WTF::VectorBuffer.579" }
%"class.WTF::VectorBuffer.579" = type { %"class.WTF::VectorBufferBase.580" }
%"class.WTF::VectorBufferBase.580" = type { %"struct.std::__1::pair.581"*, i32, i32 }
%"struct.std::__1::pair.581" = type opaque
%"class.blink::Member.584" = type { %"class.blink::MemberBase.585" }
%"class.blink::MemberBase.585" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.586" = type { %"class.WTF::VectorBuffer.587" }
%"class.WTF::VectorBuffer.587" = type { %"class.WTF::VectorBufferBase.588" }
%"class.WTF::VectorBufferBase.588" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.591" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.597" = type { %"class.WTF::Vector.600" }
%"class.WTF::Vector.600" = type { %"class.WTF::VectorBuffer.601" }
%"class.WTF::VectorBuffer.601" = type { %"class.WTF::VectorBufferBase.602" }
%"class.WTF::VectorBufferBase.602" = type { %"class.blink::Member.603"*, i32, i32 }
%"class.blink::Member.603" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.200" }
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.607" = type { %"class.blink::MemberBase.608" }
%"class.blink::MemberBase.608" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.609" = type { %"class.blink::MemberBase.610" }
%"class.blink::MemberBase.610" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.611" = type { %"class.blink::MemberBase.612" }
%"class.blink::MemberBase.612" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.613" = type { %"class.blink::MemberBase.614" }
%"class.blink::MemberBase.614" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.615" = type { %"class.WTF::HashTable.616" }
%"class.WTF::HashTable.616" = type <{ %"struct.WTF::KeyValuePair.619"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.619" = type opaque
%"class.blink::Member.620" = type { %"class.blink::MemberBase.621" }
%"class.blink::MemberBase.621" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.622" = type { %"class.blink::MemberBase.623" }
%"class.blink::MemberBase.623" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.624" = type { %"class.blink::MemberBase.625" }
%"class.blink::MemberBase.625" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.626" = type { %"class.blink::MemberBase.627" }
%"class.blink::MemberBase.627" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.63", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.480, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.482 }
%class.scoped_refptr.482 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.483", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.483" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.484" }
%"struct.std::__1::atomic.484" = type { %"struct.std::__1::__atomic_base.485" }
%"struct.std::__1::__atomic_base.485" = type { %"struct.std::__1::__atomic_base.486" }
%"struct.std::__1::__atomic_base.486" = type { %"struct.std::__1::__cxx_atomic_impl.487" }
%"struct.std::__1::__cxx_atomic_impl.487" = type { %"struct.std::__1::__cxx_atomic_base_impl.488" }
%"struct.std::__1::__cxx_atomic_base_impl.488" = type { i8 }
%"class.blink::HeapHashSet.628" = type { %"class.WTF::HashSet.631" }
%"class.WTF::HashSet.631" = type { %"class.WTF::HashTable.632" }
%"class.WTF::HashTable.632" = type <{ %"class.blink::Member.634"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.634" = type opaque
%"class.blink::Member.635" = type { %"class.blink::MemberBase.636" }
%"class.blink::MemberBase.636" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.637" = type { %"class.blink::MemberBase.638" }
%"class.blink::MemberBase.638" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.639" = type { %"class.blink::MemberBase.640" }
%"class.blink::MemberBase.640" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.641" = type { %"class.blink::MemberBase.642" }
%"class.blink::MemberBase.642" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.643" = type { %"class.blink::MemberBase.644" }
%"class.blink::MemberBase.644" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.645" = type { %"class.std::__1::__compressed_pair.646" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.657" = type { %"class.blink::MemberBase.658" }
%"class.blink::MemberBase.658" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.659" = type { %"class.blink::MemberBase.660" }
%"class.blink::MemberBase.660" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.661" = type { %"class.blink::MemberBase.662" }
%"class.blink::MemberBase.662" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.663" = type { %"class.blink::MemberBase.664" }
%"class.blink::MemberBase.664" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.665" = type { %"class.WTF::VectorBuffer.666" }
%"class.WTF::VectorBuffer.666" = type { %"class.WTF::VectorBufferBase.667" }
%"class.WTF::VectorBufferBase.667" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.670" = type { %"class.WTF::HashMap.673" }
%"class.WTF::HashMap.673" = type { %"class.WTF::HashTable.674" }
%"class.WTF::HashTable.674" = type <{ %"struct.WTF::KeyValuePair.676"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.676" = type opaque
%"class.blink::Member.677" = type { %"class.blink::MemberBase.678" }
%"class.blink::MemberBase.678" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.679" = type { %"class.std::__1::__compressed_pair.680" }
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.681" }
%"struct.std::__1::__compressed_pair_elem.681" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.685" = type { %"class.blink::MemberBase.686" }
%"class.blink::MemberBase.686" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.687" = type { %"class.blink::MemberBase.688" }
%"class.blink::MemberBase.688" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.689" = type { %"class.WTF::HashMap.692" }
%"class.WTF::HashMap.692" = type { %"class.WTF::HashTable.693" }
%"class.WTF::HashTable.693" = type <{ %"struct.WTF::KeyValuePair.695"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.695" = type opaque
%"class.blink::HeapObserverSet.696" = type { i32, [4 x i8], %"class.blink::HeapHashSet.697" }
%"class.blink::HeapHashSet.697" = type { %"class.WTF::HashSet.700" }
%"class.WTF::HashSet.700" = type { %"class.WTF::HashTable.701" }
%"class.WTF::HashTable.701" = type <{ %"class.blink::WeakMember.703"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.703" = type opaque
%"class.blink::Member.704" = type { %"class.blink::MemberBase.705" }
%"class.blink::MemberBase.705" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.706" = type { %"class.blink::MemberBase.707" }
%"class.blink::MemberBase.707" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.200", %"class.blink::HeapHashSet.713", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.720", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.713" = type { %"class.WTF::HashSet.716" }
%"class.WTF::HashSet.716" = type { %"class.WTF::HashTable.717" }
%"class.WTF::HashTable.717" = type <{ %"class.blink::Member.719"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.719" = type opaque
%"class.blink::HeapTaskRunnerTimer.720" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.721", { i64, i64 } }
%"class.blink::WeakMember.721" = type { %"class.blink::MemberBase.707" }
%"class.blink::WeakMember.708" = type { %"class.blink::MemberBase" }
%"class.blink::Member.709" = type { %"class.blink::MemberBase.710" }
%"class.blink::MemberBase.710" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::CreateElementFlags" = type <{ i8, [7 x i8], %"class.blink::Document"*, i8, [7 x i8] }>
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.blink::JSEventHandlerForContentAttribute" = type { %"class.blink::JSEventHandler.base", i8, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %"class.WTF::TextPosition", %"class.v8::Isolate"* }
%"class.blink::JSEventHandler.base" = type <{ %"class.blink::JSBasedEventListener", %"class.blink::Member.734", i32 }>
%"class.blink::JSBasedEventListener" = type { %"class.blink::EventListener" }
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.729" }
%"class.absl::optional.729" = type { %"class.absl::optional_internal::optional_data.730" }
%"class.absl::optional_internal::optional_data.730" = type { %"class.absl::optional_internal::optional_data_base.731" }
%"class.absl::optional_internal::optional_data_base.731" = type { %"class.absl::optional_internal::optional_data_dtor_base.732" }
%"class.absl::optional_internal::optional_data_dtor_base.732" = type { i8, %union.anon.733 }
%union.anon.733 = type { i64 }
%"class.blink::Member.734" = type { %"class.blink::MemberBase.735" }
%"class.blink::MemberBase.735" = type { %"class.blink::V8EventHandlerNonNull"* }
%"class.blink::V8EventHandlerNonNull" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member.738", %"class.blink::Member.738" }
%"class.blink::Member.738" = type { %"class.blink::MemberBase.739" }
%"class.blink::MemberBase.739" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.742, %"class.blink::Member.743", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.742 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.743" = type { %"class.blink::MemberBase.744" }
%"class.blink::MemberBase.744" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.745" }
%"class.blink::Persistent.745" = type { %"class.blink::PersistentBase.746" }
%"class.blink::PersistentBase.746" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"struct.blink::SVGElement::SvgAttributeChangedParams" = type <{ %"class.blink::QualifiedName"*, i32, [4 x i8] }>
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.747", %"class.WTF::String"* }
%"class.blink::HeapVector.747" = type { %"class.WTF::Vector.750" }
%"class.WTF::Vector.750" = type { %"class.WTF::VectorBuffer.751" }
%"class.WTF::VectorBuffer.751" = type { %"class.WTF::VectorBufferBase.752" }
%"class.WTF::VectorBufferBase.752" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.754", %"class.blink::Member.754", %"class.blink::Member.756", %"class.blink::Member.758", %"class.base::TimeTicks" }
%"class.blink::Member.754" = type { %"class.blink::MemberBase.755" }
%"class.blink::MemberBase.755" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.756" = type { %"class.blink::MemberBase.757" }
%"class.blink::MemberBase.757" = type { %"class.blink::Event"* }
%"class.blink::Member.758" = type { %"class.blink::MemberBase.759" }
%"class.blink::MemberBase.759" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.WTF::HashMap.760" = type { %"class.WTF::HashTable.761" }
%"class.WTF::HashTable.761" = type <{ %"struct.WTF::KeyValuePair.764"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.764" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::V8UnionHTMLScriptElementOrSVGScriptElement" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.769", %"class.blink::Member.771" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::Member.769" = type { %"class.blink::MemberBase.770" }
%"class.blink::MemberBase.770" = type { %"class.blink::HTMLScriptElement"* }
%"class.blink::HTMLScriptElement" = type opaque
%"class.blink::Member.771" = type { %"class.blink::MemberBase.772" }
%"class.blink::MemberBase.772" = type { %"class.blink::SVGScriptElement"* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.791" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.779" }
%"class.blink::HeapVector.779" = type { %"class.WTF::Vector.782" }
%"class.WTF::Vector.782" = type { %"class.WTF::VectorBuffer.783" }
%"class.WTF::VectorBuffer.783" = type { %"class.WTF::VectorBufferBase.784", [32 x i8] }
%"class.WTF::VectorBufferBase.784" = type { %"struct.std::__1::pair.785"*, i32, i32 }
%"struct.std::__1::pair.785" = type { %"class.WTF::AtomicString", %"class.blink::Member.786" }
%"class.blink::Member.786" = type { %"class.blink::MemberBase.787" }
%"class.blink::MemberBase.787" = type { %"class.blink::HeapVector.788"* }
%"class.blink::HeapVector.788" = type opaque
%"class.std::__1::unique_ptr.791" = type { %"class.std::__1::__compressed_pair.792" }
%"class.std::__1::__compressed_pair.792" = type { %"struct.std::__1::__compressed_pair_elem.793" }
%"struct.std::__1::__compressed_pair_elem.793" = type { %"class.WTF::Vector.794"* }
%"class.WTF::Vector.794" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::DOMWindow" = type opaque
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.775", i8, [7 x i8] }>
%"class.blink::Member.775" = type { %"class.blink::MemberBase.776" }
%"class.blink::MemberBase.776" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.798" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.798" = type { %"class.v8::TracedReference.799" }
%"class.v8::TracedReference.799" = type { %"class.v8::BasicTracedReference.800" }
%"class.v8::BasicTracedReference.800" = type { %"class.v8::TracedReferenceBase" }
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::EventDispatchHandlingState" = type opaque
%"class.blink::LayoutBox" = type opaque
%"class.blink::ComputedStyle" = type opaque
%"class.blink::MutableCSSPropertyValueSet" = type opaque
%"class.blink::Image" = type opaque
%"struct.blink::FocusParams" = type opaque
%"class.blink::FocusOptions" = type opaque
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::ShadowRoot" = type opaque
%"class.blink::AffineTransform" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.821" }
%"class.std::__1::__compressed_pair.821" = type { %"struct.std::__1::__compressed_pair_elem.822" }
%"struct.std::__1::__compressed_pair_elem.822" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.823 }
%union.anon.823 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink16SVGScriptElementD2Ev = comdat any

$_ZN5blink16SVGScriptElementD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink16SVGScriptElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink7Element23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE = comdat any

$_ZNK5blink16SVGScriptElement20LayoutObjectIsNeededERKNS_13ComputedStyleE = comdat any

$_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE = comdat any

$_ZNK5blink7Element10IsLiveLinkEv = comdat any

$_ZN5blink7Element13ImageContentsEv = comdat any

$_ZNK5blink10SVGElement13SupportsFocusEv = comdat any

$_ZNK5blink7Element14DefaultToolTipEv = comdat any

$_ZN5blink7Element20BeginParsingChildrenEv = comdat any

$_ZNK5blink7Element25MatchesDefaultPseudoClassEv = comdat any

$_ZNK5blink7Element25MatchesEnabledPseudoClassEv = comdat any

$_ZNK5blink7Element26MatchesReadOnlyPseudoClassEv = comdat any

$_ZNK5blink7Element27MatchesReadWritePseudoClassEv = comdat any

$_ZNK5blink7Element28MatchesValidityPseudoClassesEv = comdat any

$_ZNK5blink7Element25ShouldAppearIndeterminateEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink7Element20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink7Element13IsTextControlEv = comdat any

$_ZNK5blink7Element21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element21IsRequiredFormControlEv = comdat any

$_ZNK5blink7Element12willValidateEv = comdat any

$_ZN5blink7Element14IsValidElementEv = comdat any

$_ZNK5blink7Element9IsInRangeEv = comdat any

$_ZNK5blink7Element12IsOutOfRangeEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink16SVGScriptElement15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink7Element25HasNonInBodyInsertionModeEv = comdat any

$_ZNK5blink7Element21IsDisabledFormControlEv = comdat any

$_ZN5blink7Element20BuildPendingResourceEv = comdat any

$_ZNK5blink7Element11IsAdRelatedEv = comdat any

$_ZNK5blink7Element16GetNamedItemTypeEv = comdat any

$_ZN5blink7Element22ParserDidSetAttributesEv = comdat any

$_ZNK5blink7Element23AreAuthorShadowsAllowedEv = comdat any

$_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE = comdat any

$_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv = comdat any

$_ZNK5blink10SVGElement20IsSVGGeometryElementEv = comdat any

$_ZNK5blink10SVGElement20IsSVGGraphicsElementEv = comdat any

$_ZNK5blink10SVGElement14IsFilterEffectEv = comdat any

$_ZNK5blink10SVGElement13IsTextContentEv = comdat any

$_ZNK5blink10SVGElement17IsTextPositioningEv = comdat any

$_ZNK5blink16SVGScriptElement22IsStructurallyExternalEv = comdat any

$_ZNK5blink10SVGElement7IsValidEv = comdat any

$_ZN5blink10SVGElement22AnimateMotionTransformEv = comdat any

$_ZNK5blink10SVGElement22SelfHasRelativeLengthsEv = comdat any

$_ZNK5blink16SVGScriptElement6LoaderEv = comdat any

$_ZNK5blink16SVGScriptElement19AsyncAttributeValueEv = comdat any

$_ZNK5blink16SVGScriptElement21CharsetAttributeValueEv = comdat any

$_ZNK5blink16SVGScriptElement25CrossOriginAttributeValueEv = comdat any

$_ZNK5blink16SVGScriptElement19DeferAttributeValueEv = comdat any

$_ZNK5blink16SVGScriptElement19EventAttributeValueEv = comdat any

$_ZNK5blink16SVGScriptElement17ForAttributeValueEv = comdat any

$_ZNK5blink16SVGScriptElement23IntegrityAttributeValueEv = comdat any

$_ZNK5blink16SVGScriptElement28ReferrerPolicyAttributeValueEv = comdat any

$_ZNK5blink16SVGScriptElement24ImportanceAttributeValueEv = comdat any

$_ZNK5blink16SVGScriptElement22LanguageAttributeValueEv = comdat any

$_ZNK5blink16SVGScriptElement22NomoduleAttributeValueEv = comdat any

$_ZNK5blink16SVGScriptElement29ElementHasDuplicateAttributesEv = comdat any

$_ZThn168_N5blink16SVGScriptElementD1Ev = comdat any

$_ZThn168_N5blink16SVGScriptElementD0Ev = comdat any

$_ZThn184_NK5blink16SVGScriptElement19AsyncAttributeValueEv = comdat any

$_ZThn184_NK5blink16SVGScriptElement21CharsetAttributeValueEv = comdat any

$_ZThn184_NK5blink16SVGScriptElement25CrossOriginAttributeValueEv = comdat any

$_ZThn184_NK5blink16SVGScriptElement19DeferAttributeValueEv = comdat any

$_ZThn184_NK5blink16SVGScriptElement19EventAttributeValueEv = comdat any

$_ZThn184_NK5blink16SVGScriptElement17ForAttributeValueEv = comdat any

$_ZThn184_NK5blink16SVGScriptElement23IntegrityAttributeValueEv = comdat any

$_ZThn184_NK5blink16SVGScriptElement22LanguageAttributeValueEv = comdat any

$_ZThn184_NK5blink16SVGScriptElement22NomoduleAttributeValueEv = comdat any

$_ZThn184_NK5blink16SVGScriptElement28ReferrerPolicyAttributeValueEv = comdat any

$_ZThn184_NK5blink16SVGScriptElement24ImportanceAttributeValueEv = comdat any

$_ZThn184_NK5blink16SVGScriptElement29ElementHasDuplicateAttributesEv = comdat any

$_ZThn184_NK5blink16SVGScriptElement6LoaderEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_12ScriptLoaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink9svg_names10kScriptTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZTVN5blink16SVGScriptElementE = hidden unnamed_addr constant { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] } { [196 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::SVGScriptElement"*)* @_ZN5blink16SVGScriptElementD2Ev to i8*), i8* bitcast (void (%"class.blink::SVGScriptElement"*)* @_ZN5blink16SVGScriptElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::SVGScriptElement"*, %"class.blink::Visitor"*)* @_ZNK5blink16SVGScriptElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink10SVGElement18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink10SVGElement20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1, i32)* @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast (void ()* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, i1)* @_ZN5blink10SVGElement16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::SVGScriptElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink16SVGScriptElement12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::SVGScriptElement"*)* @_ZN5blink16SVGScriptElement36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink10SVGElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::SVGScriptElement"*, %"class.blink::Document"*)* @_ZN5blink16SVGScriptElement20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::SVGScriptElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink16SVGScriptElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.760"* (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink10SVGElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink10SVGElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink10SVGElement41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink10SVGElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::SVGScriptElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink16SVGScriptElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)* @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::Element"*)* @_ZNK5blink7Element24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32)* @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::SVGScriptElement"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink16SVGScriptElement20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, i32)* @_ZN5blink10SVGElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::SVGScriptElement"*, %"class.blink::Attribute"*)* @_ZNK5blink16SVGScriptElement14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Element"*)* @_ZN5blink7Element13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element4blurEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::SVGScriptElement"*)* @_ZN5blink16SVGScriptElement21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZN5blink7Element14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, i64)* @_ZN5blink10SVGElement15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void ()* @_ZN5blink10SVGElement26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::ShadowRoot"*)* @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::SVGScriptElement"*, %"class.blink::Document"*)* @_ZNK5blink16SVGScriptElement33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void ()* @_ZNK5blink10SVGElement29LocalCoordinateSpaceTransformENS0_8CTMScopeE to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement20IsSVGGeometryElementEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement20IsSVGGraphicsElementEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement14IsFilterEffectEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement13IsTextContentEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement17IsTextPositioningEv to i8*), i8* bitcast (i1 (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement22IsStructurallyExternalEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement7IsValidEv to i8*), i8* bitcast (void (%"class.blink::SVGScriptElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)* @_ZN5blink16SVGScriptElement19SvgAttributeChangedERKNS_10SVGElement25SvgAttributeChangedParamsE to i8*), i8* bitcast (%"class.blink::AffineTransform"* (%"class.blink::SVGElement"*)* @_ZN5blink10SVGElement22AnimateMotionTransformEv to i8*), i8* bitcast (i1 (%"class.blink::SVGScriptElement"*)* @_ZN5blink16SVGScriptElement27HaveLoadedRequiredResourcesEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement22SelfHasRelativeLengthsEv to i8*), i8* bitcast (%"class.blink::ScriptLoader"* (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement6LoaderEv to i8*), i8* bitcast (%"class.blink::V8UnionHTMLScriptElementOrSVGScriptElement"* (%"class.blink::SVGScriptElement"*)* @_ZN5blink16SVGScriptElement26AsV8HTMLOrSVGScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement19AsyncAttributeValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement21CharsetAttributeValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement25CrossOriginAttributeValueEv to i8*), i8* bitcast (i1 (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement19DeferAttributeValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement19EventAttributeValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement17ForAttributeValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement23IntegrityAttributeValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement28ReferrerPolicyAttributeValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement24ImportanceAttributeValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement22LanguageAttributeValueEv to i8*), i8* bitcast (i1 (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement22NomoduleAttributeValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement20SourceAttributeValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement18TypeAttributeValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZN5blink16SVGScriptElement16ChildTextContentEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement22ScriptTextInternalSlotEv to i8*), i8* bitcast (i1 (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement18HasSourceAttributeEv to i8*), i8* bitcast (i1 (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement11IsConnectedEv to i8*), i8* bitcast (i1 (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement11HasChildrenEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement18GetNonceForElementEv to i8*), i8* bitcast (i1 (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement29ElementHasDuplicateAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::SVGScriptElement"*, %"class.WTF::AtomicString"*, %"class.WTF::OrdinalNumber"*, %"class.WTF::String"*)* @_ZN5blink16SVGScriptElement23AllowInlineScriptForCSPERKN3WTF12AtomicStringERKNS1_13OrdinalNumberERKNS1_6StringE to i8*), i8* bitcast (%"class.blink::Document"* (%"class.blink::SVGScriptElement"*)* @_ZNK5blink16SVGScriptElement11GetDocumentEv to i8*), i8* bitcast (void (%"class.blink::SVGScriptElement"*)* @_ZN5blink16SVGScriptElement17DispatchLoadEventEv to i8*), i8* bitcast (void (%"class.blink::SVGScriptElement"*)* @_ZN5blink16SVGScriptElement18DispatchErrorEventEv to i8*), i8* bitcast (i32 (%"class.blink::SVGScriptElement"*)* @_ZN5blink16SVGScriptElement20GetScriptElementTypeEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -168 to i8*), i8* null, i8* bitcast (void (%"class.blink::SVGScriptElement"*, %"class.blink::Visitor"*)* @_ZThn168_NK5blink16SVGScriptElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::SVGScriptElement"*)* @_ZThn168_N5blink16SVGScriptElementD1Ev to i8*), i8* bitcast (void (%"class.blink::SVGScriptElement"*)* @_ZThn168_N5blink16SVGScriptElementD0Ev to i8*)], [31 x i8*] [i8* inttoptr (i64 -184 to i8*), i8* null, i8* bitcast (void (%"class.blink::SVGScriptElement"*, %"class.blink::Visitor"*)* @_ZThn184_NK5blink16SVGScriptElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::SVGScriptElement"*)* @_ZThn184_NK5blink16SVGScriptElement19AsyncAttributeValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZThn184_NK5blink16SVGScriptElement21CharsetAttributeValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZThn184_NK5blink16SVGScriptElement25CrossOriginAttributeValueEv to i8*), i8* bitcast (i1 (%"class.blink::SVGScriptElement"*)* @_ZThn184_NK5blink16SVGScriptElement19DeferAttributeValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZThn184_NK5blink16SVGScriptElement19EventAttributeValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZThn184_NK5blink16SVGScriptElement17ForAttributeValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZThn184_NK5blink16SVGScriptElement23IntegrityAttributeValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZThn184_NK5blink16SVGScriptElement22LanguageAttributeValueEv to i8*), i8* bitcast (i1 (%"class.blink::SVGScriptElement"*)* @_ZThn184_NK5blink16SVGScriptElement22NomoduleAttributeValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZThn184_NK5blink16SVGScriptElement20SourceAttributeValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZThn184_NK5blink16SVGScriptElement18TypeAttributeValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZThn184_NK5blink16SVGScriptElement28ReferrerPolicyAttributeValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZThn184_NK5blink16SVGScriptElement24ImportanceAttributeValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZThn184_N5blink16SVGScriptElement16ChildTextContentEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGScriptElement"*)* @_ZThn184_NK5blink16SVGScriptElement22ScriptTextInternalSlotEv to i8*), i8* bitcast (i1 (%"class.blink::SVGScriptElement"*)* @_ZThn184_NK5blink16SVGScriptElement18HasSourceAttributeEv to i8*), i8* bitcast (i1 (%"class.blink::SVGScriptElement"*)* @_ZThn184_NK5blink16SVGScriptElement11IsConnectedEv to i8*), i8* bitcast (i1 (%"class.blink::SVGScriptElement"*)* @_ZThn184_NK5blink16SVGScriptElement11HasChildrenEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::SVGScriptElement"*)* @_ZThn184_NK5blink16SVGScriptElement18GetNonceForElementEv to i8*), i8* bitcast (i1 (%"class.blink::SVGScriptElement"*)* @_ZThn184_NK5blink16SVGScriptElement29ElementHasDuplicateAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::SVGScriptElement"*, %"class.WTF::AtomicString"*, %"class.WTF::OrdinalNumber"*, %"class.WTF::String"*)* @_ZThn184_N5blink16SVGScriptElement23AllowInlineScriptForCSPERKN3WTF12AtomicStringERKNS1_13OrdinalNumberERKNS1_6StringE to i8*), i8* bitcast (%"class.blink::Document"* (%"class.blink::SVGScriptElement"*)* @_ZThn184_NK5blink16SVGScriptElement11GetDocumentEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::SVGScriptElement"*)* @_ZThn184_NK5blink16SVGScriptElement19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::V8UnionHTMLScriptElementOrSVGScriptElement"* (%"class.blink::SVGScriptElement"*)* @_ZThn184_N5blink16SVGScriptElement26AsV8HTMLOrSVGScriptElementEv to i8*), i8* bitcast (void (%"class.blink::SVGScriptElement"*)* @_ZThn184_N5blink16SVGScriptElement17DispatchLoadEventEv to i8*), i8* bitcast (void (%"class.blink::SVGScriptElement"*)* @_ZThn184_N5blink16SVGScriptElement18DispatchErrorEventEv to i8*), i8* bitcast (i32 (%"class.blink::SVGScriptElement"*)* @_ZThn184_N5blink16SVGScriptElement20GetScriptElementTypeEv to i8*), i8* bitcast (%"class.blink::ScriptLoader"* (%"class.blink::SVGScriptElement"*)* @_ZThn184_NK5blink16SVGScriptElement6LoaderEv to i8*)] }, align 8
@_ZN5blink10html_names12kOnerrorAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names6kErrorE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink9svg_names9kTypeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names5kLoadE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZZNK5blink16SVGScriptElement24GetCheckedAttributeTypesEvE15s_attribute_map = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZNK5blink16SVGScriptElement24GetCheckedAttributeTypesEvE15s_attribute_map = internal global i64 0, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink16SVGScriptElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink9svg_names9kHrefAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.2 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringEN5blink19SpecificTrustedTypeEEEEEPKcv = private unnamed_addr constant [112 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::AtomicString, blink::SpecificTrustedType>]\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8bindings9UnionBaseEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::bindings::UnionBase]\00", align 1
@_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.5 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZTVN5blink42V8UnionHTMLScriptElementOrSVGScriptElementE = external unnamed_addr constant { [6 x i8*] }, align 8

@_ZN5blink16SVGScriptElementC1ERNS_8DocumentENS_18CreateElementFlagsE = hidden unnamed_addr alias void (%"class.blink::SVGScriptElement"*, %"class.blink::Document"*, %"class.blink::CreateElementFlags"*), void (%"class.blink::SVGScriptElement"*, %"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blink16SVGScriptElementC2ERNS_8DocumentENS_18CreateElementFlagsE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16SVGScriptElementC2ERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::SVGScriptElement"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::CreateElementFlags"* nocapture readonly byval(%"class.blink::CreateElementFlags") align 8) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  tail call void @_ZN5blink10SVGElementC2ERKNS_13QualifiedNameERNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::SVGElement"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %5, %"class.blink::Document"* dereferenceable(2848) %1, i32 1058) #10
  %6 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.blink::SVGURIReference", %"class.blink::SVGURIReference"* %8, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.blink::ScriptElementBase", %"class.blink::ScriptElementBase"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  tail call void @_ZN5blink15SVGURIReferenceC2EPNS_10SVGElementE(%"class.blink::SVGURIReference"* %8, %"class.blink::SVGElement"* %4) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 3
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.blink::ParkableStringImpl"* null, %"class.blink::ParkableStringImpl"** %13, align 8
  %14 = tail call %"class.blink::ScriptLoader"* @_ZN5blink17ScriptElementBase22InitializeScriptLoaderENS_18CreateElementFlagsE(%"class.blink::ScriptElementBase"* %10, %"class.blink::CreateElementFlags"* nonnull byval(%"class.blink::CreateElementFlags") align 8 %2) #10
  %15 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.blink::ScriptLoader"* %14, %"class.blink::ScriptLoader"** %15, align 8
  ret void
}

declare void @_ZN5blink10SVGElementC2ERKNS_13QualifiedNameERNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #1

declare void @_ZN5blink15SVGURIReferenceC2EPNS_10SVGElementE(%"class.blink::SVGURIReference"*, %"class.blink::SVGElement"*) unnamed_addr #1

declare %"class.blink::ScriptLoader"* @_ZN5blink17ScriptElementBase22InitializeScriptLoaderENS_18CreateElementFlagsE(%"class.blink::ScriptElementBase"*, %"class.blink::CreateElementFlags"* byval(%"class.blink::CreateElementFlags") align 8) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16SVGScriptElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGScriptElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %3, align 8
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kOnerrorAttrE, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %10 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %9
  br i1 %10, label %11, label %22

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  %14 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %14) #10
  %16 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %3, align 8
  %17 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %18 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %17, align 8
  %19 = tail call %"class.blink::JSEventHandlerForContentAttribute"* @_ZN5blink33JSEventHandlerForContentAttribute6CreateEPNS_16ExecutionContextERKNS_13QualifiedNameERKN3WTF12AtomicStringENS_14JSEventHandler11HandlerTypeE(%"class.blink::ExecutionContext"* %15, %"class.blink::QualifiedName"* dereferenceable(8) %16, %"class.WTF::AtomicString"* dereferenceable(8) %18, i32 1) #10
  %20 = getelementptr inbounds %"class.blink::JSEventHandlerForContentAttribute", %"class.blink::JSEventHandlerForContentAttribute"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"* %12, %"class.WTF::AtomicString"* dereferenceable(8) %13, %"class.blink::EventListener"* %20) #10
  br label %24

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink10SVGElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGElement"* %23, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #10
  br label %24

24:                                               ; preds = %22, %11
  ret void
}

declare zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*) local_unnamed_addr #1

declare %"class.blink::JSEventHandlerForContentAttribute"* @_ZN5blink33JSEventHandlerForContentAttribute6CreateEPNS_16ExecutionContextERKNS_13QualifiedNameERKN3WTF12AtomicStringENS_14JSEventHandler11HandlerTypeE(%"class.blink::ExecutionContext"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZNK5blink16SVGScriptElement19GetExecutionContextEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %2) #10
  ret %"class.blink::ExecutionContext"* %3
}

declare void @_ZN5blink10SVGElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16SVGScriptElement19SvgAttributeChangedERKNS_10SVGElement25SvgAttributeChangedParamsE(%"class.blink::SVGScriptElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::SVGElement::SvgAttributeChangedParams", %"struct.blink::SVGElement::SvgAttributeChangedParams"* %1, i64 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %3, align 8
  %5 = tail call zeroext i1 @_ZN5blink15SVGURIReference16IsKnownAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8) %4) #10
  %6 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0
  br i1 %5, label %7, label %12

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 5, i32 0, i32 0
  %9 = load %"class.blink::ScriptLoader"*, %"class.blink::ScriptLoader"** %8, align 8
  %10 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15SVGURIReference16LegacyHrefStringERKNS_10SVGElementE(%"class.blink::SVGElement"* dereferenceable(168) %6) #10
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0
  tail call void @_ZN5blink12ScriptLoader21HandleSourceAttributeERKN3WTF6StringE(%"class.blink::ScriptLoader"* %9, %"class.WTF::String"* dereferenceable(8) %11) #10
  tail call void @_ZN5blink10SVGElement19InvalidateInstancesEv(%"class.blink::SVGElement"* %6) #10
  br label %13

12:                                               ; preds = %2
  tail call void @_ZN5blink10SVGElement19SvgAttributeChangedERKNS0_25SvgAttributeChangedParamsE(%"class.blink::SVGElement"* %6, %"struct.blink::SVGElement::SvgAttributeChangedParams"* dereferenceable(16) %1) #10
  br label %13

13:                                               ; preds = %12, %7
  ret void
}

declare zeroext i1 @_ZN5blink15SVGURIReference16IsKnownAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink12ScriptLoader21HandleSourceAttributeERKN3WTF6StringE(%"class.blink::ScriptLoader"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15SVGURIReference16LegacyHrefStringERKNS_10SVGElementE(%"class.blink::SVGElement"* dereferenceable(168)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink10SVGElement19SvgAttributeChangedERKNS0_25SvgAttributeChangedParamsE(%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink16SVGScriptElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::SVGScriptElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0
  %4 = tail call i32 @_ZN5blink10SVGElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::SVGElement"* %3, %"class.blink::ContainerNode"* dereferenceable(80) %1) #10
  ret i32 1
}

declare i32 @_ZN5blink10SVGElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::SVGElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16SVGScriptElement36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::SVGScriptElement"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.blink::ScriptLoader"*, %"class.blink::ScriptLoader"** %2, align 8
  tail call void @_ZN5blink12ScriptLoader36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::ScriptLoader"* %3) #10
  %4 = load %"class.blink::ScriptLoader"*, %"class.blink::ScriptLoader"** %2, align 8
  %5 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %4, i64 0, i32 5
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 3
  store i8 1, i8* %9, align 8
  br label %10

10:                                               ; preds = %1, %8
  ret void
}

declare void @_ZN5blink12ScriptLoader36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::ScriptLoader"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16SVGScriptElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::SVGScriptElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink10SVGElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::SVGElement"* %3, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56) %1) #10
  %4 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 5, i32 0, i32 0
  %5 = load %"class.blink::ScriptLoader"*, %"class.blink::ScriptLoader"** %4, align 8
  tail call void @_ZN5blink12ScriptLoader15ChildrenChangedEv(%"class.blink::ScriptLoader"* %5) #10
  ret void
}

declare void @_ZN5blink10SVGElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::SVGElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #1

declare void @_ZN5blink12ScriptLoader15ChildrenChangedEv(%"class.blink::ScriptLoader"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16SVGScriptElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::SVGScriptElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 5, i32 0, i32 0
  %8 = load %"class.blink::ScriptLoader"*, %"class.blink::ScriptLoader"** %7, align 8
  tail call void @_ZN5blink12ScriptRunner17MovePendingScriptERNS_8DocumentES2_PNS_12ScriptLoaderE(%"class.blink::Document"* dereferenceable(2848) %1, %"class.blink::Document"* dereferenceable(2848) %6, %"class.blink::ScriptLoader"* %8) #10
  %9 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7Element20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::Element"* %9, %"class.blink::Document"* dereferenceable(2848) %1) #10
  ret void
}

declare void @_ZN5blink12ScriptRunner17MovePendingScriptERNS_8DocumentES2_PNS_12ScriptLoaderE(%"class.blink::Document"* dereferenceable(2848), %"class.blink::Document"* dereferenceable(2848), %"class.blink::ScriptLoader"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(2848) %"class.blink::Document"* @_ZNK5blink16SVGScriptElement11GetDocumentEv(%"class.blink::SVGScriptElement"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  ret %"class.blink::Document"* %5
}

declare void @_ZN5blink7Element20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16SVGScriptElement14IsURLAttributeERKNS_9AttributeE(%"class.blink::SVGScriptElement"*, %"class.blink::Attribute"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0
  %4 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15SVGURIReference16LegacyHrefStringERKNS_10SVGElementE(%"class.blink::SVGElement"* dereferenceable(168) %3) #10
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %74, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #10
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #10
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %8, %23
  %26 = load atomic i32, i32* %9 acquire, align 4
  %27 = and i32 %26, 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %51, label %29

29:                                               ; preds = %25
  %30 = load atomic i32, i32* %9 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %45

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i33
  %37 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #10
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !3

42:                                               ; preds = %33
  tail call void @llvm.trap() #10
  unreachable

43:                                               ; preds = %33
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %34, align 4
  br label %45

45:                                               ; preds = %29, %43
  %46 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %47, i64 0, i32 3, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %6, %49
  br label %59

51:                                               ; preds = %25
  %52 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %6) #10
  %53 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %52, %56
  %58 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %58, label %80, label %59

59:                                               ; preds = %45, %51
  %60 = phi i1 [ %50, %45 ], [ %57, %51 ]
  %61 = phi %"class.WTF::StringImpl"* [ %6, %45 ], [ %52, %51 ]
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %59
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %59
  %71 = phi i32 [ %69, %68 ], [ %67, %59 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %80

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #10
  br label %80

74:                                               ; preds = %2
  %75 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %76, i64 0, i32 3, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br label %94

80:                                               ; preds = %51, %70, %73
  %81 = phi i1 [ %60, %73 ], [ %60, %70 ], [ %57, %51 ]
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %80
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %80
  %91 = phi i32 [ %89, %88 ], [ %87, %80 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #10
  br label %94

94:                                               ; preds = %74, %90, %93
  %95 = phi i1 [ %79, %74 ], [ %81, %90 ], [ %81, %93 ]
  ret i1 %95
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16SVGScriptElement20SourceAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0
  %3 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15SVGURIReference16LegacyHrefStringERKNS_10SVGElementE(%"class.blink::SVGElement"* dereferenceable(168) %2) #10
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #10
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #10
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %1, %7, %22
  ret %"class.WTF::StringImpl"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16SVGScriptElement21FinishParsingChildrenEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::ParkableString", align 8
  %3 = alloca %class.scoped_refptr.6, align 8
  %4 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7Element21FinishParsingChildrenEv(%"class.blink::Element"* %4) #10
  %5 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 3
  store i8 1, i8* %5, align 8
  %6 = bitcast %"class.blink::ParkableString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = bitcast %class.scoped_refptr.6* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = tail call %"class.WTF::StringImpl"* @_ZN5blink7Element16TextFromChildrenEv(%"class.blink::Element"* %4) #10
  %9 = getelementptr inbounds %class.scoped_refptr.6, %class.scoped_refptr.6* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #10
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #10
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %1, %11, %26
  call void @_ZN5blink14ParkableStringC1EO13scoped_refptrIN3WTF10StringImplEE(%"class.blink::ParkableString"* nonnull %2, %class.scoped_refptr.6* nonnull dereferenceable(8) %3) #10
  %29 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 4
  %30 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %30, align 8
  %32 = icmp eq %"class.blink::ParkableStringImpl"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %31, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %34) #10
  br label %35

35:                                               ; preds = %33, %28
  %36 = ptrtoint %"class.blink::ParkableStringImpl"* %31 to i64
  %37 = bitcast %"class.blink::ParkableString"* %29 to i64*
  %38 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %29, i64 0, i32 0, i32 0
  %39 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %38, align 8
  store i64 %36, i64* %37, align 8
  %40 = icmp eq %"class.blink::ParkableStringImpl"* %39, null
  br i1 %40, label %48, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %39, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #10
  %43 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %39, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  call void @_ZN5blink18ParkableStringImplD1Ev(%"class.blink::ParkableStringImpl"* nonnull %39) #10
  %47 = bitcast %"class.blink::ParkableStringImpl"* %39 to i8*
  call void @free(i8* %47) #10
  br label %48

48:                                               ; preds = %35, %41, %46
  call void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"* nonnull %2) #10
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #10
  br label %64

64:                                               ; preds = %48, %60, %63
  br i1 %10, label %78, label %65

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #10
  br label %78

78:                                               ; preds = %64, %74, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  ret void
}

declare void @_ZN5blink7Element21FinishParsingChildrenEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink7Element16TextFromChildrenEv(%"class.blink::Element"*) local_unnamed_addr #1

declare void @_ZN5blink14ParkableStringC1EO13scoped_refptrIN3WTF10StringImplEE(%"class.blink::ParkableString"*, %class.scoped_refptr.6* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"*) unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink16SVGScriptElement27HaveLoadedRequiredResourcesEv(%"class.blink::SVGScriptElement"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZThn184_NK5blink16SVGScriptElement20SourceAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 3
  %3 = bitcast %"class.blink::Member.0"* %2 to %"class.blink::SVGElement"*
  %4 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15SVGURIReference16LegacyHrefStringERKNS_10SVGElementE(%"class.blink::SVGElement"* dereferenceable(168) %3) #10
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #10
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #10
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %1, %8, %23
  ret %"class.WTF::StringImpl"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16SVGScriptElement18TypeAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names9kTypeAttrE, align 8
  %4 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %2, %"class.blink::QualifiedName"* dereferenceable(8) %3) #10
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #10
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #10
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %1, %8, %23
  ret %"class.WTF::StringImpl"* %6
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZThn184_NK5blink16SVGScriptElement18TypeAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 3
  %3 = bitcast %"class.blink::Member.0"* %2 to %"class.blink::Element"*
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names9kTypeAttrE, align 8
  %5 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %4) #10
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #10
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !3

23:                                               ; preds = %14
  tail call void @llvm.trap() #10
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %1, %9, %24
  ret %"class.WTF::StringImpl"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink16SVGScriptElement16ChildTextContentEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0
  %3 = tail call %"class.WTF::StringImpl"* @_ZN5blink7Element16TextFromChildrenEv(%"class.blink::Element"* %2) #10
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZThn184_N5blink16SVGScriptElement16ChildTextContentEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 3
  %3 = bitcast %"class.blink::Member.0"* %2 to %"class.blink::Element"*
  %4 = tail call %"class.WTF::StringImpl"* @_ZN5blink7Element16TextFromChildrenEv(%"class.blink::Element"* %3) #10
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16SVGScriptElement22ScriptTextInternalSlotEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 4
  %3 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %2) #10
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #10
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #10
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %1, %7, %22
  ret %"class.WTF::StringImpl"* %5
}

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZThn184_NK5blink16SVGScriptElement22ScriptTextInternalSlotEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 3
  %3 = getelementptr inbounds %"class.blink::Member.0", %"class.blink::Member.0"* %2, i64 25
  %4 = bitcast %"class.blink::Member.0"* %3 to %"class.blink::ParkableString"*
  %5 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %4) #10
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #10
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !3

23:                                               ; preds = %14
  tail call void @llvm.trap() #10
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %1, %9, %24
  ret %"class.WTF::StringImpl"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16SVGScriptElement18HasSourceAttributeEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0
  %3 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15SVGURIReference16LegacyHrefStringERKNS_10SVGElementE(%"class.blink::SVGElement"* dereferenceable(168) %2) #10
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp ne %"class.WTF::StringImpl"* %5, null
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn184_NK5blink16SVGScriptElement18HasSourceAttributeEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 3
  %3 = bitcast %"class.blink::Member.0"* %2 to %"class.blink::SVGElement"*
  %4 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15SVGURIReference16LegacyHrefStringERKNS_10SVGElementE(%"class.blink::SVGElement"* dereferenceable(168) %3) #10
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp ne %"class.WTF::StringImpl"* %6, null
  ret i1 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16SVGScriptElement11IsConnectedEv(%"class.blink::SVGScriptElement"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 256
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZThn184_NK5blink16SVGScriptElement11IsConnectedEv(%"class.blink::SVGScriptElement"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 3
  %3 = getelementptr inbounds %"class.blink::Member.0", %"class.blink::Member.0"* %2, i64 2
  %4 = bitcast %"class.blink::Member.0"* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 256
  %7 = icmp ne i32 %6, 0
  ret i1 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16SVGScriptElement11HasChildrenEv(%"class.blink::SVGScriptElement"* readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = icmp eq %"class.blink::SVGScriptElement"* %0, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1
  %11 = bitcast %"class.blink::Node"* %10 to %"class.blink::Node"**
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp ne %"class.blink::Node"* %12, null
  br label %14

14:                                               ; preds = %1, %4, %9
  %15 = phi i1 [ %13, %9 ], [ false, %1 ], [ false, %4 ]
  ret i1 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZThn184_NK5blink16SVGScriptElement11HasChildrenEv(%"class.blink::SVGScriptElement"* readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 3
  %3 = icmp eq %"class.blink::Member.0"* %2, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::Member.0", %"class.blink::Member.0"* %2, i64 2
  %6 = bitcast %"class.blink::Member.0"* %5 to i32*
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::Member.0", %"class.blink::Member.0"* %2, i64 8
  %12 = bitcast %"class.blink::Member.0"* %11 to %"class.blink::Node"**
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp ne %"class.blink::Node"* %13, null
  br label %15

15:                                               ; preds = %1, %4, %10
  %16 = phi i1 [ %14, %10 ], [ false, %1 ], [ false, %4 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16SVGScriptElement18GetNonceForElementEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0
  %3 = tail call zeroext i1 @_ZN5blink21ContentSecurityPolicy18IsNonceableElementEPKNS_7ElementE(%"class.blink::Element"* %2) #10
  br i1 %3, label %4, label %6

4:                                                ; preds = %1
  %5 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element5nonceEv(%"class.blink::Element"* %2) #10
  br label %8

6:                                                ; preds = %1
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %8

8:                                                ; preds = %6, %4
  %9 = phi %"class.WTF::AtomicString"* [ %5, %4 ], [ %7, %6 ]
  ret %"class.WTF::AtomicString"* %9
}

declare zeroext i1 @_ZN5blink21ContentSecurityPolicy18IsNonceableElementEPKNS_7ElementE(%"class.blink::Element"*) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element5nonceEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZThn184_NK5blink16SVGScriptElement18GetNonceForElementEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 3
  %3 = bitcast %"class.blink::Member.0"* %2 to %"class.blink::Element"*
  %4 = tail call zeroext i1 @_ZN5blink21ContentSecurityPolicy18IsNonceableElementEPKNS_7ElementE(%"class.blink::Element"* %3) #10
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element5nonceEv(%"class.blink::Element"* %3) #10
  br label %9

7:                                                ; preds = %1
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %9

9:                                                ; preds = %5, %7
  %10 = phi %"class.WTF::AtomicString"* [ %6, %5 ], [ %8, %7 ]
  ret %"class.WTF::AtomicString"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16SVGScriptElement23AllowInlineScriptForCSPERKN3WTF12AtomicStringERKNS1_13OrdinalNumberERKNS1_6StringE(%"class.blink::SVGScriptElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::OrdinalNumber"* dereferenceable(4), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %5) #10
  %7 = tail call %"class.blink::ContentSecurityPolicy"* @_ZN5blink16ExecutionContext39GetContentSecurityPolicyForCurrentWorldEv(%"class.blink::ExecutionContext"* %6) #10
  %8 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %13, i64 0, i32 19, i32 4
  %15 = tail call zeroext i1 @_ZN5blink21ContentSecurityPolicy11AllowInlineENS0_10InlineTypeEPNS_7ElementERKN3WTF6StringES7_S7_RKNS4_13OrdinalNumberENS_20ReportingDispositionE(%"class.blink::ContentSecurityPolicy"* %7, i32 1, %"class.blink::Element"* %8, %"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %9, %"class.WTF::String"* dereferenceable(8) %14, %"class.WTF::OrdinalNumber"* dereferenceable(4) %2, i32 1) #10
  ret i1 %15
}

declare %"class.blink::ContentSecurityPolicy"* @_ZN5blink16ExecutionContext39GetContentSecurityPolicyForCurrentWorldEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink21ContentSecurityPolicy11AllowInlineENS0_10InlineTypeEPNS_7ElementERKN3WTF6StringES7_S7_RKNS4_13OrdinalNumberENS_20ReportingDispositionE(%"class.blink::ContentSecurityPolicy"*, i32, %"class.blink::Element"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::OrdinalNumber"* dereferenceable(4), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn184_N5blink16SVGScriptElement23AllowInlineScriptForCSPERKN3WTF12AtomicStringERKNS1_13OrdinalNumberERKNS1_6StringE(%"class.blink::SVGScriptElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::OrdinalNumber"* dereferenceable(4), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 3
  %6 = bitcast %"class.blink::Member.0"* %5 to %"class.blink::Node"*
  %7 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %6) #10
  %8 = tail call %"class.blink::ContentSecurityPolicy"* @_ZN5blink16ExecutionContext39GetContentSecurityPolicyForCurrentWorldEv(%"class.blink::ExecutionContext"* %7) #10
  %9 = bitcast %"class.blink::Member.0"* %5 to %"class.blink::Element"*
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::Member.0", %"class.blink::Member.0"* %5, i64 4, i32 0, i32 0
  %12 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %14, i64 0, i32 19, i32 4
  %16 = tail call zeroext i1 @_ZN5blink21ContentSecurityPolicy11AllowInlineENS0_10InlineTypeEPNS_7ElementERKN3WTF6StringES7_S7_RKNS4_13OrdinalNumberENS_20ReportingDispositionE(%"class.blink::ContentSecurityPolicy"* %8, i32 1, %"class.blink::Element"* %9, %"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %10, %"class.WTF::String"* dereferenceable(8) %15, %"class.WTF::OrdinalNumber"* dereferenceable(4) %2, i32 1) #10
  ret i1 %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(2848) %"class.blink::Document"* @_ZThn184_NK5blink16SVGScriptElement11GetDocumentEv(%"class.blink::SVGScriptElement"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 3
  %3 = getelementptr inbounds %"class.blink::Member.0", %"class.blink::Member.0"* %2, i64 4, i32 0, i32 0
  %4 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  ret %"class.blink::Document"* %6
}

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZThn184_NK5blink16SVGScriptElement19GetExecutionContextEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 3
  %3 = bitcast %"class.blink::Member.0"* %2 to %"class.blink::Node"*
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %3) #10
  ret %"class.blink::ExecutionContext"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(104) %"class.blink::Element"* @_ZNK5blink16SVGScriptElement33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::SVGScriptElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CreateElementFlags", align 8
  %4 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 5, i32 0, i32 0
  %5 = load %"class.blink::ScriptLoader"*, %"class.blink::ScriptLoader"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %5, i64 0, i32 3
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = shl nuw nsw i8 %7, 2
  %9 = or i8 %8, 3
  %10 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0, i32 2
  %12 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %3, i64 0, i32 0
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %3, i64 0, i32 3
  store i8 %9, i8* %13, align 8
  %14 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element7IsValueEv(%"class.blink::Element"* %10) #10
  %15 = tail call %"class.blink::Element"* @_ZN5blink8Document13CreateElementERKNS_13QualifiedNameENS_18CreateElementFlagsERKN3WTF12AtomicStringE(%"class.blink::Document"* %1, %"class.blink::QualifiedName"* dereferenceable(8) %11, %"class.blink::CreateElementFlags"* nonnull byval(%"class.blink::CreateElementFlags") align 8 %3, %"class.WTF::AtomicString"* dereferenceable(8) %14) #10
  ret %"class.blink::Element"* %15
}

declare %"class.blink::Element"* @_ZN5blink8Document13CreateElementERKNS_13QualifiedNameENS_18CreateElementFlagsERKN3WTF12AtomicStringE(%"class.blink::Document"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::CreateElementFlags"* byval(%"class.blink::CreateElementFlags") align 8, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element7IsValueEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16SVGScriptElement17DispatchLoadEventEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names5kLoadE, align 8
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #10
  %5 = bitcast i8* %4 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %5, %"class.WTF::AtomicString"* dereferenceable(8) %3, i32 1, i32 1, i32 1) #10
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %2, %"class.blink::Event"* dereferenceable(104) %5) #10
  %11 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 3
  store i8 1, i8* %11, align 8
  ret void
}

declare i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn184_N5blink16SVGScriptElement17DispatchLoadEventEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 3
  %3 = bitcast %"class.blink::Member.0"* %2 to %"class.blink::EventTarget"*
  %4 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names5kLoadE, align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #10
  %6 = bitcast i8* %5 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %6, %"class.WTF::AtomicString"* dereferenceable(8) %4, i32 1, i32 1, i32 1) #10
  %7 = getelementptr inbounds i8, i8* %5, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %3, %"class.blink::Event"* dereferenceable(104) %6) #10
  %12 = getelementptr inbounds %"class.blink::Member.0", %"class.blink::Member.0"* %2, i64 24
  %13 = bitcast %"class.blink::Member.0"* %12 to i8*
  store i8 1, i8* %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16SVGScriptElement18DispatchErrorEventEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #10
  %5 = bitcast i8* %4 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %5, %"class.WTF::AtomicString"* dereferenceable(8) %3, i32 1, i32 1, i32 1) #10
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %2, %"class.blink::Event"* dereferenceable(104) %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn184_N5blink16SVGScriptElement18DispatchErrorEventEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 3
  %3 = bitcast %"class.blink::Member.0"* %2 to %"class.blink::EventTarget"*
  %4 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #10
  %6 = bitcast i8* %5 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %6, %"class.WTF::AtomicString"* dereferenceable(8) %4, i32 1, i32 1, i32 1) #10
  %7 = getelementptr inbounds i8, i8* %5, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %3, %"class.blink::Event"* dereferenceable(104) %6) #10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink16SVGScriptElement20GetScriptElementTypeEv(%"class.blink::SVGScriptElement"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZThn184_N5blink16SVGScriptElement20GetScriptElementTypeEv(%"class.blink::SVGScriptElement"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.WTF::HashMap.760"* @_ZNK5blink16SVGScriptElement24GetCheckedAttributeTypesEv(%"class.blink::SVGScriptElement"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca [1 x %"struct.WTF::KeyValuePair.764"], align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink16SVGScriptElement24GetCheckedAttributeTypesEvE15s_attribute_map to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %54, !prof !4

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink16SVGScriptElement24GetCheckedAttributeTypesEvE15s_attribute_map) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %54, label %8

8:                                                ; preds = %5
  %9 = bitcast [1 x %"struct.WTF::KeyValuePair.764"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names9kHrefAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds [1 x %"struct.WTF::KeyValuePair.764"], [1 x %"struct.WTF::KeyValuePair.764"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %15, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i33
  %26 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #10
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !3

31:                                               ; preds = %22
  tail call void @llvm.trap() #10
  unreachable

32:                                               ; preds = %22
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %23, align 4
  br label %34

34:                                               ; preds = %32, %17, %8
  %35 = getelementptr inbounds [1 x %"struct.WTF::KeyValuePair.764"], [1 x %"struct.WTF::KeyValuePair.764"]* %2, i64 0, i64 0, i32 1
  store i32 3, i32* %35, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZNK5blink16SVGScriptElement24GetCheckedAttributeTypesEvE15s_attribute_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #10
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.761"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink16SVGScriptElement24GetCheckedAttributeTypesEvE15s_attribute_map to %"class.WTF::HashTable.761"*), i32 1) #10
  %36 = getelementptr inbounds [1 x %"struct.WTF::KeyValuePair.764"], [1 x %"struct.WTF::KeyValuePair.764"]* %2, i64 0, i64 0, i32 0
  %37 = call { %"struct.WTF::KeyValuePair.764"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.761"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink16SVGScriptElement24GetCheckedAttributeTypesEvE15s_attribute_map to %"class.WTF::HashTable.761"*), %"class.WTF::AtomicString"* nonnull dereferenceable(8) %36, i32* dereferenceable(4) %35) #10
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #10
  br label %53

53:                                               ; preds = %34, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink16SVGScriptElement24GetCheckedAttributeTypesEvE15s_attribute_map) #10
  br label %54

54:                                               ; preds = %5, %53, %1
  ret %"class.WTF::HashMap.760"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink16SVGScriptElement24GetCheckedAttributeTypesEvE15s_attribute_map to %"class.WTF::HashMap.760"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::V8UnionHTMLScriptElementOrSVGScriptElement"* @_ZN5blink16SVGScriptElement26AsV8HTMLOrSVGScriptElementEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 512
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %21

6:                                                ; preds = %1
  %7 = ptrtoint %"class.blink::SVGScriptElement"* %0 to i64
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64 32) #10
  %9 = bitcast i8* %8 to %"class.blink::V8UnionHTMLScriptElementOrSVGScriptElement"*
  %10 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink42V8UnionHTMLScriptElementOrSVGScriptElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 1, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 16
  %14 = bitcast i8* %13 to %"class.blink::HTMLScriptElement"**
  store %"class.blink::HTMLScriptElement"* null, %"class.blink::HTMLScriptElement"** %14, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 24
  %16 = bitcast i8* %15 to i64*
  store i64 %7, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 -4
  %18 = bitcast i8* %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = or i16 %19, 1
  store atomic i16 %20, i16* %18 release, align 2
  br label %21

21:                                               ; preds = %1, %6
  %22 = phi %"class.blink::V8UnionHTMLScriptElementOrSVGScriptElement"* [ %9, %6 ], [ null, %1 ]
  ret %"class.blink::V8UnionHTMLScriptElementOrSVGScriptElement"* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::V8UnionHTMLScriptElementOrSVGScriptElement"* @_ZThn184_N5blink16SVGScriptElement26AsV8HTMLOrSVGScriptElementEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 3
  %3 = getelementptr inbounds %"class.blink::Member.0", %"class.blink::Member.0"* %2, i64 2
  %4 = bitcast %"class.blink::Member.0"* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 512
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %23

8:                                                ; preds = %1
  %9 = ptrtoint %"class.blink::Member.0"* %2 to i64
  %10 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64 32) #10
  %11 = bitcast i8* %10 to %"class.blink::V8UnionHTMLScriptElementOrSVGScriptElement"*
  %12 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink42V8UnionHTMLScriptElementOrSVGScriptElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %10, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 1, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %10, i64 16
  %16 = bitcast i8* %15 to %"class.blink::HTMLScriptElement"**
  store %"class.blink::HTMLScriptElement"* null, %"class.blink::HTMLScriptElement"** %16, align 8
  %17 = getelementptr inbounds i8, i8* %10, i64 24
  %18 = bitcast i8* %17 to i64*
  store i64 %9, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %10, i64 -4
  %20 = bitcast i8* %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = or i16 %21, 1
  store atomic i16 %22, i16* %20 release, align 2
  br label %23

23:                                               ; preds = %1, %8
  %24 = phi %"class.blink::V8UnionHTMLScriptElementOrSVGScriptElement"* [ %11, %8 ], [ null, %1 ]
  ret %"class.blink::V8UnionHTMLScriptElementOrSVGScriptElement"* %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16SVGScriptElement5TraceEPNS_7VisitorE(%"class.blink::SVGScriptElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 5
  %4 = bitcast %"class.blink::Member.57"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12ScriptLoaderEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0
  tail call void @_ZNK5blink10SVGElement5TraceEPNS_7VisitorE(%"class.blink::SVGElement"* %14, %"class.blink::Visitor"* %1) #10
  %15 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 1
  tail call void @_ZNK5blink15SVGURIReference5TraceEPNS_7VisitorE(%"class.blink::SVGURIReference"* %15, %"class.blink::Visitor"* %1) #10
  ret void
}

declare void @_ZNK5blink10SVGElement5TraceEPNS_7VisitorE(%"class.blink::SVGElement"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZNK5blink15SVGURIReference5TraceEPNS_7VisitorE(%"class.blink::SVGURIReference"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn168_NK5blink16SVGScriptElement5TraceEPNS_7VisitorE(%"class.blink::SVGScriptElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 5
  %4 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 26
  %5 = bitcast %"class.blink::Member"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12ScriptLoaderEE5TraceEPNS_7VisitorEPKv) #10
  br label %14

14:                                               ; preds = %2, %8
  %15 = bitcast %"class.blink::Member"* %3 to %"class.blink::SVGElement"*
  tail call void @_ZNK5blink10SVGElement5TraceEPNS_7VisitorE(%"class.blink::SVGElement"* %15, %"class.blink::Visitor"* %1) #10
  %16 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 21
  %17 = bitcast %"class.blink::Member"* %16 to %"class.blink::SVGURIReference"*
  tail call void @_ZNK5blink15SVGURIReference5TraceEPNS_7VisitorE(%"class.blink::SVGURIReference"* %17, %"class.blink::Visitor"* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn184_NK5blink16SVGScriptElement5TraceEPNS_7VisitorE(%"class.blink::SVGScriptElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.blink::Member.0", %"class.blink::Member.0"* %3, i64 26
  %5 = bitcast %"class.blink::Member.0"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12ScriptLoaderEE5TraceEPNS_7VisitorEPKv) #10
  br label %14

14:                                               ; preds = %2, %8
  %15 = bitcast %"class.blink::Member.0"* %3 to %"class.blink::SVGElement"*
  tail call void @_ZNK5blink10SVGElement5TraceEPNS_7VisitorE(%"class.blink::SVGElement"* %15, %"class.blink::Visitor"* %1) #10
  %16 = getelementptr inbounds %"class.blink::Member.0", %"class.blink::Member.0"* %3, i64 21
  %17 = bitcast %"class.blink::Member.0"* %16 to %"class.blink::SVGURIReference"*
  tail call void @_ZNK5blink15SVGURIReference5TraceEPNS_7VisitorE(%"class.blink::SVGURIReference"* %17, %"class.blink::Visitor"* %1) #10
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16SVGScriptElementD2Ev(%"class.blink::SVGScriptElement"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 4
  tail call void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"* %6) #10
  %7 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink10SVGElementD2Ev(%"class.blink::SVGElement"* %7) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16SVGScriptElementD0Ev(%"class.blink::SVGScriptElement"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 4
  tail call void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"* %6) #10
  %7 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink10SVGElementD2Ev(%"class.blink::SVGElement"* %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #10
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink16SVGScriptElement18GetWrapperTypeInfoEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink16SVGScriptElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink10SVGElement18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::SVGElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink10SVGElement20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::SVGElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element8nodeNameEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #1

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23CanContainRangeEndPointEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::ContainerNode"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZNK5blink13ContainerNode11BoundingBoxEv() unnamed_addr

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN5blink10SVGElement16DetachLayoutTreeEb(%"class.blink::SVGElement"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink10SVGElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::SVGElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare void @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node13DebugNodeNameEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #10
  ret %"class.blink::ComputedStyle"* %4
}

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

declare zeroext i1 @_ZNK5blink10SVGElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink10SVGElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink10SVGElement41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::SVGElement"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #1

declare void @_ZN5blink10SVGElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink7Element24SubResourceAttributeNameEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.blink::LayoutObject"* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16SVGScriptElement20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::SVGScriptElement"*, %"class.blink::ComputedStyle"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink10SVGElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::SVGElement"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element10IsLiveLinkEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element14ImageSourceURLEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Image"* @_ZN5blink7Element13ImageContentsEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Image"* null
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"*) unnamed_addr #1

declare void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #1

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement13SupportsFocusEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink7Element19IsKeyboardFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink10SVGElement5titleEv(%"class.blink::SVGElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink7Element14DefaultToolTipEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BeginParsingChildrenEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, -1025
  store i32 %4, i32* %2, align 8
  ret void
}

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesDefaultPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesEnabledPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element26MatchesReadOnlyPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27MatchesReadWritePseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element28MatchesValidityPseudoClassesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25ShouldAppearIndeterminateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsFormControlElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element13IsTextControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsOptionalFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsRequiredFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12willValidateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink7Element14IsValidElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element9IsInRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12IsOutOfRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16SVGScriptElement15IsScriptElementEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25HasNonInBodyInsertionModeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDisabledFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BuildPendingResourceEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element11IsAdRelatedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink10SVGElement15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::SVGElement"*, i64) unnamed_addr #1

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare void @_ZN5blink10SVGElement26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink7Element16GetNamedItemTypeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare zeroext i1 @_ZNK5blink7Element16IsFocusableStyleEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element22ParserDidSetAttributesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23AreAuthorShadowsAllowedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::Element"*, %"class.blink::ShadowRoot"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink7Element15DefaultTabIndexEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink10SVGElement29LocalCoordinateSpaceTransformENS0_8CTMScopeE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement20IsSVGGeometryElementEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement20IsSVGGraphicsElementEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement14IsFilterEffectEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement13IsTextContentEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement17IsTextPositioningEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16SVGScriptElement22IsStructurallyExternalEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0
  %3 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15SVGURIReference16LegacyHrefStringERKNS_10SVGElementE(%"class.blink::SVGElement"* dereferenceable(168) %2) #10
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp ne %"class.WTF::StringImpl"* %5, null
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement7IsValidEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AffineTransform"* @_ZN5blink10SVGElement22AnimateMotionTransformEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::AffineTransform"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement22SelfHasRelativeLengthsEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptLoader"* @_ZNK5blink16SVGScriptElement6LoaderEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.blink::ScriptLoader"*, %"class.blink::ScriptLoader"** %2, align 8
  ret %"class.blink::ScriptLoader"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16SVGScriptElement19AsyncAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink16SVGScriptElement21CharsetAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink16SVGScriptElement25CrossOriginAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16SVGScriptElement19DeferAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink16SVGScriptElement19EventAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink16SVGScriptElement17ForAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink16SVGScriptElement23IntegrityAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink16SVGScriptElement28ReferrerPolicyAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink16SVGScriptElement24ImportanceAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink16SVGScriptElement22LanguageAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16SVGScriptElement22NomoduleAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16SVGScriptElement29ElementHasDuplicateAttributesEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 16777216
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn168_N5blink16SVGScriptElementD1Ev(%"class.blink::SVGScriptElement"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 5
  %3 = bitcast %"class.blink::Member"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 10
  %5 = bitcast %"class.blink::Member"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 21
  %7 = bitcast %"class.blink::Member"* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 23
  %9 = bitcast %"class.blink::Member"* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 25
  %11 = bitcast %"class.blink::Member"* %10 to %"class.blink::ParkableString"*
  tail call void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"* %11) #10
  %12 = bitcast %"class.blink::Member"* %2 to %"class.blink::SVGElement"*
  tail call void @_ZN5blink10SVGElementD2Ev(%"class.blink::SVGElement"* %12) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn168_N5blink16SVGScriptElementD0Ev(%"class.blink::SVGScriptElement"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 5
  %3 = bitcast %"class.blink::Member"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 10
  %5 = bitcast %"class.blink::Member"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 21
  %7 = bitcast %"class.blink::Member"* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 23
  %9 = bitcast %"class.blink::Member"* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }, { [196 x i8*], [3 x i8*], [5 x i8*], [31 x i8*] }* @_ZTVN5blink16SVGScriptElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 25
  %11 = bitcast %"class.blink::Member"* %10 to %"class.blink::ParkableString"*
  tail call void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"* %11) #10
  %12 = bitcast %"class.blink::Member"* %2 to %"class.blink::SVGElement"*
  tail call void @_ZN5blink10SVGElementD2Ev(%"class.blink::SVGElement"* %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn184_NK5blink16SVGScriptElement19AsyncAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZThn184_NK5blink16SVGScriptElement21CharsetAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZThn184_NK5blink16SVGScriptElement25CrossOriginAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn184_NK5blink16SVGScriptElement19DeferAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZThn184_NK5blink16SVGScriptElement19EventAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZThn184_NK5blink16SVGScriptElement17ForAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZThn184_NK5blink16SVGScriptElement23IntegrityAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZThn184_NK5blink16SVGScriptElement22LanguageAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn184_NK5blink16SVGScriptElement22NomoduleAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZThn184_NK5blink16SVGScriptElement28ReferrerPolicyAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZThn184_NK5blink16SVGScriptElement24ImportanceAttributeValueEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn184_NK5blink16SVGScriptElement29ElementHasDuplicateAttributesEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 3
  %3 = getelementptr inbounds %"class.blink::Member.0", %"class.blink::Member.0"* %2, i64 2
  %4 = bitcast %"class.blink::Member.0"* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 16777216
  %7 = icmp ne i32 %6, 0
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptLoader"* @_ZThn184_NK5blink16SVGScriptElement6LoaderEv(%"class.blink::SVGScriptElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGScriptElement", %"class.blink::SVGScriptElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 3
  %3 = getelementptr inbounds %"class.blink::Member.0", %"class.blink::Member.0"* %2, i64 26
  %4 = bitcast %"class.blink::Member.0"* %3 to %"class.blink::ScriptLoader"**
  %5 = load %"class.blink::ScriptLoader"*, %"class.blink::ScriptLoader"** %4, align 8
  ret %"class.blink::ScriptLoader"* %5
}

declare void @_ZN5blink10SVGElement19InvalidateInstancesEv(%"class.blink::SVGElement"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink18ParkableStringImplD1Ev(%"class.blink::ParkableStringImpl"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #10
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink10SVGElementD2Ev(%"class.blink::SVGElement"*) unnamed_addr #4

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.761"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.761", %"class.WTF::HashTable.761"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %63

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0)) #10
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringEN5blink19SpecificTrustedTypeEEEEEPKcv, i64 0, i64 0)) #10
  %30 = bitcast i8* %29 to %"struct.WTF::KeyValuePair.764"*
  %31 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %32 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %31, i64 0, i32 0, i32 0, i32 0
  br label %33

33:                                               ; preds = %55, %26
  %34 = phi i64 [ 0, %26 ], [ %59, %55 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.764", %"struct.WTF::KeyValuePair.764"* %30, i64 %34
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #10
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  call void @llvm.trap() #10
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %33
  %56 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %57 = bitcast %"struct.WTF::KeyValuePair.764"* %35 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.764", %"struct.WTF::KeyValuePair.764"* %30, i64 %34, i32 1
  store i32 -128, i32* %58, align 8
  %59 = add nuw nsw i64 %34, 1
  %60 = icmp eq i64 %59, %27
  br i1 %60, label %61, label %33

61:                                               ; preds = %55
  %62 = call %"struct.WTF::KeyValuePair.764"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.761"* %0, %"struct.WTF::KeyValuePair.764"* %30, i32 %17, %"struct.WTF::KeyValuePair.764"* null) #10
  br label %63

63:                                               ; preds = %61, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.764"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.761"*, %"struct.WTF::KeyValuePair.764"*, i32, %"struct.WTF::KeyValuePair.764"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.764"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.761", %"class.WTF::HashTable.761"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.761", %"class.WTF::HashTable.761"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.761"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.764"*, %"struct.WTF::KeyValuePair.764"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.764"* %16 to i64
  br label %61

18:                                               ; preds = %160
  %19 = bitcast %"class.WTF::HashTable.761"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %161, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.764"* [ null, %10 ], [ %164, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %162, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.764"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %57, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi i64 [ 0, %29 ], [ %53, %52 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.764", %"struct.WTF::KeyValuePair.764"* %25, i64 %32
  %34 = bitcast %"struct.WTF::KeyValuePair.764"* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8* %35 to %"class.WTF::StringImpl"*
  %37 = ptrtoint i8* %35 to i64
  switch i64 %37, label %38 [
    i64 -1, label %52
    i64 0, label %52
  ]

38:                                               ; preds = %31
  %39 = getelementptr inbounds i8, i8* %35, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = bitcast i8* %35 to i32*
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %38
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %38
  %49 = phi i32 [ %47, %46 ], [ %45, %38 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #10
  br label %52

52:                                               ; preds = %51, %48, %31, %31
  %53 = add nuw nsw i64 %32, 1
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %55, label %31

55:                                               ; preds = %52, %27
  %56 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #10
  br label %57

57:                                               ; preds = %20, %55
  %58 = getelementptr inbounds %"class.WTF::HashTable.761", %"class.WTF::HashTable.761"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, -2147483648
  store i32 %60, i32* %58, align 8
  ret %"struct.WTF::KeyValuePair.764"* %23

61:                                               ; preds = %13, %160
  %62 = phi i64 [ %17, %13 ], [ %161, %160 ]
  %63 = phi i32 [ %7, %13 ], [ %162, %160 ]
  %64 = phi %"struct.WTF::KeyValuePair.764"* [ %16, %13 ], [ %163, %160 ]
  %65 = phi %"struct.WTF::KeyValuePair.764"* [ null, %13 ], [ %164, %160 ]
  %66 = phi i32 [ 0, %13 ], [ %165, %160 ]
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.764", %"struct.WTF::KeyValuePair.764"* %64, i64 %67
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.764", %"struct.WTF::KeyValuePair.764"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = bitcast %"struct.WTF::KeyValuePair.764"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = inttoptr i64 %71 to %"class.WTF::StringImpl"*
  switch i64 %71, label %73 [
    i64 -1, label %160
    i64 0, label %160
  ]

73:                                               ; preds = %61
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = lshr i32 %75, 8
  %77 = and i32 %76, %14
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.764", %"struct.WTF::KeyValuePair.764"* %1, i64 %78
  %80 = ptrtoint %"struct.WTF::KeyValuePair.764"* %79 to i64
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.764", %"struct.WTF::KeyValuePair.764"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %100, label %84

84:                                               ; preds = %73
  %85 = xor i32 %76, -1
  %86 = lshr i32 %75, 31
  %87 = add nsw i32 %86, %85
  %88 = shl i32 %87, 12
  %89 = xor i32 %88, %87
  %90 = lshr i32 %89, 7
  %91 = xor i32 %90, %89
  %92 = shl i32 %91, 2
  %93 = xor i32 %92, %91
  %94 = lshr i32 %93, 20
  %95 = xor i32 %94, %93
  %96 = or i32 %95, 1
  %97 = zext i32 %96 to i64
  br label %106

98:                                               ; preds = %118
  %99 = ptrtoint %"struct.WTF::KeyValuePair.764"* %124 to i64
  br label %100

100:                                              ; preds = %98, %73
  %101 = phi i64 [ %80, %73 ], [ %99, %98 ]
  %102 = phi %"struct.WTF::KeyValuePair.764"* [ null, %73 ], [ %119, %98 ]
  %103 = icmp eq %"struct.WTF::KeyValuePair.764"* %102, null
  %104 = ptrtoint %"struct.WTF::KeyValuePair.764"* %102 to i64
  %105 = select i1 %103, i64 %101, i64 %104
  br label %129

106:                                              ; preds = %118, %84
  %107 = phi %"struct.WTF::KeyValuePair.764"* [ null, %84 ], [ %119, %118 ]
  %108 = phi i64 [ %80, %84 ], [ %125, %118 ]
  %109 = phi %"struct.WTF::KeyValuePair.764"* [ %79, %84 ], [ %124, %118 ]
  %110 = phi i64 [ %78, %84 ], [ %123, %118 ]
  %111 = phi i64 [ 0, %84 ], [ %121, %118 ]
  %112 = bitcast %"struct.WTF::KeyValuePair.764"* %109 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, inttoptr (i64 -1 to i8*)
  br i1 %114, label %118, label %115

115:                                              ; preds = %106
  %116 = bitcast i8* %113 to %"class.WTF::StringImpl"*
  %117 = icmp eq %"class.WTF::StringImpl"* %72, %116
  br i1 %117, label %129, label %118

118:                                              ; preds = %115, %106
  %119 = phi %"struct.WTF::KeyValuePair.764"* [ %107, %115 ], [ %109, %106 ]
  %120 = icmp eq i64 %111, 0
  %121 = select i1 %120, i64 %97, i64 %111
  %122 = add i64 %121, %110
  %123 = and i64 %122, %15
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair.764", %"struct.WTF::KeyValuePair.764"* %1, i64 %123
  %125 = ptrtoint %"struct.WTF::KeyValuePair.764"* %124 to i64
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.764", %"struct.WTF::KeyValuePair.764"* %124, i64 0, i32 0, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %98, label %106

129:                                              ; preds = %115, %100
  %130 = phi i64 [ %105, %100 ], [ %108, %115 ]
  %131 = inttoptr i64 %130 to %"struct.WTF::KeyValuePair.764"*
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.764", %"struct.WTF::KeyValuePair.764"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #10
  br label %148

148:                                              ; preds = %129, %144, %147
  %149 = load i64, i64* %70, align 8
  %150 = inttoptr i64 %130 to i64*
  store i64 %149, i64* %150, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %151 = getelementptr inbounds %"struct.WTF::KeyValuePair.764", %"struct.WTF::KeyValuePair.764"* %131, i64 0, i32 1
  %152 = getelementptr inbounds %"struct.WTF::KeyValuePair.764", %"struct.WTF::KeyValuePair.764"* %64, i64 %67, i32 1
  %153 = load i32, i32* %152, align 8
  store i32 %153, i32* %151, align 8
  %154 = load %"struct.WTF::KeyValuePair.764"*, %"struct.WTF::KeyValuePair.764"** %9, align 8
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair.764", %"struct.WTF::KeyValuePair.764"* %154, i64 %67
  %156 = icmp eq %"struct.WTF::KeyValuePair.764"* %155, %3
  %157 = select i1 %156, %"struct.WTF::KeyValuePair.764"* %131, %"struct.WTF::KeyValuePair.764"* %65
  %158 = load i32, i32* %6, align 8
  %159 = ptrtoint %"struct.WTF::KeyValuePair.764"* %154 to i64
  br label %160

160:                                              ; preds = %61, %61, %148
  %161 = phi i64 [ %62, %61 ], [ %159, %148 ], [ %62, %61 ]
  %162 = phi i32 [ %63, %61 ], [ %158, %148 ], [ %63, %61 ]
  %163 = phi %"struct.WTF::KeyValuePair.764"* [ %64, %61 ], [ %154, %148 ], [ %64, %61 ]
  %164 = phi %"struct.WTF::KeyValuePair.764"* [ %65, %61 ], [ %157, %148 ], [ %65, %61 ]
  %165 = add i32 %66, 1
  %166 = icmp eq i32 %165, %162
  br i1 %166, label %18, label %61
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.764"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.761"*, %"class.WTF::AtomicString"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.761", %"class.WTF::HashTable.761"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.764"*, %"struct.WTF::KeyValuePair.764"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.764"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.764"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.761"* %0, %"struct.WTF::KeyValuePair.764"* null)
  %9 = load %"struct.WTF::KeyValuePair.764"*, %"struct.WTF::KeyValuePair.764"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.764"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.761", %"class.WTF::HashTable.761"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.764", %"struct.WTF::KeyValuePair.764"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.764", %"struct.WTF::KeyValuePair.764"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %97, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair.764"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair.764"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.764"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %151, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair.764"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.764", %"struct.WTF::KeyValuePair.764"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.764", %"struct.WTF::KeyValuePair.764"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair.764"* %53, null
  br i1 %63, label %97, label %64

64:                                               ; preds = %62
  %65 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %66 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %86, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %86

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i33
  %78 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %77, i33 1) #10
  %79 = extractvalue { i33, i1 } %78, 1
  %80 = extractvalue { i33, i1 } %78, 0
  %81 = icmp slt i33 %80, 0
  %82 = or i1 %79, %81
  br i1 %82, label %83, label %84, !prof !3

83:                                               ; preds = %74
  tail call void @llvm.trap() #10
  unreachable

84:                                               ; preds = %74
  %85 = trunc i33 %80 to i32
  store i32 %85, i32* %75, align 4
  br label %86

86:                                               ; preds = %64, %69, %84
  %87 = ptrtoint %"class.WTF::StringImpl"* %67 to i64
  %88 = bitcast %"struct.WTF::KeyValuePair.764"* %53 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.764", %"struct.WTF::KeyValuePair.764"* %53, i64 0, i32 1
  store i32 -128, i32* %89, align 8
  %90 = getelementptr inbounds %"class.WTF::HashTable.761", %"class.WTF::HashTable.761"* %0, i64 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = add i32 %91, 2147483647
  %93 = and i32 %92, 2147483647
  %94 = and i32 %91, -2147483648
  %95 = or i32 %93, %94
  store i32 %95, i32* %90, align 8
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  br label %97

97:                                               ; preds = %10, %62, %86
  %98 = phi %"class.WTF::StringImpl"* [ %96, %86 ], [ %17, %62 ], [ %17, %10 ]
  %99 = phi %"struct.WTF::KeyValuePair.764"* [ %53, %86 ], [ %58, %62 ], [ %23, %10 ]
  %100 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %100, label %118, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %118

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = zext i32 %108 to i33
  %110 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %109, i33 1) #10
  %111 = extractvalue { i33, i1 } %110, 1
  %112 = extractvalue { i33, i1 } %110, 0
  %113 = icmp slt i33 %112, 0
  %114 = or i1 %111, %113
  br i1 %114, label %115, label %116, !prof !3

115:                                              ; preds = %106
  tail call void @llvm.trap() #10
  unreachable

116:                                              ; preds = %106
  %117 = trunc i33 %112 to i32
  store i32 %117, i32* %107, align 4
  br label %118

118:                                              ; preds = %116, %101, %97
  %119 = ptrtoint %"class.WTF::StringImpl"* %98 to i64
  %120 = bitcast %"struct.WTF::KeyValuePair.764"* %99 to i64*
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.764", %"struct.WTF::KeyValuePair.764"* %99, i64 0, i32 0, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  store i64 %119, i64* %120, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %137

137:                                              ; preds = %118, %133, %136
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair.764", %"struct.WTF::KeyValuePair.764"* %99, i64 0, i32 1
  %139 = load i32, i32* %2, align 4
  store i32 %139, i32* %138, align 4
  %140 = getelementptr inbounds %"class.WTF::HashTable.761", %"class.WTF::HashTable.761"* %0, i64 0, i32 2
  %141 = load i32, i32* %140, align 4
  %142 = add i32 %141, 1
  store i32 %142, i32* %140, align 4
  %143 = getelementptr inbounds %"class.WTF::HashTable.761", %"class.WTF::HashTable.761"* %0, i64 0, i32 3
  %144 = load i32, i32* %143, align 8
  %145 = add i32 %144, %142
  %146 = shl i32 %145, 1
  %147 = load i32, i32* %12, align 8
  %148 = icmp ult i32 %146, %147
  br i1 %148, label %151, label %149

149:                                              ; preds = %137
  %150 = tail call %"struct.WTF::KeyValuePair.764"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.761"* %0, %"struct.WTF::KeyValuePair.764"* %99)
  br label %151

151:                                              ; preds = %49, %137, %149
  %152 = phi i8 [ 1, %137 ], [ 1, %149 ], [ 0, %49 ]
  %153 = phi %"struct.WTF::KeyValuePair.764"* [ %99, %137 ], [ %150, %149 ], [ %42, %49 ]
  %154 = insertvalue { %"struct.WTF::KeyValuePair.764"*, i8 } undef, %"struct.WTF::KeyValuePair.764"* %153, 0
  %155 = insertvalue { %"struct.WTF::KeyValuePair.764"*, i8 } %154, i8 %152, 1
  ret { %"struct.WTF::KeyValuePair.764"*, i8 } %155
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.764"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.761"*, %"struct.WTF::KeyValuePair.764"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.761", %"class.WTF::HashTable.761"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.761", %"class.WTF::HashTable.761"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringEN5blink19SpecificTrustedTypeEEEEEPKcv, i64 0, i64 0)) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.764"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %69, label %38

38:                                               ; preds = %31
  %39 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %40 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %39, i64 0, i32 0, i32 0, i32 0
  br label %41

41:                                               ; preds = %63, %38
  %42 = phi i64 [ 0, %38 ], [ %67, %63 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.764", %"struct.WTF::KeyValuePair.764"* %36, i64 %42
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %63, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %63

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i33
  %55 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %54, i33 1) #10
  %56 = extractvalue { i33, i1 } %55, 1
  %57 = extractvalue { i33, i1 } %55, 0
  %58 = icmp slt i33 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %60, label %61, !prof !3

60:                                               ; preds = %51
  call void @llvm.trap() #10
  unreachable

61:                                               ; preds = %51
  %62 = trunc i33 %57 to i32
  store i32 %62, i32* %52, align 4
  br label %63

63:                                               ; preds = %61, %46, %41
  %64 = ptrtoint %"class.WTF::StringImpl"* %44 to i64
  %65 = bitcast %"struct.WTF::KeyValuePair.764"* %43 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.764", %"struct.WTF::KeyValuePair.764"* %36, i64 %42, i32 1
  store i32 -128, i32* %66, align 8
  %67 = add nuw nsw i64 %42, 1
  %68 = icmp eq i64 %67, %33
  br i1 %68, label %69, label %41

69:                                               ; preds = %63, %31
  %70 = call %"struct.WTF::KeyValuePair.764"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.761"* %0, %"struct.WTF::KeyValuePair.764"* %36, i32 %32, %"struct.WTF::KeyValuePair.764"* %1) #10
  ret %"struct.WTF::KeyValuePair.764"* %70
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8bindings9UnionBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::bindings::UnionBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::bindings::UnionBase"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::bindings::UnionBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::bindings::UnionBase"*)***
  %4 = load void (%"class.blink::bindings::UnionBase"*)**, void (%"class.blink::bindings::UnionBase"*)*** %3, align 8
  %5 = load void (%"class.blink::bindings::UnionBase"*)*, void (%"class.blink::bindings::UnionBase"*)** %4, align 8
  tail call void %5(%"class.blink::bindings::UnionBase"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12ScriptLoaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptLoader"*
  tail call void @_ZNK5blink12ScriptLoader5TraceEPNS_7VisitorE(%"class.blink::ScriptLoader"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink12ScriptLoader5TraceEPNS_7VisitorE(%"class.blink::ScriptLoader"*, %"class.blink::Visitor"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 1, i32 1048575}
