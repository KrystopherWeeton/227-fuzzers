; ModuleID = '../../ui/accessibility/platform/ax_platform_node.cc'
source_filename = "../../ui/accessibility/platform/ax_platform_node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [56 x i8] }
%"class.base::LazyInstance.0" = type { i64, [8 x i8] }
%"class.ui::AXMode" = type { i32 }
%struct._AtkObject = type opaque
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.ui::AXPlatformNode" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.aura::Window" = type opaque
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.ui::AXPlatformNodeDelegate" = type { i32 (...)** }
%"class.ui::AXUniqueId" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.8", %"class.std::__1::vector.15", %"class.std::__1::vector.23", %"class.std::__1::vector.31", %"class.std::__1::vector.39", %"class.std::__1::vector.47", %"class.std::__1::vector.55", %"class.std::__1::vector.63", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.10" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"struct.std::__1::pair.17"*, %"struct.std::__1::pair.17"*, %"class.std::__1::__compressed_pair.18" }
%"struct.std::__1::pair.17" = type opaque
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::pair.17"* }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"struct.std::__1::pair.25"*, %"struct.std::__1::pair.25"*, %"class.std::__1::__compressed_pair.26" }
%"struct.std::__1::pair.25" = type opaque
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::pair.25"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"struct.std::__1::pair.33"*, %"struct.std::__1::pair.33"*, %"class.std::__1::__compressed_pair.34" }
%"struct.std::__1::pair.33" = type opaque
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::pair.33"* }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"*, %"class.std::__1::__compressed_pair.42" }
%"struct.std::__1::pair.41" = type opaque
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::pair.41"* }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %"struct.std::__1::pair.49"*, %"struct.std::__1::pair.49"*, %"class.std::__1::__compressed_pair.50" }
%"struct.std::__1::pair.49" = type opaque
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.std::__1::pair.49"* }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"struct.std::__1::pair.57"*, %"struct.std::__1::pair.57"*, %"class.std::__1::__compressed_pair.58" }
%"struct.std::__1::pair.57" = type opaque
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.std::__1::pair.57"* }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { i32*, i32*, %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { i32* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.ui::AXModeObserver" = type { i32 (...)** }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.3" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::ObserverList<ui::AXModeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZN2ui14AXPlatformNode18ax_mode_observers_E = hidden global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZN2ui14AXPlatformNode22native_window_handler_E = hidden global %"class.base::LazyInstance.0" zeroinitializer, align 8
@_ZN2ui14AXPlatformNode8ax_mode_E = hidden local_unnamed_addr global %"class.ui::AXMode" zeroinitializer, align 4
@_ZN2ui14AXPlatformNode21popup_focus_override_E = hidden local_unnamed_addr global %struct._AtkObject* null, align 8
@_ZTVN2ui14AXPlatformNodeE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::AXPlatformNode"*)* @_ZN2ui14AXPlatformNode7DestroyEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.ui::AXPlatformNode"*)* @_ZN2ui14AXPlatformNodeD2Ev to i8*), i8* bitcast (void (%"class.ui::AXPlatformNode"*)* @_ZN2ui14AXPlatformNodeD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [12 x i8] c"No delegate\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN2ui14AXPlatformNodeD1Ev = hidden unnamed_addr alias void (%"class.ui::AXPlatformNode"*), void (%"class.ui::AXPlatformNode"*)* @_ZN2ui14AXPlatformNodeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXPlatformNode"* @_ZN2ui14AXPlatformNode16FromNativeWindowEPN4aura6WindowE(%"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E, i64 0, i32 0) acquire, align 8
  %3 = icmp ugt i64 %2, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E, i64 0, i32 0)) #14
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E, i64 0, i32 1, i64 0) to %"class.base::internal::BindStateBase"**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E to i8*)) #14
  br label %9

7:                                                ; preds = %4
  %8 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E, i64 0, i32 0) acquire, align 8
  br label %9

9:                                                ; preds = %1, %6, %7
  %10 = phi i64 [ %2, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E, i64 0, i32 1, i64 0) to i64), %6 ], [ %8, %7 ]
  %11 = inttoptr i64 %10 to %"class.base::RepeatingCallback"*
  %12 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %12, align 8
  %14 = icmp eq %"class.base::internal::BindStateBase"* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %9
  %16 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E, i64 0, i32 0) acquire, align 8
  %17 = icmp ugt i64 %16, 1
  br i1 %17, label %23, label %18

18:                                               ; preds = %15
  %19 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E, i64 0, i32 0)) #14
  br i1 %19, label %20, label %21

20:                                               ; preds = %18
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E, i64 0, i32 1, i64 0) to %"class.base::internal::BindStateBase"**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E to i8*)) #14
  br label %23

21:                                               ; preds = %18
  %22 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E, i64 0, i32 0) acquire, align 8
  br label %23

23:                                               ; preds = %15, %20, %21
  %24 = phi i64 [ %16, %15 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E, i64 0, i32 1, i64 0) to i64), %20 ], [ %22, %21 ]
  %25 = inttoptr i64 %24 to %"class.base::RepeatingCallback"*
  %26 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %26, align 8
  %28 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %27, i64 0, i32 1
  %29 = bitcast void ()** %28 to %"class.ui::AXPlatformNode"* (%"class.base::internal::BindStateBase"*, %"class.aura::Window"*)**
  %30 = load %"class.ui::AXPlatformNode"* (%"class.base::internal::BindStateBase"*, %"class.aura::Window"*)*, %"class.ui::AXPlatformNode"* (%"class.base::internal::BindStateBase"*, %"class.aura::Window"*)** %29, align 8
  %31 = tail call %"class.ui::AXPlatformNode"* %30(%"class.base::internal::BindStateBase"* %27, %"class.aura::Window"* %0) #14
  br label %32

32:                                               ; preds = %9, %23
  %33 = phi %"class.ui::AXPlatformNode"* [ %31, %23 ], [ null, %9 ]
  ret %"class.ui::AXPlatformNode"* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14AXPlatformNode27RegisterNativeWindowHandlerEN4base17RepeatingCallbackIFPS0_PN4aura6WindowEEEE(%"class.base::RepeatingCallback"*) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E, i64 0, i32 0) acquire, align 8
  %3 = icmp ugt i64 %2, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E, i64 0, i32 0)) #14
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E, i64 0, i32 1, i64 0) to %"class.base::internal::BindStateBase"**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E to i8*)) #14
  br label %9

7:                                                ; preds = %4
  %8 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E, i64 0, i32 0) acquire, align 8
  br label %9

9:                                                ; preds = %1, %6, %7
  %10 = phi i64 [ %2, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN2ui14AXPlatformNode22native_window_handler_E, i64 0, i32 1, i64 0) to i64), %6 ], [ %8, %7 ]
  %11 = inttoptr i64 %10 to %"class.base::RepeatingCallback"*
  %12 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %11, i64 0, i32 0
  %13 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %0, i64 0, i32 0
  %14 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"* %12, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %13) #14
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui14AXPlatformNodeC2Ev(%"class.ui::AXPlatformNode"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXPlatformNode", %"class.ui::AXPlatformNode"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN2ui14AXPlatformNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::AXPlatformNode", %"class.ui::AXPlatformNode"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui14AXPlatformNodeD2Ev(%"class.ui::AXPlatformNode"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2ui14AXPlatformNodeD0Ev(%"class.ui::AXPlatformNode"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui14AXPlatformNode7DestroyEv(%"class.ui::AXPlatformNode"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2ui14AXPlatformNode11GetUniqueIdEv(%"class.ui::AXPlatformNode"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNode"* %0 to %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)***
  %3 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)**, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %3, i64 3
  %5 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %4, align 8
  %6 = tail call %"class.ui::AXPlatformNodeDelegate"* %5(%"class.ui::AXPlatformNode"* %0) #14
  %7 = icmp eq %"class.ui::AXPlatformNodeDelegate"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %1
  %9 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)**, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*** %2, align 8
  %10 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %9, i64 3
  %11 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %10, align 8
  %12 = tail call %"class.ui::AXPlatformNodeDelegate"* %11(%"class.ui::AXPlatformNode"* %0) #14
  %13 = bitcast %"class.ui::AXPlatformNodeDelegate"* %12 to %"class.ui::AXUniqueId"* (%"class.ui::AXPlatformNodeDelegate"*)***
  %14 = load %"class.ui::AXUniqueId"* (%"class.ui::AXPlatformNodeDelegate"*)**, %"class.ui::AXUniqueId"* (%"class.ui::AXPlatformNodeDelegate"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.ui::AXUniqueId"* (%"class.ui::AXPlatformNodeDelegate"*)*, %"class.ui::AXUniqueId"* (%"class.ui::AXPlatformNodeDelegate"*)** %14, i64 53
  %16 = load %"class.ui::AXUniqueId"* (%"class.ui::AXPlatformNodeDelegate"*)*, %"class.ui::AXUniqueId"* (%"class.ui::AXPlatformNodeDelegate"*)** %15, align 8
  %17 = tail call dereferenceable(16) %"class.ui::AXUniqueId"* %16(%"class.ui::AXPlatformNodeDelegate"* %12) #14
  %18 = getelementptr inbounds %"class.ui::AXUniqueId", %"class.ui::AXUniqueId"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  br label %20

20:                                               ; preds = %1, %8
  %21 = phi i32 [ %19, %8 ], [ -1, %1 ]
  ret i32 %21
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui14AXPlatformNode32SetIsPrimaryWebContentsForWindowEb(%"class.ui::AXPlatformNode"* nocapture, i1 zeroext) local_unnamed_addr #1 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.ui::AXPlatformNode", %"class.ui::AXPlatformNode"* %0, i64 0, i32 1
  store i8 %3, i8* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui14AXPlatformNode29IsPrimaryWebContentsForWindowEv(%"class.ui::AXPlatformNode"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXPlatformNode", %"class.ui::AXPlatformNode"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14AXPlatformNode8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.ui::AXPlatformNode"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.ui::AXPlatformNode"* %1 to %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)***
  %4 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)**, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %4, i64 3
  %6 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %5, align 8
  %7 = tail call %"class.ui::AXPlatformNodeDelegate"* %6(%"class.ui::AXPlatformNode"* %1) #14
  %8 = icmp eq %"class.ui::AXPlatformNodeDelegate"* %7, null
  br i1 %8, label %23, label %9

9:                                                ; preds = %2
  %10 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)**, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*** %3, align 8
  %11 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %10, i64 3
  %12 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %11, align 8
  %13 = tail call %"class.ui::AXPlatformNodeDelegate"* %12(%"class.ui::AXPlatformNode"* %1) #14
  %14 = bitcast %"class.ui::AXPlatformNodeDelegate"* %13 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)***
  %15 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)*** %14, align 8, !noalias !3
  %16 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)** %15, i64 2
  %17 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)** %16, align 8, !noalias !3
  %18 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %17(%"class.ui::AXPlatformNodeDelegate"* %13) #14, !noalias !3
  %19 = bitcast %"struct.ui::AXNodeData"* %18 to void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)***
  %20 = load void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)**, void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)*** %19, align 8, !noalias !3
  %21 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)*, void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)** %20, i64 2
  %22 = load void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)*, void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)** %21, align 8, !noalias !3
  tail call void %22(%"class.std::__1::basic_string"* sret %0, %"struct.ui::AXNodeData"* %18) #14
  br label %28

23:                                               ; preds = %2
  %24 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  store i8 11, i8* %25, align 1
  %26 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i64 11, i1 false) #14
  %27 = getelementptr inbounds i8, i8* %26, i64 11
  store i8 0, i8* %27, align 1
  br label %28

28:                                               ; preds = %23, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14AXPlatformNode15SubtreeToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.ui::AXPlatformNode"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.ui::AXPlatformNode"* %1 to %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)***
  %4 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)**, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %4, i64 3
  %6 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %5, align 8
  %7 = tail call %"class.ui::AXPlatformNodeDelegate"* %6(%"class.ui::AXPlatformNode"* %1) #14
  %8 = icmp eq %"class.ui::AXPlatformNodeDelegate"* %7, null
  br i1 %8, label %18, label %9

9:                                                ; preds = %2
  %10 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)**, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*** %3, align 8
  %11 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %10, i64 3
  %12 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %11, align 8
  %13 = tail call %"class.ui::AXPlatformNodeDelegate"* %12(%"class.ui::AXPlatformNode"* %1) #14
  %14 = bitcast %"class.ui::AXPlatformNodeDelegate"* %13 to void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegate"*, i64)***
  %15 = load void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegate"*, i64)**, void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegate"*, i64)*** %14, align 8, !noalias !6
  %16 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegate"*, i64)*, void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegate"*, i64)** %15, i64 97
  %17 = load void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegate"*, i64)*, void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegate"*, i64)** %16, align 8, !noalias !6
  tail call void %17(%"class.std::__1::basic_string"* sret %0, %"class.ui::AXPlatformNodeDelegate"* %13, i64 0) #14
  br label %23

18:                                               ; preds = %2
  %19 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  store i8 11, i8* %20, align 1
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i64 11, i1 false) #14
  %22 = getelementptr inbounds i8, i8* %21, i64 11
  store i8 0, i8* %22, align 1
  br label %23

23:                                               ; preds = %18, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2uilsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERNS_14AXPlatformNodeE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.ui::AXPlatformNode"* dereferenceable(16)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #14
  %5 = bitcast %"class.ui::AXPlatformNode"* %1 to %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)***
  %6 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)**, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*** %5, align 8, !noalias !9
  %7 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %6, i64 3
  %8 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %7, align 8, !noalias !9
  %9 = tail call %"class.ui::AXPlatformNodeDelegate"* %8(%"class.ui::AXPlatformNode"* %1) #14, !noalias !9
  %10 = icmp eq %"class.ui::AXPlatformNodeDelegate"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %2
  %12 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)**, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*** %5, align 8, !noalias !9
  %13 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %12, i64 3
  %14 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %13, align 8, !noalias !9
  %15 = tail call %"class.ui::AXPlatformNodeDelegate"* %14(%"class.ui::AXPlatformNode"* %1) #14, !noalias !9
  %16 = bitcast %"class.ui::AXPlatformNodeDelegate"* %15 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)***
  %17 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)*** %16, align 8, !noalias !12
  %18 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)** %17, i64 2
  %19 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)** %18, align 8, !noalias !12
  %20 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %19(%"class.ui::AXPlatformNodeDelegate"* %15) #14, !noalias !12
  %21 = bitcast %"struct.ui::AXNodeData"* %20 to void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)***
  %22 = load void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)**, void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)*** %21, align 8, !noalias !12
  %23 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)*, void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)** %22, i64 2
  %24 = load void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)*, void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)** %23, align 8, !noalias !12
  call void %24(%"class.std::__1::basic_string"* nonnull sret %3, %"struct.ui::AXNodeData"* %20) #14
  %25 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  br label %32

28:                                               ; preds = %2
  %29 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  store i8 11, i8* %30, align 1, !alias.scope !9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i64 11, i1 false) #14
  %31 = getelementptr inbounds i8, i8* %4, i64 11
  store i8 0, i8* %31, align 1, !alias.scope !9
  br label %32

32:                                               ; preds = %11, %28
  %33 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %25, %11 ], [ %29, %28 ]
  %34 = phi i8 [ %27, %11 ], [ 11, %28 ]
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %36 = icmp slt i8 %34, 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = zext i8 %34 to i64
  %42 = select i1 %36, i8* %38, i8* %4
  %43 = select i1 %36, i64 %40, i64 %41
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %42, i64 %43) #14
  %45 = load i8, i8* %35, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %32
  %48 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %48) #16
  br label %49

49:                                               ; preds = %32, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #14
  ret %"class.std::__1::basic_ostream"* %44
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14AXPlatformNode17AddAXModeObserverEPNS_14AXModeObserverE(%"class.ui::AXModeObserver"*) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 0) acquire, align 8
  %3 = icmp ugt i64 %2, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 0)) #14
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 0), i8 0, i64 24, i1 false) #14
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 24) to %"class.base::internal::LinkNodeBase"*), %"class.base::internal::LinkNodeBase"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 24) to %"class.base::internal::LinkNodeBase"*), %"class.base::internal::LinkNodeBase"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 24) to %"class.base::internal::LinkNodeBase"*)) #14
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 40) to i64*), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 48) to i32*), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E to i8*)) #14
  br label %9

7:                                                ; preds = %4
  %8 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 0) acquire, align 8
  br label %9

9:                                                ; preds = %1, %6, %7
  %10 = phi i64 [ %2, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 0) to i64), %6 ], [ %8, %7 ]
  %11 = inttoptr i64 %10 to %"class.base::ObserverList"*
  %12 = icmp eq %"class.ui::AXModeObserver"* %0, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %11, i64 0, i32 0, i32 0, i32 1
  %15 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %14, align 8
  br label %34

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %11, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %17, align 8
  %19 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %11, i64 0, i32 0, i32 0, i32 1
  %20 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %19, align 8
  %21 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %18, %20
  %22 = bitcast %"class.ui::AXModeObserver"* %0 to i8*
  br i1 %21, label %31, label %23

23:                                               ; preds = %16, %28
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %29, %28 ], [ %18, %16 ]
  %25 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %24, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %26, %22
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %24, i64 1
  %30 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %29, %20
  br i1 %30, label %34, label %23

31:                                               ; preds = %23, %16
  %32 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %18, %16 ], [ %24, %23 ]
  %33 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %32, %20
  br i1 %33, label %34, label %107

34:                                               ; preds = %28, %13, %31
  %35 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %15, %13 ], [ %20, %31 ], [ %20, %28 ]
  %36 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %11, i64 0, i32 2
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %36, align 8
  %39 = ptrtoint %"class.ui::AXModeObserver"* %0 to i64
  %40 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %11, i64 0, i32 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %11, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %42 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %41, align 8
  %43 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %35, %42
  %44 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %42 to i64
  br i1 %43, label %45, label %50

45:                                               ; preds = %34
  %46 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %35 to i64*
  store i64 %39, i64* %46, align 8
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %35, i64 1
  %48 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %47 to i64
  %49 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %40 to i64*
  store i64 %48, i64* %49, align 8
  br label %107

50:                                               ; preds = %34
  %51 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %35 to i64
  %52 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %40 to i64*
  %53 = inttoptr i64 %10 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %51, %54
  %56 = ashr exact i64 %55, 3
  %57 = add nsw i64 %56, 1
  %58 = icmp ugt i64 %57, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %50
  %60 = inttoptr i64 %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #15
  unreachable

61:                                               ; preds = %50
  %62 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %41 to i64*
  %63 = sub i64 %44, %54
  %64 = ashr exact i64 %63, 3
  %65 = icmp ult i64 %64, 1152921504606846975
  br i1 %65, label %66, label %74

66:                                               ; preds = %61
  %67 = ashr exact i64 %63, 2
  %68 = icmp ult i64 %67, %57
  %69 = select i1 %68, i64 %57, i64 %67
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %79, label %71

71:                                               ; preds = %66
  %72 = icmp ugt i64 %69, 2305843009213693951
  br i1 %72, label %73, label %74

73:                                               ; preds = %71
  tail call void @abort() #15
  unreachable

74:                                               ; preds = %71, %61
  %75 = phi i64 [ %69, %71 ], [ 2305843009213693951, %61 ]
  %76 = shl i64 %75, 3
  %77 = tail call i8* @_Znwm(i64 %76) #16
  %78 = bitcast i8* %77 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %79

79:                                               ; preds = %74, %66
  %80 = phi i64 [ %75, %74 ], [ 0, %66 ]
  %81 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %78, %74 ], [ null, %66 ]
  %82 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %81, i64 %56
  %83 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %81, i64 %80
  %84 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %83 to i64
  %85 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %82 to i64*
  store i64 %39, i64* %85, align 8
  %86 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %82, i64 1
  %87 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %86 to i64
  %88 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %11, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %88, align 8
  %90 = load i64, i64* %52, align 8
  %91 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %89 to i64
  %92 = sub i64 %90, %91
  %93 = ashr exact i64 %92, 3
  %94 = sub nsw i64 0, %93
  %95 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %82, i64 %94
  %96 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %95 to i64
  %97 = icmp sgt i64 %92, 0
  br i1 %97, label %98, label %102

98:                                               ; preds = %79
  %99 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  %100 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 %92, i1 false) #14
  %101 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %88, align 8
  br label %102

102:                                              ; preds = %98, %79
  %103 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %89, %79 ], [ %101, %98 ]
  store i64 %96, i64* %53, align 8
  store i64 %87, i64* %52, align 8
  store i64 %84, i64* %62, align 8
  %104 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %102
  %106 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %103 to i8*
  tail call void @_ZdlPv(i8* %106) #16
  br label %107

107:                                              ; preds = %105, %102, %45, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14AXPlatformNode20RemoveAXModeObserverEPNS_14AXModeObserverE(%"class.ui::AXModeObserver"* readnone) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 0) acquire, align 8
  %3 = icmp ugt i64 %2, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 0)) #14
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 0), i8 0, i64 24, i1 false) #14
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 24) to %"class.base::internal::LinkNodeBase"*), %"class.base::internal::LinkNodeBase"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 24) to %"class.base::internal::LinkNodeBase"*), %"class.base::internal::LinkNodeBase"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 24) to %"class.base::internal::LinkNodeBase"*)) #14
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 40) to i64*), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 48) to i32*), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E to i8*)) #14
  br label %9

7:                                                ; preds = %4
  %8 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 0) acquire, align 8
  br label %9

9:                                                ; preds = %1, %6, %7
  %10 = phi i64 [ %2, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 0) to i64), %6 ], [ %8, %7 ]
  %11 = inttoptr i64 %10 to %"class.base::ObserverList"*
  %12 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %12, align 8
  %14 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %11, i64 0, i32 0, i32 0, i32 1
  %15 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %14, align 8
  %16 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %13, %15
  %17 = bitcast %"class.ui::AXModeObserver"* %0 to i8*
  %18 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %15 to i64
  br i1 %16, label %27, label %19

19:                                               ; preds = %9, %24
  %20 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %25, %24 ], [ %13, %9 ]
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %20, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, %17
  br i1 %23, label %27, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %20, i64 1
  %26 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %25, %15
  br i1 %26, label %56, label %19

27:                                               ; preds = %19, %9
  %28 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %13, %9 ], [ %20, %19 ]
  %29 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %28, %15
  br i1 %29, label %56, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %28, i64 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %11, i64 0, i32 2
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, -1
  store i64 %37, i64* %35, align 8
  br label %38

38:                                               ; preds = %34, %30
  %39 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %11, i64 0, i32 1, i32 0, i32 0, i32 1
  %40 = bitcast %"class.base::internal::LinkNodeBase"** %39 to %"class.base::LinkNode"**
  %41 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %40, align 8
  %42 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %11, i64 0, i32 1, i32 0
  %43 = icmp eq %"class.base::LinkNode"* %41, %42
  br i1 %43, label %44, label %55

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %28, i64 1
  %46 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %45 to i64
  %47 = sub i64 %18, %46
  %48 = ashr exact i64 %47, 3
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %28 to i8*
  %52 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %45 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 %47, i1 false) #14
  br label %53

53:                                               ; preds = %50, %44
  %54 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %28, i64 %48
  store %"class.base::internal::UncheckedObserverAdapter"* %54, %"class.base::internal::UncheckedObserverAdapter"** %14, align 8
  br label %56

55:                                               ; preds = %38
  store i8* null, i8** %31, align 8
  br label %56

56:                                               ; preds = %24, %27, %53, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14AXPlatformNode20NotifyAddAXModeFlagsENS_6AXModeE(i32) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ObserverList<ui::AXModeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<ui::AXModeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = load i32, i32* getelementptr inbounds (%"class.ui::AXMode", %"class.ui::AXMode"* @_ZN2ui14AXPlatformNode8ax_mode_E, i64 0, i32 0), align 4
  %5 = or i32 %4, %0
  %6 = icmp eq i32 %5, %4
  br i1 %6, label %350, label %7

7:                                                ; preds = %1
  store i32 %5, i32* getelementptr inbounds (%"class.ui::AXMode", %"class.ui::AXMode"* @_ZN2ui14AXPlatformNode8ax_mode_E, i64 0, i32 0), align 4
  %8 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 0) acquire, align 8
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %15, label %10

10:                                               ; preds = %7
  %11 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 0)) #14
  br i1 %11, label %12, label %13

12:                                               ; preds = %10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 0), i8 0, i64 24, i1 false) #14
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 24) to %"class.base::internal::LinkNodeBase"*), %"class.base::internal::LinkNodeBase"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 24) to %"class.base::internal::LinkNodeBase"*), %"class.base::internal::LinkNodeBase"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 24) to %"class.base::internal::LinkNodeBase"*)) #14
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 40) to i64*), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 48) to i32*), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E to i8*)) #14
  br label %15

13:                                               ; preds = %10
  %14 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 0) acquire, align 8
  br label %15

15:                                               ; preds = %7, %12, %13
  %16 = phi i64 [ %8, %7 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui14AXPlatformNode18ax_mode_observers_E, i64 0, i32 1, i64 0) to i64), %12 ], [ %14, %13 ]
  %17 = inttoptr i64 %16 to %"class.base::ObserverList"*
  %18 = bitcast %"class.base::ObserverList<ui::AXModeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.base::ObserverList<ui::AXModeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXModeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.base::ObserverList<ui::AXModeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXModeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %21 = getelementptr inbounds %"class.base::ObserverList<ui::AXModeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXModeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %22 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %17, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.base::ObserverList<ui::AXModeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 40, i1 false)
  %24 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %22, align 8, !noalias !15
  %25 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %17, i64 0, i32 0, i32 0, i32 1
  %26 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %25, align 8, !noalias !15
  %27 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %26
  %28 = getelementptr inbounds %"class.base::ObserverList<ui::AXModeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXModeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %28) #14
  br i1 %27, label %29, label %31

29:                                               ; preds = %15
  %30 = bitcast %"class.base::ObserverList"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #14, !alias.scope !15
  br label %71

31:                                               ; preds = %15
  store %"class.base::ObserverList"* %17, %"class.base::ObserverList"** %19, align 8
  %32 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %17, i64 0, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %28, %"class.base::internal::LinkNodeBase"* %32) #14
  store i64 0, i64* %20, align 8
  %33 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %17, i64 0, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %25 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = inttoptr i64 %16 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = ashr exact i64 %41, 3
  br label %43

43:                                               ; preds = %36, %31
  %44 = phi i64 [ %42, %36 ], [ -1, %31 ]
  store i64 %44, i64* %21, align 8
  %45 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %19, align 8
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %45, i64 0, i32 0, i32 0, i32 1
  %47 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.base::ObserverList"* %45 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = ashr exact i64 %51, 3
  %53 = icmp ult i64 %52, %44
  %54 = select i1 %53, i64 %52, i64 %44
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %71, label %56

56:                                               ; preds = %43
  %57 = inttoptr i64 %50 to %"class.base::internal::UncheckedObserverAdapter"*
  %58 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %45, i64 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %57, i64 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %62, label %71

62:                                               ; preds = %56, %66
  %63 = phi i64 [ %64, %66 ], [ 0, %56 ]
  %64 = add nuw i64 %63, 1
  store i64 %64, i64* %20, align 8
  %65 = icmp ult i64 %64, %54
  br i1 %65, label %66, label %71

66:                                               ; preds = %62
  %67 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %58, align 8
  %68 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %67, i64 %64, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %62, label %71

71:                                               ; preds = %66, %62, %56, %43, %29
  %72 = bitcast %"class.base::ObserverList<ui::AXModeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %72) #14
  %73 = getelementptr inbounds %"class.base::ObserverList<ui::AXModeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXModeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %74 = getelementptr inbounds %"class.base::ObserverList<ui::AXModeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXModeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %75 = getelementptr inbounds %"class.base::ObserverList<ui::AXModeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXModeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %76 = getelementptr inbounds %"class.base::ObserverList<ui::AXModeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::AXModeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %77 = bitcast %"class.base::ObserverList<ui::AXModeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %76) #14
  %78 = bitcast %"class.base::ObserverList"** %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false) #14, !alias.scope !18
  %79 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %19, align 8
  br label %80

80:                                               ; preds = %320, %71
  %81 = phi %"class.base::ObserverList"* [ %79, %71 ], [ %318, %320 ]
  %82 = icmp eq %"class.base::ObserverList"* %81, null
  br i1 %82, label %98, label %83

83:                                               ; preds = %80
  %84 = load i64, i64* %20, align 8
  %85 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %81, i64 0, i32 0, i32 0, i32 1
  %86 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.base::ObserverList"* %81 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %87, %89
  %91 = ashr exact i64 %90, 3
  %92 = load i64, i64* %21, align 8
  %93 = icmp ult i64 %91, %92
  %94 = select i1 %93, i64 %91, i64 %92
  %95 = icmp eq i64 %84, %94
  br i1 %95, label %98, label %96

96:                                               ; preds = %83
  %97 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %73, align 8
  br label %114

98:                                               ; preds = %83, %80
  %99 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %73, align 8
  %100 = icmp eq %"class.base::ObserverList"* %99, null
  br i1 %100, label %214, label %101

101:                                              ; preds = %98
  %102 = load i64, i64* %74, align 8
  %103 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %99, i64 0, i32 0, i32 0, i32 1
  %104 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.base::ObserverList"* %99 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = sub i64 %105, %107
  %109 = ashr exact i64 %108, 3
  %110 = load i64, i64* %75, align 8
  %111 = icmp ult i64 %109, %110
  %112 = select i1 %111, i64 %109, i64 %110
  %113 = icmp eq i64 %102, %112
  br i1 %113, label %123, label %114

114:                                              ; preds = %101, %96
  %115 = phi %"class.base::ObserverList"* [ %97, %96 ], [ %99, %101 ]
  %116 = icmp eq %"class.base::ObserverList"* %81, %115
  %117 = load i64, i64* %20, align 8
  %118 = load i64, i64* %74, align 8
  %119 = icmp eq i64 %117, %118
  %120 = and i1 %116, %119
  br i1 %120, label %121, label %308

121:                                              ; preds = %114
  %122 = icmp eq %"class.base::ObserverList"* %81, null
  br i1 %122, label %214, label %123

123:                                              ; preds = %101, %121
  %124 = phi %"class.base::ObserverList"* [ %81, %121 ], [ %99, %101 ]
  %125 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %124, i64 0, i32 1
  %126 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %124, i64 0, i32 1, i32 0, i32 0, i32 1
  %127 = bitcast %"class.base::internal::LinkNodeBase"** %126 to %"class.base::LinkNode"**
  %128 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %127, align 8
  %129 = bitcast %"class.base::LinkedList"* %125 to %"class.base::LinkNode"**
  %130 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %129, align 8
  %131 = icmp eq %"class.base::LinkNode"* %128, %130
  br i1 %131, label %132, label %210

132:                                              ; preds = %123
  %133 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %124, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %133, align 8
  %135 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %124, i64 0, i32 0, i32 0, i32 1
  %136 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %135, align 8
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %134, %136
  br i1 %137, label %146, label %138

138:                                              ; preds = %132, %143
  %139 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %144, %143 ], [ %134, %132 ]
  %140 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %139, i64 0, i32 0
  %141 = load i8*, i8** %140, align 8
  %142 = icmp eq i8* %141, null
  br i1 %142, label %146, label %143

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %139, i64 1
  %145 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %144, %136
  br i1 %145, label %210, label %138

146:                                              ; preds = %138, %132
  %147 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %134, %132 ], [ %139, %138 ]
  %148 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %147 to i64
  %149 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %147, %136
  br i1 %149, label %210, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %147, i64 1
  %152 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %151, %136
  br i1 %152, label %205, label %153

153:                                              ; preds = %150
  %154 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %136, i64 -2, i32 0
  %155 = ptrtoint i8** %154 to i64
  %156 = sub i64 %155, %148
  %157 = lshr i64 %156, 3
  %158 = add nuw nsw i64 %157, 1
  %159 = and i64 %158, 3
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %179, label %161

161:                                              ; preds = %153, %174
  %162 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %176, %174 ], [ %151, %153 ]
  %163 = phi i64 [ %175, %174 ], [ %148, %153 ]
  %164 = phi i64 [ %177, %174 ], [ %159, %153 ]
  %165 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %162, i64 0, i32 0
  %166 = load i8*, i8** %165, align 8
  %167 = icmp eq i8* %166, null
  br i1 %167, label %174, label %168

168:                                              ; preds = %161
  %169 = ptrtoint i8* %166 to i64
  %170 = inttoptr i64 %163 to %"class.base::internal::UncheckedObserverAdapter"*
  %171 = inttoptr i64 %163 to i64*
  store i64 %169, i64* %171, align 8
  %172 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %170, i64 1
  %173 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %172 to i64
  br label %174

174:                                              ; preds = %168, %161
  %175 = phi i64 [ %163, %161 ], [ %173, %168 ]
  %176 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %162, i64 1
  %177 = add i64 %164, -1
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %161, !llvm.loop !21

179:                                              ; preds = %174, %153
  %180 = phi i64 [ undef, %153 ], [ %175, %174 ]
  %181 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %151, %153 ], [ %176, %174 ]
  %182 = phi i64 [ %148, %153 ], [ %175, %174 ]
  %183 = icmp ult i64 %156, 24
  br i1 %183, label %201, label %184

184:                                              ; preds = %179, %411
  %185 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %413, %411 ], [ %181, %179 ]
  %186 = phi i64 [ %412, %411 ], [ %182, %179 ]
  %187 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %185, i64 0, i32 0
  %188 = load i8*, i8** %187, align 8
  %189 = icmp eq i8* %188, null
  br i1 %189, label %196, label %190

190:                                              ; preds = %184
  %191 = ptrtoint i8* %188 to i64
  %192 = inttoptr i64 %186 to %"class.base::internal::UncheckedObserverAdapter"*
  %193 = inttoptr i64 %186 to i64*
  store i64 %191, i64* %193, align 8
  %194 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %192, i64 1
  %195 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %194 to i64
  br label %196

196:                                              ; preds = %190, %184
  %197 = phi i64 [ %186, %184 ], [ %195, %190 ]
  %198 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %185, i64 1, i32 0
  %199 = load i8*, i8** %198, align 8
  %200 = icmp eq i8* %199, null
  br i1 %200, label %389, label %383

201:                                              ; preds = %411, %179
  %202 = phi i64 [ %180, %179 ], [ %412, %411 ]
  %203 = inttoptr i64 %202 to %"class.base::internal::UncheckedObserverAdapter"*
  %204 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %135, align 8
  br label %205

205:                                              ; preds = %201, %150
  %206 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %136, %150 ], [ %204, %201 ]
  %207 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %147, %150 ], [ %203, %201 ]
  %208 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %207, %206
  br i1 %208, label %210, label %209

209:                                              ; preds = %205
  store %"class.base::internal::UncheckedObserverAdapter"* %207, %"class.base::internal::UncheckedObserverAdapter"** %135, align 8
  br label %210

210:                                              ; preds = %143, %209, %205, %146, %123
  %211 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %73, align 8
  %212 = icmp eq %"class.base::ObserverList"* %211, null
  br i1 %212, label %214, label %213

213:                                              ; preds = %210
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %73, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %76) #14
  br label %214

214:                                              ; preds = %98, %121, %210, %213
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %72) #14
  %215 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %19, align 8
  %216 = icmp eq %"class.base::ObserverList"* %215, null
  br i1 %216, label %307, label %217

217:                                              ; preds = %214
  %218 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %215, i64 0, i32 1
  %219 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %215, i64 0, i32 1, i32 0, i32 0, i32 1
  %220 = bitcast %"class.base::internal::LinkNodeBase"** %219 to %"class.base::LinkNode"**
  %221 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %220, align 8
  %222 = bitcast %"class.base::LinkedList"* %218 to %"class.base::LinkNode"**
  %223 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %222, align 8
  %224 = icmp eq %"class.base::LinkNode"* %221, %223
  br i1 %224, label %225, label %303

225:                                              ; preds = %217
  %226 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %215, i64 0, i32 0, i32 0, i32 0
  %227 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %226, align 8
  %228 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %215, i64 0, i32 0, i32 0, i32 1
  %229 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %228, align 8
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %227, %229
  br i1 %230, label %239, label %231

231:                                              ; preds = %225, %236
  %232 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %237, %236 ], [ %227, %225 ]
  %233 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %232, i64 0, i32 0
  %234 = load i8*, i8** %233, align 8
  %235 = icmp eq i8* %234, null
  br i1 %235, label %239, label %236

236:                                              ; preds = %231
  %237 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %232, i64 1
  %238 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %237, %229
  br i1 %238, label %303, label %231

239:                                              ; preds = %231, %225
  %240 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %227, %225 ], [ %232, %231 ]
  %241 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %240 to i64
  %242 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %240, %229
  br i1 %242, label %303, label %243

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %240, i64 1
  %245 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %244, %229
  br i1 %245, label %298, label %246

246:                                              ; preds = %243
  %247 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %229, i64 -2, i32 0
  %248 = ptrtoint i8** %247 to i64
  %249 = sub i64 %248, %241
  %250 = lshr i64 %249, 3
  %251 = add nuw nsw i64 %250, 1
  %252 = and i64 %251, 3
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %272, label %254

254:                                              ; preds = %246, %267
  %255 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %269, %267 ], [ %244, %246 ]
  %256 = phi i64 [ %268, %267 ], [ %241, %246 ]
  %257 = phi i64 [ %270, %267 ], [ %252, %246 ]
  %258 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %255, i64 0, i32 0
  %259 = load i8*, i8** %258, align 8
  %260 = icmp eq i8* %259, null
  br i1 %260, label %267, label %261

261:                                              ; preds = %254
  %262 = ptrtoint i8* %259 to i64
  %263 = inttoptr i64 %256 to %"class.base::internal::UncheckedObserverAdapter"*
  %264 = inttoptr i64 %256 to i64*
  store i64 %262, i64* %264, align 8
  %265 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %263, i64 1
  %266 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %265 to i64
  br label %267

267:                                              ; preds = %261, %254
  %268 = phi i64 [ %256, %254 ], [ %266, %261 ]
  %269 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %255, i64 1
  %270 = add i64 %257, -1
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %272, label %254, !llvm.loop !23

272:                                              ; preds = %267, %246
  %273 = phi i64 [ undef, %246 ], [ %268, %267 ]
  %274 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %244, %246 ], [ %269, %267 ]
  %275 = phi i64 [ %241, %246 ], [ %268, %267 ]
  %276 = icmp ult i64 %249, 24
  br i1 %276, label %294, label %277

277:                                              ; preds = %272, %379
  %278 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %381, %379 ], [ %274, %272 ]
  %279 = phi i64 [ %380, %379 ], [ %275, %272 ]
  %280 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %278, i64 0, i32 0
  %281 = load i8*, i8** %280, align 8
  %282 = icmp eq i8* %281, null
  br i1 %282, label %289, label %283

283:                                              ; preds = %277
  %284 = ptrtoint i8* %281 to i64
  %285 = inttoptr i64 %279 to %"class.base::internal::UncheckedObserverAdapter"*
  %286 = inttoptr i64 %279 to i64*
  store i64 %284, i64* %286, align 8
  %287 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %285, i64 1
  %288 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %287 to i64
  br label %289

289:                                              ; preds = %283, %277
  %290 = phi i64 [ %279, %277 ], [ %288, %283 ]
  %291 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %278, i64 1, i32 0
  %292 = load i8*, i8** %291, align 8
  %293 = icmp eq i8* %292, null
  br i1 %293, label %357, label %351

294:                                              ; preds = %379, %272
  %295 = phi i64 [ %273, %272 ], [ %380, %379 ]
  %296 = inttoptr i64 %295 to %"class.base::internal::UncheckedObserverAdapter"*
  %297 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %228, align 8
  br label %298

298:                                              ; preds = %294, %243
  %299 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %229, %243 ], [ %297, %294 ]
  %300 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %240, %243 ], [ %296, %294 ]
  %301 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %300, %299
  br i1 %301, label %303, label %302

302:                                              ; preds = %298
  store %"class.base::internal::UncheckedObserverAdapter"* %300, %"class.base::internal::UncheckedObserverAdapter"** %228, align 8
  br label %303

303:                                              ; preds = %236, %302, %298, %239, %217
  %304 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %19, align 8
  %305 = icmp eq %"class.base::ObserverList"* %304, null
  br i1 %305, label %307, label %306

306:                                              ; preds = %303
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %19, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %28) #14
  br label %307

307:                                              ; preds = %214, %303, %306
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #14
  br label %350

308:                                              ; preds = %114
  %309 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %81, i64 0, i32 0, i32 0, i32 0
  %310 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %309, align 8
  %311 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %310, i64 %117
  %312 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %311 to %"class.ui::AXModeObserver"**
  %313 = load %"class.ui::AXModeObserver"*, %"class.ui::AXModeObserver"** %312, align 8
  %314 = bitcast %"class.ui::AXModeObserver"* %313 to void (%"class.ui::AXModeObserver"*, i32)***
  %315 = load void (%"class.ui::AXModeObserver"*, i32)**, void (%"class.ui::AXModeObserver"*, i32)*** %314, align 8
  %316 = getelementptr inbounds void (%"class.ui::AXModeObserver"*, i32)*, void (%"class.ui::AXModeObserver"*, i32)** %315, i64 2
  %317 = load void (%"class.ui::AXModeObserver"*, i32)*, void (%"class.ui::AXModeObserver"*, i32)** %316, align 8
  call void %317(%"class.ui::AXModeObserver"* %313, i32 %0) #14
  %318 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %19, align 8
  %319 = icmp eq %"class.base::ObserverList"* %318, null
  br i1 %319, label %320, label %321

320:                                              ; preds = %345, %341, %308, %321, %335
  br label %80

321:                                              ; preds = %308
  %322 = load i64, i64* %20, align 8
  %323 = add i64 %322, 1
  store i64 %323, i64* %20, align 8
  %324 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %318, i64 0, i32 0, i32 0, i32 1
  %325 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %324 to i64*
  %326 = load i64, i64* %325, align 8
  %327 = bitcast %"class.base::ObserverList"* %318 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = sub i64 %326, %328
  %330 = ashr exact i64 %329, 3
  %331 = load i64, i64* %21, align 8
  %332 = icmp ult i64 %330, %331
  %333 = select i1 %332, i64 %330, i64 %331
  %334 = icmp ult i64 %323, %333
  br i1 %334, label %335, label %320

335:                                              ; preds = %321
  %336 = inttoptr i64 %328 to %"class.base::internal::UncheckedObserverAdapter"*
  %337 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %318, i64 0, i32 0, i32 0, i32 0
  %338 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %336, i64 %323, i32 0
  %339 = load i8*, i8** %338, align 8
  %340 = icmp eq i8* %339, null
  br i1 %340, label %341, label %320

341:                                              ; preds = %335, %345
  %342 = phi i64 [ %343, %345 ], [ %323, %335 ]
  %343 = add nuw i64 %342, 1
  store i64 %343, i64* %20, align 8
  %344 = icmp ult i64 %343, %333
  br i1 %344, label %345, label %320

345:                                              ; preds = %341
  %346 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %337, align 8
  %347 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %346, i64 %343, i32 0
  %348 = load i8*, i8** %347, align 8
  %349 = icmp eq i8* %348, null
  br i1 %349, label %341, label %320

350:                                              ; preds = %1, %307
  ret void

351:                                              ; preds = %289
  %352 = ptrtoint i8* %292 to i64
  %353 = inttoptr i64 %290 to %"class.base::internal::UncheckedObserverAdapter"*
  %354 = inttoptr i64 %290 to i64*
  store i64 %352, i64* %354, align 8
  %355 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %353, i64 1
  %356 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %355 to i64
  br label %357

357:                                              ; preds = %351, %289
  %358 = phi i64 [ %290, %289 ], [ %356, %351 ]
  %359 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %278, i64 2, i32 0
  %360 = load i8*, i8** %359, align 8
  %361 = icmp eq i8* %360, null
  br i1 %361, label %368, label %362

362:                                              ; preds = %357
  %363 = ptrtoint i8* %360 to i64
  %364 = inttoptr i64 %358 to %"class.base::internal::UncheckedObserverAdapter"*
  %365 = inttoptr i64 %358 to i64*
  store i64 %363, i64* %365, align 8
  %366 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %364, i64 1
  %367 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %366 to i64
  br label %368

368:                                              ; preds = %362, %357
  %369 = phi i64 [ %358, %357 ], [ %367, %362 ]
  %370 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %278, i64 3, i32 0
  %371 = load i8*, i8** %370, align 8
  %372 = icmp eq i8* %371, null
  br i1 %372, label %379, label %373

373:                                              ; preds = %368
  %374 = ptrtoint i8* %371 to i64
  %375 = inttoptr i64 %369 to %"class.base::internal::UncheckedObserverAdapter"*
  %376 = inttoptr i64 %369 to i64*
  store i64 %374, i64* %376, align 8
  %377 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %375, i64 1
  %378 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %377 to i64
  br label %379

379:                                              ; preds = %373, %368
  %380 = phi i64 [ %369, %368 ], [ %378, %373 ]
  %381 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %278, i64 4
  %382 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %381, %229
  br i1 %382, label %294, label %277

383:                                              ; preds = %196
  %384 = ptrtoint i8* %199 to i64
  %385 = inttoptr i64 %197 to %"class.base::internal::UncheckedObserverAdapter"*
  %386 = inttoptr i64 %197 to i64*
  store i64 %384, i64* %386, align 8
  %387 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %385, i64 1
  %388 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %387 to i64
  br label %389

389:                                              ; preds = %383, %196
  %390 = phi i64 [ %197, %196 ], [ %388, %383 ]
  %391 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %185, i64 2, i32 0
  %392 = load i8*, i8** %391, align 8
  %393 = icmp eq i8* %392, null
  br i1 %393, label %400, label %394

394:                                              ; preds = %389
  %395 = ptrtoint i8* %392 to i64
  %396 = inttoptr i64 %390 to %"class.base::internal::UncheckedObserverAdapter"*
  %397 = inttoptr i64 %390 to i64*
  store i64 %395, i64* %397, align 8
  %398 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %396, i64 1
  %399 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %398 to i64
  br label %400

400:                                              ; preds = %394, %389
  %401 = phi i64 [ %390, %389 ], [ %399, %394 ]
  %402 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %185, i64 3, i32 0
  %403 = load i8*, i8** %402, align 8
  %404 = icmp eq i8* %403, null
  br i1 %404, label %411, label %405

405:                                              ; preds = %400
  %406 = ptrtoint i8* %403 to i64
  %407 = inttoptr i64 %401 to %"class.base::internal::UncheckedObserverAdapter"*
  %408 = inttoptr i64 %401 to i64*
  store i64 %406, i64* %408, align 8
  %409 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %407, i64 1
  %410 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %409 to i64
  br label %411

411:                                              ; preds = %405, %400
  %412 = phi i64 [ %401, %400 ], [ %410, %405 ]
  %413 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %185, i64 4
  %414 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %413, %136
  br i1 %414, label %201, label %184
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui14AXPlatformNode9SetAXModeENS_6AXModeE(i32) local_unnamed_addr #1 align 2 {
  store i32 %0, i32* getelementptr inbounds (%"class.ui::AXMode", %"class.ui::AXMode"* @_ZN2ui14AXPlatformNode8ax_mode_E, i64 0, i32 0), align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN2ui14AXPlatformNode21ResetAxModeForTestingEv() local_unnamed_addr #7 align 2 {
  store i32 0, i32* getelementptr inbounds (%"class.ui::AXMode", %"class.ui::AXMode"* @_ZN2ui14AXPlatformNode8ax_mode_E, i64 0, i32 0), align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui14AXPlatformNode21SetPopupFocusOverrideEP10_AtkObject(%struct._AtkObject*) local_unnamed_addr #1 align 2 {
  store %struct._AtkObject* %0, %struct._AtkObject** @_ZN2ui14AXPlatformNode21popup_focus_override_E, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct._AtkObject* @_ZN2ui14AXPlatformNode21GetPopupFocusOverrideEv() local_unnamed_addr #5 align 2 {
  %1 = load %struct._AtkObject*, %struct._AtkObject** @_ZN2ui14AXPlatformNode21popup_focus_override_E, align 8
  ret %struct._AtkObject* %1
}

declare void @__cxa_pure_virtual() unnamed_addr

declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #14
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #14
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #14
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #14
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #14
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #14
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #14
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #14
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #16
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #14
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #14
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #16
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #14
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #10

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #8

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #8

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #8

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #8

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #8

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #8

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN2ui22AXPlatformNodeDelegate8ToStringEv: argument 0"}
!5 = distinct !{!5, !"_ZN2ui22AXPlatformNodeDelegate8ToStringEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN2ui22AXPlatformNodeDelegate15SubtreeToStringEv: argument 0"}
!8 = distinct !{!8, !"_ZN2ui22AXPlatformNodeDelegate15SubtreeToStringEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN2ui14AXPlatformNode8ToStringEv: argument 0"}
!11 = distinct !{!11, !"_ZN2ui14AXPlatformNode8ToStringEv"}
!12 = !{!13, !10}
!13 = distinct !{!13, !14, !"_ZN2ui22AXPlatformNodeDelegate8ToStringEv: argument 0"}
!14 = distinct !{!14, !"_ZN2ui22AXPlatformNodeDelegate8ToStringEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK4base12ObserverListIN2ui14AXModeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!17 = distinct !{!17, !"_ZNK4base12ObserverListIN2ui14AXModeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK4base12ObserverListIN2ui14AXModeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!20 = distinct !{!20, !"_ZNK4base12ObserverListIN2ui14AXModeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.unroll.disable"}
!23 = distinct !{!23, !22}
