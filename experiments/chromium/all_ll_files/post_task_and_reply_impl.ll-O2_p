; ModuleID = '../../base/threading/post_task_and_reply_impl.cc'
source_filename = "../../base/threading/post_task_and_reply_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::internal::PostTaskAndReplyImpl" = type { i32 (...)** }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::(anonymous namespace)::PostTaskAndReplyRelay" = type { %"class.base::Location", %"class.base::OnceCallback", %"class.base::OnceCallback", %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2" }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2", [4 x i8] }>

@.str = private unnamed_addr constant [49 x i8] c"../../base/threading/post_task_and_reply_impl.cc\00", align 1
@.str.1 = private unnamed_addr constant [44 x i8] c"has_sequenced_context || !post_task_success\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base8internal20PostTaskAndReplyImpl16PostTaskAndReplyERKNS_8LocationENS_12OnceCallbackIFvvEEES7_(%"class.base::internal::PostTaskAndReplyImpl"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"* nocapture, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::(anonymous namespace)::PostTaskAndReplyRelay", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = tail call zeroext i1 @_ZN4base25SequencedTaskRunnerHandle5IsSetEv() #6
  %11 = bitcast %"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %11) #6
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %16 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %18, i64* %19, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  br i1 %10, label %20, label %29

20:                                               ; preds = %4
  %21 = tail call dereferenceable(8) %class.scoped_refptr.1* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #6
  %22 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %21, i64 0, i32 0
  %23 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %22, align 8
  %24 = icmp eq %"class.base::SequencedTaskRunner"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %23, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  %28 = ptrtoint %"class.base::SequencedTaskRunner"* %23 to i64
  br label %29

29:                                               ; preds = %4, %25, %20
  %30 = phi i64 [ 0, %20 ], [ %28, %25 ], [ 0, %4 ]
  %31 = getelementptr inbounds %"class.base::(anonymous namespace)::PostTaskAndReplyRelay", %"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* %6, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %31, %"class.base::Location"* dereferenceable(32) %1) #6
  %32 = getelementptr inbounds %"class.base::(anonymous namespace)::PostTaskAndReplyRelay", %"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* %6, i64 0, i32 1
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.base::OnceCallback"* %32 to i64*
  store i64 %14, i64* %34, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %33, align 8
  %35 = getelementptr inbounds %"class.base::(anonymous namespace)::PostTaskAndReplyRelay", %"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* %6, i64 0, i32 2
  %36 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.base::OnceCallback"* %35 to i64*
  store i64 %18, i64* %37, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %36, align 8
  %38 = getelementptr inbounds %"class.base::(anonymous namespace)::PostTaskAndReplyRelay", %"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* %6, i64 0, i32 3
  %39 = bitcast %class.scoped_refptr.1* %38 to i64*
  store i64 %30, i64* %39, align 8
  %40 = call i8* @_Znwm(i64 96) #7, !noalias !2
  %41 = bitcast i8* %40 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %41, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12_GLOBAL__N_121PostTaskAndReplyRelayEEJS4_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12_GLOBAL__N_121PostTaskAndReplyRelayEEJS3_EE7DestroyEPKNS0_13BindStateBaseE) #6, !noalias !2
  %42 = getelementptr inbounds i8, i8* %40, i64 32
  %43 = bitcast i8* %42 to i64*
  store i64 ptrtoint (void (%"class.base::(anonymous namespace)::PostTaskAndReplyRelay"*)* @_ZN4base12_GLOBAL__N_121PostTaskAndReplyRelay19RunTaskAndPostReplyES1_ to i64), i64* %43, align 8, !noalias !2
  %44 = getelementptr inbounds i8, i8* %40, i64 40
  %45 = bitcast i8* %44 to %"class.base::Location"*
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* %45, %"class.base::Location"* nonnull dereferenceable(32) %31) #6, !noalias !2
  %46 = getelementptr inbounds i8, i8* %40, i64 72
  %47 = bitcast %"class.base::OnceCallback"* %32 to <2 x i64>*
  %48 = load <2 x i64>, <2 x i64>* %47, align 8, !noalias !2
  %49 = bitcast i8* %46 to <2 x i64>*
  store <2 x i64> %48, <2 x i64>* %49, align 8, !noalias !2
  %50 = bitcast %"class.base::OnceCallback"* %32 to <2 x %"class.base::internal::BindStateBase"*>*
  store <2 x %"class.base::internal::BindStateBase"*> zeroinitializer, <2 x %"class.base::internal::BindStateBase"*>* %50, align 8, !noalias !2
  %51 = getelementptr inbounds i8, i8* %40, i64 88
  %52 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %38, i64 0, i32 0
  %53 = load i64, i64* %39, align 8, !noalias !2
  %54 = bitcast i8* %51 to i64*
  store i64 %53, i64* %54, align 8, !noalias !2
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %52, align 8, !noalias !2
  %55 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %40, i8** %55, align 8, !alias.scope !2
  %56 = bitcast %"class.base::internal::PostTaskAndReplyImpl"* %0 to i1 (%"class.base::internal::PostTaskAndReplyImpl"*, %"class.base::Location"*, %"class.base::OnceCallback"*)***
  %57 = load i1 (%"class.base::internal::PostTaskAndReplyImpl"*, %"class.base::Location"*, %"class.base::OnceCallback"*)**, i1 (%"class.base::internal::PostTaskAndReplyImpl"*, %"class.base::Location"*, %"class.base::OnceCallback"*)*** %56, align 8
  %58 = getelementptr inbounds i1 (%"class.base::internal::PostTaskAndReplyImpl"*, %"class.base::Location"*, %"class.base::OnceCallback"*)*, i1 (%"class.base::internal::PostTaskAndReplyImpl"*, %"class.base::Location"*, %"class.base::OnceCallback"*)** %57, i64 2
  %59 = load i1 (%"class.base::internal::PostTaskAndReplyImpl"*, %"class.base::Location"*, %"class.base::OnceCallback"*)*, i1 (%"class.base::internal::PostTaskAndReplyImpl"*, %"class.base::Location"*, %"class.base::OnceCallback"*)** %58, align 8
  %60 = call zeroext i1 %59(%"class.base::internal::PostTaskAndReplyImpl"* %0, %"class.base::Location"* dereferenceable(32) %1, %"class.base::OnceCallback"* nonnull %5) #6
  %61 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %61) #6
  call fastcc void @_ZN4base12_GLOBAL__N_121PostTaskAndReplyRelayD2Ev(%"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* nonnull %6) #6
  %62 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %62) #6
  %63 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %63) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %11) #6
  %64 = xor i1 %60, true
  %65 = or i1 %10, %64
  br i1 %65, label %69, label %66

66:                                               ; preds = %29
  %67 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0)) #6
  %68 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #6
  br label %69

69:                                               ; preds = %29, %66
  ret i1 %60
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base25SequencedTaskRunnerHandle5IsSetEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base12_GLOBAL__N_121PostTaskAndReplyRelay19RunTaskAndPostReplyES1_(%"class.base::(anonymous namespace)::PostTaskAndReplyRelay"*) #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.base::(anonymous namespace)::PostTaskAndReplyRelay", %"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* %0, i64 0, i32 1
  %6 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %12 = inttoptr i64 %9 to %"class.base::internal::BindStateBase"*
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to void (%"class.base::internal::BindStateBase"*)**
  %15 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %14, align 8
  tail call void %15(%"class.base::internal::BindStateBase"* %12) #6
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %16 = getelementptr inbounds %"class.base::(anonymous namespace)::PostTaskAndReplyRelay", %"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %16, i64 0, i32 0
  %18 = bitcast %class.scoped_refptr.1* %16 to %"class.base::TaskRunner"**
  %19 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %18, align 8
  %20 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 32, i1 false)
  %21 = getelementptr inbounds %"class.base::(anonymous namespace)::PostTaskAndReplyRelay", %"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* %0, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %3, %"class.base::Location"* dereferenceable(32) %21) #6
  %22 = call i8* @_Znwm(i64 96) #7, !noalias !7
  %23 = bitcast i8* %22 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %23, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12_GLOBAL__N_121PostTaskAndReplyRelayEEJS4_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12_GLOBAL__N_121PostTaskAndReplyRelayEEJS3_EE7DestroyEPKNS0_13BindStateBaseE) #6, !noalias !7
  %24 = getelementptr inbounds i8, i8* %22, i64 32
  %25 = bitcast i8* %24 to i64*
  store i64 ptrtoint (void (%"class.base::(anonymous namespace)::PostTaskAndReplyRelay"*)* @_ZN4base12_GLOBAL__N_121PostTaskAndReplyRelay8RunReplyES1_ to i64), i64* %25, align 8, !noalias !7
  %26 = getelementptr inbounds i8, i8* %22, i64 40
  %27 = bitcast i8* %26 to %"class.base::Location"*
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* %27, %"class.base::Location"* dereferenceable(32) %21) #6, !noalias !7
  %28 = getelementptr inbounds i8, i8* %22, i64 72
  %29 = bitcast %"class.base::OnceCallback"* %5 to <2 x i64>*
  %30 = load <2 x i64>, <2 x i64>* %29, align 8, !noalias !7
  %31 = bitcast i8* %28 to <2 x i64>*
  store <2 x i64> %30, <2 x i64>* %31, align 8, !noalias !7
  %32 = bitcast %"class.base::OnceCallback"* %5 to <2 x %"class.base::internal::BindStateBase"*>*
  store <2 x %"class.base::internal::BindStateBase"*> zeroinitializer, <2 x %"class.base::internal::BindStateBase"*>* %32, align 8, !noalias !7
  %33 = getelementptr inbounds i8, i8* %22, i64 88
  %34 = bitcast %class.scoped_refptr.1* %16 to i64*
  %35 = load i64, i64* %34, align 8, !noalias !7
  %36 = bitcast i8* %33 to i64*
  store i64 %35, i64* %36, align 8, !noalias !7
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %17, align 8, !noalias !7
  %37 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %22, i8** %37, align 8, !alias.scope !7
  %38 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %19, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #6
  %39 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %39) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #6
  ret void
}

declare dereferenceable(8) %class.scoped_refptr.1* @_ZN4base25SequencedTaskRunnerHandle3GetEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4base12_GLOBAL__N_121PostTaskAndReplyRelayD2Ev(%"class.base::(anonymous namespace)::PostTaskAndReplyRelay"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::(anonymous namespace)::PostTaskAndReplyRelay", %"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %2, i64 0, i32 0
  %4 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SequencedTaskRunner"* %4, null
  br i1 %5, label %43, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::(anonymous namespace)::PostTaskAndReplyRelay", %"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %7, align 8
  %9 = icmp eq %"class.base::internal::BindStateBase"* %8, null
  br i1 %9, label %32, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.base::SequencedTaskRunner"* %4 to i1 (%"class.base::SequencedTaskRunner"*)***
  %12 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %12, i64 5
  %14 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.base::SequencedTaskRunner"* nonnull %4) #6
  br i1 %15, label %32, label %16

16:                                               ; preds = %10
  %17 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %3, align 8
  %18 = tail call i8* @_Znwm(i64 56) #7
  %19 = bitcast i8* %18 to %"class.base::Location"*
  %20 = getelementptr inbounds %"class.base::(anonymous namespace)::PostTaskAndReplyRelay", %"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* %0, i64 0, i32 0
  tail call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %19, %"class.base::Location"* dereferenceable(32) %20) #6
  %21 = getelementptr inbounds i8, i8* %18, i64 32
  %22 = getelementptr inbounds %"class.base::(anonymous namespace)::PostTaskAndReplyRelay", %"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* %0, i64 0, i32 1
  %23 = bitcast %"class.base::OnceCallback"* %22 to <2 x i64>*
  %24 = load <2 x i64>, <2 x i64>* %23, align 8
  %25 = bitcast i8* %21 to <2 x i64>*
  store <2 x i64> %24, <2 x i64>* %25, align 8
  %26 = bitcast %"class.base::OnceCallback"* %22 to <2 x %"class.base::internal::BindStateBase"*>*
  store <2 x %"class.base::internal::BindStateBase"*> zeroinitializer, <2 x %"class.base::internal::BindStateBase"*>* %26, align 8
  %27 = getelementptr inbounds i8, i8* %18, i64 48
  %28 = bitcast %class.scoped_refptr.1* %2 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8* %27 to i64*
  store i64 %29, i64* %30, align 8
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %3, align 8
  %31 = tail call zeroext i1 @_ZN4base19SequencedTaskRunner27DeleteOrReleaseSoonInternalERKNS_8LocationEPFvPKvES5_(%"class.base::SequencedTaskRunner"* %17, %"class.base::Location"* dereferenceable(32) %20, void (i8*)* nonnull @_ZN4base12DeleteHelperINS_12_GLOBAL__N_121PostTaskAndReplyRelayEE8DoDeleteEPKv, i8* nonnull %18) #6
  br label %32

32:                                               ; preds = %6, %10, %16
  %33 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %3, align 8
  %34 = icmp eq %"class.base::SequencedTaskRunner"* %33, null
  br i1 %34, label %43, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %33, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw sub i32* %37, i32 1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %36, i64 -2
  %42 = bitcast %"class.base::RefCountedThreadSafe.2"* %41 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %42) #6
  br label %43

43:                                               ; preds = %1, %32, %35, %40
  %44 = getelementptr inbounds %"class.base::(anonymous namespace)::PostTaskAndReplyRelay", %"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %44) #6
  %45 = getelementptr inbounds %"class.base::(anonymous namespace)::PostTaskAndReplyRelay", %"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %45) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #2

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base12_GLOBAL__N_121PostTaskAndReplyRelay8RunReplyES1_(%"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* nocapture) #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.base::(anonymous namespace)::PostTaskAndReplyRelay", %"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* %0, i64 0, i32 2
  %4 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6
  %5 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %7, i64* %8, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %10 = inttoptr i64 %7 to %"class.base::internal::BindStateBase"*
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %10, i64 0, i32 1
  %12 = bitcast void ()** %11 to void (%"class.base::internal::BindStateBase"*)**
  %13 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %12, align 8
  tail call void %13(%"class.base::internal::BindStateBase"* %10) #6
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6
  ret void
}

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare zeroext i1 @_ZN4base19SequencedTaskRunner27DeleteOrReleaseSoonInternalERKNS_8LocationEPFvPKvES5_(%"class.base::SequencedTaskRunner"*, %"class.base::Location"* dereferenceable(32), void (i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base12DeleteHelperINS_12_GLOBAL__N_121PostTaskAndReplyRelayEE8DoDeleteEPKv(i8*) #0 align 2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast i8* %0 to %"class.base::(anonymous namespace)::PostTaskAndReplyRelay"*
  tail call fastcc void @_ZN4base12_GLOBAL__N_121PostTaskAndReplyRelayD2Ev(%"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* nonnull %4) #6
  tail call void @_ZdlPv(i8* nonnull %0) #7
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12_GLOBAL__N_121PostTaskAndReplyRelayEEJS4_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = alloca %"class.base::(anonymous namespace)::PostTaskAndReplyRelay", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::(anonymous namespace)::PostTaskAndReplyRelay"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast %"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #6
  %7 = load void (%"class.base::(anonymous namespace)::PostTaskAndReplyRelay"*)*, void (%"class.base::(anonymous namespace)::PostTaskAndReplyRelay"*)** %4, align 8
  %8 = getelementptr inbounds %"class.base::(anonymous namespace)::PostTaskAndReplyRelay", %"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* %2, i64 0, i32 0
  %9 = bitcast void ()** %5 to %"class.base::Location"*
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %8, %"class.base::Location"* dereferenceable(32) %9) #6
  %10 = getelementptr inbounds %"class.base::(anonymous namespace)::PostTaskAndReplyRelay", %"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* %2, i64 0, i32 1
  %11 = getelementptr inbounds void ()*, void ()** %5, i64 4
  %12 = bitcast void ()** %11 to <2 x i64>*
  %13 = load <2 x i64>, <2 x i64>* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %10 to <2 x i64>*
  store <2 x i64> %13, <2 x i64>* %14, align 8
  %15 = bitcast void ()** %11 to <2 x %"class.base::internal::BindStateBase"*>*
  store <2 x %"class.base::internal::BindStateBase"*> zeroinitializer, <2 x %"class.base::internal::BindStateBase"*>* %15, align 8
  %16 = getelementptr inbounds %"class.base::(anonymous namespace)::PostTaskAndReplyRelay", %"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* %2, i64 0, i32 3
  %17 = getelementptr inbounds void ()*, void ()** %5, i64 6
  %18 = bitcast void ()** %17 to %"class.base::SequencedTaskRunner"**
  %19 = bitcast void ()** %17 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %class.scoped_refptr.1* %16 to i64*
  store i64 %20, i64* %21, align 8
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %18, align 8
  call void %7(%"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* nonnull %2) #6
  call fastcc void @_ZN4base12_GLOBAL__N_121PostTaskAndReplyRelayD2Ev(%"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIPFvNS_12_GLOBAL__N_121PostTaskAndReplyRelayEEJS3_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::(anonymous namespace)::PostTaskAndReplyRelay"*
  tail call fastcc void @_ZN4base12_GLOBAL__N_121PostTaskAndReplyRelayD2Ev(%"class.base::(anonymous namespace)::PostTaskAndReplyRelay"* %5) #6
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #7
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS_12_GLOBAL__N_121PostTaskAndReplyRelayEEJS4_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS_12_GLOBAL__N_121PostTaskAndReplyRelayEEJS4_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIPFvNS_12_GLOBAL__N_121PostTaskAndReplyRelayEEJS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS8_DpOS9_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIPFvNS_12_GLOBAL__N_121PostTaskAndReplyRelayEEJS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS8_DpOS9_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS_12_GLOBAL__N_121PostTaskAndReplyRelayEEJS4_EEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS_12_GLOBAL__N_121PostTaskAndReplyRelayEEJS4_EEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIPFvNS_12_GLOBAL__N_121PostTaskAndReplyRelayEEJS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS8_DpOS9_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIPFvNS_12_GLOBAL__N_121PostTaskAndReplyRelayEEJS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS8_DpOS9_"}
