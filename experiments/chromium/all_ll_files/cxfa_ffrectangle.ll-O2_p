; ModuleID = '../../third_party/pdfium/xfa/fxfa/cxfa_ffrectangle.cpp'
source_filename = "../../third_party/pdfium/xfa/fxfa/cxfa_ffrectangle.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CXFA_FFRectangle = type { %class.CXFA_FFWidget }
%class.CXFA_FFWidget = type { %"class.CFWL_Widget::AdapterIface", %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember.0", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.2", %class.CFX_RectF }
%"class.CFWL_Widget::AdapterIface" = type { %"class.cppgc::GarbageCollectedMixin" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.cppgc::internal::BasicMember.0" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.1" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.2" = type { %"class.cppgc::internal::MemberBase" }
%class.CFX_RectF = type { float, float, float, float }
%class.CXFA_Node = type { %class.CXFA_Object, %"class.fxjs::GCedTreeNodeMixin", i32, i8, i8, i8, %"class.pdfium::span.6", %"class.pdfium::span.8", i32, %"class.fxcrt::UnownedPtr.10", i8, i8, i8, i32, %"class.cppgc::internal::BasicMember.2", %"class.std::__1::vector", %"class.cppgc::internal::BasicMember.12", %"class.cppgc::internal::BasicMember.13" }
%class.CXFA_Object = type { i32 (...)**, i32, i16, %"class.fxcrt::StringViewTemplate", i32, %"class.cppgc::internal::BasicMember.4", %"class.cppgc::internal::BasicMember.5" }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i8* }
%"class.cppgc::internal::BasicMember.4" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.5" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxjs::GCedTreeNodeMixin" = type { %"class.cppgc::GarbageCollectedMixin", %"class.fxcrt::TreeNode" }
%"class.fxcrt::TreeNode" = type { i32 (...)**, %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2" }
%"class.pdfium::span.6" = type { %"class.fxcrt::UnownedPtr.7", i64 }
%"class.fxcrt::UnownedPtr.7" = type { %"struct.CXFA_Node::PropertyData"* }
%"struct.CXFA_Node::PropertyData" = type { i16, i8, i8 }
%"class.pdfium::span.8" = type { %"class.fxcrt::UnownedPtr.9", i64 }
%"class.fxcrt::UnownedPtr.9" = type { %"struct.CXFA_Node::AttributeData"* }
%"struct.CXFA_Node::AttributeData" = type { i16, i8, i8* }
%"class.fxcrt::UnownedPtr.10" = type { %class.CFX_XMLNode* }
%class.CFX_XMLNode = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cppgc::internal::BasicMember.2"*, %"class.cppgc::internal::BasicMember.2"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cppgc::internal::BasicMember.2"* }
%"class.cppgc::internal::BasicMember.12" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.13" = type { %"class.cppgc::internal::MemberBase" }
%class.CFGAS_GEGraphics = type { %"class.fxcrt::UnownedPtr.14", %"struct.CFGAS_GEGraphics::TInfo", %"class.std::__1::vector.24" }
%"class.fxcrt::UnownedPtr.14" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type opaque
%"struct.CFGAS_GEGraphics::TInfo" = type { %class.CFX_GraphStateData, %class.CFX_Matrix, i8, %class.CFGAS_GEColor, %class.CFGAS_GEColor }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.15" }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { float*, float*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { float* }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFGAS_GEColor = type { i32, i32, %"class.fxcrt::UnownedPtr.22", %"class.fxcrt::UnownedPtr.23" }
%"class.fxcrt::UnownedPtr.22" = type { %class.CFGAS_GEPattern* }
%class.CFGAS_GEPattern = type opaque
%"class.fxcrt::UnownedPtr.23" = type { %class.CFGAS_GEShading* }
%class.CFGAS_GEShading = type opaque
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::unique_ptr"* }
%class.CXFA_Value = type { %class.CXFA_Node }
%class.CXFA_Margin = type opaque
%class.CXFA_Rectangle = type { %class.CXFA_Box }
%class.CXFA_Box = type { %class.CXFA_Node }
%"class.cppgc::Visitor" = type { i32 (...)** }
%class.CXFA_FFField = type opaque
%class.CFX_PTemplate = type { float, float }
%class.CFX_VTemplate = type opaque
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.31" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>

@_ZTV16CXFA_FFRectangle = hidden unnamed_addr constant { [53 x i8*] } { [53 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CXFA_FFWidget*, %"class.cppgc::Visitor"*)* @_ZNK13CXFA_FFWidget5TraceEPN5cppgc7VisitorE to i8*), i8* bitcast (void (%class.CXFA_FFRectangle*)* @_ZN16CXFA_FFRectangleD2Ev to i8*), i8* bitcast (void (%class.CXFA_FFRectangle*)* @_ZN16CXFA_FFRectangleD0Ev to i8*), i8* bitcast (void (%class.CFX_Matrix*, %class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget15GetRotateMatrixEv to i8*), i8* bitcast (void (%class.CXFA_FFWidget*, i1, %class.CFX_RectF*)* @_ZN13CXFA_FFWidget12DisplayCaretEbPK9CFX_RectF to i8*), i8* bitcast (void (%class.CXFA_FFWidget*, i32*, float*)* @_ZN13CXFA_FFWidget26GetBorderColorAndThicknessEPjPf to i8*), i8* bitcast (void (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget11PreFinalizeEv to i8*), i8* bitcast (%class.CXFA_FFField* (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget7AsFieldEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CXFA_FFWidget*, i32)* @_ZN13CXFA_FFWidget7GetBBoxENS_11FocusOptionE to i8*), i8* bitcast (void (%class.CXFA_FFRectangle*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*, i32)* @_ZN16CXFA_FFRectangle12RenderWidgetEP16CFGAS_GEGraphicsRK10CFX_MatrixN13CXFA_FFWidget15HighlightOptionE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget8IsLoadedEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget10LoadWidgetEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget13PerformLayoutEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget13UpdateFWLDataEv to i8*), i8* bitcast (void (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget20UpdateWidgetPropertyEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate*, i8)* @_ZN13CXFA_FFWidget24AcceptsFocusOnButtonDownEjRK13CFX_PTemplateIfE16FWL_MouseCommand to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget12OnMouseEnterEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget11OnMouseExitEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate*)* @_ZN13CXFA_FFWidget13OnLButtonDownEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate*)* @_ZN13CXFA_FFWidget11OnLButtonUpEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate*)* @_ZN13CXFA_FFWidget15OnLButtonDblClkEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate*)* @_ZN13CXFA_FFWidget11OnMouseMoveEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate*, %class.CFX_VTemplate*)* @_ZN13CXFA_FFWidget12OnMouseWheelEjRK13CFX_PTemplateIfERK13CFX_VTemplateIiE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate*)* @_ZN13CXFA_FFWidget13OnRButtonDownEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate*)* @_ZN13CXFA_FFWidget11OnRButtonUpEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate*)* @_ZN13CXFA_FFWidget15OnRButtonDblClkEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, %class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget10OnSetFocusEPS_ to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, %class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget11OnKillFocusEPS_ to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, i32)* @_ZN13CXFA_FFWidget9OnKeyDownEjj to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, i32)* @_ZN13CXFA_FFWidget7OnKeyUpEjj to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, i32)* @_ZN13CXFA_FFWidget6OnCharEjj to i8*), i8* bitcast (i32 (%class.CXFA_FFWidget*, %class.CFX_PTemplate*)* @_ZN13CXFA_FFWidget7HitTestERK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget7CanUndoEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget7CanRedoEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget7CanCopyEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget6CanCutEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget8CanPasteEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget12CanSelectAllEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget9CanDeleteEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget11CanDeSelectEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget4UndoEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget4RedoEv to i8*), i8* bitcast (void ()* @_ZN13CXFA_FFWidget4CopyEv to i8*), i8* bitcast (void ()* @_ZN13CXFA_FFWidget3CutEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, %"class.fxcrt::WideString"*)* @_ZN13CXFA_FFWidget5PasteERKN5fxcrt10WideStringE to i8*), i8* bitcast (void (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget9SelectAllEv to i8*), i8* bitcast (void (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget6DeleteEv to i8*), i8* bitcast (void (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget8DeSelectEv to i8*), i8* bitcast (void (%"class.fxcrt::WideString"*, %class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget7GetTextEv to i8*), i8* bitcast (i8 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget16GetFormFieldTypeEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, %class.CFX_PTemplate*)* @_ZN13CXFA_FFWidget14PtInActiveRectERK13CFX_PTemplateIfE to i8*)] }, align 8

@_ZN16CXFA_FFRectangleC1EP9CXFA_Node = hidden unnamed_addr alias void (%class.CXFA_FFRectangle*, %class.CXFA_Node*), void (%class.CXFA_FFRectangle*, %class.CXFA_Node*)* @_ZN16CXFA_FFRectangleC2EP9CXFA_Node
@_ZN16CXFA_FFRectangleD1Ev = hidden unnamed_addr alias void (%class.CXFA_FFRectangle*), void (%class.CXFA_FFRectangle*)* @_ZN16CXFA_FFRectangleD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CXFA_FFRectangleC2EP9CXFA_Node(%class.CXFA_FFRectangle*, %class.CXFA_Node*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_FFRectangle, %class.CXFA_FFRectangle* %0, i64 0, i32 0
  tail call void @_ZN13CXFA_FFWidgetC2EP9CXFA_Node(%class.CXFA_FFWidget* %3, %class.CXFA_Node* %1) #4
  %4 = getelementptr inbounds %class.CXFA_FFRectangle, %class.CXFA_FFRectangle* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [53 x i8*] }, { [53 x i8*] }* @_ZTV16CXFA_FFRectangle, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

declare void @_ZN13CXFA_FFWidgetC2EP9CXFA_Node(%class.CXFA_FFWidget*, %class.CXFA_Node*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN13CXFA_FFWidgetD2Ev(%class.CXFA_FFWidget*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CXFA_FFRectangleD2Ev(%class.CXFA_FFRectangle*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_FFRectangle, %class.CXFA_FFRectangle* %0, i64 0, i32 0
  tail call void @_ZN13CXFA_FFWidgetD2Ev(%class.CXFA_FFWidget* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CXFA_FFRectangleD0Ev(%class.CXFA_FFRectangle*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_FFRectangle, %class.CXFA_FFRectangle* %0, i64 0, i32 0
  tail call void @_ZN13CXFA_FFWidgetD2Ev(%class.CXFA_FFWidget* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CXFA_FFRectangle12RenderWidgetEP16CFGAS_GEGraphicsRK10CFX_MatrixN13CXFA_FFWidget15HighlightOptionE(%class.CXFA_FFRectangle*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* nocapture readonly dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %class.CFX_RectF*
  %7 = alloca %class.CFX_Matrix, align 16
  %8 = getelementptr inbounds %class.CXFA_FFRectangle, %class.CXFA_FFRectangle* %0, i64 0, i32 0
  %9 = tail call zeroext i1 @_ZNK13CXFA_FFWidget16HasVisibleStatusEv(%class.CXFA_FFWidget* %8) #4
  br i1 %9, label %10, label %82

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.CXFA_FFRectangle, %class.CXFA_FFRectangle* %0, i64 0, i32 0, i32 4
  %12 = bitcast %"class.cppgc::internal::BasicMember.2"* %11 to %class.CXFA_Node**
  %13 = load %class.CXFA_Node*, %class.CXFA_Node** %12, align 8
  %14 = tail call %class.CXFA_Value* @_ZNK9CXFA_Node20GetFormValueIfExistsEv(%class.CXFA_Node* %13) #4
  %15 = icmp eq %class.CXFA_Value* %14, null
  br i1 %15, label %82, label %16

16:                                               ; preds = %10
  %17 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #4
  %18 = tail call { <2 x float>, <2 x float> } @_ZN13CXFA_FFWidget20GetRectWithoutRotateEv(%class.CXFA_FFWidget* %8) #4
  %19 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %20 = extractvalue { <2 x float>, <2 x float> } %18, 0
  store <2 x float> %20, <2 x float>* %19, align 8
  %21 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %22 = extractvalue { <2 x float>, <2 x float> } %18, 1
  store <2 x float> %22, <2 x float>* %21, align 8
  %23 = load %class.CXFA_Node*, %class.CXFA_Node** %12, align 8
  %24 = tail call %class.CXFA_Margin* @_ZNK9CXFA_Node17GetMarginIfExistsEv(%class.CXFA_Node* %23) #4
  call void @_Z21XFA_RectWithoutMarginP9CFX_RectFPK11CXFA_Margin(%class.CFX_RectF* nonnull %6, %class.CXFA_Margin* %24) #4
  %25 = bitcast %class.CFX_Matrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #4
  %26 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %7, i64 0, i32 0
  %27 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %7, i64 0, i32 1
  %28 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %7, i64 0, i32 2
  %29 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %7, i64 0, i32 3
  %30 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %7, i64 0, i32 4
  %31 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %7, i64 0, i32 5
  %32 = bitcast %class.CFX_Matrix* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %32, i8 -1, i64 24, i1 false)
  call void @_ZN13CXFA_FFWidget15GetRotateMatrixEv(%class.CFX_Matrix* nonnull sret %7, %class.CXFA_FFWidget* %8) #4
  %33 = load float, float* %26, align 16, !noalias !2
  %34 = load float, float* %27, align 4, !noalias !2
  %35 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 2
  %36 = bitcast %class.CFX_Matrix* %2 to <2 x float>*
  %37 = load <2 x float>, <2 x float>* %36, align 4, !noalias !2
  %38 = shufflevector <2 x float> %37, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %39 = bitcast float* %35 to <2 x float>*
  %40 = load <2 x float>, <2 x float>* %39, align 4, !noalias !2
  %41 = shufflevector <2 x float> %40, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %42 = load float, float* %28, align 8, !noalias !2
  %43 = load float, float* %29, align 4, !noalias !2
  %44 = insertelement <4 x float> undef, float %33, i32 0
  %45 = shufflevector <4 x float> %44, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %46 = extractelement <2 x float> %37, i32 0
  %47 = extractelement <2 x float> %37, i32 1
  %48 = shufflevector <4 x float> %45, <4 x float> %38, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %49 = insertelement <4 x float> undef, float %46, i32 0
  %50 = insertelement <4 x float> %49, float %47, i32 1
  %51 = insertelement <4 x float> %50, float %42, i32 2
  %52 = insertelement <4 x float> %51, float %42, i32 3
  %53 = fmul <4 x float> %48, %52
  %54 = insertelement <4 x float> undef, float %34, i32 0
  %55 = shufflevector <4 x float> %54, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %56 = extractelement <2 x float> %40, i32 0
  %57 = extractelement <2 x float> %40, i32 1
  %58 = shufflevector <4 x float> %55, <4 x float> %41, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %59 = insertelement <4 x float> undef, float %56, i32 0
  %60 = insertelement <4 x float> %59, float %57, i32 1
  %61 = insertelement <4 x float> %60, float %43, i32 2
  %62 = insertelement <4 x float> %61, float %43, i32 3
  %63 = fmul <4 x float> %58, %62
  %64 = fadd <4 x float> %53, %63
  %65 = load float, float* %30, align 16, !noalias !2
  %66 = fmul float %46, %65
  %67 = load float, float* %31, align 4, !noalias !2
  %68 = fmul float %56, %67
  %69 = fadd float %66, %68
  %70 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 4
  %71 = load float, float* %70, align 4, !noalias !2
  %72 = fadd float %71, %69
  %73 = fmul float %47, %65
  %74 = fmul float %57, %67
  %75 = fadd float %73, %74
  %76 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 5
  %77 = load float, float* %76, align 4, !noalias !2
  %78 = fadd float %75, %77
  %79 = bitcast %class.CFX_Matrix* %7 to <4 x float>*
  store <4 x float> %64, <4 x float>* %79, align 16
  store float %72, float* %30, align 16
  store float %78, float* %31, align 4
  %80 = call %class.CXFA_Rectangle* @_ZNK10CXFA_Value20GetRectangleIfExistsEv(%class.CXFA_Value* nonnull %14) #4
  %81 = getelementptr inbounds %class.CXFA_Rectangle, %class.CXFA_Rectangle* %80, i64 0, i32 0
  call void @_ZN13CXFA_FFWidget10DrawBorderEP16CFGAS_GEGraphicsP8CXFA_BoxRK9CFX_RectFRK10CFX_Matrix(%class.CXFA_FFWidget* %8, %class.CFGAS_GEGraphics* %1, %class.CXFA_Box* %81, %class.CFX_RectF* nonnull dereferenceable(16) %6, %class.CFX_Matrix* nonnull dereferenceable(24) %7) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #4
  br label %82

82:                                               ; preds = %16, %10, %4
  ret void
}

declare zeroext i1 @_ZNK13CXFA_FFWidget16HasVisibleStatusEv(%class.CXFA_FFWidget*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %class.CXFA_Value* @_ZNK9CXFA_Node20GetFormValueIfExistsEv(%class.CXFA_Node*) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN13CXFA_FFWidget20GetRectWithoutRotateEv(%class.CXFA_FFWidget*) local_unnamed_addr #1

declare %class.CXFA_Margin* @_ZNK9CXFA_Node17GetMarginIfExistsEv(%class.CXFA_Node*) local_unnamed_addr #1

declare void @_Z21XFA_RectWithoutMarginP9CFX_RectFPK11CXFA_Margin(%class.CFX_RectF*, %class.CXFA_Margin*) local_unnamed_addr #1

declare void @_ZN13CXFA_FFWidget15GetRotateMatrixEv(%class.CFX_Matrix* sret, %class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget10DrawBorderEP16CFGAS_GEGraphicsP8CXFA_BoxRK9CFX_RectFRK10CFX_Matrix(%class.CXFA_FFWidget*, %class.CFGAS_GEGraphics*, %class.CXFA_Box*, %class.CFX_RectF* dereferenceable(16), %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1

declare %class.CXFA_Rectangle* @_ZNK10CXFA_Value20GetRectangleIfExistsEv(%class.CXFA_Value*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZNK13CXFA_FFWidget5TraceEPN5cppgc7VisitorE(%class.CXFA_FFWidget*, %"class.cppgc::Visitor"*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget12DisplayCaretEbPK9CFX_RectF(%class.CXFA_FFWidget*, i1 zeroext, %class.CFX_RectF*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget26GetBorderColorAndThicknessEPjPf(%class.CXFA_FFWidget*, i32*, float*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget11PreFinalizeEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare %class.CXFA_FFField* @_ZN13CXFA_FFWidget7AsFieldEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN13CXFA_FFWidget7GetBBoxENS_11FocusOptionE(%class.CXFA_FFWidget*, i32) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget8IsLoadedEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget10LoadWidgetEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget13PerformLayoutEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget13UpdateFWLDataEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget20UpdateWidgetPropertyEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget24AcceptsFocusOnButtonDownEjRK13CFX_PTemplateIfE16FWL_MouseCommand(%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate* dereferenceable(8), i8 zeroext) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget12OnMouseEnterEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget11OnMouseExitEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget13OnLButtonDownEjRK13CFX_PTemplateIfE(%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget11OnLButtonUpEjRK13CFX_PTemplateIfE(%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget15OnLButtonDblClkEjRK13CFX_PTemplateIfE(%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget11OnMouseMoveEjRK13CFX_PTemplateIfE(%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget12OnMouseWheelEjRK13CFX_PTemplateIfERK13CFX_VTemplateIiE(%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate* dereferenceable(8), %class.CFX_VTemplate*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget13OnRButtonDownEjRK13CFX_PTemplateIfE(%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget11OnRButtonUpEjRK13CFX_PTemplateIfE(%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget15OnRButtonDblClkEjRK13CFX_PTemplateIfE(%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget10OnSetFocusEPS_(%class.CXFA_FFWidget*, %class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget11OnKillFocusEPS_(%class.CXFA_FFWidget*, %class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget9OnKeyDownEjj(%class.CXFA_FFWidget*, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget7OnKeyUpEjj(%class.CXFA_FFWidget*, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget6OnCharEjj(%class.CXFA_FFWidget*, i32, i32) unnamed_addr #1

declare i32 @_ZN13CXFA_FFWidget7HitTestERK13CFX_PTemplateIfE(%class.CXFA_FFWidget*, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget7CanUndoEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget7CanRedoEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget7CanCopyEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget6CanCutEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget8CanPasteEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget12CanSelectAllEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget9CanDeleteEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget11CanDeSelectEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget4UndoEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget4RedoEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget4CopyEv() unnamed_addr

declare void @_ZN13CXFA_FFWidget3CutEv() unnamed_addr

declare zeroext i1 @_ZN13CXFA_FFWidget5PasteERKN5fxcrt10WideStringE(%class.CXFA_FFWidget*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget9SelectAllEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget6DeleteEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget8DeSelectEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget7GetTextEv(%"class.fxcrt::WideString"* sret, %class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i8 @_ZN13CXFA_FFWidget16GetFormFieldTypeEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget14PtInActiveRectERK13CFX_PTemplateIfE(%class.CXFA_FFWidget*, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!4 = distinct !{!4, !"_ZNK10CFX_MatrixmlERKS_"}
