; ModuleID = '../../third_party/angle/src/libANGLE/renderer/null/SamplerNULL.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/null/SamplerNULL.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.rx::SamplerNULL" = type { %"class.rx::SamplerImpl" }
%"class.rx::SamplerImpl" = type { i32 (...)**, %"class.gl::SamplerState"* }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon, i8, [3 x i8] }>
%union.anon = type { %"struct.angle::Color" }
%"struct.angle::Color" = type { float, float, float, float }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.gl::Context" = type opaque

$_ZN2rx11SamplerImpl9onDestroyEPKN2gl7ContextE = comdat any

@_ZTVN2rx11SamplerNULLE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::SamplerNULL"*)* @_ZN2rx11SamplerNULLD2Ev to i8*), i8* bitcast (void (%"class.rx::SamplerNULL"*)* @_ZN2rx11SamplerNULLD0Ev to i8*), i8* bitcast (void (%"class.rx::SamplerImpl"*, %"class.gl::Context"*)* @_ZN2rx11SamplerImpl9onDestroyEPKN2gl7ContextE to i8*), i8* bitcast (i32 (%"class.rx::SamplerNULL"*, %"class.gl::Context"*, i1)* @_ZN2rx11SamplerNULL9syncStateEPKN2gl7ContextEb to i8*)] }, align 8

@_ZN2rx11SamplerNULLC1ERKN2gl12SamplerStateE = hidden unnamed_addr alias void (%"class.rx::SamplerNULL"*, %"class.gl::SamplerState"*), void (%"class.rx::SamplerNULL"*, %"class.gl::SamplerState"*)* @_ZN2rx11SamplerNULLC2ERKN2gl12SamplerStateE
@_ZN2rx11SamplerNULLD1Ev = hidden unnamed_addr alias void (%"class.rx::SamplerNULL"*), void (%"class.rx::SamplerNULL"*)* @_ZN2rx11SamplerNULLD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx11SamplerNULLC2ERKN2gl12SamplerStateE(%"class.rx::SamplerNULL"* nocapture, %"class.gl::SamplerState"* dereferenceable(68)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.rx::SamplerNULL", %"class.rx::SamplerNULL"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.rx::SamplerNULL", %"class.rx::SamplerNULL"* %0, i64 0, i32 0, i32 1
  store %"class.gl::SamplerState"* %1, %"class.gl::SamplerState"** %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2rx11SamplerNULLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2rx11SamplerNULLD2Ev(%"class.rx::SamplerNULL"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx11SamplerNULLD0Ev(%"class.rx::SamplerNULL"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.rx::SamplerNULL"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #4
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx11SamplerNULL9syncStateEPKN2gl7ContextEb(%"class.rx::SamplerNULL"* nocapture readnone, %"class.gl::Context"* nocapture readnone, i1 zeroext) unnamed_addr #1 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx11SamplerImpl9onDestroyEPKN2gl7ContextE(%"class.rx::SamplerImpl"*, %"class.gl::Context"*) unnamed_addr #2 comdat align 2 {
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
