; ModuleID = '../../third_party/icu/source/common/ucnv.cpp'
source_filename = "../../third_party/icu/source/common/ucnv.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UAmbiguousConverter = type { i8*, i16 }
%struct.UConverter = type { void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)*, void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)*, i8*, i8*, i8*, i8*, %struct.UConverterSharedData*, i32, i8, i8, i8, i8, i8, [7 x i8], i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], [32 x i8], [2 x i16], [2 x i16], [32 x i16], i32, [19 x i16], [31 x i8], i8, i8, i8, i32 }
%struct.UConverterFromUnicodeArgs = type { i16, i8, %struct.UConverter*, i16*, i16*, i8*, i8*, i32* }
%struct.UConverterToUnicodeArgs = type { i16, i8, %struct.UConverter*, i8*, i8*, i16*, i16*, i32* }
%struct.UConverterSharedData = type { i32, i32, i8*, %struct.UConverterStaticData*, i8, i8, %struct.UConverterImpl*, i32, %struct.UConverterMBCSTable }
%struct.UConverterStaticData = type { i32, [60 x i8], i32, i8, i8, i8, i8, [4 x i8], i8, i8, i8, i8, i8, [19 x i8] }
%struct.UConverterImpl = type { i32, void (%struct.UConverterSharedData*, %struct.UConverterLoadArgs*, i8*, i32*)*, void (%struct.UConverterSharedData*)*, void (%struct.UConverter*, %struct.UConverterLoadArgs*, i32*)*, void (%struct.UConverter*)*, void (%struct.UConverter*, i32)*, void (%struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverterFromUnicodeArgs*, i32*)*, void (%struct.UConverterFromUnicodeArgs*, i32*)*, i32 (%struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverter*, i8*, i32*)*, i8* (%struct.UConverter*)*, void (%struct.UConverterFromUnicodeArgs*, i32, i32*)*, %struct.UConverter* (%struct.UConverter*, i8*, i32*, i32*)*, void (%struct.UConverter*, %struct.USetAdder*, i32, i32*)*, void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)* }
%struct.UConverterLoadArgs = type { i32, i32, i8, i8, i16, i32, i8*, i8*, i8* }
%struct.USetAdder = type { %struct.USet*, void (%struct.USet*, i32)*, void (%struct.USet*, i32, i32)*, void (%struct.USet*, i16*, i32)*, void (%struct.USet*, i32)*, void (%struct.USet*, i32, i32)* }
%struct.USet = type opaque
%struct.UConverterMBCSTable = type { i8, i8, i8, i32, [256 x i32]*, [256 x i32]*, i16*, %struct._MBCSToUFallback*, i16*, i16*, [64 x i16], i8*, i8*, i32, i8, i8, i8, i16, i32, i8*, i8*, %struct.UConverterSharedData*, i32* }
%struct._MBCSToUFallback = type { i32, i32 }

@.str = private unnamed_addr constant [45 x i8] c"clone converter %s at %p into stackBuffer %p\00", align 1
@.str.1 = private unnamed_addr constant [41 x i8] c"close converter %s at %p, isCopyLocal=%b\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"IBM\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"UTF-16BE\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"UTF-32LE\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"UTF-16LE\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"UTF-32BE\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"SCSU\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"BOCU-1\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"UTF-7\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"UTF-EBCDIC\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"ibm-\00", align 1
@.str.13 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZL19ambiguousConverters = internal constant [11 x %struct.UAmbiguousConverter] [%struct.UAmbiguousConverter { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i32 0, i32 0), i16 165 }, %struct.UAmbiguousConverter { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i32 0, i32 0), i16 165 }, %struct.UAmbiguousConverter { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i32 0, i32 0), i16 165 }, %struct.UAmbiguousConverter { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i32 0, i32 0), i16 165 }, %struct.UAmbiguousConverter { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i32 0, i32 0), i16 165 }, %struct.UAmbiguousConverter { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i32 0, i32 0), i16 165 }, %struct.UAmbiguousConverter { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i32 0, i32 0), i16 8361 }, %struct.UAmbiguousConverter { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i32 0, i32 0), i16 8361 }, %struct.UAmbiguousConverter { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i32 0, i32 0), i16 8361 }, %struct.UAmbiguousConverter { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.23, i32 0, i32 0), i16 8361 }, %struct.UAmbiguousConverter { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24, i32 0, i32 0), i16 8361 }], align 16
@.str.14 = private unnamed_addr constant [18 x i8] c"ibm-897_P100-1995\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"ibm-942_P120-1999\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"ibm-943_P130-1999\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"ibm-946_P100-1995\00", align 1
@.str.18 = private unnamed_addr constant [20 x i8] c"ibm-33722_P120-1999\00", align 1
@.str.19 = private unnamed_addr constant [19 x i8] c"ibm-1041_P100-1995\00", align 1
@.str.20 = private unnamed_addr constant [18 x i8] c"ibm-944_P100-1995\00", align 1
@.str.21 = private unnamed_addr constant [18 x i8] c"ibm-949_P110-1999\00", align 1
@.str.22 = private unnamed_addr constant [19 x i8] c"ibm-1363_P110-1997\00", align 1
@.str.23 = private unnamed_addr constant [29 x i8] c"ISO_2022,locale=ko,version=0\00", align 1
@.str.24 = private unnamed_addr constant [19 x i8] c"ibm-1088_P100-1995\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UConverter* @ucnv_open_69(i8*, i32*) local_unnamed_addr #0 {
  %3 = icmp eq i32* %1, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = load i32, i32* %1, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call %struct.UConverter* @ucnv_createConverter_69(%struct.UConverter* null, i8* %0, i32* nonnull %1) #10
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi %struct.UConverter* [ %8, %7 ], [ null, %4 ], [ null, %2 ]
  ret %struct.UConverter* %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.UConverter* @ucnv_createConverter_69(%struct.UConverter*, i8*, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UConverter* @ucnv_openPackage_69(i8*, i8*, i32*) local_unnamed_addr #0 {
  %4 = tail call %struct.UConverter* @ucnv_createConverterFromPackage_69(i8* %0, i8* %1, i32* %2) #10
  ret %struct.UConverter* %4
}

declare %struct.UConverter* @ucnv_createConverterFromPackage_69(i8*, i8*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UConverter* @ucnv_openU_69(i16*, i32*) local_unnamed_addr #0 {
  %3 = alloca [60 x i8], align 16
  %4 = getelementptr inbounds [60 x i8], [60 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 60, i1 false)
  %5 = icmp eq i32* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = load i32, i32* %1, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %23

9:                                                ; preds = %6
  %10 = icmp eq i16* %0, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %9
  %12 = tail call %struct.UConverter* @ucnv_createConverter_69(%struct.UConverter* null, i8* null, i32* nonnull %1) #10
  br label %23

13:                                               ; preds = %9
  %14 = tail call i32 @u_strlen_69(i16* nonnull %0) #10
  %15 = icmp sgt i32 %14, 59
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  store i32 1, i32* %1, align 4
  br label %23

17:                                               ; preds = %13
  %18 = call i8* @u_austrcpy_69(i8* nonnull %4, i16* nonnull %0) #10
  %19 = load i32, i32* %1, align 4
  %20 = icmp slt i32 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = call %struct.UConverter* @ucnv_createConverter_69(%struct.UConverter* null, i8* %18, i32* nonnull %1) #10
  br label %23

23:                                               ; preds = %21, %17, %11, %2, %6, %16
  %24 = phi %struct.UConverter* [ null, %16 ], [ null, %6 ], [ null, %2 ], [ %12, %11 ], [ %22, %21 ], [ null, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %4) #10
  ret %struct.UConverter* %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @u_strlen_69(i16*) local_unnamed_addr #2

declare i8* @u_austrcpy_69(i8*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UConverter* @ucnv_openCCSID_69(i32, i32, i32*) local_unnamed_addr #0 {
  %4 = alloca [60 x i8], align 16
  %5 = getelementptr inbounds [60 x i8], [60 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 60, i1 false)
  %6 = icmp eq i32* %2, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %3
  %8 = load i32, i32* %2, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %19

10:                                               ; preds = %7
  %11 = icmp eq i32 %1, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %5, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i64 5, i1 false) #10
  br label %14

13:                                               ; preds = %10
  store i8 0, i8* %5, align 16
  br label %14

14:                                               ; preds = %12, %13
  %15 = phi i64 [ 4, %12 ], [ 0, %13 ]
  %16 = getelementptr inbounds [60 x i8], [60 x i8]* %4, i64 0, i64 %15
  %17 = call i32 @T_CString_integerToString_69(i8* %16, i32 %0, i32 10) #10
  %18 = call %struct.UConverter* @ucnv_createConverter_69(%struct.UConverter* null, i8* nonnull %5, i32* nonnull %2) #10
  br label %19

19:                                               ; preds = %3, %7, %14
  %20 = phi %struct.UConverter* [ %18, %14 ], [ null, %7 ], [ null, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %5) #10
  ret %struct.UConverter* %20
}

declare i32 @T_CString_integerToString_69(i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UConverter* @ucnv_safeClone_69(%struct.UConverter*, i8*, i32*, i32*) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.UConverterToUnicodeArgs, align 8
  %9 = alloca %struct.UConverterFromUnicodeArgs, align 8
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #10
  store i32 -1431655766, i32* %5, align 4
  %11 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #10
  store i32 -1431655766, i32* %6, align 4
  %12 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #10
  store i32 -1431655766, i32* %7, align 4
  %13 = bitcast %struct.UConverterToUnicodeArgs* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %13) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 56, i1 false)
  %14 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %8, i64 0, i32 0
  store i16 56, i16* %14, align 8
  %15 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %8, i64 0, i32 1
  store i8 1, i8* %15, align 2
  %16 = bitcast %struct.UConverterFromUnicodeArgs* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 56, i1 false)
  %17 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %9, i64 0, i32 0
  store i16 56, i16* %17, align 8
  %18 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %9, i64 0, i32 1
  store i8 1, i8* %18, align 2
  %19 = tail call i32 @utrace_getLevel_69() #10
  %20 = icmp sgt i32 %19, 4
  br i1 %20, label %21, label %22

21:                                               ; preds = %4
  tail call void @utrace_entry_69(i32 4099) #10
  br label %22

22:                                               ; preds = %21, %4
  %23 = phi i32 [ -2147483648, %21 ], [ 0, %4 ]
  %24 = icmp eq i32* %3, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = load i32, i32* %3, align 4
  %27 = icmp slt i32 %26, 1
  br i1 %27, label %35, label %28

28:                                               ; preds = %25, %22
  %29 = icmp eq i32 %23, 0
  br i1 %29, label %217, label %30

30:                                               ; preds = %28
  br i1 %24, label %33, label %31

31:                                               ; preds = %30
  %32 = load i32, i32* %3, align 4
  br label %33

33:                                               ; preds = %30, %31
  %34 = phi i32 [ %32, %31 ], [ 1, %30 ]
  tail call void (i32, i32, ...) @utrace_exit_69(i32 4099, i32 16, i32 %34) #10
  br label %217

35:                                               ; preds = %25
  %36 = icmp eq %struct.UConverter* %0, null
  br i1 %36, label %37, label %40

37:                                               ; preds = %35
  store i32 1, i32* %3, align 4
  %38 = icmp eq i32 %23, 0
  br i1 %38, label %217, label %39

39:                                               ; preds = %37
  tail call void (i32, i32, ...) @utrace_exit_69(i32 4099, i32 16, i32 1) #10
  br label %217

40:                                               ; preds = %35
  %41 = tail call i32 @utrace_getLevel_69() #10
  %42 = icmp sgt i32 %41, 4
  br i1 %42, label %43, label %66

43:                                               ; preds = %40
  %44 = load i32, i32* %3, align 4
  %45 = icmp slt i32 %44, 1
  br i1 %45, label %46, label %64

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %48 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %47, align 8
  %49 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %48, i64 0, i32 6
  %50 = load %struct.UConverterImpl*, %struct.UConverterImpl** %49, align 8
  %51 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %50, i64 0, i32 12
  %52 = load i8* (%struct.UConverter*)*, i8* (%struct.UConverter*)** %51, align 8
  %53 = icmp eq i8* (%struct.UConverter*)* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %46
  %55 = tail call i8* %52(%struct.UConverter* nonnull %0) #10
  %56 = icmp eq i8* %55, null
  br i1 %56, label %57, label %64

57:                                               ; preds = %54
  %58 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %47, align 8
  br label %59

59:                                               ; preds = %57, %46
  %60 = phi %struct.UConverterSharedData* [ %58, %57 ], [ %48, %46 ]
  %61 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %60, i64 0, i32 3
  %62 = load %struct.UConverterStaticData*, %struct.UConverterStaticData** %61, align 8
  %63 = getelementptr inbounds %struct.UConverterStaticData, %struct.UConverterStaticData* %62, i64 0, i32 1, i64 0
  br label %64

64:                                               ; preds = %43, %54, %59
  %65 = phi i8* [ %63, %59 ], [ %55, %54 ], [ null, %43 ]
  tail call void (i32, i32, i8*, ...) @utrace_data_69(i32 4099, i32 5, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i8* %65, %struct.UConverter* nonnull %0, i8* %1) #10
  br label %66

66:                                               ; preds = %64, %40
  %67 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %68 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %67, align 8
  %69 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %68, i64 0, i32 6
  %70 = load %struct.UConverterImpl*, %struct.UConverterImpl** %69, align 8
  %71 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %70, i64 0, i32 14
  %72 = load %struct.UConverter* (%struct.UConverter*, i8*, i32*, i32*)*, %struct.UConverter* (%struct.UConverter*, i8*, i32*, i32*)** %71, align 8
  %73 = icmp eq %struct.UConverter* (%struct.UConverter*, i8*, i32*, i32*)* %72, null
  br i1 %73, label %81, label %74

74:                                               ; preds = %66
  store i32 0, i32* %6, align 4
  %75 = call %struct.UConverter* %72(%struct.UConverter* nonnull %0, i8* null, i32* nonnull %6, i32* nonnull %3) #10
  %76 = load i32, i32* %3, align 4
  %77 = icmp slt i32 %76, 1
  br i1 %77, label %82, label %78

78:                                               ; preds = %74
  %79 = icmp eq i32 %23, 0
  br i1 %79, label %217, label %80

80:                                               ; preds = %78
  call void (i32, i32, ...) @utrace_exit_69(i32 4099, i32 16, i32 %76) #10
  br label %217

81:                                               ; preds = %66
  store i32 288, i32* %6, align 4
  br label %82

82:                                               ; preds = %74, %81
  %83 = icmp eq i32* %2, null
  br i1 %83, label %84, label %85

84:                                               ; preds = %82
  store i32 1, i32* %5, align 4
  br label %92

85:                                               ; preds = %82
  %86 = load i32, i32* %2, align 4
  store i32 %86, i32* %5, align 4
  %87 = icmp slt i32 %86, 1
  br i1 %87, label %88, label %92

88:                                               ; preds = %85
  %89 = load i32, i32* %6, align 4
  store i32 %89, i32* %2, align 4
  %90 = icmp eq i32 %23, 0
  br i1 %90, label %217, label %91

91:                                               ; preds = %88
  call void (i32, i32, ...) @utrace_exit_69(i32 4099, i32 1, i32 %89) #10
  br label %217

92:                                               ; preds = %85, %84
  %93 = phi i32 [ 1, %84 ], [ %86, %85 ]
  %94 = phi i32* [ %5, %84 ], [ %2, %85 ]
  %95 = icmp eq i8* %1, null
  br i1 %95, label %96, label %99

96:                                               ; preds = %92
  %97 = load i32, i32* %6, align 4
  %98 = sext i32 %97 to i64
  br label %117

99:                                               ; preds = %92
  %100 = ptrtoint i8* %1 to i64
  %101 = add i64 %100, 7
  %102 = and i64 %101, -8
  %103 = sub i64 %102, %100
  %104 = load i32, i32* %6, align 4
  %105 = sext i32 %104 to i64
  %106 = add nsw i64 %103, %105
  %107 = sext i32 %93 to i64
  %108 = icmp sgt i64 %106, %107
  %109 = inttoptr i64 %102 to i8*
  %110 = trunc i64 %103 to i32
  %111 = sub nsw i32 %93, %110
  %112 = select i1 %108, i32 1, i32 %111
  %113 = select i1 %108, i8* %1, i8* %109
  store i32 %112, i32* %5, align 4
  %114 = icmp slt i32 %112, %104
  %115 = icmp eq i8* %113, null
  %116 = or i1 %114, %115
  br i1 %116, label %117, label %129

117:                                              ; preds = %96, %99
  %118 = phi i64 [ %98, %96 ], [ %105, %99 ]
  %119 = phi i8* [ null, %96 ], [ %113, %99 ]
  %120 = call noalias i8* @uprv_malloc_69(i64 %118) #11
  %121 = bitcast i8* %120 to %struct.UConverter*
  %122 = icmp eq i8* %120, null
  br i1 %122, label %123, label %126

123:                                              ; preds = %117
  store i32 7, i32* %3, align 4
  %124 = icmp eq i32 %23, 0
  br i1 %124, label %217, label %125

125:                                              ; preds = %123
  call void (i32, i32, ...) @utrace_exit_69(i32 4099, i32 16, i32 7) #10
  br label %217

126:                                              ; preds = %117
  store i32 -126, i32* %3, align 4
  %127 = load i32, i32* %6, align 4
  store i32 %127, i32* %94, align 4
  %128 = sext i32 %127 to i64
  br label %131

129:                                              ; preds = %99
  %130 = bitcast i8* %113 to %struct.UConverter*
  br label %131

131:                                              ; preds = %129, %126
  %132 = phi i64 [ %105, %129 ], [ %128, %126 ]
  %133 = phi i8* [ %113, %129 ], [ %119, %126 ]
  %134 = phi i8* [ %113, %129 ], [ %120, %126 ]
  %135 = phi %struct.UConverter* [ %130, %129 ], [ %121, %126 ]
  %136 = phi i8* [ null, %129 ], [ %120, %126 ]
  %137 = phi %struct.UConverter* [ null, %129 ], [ %121, %126 ]
  %138 = bitcast %struct.UConverter* %0 to i8*
  %139 = icmp ult i64 %132, 289
  %140 = add nsw i64 %132, -288
  %141 = select i1 %139, i64 0, i64 %140
  %142 = getelementptr i8, i8* %134, i64 288
  call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 %141, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %134, i8* nonnull align 8 %138, i64 288, i1 false)
  %143 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %135, i64 0, i32 10
  store i8 0, i8* %143, align 2
  %144 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %135, i64 0, i32 9
  store i8 0, i8* %144, align 1
  %145 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 5
  %146 = load i8*, i8** %145, align 8
  %147 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 28, i64 0
  %148 = bitcast i16* %147 to i8*
  %149 = icmp eq i8* %146, %148
  br i1 %149, label %150, label %154

150:                                              ; preds = %131
  %151 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %135, i64 0, i32 28, i64 0
  %152 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %135, i64 0, i32 5
  %153 = bitcast i8** %152 to i16**
  store i16* %151, i16** %153, align 8
  br label %164

154:                                              ; preds = %131
  %155 = call noalias i8* @uprv_malloc_69(i64 64) #11
  %156 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %135, i64 0, i32 5
  store i8* %155, i8** %156, align 8
  %157 = icmp eq i8* %155, null
  br i1 %157, label %158, label %162

158:                                              ; preds = %154
  call void @uprv_free_69(i8* %136) #10
  %159 = icmp eq i32 %23, 0
  br i1 %159, label %217, label %160

160:                                              ; preds = %158
  %161 = load i32, i32* %3, align 4
  call void (i32, i32, ...) @utrace_exit_69(i32 4099, i32 16, i32 %161) #10
  br label %217

162:                                              ; preds = %154
  %163 = load i8*, i8** %145, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %155, i8* align 1 %163, i64 64, i1 false)
  br label %164

164:                                              ; preds = %162, %150
  %165 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %67, align 8
  %166 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %165, i64 0, i32 6
  %167 = load %struct.UConverterImpl*, %struct.UConverterImpl** %166, align 8
  %168 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %167, i64 0, i32 14
  %169 = load %struct.UConverter* (%struct.UConverter*, i8*, i32*, i32*)*, %struct.UConverter* (%struct.UConverter*, i8*, i32*, i32*)** %168, align 8
  %170 = icmp eq %struct.UConverter* (%struct.UConverter*, i8*, i32*, i32*)* %169, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %164
  %172 = call %struct.UConverter* %169(%struct.UConverter* nonnull %0, i8* nonnull %134, i32* nonnull %94, i32* nonnull %3) #10
  br label %173

173:                                              ; preds = %164, %171
  %174 = phi %struct.UConverter* [ %172, %171 ], [ %135, %164 ]
  %175 = icmp eq %struct.UConverter* %174, null
  br i1 %175, label %179, label %176

176:                                              ; preds = %173
  %177 = load i32, i32* %3, align 4
  %178 = icmp slt i32 %177, 1
  br i1 %178, label %192, label %179

179:                                              ; preds = %176, %173
  %180 = icmp eq %struct.UConverter* %137, null
  br i1 %180, label %188, label %181

181:                                              ; preds = %179
  %182 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %137, i64 0, i32 5
  %183 = load i8*, i8** %182, align 8
  %184 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %137, i64 0, i32 28, i64 0
  %185 = bitcast i16* %184 to i8*
  %186 = icmp eq i8* %183, %185
  br i1 %186, label %188, label %187

187:                                              ; preds = %181
  call void @uprv_free_69(i8* %183) #10
  br label %188

188:                                              ; preds = %181, %179, %187
  call void @uprv_free_69(i8* %136) #10
  %189 = icmp eq i32 %23, 0
  br i1 %189, label %217, label %190

190:                                              ; preds = %188
  %191 = load i32, i32* %3, align 4
  call void (i32, i32, ...) @utrace_exit_69(i32 4099, i32 16, i32 %191) #10
  br label %217

192:                                              ; preds = %176
  %193 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %67, align 8
  %194 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %193, i64 0, i32 5
  %195 = load i8, i8* %194, align 1
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %198, label %197

197:                                              ; preds = %192
  call void @ucnv_incrementRefCount_69(%struct.UConverterSharedData* %193) #10
  br label %198

198:                                              ; preds = %192, %197
  %199 = bitcast i8* %133 to %struct.UConverter*
  %200 = icmp eq %struct.UConverter* %174, %199
  br i1 %200, label %201, label %203

201:                                              ; preds = %198
  %202 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %174, i64 0, i32 9
  store i8 1, i8* %202, align 1
  br label %203

203:                                              ; preds = %201, %198
  %204 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %9, i64 0, i32 2
  store %struct.UConverter* %174, %struct.UConverter** %204, align 8
  %205 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %8, i64 0, i32 2
  store %struct.UConverter* %174, %struct.UConverter** %205, align 8
  store i32 0, i32* %7, align 4
  %206 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 1
  %207 = load void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)*, void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)** %206, align 8
  %208 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 4
  %209 = load i8*, i8** %208, align 8
  call void %207(i8* %209, %struct.UConverterToUnicodeArgs* nonnull %8, i8* null, i32 0, i32 5, i32* nonnull %7) #10
  store i32 0, i32* %7, align 4
  %210 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 0
  %211 = load void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)*, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** %210, align 8
  %212 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 3
  %213 = load i8*, i8** %212, align 8
  call void %211(i8* %213, %struct.UConverterFromUnicodeArgs* nonnull %9, i16* null, i32 0, i32 0, i32 5, i32* nonnull %7) #10
  %214 = icmp eq i32 %23, 0
  br i1 %214, label %217, label %215

215:                                              ; preds = %203
  %216 = load i32, i32* %3, align 4
  call void (i32, i32, ...) @utrace_exit_69(i32 4099, i32 18, %struct.UConverter* nonnull %174, i32 %216) #10
  br label %217

217:                                              ; preds = %215, %203, %190, %188, %160, %158, %125, %123, %91, %88, %80, %78, %39, %37, %33, %28
  %218 = phi %struct.UConverter* [ null, %28 ], [ null, %33 ], [ null, %37 ], [ null, %39 ], [ null, %78 ], [ null, %80 ], [ null, %88 ], [ null, %91 ], [ null, %123 ], [ null, %125 ], [ null, %158 ], [ null, %160 ], [ null, %188 ], [ null, %190 ], [ %174, %203 ], [ %174, %215 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #10
  ret %struct.UConverter* %218
}

declare i32 @utrace_getLevel_69() local_unnamed_addr #2

declare void @utrace_entry_69(i32) local_unnamed_addr #2

declare void @utrace_exit_69(i32, i32, ...) local_unnamed_addr #2

declare void @utrace_data_69(i32, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @ucnv_getName_69(%struct.UConverter*, i32* nocapture readonly) local_unnamed_addr #0 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %23

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %7 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %6, align 8
  %8 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %7, i64 0, i32 6
  %9 = load %struct.UConverterImpl*, %struct.UConverterImpl** %8, align 8
  %10 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %9, i64 0, i32 12
  %11 = load i8* (%struct.UConverter*)*, i8* (%struct.UConverter*)** %10, align 8
  %12 = icmp eq i8* (%struct.UConverter*)* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %5
  %14 = tail call i8* %11(%struct.UConverter* %0) #10
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %23

16:                                               ; preds = %13
  %17 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %6, align 8
  br label %18

18:                                               ; preds = %16, %5
  %19 = phi %struct.UConverterSharedData* [ %17, %16 ], [ %7, %5 ]
  %20 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %19, i64 0, i32 3
  %21 = load %struct.UConverterStaticData*, %struct.UConverterStaticData** %20, align 8
  %22 = getelementptr inbounds %struct.UConverterStaticData, %struct.UConverterStaticData* %21, i64 0, i32 1, i64 0
  br label %23

23:                                               ; preds = %2, %13, %18
  %24 = phi i8* [ %22, %18 ], [ %14, %13 ], [ null, %2 ]
  ret i8* %24
}

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @uprv_free_69(i8*) local_unnamed_addr #2

declare void @ucnv_incrementRefCount_69(%struct.UConverterSharedData*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_close_69(%struct.UConverter*) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.UConverterToUnicodeArgs, align 8
  %4 = alloca %struct.UConverterFromUnicodeArgs, align 8
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #10
  store i32 0, i32* %2, align 4
  %6 = tail call i32 @utrace_getLevel_69() #10
  %7 = icmp sgt i32 %6, 4
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  tail call void @utrace_entry_69(i32 4100) #10
  br label %9

9:                                                ; preds = %8, %1
  %10 = phi i32 [ -2147483648, %8 ], [ 0, %1 ]
  %11 = icmp eq %struct.UConverter* %0, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %9
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %94, label %14

14:                                               ; preds = %12
  tail call void (i32, i32, ...) @utrace_exit_69(i32 4100, i32 0) #10
  br label %94

15:                                               ; preds = %9
  %16 = tail call i32 @utrace_getLevel_69() #10
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %41

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %20 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %19, align 8
  %21 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %20, i64 0, i32 6
  %22 = load %struct.UConverterImpl*, %struct.UConverterImpl** %21, align 8
  %23 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %22, i64 0, i32 12
  %24 = load i8* (%struct.UConverter*)*, i8* (%struct.UConverter*)** %23, align 8
  %25 = icmp eq i8* (%struct.UConverter*)* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %18
  %27 = tail call i8* %24(%struct.UConverter* nonnull %0) #10
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %36

29:                                               ; preds = %26
  %30 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %19, align 8
  br label %31

31:                                               ; preds = %29, %18
  %32 = phi %struct.UConverterSharedData* [ %30, %29 ], [ %20, %18 ]
  %33 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %32, i64 0, i32 3
  %34 = load %struct.UConverterStaticData*, %struct.UConverterStaticData** %33, align 8
  %35 = getelementptr inbounds %struct.UConverterStaticData, %struct.UConverterStaticData* %34, i64 0, i32 1, i64 0
  br label %36

36:                                               ; preds = %26, %31
  %37 = phi i8* [ %35, %31 ], [ %27, %26 ]
  %38 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 9
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  tail call void (i32, i32, i8*, ...) @utrace_data_69(i32 4100, i32 5, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i8* %37, %struct.UConverter* nonnull %0, i32 %40) #10
  br label %41

41:                                               ; preds = %36, %15
  %42 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 1
  %43 = load void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)*, void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)** %42, align 8
  %44 = icmp eq void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)* %43, @UCNV_TO_U_CALLBACK_SUBSTITUTE_69
  br i1 %44, label %52, label %45

45:                                               ; preds = %41
  %46 = bitcast %struct.UConverterToUnicodeArgs* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %46) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 56, i1 false)
  %47 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %3, i64 0, i32 0
  store i16 56, i16* %47, align 8
  %48 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %3, i64 0, i32 1
  store i8 1, i8* %48, align 2
  %49 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %3, i64 0, i32 2
  store %struct.UConverter* %0, %struct.UConverter** %49, align 8
  store i32 0, i32* %2, align 4
  %50 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 4
  %51 = load i8*, i8** %50, align 8
  call void %43(i8* %51, %struct.UConverterToUnicodeArgs* nonnull %3, i8* null, i32 0, i32 4, i32* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %46) #10
  br label %52

52:                                               ; preds = %41, %45
  %53 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 0
  %54 = load void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)*, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** %53, align 8
  %55 = icmp eq void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)* %54, @UCNV_FROM_U_CALLBACK_SUBSTITUTE_69
  br i1 %55, label %63, label %56

56:                                               ; preds = %52
  %57 = bitcast %struct.UConverterFromUnicodeArgs* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %57) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 56, i1 false)
  %58 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %4, i64 0, i32 0
  store i16 56, i16* %58, align 8
  %59 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %4, i64 0, i32 1
  store i8 1, i8* %59, align 2
  %60 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %4, i64 0, i32 2
  store %struct.UConverter* %0, %struct.UConverter** %60, align 8
  store i32 0, i32* %2, align 4
  %61 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 3
  %62 = load i8*, i8** %61, align 8
  call void %54(i8* %62, %struct.UConverterFromUnicodeArgs* nonnull %4, i16* null, i32 0, i32 0, i32 4, i32* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %57) #10
  br label %63

63:                                               ; preds = %52, %56
  %64 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %65 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %64, align 8
  %66 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %65, i64 0, i32 6
  %67 = load %struct.UConverterImpl*, %struct.UConverterImpl** %66, align 8
  %68 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %67, i64 0, i32 4
  %69 = load void (%struct.UConverter*)*, void (%struct.UConverter*)** %68, align 8
  %70 = icmp eq void (%struct.UConverter*)* %69, null
  br i1 %70, label %72, label %71

71:                                               ; preds = %63
  call void %69(%struct.UConverter* nonnull %0) #10
  br label %72

72:                                               ; preds = %63, %71
  %73 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 5
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 28, i64 0
  %76 = bitcast i16* %75 to i8*
  %77 = icmp eq i8* %74, %76
  br i1 %77, label %79, label %78

78:                                               ; preds = %72
  call void @uprv_free_69(i8* %74) #10
  br label %79

79:                                               ; preds = %72, %78
  %80 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %64, align 8
  %81 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %80, i64 0, i32 5
  %82 = load i8, i8* %81, align 1
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %85, label %84

84:                                               ; preds = %79
  call void @ucnv_unloadSharedDataIfReady_69(%struct.UConverterSharedData* %80) #10
  br label %85

85:                                               ; preds = %79, %84
  %86 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 9
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  %90 = bitcast %struct.UConverter* %0 to i8*
  call void @uprv_free_69(i8* nonnull %90) #10
  br label %91

91:                                               ; preds = %85, %89
  %92 = icmp eq i32 %10, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %91
  call void (i32, i32, ...) @utrace_exit_69(i32 4100, i32 0) #10
  br label %94

94:                                               ; preds = %93, %91, %14, %12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #10
  ret void
}

declare void @UCNV_TO_U_CALLBACK_SUBSTITUTE_69(i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*) #2

declare void @UCNV_FROM_U_CALLBACK_SUBSTITUTE_69(i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*) #2

declare void @ucnv_unloadSharedDataIfReady_69(%struct.UConverterSharedData*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @ucnv_getAvailableName_69(i32) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = icmp ult i32 %0, 65536
  br i1 %3, label %4, label %10

4:                                                ; preds = %1
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #10
  store i32 0, i32* %2, align 4
  %6 = trunc i32 %0 to i16
  %7 = call i8* @ucnv_bld_getAvailableConverter_69(i16 zeroext %6, i32* nonnull %2) #10
  %8 = load i32, i32* %2, align 4
  %9 = icmp sgt i32 %8, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #10
  br i1 %9, label %10, label %11

10:                                               ; preds = %4, %1
  br label %11

11:                                               ; preds = %4, %10
  %12 = phi i8* [ null, %10 ], [ %7, %4 ]
  ret i8* %12
}

declare i8* @ucnv_bld_getAvailableConverter_69(i16 zeroext, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ucnv_countAvailable_69() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #10
  store i32 0, i32* %1, align 4
  %3 = call zeroext i16 @ucnv_bld_countAvailableConverters_69(i32* nonnull %1) #10
  %4 = zext i16 %3 to i32
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #10
  ret i32 %4
}

declare zeroext i16 @ucnv_bld_countAvailableConverters_69(i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_getSubstChars_69(%struct.UConverter* nocapture readonly, i8* nocapture, i8* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %21

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 19
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 1
  br i1 %10, label %11, label %12

11:                                               ; preds = %7
  store i8 0, i8* %2, align 1
  br label %21

12:                                               ; preds = %7
  %13 = load i8, i8* %2, align 1
  %14 = icmp slt i8 %13, %9
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  store i32 8, i32* %3, align 4
  br label %21

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 5
  %18 = load i8*, i8** %17, align 8
  %19 = sext i8 %9 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %18, i64 %19, i1 false)
  %20 = load i8, i8* %8, align 1
  store i8 %20, i8* %2, align 1
  br label %21

21:                                               ; preds = %4, %16, %15, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_setSubstChars_69(%struct.UConverter* nocapture, i8* nocapture readonly, i8 signext, i32* nocapture) local_unnamed_addr #0 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %26

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %9 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %8, align 8
  %10 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %9, i64 0, i32 3
  %11 = load %struct.UConverterStaticData*, %struct.UConverterStaticData** %10, align 8
  %12 = getelementptr inbounds %struct.UConverterStaticData, %struct.UConverterStaticData* %11, i64 0, i32 6
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, %2
  br i1 %14, label %19, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.UConverterStaticData, %struct.UConverterStaticData* %11, i64 0, i32 5
  %17 = load i8, i8* %16, align 2
  %18 = icmp sgt i8 %17, %2
  br i1 %18, label %19, label %20

19:                                               ; preds = %15, %7
  store i32 1, i32* %3, align 4
  br label %26

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 5
  %22 = load i8*, i8** %21, align 8
  %23 = sext i8 %2 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %1, i64 %23, i1 false)
  %24 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 19
  store i8 %2, i8* %24, align 1
  %25 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 24
  store i8 0, i8* %25, align 2
  br label %26

26:                                               ; preds = %4, %20, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_setSubstString_69(%struct.UConverter*, i16*, i32, i32*) local_unnamed_addr #0 {
  %5 = alloca [1024 x i8], align 8
  %6 = alloca [32 x i8], align 16
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 1024, i1 false)
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  %10 = bitcast i32* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #10
  store i32 1024, i32* %7, align 4
  %11 = call %struct.UConverter* @ucnv_safeClone_69(%struct.UConverter* %0, i8* nonnull %8, i32* nonnull %7, i32* %3)
  %12 = load i32, i32* %3, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %17

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %11, i64 0, i32 0
  store void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)* @UCNV_FROM_U_CALLBACK_STOP_69, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** %15, align 8
  %16 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %11, i64 0, i32 3
  store i8* null, i8** %16, align 8
  br label %17

17:                                               ; preds = %4, %14
  %18 = call i32 @ucnv_fromUChars_69(%struct.UConverter* %11, i8* nonnull %9, i32 32, i16* %1, i32 %2, i32* %3)
  call void @ucnv_close_69(%struct.UConverter* %11)
  %19 = load i32, i32* %3, align 4
  %20 = icmp slt i32 %19, 1
  br i1 %20, label %21, label %84

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %23 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %22, align 8
  %24 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %23, i64 0, i32 6
  %25 = load %struct.UConverterImpl*, %struct.UConverterImpl** %24, align 8
  %26 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %25, i64 0, i32 13
  %27 = load void (%struct.UConverterFromUnicodeArgs*, i32, i32*)*, void (%struct.UConverterFromUnicodeArgs*, i32, i32*)** %26, align 8
  %28 = icmp eq void (%struct.UConverterFromUnicodeArgs*, i32, i32*)* %27, null
  br i1 %28, label %49, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %23, i64 0, i32 3
  %31 = load %struct.UConverterStaticData*, %struct.UConverterStaticData** %30, align 8
  %32 = getelementptr inbounds %struct.UConverterStaticData, %struct.UConverterStaticData* %31, i64 0, i32 4
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 2
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = call i32 @ucnv_MBCSGetType_69(%struct.UConverter* %0) #10
  %37 = icmp eq i32 %36, 9
  br i1 %37, label %38, label %49

38:                                               ; preds = %35, %29
  %39 = icmp sgt i32 %2, 32
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  store i32 15, i32* %3, align 4
  br label %84

41:                                               ; preds = %38
  %42 = bitcast i16* %1 to i8*
  %43 = icmp slt i32 %2, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %41
  %45 = call i32 @u_strlen_69(i16* %1) #10
  br label %46

46:                                               ; preds = %44, %41
  %47 = phi i32 [ %45, %44 ], [ %2, %41 ]
  %48 = shl nsw i32 %47, 1
  br label %49

49:                                               ; preds = %21, %35, %46
  %50 = phi i32 [ %47, %46 ], [ %2, %35 ], [ %2, %21 ]
  %51 = phi i8* [ %42, %46 ], [ %9, %35 ], [ %9, %21 ]
  %52 = phi i32 [ %48, %46 ], [ %18, %35 ], [ %18, %21 ]
  %53 = icmp sgt i32 %52, 4
  br i1 %53, label %54, label %66

54:                                               ; preds = %49
  %55 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 5
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 28, i64 0
  %58 = bitcast i16* %57 to i8*
  %59 = icmp eq i8* %56, %58
  br i1 %59, label %60, label %71

60:                                               ; preds = %54
  %61 = call noalias i8* @uprv_malloc_69(i64 64) #11
  store i8* %61, i8** %55, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %63, label %65

63:                                               ; preds = %60
  %64 = bitcast i8** %55 to i16**
  store i16* %57, i16** %64, align 8
  store i32 7, i32* %3, align 4
  br label %84

65:                                               ; preds = %60
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %61, i8 0, i64 64, i1 false)
  br label %71

66:                                               ; preds = %49
  %67 = icmp eq i32 %52, 0
  br i1 %67, label %80, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 5
  %70 = load i8*, i8** %69, align 8
  br label %71

71:                                               ; preds = %68, %65, %54
  %72 = phi i8* [ %70, %68 ], [ %61, %65 ], [ %56, %54 ]
  %73 = sext i32 %52 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %51, i64 %73, i1 false)
  %74 = icmp eq i8* %51, %9
  br i1 %74, label %75, label %77

75:                                               ; preds = %71
  %76 = trunc i32 %52 to i8
  br label %80

77:                                               ; preds = %71
  %78 = trunc i32 %50 to i8
  %79 = sub i8 0, %78
  br label %80

80:                                               ; preds = %66, %75, %77
  %81 = phi i8 [ %76, %75 ], [ %79, %77 ], [ 0, %66 ]
  %82 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 19
  store i8 %81, i8* %82, align 1
  %83 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 24
  store i8 0, i8* %83, align 2
  br label %84

84:                                               ; preds = %17, %80, %63, %40
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ucnv_setFromUCallBack_69(%struct.UConverter* nocapture, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)*, i8*, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)**, i8**, i32* nocapture readonly) local_unnamed_addr #4 {
  %7 = load i32, i32* %5, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %25

9:                                                ; preds = %6
  %10 = icmp eq void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** %3, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %9
  %12 = bitcast %struct.UConverter* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** %3 to i64*
  store i64 %13, i64* %14, align 8
  br label %15

15:                                               ; preds = %9, %11
  %16 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 0
  store void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)* %1, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** %16, align 8
  %17 = icmp eq i8** %4, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 3
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast i8** %4 to i64*
  store i64 %21, i64* %22, align 8
  br label %23

23:                                               ; preds = %15, %18
  %24 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 3
  store i8* %2, i8** %24, align 8
  br label %25

25:                                               ; preds = %6, %23
  ret void
}

declare void @UCNV_FROM_U_CALLBACK_STOP_69(i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ucnv_fromUChars_69(%struct.UConverter*, i8*, i32, i16*, i32, i32*) local_unnamed_addr #0 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.UConverterFromUnicodeArgs, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i16*, align 8
  %11 = alloca [1024 x i8], align 16
  store i8* %1, i8** %9, align 8
  store i16* %3, i16** %10, align 8
  %12 = icmp eq i32* %5, null
  br i1 %12, label %110, label %13

13:                                               ; preds = %6
  %14 = load i32, i32* %5, align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %16, label %110

16:                                               ; preds = %13
  %17 = icmp eq %struct.UConverter* %0, null
  %18 = icmp slt i32 %2, 0
  %19 = or i1 %17, %18
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = icmp sgt i32 %2, 0
  %22 = icmp eq i8* %1, null
  %23 = and i1 %22, %21
  %24 = icmp slt i32 %4, -1
  %25 = or i1 %23, %24
  br i1 %25, label %30, label %26

26:                                               ; preds = %20
  %27 = icmp ne i32 %4, 0
  %28 = icmp eq i16* %3, null
  %29 = and i1 %28, %27
  br i1 %29, label %30, label %31

30:                                               ; preds = %26, %20, %16
  store i32 1, i32* %5, align 4
  br label %110

31:                                               ; preds = %26
  %32 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #10
  store i32 -1431655766, i32* %7, align 4
  %33 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 0
  %34 = load void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)*, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** %33, align 8
  %35 = icmp eq void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)* %34, @UCNV_FROM_U_CALLBACK_SUBSTITUTE_69
  br i1 %35, label %43, label %36

36:                                               ; preds = %31
  %37 = bitcast %struct.UConverterFromUnicodeArgs* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %37) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 56, i1 false) #10
  %38 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %8, i64 0, i32 0
  store i16 56, i16* %38, align 8
  %39 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %8, i64 0, i32 1
  store i8 1, i8* %39, align 2
  %40 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %8, i64 0, i32 2
  store %struct.UConverter* %0, %struct.UConverter** %40, align 8
  store i32 0, i32* %7, align 4
  %41 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 3
  %42 = load i8*, i8** %41, align 8
  call void %34(i8* %42, %struct.UConverterFromUnicodeArgs* nonnull %8, i16* null, i32 0, i32 0, i32 3, i32* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %37) #10
  br label %43

43:                                               ; preds = %36, %31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #10
  %44 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %45 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %44, align 8
  %46 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 16
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 17
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 21
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 22
  store i8 0, i8* %49, align 4
  %50 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 31
  store i32 -1, i32* %50, align 8
  %51 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 34
  store i8 0, i8* %51, align 1
  %52 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %45, i64 0, i32 6
  %53 = load %struct.UConverterImpl*, %struct.UConverterImpl** %52, align 8
  %54 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %53, i64 0, i32 5
  %55 = load void (%struct.UConverter*, i32)*, void (%struct.UConverter*, i32)** %54, align 8
  %56 = icmp eq void (%struct.UConverter*, i32)* %55, null
  br i1 %56, label %58, label %57

57:                                               ; preds = %43
  call void %55(%struct.UConverter* nonnull %0, i32 2) #10
  br label %58

58:                                               ; preds = %43, %57
  %59 = load i8*, i8** %9, align 8
  %60 = icmp eq i32 %4, -1
  br i1 %60, label %61, label %64

61:                                               ; preds = %58
  %62 = load i16*, i16** %10, align 8
  %63 = call i32 @u_strlen_69(i16* %62) #10
  br label %64

64:                                               ; preds = %61, %58
  %65 = phi i32 [ %63, %61 ], [ %4, %58 ]
  %66 = icmp sgt i32 %65, 0
  br i1 %66, label %67, label %106

67:                                               ; preds = %64
  %68 = load i16*, i16** %10, align 8
  %69 = sext i32 %65 to i64
  %70 = getelementptr inbounds i16, i16* %68, i64 %69
  %71 = load i8*, i8** %9, align 8
  %72 = icmp slt i32 %2, 1
  br i1 %72, label %82, label %73

73:                                               ; preds = %67
  %74 = ptrtoint i8* %71 to i64
  %75 = add i64 %74, 2147483647
  %76 = icmp ugt i8* %71, inttoptr (i64 -2147483648 to i8*)
  %77 = select i1 %76, i64 4294967295, i64 %75
  %78 = sub i64 %77, %74
  %79 = trunc i64 %78 to i32
  %80 = icmp slt i32 %79, %2
  %81 = select i1 %80, i32 %79, i32 %2
  br label %82

82:                                               ; preds = %67, %73
  %83 = phi i32 [ %81, %73 ], [ 0, %67 ]
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* %71, i64 %84
  call void @ucnv_fromUnicode_69(%struct.UConverter* nonnull %0, i8** nonnull %9, i8* %85, i16** nonnull %10, i16* %70, i32* null, i8 signext 1, i32* nonnull %5)
  %86 = bitcast i8** %9 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = ptrtoint i8* %59 to i64
  %89 = sub i64 %87, %88
  %90 = trunc i64 %89 to i32
  %91 = load i32, i32* %5, align 4
  %92 = icmp eq i32 %91, 15
  br i1 %92, label %93, label %106

93:                                               ; preds = %82
  %94 = getelementptr inbounds [1024 x i8], [1024 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %94) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %94, i8 -86, i64 1024, i1 false)
  %95 = getelementptr inbounds [1024 x i8], [1024 x i8]* %11, i64 0, i64 1024
  %96 = ptrtoint [1024 x i8]* %11 to i64
  br label %97

97:                                               ; preds = %97, %93
  %98 = phi i32 [ %90, %93 ], [ %102, %97 ]
  store i8* %94, i8** %9, align 8
  store i32 0, i32* %5, align 4
  call void @ucnv_fromUnicode_69(%struct.UConverter* %0, i8** nonnull %9, i8* %95, i16** nonnull %10, i16* %70, i32* null, i8 signext 1, i32* nonnull %5)
  %99 = load i64, i64* %86, align 8
  %100 = sub i64 %99, %96
  %101 = trunc i64 %100 to i32
  %102 = add nsw i32 %98, %101
  %103 = load i32, i32* %5, align 4
  %104 = icmp eq i32 %103, 15
  br i1 %104, label %97, label %105

105:                                              ; preds = %97
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %94) #10
  br label %106

106:                                              ; preds = %64, %82, %105
  %107 = phi i32 [ %83, %105 ], [ %83, %82 ], [ %2, %64 ]
  %108 = phi i32 [ %102, %105 ], [ %90, %82 ], [ 0, %64 ]
  %109 = call i32 @u_terminateChars_69(i8* %59, i32 %107, i32 %108, i32* nonnull %5) #10
  br label %110

110:                                              ; preds = %6, %13, %106, %30
  %111 = phi i32 [ 0, %30 ], [ %109, %106 ], [ 0, %13 ], [ 0, %6 ]
  ret i32 %111
}

declare i32 @ucnv_MBCSGetType_69(%struct.UConverter*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_reset_69(%struct.UConverter*) local_unnamed_addr #0 {
  tail call fastcc void @_ZL6_resetP10UConverter21UConverterResetChoicea(%struct.UConverter* %0, i32 0, i8 signext 1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL6_resetP10UConverter21UConverterResetChoicea(%struct.UConverter*, i32, i8 signext) unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.UConverterToUnicodeArgs, align 8
  %6 = alloca %struct.UConverterFromUnicodeArgs, align 8
  %7 = icmp eq %struct.UConverter* %0, null
  br i1 %7, label %66, label %8

8:                                                ; preds = %3
  %9 = icmp eq i8 %2, 0
  br i1 %9, label %38, label %10

10:                                               ; preds = %8
  %11 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #10
  store i32 -1431655766, i32* %4, align 4
  %12 = icmp slt i32 %1, 2
  br i1 %12, label %13, label %26

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 1
  %15 = load void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)*, void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)** %14, align 8
  %16 = icmp eq void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)* %15, @UCNV_TO_U_CALLBACK_SUBSTITUTE_69
  br i1 %16, label %24, label %17

17:                                               ; preds = %13
  %18 = bitcast %struct.UConverterToUnicodeArgs* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %18) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 56, i1 false)
  %19 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %5, i64 0, i32 0
  store i16 56, i16* %19, align 8
  %20 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %5, i64 0, i32 1
  store i8 1, i8* %20, align 2
  %21 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %5, i64 0, i32 2
  store %struct.UConverter* %0, %struct.UConverter** %21, align 8
  store i32 0, i32* %4, align 4
  %22 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 4
  %23 = load i8*, i8** %22, align 8
  call void %15(i8* %23, %struct.UConverterToUnicodeArgs* nonnull %5, i8* null, i32 0, i32 3, i32* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %18) #10
  br label %24

24:                                               ; preds = %13, %17
  %25 = icmp eq i32 %1, 1
  br i1 %25, label %37, label %26

26:                                               ; preds = %10, %24
  %27 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 0
  %28 = load void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)*, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** %27, align 8
  %29 = icmp eq void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)* %28, @UCNV_FROM_U_CALLBACK_SUBSTITUTE_69
  br i1 %29, label %37, label %30

30:                                               ; preds = %26
  %31 = bitcast %struct.UConverterFromUnicodeArgs* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %31) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 56, i1 false)
  %32 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %6, i64 0, i32 0
  store i16 56, i16* %32, align 8
  %33 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %6, i64 0, i32 1
  store i8 1, i8* %33, align 2
  %34 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %6, i64 0, i32 2
  store %struct.UConverter* %0, %struct.UConverter** %34, align 8
  store i32 0, i32* %4, align 4
  %35 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 3
  %36 = load i8*, i8** %35, align 8
  call void %28(i8* %36, %struct.UConverterFromUnicodeArgs* nonnull %6, i16* null, i32 0, i32 0, i32 3, i32* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %31) #10
  br label %37

37:                                               ; preds = %26, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #10
  br label %38

38:                                               ; preds = %8, %37
  %39 = icmp slt i32 %1, 2
  %40 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %41 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %40, align 8
  br i1 %39, label %42, label %52

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %41, i64 0, i32 7
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 14
  store i32 %44, i32* %45, align 8
  %46 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 15
  store i32 0, i32* %46, align 4
  %47 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 12
  store i8 0, i8* %47, align 8
  %48 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 23
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 20
  store i8 0, i8* %49, align 2
  %50 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 35
  store i8 0, i8* %50, align 2
  %51 = icmp eq i32 %1, 1
  br i1 %51, label %59, label %52

52:                                               ; preds = %38, %42
  %53 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 16
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 17
  store i32 0, i32* %54, align 4
  %55 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 21
  store i8 0, i8* %55, align 1
  %56 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 22
  store i8 0, i8* %56, align 4
  %57 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 31
  store i32 -1, i32* %57, align 8
  %58 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 34
  store i8 0, i8* %58, align 1
  br label %59

59:                                               ; preds = %42, %52
  %60 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %41, i64 0, i32 6
  %61 = load %struct.UConverterImpl*, %struct.UConverterImpl** %60, align 8
  %62 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %61, i64 0, i32 5
  %63 = load void (%struct.UConverter*, i32)*, void (%struct.UConverter*, i32)** %62, align 8
  %64 = icmp eq void (%struct.UConverter*, i32)* %63, null
  br i1 %64, label %66, label %65

65:                                               ; preds = %59
  call void %63(%struct.UConverter* nonnull %0, i32 %1) #10
  br label %66

66:                                               ; preds = %59, %3, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_resetToUnicode_69(%struct.UConverter*) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.UConverterToUnicodeArgs, align 8
  %4 = icmp eq %struct.UConverter* %0, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %1
  %6 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #10
  store i32 -1431655766, i32* %2, align 4
  %7 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 1
  %8 = load void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)*, void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)** %7, align 8
  %9 = icmp eq void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)* %8, @UCNV_TO_U_CALLBACK_SUBSTITUTE_69
  br i1 %9, label %17, label %10

10:                                               ; preds = %5
  %11 = bitcast %struct.UConverterToUnicodeArgs* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %11) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 56, i1 false) #10
  %12 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %3, i64 0, i32 0
  store i16 56, i16* %12, align 8
  %13 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %3, i64 0, i32 1
  store i8 1, i8* %13, align 2
  %14 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %3, i64 0, i32 2
  store %struct.UConverter* %0, %struct.UConverter** %14, align 8
  store i32 0, i32* %2, align 4
  %15 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 4
  %16 = load i8*, i8** %15, align 8
  call void %8(i8* %16, %struct.UConverterToUnicodeArgs* nonnull %3, i8* null, i32 0, i32 3, i32* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %11) #10
  br label %17

17:                                               ; preds = %10, %5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #10
  %18 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %19 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %18, align 8
  %20 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %19, i64 0, i32 7
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 14
  store i32 %21, i32* %22, align 8
  %23 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 15
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 12
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 23
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 20
  store i8 0, i8* %26, align 2
  %27 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 35
  store i8 0, i8* %27, align 2
  %28 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %19, i64 0, i32 6
  %29 = load %struct.UConverterImpl*, %struct.UConverterImpl** %28, align 8
  %30 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %29, i64 0, i32 5
  %31 = load void (%struct.UConverter*, i32)*, void (%struct.UConverter*, i32)** %30, align 8
  %32 = icmp eq void (%struct.UConverter*, i32)* %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %17
  call void %31(%struct.UConverter* nonnull %0, i32 1) #10
  br label %34

34:                                               ; preds = %1, %17, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_resetFromUnicode_69(%struct.UConverter*) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.UConverterFromUnicodeArgs, align 8
  %4 = icmp eq %struct.UConverter* %0, null
  br i1 %4, label %32, label %5

5:                                                ; preds = %1
  %6 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #10
  store i32 -1431655766, i32* %2, align 4
  %7 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 0
  %8 = load void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)*, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** %7, align 8
  %9 = icmp eq void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)* %8, @UCNV_FROM_U_CALLBACK_SUBSTITUTE_69
  br i1 %9, label %17, label %10

10:                                               ; preds = %5
  %11 = bitcast %struct.UConverterFromUnicodeArgs* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %11) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 56, i1 false) #10
  %12 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %3, i64 0, i32 0
  store i16 56, i16* %12, align 8
  %13 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %3, i64 0, i32 1
  store i8 1, i8* %13, align 2
  %14 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %3, i64 0, i32 2
  store %struct.UConverter* %0, %struct.UConverter** %14, align 8
  store i32 0, i32* %2, align 4
  %15 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 3
  %16 = load i8*, i8** %15, align 8
  call void %8(i8* %16, %struct.UConverterFromUnicodeArgs* nonnull %3, i16* null, i32 0, i32 0, i32 3, i32* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %11) #10
  br label %17

17:                                               ; preds = %10, %5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #10
  %18 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %19 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %18, align 8
  %20 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 16
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 17
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 21
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 22
  store i8 0, i8* %23, align 4
  %24 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 31
  store i32 -1, i32* %24, align 8
  %25 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 34
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %19, i64 0, i32 6
  %27 = load %struct.UConverterImpl*, %struct.UConverterImpl** %26, align 8
  %28 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %27, i64 0, i32 5
  %29 = load void (%struct.UConverter*, i32)*, void (%struct.UConverter*, i32)** %28, align 8
  %30 = icmp eq void (%struct.UConverter*, i32)* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %17
  call void %29(%struct.UConverter* nonnull %0, i32 2) #10
  br label %32

32:                                               ; preds = %1, %17, %31
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @ucnv_getMaxCharSize_69(%struct.UConverter* nocapture readonly) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 18
  %3 = load i8, i8* %2, align 8
  ret i8 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @ucnv_getMinCharSize_69(%struct.UConverter* nocapture readonly) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %3 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %2, align 8
  %4 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %3, i64 0, i32 3
  %5 = load %struct.UConverterStaticData*, %struct.UConverterStaticData** %4, align 8
  %6 = getelementptr inbounds %struct.UConverterStaticData, %struct.UConverterStaticData* %5, i64 0, i32 5
  %7 = load i8, i8* %6, align 2
  ret i8 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ucnv_getCCSID_69(%struct.UConverter*, i32*) local_unnamed_addr #0 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %43

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %7 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %6, align 8
  %8 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %7, i64 0, i32 3
  %9 = load %struct.UConverterStaticData*, %struct.UConverterStaticData** %8, align 8
  %10 = getelementptr inbounds %struct.UConverterStaticData, %struct.UConverterStaticData* %9, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %43

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %7, i64 0, i32 6
  %15 = load %struct.UConverterImpl*, %struct.UConverterImpl** %14, align 8
  %16 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %15, i64 0, i32 12
  %17 = load i8* (%struct.UConverter*)*, i8* (%struct.UConverter*)** %16, align 8
  %18 = icmp eq i8* (%struct.UConverter*)* %17, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = tail call i8* %17(%struct.UConverter* %0) #10
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %29

22:                                               ; preds = %19
  %23 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %6, align 8
  %24 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %23, i64 0, i32 3
  %25 = load %struct.UConverterStaticData*, %struct.UConverterStaticData** %24, align 8
  br label %26

26:                                               ; preds = %22, %13
  %27 = phi %struct.UConverterStaticData* [ %25, %22 ], [ %9, %13 ]
  %28 = getelementptr inbounds %struct.UConverterStaticData, %struct.UConverterStaticData* %27, i64 0, i32 1, i64 0
  br label %29

29:                                               ; preds = %19, %26
  %30 = phi i8* [ %28, %26 ], [ %20, %19 ]
  %31 = tail call i8* @ucnv_getStandardName_69(i8* %30, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32* %1) #10
  %32 = load i32, i32* %1, align 4
  %33 = icmp slt i32 %32, 1
  %34 = icmp ne i8* %31, null
  %35 = and i1 %34, %33
  br i1 %35, label %36, label %43

36:                                               ; preds = %29
  %37 = tail call i8* @strchr(i8* nonnull %31, i32 45) #12
  %38 = icmp eq i8* %37, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds i8, i8* %37, i64 1
  %41 = tail call i64 @strtol(i8* nocapture %40, i8** null, i32 10) #10
  %42 = trunc i64 %41 to i32
  br label %43

43:                                               ; preds = %5, %39, %36, %29, %2
  %44 = phi i32 [ -1, %2 ], [ %11, %5 ], [ 0, %29 ], [ %42, %39 ], [ 0, %36 ]
  ret i32 %44
}

declare i8* @ucnv_getStandardName_69(i8*, i8*, i32*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @ucnv_getPlatform_69(%struct.UConverter* nocapture readonly, i32* nocapture readonly) local_unnamed_addr #5 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %13

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %7 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %6, align 8
  %8 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %7, i64 0, i32 3
  %9 = load %struct.UConverterStaticData*, %struct.UConverterStaticData** %8, align 8
  %10 = getelementptr inbounds %struct.UConverterStaticData, %struct.UConverterStaticData* %9, i64 0, i32 3
  %11 = load i8, i8* %10, align 4
  %12 = sext i8 %11 to i32
  br label %13

13:                                               ; preds = %2, %5
  %14 = phi i32 [ %12, %5 ], [ -1, %2 ]
  ret i32 %14
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ucnv_getToUCallBack_69(%struct.UConverter* nocapture readonly, void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)** nocapture, i8** nocapture) local_unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 1
  %5 = bitcast void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)** %1 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 4
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast i8** %2 to i64*
  store i64 %10, i64* %11, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ucnv_getFromUCallBack_69(%struct.UConverter* nocapture readonly, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** nocapture, i8** nocapture) local_unnamed_addr #4 {
  %4 = bitcast %struct.UConverter* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** %1 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 3
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast i8** %2 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ucnv_setToUCallBack_69(%struct.UConverter* nocapture, void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)*, i8*, void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)**, i8**, i32* nocapture readonly) local_unnamed_addr #4 {
  %7 = load i32, i32* %5, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %26

9:                                                ; preds = %6
  %10 = icmp eq void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)** %3, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 1
  %13 = bitcast void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)** %3 to i64*
  store i64 %14, i64* %15, align 8
  br label %16

16:                                               ; preds = %9, %11
  %17 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 1
  store void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)* %1, void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)** %17, align 8
  %18 = icmp eq i8** %4, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 4
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast i8** %4 to i64*
  store i64 %22, i64* %23, align 8
  br label %24

24:                                               ; preds = %16, %19
  %25 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 4
  store i8* %2, i8** %25, align 8
  br label %26

26:                                               ; preds = %6, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_fromUnicode_69(%struct.UConverter*, i8**, i8*, i16**, i16*, i32*, i8 signext, i32*) local_unnamed_addr #0 {
  %9 = bitcast %struct.UConverter* %0 to i8*
  %10 = alloca %struct.UConverterFromUnicodeArgs, align 8
  %11 = ptrtoint i32* %5 to i64
  %12 = bitcast %struct.UConverterFromUnicodeArgs* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %12) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 56, i1 false)
  %13 = icmp eq i32* %7, null
  br i1 %13, label %235, label %14

14:                                               ; preds = %8
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %235

17:                                               ; preds = %14
  %18 = icmp eq %struct.UConverter* %0, null
  %19 = icmp eq i8** %1, null
  %20 = or i1 %18, %19
  %21 = icmp eq i16** %3, null
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %17
  store i32 1, i32* %7, align 4
  br label %235

24:                                               ; preds = %17
  %25 = load i16*, i16** %3, align 8
  %26 = load i8*, i8** %1, align 8
  %27 = ptrtoint i16* %4 to i64
  %28 = add i64 %27, 2147483647
  %29 = icmp ult i16* %4, inttoptr (i64 -2147483647 to i16*)
  %30 = inttoptr i64 %28 to i8*
  %31 = select i1 %29, i8* %30, i8* inttoptr (i64 -1 to i8*)
  %32 = bitcast i16* %4 to i8*
  %33 = icmp eq i8* %31, %32
  %34 = getelementptr inbounds i8, i8* %32, i64 -1
  %35 = bitcast i8* %34 to i16*
  %36 = select i1 %33, i16* %35, i16* %4
  %37 = icmp ult i16* %36, %25
  %38 = icmp ugt i8* %26, %2
  %39 = or i1 %37, %38
  %40 = ptrtoint i8* %26 to i64
  br i1 %39, label %58, label %41

41:                                               ; preds = %24
  %42 = ptrtoint i16* %36 to i64
  %43 = ptrtoint i16* %25 to i64
  %44 = sub i64 %42, %43
  %45 = ashr exact i64 %44, 1
  %46 = icmp ugt i64 %45, 1073741823
  %47 = icmp ugt i16* %36, %25
  %48 = and i1 %47, %46
  br i1 %48, label %58, label %49

49:                                               ; preds = %41
  %50 = ptrtoint i8* %2 to i64
  %51 = sub i64 %50, %40
  %52 = icmp ult i64 %51, 2147483648
  %53 = icmp uge i8* %26, %2
  %54 = or i1 %53, %52
  %55 = and i64 %44, 1
  %56 = icmp eq i64 %55, 0
  %57 = and i1 %56, %54
  br i1 %57, label %59, label %58

58:                                               ; preds = %49, %41, %24
  store i32 1, i32* %7, align 4
  br label %235

59:                                               ; preds = %49
  %60 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 21
  %61 = load i8, i8* %60, align 1
  %62 = icmp sgt i8 %61, 0
  br i1 %62, label %63, label %209

63:                                               ; preds = %59
  %64 = sext i8 %61 to i64
  %65 = and i64 %64, 4294967295
  br label %66

66:                                               ; preds = %201, %63
  %67 = phi i64 [ 0, %63 ], [ %194, %201 ]
  %68 = phi i8* [ %26, %63 ], [ %197, %201 ]
  %69 = phi i32* [ %5, %63 ], [ %202, %201 ]
  %70 = icmp eq i8* %68, %2
  br i1 %70, label %71, label %193

71:                                               ; preds = %66
  %72 = and i64 %67, 4294967295
  %73 = add nuw nsw i64 %72, 1
  %74 = icmp sgt i64 %73, %64
  %75 = select i1 %74, i64 %73, i64 %64
  %76 = sub nsw i64 %75, %72
  %77 = icmp ult i64 %76, 32
  br i1 %77, label %178, label %78

78:                                               ; preds = %71
  %79 = getelementptr %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 0
  %80 = add nuw nsw i64 %72, 1
  %81 = icmp sgt i64 %80, %64
  %82 = select i1 %81, i64 %80, i64 %64
  %83 = add nuw nsw i64 %82, 104
  %84 = sub nsw i64 %83, %72
  %85 = getelementptr i8, i8* %9, i64 %84
  %86 = add nuw nsw i64 %72, 104
  %87 = getelementptr i8, i8* %9, i64 %86
  %88 = add nuw nsw i64 %82, 104
  %89 = getelementptr i8, i8* %9, i64 %88
  %90 = icmp ult i8* %79, %89
  %91 = icmp ult i8* %87, %85
  %92 = and i1 %90, %91
  br i1 %92, label %178, label %93

93:                                               ; preds = %78
  %94 = and i64 %76, -32
  %95 = add nsw i64 %72, %94
  %96 = add nsw i64 %94, -32
  %97 = lshr exact i64 %96, 5
  %98 = add nuw nsw i64 %97, 1
  %99 = and i64 %98, 3
  %100 = icmp ult i64 %96, 96
  br i1 %100, label %156, label %101

101:                                              ; preds = %93
  %102 = sub nsw i64 %98, %99
  br label %103

103:                                              ; preds = %103, %101
  %104 = phi i64 [ 0, %101 ], [ %153, %103 ]
  %105 = phi i64 [ %102, %101 ], [ %154, %103 ]
  %106 = add i64 %72, %104
  %107 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %106
  %108 = bitcast i8* %107 to <16 x i8>*
  %109 = load <16 x i8>, <16 x i8>* %108, align 1, !alias.scope !2
  %110 = getelementptr inbounds i8, i8* %107, i64 16
  %111 = bitcast i8* %110 to <16 x i8>*
  %112 = load <16 x i8>, <16 x i8>* %111, align 1, !alias.scope !2
  %113 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %104
  %114 = bitcast i8* %113 to <16 x i8>*
  store <16 x i8> %109, <16 x i8>* %114, align 1, !alias.scope !5, !noalias !2
  %115 = getelementptr inbounds i8, i8* %113, i64 16
  %116 = bitcast i8* %115 to <16 x i8>*
  store <16 x i8> %112, <16 x i8>* %116, align 1, !alias.scope !5, !noalias !2
  %117 = or i64 %104, 32
  %118 = add i64 %72, %117
  %119 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %118
  %120 = bitcast i8* %119 to <16 x i8>*
  %121 = load <16 x i8>, <16 x i8>* %120, align 1, !alias.scope !2
  %122 = getelementptr inbounds i8, i8* %119, i64 16
  %123 = bitcast i8* %122 to <16 x i8>*
  %124 = load <16 x i8>, <16 x i8>* %123, align 1, !alias.scope !2
  %125 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %117
  %126 = bitcast i8* %125 to <16 x i8>*
  store <16 x i8> %121, <16 x i8>* %126, align 1, !alias.scope !5, !noalias !2
  %127 = getelementptr inbounds i8, i8* %125, i64 16
  %128 = bitcast i8* %127 to <16 x i8>*
  store <16 x i8> %124, <16 x i8>* %128, align 1, !alias.scope !5, !noalias !2
  %129 = or i64 %104, 64
  %130 = add i64 %72, %129
  %131 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %130
  %132 = bitcast i8* %131 to <16 x i8>*
  %133 = load <16 x i8>, <16 x i8>* %132, align 1, !alias.scope !2
  %134 = getelementptr inbounds i8, i8* %131, i64 16
  %135 = bitcast i8* %134 to <16 x i8>*
  %136 = load <16 x i8>, <16 x i8>* %135, align 1, !alias.scope !2
  %137 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %129
  %138 = bitcast i8* %137 to <16 x i8>*
  store <16 x i8> %133, <16 x i8>* %138, align 1, !alias.scope !5, !noalias !2
  %139 = getelementptr inbounds i8, i8* %137, i64 16
  %140 = bitcast i8* %139 to <16 x i8>*
  store <16 x i8> %136, <16 x i8>* %140, align 1, !alias.scope !5, !noalias !2
  %141 = or i64 %104, 96
  %142 = add i64 %72, %141
  %143 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %142
  %144 = bitcast i8* %143 to <16 x i8>*
  %145 = load <16 x i8>, <16 x i8>* %144, align 1, !alias.scope !2
  %146 = getelementptr inbounds i8, i8* %143, i64 16
  %147 = bitcast i8* %146 to <16 x i8>*
  %148 = load <16 x i8>, <16 x i8>* %147, align 1, !alias.scope !2
  %149 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %141
  %150 = bitcast i8* %149 to <16 x i8>*
  store <16 x i8> %145, <16 x i8>* %150, align 1, !alias.scope !5, !noalias !2
  %151 = getelementptr inbounds i8, i8* %149, i64 16
  %152 = bitcast i8* %151 to <16 x i8>*
  store <16 x i8> %148, <16 x i8>* %152, align 1, !alias.scope !5, !noalias !2
  %153 = add i64 %104, 128
  %154 = add i64 %105, -4
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %103, !llvm.loop !7

156:                                              ; preds = %103, %93
  %157 = phi i64 [ 0, %93 ], [ %153, %103 ]
  %158 = icmp eq i64 %99, 0
  br i1 %158, label %176, label %159

159:                                              ; preds = %156, %159
  %160 = phi i64 [ %173, %159 ], [ %157, %156 ]
  %161 = phi i64 [ %174, %159 ], [ %99, %156 ]
  %162 = add i64 %72, %160
  %163 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %162
  %164 = bitcast i8* %163 to <16 x i8>*
  %165 = load <16 x i8>, <16 x i8>* %164, align 1, !alias.scope !2
  %166 = getelementptr inbounds i8, i8* %163, i64 16
  %167 = bitcast i8* %166 to <16 x i8>*
  %168 = load <16 x i8>, <16 x i8>* %167, align 1, !alias.scope !2
  %169 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %160
  %170 = bitcast i8* %169 to <16 x i8>*
  store <16 x i8> %165, <16 x i8>* %170, align 1, !alias.scope !5, !noalias !2
  %171 = getelementptr inbounds i8, i8* %169, i64 16
  %172 = bitcast i8* %171 to <16 x i8>*
  store <16 x i8> %168, <16 x i8>* %172, align 1, !alias.scope !5, !noalias !2
  %173 = add i64 %160, 32
  %174 = add i64 %161, -1
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %159, !llvm.loop !9

176:                                              ; preds = %159, %156
  %177 = icmp eq i64 %76, %94
  br i1 %177, label %190, label %178

178:                                              ; preds = %176, %78, %71
  %179 = phi i64 [ 0, %78 ], [ 0, %71 ], [ %94, %176 ]
  %180 = phi i64 [ %72, %78 ], [ %72, %71 ], [ %95, %176 ]
  br label %181

181:                                              ; preds = %178, %181
  %182 = phi i64 [ %187, %181 ], [ %179, %178 ]
  %183 = phi i64 [ %184, %181 ], [ %180, %178 ]
  %184 = add nuw nsw i64 %183, 1
  %185 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %183
  %186 = load i8, i8* %185, align 1
  %187 = add nuw nsw i64 %182, 1
  %188 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %182
  store i8 %186, i8* %188, align 1
  %189 = icmp slt i64 %184, %64
  br i1 %189, label %181, label %190, !llvm.loop !11

190:                                              ; preds = %181, %176
  %191 = phi i64 [ %94, %176 ], [ %187, %181 ]
  %192 = trunc i64 %191 to i8
  store i8 %192, i8* %60, align 1
  store i8* %2, i8** %1, align 8
  store i32 15, i32* %7, align 4
  br label %235

193:                                              ; preds = %66
  %194 = add nuw nsw i64 %67, 1
  %195 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %67
  %196 = load i8, i8* %195, align 1
  %197 = getelementptr inbounds i8, i8* %68, i64 1
  store i8 %196, i8* %68, align 1
  %198 = icmp eq i32* %69, null
  br i1 %198, label %201, label %199

199:                                              ; preds = %193
  %200 = getelementptr inbounds i32, i32* %69, i64 1
  store i32 -1, i32* %69, align 4
  br label %201

201:                                              ; preds = %199, %193
  %202 = phi i32* [ %200, %199 ], [ null, %193 ]
  %203 = icmp eq i64 %194, %65
  br i1 %203, label %204, label %66

204:                                              ; preds = %201
  store i8 0, i8* %60, align 1
  store i8* %197, i8** %1, align 8
  %205 = icmp eq i32* %202, null
  %206 = ptrtoint i32* %202 to i64
  %207 = select i1 %205, i64 %11, i64 %206
  %208 = ptrtoint i8* %197 to i64
  br label %209

209:                                              ; preds = %204, %59
  %210 = phi i64 [ %40, %59 ], [ %208, %204 ]
  %211 = phi i64 [ %11, %59 ], [ %207, %204 ]
  %212 = icmp eq i8 %6, 0
  %213 = icmp eq i16* %25, %36
  %214 = and i1 %212, %213
  br i1 %214, label %215, label %219

215:                                              ; preds = %209
  %216 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 34
  %217 = load i8, i8* %216, align 1
  %218 = icmp sgt i8 %217, -1
  br i1 %218, label %235, label %219

219:                                              ; preds = %209, %215
  %220 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %10, i64 0, i32 2
  store %struct.UConverter* %0, %struct.UConverter** %220, align 8
  %221 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %10, i64 0, i32 1
  store i8 %6, i8* %221, align 2
  %222 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %10, i64 0, i32 7
  %223 = bitcast i32** %222 to i64*
  store i64 %211, i64* %223, align 8
  %224 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %10, i64 0, i32 3
  store i16* %25, i16** %224, align 8
  %225 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %10, i64 0, i32 4
  store i16* %36, i16** %225, align 8
  %226 = bitcast i8** %1 to i64*
  %227 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %10, i64 0, i32 5
  %228 = bitcast i8** %227 to i64*
  store i64 %210, i64* %228, align 8
  %229 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %10, i64 0, i32 6
  store i8* %2, i8** %229, align 8
  %230 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %10, i64 0, i32 0
  store i16 56, i16* %230, align 8
  call fastcc void @_ZL24_fromUnicodeWithCallbackP25UConverterFromUnicodeArgsP10UErrorCode(%struct.UConverterFromUnicodeArgs* nonnull %10, i32* nonnull %7)
  %231 = bitcast i16** %224 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = bitcast i16** %3 to i64*
  store i64 %232, i64* %233, align 8
  %234 = load i64, i64* %228, align 8
  store i64 %234, i64* %226, align 8
  br label %235

235:                                              ; preds = %190, %215, %8, %14, %219, %58, %23
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL24_fromUnicodeWithCallbackP25UConverterFromUnicodeArgsP10UErrorCode(%struct.UConverterFromUnicodeArgs*, i32*) unnamed_addr #0 {
  %3 = alloca [19 x i16], align 16
  %4 = bitcast [19 x i16]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 38, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 38, i1 false)
  %5 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 2
  %6 = load %struct.UConverter*, %struct.UConverter** %5, align 8
  %7 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 3
  %8 = load i16*, i16** %7, align 8
  %9 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 5
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 7
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %12, null
  %14 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 6
  %15 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %14, align 8
  %16 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %15, i64 0, i32 6
  %17 = load %struct.UConverterImpl*, %struct.UConverterImpl** %16, align 8
  br i1 %13, label %22, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %17, i64 0, i32 9
  %20 = load void (%struct.UConverterFromUnicodeArgs*, i32*)*, void (%struct.UConverterFromUnicodeArgs*, i32*)** %19, align 8
  %21 = icmp eq void (%struct.UConverterFromUnicodeArgs*, i32*)* %20, null
  br i1 %21, label %22, label %26

22:                                               ; preds = %18, %2
  %23 = phi i32 [ 0, %2 ], [ -1, %18 ]
  %24 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %17, i64 0, i32 8
  %25 = load void (%struct.UConverterFromUnicodeArgs*, i32*)*, void (%struct.UConverterFromUnicodeArgs*, i32*)** %24, align 8
  br label %26

26:                                               ; preds = %22, %18
  %27 = phi void (%struct.UConverterFromUnicodeArgs*, i32*)* [ %20, %18 ], [ %25, %22 ]
  %28 = phi i32 [ 0, %18 ], [ %23, %22 ]
  %29 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 34
  %30 = load i8, i8* %29, align 1
  %31 = icmp sgt i8 %30, -1
  br i1 %31, label %48, label %32

32:                                               ; preds = %26
  %33 = sext i8 %30 to i32
  %34 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 4
  %35 = load i16*, i16** %34, align 8
  %36 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 1
  %37 = load i8, i8* %36, align 2
  %38 = getelementptr inbounds [19 x i16], [19 x i16]* %3, i64 0, i64 0
  %39 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 32, i64 0
  %40 = bitcast i16* %39 to i8*
  %41 = shl nsw i32 %33, 1
  %42 = sub nsw i32 0, %41
  %43 = sext i32 %42 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %4, i8* align 4 %40, i64 %43, i1 false)
  store i16* %38, i16** %7, align 8
  %44 = load i8, i8* %29, align 1
  %45 = sext i8 %44 to i64
  %46 = sub nsw i64 0, %45
  %47 = getelementptr inbounds [19 x i16], [19 x i16]* %3, i64 0, i64 %46
  store i16* %47, i16** %34, align 8
  store i8 0, i8* %36, align 2
  store i8 0, i8* %29, align 1
  br label %48

48:                                               ; preds = %26, %32
  %49 = phi i32 [ -1, %32 ], [ %28, %26 ]
  %50 = phi i16* [ %8, %32 ], [ null, %26 ]
  %51 = phi i16* [ %35, %32 ], [ null, %26 ]
  %52 = phi i32 [ %28, %32 ], [ 0, %26 ]
  %53 = phi i8 [ %37, %32 ], [ 0, %26 ]
  %54 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 1
  %55 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 4
  %56 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 17
  %57 = bitcast i8** %9 to i64*
  %58 = bitcast i16** %7 to i64*
  %59 = getelementptr inbounds [19 x i16], [19 x i16]* %3, i64 0, i64 0
  %60 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 32, i64 0
  %61 = bitcast i16* %60 to i8*
  %62 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 29, i64 0
  %63 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 29, i64 1
  %64 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 22
  %65 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 0
  %66 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 3
  br label %67

67:                                               ; preds = %287, %48
  %68 = phi i16* [ %8, %48 ], [ %268, %287 ]
  %69 = phi i8* [ %10, %48 ], [ %269, %287 ]
  %70 = phi i32* [ %12, %48 ], [ %238, %287 ]
  %71 = phi i32 [ %49, %48 ], [ %288, %287 ]
  %72 = phi i16* [ %50, %48 ], [ %289, %287 ]
  %73 = phi i16* [ %51, %48 ], [ %265, %287 ]
  %74 = phi i32 [ %52, %48 ], [ %266, %287 ]
  %75 = phi i8 [ %53, %48 ], [ %267, %287 ]
  %76 = load i32, i32* %1, align 4
  %77 = icmp sgt i32 %76, 0
  br i1 %77, label %94, label %78

78:                                               ; preds = %67
  call void %27(%struct.UConverterFromUnicodeArgs* %0, i32* %1) #10
  %79 = load i32, i32* %1, align 4
  %80 = icmp sgt i32 %79, 0
  br i1 %80, label %91, label %81

81:                                               ; preds = %78
  %82 = load i8, i8* %54, align 2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %91, label %84

84:                                               ; preds = %81
  %85 = load i16*, i16** %7, align 8
  %86 = load i16*, i16** %55, align 8
  %87 = icmp eq i16* %85, %86
  br i1 %87, label %88, label %91

88:                                               ; preds = %84
  %89 = load i32, i32* %56, align 4
  %90 = icmp eq i32 %89, 0
  br label %91

91:                                               ; preds = %81, %78, %88, %84
  %92 = phi i1 [ false, %84 ], [ false, %81 ], [ false, %78 ], [ %90, %88 ]
  %93 = zext i1 %92 to i8
  br label %94

94:                                               ; preds = %67, %91
  %95 = phi i8 [ %93, %91 ], [ 0, %67 ]
  br label %96

96:                                               ; preds = %336, %94
  %97 = phi i16* [ %68, %94 ], [ %268, %336 ]
  %98 = phi i8* [ %69, %94 ], [ %269, %336 ]
  %99 = phi i32* [ %70, %94 ], [ %238, %336 ]
  %100 = phi i32 [ %71, %94 ], [ %263, %336 ]
  %101 = phi i32 [ 0, %94 ], [ %337, %336 ]
  %102 = phi i8 [ 0, %94 ], [ 1, %336 ]
  %103 = phi i16* [ %72, %94 ], [ %264, %336 ]
  %104 = phi i16* [ %73, %94 ], [ %265, %336 ]
  %105 = phi i32 [ %74, %94 ], [ %266, %336 ]
  %106 = phi i8 [ %75, %94 ], [ %267, %336 ]
  %107 = ptrtoint i32* %99 to i64
  %108 = icmp eq i32* %99, null
  br i1 %108, label %237, label %109

109:                                              ; preds = %96
  %110 = load i64, i64* %57, align 8
  %111 = ptrtoint i8* %98 to i64
  %112 = sub i64 %110, %111
  %113 = trunc i64 %112 to i32
  %114 = icmp sgt i32 %113, 0
  br i1 %114, label %115, label %227

115:                                              ; preds = %109
  %116 = bitcast i32* %99 to i8*
  %117 = icmp sgt i32 %100, -1
  %118 = sub nsw i32 %100, %101
  %119 = select i1 %117, i32 %118, i32 -1
  %120 = shl i64 %112, 32
  %121 = ashr exact i64 %120, 32
  %122 = getelementptr inbounds i32, i32* %99, i64 %121
  %123 = icmp eq i32 %119, 0
  br i1 %123, label %226, label %124

124:                                              ; preds = %115
  %125 = icmp sgt i32 %119, 0
  %126 = getelementptr i32, i32* %99, i64 1
  %127 = icmp ugt i32* %122, %126
  %128 = select i1 %127, i32* %122, i32* %126
  %129 = bitcast i32* %128 to i8*
  br i1 %125, label %130, label %211

130:                                              ; preds = %124
  %131 = getelementptr i8, i8* %129, i64 -1
  %132 = sub i64 0, %107
  %133 = getelementptr i8, i8* %131, i64 %132
  %134 = ptrtoint i8* %133 to i64
  %135 = lshr i64 %134, 2
  %136 = add nuw nsw i64 %135, 1
  %137 = icmp ult i64 %136, 8
  br i1 %137, label %138, label %140

138:                                              ; preds = %209, %130
  %139 = phi i32* [ %99, %130 ], [ %142, %209 ]
  br label %217

140:                                              ; preds = %130
  %141 = and i64 %136, 9223372036854775800
  %142 = getelementptr i32, i32* %99, i64 %141
  br label %143

143:                                              ; preds = %206, %140
  %144 = phi i64 [ 0, %140 ], [ %207, %206 ]
  %145 = getelementptr i32, i32* %99, i64 %144
  %146 = bitcast i32* %145 to <4 x i32>*
  %147 = load <4 x i32>, <4 x i32>* %146, align 4
  %148 = getelementptr i32, i32* %145, i64 4
  %149 = bitcast i32* %148 to <4 x i32>*
  %150 = load <4 x i32>, <4 x i32>* %149, align 4
  %151 = icmp sgt <4 x i32> %147, <i32 -1, i32 -1, i32 -1, i32 -1>
  %152 = icmp sgt <4 x i32> %150, <i32 -1, i32 -1, i32 -1, i32 -1>
  %153 = extractelement <4 x i1> %151, i32 0
  br i1 %153, label %154, label %157

154:                                              ; preds = %143
  %155 = extractelement <4 x i32> %147, i32 0
  %156 = add nsw i32 %155, %119
  store i32 %156, i32* %145, align 4
  br label %157

157:                                              ; preds = %154, %143
  %158 = extractelement <4 x i1> %151, i32 1
  br i1 %158, label %159, label %164

159:                                              ; preds = %157
  %160 = extractelement <4 x i32> %147, i32 1
  %161 = add nsw i32 %160, %119
  %162 = or i64 %144, 1
  %163 = getelementptr i32, i32* %99, i64 %162
  store i32 %161, i32* %163, align 4
  br label %164

164:                                              ; preds = %159, %157
  %165 = extractelement <4 x i1> %151, i32 2
  br i1 %165, label %166, label %171

166:                                              ; preds = %164
  %167 = extractelement <4 x i32> %147, i32 2
  %168 = add nsw i32 %167, %119
  %169 = or i64 %144, 2
  %170 = getelementptr i32, i32* %99, i64 %169
  store i32 %168, i32* %170, align 4
  br label %171

171:                                              ; preds = %166, %164
  %172 = extractelement <4 x i1> %151, i32 3
  br i1 %172, label %173, label %178

173:                                              ; preds = %171
  %174 = extractelement <4 x i32> %147, i32 3
  %175 = add nsw i32 %174, %119
  %176 = or i64 %144, 3
  %177 = getelementptr i32, i32* %99, i64 %176
  store i32 %175, i32* %177, align 4
  br label %178

178:                                              ; preds = %173, %171
  %179 = extractelement <4 x i1> %152, i32 0
  br i1 %179, label %180, label %185

180:                                              ; preds = %178
  %181 = extractelement <4 x i32> %150, i32 0
  %182 = add nsw i32 %181, %119
  %183 = or i64 %144, 4
  %184 = getelementptr i32, i32* %99, i64 %183
  store i32 %182, i32* %184, align 4
  br label %185

185:                                              ; preds = %180, %178
  %186 = extractelement <4 x i1> %152, i32 1
  br i1 %186, label %187, label %192

187:                                              ; preds = %185
  %188 = extractelement <4 x i32> %150, i32 1
  %189 = add nsw i32 %188, %119
  %190 = or i64 %144, 5
  %191 = getelementptr i32, i32* %99, i64 %190
  store i32 %189, i32* %191, align 4
  br label %192

192:                                              ; preds = %187, %185
  %193 = extractelement <4 x i1> %152, i32 2
  br i1 %193, label %194, label %199

194:                                              ; preds = %192
  %195 = extractelement <4 x i32> %150, i32 2
  %196 = add nsw i32 %195, %119
  %197 = or i64 %144, 6
  %198 = getelementptr i32, i32* %99, i64 %197
  store i32 %196, i32* %198, align 4
  br label %199

199:                                              ; preds = %194, %192
  %200 = extractelement <4 x i1> %152, i32 3
  br i1 %200, label %201, label %206

201:                                              ; preds = %199
  %202 = extractelement <4 x i32> %150, i32 3
  %203 = add nsw i32 %202, %119
  %204 = or i64 %144, 7
  %205 = getelementptr i32, i32* %99, i64 %204
  store i32 %203, i32* %205, align 4
  br label %206

206:                                              ; preds = %201, %199
  %207 = add i64 %144, 8
  %208 = icmp eq i64 %207, %141
  br i1 %208, label %209, label %143, !llvm.loop !12

209:                                              ; preds = %206
  %210 = icmp eq i64 %136, %141
  br i1 %210, label %226, label %138

211:                                              ; preds = %124
  %212 = xor i64 %107, -1
  %213 = getelementptr i8, i8* %129, i64 %212
  %214 = ptrtoint i8* %213 to i64
  %215 = add i64 %214, 4
  %216 = and i64 %215, -4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %116, i8 -1, i64 %216, i1 false) #10
  br label %226

217:                                              ; preds = %138, %223
  %218 = phi i32* [ %224, %223 ], [ %139, %138 ]
  %219 = load i32, i32* %218, align 4
  %220 = icmp sgt i32 %219, -1
  br i1 %220, label %221, label %223

221:                                              ; preds = %217
  %222 = add nsw i32 %219, %119
  store i32 %222, i32* %218, align 4
  br label %223

223:                                              ; preds = %221, %217
  %224 = getelementptr inbounds i32, i32* %218, i64 1
  %225 = icmp ult i32* %224, %122
  br i1 %225, label %217, label %226, !llvm.loop !13

226:                                              ; preds = %223, %209, %115, %211
  store i32* %122, i32** %11, align 8
  br label %227

227:                                              ; preds = %226, %109
  %228 = phi i32* [ %122, %226 ], [ %99, %109 ]
  %229 = icmp sgt i32 %100, -1
  br i1 %229, label %230, label %237

230:                                              ; preds = %227
  %231 = load i64, i64* %58, align 8
  %232 = ptrtoint i16* %97 to i64
  %233 = sub i64 %231, %232
  %234 = lshr exact i64 %233, 1
  %235 = trunc i64 %234 to i32
  %236 = add nsw i32 %100, %235
  br label %237

237:                                              ; preds = %227, %230, %96
  %238 = phi i32* [ null, %96 ], [ %228, %230 ], [ %228, %227 ]
  %239 = phi i32 [ %100, %96 ], [ %236, %230 ], [ %100, %227 ]
  %240 = load i8, i8* %29, align 1
  %241 = sext i8 %240 to i32
  %242 = icmp slt i8 %240, 0
  br i1 %242, label %243, label %262

243:                                              ; preds = %237
  %244 = icmp eq i16* %103, null
  br i1 %244, label %245, label %261

245:                                              ; preds = %243
  %246 = load i16*, i16** %7, align 8
  %247 = load i16*, i16** %55, align 8
  %248 = load i8, i8* %54, align 2
  %249 = shl nsw i32 %241, 1
  %250 = sub nsw i32 0, %249
  %251 = sext i32 %250 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %4, i8* align 4 %61, i64 %251, i1 false)
  store i16* %59, i16** %7, align 8
  %252 = load i8, i8* %29, align 1
  %253 = sext i8 %252 to i64
  %254 = sub nsw i64 0, %253
  %255 = getelementptr inbounds [19 x i16], [19 x i16]* %3, i64 0, i64 %254
  store i16* %255, i16** %55, align 8
  store i8 0, i8* %54, align 2
  %256 = load i8, i8* %29, align 1
  %257 = sext i8 %256 to i32
  %258 = add nsw i32 %239, %257
  %259 = icmp sgt i32 %258, -1
  %260 = select i1 %259, i32 %258, i32 -1
  store i8 0, i8* %29, align 1
  br label %262

261:                                              ; preds = %243
  store i32 5, i32* %1, align 4
  br label %262

262:                                              ; preds = %245, %261, %237
  %263 = phi i32 [ %260, %245 ], [ %239, %261 ], [ %239, %237 ]
  %264 = phi i16* [ %246, %245 ], [ %103, %261 ], [ %103, %237 ]
  %265 = phi i16* [ %247, %245 ], [ %104, %261 ], [ %104, %237 ]
  %266 = phi i32 [ %239, %245 ], [ %105, %261 ], [ %105, %237 ]
  %267 = phi i8 [ %248, %245 ], [ %106, %261 ], [ %106, %237 ]
  %268 = load i16*, i16** %7, align 8
  %269 = load i8*, i8** %9, align 8
  %270 = load i32, i32* %1, align 4
  %271 = icmp sgt i32 %270, 0
  br i1 %271, label %303, label %272

272:                                              ; preds = %262
  %273 = load i16*, i16** %55, align 8
  %274 = icmp ult i16* %268, %273
  br i1 %274, label %287, label %275

275:                                              ; preds = %272
  %276 = icmp eq i16* %264, null
  br i1 %276, label %278, label %277

277:                                              ; preds = %275
  store i16* %264, i16** %7, align 8
  store i16* %265, i16** %55, align 8
  store i8 %267, i8* %54, align 2
  br label %287

278:                                              ; preds = %275
  %279 = load i8, i8* %54, align 2
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %344, label %281

281:                                              ; preds = %278
  %282 = load i32, i32* %56, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %285, label %284

284:                                              ; preds = %281
  store i32 11, i32* %1, align 4
  br label %324

285:                                              ; preds = %281
  %286 = icmp eq i8 %95, 0
  br i1 %286, label %287, label %290

287:                                              ; preds = %272, %285, %277
  %288 = phi i32 [ %263, %285 ], [ %266, %277 ], [ %263, %272 ]
  %289 = phi i16* [ null, %285 ], [ null, %277 ], [ %264, %272 ]
  br label %67

290:                                              ; preds = %285
  %291 = icmp eq %struct.UConverter* %6, null
  br i1 %291, label %344, label %292

292:                                              ; preds = %290
  %293 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %14, align 8
  %294 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 16
  store i32 0, i32* %294, align 8
  store i32 0, i32* %56, align 4
  %295 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 21
  store i8 0, i8* %295, align 1
  store i8 0, i8* %64, align 4
  %296 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 31
  store i32 -1, i32* %296, align 8
  store i8 0, i8* %29, align 1
  %297 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %293, i64 0, i32 6
  %298 = load %struct.UConverterImpl*, %struct.UConverterImpl** %297, align 8
  %299 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %298, i64 0, i32 5
  %300 = load void (%struct.UConverter*, i32)*, void (%struct.UConverter*, i32)** %299, align 8
  %301 = icmp eq void (%struct.UConverter*, i32)* %300, null
  br i1 %301, label %344, label %302

302:                                              ; preds = %292
  call void %300(%struct.UConverter* nonnull %6, i32 2) #10
  br label %344

303:                                              ; preds = %262
  %304 = icmp eq i8 %102, 0
  %305 = add nsw i32 %270, -10
  %306 = icmp ult i32 %305, 3
  %307 = and i1 %304, %306
  br i1 %307, label %324, label %308

308:                                              ; preds = %303
  %309 = icmp eq i16* %264, null
  br i1 %309, label %344, label %310

310:                                              ; preds = %308
  %311 = bitcast i16** %55 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = load i16*, i16** %7, align 8
  %314 = ptrtoint i16* %313 to i64
  %315 = sub i64 %312, %314
  %316 = lshr exact i64 %315, 1
  %317 = trunc i64 %316 to i32
  %318 = icmp sgt i32 %317, 0
  br i1 %318, label %319, label %323

319:                                              ; preds = %310
  %320 = call i16* @u_memcpy_69(i16* %60, i16* %313, i32 %317) #10
  %321 = trunc i64 %316 to i8
  %322 = sub i8 0, %321
  store i8 %322, i8* %29, align 1
  br label %323

323:                                              ; preds = %319, %310
  store i16* %264, i16** %7, align 8
  store i16* %265, i16** %55, align 8
  store i8 %267, i8* %54, align 2
  br label %344

324:                                              ; preds = %303, %284
  %325 = load i32, i32* %56, align 4
  %326 = icmp ult i32 %325, 65536
  br i1 %326, label %327, label %329

327:                                              ; preds = %324
  %328 = trunc i32 %325 to i16
  store i16 %328, i16* %62, align 2
  br label %336

329:                                              ; preds = %324
  %330 = lshr i32 %325, 10
  %331 = trunc i32 %330 to i16
  %332 = add i16 %331, -10304
  store i16 %332, i16* %62, align 2
  %333 = trunc i32 %325 to i16
  %334 = and i16 %333, 1023
  %335 = or i16 %334, -9216
  store i16 %335, i16* %63, align 2
  br label %336

336:                                              ; preds = %329, %327
  %337 = phi i32 [ 1, %327 ], [ 2, %329 ]
  %338 = trunc i32 %337 to i8
  store i8 %338, i8* %64, align 4
  store i32 0, i32* %56, align 4
  %339 = load void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)*, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** %65, align 8
  %340 = load i8*, i8** %66, align 8
  %341 = load i32, i32* %1, align 4
  %342 = icmp ne i32 %341, 10
  %343 = zext i1 %342 to i32
  call void %339(i8* %340, %struct.UConverterFromUnicodeArgs* %0, i16* %62, i32 %337, i32 %325, i32 %343, i32* %1) #10
  br label %96

344:                                              ; preds = %278, %302, %292, %290, %308, %323
  call void @llvm.lifetime.end.p0i8(i64 38, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_toUnicode_69(%struct.UConverter*, i16**, i16*, i8**, i8*, i32*, i8 signext, i32*) local_unnamed_addr #0 {
  %9 = bitcast %struct.UConverter* %0 to i8*
  %10 = alloca %struct.UConverterToUnicodeArgs, align 8
  %11 = ptrtoint i32* %5 to i64
  %12 = bitcast %struct.UConverterToUnicodeArgs* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %12) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 56, i1 false)
  %13 = icmp eq i32* %7, null
  br i1 %13, label %238, label %14

14:                                               ; preds = %8
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %238

17:                                               ; preds = %14
  %18 = icmp eq %struct.UConverter* %0, null
  %19 = icmp eq i16** %1, null
  %20 = or i1 %18, %19
  %21 = icmp eq i8** %3, null
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %17
  store i32 1, i32* %7, align 4
  br label %238

24:                                               ; preds = %17
  %25 = load i8*, i8** %3, align 8
  %26 = load i16*, i16** %1, align 8
  %27 = ptrtoint i16* %2 to i64
  %28 = add i64 %27, 2147483647
  %29 = icmp ult i16* %2, inttoptr (i64 -2147483647 to i16*)
  %30 = inttoptr i64 %28 to i8*
  %31 = select i1 %29, i8* %30, i8* inttoptr (i64 -1 to i8*)
  %32 = bitcast i16* %2 to i8*
  %33 = icmp eq i8* %31, %32
  %34 = getelementptr inbounds i8, i8* %32, i64 -1
  %35 = bitcast i8* %34 to i16*
  %36 = select i1 %33, i16* %35, i16* %2
  %37 = icmp ugt i8* %25, %4
  %38 = icmp ult i16* %36, %26
  %39 = or i1 %37, %38
  %40 = ptrtoint i16* %26 to i64
  br i1 %39, label %58, label %41

41:                                               ; preds = %24
  %42 = ptrtoint i8* %4 to i64
  %43 = ptrtoint i8* %25 to i64
  %44 = sub i64 %42, %43
  %45 = icmp ugt i64 %44, 2147483647
  %46 = icmp ult i8* %25, %4
  %47 = and i1 %46, %45
  br i1 %47, label %58, label %48

48:                                               ; preds = %41
  %49 = ptrtoint i16* %36 to i64
  %50 = sub i64 %49, %40
  %51 = ashr exact i64 %50, 1
  %52 = icmp ult i64 %51, 1073741824
  %53 = icmp ule i16* %36, %26
  %54 = or i1 %53, %52
  %55 = and i64 %50, 1
  %56 = icmp eq i64 %55, 0
  %57 = and i1 %56, %54
  br i1 %57, label %59, label %58

58:                                               ; preds = %48, %41, %24
  store i32 1, i32* %7, align 4
  br label %238

59:                                               ; preds = %48
  %60 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 23
  %61 = load i8, i8* %60, align 1
  %62 = icmp sgt i8 %61, 0
  br i1 %62, label %63, label %212

63:                                               ; preds = %59
  %64 = sext i8 %61 to i64
  %65 = and i64 %64, 4294967295
  br label %66

66:                                               ; preds = %204, %63
  %67 = phi i64 [ 0, %63 ], [ %197, %204 ]
  %68 = phi i16* [ %26, %63 ], [ %200, %204 ]
  %69 = phi i32* [ %5, %63 ], [ %205, %204 ]
  %70 = icmp eq i16* %68, %36
  br i1 %70, label %71, label %196

71:                                               ; preds = %66
  %72 = and i64 %67, 4294967295
  %73 = add nuw nsw i64 %72, 1
  %74 = icmp sgt i64 %73, %64
  %75 = select i1 %74, i64 %73, i64 %64
  %76 = sub nsw i64 %75, %72
  %77 = icmp ult i64 %76, 16
  br i1 %77, label %181, label %78

78:                                               ; preds = %71
  %79 = getelementptr %struct.UConverter, %struct.UConverter* %0, i64 0, i32 30, i64 0
  %80 = bitcast i16* %79 to i8*
  %81 = add nuw nsw i64 %72, 1
  %82 = icmp sgt i64 %81, %64
  %83 = select i1 %82, i64 %81, i64 %64
  %84 = shl nuw nsw i64 %83, 1
  %85 = add nuw nsw i64 %84, 144
  %86 = shl nuw nsw i64 %72, 1
  %87 = sub nsw i64 %85, %86
  %88 = getelementptr i8, i8* %9, i64 %87
  %89 = add nuw nsw i64 %86, 144
  %90 = getelementptr i8, i8* %9, i64 %89
  %91 = add nuw nsw i64 %84, 144
  %92 = getelementptr i8, i8* %9, i64 %91
  %93 = icmp ugt i8* %92, %80
  %94 = icmp ult i8* %90, %88
  %95 = and i1 %93, %94
  br i1 %95, label %181, label %96

96:                                               ; preds = %78
  %97 = and i64 %76, -16
  %98 = add nsw i64 %72, %97
  %99 = add nsw i64 %97, -16
  %100 = lshr exact i64 %99, 4
  %101 = add nuw nsw i64 %100, 1
  %102 = and i64 %101, 3
  %103 = icmp ult i64 %99, 48
  br i1 %103, label %159, label %104

104:                                              ; preds = %96
  %105 = sub nsw i64 %101, %102
  br label %106

106:                                              ; preds = %106, %104
  %107 = phi i64 [ 0, %104 ], [ %156, %106 ]
  %108 = phi i64 [ %105, %104 ], [ %157, %106 ]
  %109 = add i64 %72, %107
  %110 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 30, i64 %109
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !15
  %113 = getelementptr inbounds i16, i16* %110, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !15
  %116 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 30, i64 %107
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %117, align 2, !alias.scope !18, !noalias !15
  %118 = getelementptr inbounds i16, i16* %116, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %119, align 2, !alias.scope !18, !noalias !15
  %120 = or i64 %107, 16
  %121 = add i64 %72, %120
  %122 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 30, i64 %121
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !15
  %125 = getelementptr inbounds i16, i16* %122, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !15
  %128 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 30, i64 %120
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %129, align 2, !alias.scope !18, !noalias !15
  %130 = getelementptr inbounds i16, i16* %128, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %131, align 2, !alias.scope !18, !noalias !15
  %132 = or i64 %107, 32
  %133 = add i64 %72, %132
  %134 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 30, i64 %133
  %135 = bitcast i16* %134 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !15
  %137 = getelementptr inbounds i16, i16* %134, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2, !alias.scope !15
  %140 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 30, i64 %132
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %141, align 2, !alias.scope !18, !noalias !15
  %142 = getelementptr inbounds i16, i16* %140, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  store <8 x i16> %139, <8 x i16>* %143, align 2, !alias.scope !18, !noalias !15
  %144 = or i64 %107, 48
  %145 = add i64 %72, %144
  %146 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 30, i64 %145
  %147 = bitcast i16* %146 to <8 x i16>*
  %148 = load <8 x i16>, <8 x i16>* %147, align 2, !alias.scope !15
  %149 = getelementptr inbounds i16, i16* %146, i64 8
  %150 = bitcast i16* %149 to <8 x i16>*
  %151 = load <8 x i16>, <8 x i16>* %150, align 2, !alias.scope !15
  %152 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 30, i64 %144
  %153 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %148, <8 x i16>* %153, align 2, !alias.scope !18, !noalias !15
  %154 = getelementptr inbounds i16, i16* %152, i64 8
  %155 = bitcast i16* %154 to <8 x i16>*
  store <8 x i16> %151, <8 x i16>* %155, align 2, !alias.scope !18, !noalias !15
  %156 = add i64 %107, 64
  %157 = add i64 %108, -4
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %106, !llvm.loop !20

159:                                              ; preds = %106, %96
  %160 = phi i64 [ 0, %96 ], [ %156, %106 ]
  %161 = icmp eq i64 %102, 0
  br i1 %161, label %179, label %162

162:                                              ; preds = %159, %162
  %163 = phi i64 [ %176, %162 ], [ %160, %159 ]
  %164 = phi i64 [ %177, %162 ], [ %102, %159 ]
  %165 = add i64 %72, %163
  %166 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 30, i64 %165
  %167 = bitcast i16* %166 to <8 x i16>*
  %168 = load <8 x i16>, <8 x i16>* %167, align 2, !alias.scope !15
  %169 = getelementptr inbounds i16, i16* %166, i64 8
  %170 = bitcast i16* %169 to <8 x i16>*
  %171 = load <8 x i16>, <8 x i16>* %170, align 2, !alias.scope !15
  %172 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 30, i64 %163
  %173 = bitcast i16* %172 to <8 x i16>*
  store <8 x i16> %168, <8 x i16>* %173, align 2, !alias.scope !18, !noalias !15
  %174 = getelementptr inbounds i16, i16* %172, i64 8
  %175 = bitcast i16* %174 to <8 x i16>*
  store <8 x i16> %171, <8 x i16>* %175, align 2, !alias.scope !18, !noalias !15
  %176 = add i64 %163, 16
  %177 = add i64 %164, -1
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %162, !llvm.loop !21

179:                                              ; preds = %162, %159
  %180 = icmp eq i64 %76, %97
  br i1 %180, label %193, label %181

181:                                              ; preds = %179, %78, %71
  %182 = phi i64 [ 0, %78 ], [ 0, %71 ], [ %97, %179 ]
  %183 = phi i64 [ %72, %78 ], [ %72, %71 ], [ %98, %179 ]
  br label %184

184:                                              ; preds = %181, %184
  %185 = phi i64 [ %190, %184 ], [ %182, %181 ]
  %186 = phi i64 [ %187, %184 ], [ %183, %181 ]
  %187 = add nuw nsw i64 %186, 1
  %188 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 30, i64 %186
  %189 = load i16, i16* %188, align 2
  %190 = add nuw nsw i64 %185, 1
  %191 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 30, i64 %185
  store i16 %189, i16* %191, align 2
  %192 = icmp slt i64 %187, %64
  br i1 %192, label %184, label %193, !llvm.loop !22

193:                                              ; preds = %184, %179
  %194 = phi i64 [ %97, %179 ], [ %190, %184 ]
  %195 = trunc i64 %194 to i8
  store i8 %195, i8* %60, align 1
  store i16* %36, i16** %1, align 8
  store i32 15, i32* %7, align 4
  br label %238

196:                                              ; preds = %66
  %197 = add nuw nsw i64 %67, 1
  %198 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 30, i64 %67
  %199 = load i16, i16* %198, align 2
  %200 = getelementptr inbounds i16, i16* %68, i64 1
  store i16 %199, i16* %68, align 2
  %201 = icmp eq i32* %69, null
  br i1 %201, label %204, label %202

202:                                              ; preds = %196
  %203 = getelementptr inbounds i32, i32* %69, i64 1
  store i32 -1, i32* %69, align 4
  br label %204

204:                                              ; preds = %202, %196
  %205 = phi i32* [ %203, %202 ], [ null, %196 ]
  %206 = icmp eq i64 %197, %65
  br i1 %206, label %207, label %66

207:                                              ; preds = %204
  store i8 0, i8* %60, align 1
  store i16* %200, i16** %1, align 8
  %208 = icmp eq i32* %205, null
  %209 = ptrtoint i32* %205 to i64
  %210 = select i1 %208, i64 %11, i64 %209
  %211 = ptrtoint i16* %200 to i64
  br label %212

212:                                              ; preds = %207, %59
  %213 = phi i64 [ %40, %59 ], [ %211, %207 ]
  %214 = phi i64 [ %11, %59 ], [ %210, %207 ]
  %215 = icmp eq i8 %6, 0
  %216 = icmp eq i8* %25, %4
  %217 = and i1 %215, %216
  br i1 %217, label %218, label %222

218:                                              ; preds = %212
  %219 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 35
  %220 = load i8, i8* %219, align 2
  %221 = icmp sgt i8 %220, -1
  br i1 %221, label %238, label %222

222:                                              ; preds = %212, %218
  %223 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %10, i64 0, i32 2
  store %struct.UConverter* %0, %struct.UConverter** %223, align 8
  %224 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %10, i64 0, i32 1
  store i8 %6, i8* %224, align 2
  %225 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %10, i64 0, i32 7
  %226 = bitcast i32** %225 to i64*
  store i64 %214, i64* %226, align 8
  %227 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %10, i64 0, i32 3
  store i8* %25, i8** %227, align 8
  %228 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %10, i64 0, i32 4
  store i8* %4, i8** %228, align 8
  %229 = bitcast i16** %1 to i64*
  %230 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %10, i64 0, i32 5
  %231 = bitcast i16** %230 to i64*
  store i64 %213, i64* %231, align 8
  %232 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %10, i64 0, i32 6
  store i16* %36, i16** %232, align 8
  %233 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %10, i64 0, i32 0
  store i16 56, i16* %233, align 8
  call fastcc void @_ZL22_toUnicodeWithCallbackP23UConverterToUnicodeArgsP10UErrorCode(%struct.UConverterToUnicodeArgs* nonnull %10, i32* nonnull %7)
  %234 = bitcast i8** %227 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = bitcast i8** %3 to i64*
  store i64 %235, i64* %236, align 8
  %237 = load i64, i64* %231, align 8
  store i64 %237, i64* %229, align 8
  br label %238

238:                                              ; preds = %193, %218, %8, %14, %222, %58, %23
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL22_toUnicodeWithCallbackP23UConverterToUnicodeArgsP10UErrorCode(%struct.UConverterToUnicodeArgs*, i32*) unnamed_addr #0 {
  %3 = alloca [31 x i8], align 16
  %4 = getelementptr inbounds [31 x i8], [31 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 31, i8* nonnull %4) #10
  %5 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 31, i1 false)
  %6 = load %struct.UConverter*, %struct.UConverter** %5, align 8
  %7 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 5
  %10 = load i16*, i16** %9, align 8
  %11 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 7
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %12, null
  %14 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 6
  %15 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %14, align 8
  %16 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %15, i64 0, i32 6
  %17 = load %struct.UConverterImpl*, %struct.UConverterImpl** %16, align 8
  br i1 %13, label %22, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %17, i64 0, i32 7
  %20 = load void (%struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverterToUnicodeArgs*, i32*)** %19, align 8
  %21 = icmp eq void (%struct.UConverterToUnicodeArgs*, i32*)* %20, null
  br i1 %21, label %22, label %26

22:                                               ; preds = %18, %2
  %23 = phi i32 [ 0, %2 ], [ -1, %18 ]
  %24 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %17, i64 0, i32 6
  %25 = load void (%struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverterToUnicodeArgs*, i32*)** %24, align 8
  br label %26

26:                                               ; preds = %22, %18
  %27 = phi void (%struct.UConverterToUnicodeArgs*, i32*)* [ %20, %18 ], [ %25, %22 ]
  %28 = phi i32 [ 0, %18 ], [ %23, %22 ]
  %29 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 35
  %30 = load i8, i8* %29, align 2
  %31 = icmp sgt i8 %30, -1
  br i1 %31, label %44, label %32

32:                                               ; preds = %26
  %33 = sext i8 %30 to i64
  %34 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 4
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 1
  %37 = load i8, i8* %36, align 2
  %38 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 33, i64 0
  %39 = sub nsw i64 0, %33
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %4, i8* align 2 %38, i64 %39, i1 false)
  store i8* %4, i8** %7, align 8
  %40 = load i8, i8* %29, align 2
  %41 = sext i8 %40 to i64
  %42 = sub nsw i64 0, %41
  %43 = getelementptr inbounds [31 x i8], [31 x i8]* %3, i64 0, i64 %42
  store i8* %43, i8** %34, align 8
  store i8 0, i8* %36, align 2
  store i8 0, i8* %29, align 2
  br label %44

44:                                               ; preds = %26, %32
  %45 = phi i32 [ -1, %32 ], [ %28, %26 ]
  %46 = phi i8* [ %8, %32 ], [ null, %26 ]
  %47 = phi i8* [ %35, %32 ], [ null, %26 ]
  %48 = phi i32 [ %28, %32 ], [ 0, %26 ]
  %49 = phi i8 [ %37, %32 ], [ 0, %26 ]
  %50 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 1
  %51 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 4
  %52 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 12
  %53 = bitcast i16** %9 to i64*
  %54 = bitcast i8** %7 to i64*
  %55 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 33, i64 0
  %56 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 20
  %57 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 26, i64 0
  %58 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 13, i64 0
  %59 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 37
  %60 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 1
  %61 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 4
  br label %62

62:                                               ; preds = %280, %44
  %63 = phi i8* [ %8, %44 ], [ %261, %280 ]
  %64 = phi i16* [ %10, %44 ], [ %262, %280 ]
  %65 = phi i32* [ %12, %44 ], [ %233, %280 ]
  %66 = phi i32 [ %45, %44 ], [ %281, %280 ]
  %67 = phi i8* [ %46, %44 ], [ %282, %280 ]
  %68 = phi i8* [ %47, %44 ], [ %258, %280 ]
  %69 = phi i32 [ %48, %44 ], [ %259, %280 ]
  %70 = phi i8 [ %49, %44 ], [ %260, %280 ]
  %71 = load i32, i32* %1, align 4
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %89, label %73

73:                                               ; preds = %62
  call void %27(%struct.UConverterToUnicodeArgs* %0, i32* %1) #10
  %74 = load i32, i32* %1, align 4
  %75 = icmp sgt i32 %74, 0
  br i1 %75, label %86, label %76

76:                                               ; preds = %73
  %77 = load i8, i8* %50, align 2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %86, label %79

79:                                               ; preds = %76
  %80 = load i8*, i8** %7, align 8
  %81 = load i8*, i8** %51, align 8
  %82 = icmp eq i8* %80, %81
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = load i8, i8* %52, align 8
  %85 = icmp eq i8 %84, 0
  br label %86

86:                                               ; preds = %76, %73, %83, %79
  %87 = phi i1 [ false, %79 ], [ false, %76 ], [ false, %73 ], [ %85, %83 ]
  %88 = zext i1 %87 to i8
  br label %89

89:                                               ; preds = %62, %86
  %90 = phi i8 [ %88, %86 ], [ 0, %62 ]
  br label %91

91:                                               ; preds = %329, %89
  %92 = phi i8* [ %63, %89 ], [ %261, %329 ]
  %93 = phi i16* [ %64, %89 ], [ %262, %329 ]
  %94 = phi i32* [ %65, %89 ], [ %233, %329 ]
  %95 = phi i32 [ %66, %89 ], [ %256, %329 ]
  %96 = phi i32 [ 0, %89 ], [ %318, %329 ]
  %97 = phi i8 [ 0, %89 ], [ 1, %329 ]
  %98 = phi i8* [ %67, %89 ], [ %257, %329 ]
  %99 = phi i8* [ %68, %89 ], [ %258, %329 ]
  %100 = phi i32 [ %69, %89 ], [ %259, %329 ]
  %101 = phi i8 [ %70, %89 ], [ %260, %329 ]
  %102 = ptrtoint i32* %94 to i64
  %103 = icmp eq i32* %94, null
  br i1 %103, label %232, label %104

104:                                              ; preds = %91
  %105 = load i64, i64* %53, align 8
  %106 = ptrtoint i16* %93 to i64
  %107 = sub i64 %105, %106
  %108 = lshr exact i64 %107, 1
  %109 = trunc i64 %108 to i32
  %110 = icmp sgt i32 %109, 0
  br i1 %110, label %111, label %223

111:                                              ; preds = %104
  %112 = bitcast i32* %94 to i8*
  %113 = icmp sgt i32 %95, -1
  %114 = sub nsw i32 %95, %96
  %115 = select i1 %113, i32 %114, i32 -1
  %116 = shl i64 %107, 31
  %117 = ashr exact i64 %116, 32
  %118 = getelementptr inbounds i32, i32* %94, i64 %117
  %119 = icmp eq i32 %115, 0
  br i1 %119, label %222, label %120

120:                                              ; preds = %111
  %121 = icmp sgt i32 %115, 0
  %122 = getelementptr i32, i32* %94, i64 1
  %123 = icmp ugt i32* %118, %122
  %124 = select i1 %123, i32* %118, i32* %122
  %125 = bitcast i32* %124 to i8*
  br i1 %121, label %126, label %207

126:                                              ; preds = %120
  %127 = getelementptr i8, i8* %125, i64 -1
  %128 = sub i64 0, %102
  %129 = getelementptr i8, i8* %127, i64 %128
  %130 = ptrtoint i8* %129 to i64
  %131 = lshr i64 %130, 2
  %132 = add nuw nsw i64 %131, 1
  %133 = icmp ult i64 %132, 8
  br i1 %133, label %134, label %136

134:                                              ; preds = %205, %126
  %135 = phi i32* [ %94, %126 ], [ %138, %205 ]
  br label %213

136:                                              ; preds = %126
  %137 = and i64 %132, 9223372036854775800
  %138 = getelementptr i32, i32* %94, i64 %137
  br label %139

139:                                              ; preds = %202, %136
  %140 = phi i64 [ 0, %136 ], [ %203, %202 ]
  %141 = getelementptr i32, i32* %94, i64 %140
  %142 = bitcast i32* %141 to <4 x i32>*
  %143 = load <4 x i32>, <4 x i32>* %142, align 4
  %144 = getelementptr i32, i32* %141, i64 4
  %145 = bitcast i32* %144 to <4 x i32>*
  %146 = load <4 x i32>, <4 x i32>* %145, align 4
  %147 = icmp sgt <4 x i32> %143, <i32 -1, i32 -1, i32 -1, i32 -1>
  %148 = icmp sgt <4 x i32> %146, <i32 -1, i32 -1, i32 -1, i32 -1>
  %149 = extractelement <4 x i1> %147, i32 0
  br i1 %149, label %150, label %153

150:                                              ; preds = %139
  %151 = extractelement <4 x i32> %143, i32 0
  %152 = add nsw i32 %151, %115
  store i32 %152, i32* %141, align 4
  br label %153

153:                                              ; preds = %150, %139
  %154 = extractelement <4 x i1> %147, i32 1
  br i1 %154, label %155, label %160

155:                                              ; preds = %153
  %156 = extractelement <4 x i32> %143, i32 1
  %157 = add nsw i32 %156, %115
  %158 = or i64 %140, 1
  %159 = getelementptr i32, i32* %94, i64 %158
  store i32 %157, i32* %159, align 4
  br label %160

160:                                              ; preds = %155, %153
  %161 = extractelement <4 x i1> %147, i32 2
  br i1 %161, label %162, label %167

162:                                              ; preds = %160
  %163 = extractelement <4 x i32> %143, i32 2
  %164 = add nsw i32 %163, %115
  %165 = or i64 %140, 2
  %166 = getelementptr i32, i32* %94, i64 %165
  store i32 %164, i32* %166, align 4
  br label %167

167:                                              ; preds = %162, %160
  %168 = extractelement <4 x i1> %147, i32 3
  br i1 %168, label %169, label %174

169:                                              ; preds = %167
  %170 = extractelement <4 x i32> %143, i32 3
  %171 = add nsw i32 %170, %115
  %172 = or i64 %140, 3
  %173 = getelementptr i32, i32* %94, i64 %172
  store i32 %171, i32* %173, align 4
  br label %174

174:                                              ; preds = %169, %167
  %175 = extractelement <4 x i1> %148, i32 0
  br i1 %175, label %176, label %181

176:                                              ; preds = %174
  %177 = extractelement <4 x i32> %146, i32 0
  %178 = add nsw i32 %177, %115
  %179 = or i64 %140, 4
  %180 = getelementptr i32, i32* %94, i64 %179
  store i32 %178, i32* %180, align 4
  br label %181

181:                                              ; preds = %176, %174
  %182 = extractelement <4 x i1> %148, i32 1
  br i1 %182, label %183, label %188

183:                                              ; preds = %181
  %184 = extractelement <4 x i32> %146, i32 1
  %185 = add nsw i32 %184, %115
  %186 = or i64 %140, 5
  %187 = getelementptr i32, i32* %94, i64 %186
  store i32 %185, i32* %187, align 4
  br label %188

188:                                              ; preds = %183, %181
  %189 = extractelement <4 x i1> %148, i32 2
  br i1 %189, label %190, label %195

190:                                              ; preds = %188
  %191 = extractelement <4 x i32> %146, i32 2
  %192 = add nsw i32 %191, %115
  %193 = or i64 %140, 6
  %194 = getelementptr i32, i32* %94, i64 %193
  store i32 %192, i32* %194, align 4
  br label %195

195:                                              ; preds = %190, %188
  %196 = extractelement <4 x i1> %148, i32 3
  br i1 %196, label %197, label %202

197:                                              ; preds = %195
  %198 = extractelement <4 x i32> %146, i32 3
  %199 = add nsw i32 %198, %115
  %200 = or i64 %140, 7
  %201 = getelementptr i32, i32* %94, i64 %200
  store i32 %199, i32* %201, align 4
  br label %202

202:                                              ; preds = %197, %195
  %203 = add i64 %140, 8
  %204 = icmp eq i64 %203, %137
  br i1 %204, label %205, label %139, !llvm.loop !23

205:                                              ; preds = %202
  %206 = icmp eq i64 %132, %137
  br i1 %206, label %222, label %134

207:                                              ; preds = %120
  %208 = xor i64 %102, -1
  %209 = getelementptr i8, i8* %125, i64 %208
  %210 = ptrtoint i8* %209 to i64
  %211 = add i64 %210, 4
  %212 = and i64 %211, -4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %112, i8 -1, i64 %212, i1 false) #10
  br label %222

213:                                              ; preds = %134, %219
  %214 = phi i32* [ %220, %219 ], [ %135, %134 ]
  %215 = load i32, i32* %214, align 4
  %216 = icmp sgt i32 %215, -1
  br i1 %216, label %217, label %219

217:                                              ; preds = %213
  %218 = add nsw i32 %215, %115
  store i32 %218, i32* %214, align 4
  br label %219

219:                                              ; preds = %217, %213
  %220 = getelementptr inbounds i32, i32* %214, i64 1
  %221 = icmp ult i32* %220, %118
  br i1 %221, label %213, label %222, !llvm.loop !24

222:                                              ; preds = %219, %205, %111, %207
  store i32* %118, i32** %11, align 8
  br label %223

223:                                              ; preds = %222, %104
  %224 = phi i32* [ %118, %222 ], [ %94, %104 ]
  %225 = icmp sgt i32 %95, -1
  br i1 %225, label %226, label %232

226:                                              ; preds = %223
  %227 = load i64, i64* %54, align 8
  %228 = ptrtoint i8* %92 to i64
  %229 = sub i64 %227, %228
  %230 = trunc i64 %229 to i32
  %231 = add nsw i32 %95, %230
  br label %232

232:                                              ; preds = %223, %226, %91
  %233 = phi i32* [ null, %91 ], [ %224, %226 ], [ %224, %223 ]
  %234 = phi i32 [ %95, %91 ], [ %231, %226 ], [ %95, %223 ]
  %235 = load i8, i8* %29, align 2
  %236 = sext i8 %235 to i64
  %237 = icmp slt i8 %235, 0
  br i1 %237, label %238, label %255

238:                                              ; preds = %232
  %239 = icmp eq i8* %98, null
  br i1 %239, label %240, label %254

240:                                              ; preds = %238
  %241 = load i8*, i8** %7, align 8
  %242 = load i8*, i8** %51, align 8
  %243 = load i8, i8* %50, align 2
  %244 = sub nsw i64 0, %236
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %4, i8* align 2 %55, i64 %244, i1 false)
  store i8* %4, i8** %7, align 8
  %245 = load i8, i8* %29, align 2
  %246 = sext i8 %245 to i64
  %247 = sub nsw i64 0, %246
  %248 = getelementptr inbounds [31 x i8], [31 x i8]* %3, i64 0, i64 %247
  store i8* %248, i8** %51, align 8
  store i8 0, i8* %50, align 2
  %249 = load i8, i8* %29, align 2
  %250 = sext i8 %249 to i32
  %251 = add nsw i32 %234, %250
  %252 = icmp sgt i32 %251, -1
  %253 = select i1 %252, i32 %251, i32 -1
  store i8 0, i8* %29, align 2
  br label %255

254:                                              ; preds = %238
  store i32 5, i32* %1, align 4
  br label %255

255:                                              ; preds = %240, %254, %232
  %256 = phi i32 [ %253, %240 ], [ %234, %254 ], [ %234, %232 ]
  %257 = phi i8* [ %241, %240 ], [ %98, %254 ], [ %98, %232 ]
  %258 = phi i8* [ %242, %240 ], [ %99, %254 ], [ %99, %232 ]
  %259 = phi i32 [ %234, %240 ], [ %100, %254 ], [ %100, %232 ]
  %260 = phi i8 [ %243, %240 ], [ %101, %254 ], [ %101, %232 ]
  %261 = load i8*, i8** %7, align 8
  %262 = load i16*, i16** %9, align 8
  %263 = load i32, i32* %1, align 4
  %264 = icmp sgt i32 %263, 0
  br i1 %264, label %298, label %265

265:                                              ; preds = %255
  %266 = load i8*, i8** %51, align 8
  %267 = icmp ult i8* %261, %266
  br i1 %267, label %280, label %268

268:                                              ; preds = %265
  %269 = icmp eq i8* %257, null
  br i1 %269, label %271, label %270

270:                                              ; preds = %268
  store i8* %257, i8** %7, align 8
  store i8* %258, i8** %51, align 8
  store i8 %260, i8* %50, align 2
  br label %280

271:                                              ; preds = %268
  %272 = load i8, i8* %50, align 2
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %333, label %274

274:                                              ; preds = %271
  %275 = load i8, i8* %52, align 8
  %276 = icmp sgt i8 %275, 0
  br i1 %276, label %277, label %278

277:                                              ; preds = %274
  store i32 11, i32* %1, align 4
  br label %316

278:                                              ; preds = %274
  %279 = icmp eq i8 %90, 0
  br i1 %279, label %280, label %283

280:                                              ; preds = %265, %278, %270
  %281 = phi i32 [ %256, %278 ], [ %259, %270 ], [ %256, %265 ]
  %282 = phi i8* [ null, %278 ], [ null, %270 ], [ %257, %265 ]
  br label %62

283:                                              ; preds = %278
  %284 = icmp eq %struct.UConverter* %6, null
  br i1 %284, label %333, label %285

285:                                              ; preds = %283
  %286 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %14, align 8
  %287 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %286, i64 0, i32 7
  %288 = load i32, i32* %287, align 8
  %289 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 14
  store i32 %288, i32* %289, align 8
  %290 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 15
  store i32 0, i32* %290, align 4
  store i8 0, i8* %52, align 8
  %291 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %6, i64 0, i32 23
  store i8 0, i8* %291, align 1
  store i8 0, i8* %56, align 2
  store i8 0, i8* %29, align 2
  %292 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %286, i64 0, i32 6
  %293 = load %struct.UConverterImpl*, %struct.UConverterImpl** %292, align 8
  %294 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %293, i64 0, i32 5
  %295 = load void (%struct.UConverter*, i32)*, void (%struct.UConverter*, i32)** %294, align 8
  %296 = icmp eq void (%struct.UConverter*, i32)* %295, null
  br i1 %296, label %333, label %297

297:                                              ; preds = %285
  call void %295(%struct.UConverter* nonnull %6, i32 1) #10
  br label %333

298:                                              ; preds = %255
  %299 = icmp eq i8 %97, 0
  br i1 %299, label %300, label %301

300:                                              ; preds = %298
  switch i32 %263, label %301 [
    i32 10, label %316
    i32 19, label %316
    i32 18, label %316
    i32 12, label %316
    i32 11, label %316
  ]

301:                                              ; preds = %300, %298
  %302 = icmp eq i8* %257, null
  br i1 %302, label %333, label %303

303:                                              ; preds = %301
  %304 = bitcast i8** %51 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = ptrtoint i8* %261 to i64
  %307 = sub i64 %305, %306
  %308 = trunc i64 %307 to i32
  %309 = icmp sgt i32 %308, 0
  br i1 %309, label %310, label %315

310:                                              ; preds = %303
  %311 = shl i64 %307, 32
  %312 = ashr exact i64 %311, 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %55, i8* align 1 %261, i64 %312, i1 false)
  %313 = trunc i64 %307 to i8
  %314 = sub i8 0, %313
  store i8 %314, i8* %29, align 2
  br label %315

315:                                              ; preds = %310, %303
  store i8* %257, i8** %7, align 8
  store i8* %258, i8** %51, align 8
  store i8 %260, i8* %50, align 2
  br label %333

316:                                              ; preds = %277, %300, %300, %300, %300, %300
  %317 = load i8, i8* %52, align 8
  store i8 %317, i8* %56, align 2
  %318 = sext i8 %317 to i32
  %319 = icmp sgt i8 %317, 0
  br i1 %319, label %320, label %322

320:                                              ; preds = %316
  %321 = sext i8 %317 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 1 %58, i64 %321, i1 false)
  br label %322

322:                                              ; preds = %320, %316
  store i8 0, i8* %52, align 8
  %323 = load i32, i32* %59, align 4
  %324 = icmp eq i32 %323, 1
  br i1 %324, label %325, label %329

325:                                              ; preds = %322
  %326 = load i32, i32* %1, align 4
  %327 = icmp eq i32 %326, 10
  br i1 %327, label %328, label %329

328:                                              ; preds = %325
  store i32 0, i32* %59, align 4
  br label %329

329:                                              ; preds = %328, %325, %322
  %330 = phi i32 [ 0, %328 ], [ 1, %325 ], [ %323, %322 ]
  %331 = load void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)*, void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)** %60, align 8
  %332 = load i8*, i8** %61, align 8
  call void %331(i8* %332, %struct.UConverterToUnicodeArgs* %0, i8* %57, i32 %318, i32 %330, i32* %1) #10
  store i32 1, i32* %59, align 4
  br label %91

333:                                              ; preds = %271, %297, %285, %283, %301, %315
  call void @llvm.lifetime.end.p0i8(i64 31, i8* nonnull %4) #10
  ret void
}

declare i32 @u_terminateChars_69(i8*, i32, i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ucnv_toUChars_69(%struct.UConverter*, i16*, i32, i8*, i32, i32*) local_unnamed_addr #0 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.UConverterToUnicodeArgs, align 8
  %9 = alloca i16*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca [1024 x i16], align 16
  store i16* %1, i16** %9, align 8
  store i8* %3, i8** %10, align 8
  %12 = icmp eq i32* %5, null
  br i1 %12, label %115, label %13

13:                                               ; preds = %6
  %14 = load i32, i32* %5, align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %16, label %115

16:                                               ; preds = %13
  %17 = icmp eq %struct.UConverter* %0, null
  %18 = icmp slt i32 %2, 0
  %19 = or i1 %17, %18
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = icmp sgt i32 %2, 0
  %22 = icmp eq i16* %1, null
  %23 = and i1 %22, %21
  %24 = icmp slt i32 %4, -1
  %25 = or i1 %23, %24
  br i1 %25, label %30, label %26

26:                                               ; preds = %20
  %27 = icmp ne i32 %4, 0
  %28 = icmp eq i8* %3, null
  %29 = and i1 %28, %27
  br i1 %29, label %30, label %31

30:                                               ; preds = %26, %20, %16
  store i32 1, i32* %5, align 4
  br label %115

31:                                               ; preds = %26
  %32 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #10
  store i32 -1431655766, i32* %7, align 4
  %33 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 1
  %34 = load void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)*, void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)** %33, align 8
  %35 = icmp eq void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)* %34, @UCNV_TO_U_CALLBACK_SUBSTITUTE_69
  br i1 %35, label %43, label %36

36:                                               ; preds = %31
  %37 = bitcast %struct.UConverterToUnicodeArgs* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %37) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 56, i1 false) #10
  %38 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %8, i64 0, i32 0
  store i16 56, i16* %38, align 8
  %39 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %8, i64 0, i32 1
  store i8 1, i8* %39, align 2
  %40 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %8, i64 0, i32 2
  store %struct.UConverter* %0, %struct.UConverter** %40, align 8
  store i32 0, i32* %7, align 4
  %41 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 4
  %42 = load i8*, i8** %41, align 8
  call void %34(i8* %42, %struct.UConverterToUnicodeArgs* nonnull %8, i8* null, i32 0, i32 3, i32* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %37) #10
  br label %43

43:                                               ; preds = %36, %31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #10
  %44 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %45 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %44, align 8
  %46 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %45, i64 0, i32 7
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 14
  store i32 %47, i32* %48, align 8
  %49 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 15
  store i32 0, i32* %49, align 4
  %50 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 12
  store i8 0, i8* %50, align 8
  %51 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 23
  store i8 0, i8* %51, align 1
  %52 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 20
  store i8 0, i8* %52, align 2
  %53 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 35
  store i8 0, i8* %53, align 2
  %54 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %45, i64 0, i32 6
  %55 = load %struct.UConverterImpl*, %struct.UConverterImpl** %54, align 8
  %56 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %55, i64 0, i32 5
  %57 = load void (%struct.UConverter*, i32)*, void (%struct.UConverter*, i32)** %56, align 8
  %58 = icmp eq void (%struct.UConverter*, i32)* %57, null
  br i1 %58, label %60, label %59

59:                                               ; preds = %43
  call void %57(%struct.UConverter* nonnull %0, i32 1) #10
  br label %60

60:                                               ; preds = %43, %59
  %61 = load i16*, i16** %9, align 8
  %62 = icmp eq i32 %4, -1
  br i1 %62, label %63, label %67

63:                                               ; preds = %60
  %64 = load i8*, i8** %10, align 8
  %65 = call i64 @strlen(i8* %64) #12
  %66 = trunc i64 %65 to i32
  br label %67

67:                                               ; preds = %63, %60
  %68 = phi i32 [ %66, %63 ], [ %4, %60 ]
  %69 = icmp sgt i32 %68, 0
  br i1 %69, label %70, label %111

70:                                               ; preds = %67
  %71 = load i8*, i8** %10, align 8
  %72 = sext i32 %68 to i64
  %73 = getelementptr inbounds i8, i8* %71, i64 %72
  %74 = icmp slt i32 %2, 1
  %75 = ptrtoint i16* %61 to i64
  br i1 %74, label %85, label %76

76:                                               ; preds = %70
  %77 = add i64 %75, 2147483647
  %78 = icmp ugt i16* %61, inttoptr (i64 -2147483648 to i16*)
  %79 = select i1 %78, i64 8589934591, i64 %77
  %80 = sub i64 %79, %75
  %81 = lshr i64 %80, 1
  %82 = trunc i64 %81 to i32
  %83 = icmp slt i32 %82, %2
  %84 = select i1 %83, i32 %82, i32 %2
  br label %85

85:                                               ; preds = %70, %76
  %86 = phi i32 [ %84, %76 ], [ 0, %70 ]
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i16, i16* %61, i64 %87
  call void @ucnv_toUnicode_69(%struct.UConverter* nonnull %0, i16** nonnull %9, i16* %88, i8** nonnull %10, i8* %73, i32* null, i8 signext 1, i32* nonnull %5)
  %89 = bitcast i16** %9 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %90, %75
  %92 = lshr exact i64 %91, 1
  %93 = trunc i64 %92 to i32
  %94 = load i32, i32* %5, align 4
  %95 = icmp eq i32 %94, 15
  br i1 %95, label %96, label %111

96:                                               ; preds = %85
  %97 = bitcast [1024 x i16]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %97) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %97, i8 -86, i64 2048, i1 false)
  %98 = getelementptr inbounds [1024 x i16], [1024 x i16]* %11, i64 0, i64 0
  %99 = getelementptr inbounds [1024 x i16], [1024 x i16]* %11, i64 0, i64 1024
  %100 = ptrtoint [1024 x i16]* %11 to i64
  br label %101

101:                                              ; preds = %101, %96
  %102 = phi i32 [ %93, %96 ], [ %107, %101 ]
  store i16* %98, i16** %9, align 8
  store i32 0, i32* %5, align 4
  call void @ucnv_toUnicode_69(%struct.UConverter* %0, i16** nonnull %9, i16* %99, i8** nonnull %10, i8* %73, i32* null, i8 signext 1, i32* nonnull %5)
  %103 = load i64, i64* %89, align 8
  %104 = sub i64 %103, %100
  %105 = lshr exact i64 %104, 1
  %106 = trunc i64 %105 to i32
  %107 = add nsw i32 %102, %106
  %108 = load i32, i32* %5, align 4
  %109 = icmp eq i32 %108, 15
  br i1 %109, label %101, label %110

110:                                              ; preds = %101
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %97) #10
  br label %111

111:                                              ; preds = %67, %85, %110
  %112 = phi i32 [ %86, %110 ], [ %86, %85 ], [ %2, %67 ]
  %113 = phi i32 [ %107, %110 ], [ %93, %85 ], [ 0, %67 ]
  %114 = call i32 @u_terminateUChars_69(i16* %61, i32 %112, i32 %113, i32* nonnull %5) #10
  br label %115

115:                                              ; preds = %6, %13, %111, %30
  %116 = phi i32 [ 0, %30 ], [ %114, %111 ], [ 0, %13 ], [ 0, %6 ]
  ret i32 %116
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare i32 @u_terminateUChars_69(i16*, i32, i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ucnv_getNextUChar_69(%struct.UConverter*, i8**, i8*, i32*) local_unnamed_addr #0 {
  %5 = alloca %struct.UConverterToUnicodeArgs, align 8
  %6 = alloca [2 x i16], align 2
  %7 = bitcast %struct.UConverterToUnicodeArgs* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 56, i1 false)
  %8 = bitcast [2 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #10
  %9 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 0
  store i16 -21846, i16* %9, align 2
  %10 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 1
  store i16 -21846, i16* %10, align 2
  %11 = icmp eq i32* %3, null
  br i1 %11, label %239, label %12

12:                                               ; preds = %4
  %13 = load i32, i32* %3, align 4
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %15, label %239

15:                                               ; preds = %12
  %16 = icmp eq %struct.UConverter* %0, null
  %17 = icmp eq i8** %1, null
  %18 = or i1 %16, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %15
  store i32 1, i32* %3, align 4
  br label %239

20:                                               ; preds = %15
  %21 = load i8*, i8** %1, align 8
  %22 = icmp ugt i8* %21, %2
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  store i32 1, i32* %3, align 4
  br label %239

24:                                               ; preds = %20
  %25 = ptrtoint i8* %2 to i64
  %26 = ptrtoint i8* %21 to i64
  %27 = sub i64 %25, %26
  %28 = icmp ugt i64 %27, 2147483647
  %29 = icmp ult i8* %21, %2
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %32

31:                                               ; preds = %24
  store i32 1, i32* %3, align 4
  br label %239

32:                                               ; preds = %24
  %33 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 23
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i32
  %36 = icmp sgt i8 %34, 0
  br i1 %36, label %37, label %74

37:                                               ; preds = %32
  %38 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 30, i64 0
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = and i32 %40, 64512
  %42 = icmp ne i32 %41, 55296
  %43 = icmp eq i8 %34, 1
  %44 = or i1 %43, %42
  br i1 %44, label %55, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 30, i64 1
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = and i32 %48, 64512
  %50 = icmp eq i32 %49, 56320
  br i1 %50, label %51, label %55

51:                                               ; preds = %45
  %52 = shl nuw nsw i32 %40, 10
  %53 = add nsw i32 %52, -56613888
  %54 = add nsw i32 %53, %48
  br label %55

55:                                               ; preds = %37, %45, %51
  %56 = phi i32 [ %40, %37 ], [ %54, %51 ], [ %40, %45 ]
  %57 = phi i32 [ 1, %37 ], [ 2, %51 ], [ 1, %45 ]
  %58 = trunc i32 %57 to i8
  %59 = sub nsw i8 %34, %58
  store i8 %59, i8* %33, align 1
  %60 = icmp sgt i8 %59, 0
  br i1 %60, label %61, label %69

61:                                               ; preds = %55
  %62 = sext i8 %59 to i32
  %63 = bitcast i16* %38 to i8*
  %64 = zext i32 %57 to i64
  %65 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 30, i64 %64
  %66 = bitcast i16* %65 to i8*
  %67 = shl nsw i32 %62, 1
  %68 = sext i32 %67 to i64
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %63, i8* align 2 %66, i64 %68, i1 false)
  br label %69

69:                                               ; preds = %61, %55
  %70 = and i32 %56, -1024
  %71 = icmp ne i32 %70, 55296
  %72 = icmp slt i32 %57, %35
  %73 = or i1 %71, %72
  br i1 %73, label %239, label %74

74:                                               ; preds = %69, %32
  %75 = phi i32 [ -1, %32 ], [ %56, %69 ]
  %76 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %5, i64 0, i32 2
  store %struct.UConverter* %0, %struct.UConverter** %76, align 8
  %77 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %5, i64 0, i32 1
  store i8 1, i8* %77, align 2
  %78 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %5, i64 0, i32 7
  store i32* null, i32** %78, align 8
  %79 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %5, i64 0, i32 3
  store i8* %21, i8** %79, align 8
  %80 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %5, i64 0, i32 4
  store i8* %2, i8** %80, align 8
  %81 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %5, i64 0, i32 5
  store i16* %9, i16** %81, align 8
  %82 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %5, i64 0, i32 6
  store i16* %10, i16** %82, align 8
  %83 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %5, i64 0, i32 0
  store i16 56, i16* %83, align 8
  %84 = icmp slt i32 %75, 0
  br i1 %84, label %85, label %134

85:                                               ; preds = %74
  %86 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 12
  %87 = load i8, i8* %86, align 8
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %122

89:                                               ; preds = %85
  %90 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %91 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %90, align 8
  %92 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %91, i64 0, i32 6
  %93 = load %struct.UConverterImpl*, %struct.UConverterImpl** %92, align 8
  %94 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %93, i64 0, i32 10
  %95 = load i32 (%struct.UConverterToUnicodeArgs*, i32*)*, i32 (%struct.UConverterToUnicodeArgs*, i32*)** %94, align 8
  %96 = icmp eq i32 (%struct.UConverterToUnicodeArgs*, i32*)* %95, null
  br i1 %96, label %122, label %97

97:                                               ; preds = %89
  %98 = call i32 %95(%struct.UConverterToUnicodeArgs* nonnull %5, i32* nonnull %3) #10
  %99 = bitcast i8** %79 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast i8** %1 to i64*
  store i64 %100, i64* %101, align 8
  %102 = load i32, i32* %3, align 4
  %103 = icmp eq i32 %102, 8
  br i1 %103, label %104, label %118

104:                                              ; preds = %97
  %105 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %90, align 8
  %106 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %105, i64 0, i32 7
  %107 = load i32, i32* %106, align 8
  %108 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 14
  store i32 %107, i32* %108, align 8
  %109 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 15
  store i32 0, i32* %109, align 4
  store i8 0, i8* %86, align 8
  store i8 0, i8* %33, align 1
  %110 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 20
  store i8 0, i8* %110, align 2
  %111 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 35
  store i8 0, i8* %111, align 2
  %112 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %105, i64 0, i32 6
  %113 = load %struct.UConverterImpl*, %struct.UConverterImpl** %112, align 8
  %114 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %113, i64 0, i32 5
  %115 = load void (%struct.UConverter*, i32)*, void (%struct.UConverter*, i32)** %114, align 8
  %116 = icmp eq void (%struct.UConverter*, i32)* %115, null
  br i1 %116, label %239, label %117

117:                                              ; preds = %104
  call void %115(%struct.UConverter* nonnull %0, i32 1) #10
  br label %239

118:                                              ; preds = %97
  %119 = icmp slt i32 %102, 1
  %120 = icmp sgt i32 %98, -1
  %121 = and i1 %120, %119
  br i1 %121, label %239, label %122

122:                                              ; preds = %89, %118, %85
  call fastcc void @_ZL22_toUnicodeWithCallbackP23UConverterToUnicodeArgsP10UErrorCode(%struct.UConverterToUnicodeArgs* nonnull %5, i32* nonnull %3)
  %123 = load i32, i32* %3, align 4
  %124 = icmp eq i32 %123, 15
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  store i32 0, i32* %3, align 4
  br label %126

126:                                              ; preds = %125, %122
  %127 = phi i32 [ 0, %125 ], [ %123, %122 ]
  %128 = bitcast i16** %81 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = ptrtoint [2 x i16]* %6 to i64
  %131 = sub i64 %129, %130
  %132 = lshr exact i64 %131, 1
  %133 = trunc i64 %132 to i32
  br label %137

134:                                              ; preds = %74
  %135 = trunc i32 %75 to i16
  store i16 %135, i16* %9, align 2
  store i16* %10, i16** %81, align 8
  %136 = load i32, i32* %3, align 4
  br label %137

137:                                              ; preds = %134, %126
  %138 = phi i32 [ %127, %126 ], [ %136, %134 ]
  %139 = phi i32 [ %133, %126 ], [ 1, %134 ]
  %140 = icmp slt i32 %138, 1
  br i1 %140, label %141, label %199

141:                                              ; preds = %137
  %142 = icmp eq i32 %139, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %141
  store i32 8, i32* %3, align 4
  br label %234

144:                                              ; preds = %141
  %145 = load i16, i16* %9, align 2
  %146 = zext i16 %145 to i32
  %147 = and i32 %146, 64512
  %148 = icmp eq i32 %147, 55296
  br i1 %148, label %149, label %199

149:                                              ; preds = %144
  %150 = load i8, i8* %33, align 1
  %151 = icmp sgt i8 %150, 0
  br i1 %151, label %152, label %171

152:                                              ; preds = %149
  %153 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 30, i64 0
  %154 = load i16, i16* %153, align 8
  %155 = zext i16 %154 to i32
  %156 = and i32 %155, 64512
  %157 = icmp eq i32 %156, 56320
  br i1 %157, label %158, label %199

158:                                              ; preds = %152
  %159 = shl nuw nsw i32 %146, 10
  %160 = add nsw i32 %159, -56613888
  %161 = add nsw i32 %160, %155
  %162 = add nsw i8 %150, -1
  store i8 %162, i8* %33, align 1
  %163 = icmp sgt i8 %162, 0
  br i1 %163, label %164, label %199

164:                                              ; preds = %158
  %165 = sext i8 %162 to i32
  %166 = bitcast i16* %153 to i8*
  %167 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 30, i64 1
  %168 = bitcast i16* %167 to i8*
  %169 = shl nsw i32 %165, 1
  %170 = sext i32 %169 to i64
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %166, i8* align 2 %168, i64 %170, i1 false)
  br label %199

171:                                              ; preds = %149
  %172 = load i8*, i8** %79, align 8
  %173 = icmp ult i8* %172, %2
  br i1 %173, label %174, label %199

174:                                              ; preds = %171
  %175 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 2
  store i16* %175, i16** %82, align 8
  call fastcc void @_ZL22_toUnicodeWithCallbackP23UConverterToUnicodeArgsP10UErrorCode(%struct.UConverterToUnicodeArgs* nonnull %5, i32* nonnull %3)
  %176 = load i32, i32* %3, align 4
  %177 = icmp eq i32 %176, 15
  br i1 %177, label %178, label %179

178:                                              ; preds = %174
  store i32 0, i32* %3, align 4
  br label %179

179:                                              ; preds = %178, %174
  %180 = phi i32 [ 0, %178 ], [ %176, %174 ]
  %181 = bitcast i16** %81 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = ptrtoint [2 x i16]* %6 to i64
  %184 = sub i64 %182, %183
  %185 = lshr exact i64 %184, 1
  %186 = trunc i64 %185 to i32
  %187 = icmp slt i32 %180, 1
  %188 = icmp eq i32 %186, 2
  %189 = and i1 %187, %188
  br i1 %189, label %190, label %199

190:                                              ; preds = %179
  %191 = load i16, i16* %10, align 2
  %192 = zext i16 %191 to i32
  %193 = and i32 %192, 64512
  %194 = icmp eq i32 %193, 56320
  br i1 %194, label %195, label %204

195:                                              ; preds = %190
  %196 = shl nuw nsw i32 %146, 10
  %197 = add nsw i32 %196, -56613888
  %198 = add nsw i32 %197, %192
  br label %234

199:                                              ; preds = %152, %158, %164, %179, %171, %137, %144
  %200 = phi i32 [ %146, %144 ], [ 65535, %137 ], [ %161, %164 ], [ %161, %158 ], [ %146, %152 ], [ %146, %179 ], [ %146, %171 ]
  %201 = phi i32 [ 1, %144 ], [ 0, %137 ], [ 1, %164 ], [ 1, %158 ], [ 1, %152 ], [ 1, %179 ], [ 1, %171 ]
  %202 = phi i32 [ %139, %144 ], [ %139, %137 ], [ %139, %164 ], [ %139, %158 ], [ %139, %152 ], [ %186, %179 ], [ %139, %171 ]
  %203 = icmp sgt i32 %202, %201
  br i1 %203, label %204, label %234

204:                                              ; preds = %190, %199
  %205 = phi i32 [ %202, %199 ], [ 2, %190 ]
  %206 = phi i32 [ %201, %199 ], [ 1, %190 ]
  %207 = phi i32 [ %200, %199 ], [ %146, %190 ]
  %208 = sub nsw i32 %205, %206
  %209 = load i8, i8* %33, align 1
  %210 = icmp sgt i8 %209, 0
  br i1 %210, label %211, label %220

211:                                              ; preds = %204
  %212 = sext i8 %209 to i32
  %213 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 30, i64 0
  %214 = sext i32 %208 to i64
  %215 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 30, i64 %214
  %216 = bitcast i16* %215 to i8*
  %217 = bitcast i16* %213 to i8*
  %218 = shl nsw i32 %212, 1
  %219 = sext i32 %218 to i64
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %216, i8* align 8 %217, i64 %219, i1 false)
  br label %220

220:                                              ; preds = %211, %204
  %221 = trunc i32 %208 to i8
  %222 = add i8 %209, %221
  store i8 %222, i8* %33, align 1
  %223 = sext i32 %206 to i64
  %224 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 %223
  %225 = load i16, i16* %224, align 2
  %226 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 30, i64 0
  store i16 %225, i16* %226, align 8
  %227 = icmp sgt i32 %208, 1
  br i1 %227, label %228, label %234

228:                                              ; preds = %220
  %229 = add nuw nsw i32 %206, 1
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 %230
  %232 = load i16, i16* %231, align 2
  %233 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 30, i64 1
  store i16 %232, i16* %233, align 2
  br label %234

234:                                              ; preds = %195, %143, %220, %228, %199
  %235 = phi i32 [ %207, %220 ], [ %207, %228 ], [ %200, %199 ], [ %198, %195 ], [ 65535, %143 ]
  %236 = bitcast i8** %79 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = bitcast i8** %1 to i64*
  store i64 %237, i64* %238, align 8
  br label %239

239:                                              ; preds = %117, %104, %118, %69, %4, %12, %234, %31, %23, %19
  %240 = phi i32 [ 65535, %19 ], [ 65535, %23 ], [ 65535, %31 ], [ %235, %234 ], [ 65535, %12 ], [ 65535, %4 ], [ %56, %69 ], [ %98, %118 ], [ 65535, %104 ], [ 65535, %117 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %7) #10
  ret i32 %240
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_convertEx_69(%struct.UConverter*, %struct.UConverter*, i8**, i8*, i8**, i8*, i16*, i16**, i16**, i16*, i8 signext, i8 signext, i32*) local_unnamed_addr #0 {
  %14 = bitcast %struct.UConverter* %0 to i8*
  %15 = alloca i32, align 4
  %16 = alloca %struct.UConverterFromUnicodeArgs, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct.UConverterToUnicodeArgs, align 8
  %19 = alloca [1024 x i16], align 16
  %20 = alloca i16*, align 8
  %21 = alloca i16*, align 8
  %22 = alloca %struct.UConverterToUnicodeArgs, align 8
  %23 = alloca %struct.UConverterFromUnicodeArgs, align 8
  %24 = bitcast [1024 x i16]* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %24) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 -86, i64 2048, i1 false)
  %25 = bitcast i16** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25)
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %20, align 8
  %26 = bitcast i16** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %21, align 8
  %27 = bitcast %struct.UConverterToUnicodeArgs* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %27) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 56, i1 false)
  %28 = bitcast %struct.UConverterFromUnicodeArgs* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %28) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 56, i1 false)
  %29 = icmp eq i32* %12, null
  br i1 %29, label %670, label %30

30:                                               ; preds = %13
  %31 = load i32, i32* %12, align 4
  %32 = icmp slt i32 %31, 1
  br i1 %32, label %33, label %670

33:                                               ; preds = %30
  %34 = icmp eq %struct.UConverter* %0, null
  %35 = icmp eq %struct.UConverter* %1, null
  %36 = or i1 %34, %35
  %37 = icmp eq i8** %4, null
  %38 = or i1 %36, %37
  br i1 %38, label %49, label %39

39:                                               ; preds = %33
  %40 = load i8*, i8** %4, align 8
  %41 = icmp eq i8* %40, null
  %42 = icmp eq i8** %2, null
  %43 = or i1 %42, %41
  br i1 %43, label %49, label %44

44:                                               ; preds = %39
  %45 = load i8*, i8** %2, align 8
  %46 = icmp eq i8* %45, null
  %47 = icmp eq i8* %3, null
  %48 = or i1 %47, %46
  br i1 %48, label %49, label %50

49:                                               ; preds = %44, %39, %33
  store i32 1, i32* %12, align 4
  br label %670

50:                                               ; preds = %44
  %51 = icmp ne i8* %5, null
  %52 = icmp ugt i8* %40, %5
  %53 = and i1 %51, %52
  %54 = icmp ugt i8* %45, %3
  %55 = or i1 %53, %54
  br i1 %55, label %56, label %57

56:                                               ; preds = %50
  store i32 1, i32* %12, align 4
  br label %670

57:                                               ; preds = %50
  br i1 %51, label %58, label %65

58:                                               ; preds = %57
  %59 = ptrtoint i8* %5 to i64
  %60 = ptrtoint i8* %40 to i64
  %61 = sub i64 %59, %60
  %62 = icmp ugt i64 %61, 2147483647
  %63 = icmp ult i8* %40, %5
  %64 = and i1 %63, %62
  br i1 %64, label %72, label %65

65:                                               ; preds = %58, %57
  %66 = ptrtoint i8* %3 to i64
  %67 = ptrtoint i8* %45 to i64
  %68 = sub i64 %66, %67
  %69 = icmp ugt i64 %68, 2147483647
  %70 = icmp ult i8* %45, %3
  %71 = and i1 %70, %69
  br i1 %71, label %72, label %73

72:                                               ; preds = %65, %58
  store i32 1, i32* %12, align 4
  br label %670

73:                                               ; preds = %65
  %74 = icmp eq i16* %6, null
  br i1 %74, label %75, label %81

75:                                               ; preds = %73
  %76 = icmp eq i8 %11, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %75
  store i32 1, i32* %12, align 4
  br label %670

78:                                               ; preds = %75
  %79 = getelementptr inbounds [1024 x i16], [1024 x i16]* %19, i64 0, i64 0
  store i16* %79, i16** %21, align 8
  store i16* %79, i16** %20, align 8
  %80 = getelementptr inbounds [1024 x i16], [1024 x i16]* %19, i64 0, i64 1024
  br label %96

81:                                               ; preds = %73
  %82 = icmp uge i16* %6, %9
  %83 = icmp eq i16** %7, null
  %84 = or i1 %83, %82
  br i1 %84, label %95, label %85

85:                                               ; preds = %81
  %86 = load i16*, i16** %7, align 8
  %87 = icmp eq i16* %86, null
  %88 = icmp eq i16** %8, null
  %89 = or i1 %88, %87
  br i1 %89, label %95, label %90

90:                                               ; preds = %85
  %91 = load i16*, i16** %8, align 8
  %92 = icmp eq i16* %91, null
  %93 = icmp eq i16* %9, null
  %94 = or i1 %93, %92
  br i1 %94, label %95, label %96

95:                                               ; preds = %90, %85, %81
  store i32 1, i32* %12, align 4
  br label %670

96:                                               ; preds = %90, %78
  %97 = phi i16** [ %21, %78 ], [ %8, %90 ]
  %98 = phi i16* [ %80, %78 ], [ %9, %90 ]
  %99 = phi i16** [ %20, %78 ], [ %7, %90 ]
  %100 = phi i16* [ %79, %78 ], [ %6, %90 ]
  %101 = icmp eq i8* %5, null
  br i1 %101, label %102, label %105

102:                                              ; preds = %96
  %103 = call i64 @strlen(i8* nonnull %40)
  %104 = getelementptr i8, i8* %40, i64 %103
  br label %105

105:                                              ; preds = %102, %96
  %106 = phi i8* [ %104, %102 ], [ %5, %96 ]
  %107 = icmp eq i8 %10, 0
  br i1 %107, label %165, label %108

108:                                              ; preds = %105
  %109 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %109) #10
  store i32 -1431655766, i32* %17, align 4
  %110 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 1
  %111 = load void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)*, void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)** %110, align 8
  %112 = icmp eq void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)* %111, @UCNV_TO_U_CALLBACK_SUBSTITUTE_69
  br i1 %112, label %120, label %113

113:                                              ; preds = %108
  %114 = bitcast %struct.UConverterToUnicodeArgs* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %114) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 0, i64 56, i1 false) #10
  %115 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %18, i64 0, i32 0
  store i16 56, i16* %115, align 8
  %116 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %18, i64 0, i32 1
  store i8 1, i8* %116, align 2
  %117 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %18, i64 0, i32 2
  store %struct.UConverter* %1, %struct.UConverter** %117, align 8
  store i32 0, i32* %17, align 4
  %118 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 4
  %119 = load i8*, i8** %118, align 8
  call void %111(i8* %119, %struct.UConverterToUnicodeArgs* nonnull %18, i8* null, i32 0, i32 3, i32* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %114) #10
  br label %120

120:                                              ; preds = %113, %108
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %109) #10
  %121 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 6
  %122 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %121, align 8
  %123 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %122, i64 0, i32 7
  %124 = load i32, i32* %123, align 8
  %125 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 14
  store i32 %124, i32* %125, align 8
  %126 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 15
  store i32 0, i32* %126, align 4
  %127 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 12
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 23
  store i8 0, i8* %128, align 1
  %129 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 20
  store i8 0, i8* %129, align 2
  %130 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 35
  store i8 0, i8* %130, align 2
  %131 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %122, i64 0, i32 6
  %132 = load %struct.UConverterImpl*, %struct.UConverterImpl** %131, align 8
  %133 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %132, i64 0, i32 5
  %134 = load void (%struct.UConverter*, i32)*, void (%struct.UConverter*, i32)** %133, align 8
  %135 = icmp eq void (%struct.UConverter*, i32)* %134, null
  br i1 %135, label %137, label %136

136:                                              ; preds = %120
  call void %134(%struct.UConverter* nonnull %1, i32 1) #10
  br label %137

137:                                              ; preds = %136, %120
  %138 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %138) #10
  store i32 -1431655766, i32* %15, align 4
  %139 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 0
  %140 = load void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)*, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** %139, align 8
  %141 = icmp eq void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)* %140, @UCNV_FROM_U_CALLBACK_SUBSTITUTE_69
  br i1 %141, label %149, label %142

142:                                              ; preds = %137
  %143 = bitcast %struct.UConverterFromUnicodeArgs* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %143) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %143, i8 0, i64 56, i1 false) #10
  %144 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %16, i64 0, i32 0
  store i16 56, i16* %144, align 8
  %145 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %16, i64 0, i32 1
  store i8 1, i8* %145, align 2
  %146 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %16, i64 0, i32 2
  store %struct.UConverter* %0, %struct.UConverter** %146, align 8
  store i32 0, i32* %15, align 4
  %147 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 3
  %148 = load i8*, i8** %147, align 8
  call void %140(i8* %148, %struct.UConverterFromUnicodeArgs* nonnull %16, i16* null, i32 0, i32 0, i32 3, i32* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %143) #10
  br label %149

149:                                              ; preds = %142, %137
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %138) #10
  %150 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %151 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %150, align 8
  %152 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 16
  store i32 0, i32* %152, align 8
  %153 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 17
  store i32 0, i32* %153, align 4
  %154 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 21
  store i8 0, i8* %154, align 1
  %155 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 22
  store i8 0, i8* %155, align 4
  %156 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 31
  store i32 -1, i32* %156, align 8
  %157 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 34
  store i8 0, i8* %157, align 1
  %158 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %151, i64 0, i32 6
  %159 = load %struct.UConverterImpl*, %struct.UConverterImpl** %158, align 8
  %160 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %159, i64 0, i32 5
  %161 = load void (%struct.UConverter*, i32)*, void (%struct.UConverter*, i32)** %160, align 8
  %162 = icmp eq void (%struct.UConverter*, i32)* %161, null
  br i1 %162, label %164, label %163

163:                                              ; preds = %149
  call void %161(%struct.UConverter* nonnull %0, i32 2) #10
  br label %164

164:                                              ; preds = %149, %163
  store i16* %100, i16** %97, align 8
  store i16* %100, i16** %99, align 8
  br label %324

165:                                              ; preds = %105
  %166 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 21
  %167 = load i8, i8* %166, align 1
  %168 = icmp sgt i8 %167, 0
  br i1 %168, label %169, label %324

169:                                              ; preds = %165
  %170 = sext i8 %167 to i64
  %171 = and i64 %170, 4294967295
  br label %172

172:                                              ; preds = %295, %169
  %173 = phi i64 [ 0, %169 ], [ %296, %295 ]
  %174 = phi i8* [ %45, %169 ], [ %299, %295 ]
  %175 = icmp eq i8* %174, %3
  br i1 %175, label %176, label %295

176:                                              ; preds = %172
  %177 = and i64 %173, 4294967295
  %178 = add nuw nsw i64 %177, 1
  %179 = icmp sgt i64 %178, %170
  %180 = select i1 %179, i64 %178, i64 %170
  %181 = sub nsw i64 %180, %177
  %182 = icmp ult i64 %181, 32
  br i1 %182, label %283, label %183

183:                                              ; preds = %176
  %184 = getelementptr %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 0
  %185 = add nuw nsw i64 %177, 1
  %186 = icmp sgt i64 %185, %170
  %187 = select i1 %186, i64 %185, i64 %170
  %188 = add nuw nsw i64 %187, 104
  %189 = sub nsw i64 %188, %177
  %190 = getelementptr i8, i8* %14, i64 %189
  %191 = add nuw nsw i64 %177, 104
  %192 = getelementptr i8, i8* %14, i64 %191
  %193 = add nuw nsw i64 %187, 104
  %194 = getelementptr i8, i8* %14, i64 %193
  %195 = icmp ult i8* %184, %194
  %196 = icmp ult i8* %192, %190
  %197 = and i1 %195, %196
  br i1 %197, label %283, label %198

198:                                              ; preds = %183
  %199 = and i64 %181, -32
  %200 = add nsw i64 %177, %199
  %201 = add nsw i64 %199, -32
  %202 = lshr exact i64 %201, 5
  %203 = add nuw nsw i64 %202, 1
  %204 = and i64 %203, 3
  %205 = icmp ult i64 %201, 96
  br i1 %205, label %261, label %206

206:                                              ; preds = %198
  %207 = sub nsw i64 %203, %204
  br label %208

208:                                              ; preds = %208, %206
  %209 = phi i64 [ 0, %206 ], [ %258, %208 ]
  %210 = phi i64 [ %207, %206 ], [ %259, %208 ]
  %211 = add i64 %177, %209
  %212 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %211
  %213 = bitcast i8* %212 to <16 x i8>*
  %214 = load <16 x i8>, <16 x i8>* %213, align 1, !alias.scope !25
  %215 = getelementptr inbounds i8, i8* %212, i64 16
  %216 = bitcast i8* %215 to <16 x i8>*
  %217 = load <16 x i8>, <16 x i8>* %216, align 1, !alias.scope !25
  %218 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %209
  %219 = bitcast i8* %218 to <16 x i8>*
  store <16 x i8> %214, <16 x i8>* %219, align 1, !alias.scope !28, !noalias !25
  %220 = getelementptr inbounds i8, i8* %218, i64 16
  %221 = bitcast i8* %220 to <16 x i8>*
  store <16 x i8> %217, <16 x i8>* %221, align 1, !alias.scope !28, !noalias !25
  %222 = or i64 %209, 32
  %223 = add i64 %177, %222
  %224 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %223
  %225 = bitcast i8* %224 to <16 x i8>*
  %226 = load <16 x i8>, <16 x i8>* %225, align 1, !alias.scope !25
  %227 = getelementptr inbounds i8, i8* %224, i64 16
  %228 = bitcast i8* %227 to <16 x i8>*
  %229 = load <16 x i8>, <16 x i8>* %228, align 1, !alias.scope !25
  %230 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %222
  %231 = bitcast i8* %230 to <16 x i8>*
  store <16 x i8> %226, <16 x i8>* %231, align 1, !alias.scope !28, !noalias !25
  %232 = getelementptr inbounds i8, i8* %230, i64 16
  %233 = bitcast i8* %232 to <16 x i8>*
  store <16 x i8> %229, <16 x i8>* %233, align 1, !alias.scope !28, !noalias !25
  %234 = or i64 %209, 64
  %235 = add i64 %177, %234
  %236 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %235
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !25
  %239 = getelementptr inbounds i8, i8* %236, i64 16
  %240 = bitcast i8* %239 to <16 x i8>*
  %241 = load <16 x i8>, <16 x i8>* %240, align 1, !alias.scope !25
  %242 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %234
  %243 = bitcast i8* %242 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %243, align 1, !alias.scope !28, !noalias !25
  %244 = getelementptr inbounds i8, i8* %242, i64 16
  %245 = bitcast i8* %244 to <16 x i8>*
  store <16 x i8> %241, <16 x i8>* %245, align 1, !alias.scope !28, !noalias !25
  %246 = or i64 %209, 96
  %247 = add i64 %177, %246
  %248 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %247
  %249 = bitcast i8* %248 to <16 x i8>*
  %250 = load <16 x i8>, <16 x i8>* %249, align 1, !alias.scope !25
  %251 = getelementptr inbounds i8, i8* %248, i64 16
  %252 = bitcast i8* %251 to <16 x i8>*
  %253 = load <16 x i8>, <16 x i8>* %252, align 1, !alias.scope !25
  %254 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %246
  %255 = bitcast i8* %254 to <16 x i8>*
  store <16 x i8> %250, <16 x i8>* %255, align 1, !alias.scope !28, !noalias !25
  %256 = getelementptr inbounds i8, i8* %254, i64 16
  %257 = bitcast i8* %256 to <16 x i8>*
  store <16 x i8> %253, <16 x i8>* %257, align 1, !alias.scope !28, !noalias !25
  %258 = add i64 %209, 128
  %259 = add i64 %210, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %208, !llvm.loop !30

261:                                              ; preds = %208, %198
  %262 = phi i64 [ 0, %198 ], [ %258, %208 ]
  %263 = icmp eq i64 %204, 0
  br i1 %263, label %281, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %278, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %279, %264 ], [ %204, %261 ]
  %267 = add i64 %177, %265
  %268 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %267
  %269 = bitcast i8* %268 to <16 x i8>*
  %270 = load <16 x i8>, <16 x i8>* %269, align 1, !alias.scope !25
  %271 = getelementptr inbounds i8, i8* %268, i64 16
  %272 = bitcast i8* %271 to <16 x i8>*
  %273 = load <16 x i8>, <16 x i8>* %272, align 1, !alias.scope !25
  %274 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %265
  %275 = bitcast i8* %274 to <16 x i8>*
  store <16 x i8> %270, <16 x i8>* %275, align 1, !alias.scope !28, !noalias !25
  %276 = getelementptr inbounds i8, i8* %274, i64 16
  %277 = bitcast i8* %276 to <16 x i8>*
  store <16 x i8> %273, <16 x i8>* %277, align 1, !alias.scope !28, !noalias !25
  %278 = add i64 %265, 32
  %279 = add i64 %266, -1
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %281, label %264, !llvm.loop !31

281:                                              ; preds = %264, %261
  %282 = icmp eq i64 %181, %199
  br i1 %282, label %301, label %283

283:                                              ; preds = %281, %183, %176
  %284 = phi i64 [ 0, %183 ], [ 0, %176 ], [ %199, %281 ]
  %285 = phi i64 [ %177, %183 ], [ %177, %176 ], [ %200, %281 ]
  br label %286

286:                                              ; preds = %283, %286
  %287 = phi i64 [ %292, %286 ], [ %284, %283 ]
  %288 = phi i64 [ %289, %286 ], [ %285, %283 ]
  %289 = add nuw nsw i64 %288, 1
  %290 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %288
  %291 = load i8, i8* %290, align 1
  %292 = add nuw nsw i64 %287, 1
  %293 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %287
  store i8 %291, i8* %293, align 1
  %294 = icmp slt i64 %289, %170
  br i1 %294, label %286, label %301, !llvm.loop !32

295:                                              ; preds = %172
  %296 = add nuw nsw i64 %173, 1
  %297 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 %173
  %298 = load i8, i8* %297, align 1
  %299 = getelementptr inbounds i8, i8* %174, i64 1
  store i8 %298, i8* %174, align 1
  %300 = icmp eq i64 %296, %171
  br i1 %300, label %304, label %172

301:                                              ; preds = %286, %281
  %302 = phi i64 [ %199, %281 ], [ %292, %286 ]
  %303 = trunc i64 %302 to i8
  store i8 %303, i8* %166, align 1
  store i8* %3, i8** %2, align 8
  store i32 15, i32* %12, align 4
  br label %670

304:                                              ; preds = %295
  store i8 0, i8* %166, align 1
  store i8* %299, i8** %2, align 8
  %305 = icmp eq i8 %11, 0
  br i1 %305, label %306, label %324

306:                                              ; preds = %304
  %307 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 34
  %308 = load i8, i8* %307, align 1
  %309 = icmp sgt i8 %308, -1
  br i1 %309, label %310, label %324

310:                                              ; preds = %306
  %311 = load i16*, i16** %99, align 8
  %312 = load i16*, i16** %97, align 8
  %313 = icmp eq i16* %311, %312
  br i1 %313, label %314, label %324

314:                                              ; preds = %310
  %315 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 23
  %316 = load i8, i8* %315, align 1
  %317 = icmp eq i8 %316, 0
  br i1 %317, label %318, label %324

318:                                              ; preds = %314
  %319 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 35
  %320 = load i8, i8* %319, align 2
  %321 = icmp sgt i8 %320, -1
  %322 = icmp eq i8* %40, %106
  %323 = and i1 %322, %321
  br i1 %323, label %670, label %324

324:                                              ; preds = %304, %165, %318, %314, %310, %306, %164
  %325 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 6
  %326 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %325, align 8
  %327 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %326, i64 0, i32 3
  %328 = load %struct.UConverterStaticData*, %struct.UConverterStaticData** %327, align 8
  %329 = getelementptr inbounds %struct.UConverterStaticData, %struct.UConverterStaticData* %328, i64 0, i32 4
  %330 = load i8, i8* %329, align 1
  %331 = icmp eq i8 %330, 4
  %332 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %333 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %332, align 8
  br i1 %331, label %334, label %340

334:                                              ; preds = %324
  %335 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %333, i64 0, i32 6
  %336 = load %struct.UConverterImpl*, %struct.UConverterImpl** %335, align 8
  %337 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %336, i64 0, i32 17
  %338 = load void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)** %337, align 8
  %339 = icmp eq void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)* %338, null
  br i1 %339, label %340, label %352

340:                                              ; preds = %324, %334
  %341 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %333, i64 0, i32 3
  %342 = load %struct.UConverterStaticData*, %struct.UConverterStaticData** %341, align 8
  %343 = getelementptr inbounds %struct.UConverterStaticData, %struct.UConverterStaticData* %342, i64 0, i32 4
  %344 = load i8, i8* %343, align 1
  %345 = icmp eq i8 %344, 4
  br i1 %345, label %346, label %361

346:                                              ; preds = %340
  %347 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %326, i64 0, i32 6
  %348 = load %struct.UConverterImpl*, %struct.UConverterImpl** %347, align 8
  %349 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %348, i64 0, i32 16
  %350 = load void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)** %349, align 8
  %351 = icmp eq void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)* %350, null
  br i1 %351, label %361, label %352

352:                                              ; preds = %334, %346
  %353 = phi void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)* [ %350, %346 ], [ %338, %334 ]
  %354 = icmp ne void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)* %353, null
  %355 = ptrtoint i16* %98 to i64
  %356 = ptrtoint i16* %100 to i64
  %357 = sub i64 %355, %356
  %358 = icmp sgt i64 %357, 64
  %359 = getelementptr inbounds i16, i16* %100, i64 32
  %360 = select i1 %358, i16* %359, i16* %98
  br label %361

361:                                              ; preds = %346, %340, %352
  %362 = phi i1 [ %354, %352 ], [ false, %340 ], [ false, %346 ]
  %363 = phi void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)* [ %353, %352 ], [ null, %340 ], [ null, %346 ]
  %364 = phi i16* [ %360, %352 ], [ %98, %340 ], [ %98, %346 ]
  %365 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %23, i64 0, i32 2
  store %struct.UConverter* %0, %struct.UConverter** %365, align 8
  %366 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %23, i64 0, i32 1
  store i8 0, i8* %366, align 2
  %367 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %23, i64 0, i32 7
  store i32* null, i32** %367, align 8
  %368 = bitcast i8** %2 to i64*
  %369 = load i64, i64* %368, align 8
  %370 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %23, i64 0, i32 5
  %371 = bitcast i8** %370 to i64*
  store i64 %369, i64* %371, align 8
  %372 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %23, i64 0, i32 6
  store i8* %3, i8** %372, align 8
  %373 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %23, i64 0, i32 0
  store i16 56, i16* %373, align 8
  %374 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %22, i64 0, i32 2
  store %struct.UConverter* %1, %struct.UConverter** %374, align 8
  %375 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %22, i64 0, i32 1
  store i8 %11, i8* %375, align 2
  %376 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %22, i64 0, i32 7
  store i32* null, i32** %376, align 8
  %377 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %22, i64 0, i32 3
  store i8* %40, i8** %377, align 8
  %378 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %22, i64 0, i32 4
  store i8* %106, i8** %378, align 8
  %379 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %22, i64 0, i32 6
  store i16* %364, i16** %379, align 8
  %380 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %22, i64 0, i32 0
  store i16 56, i16* %380, align 8
  %381 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 34
  %382 = bitcast i16** %99 to i64*
  %383 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %23, i64 0, i32 3
  %384 = bitcast i16** %383 to i64*
  %385 = bitcast i16** %97 to i64*
  %386 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %23, i64 0, i32 4
  %387 = bitcast i16** %386 to i64*
  %388 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 23
  %389 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 35
  %390 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 12
  %391 = icmp ne i8 %11, 0
  %392 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 31
  %393 = getelementptr inbounds i16, i16* %100, i64 1
  %394 = icmp eq i8 %11, 0
  %395 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %22, i64 0, i32 5
  %396 = bitcast i16** %395 to i64*
  %397 = getelementptr %struct.UConverter, %struct.UConverter* %1, i64 0, i32 30, i64 0
  br label %398

398:                                              ; preds = %551, %361
  %399 = load i16*, i16** %99, align 8
  %400 = load i16*, i16** %97, align 8
  %401 = icmp ult i16* %399, %400
  %402 = ptrtoint i16* %399 to i64
  %403 = ptrtoint i16* %400 to i64
  br i1 %401, label %413, label %404

404:                                              ; preds = %398
  %405 = load i32, i32* %12, align 4
  %406 = icmp slt i32 %405, 1
  br i1 %406, label %407, label %413

407:                                              ; preds = %404
  %408 = load i8, i8* %381, align 1
  %409 = icmp sgt i8 %408, -1
  %410 = load i8, i8* %366, align 2
  %411 = icmp eq i8 %410, 0
  %412 = and i1 %409, %411
  br i1 %412, label %418, label %413

413:                                              ; preds = %407, %404, %398
  store i64 %402, i64* %384, align 8
  store i64 %403, i64* %387, align 8
  call fastcc void @_ZL24_fromUnicodeWithCallbackP25UConverterFromUnicodeArgsP10UErrorCode(%struct.UConverterFromUnicodeArgs* nonnull %23, i32* %12)
  %414 = load i32, i32* %12, align 4
  %415 = icmp slt i32 %414, 1
  br i1 %415, label %418, label %416

416:                                              ; preds = %413
  %417 = load i64, i64* %384, align 8
  store i64 %417, i64* %382, align 8
  br label %653

418:                                              ; preds = %407, %413
  store i16* %100, i16** %97, align 8
  store i16* %100, i16** %99, align 8
  %419 = load i8, i8* %388, align 1
  %420 = icmp sgt i8 %419, 0
  br i1 %420, label %421, label %555

421:                                              ; preds = %418
  %422 = load i16*, i16** %97, align 8
  %423 = sext i8 %419 to i64
  %424 = and i64 %423, 4294967295
  br label %425

425:                                              ; preds = %544, %421
  %426 = phi i64 [ 0, %421 ], [ %545, %544 ]
  %427 = phi i16* [ %422, %421 ], [ %548, %544 ]
  %428 = icmp eq i16* %427, %364
  br i1 %428, label %429, label %544

429:                                              ; preds = %425
  %430 = and i64 %426, 4294967295
  %431 = add nuw nsw i64 %430, 1
  %432 = icmp sgt i64 %431, %423
  %433 = select i1 %432, i64 %431, i64 %423
  %434 = sub nsw i64 %433, %430
  %435 = icmp ult i64 %434, 16
  br i1 %435, label %532, label %436

436:                                              ; preds = %429
  %437 = add nuw nsw i64 %430, 1
  %438 = icmp sgt i64 %437, %423
  %439 = select i1 %438, i64 %437, i64 %423
  %440 = sub nsw i64 %439, %430
  %441 = getelementptr %struct.UConverter, %struct.UConverter* %1, i64 0, i32 30, i64 %440
  %442 = getelementptr %struct.UConverter, %struct.UConverter* %1, i64 0, i32 30, i64 %430
  %443 = getelementptr %struct.UConverter, %struct.UConverter* %1, i64 0, i32 30, i64 %439
  %444 = icmp ult i16* %397, %443
  %445 = icmp ult i16* %442, %441
  %446 = and i1 %444, %445
  br i1 %446, label %532, label %447

447:                                              ; preds = %436
  %448 = and i64 %434, -16
  %449 = add nsw i64 %430, %448
  %450 = add nsw i64 %448, -16
  %451 = lshr exact i64 %450, 4
  %452 = add nuw nsw i64 %451, 1
  %453 = and i64 %452, 3
  %454 = icmp ult i64 %450, 48
  br i1 %454, label %510, label %455

455:                                              ; preds = %447
  %456 = sub nsw i64 %452, %453
  br label %457

457:                                              ; preds = %457, %455
  %458 = phi i64 [ 0, %455 ], [ %507, %457 ]
  %459 = phi i64 [ %456, %455 ], [ %508, %457 ]
  %460 = add i64 %430, %458
  %461 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 30, i64 %460
  %462 = bitcast i16* %461 to <8 x i16>*
  %463 = load <8 x i16>, <8 x i16>* %462, align 2, !alias.scope !33
  %464 = getelementptr inbounds i16, i16* %461, i64 8
  %465 = bitcast i16* %464 to <8 x i16>*
  %466 = load <8 x i16>, <8 x i16>* %465, align 2, !alias.scope !33
  %467 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 30, i64 %458
  %468 = bitcast i16* %467 to <8 x i16>*
  store <8 x i16> %463, <8 x i16>* %468, align 2, !alias.scope !36, !noalias !33
  %469 = getelementptr inbounds i16, i16* %467, i64 8
  %470 = bitcast i16* %469 to <8 x i16>*
  store <8 x i16> %466, <8 x i16>* %470, align 2, !alias.scope !36, !noalias !33
  %471 = or i64 %458, 16
  %472 = add i64 %430, %471
  %473 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 30, i64 %472
  %474 = bitcast i16* %473 to <8 x i16>*
  %475 = load <8 x i16>, <8 x i16>* %474, align 2, !alias.scope !33
  %476 = getelementptr inbounds i16, i16* %473, i64 8
  %477 = bitcast i16* %476 to <8 x i16>*
  %478 = load <8 x i16>, <8 x i16>* %477, align 2, !alias.scope !33
  %479 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 30, i64 %471
  %480 = bitcast i16* %479 to <8 x i16>*
  store <8 x i16> %475, <8 x i16>* %480, align 2, !alias.scope !36, !noalias !33
  %481 = getelementptr inbounds i16, i16* %479, i64 8
  %482 = bitcast i16* %481 to <8 x i16>*
  store <8 x i16> %478, <8 x i16>* %482, align 2, !alias.scope !36, !noalias !33
  %483 = or i64 %458, 32
  %484 = add i64 %430, %483
  %485 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 30, i64 %484
  %486 = bitcast i16* %485 to <8 x i16>*
  %487 = load <8 x i16>, <8 x i16>* %486, align 2, !alias.scope !33
  %488 = getelementptr inbounds i16, i16* %485, i64 8
  %489 = bitcast i16* %488 to <8 x i16>*
  %490 = load <8 x i16>, <8 x i16>* %489, align 2, !alias.scope !33
  %491 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 30, i64 %483
  %492 = bitcast i16* %491 to <8 x i16>*
  store <8 x i16> %487, <8 x i16>* %492, align 2, !alias.scope !36, !noalias !33
  %493 = getelementptr inbounds i16, i16* %491, i64 8
  %494 = bitcast i16* %493 to <8 x i16>*
  store <8 x i16> %490, <8 x i16>* %494, align 2, !alias.scope !36, !noalias !33
  %495 = or i64 %458, 48
  %496 = add i64 %430, %495
  %497 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 30, i64 %496
  %498 = bitcast i16* %497 to <8 x i16>*
  %499 = load <8 x i16>, <8 x i16>* %498, align 2, !alias.scope !33
  %500 = getelementptr inbounds i16, i16* %497, i64 8
  %501 = bitcast i16* %500 to <8 x i16>*
  %502 = load <8 x i16>, <8 x i16>* %501, align 2, !alias.scope !33
  %503 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 30, i64 %495
  %504 = bitcast i16* %503 to <8 x i16>*
  store <8 x i16> %499, <8 x i16>* %504, align 2, !alias.scope !36, !noalias !33
  %505 = getelementptr inbounds i16, i16* %503, i64 8
  %506 = bitcast i16* %505 to <8 x i16>*
  store <8 x i16> %502, <8 x i16>* %506, align 2, !alias.scope !36, !noalias !33
  %507 = add i64 %458, 64
  %508 = add i64 %459, -4
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %510, label %457, !llvm.loop !38

510:                                              ; preds = %457, %447
  %511 = phi i64 [ 0, %447 ], [ %507, %457 ]
  %512 = icmp eq i64 %453, 0
  br i1 %512, label %530, label %513

513:                                              ; preds = %510, %513
  %514 = phi i64 [ %527, %513 ], [ %511, %510 ]
  %515 = phi i64 [ %528, %513 ], [ %453, %510 ]
  %516 = add i64 %430, %514
  %517 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 30, i64 %516
  %518 = bitcast i16* %517 to <8 x i16>*
  %519 = load <8 x i16>, <8 x i16>* %518, align 2, !alias.scope !33
  %520 = getelementptr inbounds i16, i16* %517, i64 8
  %521 = bitcast i16* %520 to <8 x i16>*
  %522 = load <8 x i16>, <8 x i16>* %521, align 2, !alias.scope !33
  %523 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 30, i64 %514
  %524 = bitcast i16* %523 to <8 x i16>*
  store <8 x i16> %519, <8 x i16>* %524, align 2, !alias.scope !36, !noalias !33
  %525 = getelementptr inbounds i16, i16* %523, i64 8
  %526 = bitcast i16* %525 to <8 x i16>*
  store <8 x i16> %522, <8 x i16>* %526, align 2, !alias.scope !36, !noalias !33
  %527 = add i64 %514, 16
  %528 = add i64 %515, -1
  %529 = icmp eq i64 %528, 0
  br i1 %529, label %530, label %513, !llvm.loop !39

530:                                              ; preds = %513, %510
  %531 = icmp eq i64 %434, %448
  br i1 %531, label %552, label %532

532:                                              ; preds = %530, %436, %429
  %533 = phi i64 [ 0, %436 ], [ 0, %429 ], [ %448, %530 ]
  %534 = phi i64 [ %430, %436 ], [ %430, %429 ], [ %449, %530 ]
  br label %535

535:                                              ; preds = %532, %535
  %536 = phi i64 [ %541, %535 ], [ %533, %532 ]
  %537 = phi i64 [ %538, %535 ], [ %534, %532 ]
  %538 = add nuw nsw i64 %537, 1
  %539 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 30, i64 %537
  %540 = load i16, i16* %539, align 2
  %541 = add nuw nsw i64 %536, 1
  %542 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 30, i64 %536
  store i16 %540, i16* %542, align 2
  %543 = icmp slt i64 %538, %423
  br i1 %543, label %535, label %552, !llvm.loop !40

544:                                              ; preds = %425
  %545 = add nuw nsw i64 %426, 1
  %546 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 30, i64 %426
  %547 = load i16, i16* %546, align 2
  %548 = getelementptr inbounds i16, i16* %427, i64 1
  store i16 %547, i16* %427, align 2
  %549 = icmp eq i64 %545, %424
  br i1 %549, label %550, label %425

550:                                              ; preds = %544
  store i8 0, i8* %388, align 1
  store i16* %548, i16** %97, align 8
  br label %551

551:                                              ; preds = %550, %633, %636, %639, %642, %632, %630, %552, %587
  br label %398

552:                                              ; preds = %535, %530
  %553 = phi i64 [ %448, %530 ], [ %541, %535 ]
  %554 = trunc i64 %553 to i8
  store i8 %554, i8* %388, align 1
  store i16* %364, i16** %97, align 8
  store i32 0, i32* %12, align 4
  br label %551

555:                                              ; preds = %418
  %556 = load i8*, i8** %377, align 8
  %557 = icmp eq i8* %556, %106
  br i1 %557, label %558, label %568

558:                                              ; preds = %555
  %559 = load i8, i8* %389, align 2
  %560 = icmp sgt i8 %559, -1
  br i1 %560, label %561, label %568

561:                                              ; preds = %558
  %562 = load i8, i8* %390, align 8
  %563 = icmp eq i8 %562, 0
  br i1 %563, label %564, label %568

564:                                              ; preds = %561
  %565 = load i8, i8* %366, align 2
  %566 = icmp eq i8 %565, 0
  %567 = and i1 %391, %566
  br i1 %567, label %568, label %653

568:                                              ; preds = %564, %561, %558, %555
  br i1 %362, label %569, label %622

569:                                              ; preds = %568
  %570 = load i32, i32* %392, align 8
  %571 = icmp slt i32 %570, 0
  br i1 %571, label %572, label %622

572:                                              ; preds = %569
  %573 = load i8, i8* %389, align 2
  %574 = icmp eq i8 %573, 0
  br i1 %574, label %575, label %622

575:                                              ; preds = %572
  %576 = load i32, i32* %12, align 4
  %577 = icmp eq i32 %576, -127
  br i1 %577, label %578, label %579

578:                                              ; preds = %575
  store i32 0, i32* %12, align 4
  br label %579

579:                                              ; preds = %578, %575
  call void %363(%struct.UConverterFromUnicodeArgs* nonnull %23, %struct.UConverterToUnicodeArgs* nonnull %22, i32* %12) #10
  %580 = load i32, i32* %12, align 4
  %581 = icmp eq i32 %580, 15
  br i1 %581, label %653, label %582

582:                                              ; preds = %579
  %583 = icmp slt i32 %580, 1
  br i1 %583, label %588, label %584

584:                                              ; preds = %582
  %585 = load i8, i8* %390, align 8
  %586 = icmp sgt i8 %585, 0
  br i1 %586, label %622, label %587

587:                                              ; preds = %584
  store i16* %393, i16** %97, align 8
  store i16* %393, i16** %99, align 8
  br label %551

588:                                              ; preds = %582
  %589 = icmp eq i32 %580, -127
  br i1 %589, label %590, label %591

590:                                              ; preds = %588
  store i32 0, i32* %12, align 4
  br label %622

591:                                              ; preds = %588
  br i1 %394, label %643, label %592

592:                                              ; preds = %591
  %593 = load i8, i8* %390, align 8
  %594 = icmp sgt i8 %593, 0
  br i1 %594, label %595, label %596

595:                                              ; preds = %592
  store i32 11, i32* %12, align 4
  br label %622

596:                                              ; preds = %592
  %597 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %325, align 8
  %598 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %597, i64 0, i32 7
  %599 = load i32, i32* %598, align 8
  %600 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 14
  store i32 %599, i32* %600, align 8
  %601 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 15
  store i32 0, i32* %601, align 4
  store i8 0, i8* %390, align 8
  store i8 0, i8* %388, align 1
  %602 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %1, i64 0, i32 20
  store i8 0, i8* %602, align 2
  store i8 0, i8* %389, align 2
  %603 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %597, i64 0, i32 6
  %604 = load %struct.UConverterImpl*, %struct.UConverterImpl** %603, align 8
  %605 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %604, i64 0, i32 5
  %606 = load void (%struct.UConverter*, i32)*, void (%struct.UConverter*, i32)** %605, align 8
  %607 = icmp eq void (%struct.UConverter*, i32)* %606, null
  br i1 %607, label %609, label %608

608:                                              ; preds = %596
  call void %606(%struct.UConverter* nonnull %1, i32 1) #10
  br label %609

609:                                              ; preds = %608, %596
  %610 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %611 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %610, align 8
  %612 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 16
  store i32 0, i32* %612, align 8
  %613 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 17
  store i32 0, i32* %613, align 4
  %614 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 21
  store i8 0, i8* %614, align 1
  %615 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 22
  store i8 0, i8* %615, align 4
  store i32 -1, i32* %392, align 8
  store i8 0, i8* %381, align 1
  %616 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %611, i64 0, i32 6
  %617 = load %struct.UConverterImpl*, %struct.UConverterImpl** %616, align 8
  %618 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %617, i64 0, i32 5
  %619 = load void (%struct.UConverter*, i32)*, void (%struct.UConverter*, i32)** %618, align 8
  %620 = icmp eq void (%struct.UConverter*, i32)* %619, null
  br i1 %620, label %648, label %621

621:                                              ; preds = %609
  call void %619(%struct.UConverter* nonnull %0, i32 2) #10
  br label %648

622:                                              ; preds = %590, %595, %584, %572, %569, %568
  store i16* %100, i16** %395, align 8
  call fastcc void @_ZL22_toUnicodeWithCallbackP23UConverterToUnicodeArgsP10UErrorCode(%struct.UConverterToUnicodeArgs* nonnull %22, i32* %12)
  %623 = load i64, i64* %396, align 8
  store i64 %623, i64* %385, align 8
  %624 = load i32, i32* %12, align 4
  %625 = icmp eq i32 %624, 15
  %626 = inttoptr i64 %623 to i16*
  br i1 %625, label %632, label %627

627:                                              ; preds = %622
  %628 = icmp slt i32 %624, 1
  br i1 %628, label %629, label %653

629:                                              ; preds = %627
  br i1 %394, label %630, label %633

630:                                              ; preds = %629
  %631 = icmp eq i16* %100, %626
  br i1 %631, label %643, label %551

632:                                              ; preds = %622
  store i32 0, i32* %12, align 4
  br i1 %394, label %551, label %633

633:                                              ; preds = %629, %632
  %634 = load i8*, i8** %377, align 8
  %635 = icmp eq i8* %634, %106
  br i1 %635, label %636, label %551

636:                                              ; preds = %633
  %637 = load i8, i8* %389, align 2
  %638 = icmp sgt i8 %637, -1
  br i1 %638, label %639, label %551

639:                                              ; preds = %636
  %640 = load i8, i8* %388, align 1
  %641 = icmp eq i8 %640, 0
  br i1 %641, label %642, label %551

642:                                              ; preds = %639
  store i8 1, i8* %366, align 2
  br label %551

643:                                              ; preds = %591, %630
  %644 = bitcast i8** %377 to i64*
  %645 = load i64, i64* %644, align 8
  %646 = bitcast i8** %4 to i64*
  store i64 %645, i64* %646, align 8
  %647 = load i64, i64* %371, align 8
  store i64 %647, i64* %368, align 8
  br label %670

648:                                              ; preds = %621, %609
  %649 = bitcast i8** %377 to i64*
  %650 = load i64, i64* %649, align 8
  %651 = bitcast i8** %4 to i64*
  store i64 %650, i64* %651, align 8
  %652 = load i64, i64* %371, align 8
  store i64 %652, i64* %368, align 8
  br label %658

653:                                              ; preds = %564, %627, %579, %416
  %654 = bitcast i8** %377 to i64*
  %655 = load i64, i64* %654, align 8
  %656 = bitcast i8** %4 to i64*
  store i64 %655, i64* %656, align 8
  %657 = load i64, i64* %371, align 8
  store i64 %657, i64* %368, align 8
  br i1 %394, label %670, label %658

658:                                              ; preds = %648, %653
  %659 = phi i64 [ %652, %648 ], [ %657, %653 ]
  %660 = inttoptr i64 %659 to i8*
  %661 = load i32, i32* %12, align 4
  %662 = icmp sgt i32 %661, 0
  br i1 %662, label %670, label %663

663:                                              ; preds = %658
  %664 = icmp eq i8* %660, %3
  br i1 %664, label %669, label %665

665:                                              ; preds = %663
  store i8 0, i8* %660, align 1
  %666 = load i32, i32* %12, align 4
  %667 = icmp eq i32 %666, -124
  br i1 %667, label %668, label %670

668:                                              ; preds = %665
  store i32 0, i32* %12, align 4
  br label %670

669:                                              ; preds = %663
  store i32 -124, i32* %12, align 4
  br label %670

670:                                              ; preds = %643, %301, %665, %668, %669, %653, %658, %318, %13, %30, %95, %77, %72, %56, %49
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %27) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %24) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ucnv_convert_69(i8*, i8*, i8*, i32, i8*, i32, i32*) local_unnamed_addr #0 {
  %8 = alloca %struct.UConverter, align 8
  %9 = alloca %struct.UConverter, align 8
  %10 = bitcast %struct.UConverter* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %10) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 288, i1 false)
  %11 = bitcast %struct.UConverter* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %11) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 288, i1 false)
  %12 = icmp eq i32* %6, null
  br i1 %12, label %47, label %13

13:                                               ; preds = %7
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %16, label %47

16:                                               ; preds = %13
  %17 = icmp eq i8* %4, null
  %18 = icmp slt i32 %5, -1
  %19 = or i1 %17, %18
  %20 = icmp slt i32 %3, 0
  %21 = or i1 %20, %19
  br i1 %21, label %26, label %22

22:                                               ; preds = %16
  %23 = icmp sgt i32 %3, 0
  %24 = icmp eq i8* %2, null
  %25 = and i1 %24, %23
  br i1 %25, label %26, label %27

26:                                               ; preds = %22, %16
  store i32 1, i32* %6, align 4
  br label %47

27:                                               ; preds = %22
  %28 = icmp eq i32 %5, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %27
  %30 = icmp slt i32 %5, 0
  br i1 %30, label %31, label %36

31:                                               ; preds = %29
  %32 = load i8, i8* %4, align 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %31, %27
  %35 = tail call i32 @u_terminateChars_69(i8* %2, i32 %3, i32 0, i32* nonnull %6) #10
  br label %47

36:                                               ; preds = %31, %29
  %37 = call %struct.UConverter* @ucnv_createConverter_69(%struct.UConverter* nonnull %8, i8* %1, i32* nonnull %6) #10
  %38 = load i32, i32* %6, align 4
  %39 = icmp slt i32 %38, 1
  br i1 %39, label %40, label %47

40:                                               ; preds = %36
  %41 = call %struct.UConverter* @ucnv_createConverter_69(%struct.UConverter* nonnull %9, i8* %0, i32* nonnull %6) #10
  %42 = load i32, i32* %6, align 4
  %43 = icmp slt i32 %42, 1
  br i1 %43, label %45, label %44

44:                                               ; preds = %40
  call void @ucnv_close_69(%struct.UConverter* %37)
  br label %47

45:                                               ; preds = %40
  %46 = call fastcc i32 @_ZL20ucnv_internalConvertP10UConverterS0_PciPKciP10UErrorCode(%struct.UConverter* %41, %struct.UConverter* %37, i8* %2, i32 %3, i8* nonnull %4, i32 %5, i32* nonnull %6)
  call void @ucnv_close_69(%struct.UConverter* %37)
  call void @ucnv_close_69(%struct.UConverter* %41)
  br label %47

47:                                               ; preds = %36, %7, %13, %45, %44, %34, %26
  %48 = phi i32 [ 0, %26 ], [ %35, %34 ], [ 0, %44 ], [ %46, %45 ], [ 0, %13 ], [ 0, %7 ], [ 0, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %10) #10
  ret i32 %48
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL20ucnv_internalConvertP10UConverterS0_PciPKciP10UErrorCode(%struct.UConverter*, %struct.UConverter*, i8*, i32, i8*, i32, i32*) unnamed_addr #0 {
  %8 = alloca i8*, align 8
  %9 = alloca [1024 x i16], align 16
  %10 = alloca i16*, align 8
  %11 = alloca i16*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca [1024 x i8], align 16
  store i8* %4, i8** %8, align 8
  %14 = bitcast [1024 x i16]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %14) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 2048, i1 false)
  %15 = bitcast i16** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %10, align 8
  %16 = bitcast i16** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %11, align 8
  %17 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %18 = icmp slt i32 %5, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %7
  %20 = tail call i64 @strlen(i8* %4)
  br label %23

21:                                               ; preds = %7
  %22 = sext i32 %5 to i64
  br label %23

23:                                               ; preds = %21, %19
  %24 = phi i64 [ %20, %19 ], [ %22, %21 ]
  %25 = getelementptr inbounds i8, i8* %4, i64 %24
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = tail call i32 @u_terminateChars_69(i8* %2, i32 %3, i32 0, i32* %6) #10
  br label %63

29:                                               ; preds = %23
  %30 = getelementptr inbounds [1024 x i16], [1024 x i16]* %9, i64 0, i64 0
  store i16* %30, i16** %11, align 8
  store i16* %30, i16** %10, align 8
  store i8* %2, i8** %12, align 8
  %31 = icmp sgt i32 %3, 0
  br i1 %31, label %32, label %41

32:                                               ; preds = %29
  %33 = sext i32 %3 to i64
  %34 = getelementptr inbounds i8, i8* %2, i64 %33
  %35 = getelementptr inbounds [1024 x i16], [1024 x i16]* %9, i64 0, i64 1024
  call void @ucnv_convertEx_69(%struct.UConverter* %0, %struct.UConverter* %1, i8** nonnull %12, i8* %34, i8** nonnull %8, i8* %25, i16* nonnull %30, i16** nonnull %10, i16** nonnull %11, i16* %35, i8 signext 0, i8 signext 1, i32* %6)
  %36 = bitcast i8** %12 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = ptrtoint i8* %2 to i64
  %39 = sub i64 %37, %38
  %40 = trunc i64 %39 to i32
  br label %41

41:                                               ; preds = %32, %29
  %42 = phi i32 [ %40, %32 ], [ 0, %29 ]
  %43 = load i32, i32* %6, align 4
  %44 = icmp eq i32 %43, 15
  %45 = icmp eq i32 %3, 0
  %46 = or i1 %45, %44
  br i1 %46, label %47, label %63

47:                                               ; preds = %41
  %48 = getelementptr inbounds [1024 x i8], [1024 x i8]* %13, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %48) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %48, i8 -86, i64 1024, i1 false)
  %49 = getelementptr inbounds [1024 x i8], [1024 x i8]* %13, i64 0, i64 1024
  %50 = getelementptr inbounds [1024 x i16], [1024 x i16]* %9, i64 0, i64 1024
  %51 = bitcast i8** %12 to i64*
  %52 = ptrtoint [1024 x i8]* %13 to i64
  br label %53

53:                                               ; preds = %53, %47
  %54 = phi i32 [ %42, %47 ], [ %58, %53 ]
  store i32 0, i32* %6, align 4
  store i8* %48, i8** %12, align 8
  call void @ucnv_convertEx_69(%struct.UConverter* %0, %struct.UConverter* %1, i8** nonnull %12, i8* %49, i8** nonnull %8, i8* %25, i16* nonnull %30, i16** nonnull %10, i16** nonnull %11, i16* %50, i8 signext 0, i8 signext 1, i32* %6)
  %55 = load i64, i64* %51, align 8
  %56 = sub i64 %55, %52
  %57 = trunc i64 %56 to i32
  %58 = add nsw i32 %54, %57
  %59 = load i32, i32* %6, align 4
  %60 = icmp eq i32 %59, 15
  br i1 %60, label %53, label %61

61:                                               ; preds = %53
  %62 = call i32 @u_terminateChars_69(i8* %2, i32 %3, i32 %58, i32* %6) #10
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %48) #10
  br label %63

63:                                               ; preds = %41, %61, %27
  %64 = phi i32 [ %28, %27 ], [ %62, %61 ], [ %42, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %14) #10
  ret i32 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ucnv_toAlgorithmic_69(i32, %struct.UConverter*, i8*, i32, i8*, i32, i32*) local_unnamed_addr #0 {
  %8 = tail call fastcc i32 @_ZL23ucnv_convertAlgorithmica14UConverterTypeP10UConverterPciPKciP10UErrorCode(i8 signext 1, i32 %0, %struct.UConverter* %1, i8* %2, i32 %3, i8* %4, i32 %5, i32* %6)
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL23ucnv_convertAlgorithmica14UConverterTypeP10UConverterPciPKciP10UErrorCode(i8 signext, i32, %struct.UConverter*, i8*, i32, i8*, i32, i32*) unnamed_addr #0 {
  %9 = alloca i32, align 4
  %10 = alloca %struct.UConverterFromUnicodeArgs, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.UConverterToUnicodeArgs, align 8
  %13 = alloca %struct.UConverter, align 8
  %14 = bitcast %struct.UConverter* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %14) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 288, i1 false)
  %15 = icmp eq i32* %7, null
  br i1 %15, label %107, label %16

16:                                               ; preds = %8
  %17 = load i32, i32* %7, align 4
  %18 = icmp slt i32 %17, 1
  br i1 %18, label %19, label %107

19:                                               ; preds = %16
  %20 = icmp eq %struct.UConverter* %2, null
  %21 = icmp eq i8* %5, null
  %22 = or i1 %20, %21
  %23 = icmp slt i32 %6, -1
  %24 = or i1 %22, %23
  %25 = icmp slt i32 %4, 0
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %19
  %28 = icmp sgt i32 %4, 0
  %29 = icmp eq i8* %3, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %32

31:                                               ; preds = %27, %19
  store i32 1, i32* %7, align 4
  br label %107

32:                                               ; preds = %27
  %33 = icmp eq i32 %6, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %32
  %35 = icmp slt i32 %6, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %34
  %37 = load i8, i8* %5, align 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %36, %32
  %40 = tail call i32 @u_terminateChars_69(i8* %3, i32 %4, i32 0, i32* nonnull %7) #10
  br label %107

41:                                               ; preds = %36, %34
  %42 = call %struct.UConverter* @ucnv_createAlgorithmicConverter_69(%struct.UConverter* nonnull %13, i32 %1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13, i64 0, i64 0), i32 0, i32* nonnull %7) #10
  %43 = load i32, i32* %7, align 4
  %44 = icmp slt i32 %43, 1
  br i1 %44, label %45, label %107

45:                                               ; preds = %41
  %46 = icmp eq i8 %0, 0
  br i1 %46, label %76, label %47

47:                                               ; preds = %45
  %48 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #10
  store i32 -1431655766, i32* %11, align 4
  %49 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %2, i64 0, i32 1
  %50 = load void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)*, void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)** %49, align 8
  %51 = icmp eq void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)* %50, @UCNV_TO_U_CALLBACK_SUBSTITUTE_69
  br i1 %51, label %59, label %52

52:                                               ; preds = %47
  %53 = bitcast %struct.UConverterToUnicodeArgs* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %53) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 56, i1 false) #10
  %54 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %12, i64 0, i32 0
  store i16 56, i16* %54, align 8
  %55 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %12, i64 0, i32 1
  store i8 1, i8* %55, align 2
  %56 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %12, i64 0, i32 2
  store %struct.UConverter* %2, %struct.UConverter** %56, align 8
  store i32 0, i32* %11, align 4
  %57 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %2, i64 0, i32 4
  %58 = load i8*, i8** %57, align 8
  call void %50(i8* %58, %struct.UConverterToUnicodeArgs* nonnull %12, i8* null, i32 0, i32 3, i32* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %53) #10
  br label %59

59:                                               ; preds = %52, %47
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #10
  %60 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %2, i64 0, i32 6
  %61 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %60, align 8
  %62 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %61, i64 0, i32 7
  %63 = load i32, i32* %62, align 8
  %64 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %2, i64 0, i32 14
  store i32 %63, i32* %64, align 8
  %65 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %2, i64 0, i32 15
  store i32 0, i32* %65, align 4
  %66 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %2, i64 0, i32 12
  store i8 0, i8* %66, align 8
  %67 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %2, i64 0, i32 23
  store i8 0, i8* %67, align 1
  %68 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %2, i64 0, i32 20
  store i8 0, i8* %68, align 2
  %69 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %2, i64 0, i32 35
  store i8 0, i8* %69, align 2
  %70 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %61, i64 0, i32 6
  %71 = load %struct.UConverterImpl*, %struct.UConverterImpl** %70, align 8
  %72 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %71, i64 0, i32 5
  %73 = load void (%struct.UConverter*, i32)*, void (%struct.UConverter*, i32)** %72, align 8
  %74 = icmp eq void (%struct.UConverter*, i32)* %73, null
  br i1 %74, label %103, label %75

75:                                               ; preds = %59
  call void %73(%struct.UConverter* nonnull %2, i32 1) #10
  br label %103

76:                                               ; preds = %45
  %77 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %77) #10
  store i32 -1431655766, i32* %9, align 4
  %78 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %2, i64 0, i32 0
  %79 = load void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)*, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** %78, align 8
  %80 = icmp eq void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)* %79, @UCNV_FROM_U_CALLBACK_SUBSTITUTE_69
  br i1 %80, label %88, label %81

81:                                               ; preds = %76
  %82 = bitcast %struct.UConverterFromUnicodeArgs* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %82) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 0, i64 56, i1 false) #10
  %83 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %10, i64 0, i32 0
  store i16 56, i16* %83, align 8
  %84 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %10, i64 0, i32 1
  store i8 1, i8* %84, align 2
  %85 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %10, i64 0, i32 2
  store %struct.UConverter* %2, %struct.UConverter** %85, align 8
  store i32 0, i32* %9, align 4
  %86 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %2, i64 0, i32 3
  %87 = load i8*, i8** %86, align 8
  call void %79(i8* %87, %struct.UConverterFromUnicodeArgs* nonnull %10, i16* null, i32 0, i32 0, i32 3, i32* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %82) #10
  br label %88

88:                                               ; preds = %81, %76
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %77) #10
  %89 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %2, i64 0, i32 6
  %90 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %89, align 8
  %91 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %2, i64 0, i32 16
  store i32 0, i32* %91, align 8
  %92 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %2, i64 0, i32 17
  store i32 0, i32* %92, align 4
  %93 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %2, i64 0, i32 21
  store i8 0, i8* %93, align 1
  %94 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %2, i64 0, i32 22
  store i8 0, i8* %94, align 4
  %95 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %2, i64 0, i32 31
  store i32 -1, i32* %95, align 8
  %96 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %2, i64 0, i32 34
  store i8 0, i8* %96, align 1
  %97 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %90, i64 0, i32 6
  %98 = load %struct.UConverterImpl*, %struct.UConverterImpl** %97, align 8
  %99 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %98, i64 0, i32 5
  %100 = load void (%struct.UConverter*, i32)*, void (%struct.UConverter*, i32)** %99, align 8
  %101 = icmp eq void (%struct.UConverter*, i32)* %100, null
  br i1 %101, label %103, label %102

102:                                              ; preds = %88
  call void %100(%struct.UConverter* nonnull %2, i32 2) #10
  br label %103

103:                                              ; preds = %102, %88, %75, %59
  %104 = phi %struct.UConverter* [ %42, %59 ], [ %42, %75 ], [ %2, %88 ], [ %2, %102 ]
  %105 = phi %struct.UConverter* [ %2, %59 ], [ %2, %75 ], [ %42, %88 ], [ %42, %102 ]
  %106 = call fastcc i32 @_ZL20ucnv_internalConvertP10UConverterS0_PciPKciP10UErrorCode(%struct.UConverter* %104, %struct.UConverter* %105, i8* %3, i32 %4, i8* nonnull %5, i32 %6, i32* nonnull %7)
  call void @ucnv_close_69(%struct.UConverter* %42)
  br label %107

107:                                              ; preds = %41, %8, %16, %103, %39, %31
  %108 = phi i32 [ 0, %31 ], [ %40, %39 ], [ %106, %103 ], [ 0, %16 ], [ 0, %8 ], [ 0, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %14) #10
  ret i32 %108
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ucnv_fromAlgorithmic_69(%struct.UConverter*, i32, i8*, i32, i8*, i32, i32*) local_unnamed_addr #0 {
  %8 = tail call fastcc i32 @_ZL23ucnv_convertAlgorithmica14UConverterTypeP10UConverterPciPKciP10UErrorCode(i8 signext 0, i32 %1, %struct.UConverter* %0, i8* %2, i32 %3, i8* %4, i32 %5, i32* %6)
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ucnv_getType_69(%struct.UConverter*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %3 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %2, align 8
  %4 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %3, i64 0, i32 3
  %5 = load %struct.UConverterStaticData*, %struct.UConverterStaticData** %4, align 8
  %6 = getelementptr inbounds %struct.UConverterStaticData, %struct.UConverterStaticData* %5, i64 0, i32 4
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 2
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = tail call i32 @ucnv_MBCSGetType_69(%struct.UConverter* %0) #10
  br label %13

11:                                               ; preds = %1
  %12 = sext i8 %7 to i32
  br label %13

13:                                               ; preds = %11, %9
  %14 = phi i32 [ %10, %9 ], [ %12, %11 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_getStarters_69(%struct.UConverter*, i8*, i32*) local_unnamed_addr #0 {
  %4 = icmp eq i32* %2, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %3
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %18

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %10 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %9, align 8
  %11 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %10, i64 0, i32 6
  %12 = load %struct.UConverterImpl*, %struct.UConverterImpl** %11, align 8
  %13 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %12, i64 0, i32 11
  %14 = load void (%struct.UConverter*, i8*, i32*)*, void (%struct.UConverter*, i8*, i32*)** %13, align 8
  %15 = icmp eq void (%struct.UConverter*, i8*, i32*)* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %8
  tail call void %14(%struct.UConverter* %0, i8* %1, i32* nonnull %2) #10
  br label %18

17:                                               ; preds = %8
  store i32 1, i32* %2, align 4
  br label %18

18:                                               ; preds = %5, %3, %17, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_fixFileSeparator_69(%struct.UConverter*, i16*, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.UConverter* %0, null
  %5 = icmp eq i16* %1, null
  %6 = or i1 %4, %5
  %7 = icmp slt i32 %2, 1
  %8 = or i1 %6, %7
  br i1 %8, label %80, label %9

9:                                                ; preds = %3
  %10 = tail call fastcc %struct.UAmbiguousConverter* @_ZL17ucnv_getAmbiguousPK10UConverter(%struct.UConverter* nonnull %0)
  %11 = icmp eq %struct.UAmbiguousConverter* %10, null
  br i1 %11, label %80, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.UAmbiguousConverter, %struct.UAmbiguousConverter* %10, i64 0, i32 1
  %14 = load i16, i16* %13, align 8
  %15 = zext i32 %2 to i64
  %16 = icmp ult i32 %2, 8
  br i1 %16, label %69, label %17

17:                                               ; preds = %12
  %18 = and i64 %15, 4294967288
  %19 = insertelement <8 x i16> undef, i16 %14, i32 0
  %20 = shufflevector <8 x i16> %19, <8 x i16> undef, <8 x i32> zeroinitializer
  br label %21

21:                                               ; preds = %64, %17
  %22 = phi i64 [ 0, %17 ], [ %65, %64 ]
  %23 = getelementptr inbounds i16, i16* %1, i64 %22
  %24 = bitcast i16* %23 to <8 x i16>*
  %25 = load <8 x i16>, <8 x i16>* %24, align 2
  %26 = icmp eq <8 x i16> %25, %20
  %27 = extractelement <8 x i1> %26, i32 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %21
  store i16 92, i16* %23, align 2
  br label %29

29:                                               ; preds = %28, %21
  %30 = extractelement <8 x i1> %26, i32 1
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = or i64 %22, 1
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  store i16 92, i16* %33, align 2
  br label %34

34:                                               ; preds = %31, %29
  %35 = extractelement <8 x i1> %26, i32 2
  br i1 %35, label %36, label %39

36:                                               ; preds = %34
  %37 = or i64 %22, 2
  %38 = getelementptr inbounds i16, i16* %1, i64 %37
  store i16 92, i16* %38, align 2
  br label %39

39:                                               ; preds = %36, %34
  %40 = extractelement <8 x i1> %26, i32 3
  br i1 %40, label %41, label %44

41:                                               ; preds = %39
  %42 = or i64 %22, 3
  %43 = getelementptr inbounds i16, i16* %1, i64 %42
  store i16 92, i16* %43, align 2
  br label %44

44:                                               ; preds = %41, %39
  %45 = extractelement <8 x i1> %26, i32 4
  br i1 %45, label %46, label %49

46:                                               ; preds = %44
  %47 = or i64 %22, 4
  %48 = getelementptr inbounds i16, i16* %1, i64 %47
  store i16 92, i16* %48, align 2
  br label %49

49:                                               ; preds = %46, %44
  %50 = extractelement <8 x i1> %26, i32 5
  br i1 %50, label %51, label %54

51:                                               ; preds = %49
  %52 = or i64 %22, 5
  %53 = getelementptr inbounds i16, i16* %1, i64 %52
  store i16 92, i16* %53, align 2
  br label %54

54:                                               ; preds = %51, %49
  %55 = extractelement <8 x i1> %26, i32 6
  br i1 %55, label %56, label %59

56:                                               ; preds = %54
  %57 = or i64 %22, 6
  %58 = getelementptr inbounds i16, i16* %1, i64 %57
  store i16 92, i16* %58, align 2
  br label %59

59:                                               ; preds = %56, %54
  %60 = extractelement <8 x i1> %26, i32 7
  br i1 %60, label %61, label %64

61:                                               ; preds = %59
  %62 = or i64 %22, 7
  %63 = getelementptr inbounds i16, i16* %1, i64 %62
  store i16 92, i16* %63, align 2
  br label %64

64:                                               ; preds = %61, %59
  %65 = add i64 %22, 8
  %66 = icmp eq i64 %65, %18
  br i1 %66, label %67, label %21, !llvm.loop !41

67:                                               ; preds = %64
  %68 = icmp eq i64 %18, %15
  br i1 %68, label %80, label %69

69:                                               ; preds = %67, %12
  %70 = phi i64 [ 0, %12 ], [ %18, %67 ]
  br label %71

71:                                               ; preds = %69, %77
  %72 = phi i64 [ %78, %77 ], [ %70, %69 ]
  %73 = getelementptr inbounds i16, i16* %1, i64 %72
  %74 = load i16, i16* %73, align 2
  %75 = icmp eq i16 %74, %14
  br i1 %75, label %76, label %77

76:                                               ; preds = %71
  store i16 92, i16* %73, align 2
  br label %77

77:                                               ; preds = %71, %76
  %78 = add nuw nsw i64 %72, 1
  %79 = icmp eq i64 %78, %15
  br i1 %79, label %80, label %71, !llvm.loop !42

80:                                               ; preds = %77, %67, %3, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.UAmbiguousConverter* @_ZL17ucnv_getAmbiguousPK10UConverter(%struct.UConverter*) unnamed_addr #0 {
  %2 = icmp eq %struct.UConverter* %0, null
  br i1 %2, label %31, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %5 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %4, align 8
  %6 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %5, i64 0, i32 6
  %7 = load %struct.UConverterImpl*, %struct.UConverterImpl** %6, align 8
  %8 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %7, i64 0, i32 12
  %9 = load i8* (%struct.UConverter*)*, i8* (%struct.UConverter*)** %8, align 8
  %10 = icmp eq i8* (%struct.UConverter*)* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %3
  %12 = tail call i8* %9(%struct.UConverter* nonnull %0) #10
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %21

14:                                               ; preds = %11
  %15 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %4, align 8
  br label %16

16:                                               ; preds = %14, %3
  %17 = phi %struct.UConverterSharedData* [ %15, %14 ], [ %5, %3 ]
  %18 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %17, i64 0, i32 3
  %19 = load %struct.UConverterStaticData*, %struct.UConverterStaticData** %18, align 8
  %20 = getelementptr inbounds %struct.UConverterStaticData, %struct.UConverterStaticData* %19, i64 0, i32 1, i64 0
  br label %21

21:                                               ; preds = %11, %16
  %22 = phi i8* [ %20, %16 ], [ %12, %11 ]
  %23 = tail call i32 @strcmp(i8* %22, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0)) #12
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = tail call i32 @strcmp(i8* %22, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0)) #12
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %57, %54, %51, %48, %45, %42, %39, %36, %33, %25, %21
  %29 = phi i64 [ 0, %21 ], [ 1, %25 ], [ 2, %33 ], [ 3, %36 ], [ 4, %39 ], [ 5, %42 ], [ 6, %45 ], [ 7, %48 ], [ 8, %51 ], [ 9, %54 ], [ 10, %57 ]
  %30 = getelementptr inbounds [11 x %struct.UAmbiguousConverter], [11 x %struct.UAmbiguousConverter]* @_ZL19ambiguousConverters, i64 0, i64 %29
  br label %31

31:                                               ; preds = %57, %1, %28
  %32 = phi %struct.UAmbiguousConverter* [ %30, %28 ], [ null, %1 ], [ null, %57 ]
  ret %struct.UAmbiguousConverter* %32

33:                                               ; preds = %25
  %34 = tail call i32 @strcmp(i8* %22, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0)) #12
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %28, label %36

36:                                               ; preds = %33
  %37 = tail call i32 @strcmp(i8* %22, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0)) #12
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %28, label %39

39:                                               ; preds = %36
  %40 = tail call i32 @strcmp(i8* %22, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i64 0, i64 0)) #12
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %28, label %42

42:                                               ; preds = %39
  %43 = tail call i32 @strcmp(i8* %22, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i64 0, i64 0)) #12
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %28, label %45

45:                                               ; preds = %42
  %46 = tail call i32 @strcmp(i8* %22, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0)) #12
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %28, label %48

48:                                               ; preds = %45
  %49 = tail call i32 @strcmp(i8* %22, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0)) #12
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %28, label %51

51:                                               ; preds = %48
  %52 = tail call i32 @strcmp(i8* %22, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i64 0, i64 0)) #12
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %28, label %54

54:                                               ; preds = %51
  %55 = tail call i32 @strcmp(i8* %22, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.23, i64 0, i64 0)) #12
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %28, label %57

57:                                               ; preds = %54
  %58 = tail call i32 @strcmp(i8* %22, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24, i64 0, i64 0)) #12
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %28, label %31
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @ucnv_isAmbiguous_69(%struct.UConverter*) local_unnamed_addr #0 {
  %2 = tail call fastcc %struct.UAmbiguousConverter* @_ZL17ucnv_getAmbiguousPK10UConverter(%struct.UConverter* %0)
  %3 = icmp ne %struct.UAmbiguousConverter* %2, null
  %4 = zext i1 %3 to i8
  ret i8 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @ucnv_setFallback_69(%struct.UConverter* nocapture, i8 signext) local_unnamed_addr #8 {
  %3 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 11
  store i8 %1, i8* %3, align 1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @ucnv_usesFallback_69(%struct.UConverter* nocapture readonly) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 11
  %3 = load i8, i8* %2, align 1
  ret i8 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_getInvalidChars_69(%struct.UConverter* readonly, i8*, i8*, i32*) local_unnamed_addr #0 {
  %5 = icmp eq i32* %3, null
  br i1 %5, label %27, label %6

6:                                                ; preds = %4
  %7 = load i32, i32* %3, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %27

9:                                                ; preds = %6
  %10 = icmp eq i8* %2, null
  %11 = icmp eq i8* %1, null
  %12 = or i1 %11, %10
  %13 = icmp eq %struct.UConverter* %0, null
  %14 = or i1 %13, %12
  br i1 %14, label %15, label %16

15:                                               ; preds = %9
  store i32 1, i32* %3, align 4
  br label %27

16:                                               ; preds = %9
  %17 = load i8, i8* %2, align 1
  %18 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 20
  %19 = load i8, i8* %18, align 2
  %20 = icmp slt i8 %17, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  store i32 8, i32* %3, align 4
  br label %27

22:                                               ; preds = %16
  store i8 %19, i8* %2, align 1
  %23 = icmp sgt i8 %19, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %22
  %25 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 26, i64 0
  %26 = sext i8 %19 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1, i8* align 8 %25, i64 %26, i1 false)
  br label %27

27:                                               ; preds = %6, %4, %15, %21, %24, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_getInvalidUChars_69(%struct.UConverter*, i16*, i8*, i32*) local_unnamed_addr #0 {
  %5 = icmp eq i32* %3, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %4
  %7 = load i32, i32* %3, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %28

9:                                                ; preds = %6
  %10 = icmp eq i8* %2, null
  %11 = icmp eq i16* %1, null
  %12 = or i1 %11, %10
  %13 = icmp eq %struct.UConverter* %0, null
  %14 = or i1 %13, %12
  br i1 %14, label %15, label %16

15:                                               ; preds = %9
  store i32 1, i32* %3, align 4
  br label %28

16:                                               ; preds = %9
  %17 = load i8, i8* %2, align 1
  %18 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 22
  %19 = load i8, i8* %18, align 4
  %20 = sext i8 %19 to i32
  %21 = icmp slt i8 %17, %19
  br i1 %21, label %22, label %23

22:                                               ; preds = %16
  store i32 8, i32* %3, align 4
  br label %28

23:                                               ; preds = %16
  store i8 %19, i8* %2, align 1
  %24 = icmp sgt i8 %19, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %23
  %26 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 29, i64 0
  %27 = tail call i16* @u_memcpy_69(i16* nonnull %1, i16* %26, i32 %20) #10
  br label %28

28:                                               ; preds = %6, %4, %15, %22, %25, %23
  ret void
}

declare i16* @u_memcpy_69(i16*, i16*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @ucnv_detectUnicodeSignature_69(i8* readonly, i32, i32*, i32*) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca [5 x i8], align 1
  %7 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 0
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8)
  store i32 -1431655766, i32* %5, align 4
  %9 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %9, i8 -91, i64 5, i1 false)
  %10 = icmp eq i32* %3, null
  br i1 %10, label %126, label %11

11:                                               ; preds = %4
  %12 = load i32, i32* %3, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %126

14:                                               ; preds = %11
  %15 = icmp eq i8* %0, null
  %16 = icmp slt i32 %1, -1
  %17 = or i1 %15, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  store i32 1, i32* %3, align 4
  br label %126

19:                                               ; preds = %14
  %20 = icmp eq i32* %2, null
  %21 = select i1 %20, i32* %5, i32* %2
  %22 = icmp eq i32 %1, -1
  br i1 %22, label %23, label %26

23:                                               ; preds = %19
  %24 = tail call i64 @strlen(i8* nonnull %0) #12
  %25 = trunc i64 %24 to i32
  br label %26

26:                                               ; preds = %23, %19
  %27 = phi i32 [ %25, %23 ], [ %1, %19 ]
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %29, label %125

29:                                               ; preds = %26
  %30 = add nsw i32 %27, -1
  %31 = icmp ult i32 %30, 4
  %32 = select i1 %31, i32 %30, i32 4
  %33 = add nuw nsw i32 %32, 1
  %34 = zext i32 %33 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* nonnull align 1 %0, i64 %34, i1 false)
  %35 = load i8, i8* %9, align 1
  switch i8 %35, label %125 [
    i8 -2, label %36
    i8 -1, label %41
    i8 -17, label %55
    i8 0, label %64
    i8 14, label %77
    i8 -5, label %86
    i8 43, label %95
    i8 -35, label %112
  ]

36:                                               ; preds = %29
  %37 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 1
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %38, -1
  br i1 %39, label %40, label %125

40:                                               ; preds = %36
  store i32 2, i32* %21, align 4
  br label %126

41:                                               ; preds = %29
  %42 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 1
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %45, label %125

45:                                               ; preds = %41
  %46 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 2
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %54

49:                                               ; preds = %45
  %50 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 3
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %49
  store i32 4, i32* %21, align 4
  br label %126

54:                                               ; preds = %49, %45
  store i32 2, i32* %21, align 4
  br label %126

55:                                               ; preds = %29
  %56 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 1
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, -69
  br i1 %58, label %59, label %125

59:                                               ; preds = %55
  %60 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 2
  %61 = load i8, i8* %60, align 1
  %62 = icmp eq i8 %61, -65
  br i1 %62, label %63, label %125

63:                                               ; preds = %59
  store i32 3, i32* %21, align 4
  br label %126

64:                                               ; preds = %29
  %65 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 1
  %66 = load i8, i8* %65, align 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %125

68:                                               ; preds = %64
  %69 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 2
  %70 = load i8, i8* %69, align 1
  %71 = icmp eq i8 %70, -2
  br i1 %71, label %72, label %125

72:                                               ; preds = %68
  %73 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 3
  %74 = load i8, i8* %73, align 1
  %75 = icmp eq i8 %74, -1
  br i1 %75, label %76, label %125

76:                                               ; preds = %72
  store i32 4, i32* %21, align 4
  br label %126

77:                                               ; preds = %29
  %78 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 1
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %79, -2
  br i1 %80, label %81, label %125

81:                                               ; preds = %77
  %82 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 2
  %83 = load i8, i8* %82, align 1
  %84 = icmp eq i8 %83, -1
  br i1 %84, label %85, label %125

85:                                               ; preds = %81
  store i32 3, i32* %21, align 4
  br label %126

86:                                               ; preds = %29
  %87 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 1
  %88 = load i8, i8* %87, align 1
  %89 = icmp eq i8 %88, -18
  br i1 %89, label %90, label %125

90:                                               ; preds = %86
  %91 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 2
  %92 = load i8, i8* %91, align 1
  %93 = icmp eq i8 %92, 40
  br i1 %93, label %94, label %125

94:                                               ; preds = %90
  store i32 3, i32* %21, align 4
  br label %126

95:                                               ; preds = %29
  %96 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 1
  %97 = load i8, i8* %96, align 1
  %98 = icmp eq i8 %97, 47
  br i1 %98, label %99, label %125

99:                                               ; preds = %95
  %100 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 2
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, 118
  br i1 %102, label %103, label %125

103:                                              ; preds = %99
  %104 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 3
  %105 = load i8, i8* %104, align 1
  switch i8 %105, label %125 [
    i8 56, label %106
    i8 47, label %111
    i8 57, label %111
    i8 43, label %111
  ]

106:                                              ; preds = %103
  %107 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 4
  %108 = load i8, i8* %107, align 1
  %109 = icmp eq i8 %108, 45
  br i1 %109, label %110, label %111

110:                                              ; preds = %106
  store i32 5, i32* %21, align 4
  br label %126

111:                                              ; preds = %103, %103, %103, %106
  store i32 4, i32* %21, align 4
  br label %126

112:                                              ; preds = %29
  %113 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 1
  %114 = load i8, i8* %113, align 1
  %115 = icmp eq i8 %114, 115
  br i1 %115, label %116, label %125

116:                                              ; preds = %112
  %117 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 2
  %118 = load i8, i8* %117, align 1
  %119 = icmp eq i8 %118, 102
  br i1 %119, label %120, label %125

120:                                              ; preds = %116
  %121 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 3
  %122 = load i8, i8* %121, align 1
  %123 = icmp eq i8 %122, 115
  br i1 %123, label %124, label %125

124:                                              ; preds = %120
  store i32 4, i32* %21, align 4
  br label %126

125:                                              ; preds = %26, %29, %103, %72, %68, %64, %59, %55, %41, %36, %77, %81, %86, %90, %95, %99, %112, %116, %120
  store i32 0, i32* %21, align 4
  br label %126

126:                                              ; preds = %4, %11, %125, %124, %111, %110, %94, %85, %76, %63, %54, %53, %40, %18
  %127 = phi i8* [ null, %18 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), %40 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), %53 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), %54 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), %63 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), %76 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), %85 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), %94 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), %110 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), %111 ], [ null, %125 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), %124 ], [ null, %11 ], [ null, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8)
  ret i8* %127
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @ucnv_fromUCountPending_69(%struct.UConverter* readonly, i32*) local_unnamed_addr #4 {
  %3 = icmp eq i32* %1, null
  br i1 %3, label %33, label %4

4:                                                ; preds = %2
  %5 = load i32, i32* %1, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %33

7:                                                ; preds = %4
  %8 = icmp eq %struct.UConverter* %0, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  store i32 1, i32* %1, align 4
  br label %33

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 31
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = icmp ult i32 %12, 65536
  %16 = select i1 %15, i32 1, i32 2
  %17 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 34
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = add nsw i32 %16, %19
  br label %33

21:                                               ; preds = %10
  %22 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 34
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = sext i8 %23 to i32
  %27 = sub nsw i32 0, %26
  br label %33

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 17
  %30 = load i32, i32* %29, align 4
  %31 = icmp sgt i32 %30, 0
  %32 = zext i1 %31 to i32
  br label %33

33:                                               ; preds = %28, %2, %4, %25, %14, %9
  %34 = phi i32 [ -1, %9 ], [ %20, %14 ], [ %27, %25 ], [ -1, %4 ], [ -1, %2 ], [ %32, %28 ]
  ret i32 %34
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @ucnv_toUCountPending_69(%struct.UConverter* readonly, i32*) local_unnamed_addr #4 {
  %3 = icmp eq i32* %1, null
  br i1 %3, label %25, label %4

4:                                                ; preds = %2
  %5 = load i32, i32* %1, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %25

7:                                                ; preds = %4
  %8 = icmp eq %struct.UConverter* %0, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  store i32 1, i32* %1, align 4
  br label %25

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 35
  %12 = load i8, i8* %11, align 2
  %13 = sext i8 %12 to i32
  %14 = icmp sgt i8 %12, 0
  br i1 %14, label %25, label %15

15:                                               ; preds = %10
  %16 = icmp slt i8 %12, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = sub nsw i32 0, %13
  br label %25

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 12
  %21 = load i8, i8* %20, align 8
  %22 = icmp sgt i8 %21, 0
  %23 = select i1 %22, i8 %21, i8 0
  %24 = zext i8 %23 to i32
  ret i32 %24

25:                                               ; preds = %10, %2, %4, %17, %9
  %26 = phi i32 [ -1, %9 ], [ %18, %17 ], [ -1, %4 ], [ -1, %2 ], [ %13, %10 ]
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @ucnv_isFixedWidth_69(%struct.UConverter*, i32* nocapture) local_unnamed_addr #0 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %23

5:                                                ; preds = %2
  %6 = icmp eq %struct.UConverter* %0, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  store i32 1, i32* %1, align 4
  br label %23

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %10 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %9, align 8
  %11 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %10, i64 0, i32 3
  %12 = load %struct.UConverterStaticData*, %struct.UConverterStaticData** %11, align 8
  %13 = getelementptr inbounds %struct.UConverterStaticData, %struct.UConverterStaticData* %12, i64 0, i32 4
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 2
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = tail call i32 @ucnv_MBCSGetType_69(%struct.UConverter* nonnull %0) #10
  br label %20

18:                                               ; preds = %8
  %19 = sext i8 %14 to i32
  br label %20

20:                                               ; preds = %16, %18
  %21 = phi i32 [ %17, %16 ], [ %19, %18 ]
  switch i32 %21, label %22 [
    i32 0, label %23
    i32 1, label %23
    i32 7, label %23
    i32 8, label %23
    i32 30, label %23
    i32 26, label %23
  ]

22:                                               ; preds = %20
  br label %23

23:                                               ; preds = %20, %20, %20, %20, %20, %20, %2, %22, %7
  %24 = phi i8 [ 0, %7 ], [ 0, %22 ], [ 0, %2 ], [ 1, %20 ], [ 1, %20 ], [ 1, %20 ], [ 1, %20 ], [ 1, %20 ], [ 1, %20 ]
  ret i8 %24
}

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #9

declare %struct.UConverter* @ucnv_createAlgorithmicConverter_69(%struct.UConverter*, i32, i8*, i32, i32*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind allocsize(0) }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = distinct !{!12, !8}
!13 = distinct !{!13, !14, !8}
!14 = !{!"llvm.loop.unroll.runtime.disable"}
!15 = !{!16}
!16 = distinct !{!16, !17}
!17 = distinct !{!17, !"LVerDomain"}
!18 = !{!19}
!19 = distinct !{!19, !17}
!20 = distinct !{!20, !8}
!21 = distinct !{!21, !10}
!22 = distinct !{!22, !8}
!23 = distinct !{!23, !8}
!24 = distinct !{!24, !14, !8}
!25 = !{!26}
!26 = distinct !{!26, !27}
!27 = distinct !{!27, !"LVerDomain"}
!28 = !{!29}
!29 = distinct !{!29, !27}
!30 = distinct !{!30, !8}
!31 = distinct !{!31, !10}
!32 = distinct !{!32, !8}
!33 = !{!34}
!34 = distinct !{!34, !35}
!35 = distinct !{!35, !"LVerDomain"}
!36 = !{!37}
!37 = distinct !{!37, !35}
!38 = distinct !{!38, !8}
!39 = distinct !{!39, !10}
!40 = distinct !{!40, !8}
!41 = distinct !{!41, !8}
!42 = distinct !{!42, !14, !8}
