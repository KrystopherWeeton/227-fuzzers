; ModuleID = '../../third_party/pdfium/core/fpdfapi/page/cpdf_contentparser.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/page/cpdf_contentparser.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_ContentParser = type { i8, %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr.64", %"class.fxcrt::RetainPtr.77", %"class.std::__1::vector.112", %"class.std::__1::vector.119", %"class.fxcrt::MaybeOwned", i32, i32, i32, %"class.std::__1::set.126", %"class.std::__1::unique_ptr.136" }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_PageObjectHolder* }
%class.CPDF_PageObjectHolder = type { i32 (...)**, %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr", %"class.std::__1::map.13", %"class.std::__1::map.24", %class.CFX_FloatRect, %class.CPDF_Transparency, i8, i8, %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr.35", %"class.std::__1::vector", %"class.std::__1::unique_ptr.41", %"class.std::__1::deque", %class.CFX_Matrix, %"class.std::__1::set" }
%"class.std::__1::map.13" = type { %"class.std::__1::__tree.14" }
%"class.std::__1::__tree.14" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::map.24" = type { %"class.std::__1::__tree.25" }
%"class.std::__1::__tree.25" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%class.CFX_FloatRect = type { float, float, float, float }
%class.CPDF_Transparency = type { i8, i8 }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.0" }
%"class.fxcrt::RetainPtr.0" = type { %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.395" }
%"class.std::__1::unique_ptr.395" = type { %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.398", %"class.std::__1::__compressed_pair.406", %"class.std::__1::__compressed_pair.411", %"class.std::__1::__compressed_pair.413", [4 x i8] }>
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400", %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.fxcrt::UnownedPtr.35" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.CFX_FloatRect*, %class.CFX_FloatRect*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.CFX_FloatRect* }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.CPDF_ContentParser* }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.51" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.45"**, %"class.std::__1::unique_ptr.45"**, %"class.std::__1::unique_ptr.45"**, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %class.CPDF_PageObject* }
%class.CPDF_PageObject = type { %class.CPDF_GraphicStates, %class.CFX_FloatRect, %class.CPDF_ContentMarks, i8, i32 }
%class.CPDF_GraphicStates = type { i32 (...)**, %class.CPDF_ClipPath, %class.CFX_GraphState, %class.CPDF_ColorState, %class.CPDF_TextState, %class.CPDF_GeneralState }
%class.CPDF_ClipPath = type { %"class.fxcrt::SharedCopyOnWrite" }
%"class.fxcrt::SharedCopyOnWrite" = type { %"class.fxcrt::RetainPtr.149" }
%"class.fxcrt::RetainPtr.149" = type { %"class.std::__1::unique_ptr.150" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.CPDF_ClipPath::PathData"* }
%"class.CPDF_ClipPath::PathData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.153", %"class.std::__1::vector.160" }
%"class.std::__1::vector.153" = type { %"class.std::__1::__vector_base.154" }
%"class.std::__1::__vector_base.154" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.155" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.160" = type { %"class.std::__1::__vector_base.161" }
%"class.std::__1::__vector_base.161" = type { %"class.std::__1::unique_ptr.162"*, %"class.std::__1::unique_ptr.162"*, %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::unique_ptr.162" = type opaque
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.std::__1::unique_ptr.162"* }
%class.CFX_GraphState = type { %"class.fxcrt::SharedCopyOnWrite.170" }
%"class.fxcrt::SharedCopyOnWrite.170" = type { %"class.fxcrt::RetainPtr.171" }
%"class.fxcrt::RetainPtr.171" = type { %"class.std::__1::unique_ptr.172" }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %class.CFX_RetainableGraphStateData* }
%class.CFX_RetainableGraphStateData = type { %"class.fxcrt::Retainable", %class.CFX_GraphStateData }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.175" }
%"class.std::__1::vector.175" = type { %"class.std::__1::__vector_base.176" }
%"class.std::__1::__vector_base.176" = type { float*, float*, %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { float* }
%class.CPDF_ColorState = type { %"class.fxcrt::SharedCopyOnWrite.184" }
%"class.fxcrt::SharedCopyOnWrite.184" = type { %"class.fxcrt::RetainPtr.185" }
%"class.fxcrt::RetainPtr.185" = type { %"class.std::__1::unique_ptr.186" }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.CPDF_ColorState::ColorData"* }
%"class.CPDF_ColorState::ColorData" = type { %"class.fxcrt::Retainable", i32, i32, %class.CPDF_Color, %class.CPDF_Color }
%class.CPDF_Color = type { %"class.std::__1::vector.175", %"class.std::__1::unique_ptr.189", %"class.fxcrt::RetainPtr.195" }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %class.PatternValue* }
%class.PatternValue = type opaque
%"class.fxcrt::RetainPtr.195" = type { %"class.std::__1::unique_ptr.196" }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type opaque
%class.CPDF_TextState = type { %"class.fxcrt::SharedCopyOnWrite.203" }
%"class.fxcrt::SharedCopyOnWrite.203" = type { %"class.fxcrt::RetainPtr.204" }
%"class.fxcrt::RetainPtr.204" = type { %"class.std::__1::unique_ptr.205" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.CPDF_TextState::TextData"* }
%"class.CPDF_TextState::TextData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::RetainPtr.208", %"class.fxcrt::UnownedPtr.276", float, float, float, i32, [4 x float], [4 x float] }
%"class.fxcrt::RetainPtr.208" = type { %"class.std::__1::unique_ptr.209" }
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %class.CPDF_Font* }
%class.CPDF_Font = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.35", %class.CFX_Font, %"class.std::__1::vector.260", %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.268", i8, i32, i32, i32, i32, i32, %struct.FX_RECT }
%"class.fxcrt::Observable" = type { %"class.std::__1::set.212" }
%"class.std::__1::set.212" = type { %"class.std::__1::__tree.213" }
%"class.std::__1::__tree.213" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.214", %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr.102", %"class.std::__1::unique_ptr.222", %"class.fxcrt::RetainPtr.228", %"class.fxcrt::RetainPtr.244", %"class.std::__1::unique_ptr.250", %"class.std::__1::unique_ptr.81", %"class.std::__1::vector.256", %"class.pdfium::span", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr.102" = type { %"class.std::__1::unique_ptr.103" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%class.IFX_StreamWithSize = type { i32 (...)** }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %struct.FT_StreamRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%"class.fxcrt::RetainPtr.228" = type { %"class.std::__1::unique_ptr.229" }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.232", %"class.fxcrt::RetainPtr.236" }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.236" = type { %"class.std::__1::unique_ptr.237" }
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::RetainPtr.244" = type { %"class.std::__1::unique_ptr.245" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %class.CFX_GlyphCache* }
%class.CFX_GlyphCache = type opaque
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type opaque
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { i8* }
%"class.std::__1::vector.256" = type { %"class.std::__1::__vector_base.257" }
%"class.std::__1::__vector_base.257" = type { i8*, i8*, %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.85", i64 }
%"class.fxcrt::UnownedPtr.85" = type { i8* }
%"class.std::__1::vector.260" = type { %"class.std::__1::__vector_base.261" }
%"class.std::__1::__vector_base.261" = type { %"class.std::__1::unique_ptr.262"*, %"class.std::__1::unique_ptr.262"*, %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::unique_ptr.262" = type opaque
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.std::__1::unique_ptr.262"* }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.86" }
%"class.fxcrt::RetainPtr.86" = type { %"class.std::__1::unique_ptr.87" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %class.CPDF_ToUnicodeMap* }
%class.CPDF_ToUnicodeMap = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.fxcrt::UnownedPtr.276" = type { %class.CPDF_Document* }
%class.CPDF_GeneralState = type { %"class.fxcrt::SharedCopyOnWrite.279" }
%"class.fxcrt::SharedCopyOnWrite.279" = type { %"class.fxcrt::RetainPtr.280" }
%"class.fxcrt::RetainPtr.280" = type { %"class.std::__1::unique_ptr.281" }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.CPDF_GeneralState::StateData"* }
%"class.CPDF_GeneralState::StateData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::ByteString", i32, %"class.fxcrt::RetainPtr.284", %class.CFX_Matrix, float, float, %"class.fxcrt::RetainPtr.290", %"class.fxcrt::RetainPtr.296", %class.CFX_Matrix, i32, i8, i8, i8, i8, i8, i32, %"class.fxcrt::RetainPtr.290", %"class.fxcrt::RetainPtr.290", %"class.fxcrt::RetainPtr.290", float, float }
%"class.fxcrt::RetainPtr.284" = type { %"class.std::__1::unique_ptr.285" }
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %class.CPDF_Object* }
%"class.fxcrt::RetainPtr.296" = type { %"class.std::__1::unique_ptr.297" }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %class.CPDF_TransferFunc* }
%class.CPDF_TransferFunc = type opaque
%"class.fxcrt::RetainPtr.290" = type { %"class.std::__1::unique_ptr.291" }
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %class.CPDF_Object* }
%class.CPDF_ContentMarks = type { %"class.fxcrt::RetainPtr.378" }
%"class.fxcrt::RetainPtr.378" = type { %"class.std::__1::unique_ptr.379" }
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.CPDF_ContentMarks::MarkData"* }
%"class.CPDF_ContentMarks::MarkData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.382" }
%"class.std::__1::vector.382" = type { %"class.std::__1::__vector_base.383" }
%"class.std::__1::__vector_base.383" = type { %"class.fxcrt::RetainPtr.384"*, %"class.fxcrt::RetainPtr.384"*, %"class.std::__1::__compressed_pair.385" }
%"class.fxcrt::RetainPtr.384" = type opaque
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.fxcrt::RetainPtr.384"* }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.45"** }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"class.std::__1::set" = type { %"class.std::__1::__tree.55" }
%"class.std::__1::__tree.55" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.fxcrt::UnownedPtr.64" = type { %class.CPDF_Type3Char* }
%class.CPDF_Type3Char = type { %"class.std::__1::unique_ptr.65", %"class.fxcrt::RetainPtr.71", i8, i32, %class.CFX_Matrix, %struct.FX_RECT }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.CPDF_Font::FormIface"* }
%"class.CPDF_Font::FormIface" = type { i32 (...)** }
%"class.fxcrt::RetainPtr.71" = type { %"class.std::__1::unique_ptr.72" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type opaque
%"class.fxcrt::RetainPtr.77" = type { %"class.std::__1::unique_ptr.78" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %class.CPDF_StreamAcc* }
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.92", %"class.fxcrt::RetainPtr.98" }
%"class.fxcrt::RetainPtr.92" = type { %"class.std::__1::unique_ptr.93" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::RetainPtr.98" = type { %"class.std::__1::unique_ptr.99" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %class.CPDF_Stream* }
%class.CPDF_Stream = type { %class.CPDF_Object, i8, i32, %"class.fxcrt::RetainPtr", %"class.std::__1::unique_ptr.81", %"class.fxcrt::RetainPtr.102" }
%"class.std::__1::vector.112" = type { %"class.std::__1::__vector_base.113" }
%"class.std::__1::__vector_base.113" = type { %"class.fxcrt::RetainPtr.77"*, %"class.fxcrt::RetainPtr.77"*, %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.fxcrt::RetainPtr.77"* }
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { i32*, i32*, %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { i32* }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.81", %"class.fxcrt::UnownedPtr.85" }
%"class.std::__1::set.126" = type { %"class.std::__1::__tree.127" }
%"class.std::__1::__tree.127" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %class.CPDF_StreamContentParser* }
%class.CPDF_StreamContentParser = type <{ %"class.fxcrt::UnownedPtr.35", %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr.139", %class.CFX_Matrix, %class.CFX_FloatRect, i32, i32, %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.146", %"class.std::__1::stack", %"class.std::__1::vector.160", %"class.fxcrt::UnownedPtr.320", %"class.std::__1::vector.321", float, float, float, float, i8, [7 x i8], %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.328", i8, i8, [6 x i8], %"class.std::__1::vector.334", [6 x float], [16 x %"struct.CPDF_StreamContentParser::ContentParam"], %"class.std::__1::vector.119", i32, [4 x i8] }>
%"class.fxcrt::UnownedPtr.139" = type { %"class.std::__1::set.126"* }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %class.CPDF_StreamParser* }
%class.CPDF_StreamParser = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %class.CPDF_AllStates* }
%class.CPDF_AllStates = type <{ %class.CPDF_GraphicStates, %class.CFX_Matrix, %class.CFX_Matrix, %class.CFX_Matrix, %class.CFX_PTemplate, %class.CFX_PTemplate, float, float, float, [4 x i8] }>
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::stack" = type { %"class.std::__1::deque.307" }
%"class.std::__1::deque.307" = type { %"class.std::__1::__deque_base.308" }
%"class.std::__1::__deque_base.308" = type { %"struct.std::__1::__split_buffer.309", i64, %"class.std::__1::__compressed_pair.316" }
%"struct.std::__1::__split_buffer.309" = type { %"class.std::__1::unique_ptr.310"**, %"class.std::__1::unique_ptr.310"**, %"class.std::__1::unique_ptr.310"**, %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::unique_ptr.310" = type opaque
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.std::__1::unique_ptr.310"** }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.fxcrt::UnownedPtr.320" = type { %class.CPDF_TextObject* }
%class.CPDF_TextObject = type opaque
%"class.std::__1::vector.321" = type { %"class.std::__1::__vector_base.322" }
%"class.std::__1::__vector_base.322" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.323" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %class.FX_PATHPOINT* }
%"class.fxcrt::RetainPtr.328" = type { %"class.std::__1::unique_ptr.329" }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %class.CPDF_Image* }
%class.CPDF_Image = type opaque
%"class.std::__1::vector.334" = type { %"class.std::__1::__vector_base.335" }
%"class.std::__1::__vector_base.335" = type { %"class.std::__1::unique_ptr.146"*, %"class.std::__1::unique_ptr.146"*, %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.std::__1::unique_ptr.146"* }
%"struct.CPDF_StreamContentParser::ContentParam" = type { i32, %class.FX_Number, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.284" }
%class.FX_Number = type { i8, i8, %union.anon }
%union.anon = type { i32 }
%class.CPDF_Page = type { %class.IPDF_Page, %class.CPDF_PageObjectHolder, %class.CFX_STemplate, %class.CFX_Matrix, %"class.fxcrt::UnownedPtr.35", %"class.std::__1::unique_ptr.344", %"class.std::__1::unique_ptr.350", %"class.fxcrt::ObservedPtr" }
%class.IPDF_Page = type { %"class.fxcrt::Retainable" }
%class.CFX_STemplate = type { float, float }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.CPDF_Page::RenderCacheIface"* }
%"class.CPDF_Page::RenderCacheIface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.350" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.CPDF_Page::RenderContextIface"* }
%"class.CPDF_Page::RenderContextIface" = type { i32 (...)** }
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CPDF_Page::View"* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%"class.CPDF_Page::View" = type { %"class.fxcrt::Observable" }
%class.CPDF_Form = type { %class.CPDF_PageObjectHolder, %"class.CPDF_Font::FormIface", %"class.std::__1::set.126", %"class.fxcrt::RetainPtr.363" }
%"class.fxcrt::RetainPtr.363" = type { %"class.std::__1::unique_ptr.364" }
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %class.CPDF_Stream* }
%class.CPDF_Array = type <{ %class.CPDF_Object, %"class.std::__1::vector.356", %"class.fxcrt::WeakPtr", i32, [4 x i8] }>
%"class.std::__1::vector.356" = type { %"class.std::__1::__vector_base.357" }
%"class.std::__1::__vector_base.357" = type { %"class.fxcrt::RetainPtr.284"*, %"class.fxcrt::RetainPtr.284"*, %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.fxcrt::RetainPtr.284"* }
%class.CPDF_Path = type { %"class.fxcrt::SharedCopyOnWrite.369" }
%"class.fxcrt::SharedCopyOnWrite.369" = type { %"class.fxcrt::RetainPtr.370" }
%"class.fxcrt::RetainPtr.370" = type { %"class.std::__1::unique_ptr.371" }
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %class.CFX_RetainablePathData* }
%class.CFX_RetainablePathData = type { %"class.fxcrt::Retainable", %class.CFX_PathData }
%class.CFX_PathData = type { %"class.std::__1::vector.321" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i8* }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%class.PauseIndicatorIface = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16__treeIPKhNS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__16vectorIN5fxcrt9RetainPtrI14CPDF_StreamAccEENS_9allocatorIS4_EEE8__appendEm = comdat any

@_ZN6pdfium11page_objectL9kContentsE = internal constant [9 x i8] c"Contents\00", align 1
@.str = private unnamed_addr constant [7 x i8] c"Matrix\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"BBox\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"Resources\00", align 1

@_ZN18CPDF_ContentParserC1EP9CPDF_Page = hidden unnamed_addr alias void (%class.CPDF_ContentParser*, %class.CPDF_Page*), void (%class.CPDF_ContentParser*, %class.CPDF_Page*)* @_ZN18CPDF_ContentParserC2EP9CPDF_Page
@_ZN18CPDF_ContentParserC1EP9CPDF_FormPK14CPDF_AllStatesPK10CFX_MatrixP14CPDF_Type3CharPNSt3__13setIPKhNSA_4lessISD_EENSA_9allocatorISD_EEEE = hidden unnamed_addr alias void (%class.CPDF_ContentParser*, %class.CPDF_Form*, %class.CPDF_AllStates*, %class.CFX_Matrix*, %class.CPDF_Type3Char*, %"class.std::__1::set.126"*), void (%class.CPDF_ContentParser*, %class.CPDF_Form*, %class.CPDF_AllStates*, %class.CFX_Matrix*, %class.CPDF_Type3Char*, %"class.std::__1::set.126"*)* @_ZN18CPDF_ContentParserC2EP9CPDF_FormPK14CPDF_AllStatesPK10CFX_MatrixP14CPDF_Type3CharPNSt3__13setIPKhNSA_4lessISD_EENSA_9allocatorISD_EEEE
@_ZN18CPDF_ContentParserD1Ev = hidden unnamed_addr alias void (%class.CPDF_ContentParser*), void (%class.CPDF_ContentParser*)* @_ZN18CPDF_ContentParserD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CPDF_ContentParserC2EP9CPDF_Page(%class.CPDF_ContentParser*, %class.CPDF_Page*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 0
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 1, i32 0
  %6 = icmp eq %class.CPDF_Page* %1, null
  %7 = getelementptr inbounds %class.CPDF_Page, %class.CPDF_Page* %1, i64 0, i32 1
  %8 = select i1 %6, %class.CPDF_PageObjectHolder* null, %class.CPDF_PageObjectHolder* %7
  store %class.CPDF_PageObjectHolder* %8, %class.CPDF_PageObjectHolder** %5, align 8
  %9 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 3
  %11 = bitcast %"class.fxcrt::RetainPtr.77"* %10 to i64*
  %12 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 4
  %13 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 7
  %14 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %16 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 10, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_node_base"** %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #10
  %18 = bitcast %class.CPDF_Type3Char** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 92, i1 false)
  store %"class.std::__1::__tree_end_node"* %15, %"class.std::__1::__tree_end_node"** %16, align 8
  %19 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 11
  %20 = bitcast %"class.std::__1::unique_ptr.136"* %19 to i64*
  store i64 0, i64* %20, align 8
  %21 = tail call %class.CPDF_Document* @_ZNK9CPDF_Page11GetDocumentEv(%class.CPDF_Page* %1) #10
  %22 = icmp eq %class.CPDF_Document* %21, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %2
  store i8 5, i8* %4, align 8
  br label %120

24:                                               ; preds = %2
  %25 = getelementptr inbounds %class.CPDF_Page, %class.CPDF_Page* %1, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 0
  %26 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %25, align 8
  %27 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN6pdfium11page_objectL9kContentsE, i64 0, i64 0)) #10
  %28 = call %class.CPDF_Object* @_ZN15CPDF_Dictionary18GetDirectObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %26, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #10
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  %29 = icmp eq %class.CPDF_Object* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %24
  store i8 5, i8* %4, align 8
  br label %120

31:                                               ; preds = %24
  %32 = bitcast %class.CPDF_Object* %28 to %class.CPDF_Stream* (%class.CPDF_Object*)***
  %33 = load %class.CPDF_Stream* (%class.CPDF_Object*)**, %class.CPDF_Stream* (%class.CPDF_Object*)*** %32, align 8
  %34 = getelementptr inbounds %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %33, i64 35
  %35 = load %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %34, align 8
  %36 = call %class.CPDF_Stream* %35(%class.CPDF_Object* nonnull %28) #10
  %37 = icmp eq %class.CPDF_Stream* %36, null
  br i1 %37, label %62, label %38

38:                                               ; preds = %31
  %39 = call i8* @_Znwm(i64 64) #11, !noalias !2
  %40 = bitcast i8* %39 to %class.CPDF_StreamAcc*
  call void @_ZN14CPDF_StreamAccC1EPK11CPDF_Stream(%class.CPDF_StreamAcc* nonnull %40, %class.CPDF_Stream* nonnull %36) #10, !noalias !2
  %41 = ptrtoint i8* %39 to i64
  %42 = getelementptr inbounds i8, i8* %39, i64 8
  %43 = bitcast i8* %42 to i64*
  %44 = load i64, i64* %43, align 8, !noalias !2
  %45 = add nsw i64 %44, 1
  store i64 %45, i64* %43, align 8, !noalias !2
  %46 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %46, align 8
  store i64 %41, i64* %11, align 8
  %48 = icmp eq %class.CPDF_StreamAcc* %47, null
  br i1 %48, label %60, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %47, i64 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = add nsw i64 %51, -1
  store i64 %52, i64* %50, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %49
  %55 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %47, i64 0, i32 0
  %56 = bitcast %class.CPDF_StreamAcc* %47 to void (%"class.fxcrt::Retainable"*)***
  %57 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %57, i64 1
  %59 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %58, align 8
  call void %59(%"class.fxcrt::Retainable"* nonnull %55) #10
  br label %60

60:                                               ; preds = %38, %49, %54
  %61 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %46, align 8
  call void @_ZN14CPDF_StreamAcc19LoadAllDataFilteredEv(%class.CPDF_StreamAcc* %61) #10
  store i8 2, i8* %4, align 8
  br label %120

62:                                               ; preds = %31
  %63 = bitcast %class.CPDF_Object* %28 to %class.CPDF_Array* (%class.CPDF_Object*)***
  %64 = load %class.CPDF_Array* (%class.CPDF_Object*)**, %class.CPDF_Array* (%class.CPDF_Object*)*** %63, align 8
  %65 = getelementptr inbounds %class.CPDF_Array* (%class.CPDF_Object*)*, %class.CPDF_Array* (%class.CPDF_Object*)** %64, i64 23
  %66 = load %class.CPDF_Array* (%class.CPDF_Object*)*, %class.CPDF_Array* (%class.CPDF_Object*)** %65, align 8
  %67 = call %class.CPDF_Array* %66(%class.CPDF_Object* nonnull %28) #10
  %68 = icmp eq %class.CPDF_Array* %67, null
  br i1 %68, label %119, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %67, i64 0, i32 1
  %71 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %67, i64 0, i32 1, i32 0, i32 1
  %72 = bitcast %"class.fxcrt::RetainPtr.284"** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::vector.356"* %70 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = sub i64 %73, %75
  %77 = ashr exact i64 %76, 3
  %78 = trunc i64 %77 to i32
  store i32 %78, i32* %13, align 8
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %119, label %80

80:                                               ; preds = %69
  %81 = and i64 %77, 4294967295
  %82 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 4, i32 0, i32 1
  %83 = bitcast %"class.fxcrt::RetainPtr.77"** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.std::__1::vector.112"* %12 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %84, %86
  %88 = ashr exact i64 %87, 3
  %89 = icmp ugt i64 %81, %88
  %90 = inttoptr i64 %86 to %"class.fxcrt::RetainPtr.77"*
  %91 = inttoptr i64 %84 to %"class.fxcrt::RetainPtr.77"*
  br i1 %89, label %92, label %94

92:                                               ; preds = %80
  %93 = sub nsw i64 %81, %88
  call void @_ZNSt3__16vectorIN5fxcrt9RetainPtrI14CPDF_StreamAccEENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector.112"* %12, i64 %93) #10
  br label %120

94:                                               ; preds = %80
  %95 = icmp ult i64 %81, %88
  br i1 %95, label %96, label %120

96:                                               ; preds = %94
  %97 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %90, i64 %81
  %98 = icmp eq %"class.fxcrt::RetainPtr.77"* %97, %91
  br i1 %98, label %118, label %99

99:                                               ; preds = %96, %116
  %100 = phi %"class.fxcrt::RetainPtr.77"* [ %101, %116 ], [ %91, %96 ]
  %101 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %100, i64 -1
  %102 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %101, i64 0, i32 0, i32 0, i32 0, i32 0
  %103 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %102, align 8
  store %class.CPDF_StreamAcc* null, %class.CPDF_StreamAcc** %102, align 8
  %104 = icmp eq %class.CPDF_StreamAcc* %103, null
  br i1 %104, label %116, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %103, i64 0, i32 0, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = add nsw i64 %107, -1
  store i64 %108, i64* %106, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %116

110:                                              ; preds = %105
  %111 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %103, i64 0, i32 0
  %112 = bitcast %class.CPDF_StreamAcc* %103 to void (%"class.fxcrt::Retainable"*)***
  %113 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %113, i64 1
  %115 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %114, align 8
  call void %115(%"class.fxcrt::Retainable"* nonnull %111) #10
  br label %116

116:                                              ; preds = %110, %105, %99
  %117 = icmp eq %"class.fxcrt::RetainPtr.77"* %101, %97
  br i1 %117, label %118, label %99

118:                                              ; preds = %116, %96
  store %"class.fxcrt::RetainPtr.77"* %97, %"class.fxcrt::RetainPtr.77"** %82, align 8
  br label %120

119:                                              ; preds = %69, %62
  store i8 5, i8* %4, align 8
  br label %120

120:                                              ; preds = %118, %94, %92, %30, %119, %60, %23
  ret void
}

declare %class.CPDF_Document* @_ZNK9CPDF_Page11GetDocumentEv(%class.CPDF_Page*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %class.CPDF_Object* @_ZN15CPDF_Dictionary18GetDirectObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN18CPDF_ContentParser24HandlePageContentFailureEv(%class.CPDF_ContentParser* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 0
  store i8 5, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CPDF_ContentParser23HandlePageContentStreamEP11CPDF_Stream(%class.CPDF_ContentParser* nocapture, %class.CPDF_Stream*) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 64) #11, !noalias !5
  %4 = bitcast i8* %3 to %class.CPDF_StreamAcc*
  tail call void @_ZN14CPDF_StreamAccC1EPK11CPDF_Stream(%class.CPDF_StreamAcc* nonnull %4, %class.CPDF_Stream* %1) #10, !noalias !5
  %5 = ptrtoint i8* %3 to i64
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 8, !noalias !5
  %9 = add nsw i64 %8, 1
  store i64 %9, i64* %7, align 8, !noalias !5
  %10 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %11, align 8
  %13 = bitcast %"class.fxcrt::RetainPtr.77"* %10 to i64*
  store i64 %5, i64* %13, align 8
  %14 = icmp eq %class.CPDF_StreamAcc* %12, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %12, i64 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = add nsw i64 %17, -1
  store i64 %18, i64* %16, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %26

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %12, i64 0, i32 0
  %22 = bitcast %class.CPDF_StreamAcc* %12 to void (%"class.fxcrt::Retainable"*)***
  %23 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %23, i64 1
  %25 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %24, align 8
  tail call void %25(%"class.fxcrt::Retainable"* nonnull %21) #10
  br label %26

26:                                               ; preds = %20, %15, %2
  %27 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %11, align 8
  tail call void @_ZN14CPDF_StreamAcc19LoadAllDataFilteredEv(%class.CPDF_StreamAcc* %27) #10
  %28 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 0
  store i8 2, i8* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CPDF_ContentParser22HandlePageContentArrayEP10CPDF_Array(%class.CPDF_ContentParser*, %class.CPDF_Array* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %1, i64 0, i32 1
  %4 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %1, i64 0, i32 1, i32 0, i32 1
  %5 = bitcast %"class.fxcrt::RetainPtr.284"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.356"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 7
  store i32 %11, i32* %12, align 8
  %13 = icmp eq i32 %11, 0
  br i1 %13, label %54, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 4
  %16 = and i64 %10, 4294967295
  %17 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 4, i32 0, i32 1
  %18 = bitcast %"class.fxcrt::RetainPtr.77"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.112"* %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = icmp ugt i64 %16, %23
  %25 = inttoptr i64 %21 to %"class.fxcrt::RetainPtr.77"*
  %26 = inttoptr i64 %19 to %"class.fxcrt::RetainPtr.77"*
  br i1 %24, label %27, label %29

27:                                               ; preds = %14
  %28 = sub nsw i64 %16, %23
  tail call void @_ZNSt3__16vectorIN5fxcrt9RetainPtrI14CPDF_StreamAccEENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector.112"* %15, i64 %28) #10
  br label %54

29:                                               ; preds = %14
  %30 = icmp ult i64 %16, %23
  br i1 %30, label %31, label %54

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %25, i64 %16
  %33 = icmp eq %"class.fxcrt::RetainPtr.77"* %32, %26
  br i1 %33, label %53, label %34

34:                                               ; preds = %31, %51
  %35 = phi %"class.fxcrt::RetainPtr.77"* [ %36, %51 ], [ %26, %31 ]
  %36 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %35, i64 -1
  %37 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %37, align 8
  store %class.CPDF_StreamAcc* null, %class.CPDF_StreamAcc** %37, align 8
  %39 = icmp eq %class.CPDF_StreamAcc* %38, null
  br i1 %39, label %51, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %38, i64 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = add nsw i64 %42, -1
  store i64 %43, i64* %41, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %40
  %46 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %38, i64 0, i32 0
  %47 = bitcast %class.CPDF_StreamAcc* %38 to void (%"class.fxcrt::Retainable"*)***
  %48 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %48, i64 1
  %50 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %49, align 8
  tail call void %50(%"class.fxcrt::Retainable"* nonnull %46) #10
  br label %51

51:                                               ; preds = %45, %40, %34
  %52 = icmp eq %"class.fxcrt::RetainPtr.77"* %36, %32
  br i1 %52, label %53, label %34

53:                                               ; preds = %51, %31
  store %"class.fxcrt::RetainPtr.77"* %32, %"class.fxcrt::RetainPtr.77"** %17, align 8
  br label %54

54:                                               ; preds = %53, %29, %27, %2
  %55 = phi i1 [ false, %2 ], [ true, %27 ], [ true, %29 ], [ true, %53 ]
  ret i1 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CPDF_ContentParserC2EP9CPDF_FormPK14CPDF_AllStatesPK10CFX_MatrixP14CPDF_Type3CharPNSt3__13setIPKhNSA_4lessISD_EENSA_9allocatorISD_EEEE(%class.CPDF_ContentParser*, %class.CPDF_Form*, %class.CPDF_AllStates*, %class.CFX_Matrix*, %class.CPDF_Type3Char*, %"class.std::__1::set.126"*) unnamed_addr #0 align 2 {
  %7 = alloca %class.CFX_Matrix, align 16
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = alloca %class.CFX_FloatRect, align 8
  %11 = alloca %class.CPDF_Path, align 8
  %12 = alloca %"class.fxcrt::ByteString", align 8
  %13 = alloca %class.CPDF_Path, align 8
  %14 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 0
  store i8 3, i8* %14, align 8
  %15 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %class.CPDF_Form, %class.CPDF_Form* %1, i64 0, i32 0
  store %class.CPDF_PageObjectHolder* %16, %class.CPDF_PageObjectHolder** %15, align 8
  %17 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 2, i32 0
  store %class.CPDF_Type3Char* %4, %class.CPDF_Type3Char** %17, align 8
  %18 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 3
  %19 = bitcast %"class.fxcrt::RetainPtr.77"* %18 to i64*
  %20 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 8
  %21 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %23 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 10, i32 0, i32 0
  %24 = bitcast %"class.std::__1::__tree_node_base"** %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #10
  %25 = bitcast %"class.fxcrt::RetainPtr.77"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 84, i1 false)
  store %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::__tree_end_node"** %23, align 8
  %26 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 11
  %27 = bitcast %"class.std::__1::unique_ptr.136"* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = bitcast %class.CFX_Matrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #10
  %29 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %7, i64 0, i32 4
  %30 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %7, i64 0, i32 5
  %31 = getelementptr inbounds %class.CPDF_Form, %class.CPDF_Form* %1, i64 0, i32 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %32 = bitcast %class.CFX_Matrix* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %32, i8 -1, i64 24, i1 false)
  %33 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %31, align 8
  %34 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)) #10
  call void @_ZNK15CPDF_Dictionary12GetMatrixForERKN5fxcrt10ByteStringE(%class.CFX_Matrix* nonnull sret %7, %class.CPDF_Dictionary* %33, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %8) #10
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  %35 = icmp eq %class.CPDF_AllStates* %2, null
  br i1 %35, label %89, label %36

36:                                               ; preds = %6
  %37 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %7, i64 0, i32 0
  %38 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %7, i64 0, i32 3
  %39 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %7, i64 0, i32 2
  %40 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %7, i64 0, i32 1
  %41 = load float, float* %37, align 16, !noalias !8
  %42 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %2, i64 0, i32 2, i32 0
  %43 = load float, float* %40, align 4, !noalias !8
  %44 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %2, i64 0, i32 2, i32 2
  %45 = bitcast float* %42 to <2 x float>*
  %46 = load <2 x float>, <2 x float>* %45, align 4, !noalias !8
  %47 = shufflevector <2 x float> %46, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %48 = bitcast float* %44 to <2 x float>*
  %49 = load <2 x float>, <2 x float>* %48, align 4, !noalias !8
  %50 = shufflevector <2 x float> %49, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %51 = load float, float* %39, align 8, !noalias !8
  %52 = load float, float* %38, align 4, !noalias !8
  %53 = insertelement <4 x float> undef, float %41, i32 0
  %54 = shufflevector <4 x float> %53, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %55 = extractelement <2 x float> %46, i32 0
  %56 = extractelement <2 x float> %46, i32 1
  %57 = shufflevector <4 x float> %54, <4 x float> %47, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %58 = insertelement <4 x float> undef, float %55, i32 0
  %59 = insertelement <4 x float> %58, float %56, i32 1
  %60 = insertelement <4 x float> %59, float %51, i32 2
  %61 = insertelement <4 x float> %60, float %51, i32 3
  %62 = fmul <4 x float> %57, %61
  %63 = insertelement <4 x float> undef, float %43, i32 0
  %64 = shufflevector <4 x float> %63, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %65 = extractelement <2 x float> %49, i32 0
  %66 = extractelement <2 x float> %49, i32 1
  %67 = shufflevector <4 x float> %64, <4 x float> %50, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %68 = insertelement <4 x float> undef, float %65, i32 0
  %69 = insertelement <4 x float> %68, float %66, i32 1
  %70 = insertelement <4 x float> %69, float %52, i32 2
  %71 = insertelement <4 x float> %70, float %52, i32 3
  %72 = fmul <4 x float> %67, %71
  %73 = fadd <4 x float> %62, %72
  %74 = load float, float* %29, align 16, !noalias !8
  %75 = fmul float %55, %74
  %76 = load float, float* %30, align 4, !noalias !8
  %77 = fmul float %65, %76
  %78 = fadd float %75, %77
  %79 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %2, i64 0, i32 2, i32 4
  %80 = load float, float* %79, align 4, !noalias !8
  %81 = fadd float %80, %78
  %82 = fmul float %56, %74
  %83 = fmul float %66, %76
  %84 = fadd float %82, %83
  %85 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %2, i64 0, i32 2, i32 5
  %86 = load float, float* %85, align 4, !noalias !8
  %87 = fadd float %84, %86
  %88 = bitcast %class.CFX_Matrix* %7 to <4 x float>*
  store <4 x float> %73, <4 x float>* %88, align 16
  store float %81, float* %29, align 16
  store float %87, float* %30, align 4
  br label %89

89:                                               ; preds = %6, %36
  %90 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %31, align 8
  %91 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #10
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #10
  %92 = call %class.CPDF_Array* @_ZN15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %90, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9) #10
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #10
  %93 = bitcast %class.CFX_FloatRect* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 0, i64 16, i1 false) #10
  %94 = bitcast %class.CPDF_Path* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #10
  %95 = getelementptr inbounds %class.CPDF_Path, %class.CPDF_Path* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_RetainablePathData* inttoptr (i64 -6148914691236517206 to %class.CFX_RetainablePathData*), %class.CFX_RetainablePathData** %95, align 8
  call void @_ZN9CPDF_PathC1Ev(%class.CPDF_Path* nonnull %11) #10
  %96 = icmp eq %class.CPDF_Array* %92, null
  br i1 %96, label %136, label %97

97:                                               ; preds = %89
  %98 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %10, i64 0, i32 2
  %99 = call { <2 x float>, <2 x float> } @_ZNK10CPDF_Array7GetRectEv(%class.CPDF_Array* nonnull %92) #10
  %100 = extractvalue { <2 x float>, <2 x float> } %99, 0
  %101 = extractvalue { <2 x float>, <2 x float> } %99, 1
  %102 = bitcast %class.CFX_FloatRect* %10 to <2 x float>*
  store <2 x float> %100, <2 x float>* %102, align 8
  %103 = bitcast float* %98 to <2 x float>*
  store <2 x float> %101, <2 x float>* %103, align 8
  %104 = call i8* @_Znwm(i64 40) #11, !noalias !11
  %105 = bitcast i8* %104 to %class.CFX_RetainablePathData*
  call void @_ZN22CFX_RetainablePathDataC1Ev(%class.CFX_RetainablePathData* nonnull %105) #10, !noalias !11
  %106 = ptrtoint i8* %104 to i64
  %107 = getelementptr inbounds i8, i8* %104, i64 8
  %108 = bitcast i8* %107 to i64*
  %109 = load i64, i64* %108, align 8, !noalias !11
  %110 = add nsw i64 %109, 1
  store i64 %110, i64* %108, align 8, !noalias !11
  %111 = load %class.CFX_RetainablePathData*, %class.CFX_RetainablePathData** %95, align 8
  %112 = bitcast %class.CPDF_Path* %11 to i64*
  store i64 %106, i64* %112, align 8
  %113 = icmp eq %class.CFX_RetainablePathData* %111, null
  br i1 %113, label %125, label %114

114:                                              ; preds = %97
  %115 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %111, i64 0, i32 0, i32 1
  %116 = load i64, i64* %115, align 8
  %117 = add nsw i64 %116, -1
  store i64 %117, i64* %115, align 8
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %125

119:                                              ; preds = %114
  %120 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %111, i64 0, i32 0
  %121 = bitcast %class.CFX_RetainablePathData* %111 to void (%"class.fxcrt::Retainable"*)***
  %122 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %122, i64 1
  %124 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %123, align 8
  call void %124(%"class.fxcrt::Retainable"* nonnull %120) #10
  br label %125

125:                                              ; preds = %97, %114, %119
  call void @_ZN9CPDF_Path15AppendFloatRectERK13CFX_FloatRect(%class.CPDF_Path* nonnull %11, %class.CFX_FloatRect* nonnull dereferenceable(16) %10) #10
  call void @_ZN9CPDF_Path9TransformERK10CFX_Matrix(%class.CPDF_Path* nonnull %11, %class.CFX_Matrix* nonnull dereferenceable(24) %7) #10
  %126 = icmp eq %class.CFX_Matrix* %3, null
  br i1 %126, label %131, label %127

127:                                              ; preds = %125
  call void @_ZN9CPDF_Path9TransformERK10CFX_Matrix(%class.CPDF_Path* nonnull %11, %class.CFX_Matrix* nonnull dereferenceable(24) %3) #10
  %128 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* nonnull %7, %class.CFX_FloatRect* nonnull dereferenceable(16) %10) #10
  %129 = extractvalue { <2 x float>, <2 x float> } %128, 0
  %130 = extractvalue { <2 x float>, <2 x float> } %128, 1
  store <2 x float> %129, <2 x float>* %102, align 8
  store <2 x float> %130, <2 x float>* %103, align 8
  br label %131

131:                                              ; preds = %125, %127
  %132 = phi %class.CFX_Matrix* [ %3, %127 ], [ %7, %125 ]
  %133 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* nonnull %132, %class.CFX_FloatRect* nonnull dereferenceable(16) %10) #10
  %134 = extractvalue { <2 x float>, <2 x float> } %133, 0
  %135 = extractvalue { <2 x float>, <2 x float> } %133, 1
  store <2 x float> %134, <2 x float>* %102, align 8
  store <2 x float> %135, <2 x float>* %103, align 8
  br label %136

136:                                              ; preds = %131, %89
  %137 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %31, align 8
  %138 = bitcast %"class.fxcrt::ByteString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #10
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)) #10
  %139 = call %class.CPDF_Dictionary* @_ZN15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %137, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %12) #10
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #10
  %140 = getelementptr inbounds %class.CPDF_Form, %class.CPDF_Form* %1, i64 0, i32 0, i32 10, i32 0
  %141 = load %class.CPDF_Document*, %class.CPDF_Document** %140, align 8
  %142 = getelementptr inbounds %class.CPDF_Form, %class.CPDF_Form* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %143 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %142, align 8
  %144 = getelementptr inbounds %class.CPDF_Form, %class.CPDF_Form* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %145 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %144, align 8
  %146 = call i8* @_Znwm(i64 856) #11
  %147 = bitcast i8* %146 to %class.CPDF_StreamContentParser*
  call void @_ZN24CPDF_StreamContentParserC1EP13CPDF_DocumentP15CPDF_DictionaryS3_PK10CFX_MatrixP21CPDF_PageObjectHolderS3_RK13CFX_FloatRectPK14CPDF_AllStatesPNSt3__13setIPKhNSF_4lessISI_EENSF_9allocatorISI_EEEE(%class.CPDF_StreamContentParser* nonnull %147, %class.CPDF_Document* %141, %class.CPDF_Dictionary* %143, %class.CPDF_Dictionary* %145, %class.CFX_Matrix* %3, %class.CPDF_PageObjectHolder* %16, %class.CPDF_Dictionary* %139, %class.CFX_FloatRect* nonnull dereferenceable(16) %10, %class.CPDF_AllStates* %2, %"class.std::__1::set.126"* %5) #10
  %148 = ptrtoint i8* %146 to i64
  %149 = getelementptr inbounds %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.136"* %26, i64 0, i32 0, i32 0, i32 0
  %150 = load %class.CPDF_StreamContentParser*, %class.CPDF_StreamContentParser** %149, align 8
  store i64 %148, i64* %27, align 8
  %151 = icmp eq %class.CPDF_StreamContentParser* %150, null
  %152 = bitcast i8* %146 to %class.CPDF_StreamContentParser*
  br i1 %151, label %156, label %153

153:                                              ; preds = %136
  call void @_ZN24CPDF_StreamContentParserD1Ev(%class.CPDF_StreamContentParser* nonnull %150) #10
  %154 = bitcast %class.CPDF_StreamContentParser* %150 to i8*
  call void @_ZdlPv(i8* %154) #11
  %155 = load %class.CPDF_StreamContentParser*, %class.CPDF_StreamContentParser** %149, align 8
  br label %156

156:                                              ; preds = %153, %136
  %157 = phi %class.CPDF_StreamContentParser* [ %155, %153 ], [ %152, %136 ]
  %158 = getelementptr inbounds %class.CPDF_StreamContentParser, %class.CPDF_StreamContentParser* %157, i64 0, i32 11, i32 0, i32 0, i32 0
  %159 = load %class.CPDF_AllStates*, %class.CPDF_AllStates** %158, align 8
  %160 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %159, i64 0, i32 2
  %161 = bitcast %class.CFX_Matrix* %160 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %161, i8* nonnull align 16 %28, i64 24, i1 false)
  %162 = load %class.CPDF_StreamContentParser*, %class.CPDF_StreamContentParser** %149, align 8
  %163 = getelementptr inbounds %class.CPDF_StreamContentParser, %class.CPDF_StreamContentParser* %162, i64 0, i32 11, i32 0, i32 0, i32 0
  %164 = load %class.CPDF_AllStates*, %class.CPDF_AllStates** %163, align 8
  %165 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %164, i64 0, i32 3
  %166 = bitcast %class.CFX_Matrix* %165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %166, i8* nonnull align 16 %28, i64 24, i1 false)
  %167 = load %class.CFX_RetainablePathData*, %class.CFX_RetainablePathData** %95, align 8
  %168 = icmp eq %class.CFX_RetainablePathData* %167, null
  br i1 %168, label %174, label %169

169:                                              ; preds = %156
  %170 = load %class.CPDF_StreamContentParser*, %class.CPDF_StreamContentParser** %149, align 8
  %171 = getelementptr inbounds %class.CPDF_StreamContentParser, %class.CPDF_StreamContentParser* %170, i64 0, i32 11, i32 0, i32 0, i32 0
  %172 = load %class.CPDF_AllStates*, %class.CPDF_AllStates** %171, align 8
  %173 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %172, i64 0, i32 0, i32 1
  call void @_ZN9CPDF_PathC1ERKS_(%class.CPDF_Path* nonnull %13, %class.CPDF_Path* nonnull dereferenceable(8) %11) #10
  call void @_ZN13CPDF_ClipPath10AppendPathE9CPDF_PathN21CFX_FillRenderOptions8FillTypeEb(%class.CPDF_ClipPath* %173, %class.CPDF_Path* nonnull %13, i8 zeroext 2, i1 zeroext true) #10
  call void @_ZN9CPDF_PathD1Ev(%class.CPDF_Path* nonnull %13) #10
  br label %174

174:                                              ; preds = %156, %169
  %175 = getelementptr inbounds %class.CPDF_Form, %class.CPDF_Form* %1, i64 0, i32 0, i32 6, i32 0
  %176 = load i8, i8* %175, align 1, !range !14
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %183, label %178

178:                                              ; preds = %174
  %179 = load %class.CPDF_StreamContentParser*, %class.CPDF_StreamContentParser** %149, align 8
  %180 = getelementptr inbounds %class.CPDF_StreamContentParser, %class.CPDF_StreamContentParser* %179, i64 0, i32 11, i32 0, i32 0, i32 0
  %181 = load %class.CPDF_AllStates*, %class.CPDF_AllStates** %180, align 8
  %182 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %181, i64 0, i32 0, i32 5
  call void @_ZN17CPDF_GeneralState12SetBlendTypeE9BlendMode(%class.CPDF_GeneralState* %182, i32 0) #10
  call void @_ZN17CPDF_GeneralState14SetStrokeAlphaEf(%class.CPDF_GeneralState* %182, float 1.000000e+00) #10
  call void @_ZN17CPDF_GeneralState12SetFillAlphaEf(%class.CPDF_GeneralState* %182, float 1.000000e+00) #10
  call void @_ZN17CPDF_GeneralState11SetSoftMaskEP11CPDF_Object(%class.CPDF_GeneralState* %182, %class.CPDF_Object* null) #10
  br label %183

183:                                              ; preds = %174, %178
  %184 = call %class.CPDF_Stream* @_ZNK9CPDF_Form9GetStreamEv(%class.CPDF_Form* %1) #10
  %185 = call i8* @_Znwm(i64 64) #11, !noalias !15
  %186 = bitcast i8* %185 to %class.CPDF_StreamAcc*
  call void @_ZN14CPDF_StreamAccC1EPK11CPDF_Stream(%class.CPDF_StreamAcc* nonnull %186, %class.CPDF_Stream* %184) #10, !noalias !15
  %187 = ptrtoint i8* %185 to i64
  %188 = getelementptr inbounds i8, i8* %185, i64 8
  %189 = bitcast i8* %188 to i64*
  %190 = load i64, i64* %189, align 8, !noalias !15
  %191 = add nsw i64 %190, 1
  store i64 %191, i64* %189, align 8, !noalias !15
  %192 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %193 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %192, align 8
  store i64 %187, i64* %19, align 8
  %194 = icmp eq %class.CPDF_StreamAcc* %193, null
  br i1 %194, label %206, label %195

195:                                              ; preds = %183
  %196 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %193, i64 0, i32 0, i32 1
  %197 = load i64, i64* %196, align 8
  %198 = add nsw i64 %197, -1
  store i64 %198, i64* %196, align 8
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %206

200:                                              ; preds = %195
  %201 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %193, i64 0, i32 0
  %202 = bitcast %class.CPDF_StreamAcc* %193 to void (%"class.fxcrt::Retainable"*)***
  %203 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %202, align 8
  %204 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %203, i64 1
  %205 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %204, align 8
  call void %205(%"class.fxcrt::Retainable"* nonnull %201) #10
  br label %206

206:                                              ; preds = %200, %195, %183
  %207 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %192, align 8
  call void @_ZN14CPDF_StreamAcc19LoadAllDataFilteredEv(%class.CPDF_StreamAcc* %207) #10
  %208 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %192, align 8
  %209 = call i8* @_ZNK14CPDF_StreamAcc7GetDataEv(%class.CPDF_StreamAcc* %208) #10
  %210 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 6, i32 1, i32 0
  store i8* %209, i8** %210, align 8
  %211 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %212 = load i8*, i8** %211, align 8
  store i8* null, i8** %211, align 8
  %213 = icmp eq i8* %212, null
  br i1 %213, label %215, label %214

214:                                              ; preds = %206
  call void @_Z7FX_FreePv(i8* nonnull %212) #10
  br label %215

215:                                              ; preds = %206, %214
  %216 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %192, align 8
  %217 = call i32 @_ZNK14CPDF_StreamAcc7GetSizeEv(%class.CPDF_StreamAcc* %216) #10
  store i32 %217, i32* %20, align 4
  call void @_ZN9CPDF_PathD1Ev(%class.CPDF_Path* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #10
  ret void
}

declare void @_ZNK15CPDF_Dictionary12GetMatrixForERKN5fxcrt10ByteStringE(%class.CFX_Matrix* sret, %class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare %class.CPDF_Array* @_ZN15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN9CPDF_PathC1Ev(%class.CPDF_Path*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK10CPDF_Array7GetRectEv(%class.CPDF_Array*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN9CPDF_Path15AppendFloatRectERK13CFX_FloatRect(%class.CPDF_Path*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN9CPDF_Path9TransformERK10CFX_Matrix(%class.CPDF_Path*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #1

declare %class.CPDF_Dictionary* @_ZN15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN13CPDF_ClipPath10AppendPathE9CPDF_PathN21CFX_FillRenderOptions8FillTypeEb(%class.CPDF_ClipPath*, %class.CPDF_Path*, i8 zeroext, i1 zeroext) local_unnamed_addr #1

declare void @_ZN9CPDF_PathC1ERKS_(%class.CPDF_Path*, %class.CPDF_Path* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9CPDF_PathD1Ev(%class.CPDF_Path*) unnamed_addr #3

declare void @_ZN17CPDF_GeneralState12SetBlendTypeE9BlendMode(%class.CPDF_GeneralState*, i32) local_unnamed_addr #1

declare void @_ZN17CPDF_GeneralState14SetStrokeAlphaEf(%class.CPDF_GeneralState*, float) local_unnamed_addr #1

declare void @_ZN17CPDF_GeneralState12SetFillAlphaEf(%class.CPDF_GeneralState*, float) local_unnamed_addr #1

declare void @_ZN17CPDF_GeneralState11SetSoftMaskEP11CPDF_Object(%class.CPDF_GeneralState*, %class.CPDF_Object*) local_unnamed_addr #1

declare %class.CPDF_Stream* @_ZNK9CPDF_Form9GetStreamEv(%class.CPDF_Form*) local_unnamed_addr #1

declare void @_ZN14CPDF_StreamAcc19LoadAllDataFilteredEv(%class.CPDF_StreamAcc*) local_unnamed_addr #1

declare i8* @_ZNK14CPDF_StreamAcc7GetDataEv(%class.CPDF_StreamAcc*) local_unnamed_addr #1

declare i32 @_ZNK14CPDF_StreamAcc7GetSizeEv(%class.CPDF_StreamAcc*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CPDF_ContentParserD2Ev(%class.CPDF_ContentParser*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %class.CPDF_StreamContentParser*, %class.CPDF_StreamContentParser** %2, align 8
  store %class.CPDF_StreamContentParser* null, %class.CPDF_StreamContentParser** %2, align 8
  %4 = icmp eq %class.CPDF_StreamContentParser* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN24CPDF_StreamContentParserD1Ev(%class.CPDF_StreamContentParser* nonnull %3) #10
  %6 = bitcast %class.CPDF_StreamContentParser* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 10, i32 0
  %9 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node"**
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  tail call void @_ZNSt3__16__treeIPKhNS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.127"* %8, %"class.std::__1::__tree_node"* %11) #10
  %12 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  store i8* null, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %7
  tail call void @_Z7FX_FreePv(i8* nonnull %13) #10
  br label %16

16:                                               ; preds = %7, %15
  %17 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 5, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = icmp eq i32* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = ptrtoint i32* %18 to i64
  %22 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 5, i32 0, i32 1
  %23 = bitcast i32** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast i32* %18 to i8*
  tail call void @_ZdlPv(i8* %24) #11
  br label %25

25:                                               ; preds = %16, %20
  %26 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 4
  %27 = getelementptr inbounds %"class.std::__1::vector.112", %"class.std::__1::vector.112"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.fxcrt::RetainPtr.77"*, %"class.fxcrt::RetainPtr.77"** %27, align 8
  %29 = icmp eq %"class.fxcrt::RetainPtr.77"* %28, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = bitcast %"class.fxcrt::RetainPtr.77"* %28 to i8*
  %32 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 4, i32 0, i32 1
  %33 = load %"class.fxcrt::RetainPtr.77"*, %"class.fxcrt::RetainPtr.77"** %32, align 8
  %34 = icmp eq %"class.fxcrt::RetainPtr.77"* %33, %28
  br i1 %34, label %57, label %35

35:                                               ; preds = %30, %52
  %36 = phi %"class.fxcrt::RetainPtr.77"* [ %37, %52 ], [ %33, %30 ]
  %37 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %36, i64 -1
  %38 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %38, align 8
  store %class.CPDF_StreamAcc* null, %class.CPDF_StreamAcc** %38, align 8
  %40 = icmp eq %class.CPDF_StreamAcc* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %39, i64 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = add nsw i64 %43, -1
  store i64 %44, i64* %42, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %52

46:                                               ; preds = %41
  %47 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %39, i64 0, i32 0
  %48 = bitcast %class.CPDF_StreamAcc* %39 to void (%"class.fxcrt::Retainable"*)***
  %49 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %49, i64 1
  %51 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %50, align 8
  tail call void %51(%"class.fxcrt::Retainable"* nonnull %47) #10
  br label %52

52:                                               ; preds = %46, %41, %35
  %53 = icmp eq %"class.fxcrt::RetainPtr.77"* %37, %28
  br i1 %53, label %54, label %35

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector.112"* %26 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %30
  %58 = phi i8* [ %56, %54 ], [ %31, %30 ]
  store %"class.fxcrt::RetainPtr.77"* %28, %"class.fxcrt::RetainPtr.77"** %32, align 8
  tail call void @_ZdlPv(i8* %58) #11
  br label %59

59:                                               ; preds = %25, %57
  %60 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %61 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %60, align 8
  store %class.CPDF_StreamAcc* null, %class.CPDF_StreamAcc** %60, align 8
  %62 = icmp eq %class.CPDF_StreamAcc* %61, null
  br i1 %62, label %74, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %61, i64 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = add nsw i64 %65, -1
  store i64 %66, i64* %64, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %74

68:                                               ; preds = %63
  %69 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %61, i64 0, i32 0
  %70 = bitcast %class.CPDF_StreamAcc* %61 to void (%"class.fxcrt::Retainable"*)***
  %71 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %71, i64 1
  %73 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %72, align 8
  tail call void %73(%"class.fxcrt::Retainable"* nonnull %69) #10
  br label %74

74:                                               ; preds = %59, %63, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CPDF_ContentParser8ContinueEP19PauseIndicatorIface(%class.CPDF_ContentParser*, %class.PauseIndicatorIface*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 0
  %4 = icmp eq %class.PauseIndicatorIface* %1, null
  %5 = bitcast %class.PauseIndicatorIface* %1 to i1 (%class.PauseIndicatorIface*)***
  br label %6

6:                                                ; preds = %10, %2
  %7 = load i8, i8* %3, align 8
  switch i8 %7, label %18 [
    i8 1, label %8
    i8 2, label %16
  ]

8:                                                ; preds = %6
  %9 = tail call zeroext i8 @_ZN18CPDF_ContentParser10GetContentEv(%class.CPDF_ContentParser* %0)
  store i8 %9, i8* %3, align 8
  br i1 %4, label %10, label %11

10:                                               ; preds = %8, %11
  br label %6

11:                                               ; preds = %8
  %12 = load i1 (%class.PauseIndicatorIface*)**, i1 (%class.PauseIndicatorIface*)*** %5, align 8
  %13 = getelementptr inbounds i1 (%class.PauseIndicatorIface*)*, i1 (%class.PauseIndicatorIface*)** %12, i64 2
  %14 = load i1 (%class.PauseIndicatorIface*)*, i1 (%class.PauseIndicatorIface*)** %13, align 8
  %15 = tail call zeroext i1 %14(%class.PauseIndicatorIface* nonnull %1) #10
  br i1 %15, label %35, label %10

16:                                               ; preds = %6
  %17 = tail call zeroext i8 @_ZN18CPDF_ContentParser14PrepareContentEv(%class.CPDF_ContentParser* %0)
  store i8 %17, i8* %3, align 8
  br label %18

18:                                               ; preds = %6, %16
  %19 = phi i8 [ %17, %16 ], [ %7, %6 ]
  br label %20

20:                                               ; preds = %31, %18
  %21 = phi i8 [ %19, %18 ], [ %32, %31 ]
  switch i8 %21, label %35 [
    i8 3, label %22
    i8 4, label %33
  ]

22:                                               ; preds = %20
  %23 = tail call zeroext i8 @_ZN18CPDF_ContentParser5ParseEv(%class.CPDF_ContentParser* %0)
  store i8 %23, i8* %3, align 8
  br i1 %4, label %31, label %24

24:                                               ; preds = %22
  %25 = load i1 (%class.PauseIndicatorIface*)**, i1 (%class.PauseIndicatorIface*)*** %5, align 8
  %26 = getelementptr inbounds i1 (%class.PauseIndicatorIface*)*, i1 (%class.PauseIndicatorIface*)** %25, i64 2
  %27 = load i1 (%class.PauseIndicatorIface*)*, i1 (%class.PauseIndicatorIface*)** %26, align 8
  %28 = tail call zeroext i1 %27(%class.PauseIndicatorIface* nonnull %1) #10
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = load i8, i8* %3, align 8
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i8 [ %30, %29 ], [ %23, %22 ]
  br label %20

33:                                               ; preds = %20
  %34 = tail call zeroext i8 @_ZN18CPDF_ContentParser9CheckClipEv(%class.CPDF_ContentParser* %0)
  store i8 5, i8* %3, align 8
  br label %35

35:                                               ; preds = %11, %20, %24, %33
  %36 = phi i1 [ false, %33 ], [ false, %20 ], [ true, %24 ], [ true, %11 ]
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN18CPDF_ContentParser10GetContentEv(%class.CPDF_ContentParser* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 1, i32 0
  %4 = load %class.CPDF_PageObjectHolder*, %class.CPDF_PageObjectHolder** %3, align 8
  %5 = getelementptr inbounds %class.CPDF_PageObjectHolder, %class.CPDF_PageObjectHolder* %4, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %5, align 8
  %7 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN6pdfium11page_objectL9kContentsE, i64 0, i64 0)) #10
  %8 = call %class.CPDF_Array* @_ZN15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %6, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2) #10
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  %9 = icmp eq %class.CPDF_Array* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 9
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = call %class.CPDF_Object* @_ZN10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array* nonnull %8, i64 %13) #10
  %15 = icmp eq %class.CPDF_Object* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %10
  %17 = bitcast %class.CPDF_Object* %14 to %class.CPDF_Stream* (%class.CPDF_Object*)***
  %18 = load %class.CPDF_Stream* (%class.CPDF_Object*)**, %class.CPDF_Stream* (%class.CPDF_Object*)*** %17, align 8
  %19 = getelementptr inbounds %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %18, i64 35
  %20 = load %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %19, align 8
  %21 = call %class.CPDF_Stream* %20(%class.CPDF_Object* nonnull %14) #10
  br label %22

22:                                               ; preds = %1, %10, %16
  %23 = phi %class.CPDF_Stream* [ %21, %16 ], [ null, %10 ], [ null, %1 ]
  %24 = call i8* @_Znwm(i64 64) #11, !noalias !18
  %25 = bitcast i8* %24 to %class.CPDF_StreamAcc*
  call void @_ZN14CPDF_StreamAccC1EPK11CPDF_Stream(%class.CPDF_StreamAcc* nonnull %25, %class.CPDF_Stream* %23) #10, !noalias !18
  %26 = ptrtoint i8* %24 to i64
  %27 = getelementptr inbounds i8, i8* %24, i64 8
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8, !noalias !18
  %30 = add nsw i64 %29, 1
  store i64 %30, i64* %28, align 8, !noalias !18
  %31 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 9
  %32 = load i32, i32* %31, align 8
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 4, i32 0, i32 0
  %35 = load %"class.fxcrt::RetainPtr.77"*, %"class.fxcrt::RetainPtr.77"** %34, align 8
  %36 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %35, i64 %33
  %37 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %37, align 8
  %39 = bitcast %"class.fxcrt::RetainPtr.77"* %36 to i64*
  store i64 %26, i64* %39, align 8
  %40 = icmp eq %class.CPDF_StreamAcc* %38, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %22
  %42 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %38, i64 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = add nsw i64 %43, -1
  store i64 %44, i64* %42, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %52

46:                                               ; preds = %41
  %47 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %38, i64 0, i32 0
  %48 = bitcast %class.CPDF_StreamAcc* %38 to void (%"class.fxcrt::Retainable"*)***
  %49 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %49, i64 1
  %51 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %50, align 8
  call void %51(%"class.fxcrt::Retainable"* nonnull %47) #10
  br label %52

52:                                               ; preds = %46, %41, %22
  %53 = load i32, i32* %31, align 8
  %54 = zext i32 %53 to i64
  %55 = load %"class.fxcrt::RetainPtr.77"*, %"class.fxcrt::RetainPtr.77"** %34, align 8
  %56 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %55, i64 %54, i32 0, i32 0, i32 0, i32 0
  %57 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %56, align 8
  call void @_ZN14CPDF_StreamAcc19LoadAllDataFilteredEv(%class.CPDF_StreamAcc* %57) #10
  %58 = load i32, i32* %31, align 8
  %59 = add i32 %58, 1
  store i32 %59, i32* %31, align 8
  %60 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 7
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %59, %61
  %63 = select i1 %62, i8 2, i8 1
  ret i8 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN18CPDF_ContentParser14PrepareContentEv(%class.CPDF_ContentParser*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 9
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.fxcrt::RetainPtr.77"*, %"class.fxcrt::RetainPtr.77"** %3, align 8
  %5 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 4, i32 0, i32 1
  %6 = load %"class.fxcrt::RetainPtr.77"*, %"class.fxcrt::RetainPtr.77"** %5, align 8
  %7 = icmp eq %"class.fxcrt::RetainPtr.77"* %4, %6
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 5
  %10 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 5, i32 0, i32 1
  %11 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i32** %10 to i64*
  %13 = bitcast %"class.std::__1::vector.119"* %9 to i64*
  %14 = bitcast i32** %11 to i64*
  %15 = getelementptr inbounds %"class.std::__1::vector.119", %"class.std::__1::vector.119"* %9, i64 0, i32 0, i32 0
  br label %32

16:                                               ; preds = %1
  %17 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %18 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %17, align 8
  %19 = tail call i8* @_ZNK14CPDF_StreamAcc7GetDataEv(%class.CPDF_StreamAcc* %18) #10
  %20 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 6, i32 1, i32 0
  store i8* %19, i8** %20, align 8
  %21 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  store i8* null, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %16
  tail call void @_Z7FX_FreePv(i8* nonnull %22) #10
  br label %25

25:                                               ; preds = %16, %24
  %26 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %17, align 8
  %27 = tail call i32 @_ZNK14CPDF_StreamAcc7GetSizeEv(%class.CPDF_StreamAcc* %26) #10
  %28 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 8
  store i32 %27, i32* %28, align 4
  br label %179

29:                                               ; preds = %100
  %30 = trunc i33 %105 to i32
  %31 = icmp eq %"class.fxcrt::RetainPtr.77"* %108, %6
  br i1 %31, label %109, label %32

32:                                               ; preds = %8, %29
  %33 = phi i32 [ 0, %8 ], [ %30, %29 ]
  %34 = phi %"class.fxcrt::RetainPtr.77"* [ %4, %8 ], [ %108, %29 ]
  %35 = load i32*, i32** %10, align 8
  %36 = load i32*, i32** %11, align 8
  %37 = icmp ult i32* %35, %36
  %38 = ptrtoint i32* %36 to i64
  br i1 %37, label %39, label %42

39:                                               ; preds = %32
  store i32 %33, i32* %35, align 4
  %40 = getelementptr inbounds i32, i32* %35, i64 1
  %41 = ptrtoint i32* %40 to i64
  store i64 %41, i64* %12, align 8
  br label %94

42:                                               ; preds = %32
  %43 = ptrtoint i32* %35 to i64
  %44 = load i64, i64* %13, align 8
  %45 = sub i64 %43, %44
  %46 = ashr exact i64 %45, 2
  %47 = add nsw i64 %46, 1
  %48 = icmp ugt i64 %47, 4611686018427387903
  br i1 %48, label %49, label %51

49:                                               ; preds = %42
  %50 = bitcast %"class.std::__1::vector.119"* %9 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %50) #12
  unreachable

51:                                               ; preds = %42
  %52 = sub i64 %38, %44
  %53 = ashr exact i64 %52, 2
  %54 = icmp ult i64 %53, 2305843009213693951
  br i1 %54, label %55, label %63

55:                                               ; preds = %51
  %56 = ashr exact i64 %52, 1
  %57 = icmp ult i64 %56, %47
  %58 = select i1 %57, i64 %47, i64 %56
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %68, label %60

60:                                               ; preds = %55
  %61 = icmp ugt i64 %58, 4611686018427387903
  br i1 %61, label %62, label %63

62:                                               ; preds = %60
  tail call void @abort() #12
  unreachable

63:                                               ; preds = %60, %51
  %64 = phi i64 [ %58, %60 ], [ 4611686018427387903, %51 ]
  %65 = shl i64 %64, 2
  %66 = tail call i8* @_Znwm(i64 %65) #11
  %67 = bitcast i8* %66 to i32*
  br label %68

68:                                               ; preds = %63, %55
  %69 = phi i64 [ %64, %63 ], [ 0, %55 ]
  %70 = phi i32* [ %67, %63 ], [ null, %55 ]
  %71 = getelementptr inbounds i32, i32* %70, i64 %46
  %72 = getelementptr inbounds i32, i32* %70, i64 %69
  %73 = ptrtoint i32* %72 to i64
  store i32 %33, i32* %71, align 4
  %74 = getelementptr inbounds i32, i32* %71, i64 1
  %75 = ptrtoint i32* %74 to i64
  %76 = load i32*, i32** %15, align 8
  %77 = load i64, i64* %12, align 8
  %78 = ptrtoint i32* %76 to i64
  %79 = sub i64 %77, %78
  %80 = ashr exact i64 %79, 2
  %81 = sub nsw i64 0, %80
  %82 = getelementptr inbounds i32, i32* %71, i64 %81
  %83 = ptrtoint i32* %82 to i64
  %84 = icmp sgt i64 %79, 0
  br i1 %84, label %85, label %89

85:                                               ; preds = %68
  %86 = bitcast i32* %82 to i8*
  %87 = bitcast i32* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %87, i64 %79, i1 false) #10
  %88 = load i32*, i32** %15, align 8
  br label %89

89:                                               ; preds = %85, %68
  %90 = phi i32* [ %76, %68 ], [ %88, %85 ]
  store i64 %83, i64* %13, align 8
  store i64 %75, i64* %12, align 8
  store i64 %73, i64* %14, align 8
  %91 = icmp eq i32* %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %89
  %93 = bitcast i32* %90 to i8*
  tail call void @_ZdlPv(i8* %93) #11
  br label %94

94:                                               ; preds = %39, %89, %92
  %95 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  %96 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %95, align 8
  %97 = tail call i32 @_ZNK14CPDF_StreamAcc7GetSizeEv(%class.CPDF_StreamAcc* %96) #10
  %98 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %33, i32 %97) #10
  %99 = extractvalue { i32, i1 } %98, 1
  br i1 %99, label %179, label %100

100:                                              ; preds = %94
  %101 = extractvalue { i32, i1 } %98, 0
  %102 = zext i32 %101 to i33
  %103 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %102, i33 1) #10
  %104 = extractvalue { i33, i1 } %103, 1
  %105 = extractvalue { i33, i1 } %103, 0
  %106 = icmp slt i33 %105, 0
  %107 = or i1 %104, %106
  %108 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %34, i64 1
  br i1 %107, label %179, label %29

109:                                              ; preds = %29
  %110 = trunc i33 %105 to i32
  %111 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 8
  store i32 %110, i32* %111, align 4
  %112 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 6
  %113 = and i33 %105, 4294967295
  %114 = zext i33 %113 to i64
  %115 = tail call i8* @_ZN6pdfium8internal6CallocEmm(i64 %114, i64 1) #10
  %116 = ptrtoint i8* %115 to i64
  %117 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 6, i32 1, i32 0
  store i8* %115, i8** %117, align 8
  %118 = getelementptr inbounds %"class.fxcrt::MaybeOwned", %"class.fxcrt::MaybeOwned"* %112, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i8*, i8** %118, align 8
  %120 = bitcast %"class.fxcrt::MaybeOwned"* %112 to i64*
  store i64 %116, i64* %120, align 8
  %121 = icmp eq i8* %119, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %109
  tail call void @_Z7FX_FreePv(i8* nonnull %119) #10
  %123 = load i8*, i8** %117, align 8
  br label %124

124:                                              ; preds = %109, %122
  %125 = phi i8* [ %115, %109 ], [ %123, %122 ]
  %126 = icmp eq i8* %125, null
  br i1 %126, label %179, label %127

127:                                              ; preds = %124
  %128 = load %"class.fxcrt::RetainPtr.77"*, %"class.fxcrt::RetainPtr.77"** %3, align 8
  %129 = load %"class.fxcrt::RetainPtr.77"*, %"class.fxcrt::RetainPtr.77"** %5, align 8
  %130 = icmp eq %"class.fxcrt::RetainPtr.77"* %128, %129
  br i1 %130, label %154, label %156

131:                                              ; preds = %156
  %132 = load %"class.fxcrt::RetainPtr.77"*, %"class.fxcrt::RetainPtr.77"** %3, align 8
  %133 = load %"class.fxcrt::RetainPtr.77"*, %"class.fxcrt::RetainPtr.77"** %5, align 8
  %134 = icmp eq %"class.fxcrt::RetainPtr.77"* %133, %132
  br i1 %134, label %154, label %135

135:                                              ; preds = %131, %152
  %136 = phi %"class.fxcrt::RetainPtr.77"* [ %137, %152 ], [ %133, %131 ]
  %137 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %136, i64 -1
  %138 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %137, i64 0, i32 0, i32 0, i32 0, i32 0
  %139 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %138, align 8
  store %class.CPDF_StreamAcc* null, %class.CPDF_StreamAcc** %138, align 8
  %140 = icmp eq %class.CPDF_StreamAcc* %139, null
  br i1 %140, label %152, label %141

141:                                              ; preds = %135
  %142 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %139, i64 0, i32 0, i32 1
  %143 = load i64, i64* %142, align 8
  %144 = add nsw i64 %143, -1
  store i64 %144, i64* %142, align 8
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %152

146:                                              ; preds = %141
  %147 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %139, i64 0, i32 0
  %148 = bitcast %class.CPDF_StreamAcc* %139 to void (%"class.fxcrt::Retainable"*)***
  %149 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %149, i64 1
  %151 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %150, align 8
  tail call void %151(%"class.fxcrt::Retainable"* nonnull %147) #10
  br label %152

152:                                              ; preds = %146, %141, %135
  %153 = icmp eq %"class.fxcrt::RetainPtr.77"* %137, %132
  br i1 %153, label %154, label %135

154:                                              ; preds = %152, %127, %131
  %155 = phi %"class.fxcrt::RetainPtr.77"* [ %132, %131 ], [ %128, %127 ], [ %132, %152 ]
  store %"class.fxcrt::RetainPtr.77"* %155, %"class.fxcrt::RetainPtr.77"** %5, align 8
  br label %179

156:                                              ; preds = %127, %176
  %157 = phi i8* [ %178, %176 ], [ %125, %127 ]
  %158 = phi i32 [ %177, %176 ], [ 0, %127 ]
  %159 = phi %"class.fxcrt::RetainPtr.77"* [ %174, %176 ], [ %128, %127 ]
  %160 = zext i32 %158 to i64
  %161 = getelementptr inbounds i8, i8* %157, i64 %160
  %162 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %159, i64 0, i32 0, i32 0, i32 0, i32 0
  %163 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %162, align 8
  %164 = tail call i8* @_ZNK14CPDF_StreamAcc7GetDataEv(%class.CPDF_StreamAcc* %163) #10
  %165 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %162, align 8
  %166 = tail call i32 @_ZNK14CPDF_StreamAcc7GetSizeEv(%class.CPDF_StreamAcc* %165) #10
  %167 = zext i32 %166 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %161, i8* align 1 %164, i64 %167, i1 false)
  %168 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %162, align 8
  %169 = tail call i32 @_ZNK14CPDF_StreamAcc7GetSizeEv(%class.CPDF_StreamAcc* %168) #10
  %170 = add i32 %169, %158
  %171 = load i8*, i8** %117, align 8
  %172 = zext i32 %170 to i64
  %173 = getelementptr inbounds i8, i8* %171, i64 %172
  store i8 32, i8* %173, align 1
  %174 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %159, i64 1
  %175 = icmp eq %"class.fxcrt::RetainPtr.77"* %174, %129
  br i1 %175, label %131, label %176

176:                                              ; preds = %156
  %177 = add i32 %170, 1
  %178 = load i8*, i8** %117, align 8
  br label %156

179:                                              ; preds = %94, %100, %124, %154, %25
  %180 = phi i8 [ 3, %25 ], [ 3, %154 ], [ 5, %124 ], [ 5, %100 ], [ 5, %94 ]
  ret i8 %180
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN18CPDF_ContentParser5ParseEv(%class.CPDF_ContentParser*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 11
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.136"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_StreamContentParser*, %class.CPDF_StreamContentParser** %3, align 8
  %5 = icmp eq %class.CPDF_StreamContentParser* %4, null
  br i1 %5, label %6, label %39

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 10
  %8 = getelementptr inbounds %"class.std::__1::set.126", %"class.std::__1::set.126"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node"**
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  tail call void @_ZNSt3__16__treeIPKhNS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.127"* %8, %"class.std::__1::__tree_node"* %11) #10
  %12 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::set.126", %"class.std::__1::set.126"* %7, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %9, %"class.std::__1::__tree_end_node"** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %14, align 8
  %15 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 1, i32 0
  %16 = load %class.CPDF_PageObjectHolder*, %class.CPDF_PageObjectHolder** %15, align 8
  %17 = getelementptr inbounds %class.CPDF_PageObjectHolder, %class.CPDF_PageObjectHolder* %16, i64 0, i32 10, i32 0
  %18 = load %class.CPDF_Document*, %class.CPDF_Document** %17, align 8
  %19 = getelementptr inbounds %class.CPDF_PageObjectHolder, %class.CPDF_PageObjectHolder* %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %19, align 8
  %21 = getelementptr inbounds %class.CPDF_PageObjectHolder, %class.CPDF_PageObjectHolder* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %22 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %21, align 8
  %23 = getelementptr inbounds %class.CPDF_PageObjectHolder, %class.CPDF_PageObjectHolder* %16, i64 0, i32 5
  %24 = tail call i8* @_Znwm(i64 856) #11
  %25 = bitcast i8* %24 to %class.CPDF_StreamContentParser*
  tail call void @_ZN24CPDF_StreamContentParserC1EP13CPDF_DocumentP15CPDF_DictionaryS3_PK10CFX_MatrixP21CPDF_PageObjectHolderS3_RK13CFX_FloatRectPK14CPDF_AllStatesPNSt3__13setIPKhNSF_4lessISI_EENSF_9allocatorISI_EEEE(%class.CPDF_StreamContentParser* nonnull %25, %class.CPDF_Document* %18, %class.CPDF_Dictionary* %20, %class.CPDF_Dictionary* null, %class.CFX_Matrix* null, %class.CPDF_PageObjectHolder* %16, %class.CPDF_Dictionary* %22, %class.CFX_FloatRect* dereferenceable(16) %23, %class.CPDF_AllStates* null, %"class.std::__1::set.126"* %7) #10
  %26 = ptrtoint i8* %24 to i64
  %27 = load %class.CPDF_StreamContentParser*, %class.CPDF_StreamContentParser** %3, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.136"* %2 to i64*
  store i64 %26, i64* %28, align 8
  %29 = icmp eq %class.CPDF_StreamContentParser* %27, null
  %30 = bitcast i8* %24 to %class.CPDF_StreamContentParser*
  br i1 %29, label %34, label %31

31:                                               ; preds = %6
  tail call void @_ZN24CPDF_StreamContentParserD1Ev(%class.CPDF_StreamContentParser* nonnull %27) #10
  %32 = bitcast %class.CPDF_StreamContentParser* %27 to i8*
  tail call void @_ZdlPv(i8* %32) #11
  %33 = load %class.CPDF_StreamContentParser*, %class.CPDF_StreamContentParser** %3, align 8
  br label %34

34:                                               ; preds = %31, %6
  %35 = phi %class.CPDF_StreamContentParser* [ %33, %31 ], [ %30, %6 ]
  %36 = getelementptr inbounds %class.CPDF_StreamContentParser, %class.CPDF_StreamContentParser* %35, i64 0, i32 11, i32 0, i32 0, i32 0
  %37 = load %class.CPDF_AllStates*, %class.CPDF_AllStates** %36, align 8
  %38 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %37, i64 0, i32 0, i32 3
  tail call void @_ZN15CPDF_ColorState10SetDefaultEv(%class.CPDF_ColorState* %38) #10
  br label %39

39:                                               ; preds = %1, %34
  %40 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 9
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 8
  %43 = load i32, i32* %42, align 4
  %44 = icmp ult i32 %41, %43
  br i1 %44, label %45, label %107

45:                                               ; preds = %39
  %46 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 5
  %47 = getelementptr inbounds %"class.std::__1::vector.119", %"class.std::__1::vector.119"* %46, i64 0, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 5, i32 0, i32 1
  %50 = load i32*, i32** %49, align 8
  %51 = icmp eq i32* %48, %50
  %52 = ptrtoint i32* %48 to i64
  %53 = ptrtoint i32* %50 to i64
  br i1 %51, label %54, label %98

54:                                               ; preds = %45
  %55 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = icmp ult i32* %48, %56
  br i1 %57, label %58, label %62

58:                                               ; preds = %54
  store i32 0, i32* %48, align 4
  %59 = getelementptr inbounds i32, i32* %48, i64 1
  %60 = ptrtoint i32* %59 to i64
  %61 = bitcast i32** %49 to i64*
  store i64 %60, i64* %61, align 8
  br label %98

62:                                               ; preds = %54
  %63 = ptrtoint i32* %56 to i64
  %64 = bitcast i32** %49 to i64*
  %65 = bitcast %"class.std::__1::vector.119"* %46 to i64*
  %66 = bitcast i32** %55 to i64*
  %67 = sub i64 %63, %52
  %68 = ashr exact i64 %67, 2
  %69 = icmp ult i64 %68, 2305843009213693951
  br i1 %69, label %70, label %76

70:                                               ; preds = %62
  %71 = ashr exact i64 %67, 1
  %72 = icmp eq i64 %67, 0
  %73 = select i1 %72, i64 1, i64 %71
  %74 = icmp ugt i64 %73, 4611686018427387903
  br i1 %74, label %75, label %76

75:                                               ; preds = %70
  tail call void @abort() #12
  unreachable

76:                                               ; preds = %62, %70
  %77 = phi i64 [ %73, %70 ], [ 4611686018427387903, %62 ]
  %78 = shl i64 %77, 2
  %79 = tail call i8* @_Znwm(i64 %78) #11
  %80 = bitcast i8* %79 to i32*
  %81 = getelementptr inbounds i32, i32* %80, i64 %77
  %82 = ptrtoint i32* %81 to i64
  store i32 0, i32* %80, align 4
  %83 = getelementptr inbounds i8, i8* %79, i64 4
  %84 = ptrtoint i8* %83 to i64
  %85 = sub i64 %53, %52
  %86 = ashr exact i64 %85, 2
  %87 = sub nsw i64 0, %86
  %88 = getelementptr inbounds i32, i32* %80, i64 %87
  %89 = ptrtoint i32* %88 to i64
  %90 = icmp sgt i64 %85, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %76
  %92 = bitcast i32* %88 to i8*
  %93 = bitcast i32* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* align 4 %93, i64 %85, i1 false) #10
  br label %94

94:                                               ; preds = %91, %76
  store i64 %89, i64* %65, align 8
  store i64 %84, i64* %64, align 8
  store i64 %82, i64* %66, align 8
  %95 = icmp eq i32* %48, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = bitcast i32* %48 to i8*
  tail call void @_ZdlPv(i8* %97) #11
  br label %98

98:                                               ; preds = %96, %94, %58, %45
  %99 = load %class.CPDF_StreamContentParser*, %class.CPDF_StreamContentParser** %3, align 8
  %100 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 6, i32 1, i32 0
  %101 = load i8*, i8** %100, align 8
  %102 = load i32, i32* %42, align 4
  %103 = load i32, i32* %40, align 8
  %104 = tail call i32 @_ZN24CPDF_StreamContentParser5ParseEPKhjjjRKNSt3__16vectorIjNS2_9allocatorIjEEEE(%class.CPDF_StreamContentParser* %99, i8* %101, i32 %102, i32 %103, i32 100, %"class.std::__1::vector.119"* dereferenceable(24) %46) #10
  %105 = load i32, i32* %40, align 8
  %106 = add i32 %105, %104
  store i32 %106, i32* %40, align 8
  br label %107

107:                                              ; preds = %39, %98
  %108 = phi i8 [ 3, %98 ], [ 4, %39 ]
  ret i8 %108
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN18CPDF_ContentParser9CheckClipEv(%class.CPDF_ContentParser* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.CPDF_Path, align 8
  %3 = alloca %class.CFX_PTemplate, align 4
  %4 = alloca %class.CFX_PTemplate, align 4
  %5 = alloca %class.CFX_FloatRect, align 4
  %6 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 2, i32 0
  %7 = load %class.CPDF_Type3Char*, %class.CPDF_Type3Char** %6, align 8
  %8 = icmp eq %class.CPDF_Type3Char* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %11 = load %class.CPDF_StreamContentParser*, %class.CPDF_StreamContentParser** %10, align 8
  %12 = getelementptr inbounds %class.CPDF_StreamContentParser, %class.CPDF_StreamContentParser* %11, i64 0, i32 24
  %13 = load i8, i8* %12, align 8, !range !14
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %class.CPDF_StreamContentParser, %class.CPDF_StreamContentParser* %11, i64 0, i32 28, i64 0
  tail call void @_ZN14CPDF_Type3Char24InitializeFromStreamDataEbPKf(%class.CPDF_Type3Char* nonnull %7, i1 zeroext %14, float* %15) #10
  br label %16

16:                                               ; preds = %1, %9
  %17 = getelementptr inbounds %class.CPDF_ContentParser, %class.CPDF_ContentParser* %0, i64 0, i32 1, i32 0
  %18 = load %class.CPDF_PageObjectHolder*, %class.CPDF_PageObjectHolder** %17, align 8
  %19 = getelementptr inbounds %class.CPDF_PageObjectHolder, %class.CPDF_PageObjectHolder* %18, i64 0, i32 13, i32 0, i32 0, i32 1
  %20 = load %"class.std::__1::unique_ptr.45"**, %"class.std::__1::unique_ptr.45"*** %19, align 8
  %21 = getelementptr inbounds %class.CPDF_PageObjectHolder, %class.CPDF_PageObjectHolder* %18, i64 0, i32 13, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = lshr i64 %22, 9
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.45"*, %"class.std::__1::unique_ptr.45"** %20, i64 %23
  %25 = getelementptr inbounds %class.CPDF_PageObjectHolder, %class.CPDF_PageObjectHolder* %18, i64 0, i32 13, i32 0, i32 0, i32 2
  %26 = load %"class.std::__1::unique_ptr.45"**, %"class.std::__1::unique_ptr.45"*** %25, align 8
  %27 = icmp eq %"class.std::__1::unique_ptr.45"** %26, %20
  br i1 %27, label %62, label %28

28:                                               ; preds = %16
  %29 = load %"class.std::__1::unique_ptr.45"*, %"class.std::__1::unique_ptr.45"** %24, align 8
  %30 = and i64 %22, 511
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %29, i64 %30
  %32 = getelementptr inbounds %class.CPDF_PageObjectHolder, %class.CPDF_PageObjectHolder* %18, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, %22
  %35 = lshr i64 %34, 9
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.45"*, %"class.std::__1::unique_ptr.45"** %20, i64 %35
  %37 = load %"class.std::__1::unique_ptr.45"*, %"class.std::__1::unique_ptr.45"** %36, align 8
  %38 = and i64 %34, 511
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %37, i64 %38
  %40 = icmp eq %"class.std::__1::unique_ptr.45"* %39, %31
  br i1 %40, label %62, label %41

41:                                               ; preds = %28
  %42 = bitcast %class.CPDF_Path* %2 to i8*
  %43 = getelementptr inbounds %class.CPDF_Path, %class.CPDF_Path* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = bitcast %class.CFX_PTemplate* %3 to i8*
  %45 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 0
  %46 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 1
  %47 = bitcast %class.CFX_PTemplate* %4 to i8*
  %48 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 0
  %49 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 1
  %50 = bitcast %class.CFX_FloatRect* %5 to i8*
  %51 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %5, i64 0, i32 1
  %52 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %5, i64 0, i32 2
  %53 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %5, i64 0, i32 3
  %54 = bitcast %class.CFX_PTemplate* %3 to i32*
  %55 = bitcast float* %46 to i32*
  %56 = bitcast %class.CFX_PTemplate* %4 to i32*
  %57 = bitcast float* %49 to i32*
  %58 = bitcast %class.CFX_FloatRect* %5 to i32*
  %59 = bitcast float* %51 to i32*
  %60 = bitcast float* %52 to i32*
  %61 = bitcast float* %53 to i32*
  br label %63

62:                                               ; preds = %128, %16, %28
  ret i8 5

63:                                               ; preds = %41, %128
  %64 = phi %"class.std::__1::unique_ptr.45"* [ %31, %41 ], [ %131, %128 ]
  %65 = phi %"class.std::__1::unique_ptr.45"** [ %24, %41 ], [ %130, %128 ]
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %64, i64 0, i32 0, i32 0, i32 0
  %67 = load %class.CPDF_PageObject*, %class.CPDF_PageObject** %66, align 8
  %68 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %67, i64 0, i32 0, i32 1
  %69 = getelementptr inbounds %class.CPDF_ClipPath, %class.CPDF_ClipPath* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"class.CPDF_ClipPath::PathData"*, %"class.CPDF_ClipPath::PathData"** %69, align 8
  %71 = icmp eq %"class.CPDF_ClipPath::PathData"* %70, null
  br i1 %71, label %117, label %72

72:                                               ; preds = %63
  %73 = call i64 @_ZNK13CPDF_ClipPath12GetPathCountEv(%class.CPDF_ClipPath* %68) #10
  %74 = icmp eq i64 %73, 1
  br i1 %74, label %75, label %117

75:                                               ; preds = %72
  %76 = load %class.CPDF_PageObject*, %class.CPDF_PageObject** %66, align 8
  %77 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %76, i64 0, i32 0, i32 1
  %78 = call i64 @_ZNK13CPDF_ClipPath12GetTextCountEv(%class.CPDF_ClipPath* %77) #10
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %117

80:                                               ; preds = %75
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #10
  store %class.CFX_RetainablePathData* inttoptr (i64 -6148914691236517206 to %class.CFX_RetainablePathData*), %class.CFX_RetainablePathData** %43, align 8
  %81 = load %class.CPDF_PageObject*, %class.CPDF_PageObject** %66, align 8
  %82 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %81, i64 0, i32 0, i32 1
  call void @_ZNK13CPDF_ClipPath7GetPathEm(%class.CPDF_Path* nonnull sret %2, %class.CPDF_ClipPath* %82, i64 0) #10
  %83 = call zeroext i1 @_ZNK9CPDF_Path6IsRectEv(%class.CPDF_Path* nonnull %2) #10
  br i1 %83, label %84, label %116

84:                                               ; preds = %80
  %85 = load %class.CPDF_PageObject*, %class.CPDF_PageObject** %66, align 8
  %86 = bitcast %class.CPDF_PageObject* %85 to i1 (%class.CPDF_PageObject*)***
  %87 = load i1 (%class.CPDF_PageObject*)**, i1 (%class.CPDF_PageObject*)*** %86, align 8
  %88 = getelementptr inbounds i1 (%class.CPDF_PageObject*)*, i1 (%class.CPDF_PageObject*)** %87, i64 7
  %89 = load i1 (%class.CPDF_PageObject*)*, i1 (%class.CPDF_PageObject*)** %88, align 8
  %90 = call zeroext i1 %89(%class.CPDF_PageObject* %85) #10
  br i1 %90, label %116, label %91

91:                                               ; preds = %84
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #10
  store float 0xFFFFFFFFE0000000, float* %45, align 4
  store float 0xFFFFFFFFE0000000, float* %46, align 4
  call void @_ZNK9CPDF_Path8GetPointEi(%class.CFX_PTemplate* nonnull sret %3, %class.CPDF_Path* nonnull %2, i32 0) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  store float 0xFFFFFFFFE0000000, float* %48, align 4
  store float 0xFFFFFFFFE0000000, float* %49, align 4
  call void @_ZNK9CPDF_Path8GetPointEi(%class.CFX_PTemplate* nonnull sret %4, %class.CPDF_Path* nonnull %2, i32 2) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #10
  %92 = load i32, i32* %54, align 4
  %93 = load i32, i32* %55, align 4
  %94 = load i32, i32* %56, align 4
  %95 = load i32, i32* %57, align 4
  store i32 %92, i32* %58, align 4
  store i32 %93, i32* %59, align 4
  store i32 %94, i32* %60, align 4
  store i32 %95, i32* %61, align 4
  %96 = load %class.CPDF_PageObject*, %class.CPDF_PageObject** %66, align 8
  %97 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %96, i64 0, i32 1
  %98 = call zeroext i1 @_ZNK13CFX_FloatRect8ContainsERKS_(%class.CFX_FloatRect* nonnull %5, %class.CFX_FloatRect* dereferenceable(16) %97) #10
  br i1 %98, label %99, label %115

99:                                               ; preds = %91
  %100 = load %class.CPDF_PageObject*, %class.CPDF_PageObject** %66, align 8
  %101 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %100, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load %"class.CPDF_ClipPath::PathData"*, %"class.CPDF_ClipPath::PathData"** %101, align 8
  store %"class.CPDF_ClipPath::PathData"* null, %"class.CPDF_ClipPath::PathData"** %101, align 8
  %103 = icmp eq %"class.CPDF_ClipPath::PathData"* %102, null
  br i1 %103, label %115, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.CPDF_ClipPath::PathData", %"class.CPDF_ClipPath::PathData"* %102, i64 0, i32 0, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = add nsw i64 %106, -1
  store i64 %107, i64* %105, align 8
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %115

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.CPDF_ClipPath::PathData", %"class.CPDF_ClipPath::PathData"* %102, i64 0, i32 0
  %111 = bitcast %"class.CPDF_ClipPath::PathData"* %102 to void (%"class.fxcrt::Retainable"*)***
  %112 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %112, i64 1
  %114 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %113, align 8
  call void %114(%"class.fxcrt::Retainable"* nonnull %110) #10
  br label %115

115:                                              ; preds = %109, %104, %99, %91
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #10
  call void @_ZN9CPDF_PathD1Ev(%class.CPDF_Path* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #10
  br label %117

116:                                              ; preds = %80, %84
  call void @_ZN9CPDF_PathD1Ev(%class.CPDF_Path* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #10
  br label %117

117:                                              ; preds = %63, %116, %75, %72, %115
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %64, i64 1
  %119 = ptrtoint %"class.std::__1::unique_ptr.45"* %118 to i64
  %120 = bitcast %"class.std::__1::unique_ptr.45"** %65 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = sub i64 %119, %121
  %123 = icmp eq i64 %122, 4096
  br i1 %123, label %124, label %128

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.45"*, %"class.std::__1::unique_ptr.45"** %65, i64 1
  %126 = bitcast %"class.std::__1::unique_ptr.45"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  br label %128

128:                                              ; preds = %117, %124
  %129 = phi i64 [ %127, %124 ], [ %119, %117 ]
  %130 = phi %"class.std::__1::unique_ptr.45"** [ %125, %124 ], [ %65, %117 ]
  %131 = inttoptr i64 %129 to %"class.std::__1::unique_ptr.45"*
  %132 = icmp eq %"class.std::__1::unique_ptr.45"* %39, %131
  br i1 %132, label %62, label %63
}

declare %class.CPDF_Object* @_ZN10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #1

declare i8* @_ZN6pdfium8internal6CallocEmm(i64, i64) local_unnamed_addr #1

declare void @_ZN15CPDF_ColorState10SetDefaultEv(%class.CPDF_ColorState*) local_unnamed_addr #1

declare i32 @_ZN24CPDF_StreamContentParser5ParseEPKhjjjRKNSt3__16vectorIjNS2_9allocatorIjEEEE(%class.CPDF_StreamContentParser*, i8*, i32, i32, i32, %"class.std::__1::vector.119"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN14CPDF_Type3Char24InitializeFromStreamDataEbPKf(%class.CPDF_Type3Char*, i1 zeroext, float*) local_unnamed_addr #1

declare i64 @_ZNK13CPDF_ClipPath12GetPathCountEv(%class.CPDF_ClipPath*) local_unnamed_addr #1

declare i64 @_ZNK13CPDF_ClipPath12GetTextCountEv(%class.CPDF_ClipPath*) local_unnamed_addr #1

declare void @_ZNK13CPDF_ClipPath7GetPathEm(%class.CPDF_Path* sret, %class.CPDF_ClipPath*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZNK9CPDF_Path6IsRectEv(%class.CPDF_Path*) local_unnamed_addr #1

declare void @_ZNK9CPDF_Path8GetPointEi(%class.CFX_PTemplate* sret, %class.CPDF_Path*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK13CFX_FloatRect8ContainsERKS_(%class.CFX_FloatRect*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN22CFX_RetainablePathDataC1Ev(%class.CFX_RetainablePathData*) unnamed_addr #1

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #6

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPKhNS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.127"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIPKhNS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.127"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIPKhNS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.127"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN24CPDF_StreamContentParserD1Ev(%class.CPDF_StreamContentParser*) unnamed_addr #3

declare void @_ZN24CPDF_StreamContentParserC1EP13CPDF_DocumentP15CPDF_DictionaryS3_PK10CFX_MatrixP21CPDF_PageObjectHolderS3_RK13CFX_FloatRectPK14CPDF_AllStatesPNSt3__13setIPKhNSF_4lessISI_EENSF_9allocatorISI_EEEE(%class.CPDF_StreamContentParser*, %class.CPDF_Document*, %class.CPDF_Dictionary*, %class.CPDF_Dictionary*, %class.CFX_Matrix*, %class.CPDF_PageObjectHolder*, %class.CPDF_Dictionary*, %class.CFX_FloatRect* dereferenceable(16), %class.CPDF_AllStates*, %"class.std::__1::set.126"*) unnamed_addr #1

declare void @_ZN14CPDF_StreamAccC1EPK11CPDF_Stream(%class.CPDF_StreamAcc*, %class.CPDF_Stream*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5fxcrt9RetainPtrI14CPDF_StreamAccEENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector.112"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.112", %"class.std::__1::vector.112"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.fxcrt::RetainPtr.77"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.112", %"class.std::__1::vector.112"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.fxcrt::RetainPtr.77"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.fxcrt::RetainPtr.77"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %13, i64 %18, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %class.CPDF_StreamAcc** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #10
  %26 = ptrtoint %"class.fxcrt::RetainPtr.77"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %307

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.112"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.112"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #12
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #12
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #11
  %54 = bitcast i8* %53 to %"class.fxcrt::RetainPtr.77"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.fxcrt::RetainPtr.77"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %57, i64 %33
  %59 = ptrtoint %"class.fxcrt::RetainPtr.77"* %58 to i64
  %60 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %57, i64 %56
  %61 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %58, i64 %1
  %62 = shl nsw i64 %1, 3
  %63 = add i64 %62, -8
  %64 = lshr exact i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %55, %68
  %69 = phi %"class.fxcrt::RetainPtr.77"* [ %73, %68 ], [ %58, %55 ]
  %70 = phi i64 [ %74, %68 ], [ %59, %55 ]
  %71 = phi i64 [ %75, %68 ], [ %66, %55 ]
  %72 = inttoptr i64 %70 to i64*
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %69, i64 1
  %74 = ptrtoint %"class.fxcrt::RetainPtr.77"* %73 to i64
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !21

77:                                               ; preds = %68
  %78 = ptrtoint %"class.fxcrt::RetainPtr.77"* %73 to i64
  br label %79

79:                                               ; preds = %55, %77
  %80 = phi %"class.fxcrt::RetainPtr.77"* [ %58, %55 ], [ %73, %77 ]
  %81 = phi i64 [ %59, %55 ], [ %78, %77 ]
  %82 = icmp ult i64 %63, 56
  br i1 %82, label %104, label %83

83:                                               ; preds = %79, %83
  %84 = phi %"class.fxcrt::RetainPtr.77"* [ %101, %83 ], [ %80, %79 ]
  %85 = phi i64 [ %102, %83 ], [ %81, %79 ]
  %86 = inttoptr i64 %85 to i64*
  store i64 0, i64* %86, align 8
  %87 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %84, i64 1
  %88 = bitcast %"class.fxcrt::RetainPtr.77"* %87 to i64*
  store i64 0, i64* %88, align 8
  %89 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %84, i64 2
  %90 = bitcast %"class.fxcrt::RetainPtr.77"* %89 to i64*
  store i64 0, i64* %90, align 8
  %91 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %84, i64 3
  %92 = bitcast %"class.fxcrt::RetainPtr.77"* %91 to i64*
  store i64 0, i64* %92, align 8
  %93 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %84, i64 4
  %94 = bitcast %"class.fxcrt::RetainPtr.77"* %93 to i64*
  store i64 0, i64* %94, align 8
  %95 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %84, i64 5
  %96 = bitcast %"class.fxcrt::RetainPtr.77"* %95 to i64*
  store i64 0, i64* %96, align 8
  %97 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %84, i64 6
  %98 = bitcast %"class.fxcrt::RetainPtr.77"* %97 to i64*
  store i64 0, i64* %98, align 8
  %99 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %84, i64 7
  %100 = bitcast %"class.fxcrt::RetainPtr.77"* %99 to i64*
  store i64 0, i64* %100, align 8
  %101 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %84, i64 8
  %102 = ptrtoint %"class.fxcrt::RetainPtr.77"* %101 to i64
  %103 = icmp eq %"class.fxcrt::RetainPtr.77"* %61, %101
  br i1 %103, label %104, label %83

104:                                              ; preds = %83, %79
  %105 = ptrtoint %"class.fxcrt::RetainPtr.77"* %60 to i64
  %106 = ptrtoint %"class.fxcrt::RetainPtr.77"* %61 to i64
  %107 = getelementptr inbounds %"class.std::__1::vector.112", %"class.std::__1::vector.112"* %0, i64 0, i32 0, i32 0
  %108 = load %"class.fxcrt::RetainPtr.77"*, %"class.fxcrt::RetainPtr.77"** %107, align 8
  %109 = ptrtoint %"class.fxcrt::RetainPtr.77"* %108 to i64
  %110 = load %"class.fxcrt::RetainPtr.77"*, %"class.fxcrt::RetainPtr.77"** %6, align 8
  %111 = icmp eq %"class.fxcrt::RetainPtr.77"* %110, %108
  br i1 %111, label %278, label %112

112:                                              ; preds = %104
  %113 = getelementptr %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %110, i64 -1, i32 0, i32 0, i32 0, i32 0
  %114 = ptrtoint %class.CPDF_StreamAcc** %113 to i64
  %115 = sub i64 %114, %109
  %116 = lshr i64 %115, 3
  %117 = add nuw nsw i64 %116, 1
  %118 = icmp ult i64 %117, 4
  br i1 %118, label %223, label %119

119:                                              ; preds = %112
  %120 = getelementptr %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %110, i64 -1, i32 0, i32 0, i32 0, i32 0
  %121 = ptrtoint %class.CPDF_StreamAcc** %120 to i64
  %122 = sub i64 %121, %109
  %123 = lshr i64 %122, 3
  %124 = xor i64 %123, -1
  %125 = add nsw i64 %33, %124
  %126 = getelementptr %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %57, i64 %125
  %127 = xor i64 %123, -1
  %128 = getelementptr %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %110, i64 %127
  %129 = icmp ult %"class.fxcrt::RetainPtr.77"* %126, %110
  %130 = icmp ult %"class.fxcrt::RetainPtr.77"* %128, %58
  %131 = and i1 %129, %130
  br i1 %131, label %223, label %132

132:                                              ; preds = %119
  %133 = and i64 %117, 4611686018427387900
  %134 = sub nsw i64 0, %133
  %135 = getelementptr %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %58, i64 %134
  %136 = sub nsw i64 0, %133
  %137 = getelementptr %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %110, i64 %136
  %138 = add nsw i64 %133, -4
  %139 = lshr exact i64 %138, 2
  %140 = add nuw nsw i64 %139, 1
  %141 = and i64 %140, 1
  %142 = icmp eq i64 %138, 0
  br i1 %142, label %197, label %143

143:                                              ; preds = %132
  %144 = sub nuw nsw i64 %140, %141
  %145 = getelementptr %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %58, i64 -1
  %146 = getelementptr %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %110, i64 -1
  %147 = getelementptr %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %58, i64 -1
  %148 = getelementptr %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %110, i64 -1
  br label %149

149:                                              ; preds = %149, %143
  %150 = phi i64 [ 0, %143 ], [ %192, %149 ]
  %151 = phi i64 [ %144, %143 ], [ %193, %149 ]
  %152 = sub i64 0, %150
  %153 = sub i64 0, %150
  %154 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %145, i64 %152
  %155 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %146, i64 %153
  %156 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %154, i64 -1
  %157 = bitcast %"class.fxcrt::RetainPtr.77"* %156 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %157, align 8, !alias.scope !23, !noalias !26
  %158 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %154, i64 -2
  %159 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %158, i64 -1
  %160 = bitcast %"class.fxcrt::RetainPtr.77"* %159 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %160, align 8, !alias.scope !23, !noalias !26
  %161 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %155, i64 -1
  %162 = bitcast %"class.fxcrt::RetainPtr.77"* %161 to <2 x i64>*
  %163 = load <2 x i64>, <2 x i64>* %162, align 8, !alias.scope !26
  %164 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %155, i64 -2
  %165 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %164, i64 -1
  %166 = bitcast %"class.fxcrt::RetainPtr.77"* %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8, !alias.scope !26
  %168 = bitcast %"class.fxcrt::RetainPtr.77"* %156 to <2 x i64>*
  store <2 x i64> %163, <2 x i64>* %168, align 8, !alias.scope !23, !noalias !26
  %169 = bitcast %"class.fxcrt::RetainPtr.77"* %159 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %169, align 8, !alias.scope !23, !noalias !26
  %170 = bitcast %"class.fxcrt::RetainPtr.77"* %161 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %170, align 8, !alias.scope !26
  %171 = bitcast %"class.fxcrt::RetainPtr.77"* %165 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %171, align 8, !alias.scope !26
  %172 = sub nuw nsw i64 -4, %150
  %173 = sub nuw nsw i64 -4, %150
  %174 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %147, i64 %172
  %175 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %148, i64 %173
  %176 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %174, i64 -1
  %177 = bitcast %"class.fxcrt::RetainPtr.77"* %176 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %177, align 8, !alias.scope !23, !noalias !26
  %178 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %174, i64 -2
  %179 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %178, i64 -1
  %180 = bitcast %"class.fxcrt::RetainPtr.77"* %179 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %180, align 8, !alias.scope !23, !noalias !26
  %181 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %175, i64 -1
  %182 = bitcast %"class.fxcrt::RetainPtr.77"* %181 to <2 x i64>*
  %183 = load <2 x i64>, <2 x i64>* %182, align 8, !alias.scope !26
  %184 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %175, i64 -2
  %185 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %184, i64 -1
  %186 = bitcast %"class.fxcrt::RetainPtr.77"* %185 to <2 x i64>*
  %187 = load <2 x i64>, <2 x i64>* %186, align 8, !alias.scope !26
  %188 = bitcast %"class.fxcrt::RetainPtr.77"* %176 to <2 x i64>*
  store <2 x i64> %183, <2 x i64>* %188, align 8, !alias.scope !23, !noalias !26
  %189 = bitcast %"class.fxcrt::RetainPtr.77"* %179 to <2 x i64>*
  store <2 x i64> %187, <2 x i64>* %189, align 8, !alias.scope !23, !noalias !26
  %190 = bitcast %"class.fxcrt::RetainPtr.77"* %181 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %190, align 8, !alias.scope !26
  %191 = bitcast %"class.fxcrt::RetainPtr.77"* %185 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %191, align 8, !alias.scope !26
  %192 = add i64 %150, 8
  %193 = add i64 %151, -2
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %149, !llvm.loop !28

195:                                              ; preds = %149
  %196 = sub nuw nsw i64 -8, %150
  br label %197

197:                                              ; preds = %195, %132
  %198 = phi i64 [ 0, %132 ], [ %196, %195 ]
  %199 = icmp eq i64 %141, 0
  br i1 %199, label %221, label %200

200:                                              ; preds = %197
  %201 = getelementptr %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %58, i64 -1
  %202 = getelementptr %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %110, i64 -1
  %203 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %201, i64 %198
  %204 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %202, i64 %198
  %205 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %203, i64 -1
  %206 = bitcast %"class.fxcrt::RetainPtr.77"* %205 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %206, align 8, !alias.scope !23, !noalias !26
  %207 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %203, i64 -2
  %208 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %207, i64 -1
  %209 = bitcast %"class.fxcrt::RetainPtr.77"* %208 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %209, align 8, !alias.scope !23, !noalias !26
  %210 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %204, i64 -1
  %211 = bitcast %"class.fxcrt::RetainPtr.77"* %210 to <2 x i64>*
  %212 = load <2 x i64>, <2 x i64>* %211, align 8, !alias.scope !26
  %213 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %204, i64 -2
  %214 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %213, i64 -1
  %215 = bitcast %"class.fxcrt::RetainPtr.77"* %214 to <2 x i64>*
  %216 = load <2 x i64>, <2 x i64>* %215, align 8, !alias.scope !26
  %217 = bitcast %"class.fxcrt::RetainPtr.77"* %205 to <2 x i64>*
  store <2 x i64> %212, <2 x i64>* %217, align 8, !alias.scope !23, !noalias !26
  %218 = bitcast %"class.fxcrt::RetainPtr.77"* %208 to <2 x i64>*
  store <2 x i64> %216, <2 x i64>* %218, align 8, !alias.scope !23, !noalias !26
  %219 = bitcast %"class.fxcrt::RetainPtr.77"* %210 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %219, align 8, !alias.scope !26
  %220 = bitcast %"class.fxcrt::RetainPtr.77"* %214 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %220, align 8, !alias.scope !26
  br label %221

221:                                              ; preds = %197, %200
  %222 = icmp eq i64 %117, %133
  br i1 %222, label %273, label %223

223:                                              ; preds = %221, %119, %112
  %224 = phi %"class.fxcrt::RetainPtr.77"* [ %58, %119 ], [ %58, %112 ], [ %135, %221 ]
  %225 = phi %"class.fxcrt::RetainPtr.77"* [ %110, %119 ], [ %110, %112 ], [ %137, %221 ]
  %226 = getelementptr %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %225, i64 -1, i32 0, i32 0, i32 0, i32 0
  %227 = ptrtoint %class.CPDF_StreamAcc** %226 to i64
  %228 = sub i64 %227, %109
  %229 = lshr i64 %228, 3
  %230 = add nuw nsw i64 %229, 1
  %231 = and i64 %230, 3
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %244, label %233

233:                                              ; preds = %223, %233
  %234 = phi %"class.fxcrt::RetainPtr.77"* [ %237, %233 ], [ %224, %223 ]
  %235 = phi %"class.fxcrt::RetainPtr.77"* [ %238, %233 ], [ %225, %223 ]
  %236 = phi i64 [ %242, %233 ], [ %231, %223 ]
  %237 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %234, i64 -1
  %238 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %235, i64 -1
  %239 = bitcast %"class.fxcrt::RetainPtr.77"* %237 to i64*
  store i64 0, i64* %239, align 8
  %240 = bitcast %"class.fxcrt::RetainPtr.77"* %238 to i64*
  %241 = load i64, i64* %240, align 8
  store i64 %241, i64* %239, align 8
  store i64 0, i64* %240, align 8
  %242 = add i64 %236, -1
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %244, label %233, !llvm.loop !30

244:                                              ; preds = %233, %223
  %245 = phi %"class.fxcrt::RetainPtr.77"* [ undef, %223 ], [ %237, %233 ]
  %246 = phi %"class.fxcrt::RetainPtr.77"* [ %224, %223 ], [ %237, %233 ]
  %247 = phi %"class.fxcrt::RetainPtr.77"* [ %225, %223 ], [ %238, %233 ]
  %248 = icmp ult i64 %228, 24
  br i1 %248, label %273, label %249

249:                                              ; preds = %244, %249
  %250 = phi %"class.fxcrt::RetainPtr.77"* [ %267, %249 ], [ %246, %244 ]
  %251 = phi %"class.fxcrt::RetainPtr.77"* [ %268, %249 ], [ %247, %244 ]
  %252 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %250, i64 -1
  %253 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %251, i64 -1
  %254 = bitcast %"class.fxcrt::RetainPtr.77"* %252 to i64*
  store i64 0, i64* %254, align 8
  %255 = bitcast %"class.fxcrt::RetainPtr.77"* %253 to i64*
  %256 = load i64, i64* %255, align 8
  store i64 %256, i64* %254, align 8
  store i64 0, i64* %255, align 8
  %257 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %250, i64 -2
  %258 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %251, i64 -2
  %259 = bitcast %"class.fxcrt::RetainPtr.77"* %257 to i64*
  store i64 0, i64* %259, align 8
  %260 = bitcast %"class.fxcrt::RetainPtr.77"* %258 to i64*
  %261 = load i64, i64* %260, align 8
  store i64 %261, i64* %259, align 8
  store i64 0, i64* %260, align 8
  %262 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %250, i64 -3
  %263 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %251, i64 -3
  %264 = bitcast %"class.fxcrt::RetainPtr.77"* %262 to i64*
  store i64 0, i64* %264, align 8
  %265 = bitcast %"class.fxcrt::RetainPtr.77"* %263 to i64*
  %266 = load i64, i64* %265, align 8
  store i64 %266, i64* %264, align 8
  store i64 0, i64* %265, align 8
  %267 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %250, i64 -4
  %268 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %251, i64 -4
  %269 = bitcast %"class.fxcrt::RetainPtr.77"* %267 to i64*
  store i64 0, i64* %269, align 8
  %270 = bitcast %"class.fxcrt::RetainPtr.77"* %268 to i64*
  %271 = load i64, i64* %270, align 8
  store i64 %271, i64* %269, align 8
  store i64 0, i64* %270, align 8
  %272 = icmp eq %"class.fxcrt::RetainPtr.77"* %268, %108
  br i1 %272, label %273, label %249, !llvm.loop !31

273:                                              ; preds = %244, %249, %221
  %274 = phi %"class.fxcrt::RetainPtr.77"* [ %135, %221 ], [ %245, %244 ], [ %267, %249 ]
  %275 = ptrtoint %"class.fxcrt::RetainPtr.77"* %274 to i64
  %276 = load i64, i64* %30, align 8
  %277 = load %"class.fxcrt::RetainPtr.77"*, %"class.fxcrt::RetainPtr.77"** %6, align 8
  br label %278

278:                                              ; preds = %104, %273
  %279 = phi %"class.fxcrt::RetainPtr.77"* [ %277, %273 ], [ %108, %104 ]
  %280 = phi i64 [ %275, %273 ], [ %59, %104 ]
  %281 = phi i64 [ %276, %273 ], [ %109, %104 ]
  store i64 %280, i64* %30, align 8
  store i64 %106, i64* %7, align 8
  store i64 %105, i64* %4, align 8
  %282 = inttoptr i64 %281 to %"class.fxcrt::RetainPtr.77"*
  %283 = icmp eq %"class.fxcrt::RetainPtr.77"* %279, %282
  br i1 %283, label %303, label %284

284:                                              ; preds = %278, %301
  %285 = phi %"class.fxcrt::RetainPtr.77"* [ %286, %301 ], [ %279, %278 ]
  %286 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %285, i64 -1
  %287 = getelementptr inbounds %"class.fxcrt::RetainPtr.77", %"class.fxcrt::RetainPtr.77"* %286, i64 0, i32 0, i32 0, i32 0, i32 0
  %288 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %287, align 8
  store %class.CPDF_StreamAcc* null, %class.CPDF_StreamAcc** %287, align 8
  %289 = icmp eq %class.CPDF_StreamAcc* %288, null
  br i1 %289, label %301, label %290

290:                                              ; preds = %284
  %291 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %288, i64 0, i32 0, i32 1
  %292 = load i64, i64* %291, align 8
  %293 = add nsw i64 %292, -1
  store i64 %293, i64* %291, align 8
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %301

295:                                              ; preds = %290
  %296 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %288, i64 0, i32 0
  %297 = bitcast %class.CPDF_StreamAcc* %288 to void (%"class.fxcrt::Retainable"*)***
  %298 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %297, align 8
  %299 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %298, i64 1
  %300 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %299, align 8
  tail call void %300(%"class.fxcrt::Retainable"* nonnull %296) #10
  br label %301

301:                                              ; preds = %295, %290, %284
  %302 = icmp eq %"class.fxcrt::RetainPtr.77"* %286, %282
  br i1 %302, label %303, label %284

303:                                              ; preds = %301, %278
  %304 = icmp eq i64 %281, 0
  br i1 %304, label %307, label %305

305:                                              ; preds = %303
  %306 = inttoptr i64 %281 to i8*
  tail call void @_ZdlPv(i8* %306) #11
  br label %307

307:                                              ; preds = %305, %303, %27
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJRP11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!4 = distinct !{!4, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJRP11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJRP11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!7 = distinct !{!7, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJRP11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!10 = distinct !{!10, !"_ZNK10CFX_MatrixmlERKS_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN6pdfium10MakeRetainI22CFX_RetainablePathDataJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!13 = distinct !{!13, !"_ZN6pdfium10MakeRetainI22CFX_RetainablePathDataJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!14 = !{i8 0, i8 2}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJPK11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!17 = distinct !{!17, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJPK11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJRP11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!20 = distinct !{!20, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJRP11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.unroll.disable"}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !29}
!29 = !{!"llvm.loop.isvectorized", i32 1}
!30 = distinct !{!30, !22}
!31 = distinct !{!31, !29}
