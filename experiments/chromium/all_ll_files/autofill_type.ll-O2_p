; ModuleID = '../../components/autofill/core/browser/autofill_type.cc'
source_filename = "../../components/autofill/core/browser/autofill_type.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.autofill::AutofillType" = type { i32, i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

@.str = private unnamed_addr constant [13 x i8] c"UNKNOWN_TYPE\00", align 1
@switch.table._ZN8autofill26GroupTypeOfServerFieldTypeENS_15ServerFieldTypeE = private unnamed_addr constant [119 x i32] [i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 3, i32 7, i32 7, i32 7, i32 7, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 4, i32 0, i32 8, i32 8, i32 8, i32 8, i32 8, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 0, i32 0, i32 10, i32 10, i32 5, i32 6, i32 5, i32 6, i32 5, i32 6, i32 5, i32 6, i32 10, i32 12, i32 3, i32 10, i32 10, i32 10, i32 9, i32 9, i32 7, i32 0, i32 10, i32 0, i32 13, i32 13, i32 10, i32 10, i32 10, i32 0, i32 5, i32 5, i32 5, i32 5, i32 1, i32 1, i32 1, i32 1, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 1, i32 0], align 4
@switch.table._ZNK8autofill12AutofillType15GetStorableTypeEv = private unnamed_addr constant [43 x i32] [i32 7, i32 110, i32 3, i32 4, i32 5, i32 60, i32 77, i32 30, i32 31, i32 83, i32 34, i32 33, i32 81, i32 36, i32 36, i32 35, i32 1, i32 51, i32 91, i32 92, i32 52, i32 57, i32 53, i32 55, i32 59, i32 58, i32 14, i32 12, i32 13, i32 11, i32 10, i32 10, i32 10, i32 93, i32 9, i32 1, i32 1, i32 6, i32 56, i32 57, i32 54, i32 55, i32 102], align 4

@_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE = hidden unnamed_addr alias void (%"class.autofill::AutofillType"*, i32), void (%"class.autofill::AutofillType"*, i32)* @_ZN8autofill12AutofillTypeC2ENS_15ServerFieldTypeE
@_ZN8autofill12AutofillTypeC1ENS_13HtmlFieldTypeENS_13HtmlFieldModeE = hidden unnamed_addr alias void (%"class.autofill::AutofillType"*, i32, i32), void (%"class.autofill::AutofillType"*, i32, i32)* @_ZN8autofill12AutofillTypeC2ENS_13HtmlFieldTypeENS_13HtmlFieldModeE

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN8autofill26GroupTypeOfServerFieldTypeENS_15ServerFieldTypeE(i32) local_unnamed_addr #0 {
  %2 = icmp ult i32 %0, 119
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [119 x i32], [119 x i32]* @switch.table._ZN8autofill26GroupTypeOfServerFieldTypeENS_15ServerFieldTypeE, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4
  ret i32 %6

7:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN8autofill24GroupTypeOfHtmlFieldTypeENS_13HtmlFieldTypeENS_13HtmlFieldModeE(i32, i32) local_unnamed_addr #0 {
  switch i32 %0, label %18 [
    i32 1, label %3
    i32 2, label %3
    i32 3, label %3
    i32 4, label %3
    i32 38, label %3
    i32 5, label %3
    i32 6, label %19
    i32 7, label %6
    i32 8, label %6
    i32 9, label %6
    i32 10, label %6
    i32 11, label %6
    i32 12, label %6
    i32 13, label %6
    i32 14, label %6
    i32 15, label %6
    i32 16, label %6
    i32 17, label %6
    i32 18, label %9
    i32 19, label %9
    i32 20, label %9
    i32 21, label %9
    i32 22, label %9
    i32 39, label %9
    i32 40, label %9
    i32 23, label %9
    i32 24, label %9
    i32 41, label %9
    i32 42, label %9
    i32 25, label %9
    i32 26, label %9
    i32 36, label %10
    i32 37, label %10
    i32 27, label %11
    i32 28, label %11
    i32 29, label %11
    i32 30, label %11
    i32 31, label %11
    i32 32, label %11
    i32 33, label %11
    i32 34, label %11
    i32 35, label %14
    i32 43, label %15
    i32 44, label %16
    i32 0, label %17
    i32 45, label %17
  ]

3:                                                ; preds = %2, %2, %2, %2, %2, %2
  %4 = icmp eq i32 %1, 1
  %5 = select i1 %4, i32 2, i32 1
  br label %19

6:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  %7 = icmp eq i32 %1, 1
  %8 = select i1 %7, i32 6, i32 5
  br label %19

9:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  br label %19

10:                                               ; preds = %2, %2
  br label %19

11:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %12 = icmp eq i32 %1, 1
  %13 = select i1 %12, i32 8, i32 7
  br label %19

14:                                               ; preds = %2
  br label %19

15:                                               ; preds = %2
  br label %19

16:                                               ; preds = %2
  br label %19

17:                                               ; preds = %2, %2
  br label %19

18:                                               ; preds = %2
  br label %19

19:                                               ; preds = %2, %18, %17, %16, %15, %14, %11, %10, %9, %6, %3
  %20 = phi i32 [ 0, %18 ], [ 0, %17 ], [ 0, %16 ], [ 0, %15 ], [ 3, %14 ], [ %13, %11 ], [ 11, %10 ], [ 9, %9 ], [ %8, %6 ], [ %5, %3 ], [ 4, %2 ]
  ret i32 %20
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8autofill12AutofillTypeC2ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nocapture, i32) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 4
  %5 = icmp ugt i32 %1, 117
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  switch i32 %1, label %7 [
    i32 29, label %8
    i32 28, label %8
    i32 27, label %8
    i32 26, label %8
    i32 25, label %8
    i32 19, label %8
    i32 18, label %8
    i32 17, label %8
    i32 16, label %8
    i32 15, label %8
    i32 94, label %8
    i32 50, label %8
    i32 49, label %8
    i32 48, label %8
    i32 47, label %8
    i32 46, label %8
    i32 45, label %8
    i32 44, label %8
  ]

7:                                                ; preds = %6
  br label %8

8:                                                ; preds = %2, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %7
  %9 = phi i32 [ %1, %7 ], [ 1, %6 ], [ 1, %6 ], [ 1, %6 ], [ 1, %6 ], [ 1, %6 ], [ 1, %6 ], [ 1, %6 ], [ 1, %6 ], [ 1, %6 ], [ 1, %6 ], [ 1, %6 ], [ 1, %6 ], [ 1, %6 ], [ 1, %6 ], [ 1, %6 ], [ 1, %6 ], [ 1, %6 ], [ 1, %6 ], [ 1, %2 ]
  %10 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %0, i64 0, i32 0
  store i32 %9, i32* %10, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8autofill12AutofillTypeC2ENS_13HtmlFieldTypeENS_13HtmlFieldModeE(%"class.autofill::AutofillType"* nocapture, i32, i32) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %0, i64 0, i32 0
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %0, i64 0, i32 1
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %0, i64 0, i32 2
  store i32 %2, i32* %6, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK8autofill12AutofillType5groupEv(%"class.autofill::AutofillType"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @_ZN8autofill26GroupTypeOfServerFieldTypeENS_15ServerFieldTypeE(i32 %3)
  br label %13

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = tail call i32 @_ZN8autofill24GroupTypeOfHtmlFieldTypeENS_13HtmlFieldTypeENS_13HtmlFieldModeE(i32 %9, i32 %11)
  br label %13

13:                                               ; preds = %7, %5
  %14 = phi i32 [ %6, %5 ], [ %12, %7 ]
  ret i32 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8autofill12AutofillType9IsUnknownEv(%"class.autofill::AutofillType"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = icmp eq i32 %7, 45
  %10 = or i1 %8, %9
  ret i1 %10

11:                                               ; preds = %1
  ret i1 false
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK8autofill12AutofillType15GetStorableTypeEv(%"class.autofill::AutofillType"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %25 [
    i32 37, label %35
    i32 38, label %4
    i32 84, label %5
    i32 39, label %6
    i32 40, label %7
    i32 41, label %8
    i32 42, label %9
    i32 43, label %10
    i32 66, label %11
    i32 62, label %12
    i32 63, label %13
    i32 64, label %14
    i32 65, label %15
    i32 67, label %16
    i32 68, label %17
    i32 69, label %18
    i32 70, label %19
    i32 71, label %20
    i32 72, label %21
    i32 78, label %22
    i32 80, label %23
    i32 82, label %24
    i32 1, label %26
  ]

4:                                                ; preds = %1
  br label %35

5:                                                ; preds = %1
  br label %35

6:                                                ; preds = %1
  br label %35

7:                                                ; preds = %1
  br label %35

8:                                                ; preds = %1
  br label %35

9:                                                ; preds = %1
  br label %35

10:                                               ; preds = %1
  br label %35

11:                                               ; preds = %1
  br label %35

12:                                               ; preds = %1
  br label %35

13:                                               ; preds = %1
  br label %35

14:                                               ; preds = %1
  br label %35

15:                                               ; preds = %1
  br label %35

16:                                               ; preds = %1
  br label %35

17:                                               ; preds = %1
  br label %35

18:                                               ; preds = %1
  br label %35

19:                                               ; preds = %1
  br label %35

20:                                               ; preds = %1
  br label %35

21:                                               ; preds = %1
  br label %35

22:                                               ; preds = %1
  br label %35

23:                                               ; preds = %1
  br label %35

24:                                               ; preds = %1
  br label %35

25:                                               ; preds = %1
  br label %35

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %0, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, -1
  %30 = icmp ult i32 %29, 43
  br i1 %30, label %31, label %35

31:                                               ; preds = %26
  %32 = sext i32 %29 to i64
  %33 = getelementptr inbounds [43 x i32], [43 x i32]* @switch.table._ZNK8autofill12AutofillType15GetStorableTypeEv, i64 0, i64 %32
  %34 = load i32, i32* %33, align 4
  ret i32 %34

35:                                               ; preds = %26, %1, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4
  %36 = phi i32 [ %3, %25 ], [ 81, %24 ], [ 79, %23 ], [ 77, %22 ], [ 8, %21 ], [ 7, %20 ], [ 6, %19 ], [ 5, %18 ], [ 4, %17 ], [ 3, %16 ], [ 13, %15 ], [ 12, %14 ], [ 11, %13 ], [ 10, %12 ], [ 14, %11 ], [ 36, %10 ], [ 35, %9 ], [ 34, %8 ], [ 33, %7 ], [ 32, %6 ], [ 83, %5 ], [ 31, %4 ], [ 30, %1 ], [ 1, %26 ]
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8autofill12AutofillType8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.autofill::AutofillType"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %42 [
    i32 45, label %9
    i32 0, label %9
  ]

9:                                                ; preds = %6, %6
  %10 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  store i8 12, i8* %11, align 1
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 12, i1 false) #8
  %13 = getelementptr inbounds i8, i8* %12, i64 12
  store i8 0, i8* %13, align 4
  br label %70

14:                                               ; preds = %2
  %15 = tail call { i8*, i64 } @_ZN8autofill22FieldTypeToStringPieceENS_15ServerFieldTypeE(i32 %4) #8, !noalias !2
  %16 = extractvalue { i8*, i64 } %15, 0
  %17 = extractvalue { i8*, i64 } %15, 1
  %18 = icmp ugt i64 %17, -17
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %20) #9
  unreachable

21:                                               ; preds = %14
  %22 = icmp ult i64 %17, 23
  br i1 %22, label %31, label %23

23:                                               ; preds = %21
  %24 = add nuw i64 %17, 16
  %25 = and i64 %24, -16
  %26 = tail call i8* @_Znwm(i64 %25) #10
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %26, i8** %27, align 8, !alias.scope !5
  %28 = or i64 %25, -9223372036854775808
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %28, i64* %29, align 8, !alias.scope !5
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %30, align 8, !alias.scope !5
  br label %37

31:                                               ; preds = %21
  %32 = trunc i64 %17 to i8
  %33 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 %32, i8* %34, align 1, !alias.scope !5
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %36 = icmp eq i64 %17, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %31, %23
  %38 = phi i8* [ %26, %23 ], [ %35, %31 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 1 %16, i64 %17, i1 false) #8
  br label %39

39:                                               ; preds = %31, %37
  %40 = phi i8* [ %35, %31 ], [ %38, %37 ]
  %41 = getelementptr inbounds i8, i8* %40, i64 %17
  store i8 0, i8* %41, align 1
  br label %70

42:                                               ; preds = %6
  %43 = tail call { i8*, i64 } @_ZN8autofill22FieldTypeToStringPieceENS_13HtmlFieldTypeE(i32 %8) #8
  %44 = extractvalue { i8*, i64 } %43, 0
  %45 = extractvalue { i8*, i64 } %43, 1
  %46 = icmp ugt i64 %45, -17
  br i1 %46, label %47, label %49

47:                                               ; preds = %42
  %48 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %48) #9
  unreachable

49:                                               ; preds = %42
  %50 = icmp ult i64 %45, 23
  br i1 %50, label %59, label %51

51:                                               ; preds = %49
  %52 = add nuw i64 %45, 16
  %53 = and i64 %52, -16
  %54 = tail call i8* @_Znwm(i64 %53) #10
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %54, i8** %55, align 8, !alias.scope !8
  %56 = or i64 %53, -9223372036854775808
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %56, i64* %57, align 8, !alias.scope !8
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %45, i64* %58, align 8, !alias.scope !8
  br label %65

59:                                               ; preds = %49
  %60 = trunc i64 %45 to i8
  %61 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  store i8 %60, i8* %62, align 1, !alias.scope !8
  %63 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %64 = icmp eq i64 %45, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %59, %51
  %66 = phi i8* [ %54, %51 ], [ %63, %59 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %66, i8* align 1 %44, i64 %45, i1 false) #8
  br label %67

67:                                               ; preds = %59, %65
  %68 = phi i8* [ %63, %59 ], [ %66, %65 ]
  %69 = getelementptr inbounds i8, i8* %68, i64 %45
  store i8 0, i8* %69, align 1
  br label %70

70:                                               ; preds = %67, %39, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill12AutofillType23ServerFieldTypeToStringENS_15ServerFieldTypeE(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #3 align 2 {
  %3 = tail call { i8*, i64 } @_ZN8autofill22FieldTypeToStringPieceENS_15ServerFieldTypeE(i32 %1) #8
  %4 = extractvalue { i8*, i64 } %3, 0
  %5 = extractvalue { i8*, i64 } %3, 1
  %6 = icmp ugt i64 %5, -17
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %8) #9
  unreachable

9:                                                ; preds = %2
  %10 = icmp ult i64 %5, 23
  br i1 %10, label %19, label %11

11:                                               ; preds = %9
  %12 = add nuw i64 %5, 16
  %13 = and i64 %12, -16
  %14 = tail call i8* @_Znwm(i64 %13) #10
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8, !alias.scope !11
  %16 = or i64 %13, -9223372036854775808
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %16, i64* %17, align 8, !alias.scope !11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %5, i64* %18, align 8, !alias.scope !11
  br label %25

19:                                               ; preds = %9
  %20 = trunc i64 %5 to i8
  %21 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  store i8 %20, i8* %22, align 1, !alias.scope !11
  %23 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %24 = icmp eq i64 %5, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %19, %11
  %26 = phi i8* [ %14, %11 ], [ %23, %19 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %4, i64 %5, i1 false) #8
  br label %27

27:                                               ; preds = %19, %25
  %28 = phi i8* [ %23, %19 ], [ %26, %25 ]
  %29 = getelementptr inbounds i8, i8* %28, i64 %5
  store i8 0, i8* %29, align 1
  ret void
}

declare { i8*, i64 } @_ZN8autofill22FieldTypeToStringPieceENS_13HtmlFieldTypeE(i32) local_unnamed_addr #4

declare { i8*, i64 } @_ZN8autofill22FieldTypeToStringPieceENS_15ServerFieldTypeE(i32) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #7

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN8autofill12AutofillType23ServerFieldTypeToStringENS_15ServerFieldTypeE: argument 0"}
!4 = distinct !{!4, !"_ZN8autofill12AutofillType23ServerFieldTypeToStringENS_15ServerFieldTypeE"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!10 = distinct !{!10, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
