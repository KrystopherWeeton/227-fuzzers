; ModuleID = 'gen/third_party/blink/renderer/bindings/core/v8/v8_message_port.cc'
source_filename = "gen/third_party/blink/renderer/bindings/core/v8/v8_message_port.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.171" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.190 }
%class.scoped_refptr.190 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.191" }
%"struct.std::__1::atomic.191" = type { %"struct.std::__1::__atomic_base.192" }
%"struct.std::__1::__atomic_base.192" = type { %"struct.std::__1::__atomic_base.193" }
%"struct.std::__1::__atomic_base.193" = type { %"struct.std::__1::__cxx_atomic_impl.194" }
%"struct.std::__1::__cxx_atomic_impl.194" = type { %"struct.std::__1::__cxx_atomic_base_impl.195" }
%"struct.std::__1::__cxx_atomic_base_impl.195" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.218" }
%"struct.std::__1::atomic.218" = type { %"struct.std::__1::__atomic_base.219" }
%"struct.std::__1::__atomic_base.219" = type { %"struct.std::__1::__atomic_base.220" }
%"struct.std::__1::__atomic_base.220" = type { %"struct.std::__1::__cxx_atomic_impl.221" }
%"struct.std::__1::__cxx_atomic_impl.221" = type { %"struct.std::__1::__cxx_atomic_base_impl.222" }
%"struct.std::__1::__cxx_atomic_base_impl.222" = type { i32 }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.blink::bindings::IDLMemberInstaller::AttributeConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i16, [6 x i8] }>
%"class.base::span.181" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* }
%"struct.blink::bindings::IDLMemberInstaller::OperationConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, [3 x i8], [5 x i8] }>
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.288" }
%"class.absl::optional.288" = type { %"class.absl::optional_internal::optional_data.289" }
%"class.absl::optional_internal::optional_data.289" = type { %"class.absl::optional_internal::optional_data_base.290" }
%"class.absl::optional_internal::optional_data_base.290" = type { %"class.absl::optional_internal::optional_data_dtor_base.291" }
%"class.absl::optional_internal::optional_data_dtor_base.291" = type { i8, %union.anon.292 }
%union.anon.292 = type { i64 }
%"class.blink::JSBasedEventListener" = type { %"class.blink::EventListener" }
%"class.blink::JSEventHandler" = type <{ %"class.blink::JSBasedEventListener", %"class.blink::Member.298", i32, [4 x i8] }>
%"class.blink::Member.298" = type { %"class.blink::MemberBase.299" }
%"class.blink::MemberBase.299" = type { %"class.blink::V8EventHandlerNonNull"* }
%"class.blink::V8EventHandlerNonNull" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member.302", %"class.blink::Member.302" }
%"class.blink::Member.302" = type { %"class.blink::MemberBase.303" }
%"class.blink::MemberBase.303" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.306, %"class.blink::Member.307", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.306 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.307" = type { %"class.blink::MemberBase.308" }
%"class.blink::MemberBase.308" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.309" }
%"class.blink::Persistent.309" = type { %"class.blink::PersistentBase.310" }
%"class.blink::PersistentBase.310" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.v8::Value" = type { i8 }
%"class.blink::MessagePort" = type { %"class.blink::EventTargetWithInlineData", %"class.mojo::MessageReceiver", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.std::__1::unique_ptr.214", i8, i8, %class.scoped_refptr.283, %"class.blink::MessagePortDescriptor" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.200" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.186" }
%"class.WTF::Vector.186" = type { %"class.WTF::VectorBuffer.187" }
%"class.WTF::VectorBuffer.187" = type { %"class.WTF::VectorBufferBase.188", [32 x i8] }
%"class.WTF::VectorBufferBase.188" = type { %"struct.std::__1::pair.189"*, i32, i32 }
%"struct.std::__1::pair.189" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase.196" }
%"class.blink::MemberBase.196" = type { %"class.blink::HeapVector.197"* }
%"class.blink::HeapVector.197" = type opaque
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.WTF::Vector.203"* }
%"class.WTF::Vector.203" = type opaque
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.207" }
%"class.blink::WeakMember.207" = type { %"class.blink::MemberBase.208" }
%"class.blink::MemberBase.208" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.211" }
%"class.WTF::HashTable.211" = type <{ %"class.blink::WeakMember.213"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.213" = type opaque
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.mojo::Connector"* }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.223, %"class.std::__1::unique_ptr.225", %"class.absl::optional", %"struct.std::__1::atomic.167", i8, i8, i8, i8, i32, i32, %"class.absl::optional.241", %"class.std::__1::unique_ptr.246", i8, i64, %class.scoped_refptr.276, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.279" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.217 }
%class.scoped_refptr.217 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.218" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.223 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.224" }>
%"class.base::RefCountedThreadSafe.224" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.223, i8, %"class.mojo::ScopedHandleBase.228", %class.scoped_refptr.229, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory" }
%"class.mojo::ScopedHandleBase.228" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.229 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.230 }
%class.scoped_refptr.230 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.231", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.231" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.232" }
%"struct.std::__1::atomic.232" = type { %"struct.std::__1::__atomic_base.233" }
%"struct.std::__1::__atomic_base.233" = type { %"struct.std::__1::__atomic_base.234" }
%"struct.std::__1::__atomic_base.234" = type { %"struct.std::__1::__cxx_atomic_impl.235" }
%"struct.std::__1::__cxx_atomic_impl.235" = type { %"struct.std::__1::__cxx_atomic_base_impl.236" }
%"struct.std::__1::__cxx_atomic_base_impl.236" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.240", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.240" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.absl::optional.241" = type { %"class.absl::optional_internal::optional_data.242" }
%"class.absl::optional_internal::optional_data.242" = type { %"class.absl::optional_internal::optional_data_base.243" }
%"class.absl::optional_internal::optional_data_base.243" = type { %"class.absl::optional_internal::optional_data_dtor_base.244" }
%"class.absl::optional_internal::optional_data_dtor_base.244" = type { i8, %union.anon.245 }
%union.anon.245 = type { %"class.base::Lock" }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.249", i8, i64, %class.scoped_refptr.250, %class.scoped_refptr.272 }
%"class.base::RepeatingCallback.249" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.250 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.251", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.261", i8, [7 x i8] }>
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.252 }
%class.scoped_refptr.252 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.253", %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.261" = type { %"class.std::__1::__tree.262" }
%"class.std::__1::__tree.262" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.263", %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%class.scoped_refptr.272 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.276 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.277 }
%class.scoped_refptr.277 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.284", [4 x i8], %"class.base::RepeatingCallback.285", %class.scoped_refptr.223, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.191", [4 x i8] }>
%"class.base::RefCountedThreadSafe.284" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.285" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.278 }
%class.scoped_refptr.278 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.279" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.283 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::MessagePortDescriptor" = type { %"class.mojo::ScopedHandleBase", %"class.base::UnguessableToken", i64 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.359", i32, i8, [3 x i8], %"class.blink::HeapVector.361", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.369", %"class.blink::Member.371", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.380", %"class.blink::Member.386", %"class.blink::Member.388", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.313" }
%"class.blink::HeapHashMap.313" = type { %"class.WTF::HashMap.316" }
%"class.WTF::HashMap.316" = type { %"class.WTF::HashTable.317" }
%"class.WTF::HashTable.317" = type <{ %"struct.WTF::KeyValuePair.319"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.319" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.320" }
%"class.blink::Supplementable.320" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.321" }
%"class.blink::HeapHashMap.321" = type { %"class.WTF::HashMap.324" }
%"class.WTF::HashMap.324" = type { %"class.WTF::HashTable.325" }
%"class.WTF::HashTable.325" = type <{ %"struct.WTF::KeyValuePair.327"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.327" = type { i8*, %"class.blink::Member.328" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.330" }
%"class.blink::Member.330" = type { %"class.blink::MemberBase.331" }
%"class.blink::MemberBase.331" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.332, %"class.std::__1::unique_ptr.341", %"class.std::__1::unique_ptr.341", %"class.std::__1::unique_ptr.347", %"class.std::__1::unique_ptr.347", %"class.blink::Member.353", i32, [4 x i8], %"class.WTF::HashSet.355", i32, i32 }
%class.scoped_refptr.332 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.333", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.335", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.340 }
%"class.WTF::RefCounted.333" = type { %"class.base::RefCounted.334" }
%"class.base::RefCounted.334" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.335" = type { %"class.absl::optional_internal::optional_data.336" }
%"class.absl::optional_internal::optional_data.336" = type { %"class.absl::optional_internal::optional_data_base.337" }
%"class.absl::optional_internal::optional_data_base.337" = type { %"class.absl::optional_internal::optional_data_dtor_base.338" }
%"class.absl::optional_internal::optional_data_dtor_base.338" = type { i8, %union.anon.339 }
%union.anon.339 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.340 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.353" = type { %"class.blink::MemberBase.354" }
%"class.blink::MemberBase.354" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.355" = type { %"class.WTF::HashTable.356" }
%"class.WTF::HashTable.356" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.359" = type { %"class.blink::MemberBase.360" }
%"class.blink::MemberBase.360" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.361" = type { %"class.WTF::Vector.364" }
%"class.WTF::Vector.364" = type { %"class.WTF::VectorBuffer.365" }
%"class.WTF::VectorBuffer.365" = type { %"class.WTF::VectorBufferBase.366" }
%"class.WTF::VectorBufferBase.366" = type { %"class.blink::Member.367"*, i32, i32 }
%"class.blink::Member.367" = type opaque
%"class.blink::Member.369" = type { %"class.blink::MemberBase.370" }
%"class.blink::MemberBase.370" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.371" = type { %"class.blink::MemberBase.372" }
%"class.blink::MemberBase.372" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.373", i32, i32 }
%"class.blink::HeapHashMap.373" = type { %"class.WTF::HashMap.376" }
%"class.WTF::HashMap.376" = type { %"class.WTF::HashTable.377" }
%"class.WTF::HashTable.377" = type <{ %"struct.WTF::KeyValuePair.379"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.379" = type opaque
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.390" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.390" = type { %"class.v8::TracedReference.391" }
%"class.v8::TracedReference.391" = type { %"class.v8::BasicTracedReference.392" }
%"class.v8::BasicTracedReference.392" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.390", %class.scoped_refptr.393 }
%class.scoped_refptr.393 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::HeapVector.396" = type { %"class.WTF::Vector.399" }
%"class.WTF::Vector.399" = type { %"class.WTF::VectorBuffer.400" }
%"class.WTF::VectorBuffer.400" = type { %"class.WTF::VectorBufferBase.401" }
%"class.WTF::VectorBufferBase.401" = type { %"class.blink::ScriptValue"*, i32, i32 }
%"class.blink::scheduler::CooperativeSchedulingManager" = type <{ i32 (...)**, i32, i8, [3 x i8], %"class.base::TimeTicks", %"class.base::TickClock"*, i8, [7 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::PostMessageOptions" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, %"class.blink::HeapVector.396" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.405 }
%union.anon.405 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::ScriptIterator" = type { %"class.v8::Isolate"*, %"class.v8::Local.177", %"class.v8::Local.297", %"class.v8::Local.429", %"class.v8::Local.429", i8, %"class.v8::MaybeLocal" }
%"class.v8::Local.177" = type { %"class.v8::Object"* }
%"class.v8::Local.297" = type { %"class.v8::Value"* }
%"class.v8::Local.429" = type { %"class.v8::String"* }
%"class.v8::String" = type { i8 }
%"class.v8::MaybeLocal" = type { %"class.v8::Value"* }
%"class.v8::Array" = type { i8 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_9IDLObjectEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_9IDLObjectEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_9IDLObjectEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_11ScriptValueEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF11VectorMoverILb0EN5blink11ScriptValueENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [12 x i8] c"MessagePort\00", align 1
@_ZN5blink13V8EventTarget18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink13V8MessagePort18wrapper_type_info_E = hidden constant %"struct.blink::WrapperTypeInfo" { i16 1, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)* @_ZN5blink13V8MessagePort24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), %"struct.blink::WrapperTypeInfo"* @_ZN5blink13V8EventTarget18wrapper_type_info_E, i8 24 }, align 8
@_ZN5blink11MessagePort18wrapper_type_info_E = hidden local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"* @_ZN5blink13V8MessagePort18wrapper_type_info_E, align 8
@_ZZN5blink13V8MessagePort30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable = internal constant [2 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_115v8_message_port29OnmessageAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_115v8_message_port29OnmessageAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_115v8_message_port34OnmessageerrorAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_115v8_message_port34OnmessageerrorAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }], align 16
@.str.1 = private unnamed_addr constant [10 x i8] c"onmessage\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"onmessageerror\00", align 1
@_ZZN5blink13V8MessagePort30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable = internal constant [3 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_115v8_message_port22CloseOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_115v8_message_port28PostMessageOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_115v8_message_port22StartOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }], align 16
@.str.3 = private unnamed_addr constant [6 x i8] c"close\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"postMessage\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"start\00", align 1
@_ZN5blink16event_type_names8kMessageE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names13kMessageerrorE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.6 = private unnamed_addr constant [28 x i8] c"Overload resolution failed.\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@.str.7 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.9 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.11 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.12 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.13 = private unnamed_addr constant [54 x i8] c"The provided value cannot be converted to a sequence.\00", align 1
@.str.14 = private unnamed_addr constant [53 x i8] c"The object must have a callable @@iterator property.\00", align 1
@.str.15 = private unnamed_addr constant [38 x i8] c"Array length exceeds supported limit.\00", align 1
@.str.16 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.17 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.18 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.19 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_11ScriptValueENS_12VectorTraitsIS3_EEEEEEPKcv = private unnamed_addr constant [132 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::ScriptValue, WTF::VectorTraits<blink::ScriptValue> >]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.20 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@.str.21 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.22 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13V8MessagePort24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*) #0 align 2 {
  %4 = alloca %"class.base::span", align 8
  %5 = alloca %"class.base::span.181", align 8
  %6 = bitcast %"class.v8::Template"* %2 to %"class.v8::FunctionTemplate"*
  %7 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %6) #6
  %8 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"* %6) #6
  %9 = tail call %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8EventTarget18wrapper_type_info_E, %"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1) #6
  %10 = bitcast %"class.v8::Template"* %9 to %"class.v8::FunctionTemplate"*
  tail call void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"* %0, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8MessagePort18wrapper_type_info_E, %"class.v8::ObjectTemplate"* %7, %"class.v8::ObjectTemplate"* %8, %"class.v8::FunctionTemplate"* %6, %"class.v8::FunctionTemplate"* %10) #6
  %11 = bitcast %"class.v8::ObjectTemplate"* %7 to %"class.v8::Template"*
  %12 = bitcast %"class.v8::ObjectTemplate"* %8 to %"class.v8::Template"*
  %13 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13)
  %14 = bitcast %"class.base::span.181"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14)
  %15 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %6) #6
  %16 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 0, i32 0
  store i64 2, i64* %16, align 8
  %17 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([2 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink13V8MessagePort30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %17, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %11, %"class.v8::Template"* %12, %"class.v8::Template"* %2, %"class.v8::Signature"* %15, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %4) #6
  %18 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %5, i64 0, i32 0, i32 0
  store i64 3, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %5, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([3 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink13V8MessagePort30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %19, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %11, %"class.v8::Template"* %12, %"class.v8::Template"* %2, %"class.v8::Signature"* %15, %"class.base::span.181"* nonnull byval(%"class.base::span.181") align 8 %5) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"*, %"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::ObjectTemplate"*, %"class.v8::ObjectTemplate"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13V8MessagePort30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = alloca %"class.base::span.181", align 8
  %8 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %9 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %8) #6
  %10 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 2, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([2 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink13V8MessagePort30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %11, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #6
  %12 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %7, i64 0, i32 0, i32 0
  store i64 3, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %7, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([3 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink13V8MessagePort30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %13, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span.181"* nonnull byval(%"class.base::span.181") align 8 %7) #6
  ret void
}

declare %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_115v8_message_port29OnmessageAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::EventTarget"*
  %25 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kMessageE, align 8
  %26 = tail call %"class.blink::EventListener"* @_ZN5blink11EventTarget25GetAttributeEventListenerERKN3WTF12AtomicStringE(%"class.blink::EventTarget"* %24, %"class.WTF::AtomicString"* dereferenceable(8) %25) #6
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 1
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds i64, i64* %28, i64 3
  %32 = icmp eq %"class.blink::EventListener"* %26, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %22
  %34 = bitcast %"class.blink::EventListener"* %26 to i1 (%"class.blink::EventListener"*)***
  %35 = load i1 (%"class.blink::EventListener"*)**, i1 (%"class.blink::EventListener"*)*** %34, align 8
  %36 = getelementptr inbounds i1 (%"class.blink::EventListener"*)*, i1 (%"class.blink::EventListener"*)** %35, i64 10
  %37 = load i1 (%"class.blink::EventListener"*)*, i1 (%"class.blink::EventListener"*)** %36, align 8
  %38 = tail call zeroext i1 %37(%"class.blink::EventListener"* nonnull %26) #6
  br i1 %38, label %39, label %53

39:                                               ; preds = %33
  %40 = bitcast %"class.blink::EventListener"* %26 to %"class.blink::JSBasedEventListener"*
  %41 = bitcast %"class.blink::EventListener"* %26 to i1 (%"class.blink::JSBasedEventListener"*)***
  %42 = load i1 (%"class.blink::JSBasedEventListener"*)**, i1 (%"class.blink::JSBasedEventListener"*)*** %41, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::JSBasedEventListener"*)*, i1 (%"class.blink::JSBasedEventListener"*)** %42, i64 16
  %44 = load i1 (%"class.blink::JSBasedEventListener"*)*, i1 (%"class.blink::JSBasedEventListener"*)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::JSBasedEventListener"* nonnull %40) #6
  br i1 %45, label %46, label %53

46:                                               ; preds = %39
  %47 = bitcast %"class.blink::EventListener"* %26 to %"class.blink::JSEventHandler"*
  %48 = bitcast %"class.blink::EventListener"* %26 to %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)***
  %49 = load %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)**, %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)*** %48, align 8
  %50 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)*, %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)** %49, i64 12
  %51 = load %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)*, %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)** %50, align 8
  %52 = tail call %"class.v8::Value"* %51(%"class.blink::JSEventHandler"* nonnull %47, %"class.blink::EventTarget"* dereferenceable(16) %24) #6
  br label %56

53:                                               ; preds = %39, %33, %22
  %54 = add i64 %30, 176
  %55 = inttoptr i64 %54 to %"class.v8::Value"*
  br label %56

56:                                               ; preds = %46, %53
  %57 = phi %"class.v8::Value"* [ %55, %53 ], [ %52, %46 ]
  %58 = icmp eq %"class.v8::Value"* %57, null
  %59 = bitcast %"class.v8::Value"* %57 to i64*
  %60 = getelementptr inbounds i64, i64* %28, i64 2
  %61 = select i1 %58, i64* %60, i64* %59, !prof !2
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %31, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_115v8_message_port29OnmessageAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 160
  %11 = inttoptr i64 %10 to %"class.v8::Value"*
  br label %16

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %14 = bitcast i64** %13 to %"class.v8::Value"**
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %14, align 8
  br label %16

16:                                               ; preds = %5, %12
  %17 = phi %"class.v8::Value"* [ %11, %5 ], [ %15, %12 ]
  %18 = tail call %"class.blink::JSEventHandler"* @_ZN5blink14JSEventHandler12CreateOrNullEN2v85LocalINS1_5ValueEEENS0_11HandlerTypeE(%"class.v8::Value"* %17, i32 0) #6
  %19 = getelementptr inbounds %"class.blink::JSEventHandler", %"class.blink::JSEventHandler"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %16, %16, %16
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %16
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #6
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast i8* %41 to %"class.blink::MessagePort"*
  %43 = bitcast i8* %41 to %"class.blink::EventTarget"*
  %44 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kMessageE, align 8
  %45 = tail call zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"* %43, %"class.WTF::AtomicString"* dereferenceable(8) %44, %"class.blink::EventListener"* %19) #6
  tail call void @_ZN5blink11MessagePort5startEv(%"class.blink::MessagePort"* %42) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_115v8_message_port34OnmessageerrorAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::EventTarget"*
  %25 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kMessageerrorE, align 8
  %26 = tail call %"class.blink::EventListener"* @_ZN5blink11EventTarget25GetAttributeEventListenerERKN3WTF12AtomicStringE(%"class.blink::EventTarget"* %24, %"class.WTF::AtomicString"* dereferenceable(8) %25) #6
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 1
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds i64, i64* %28, i64 3
  %32 = icmp eq %"class.blink::EventListener"* %26, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %22
  %34 = bitcast %"class.blink::EventListener"* %26 to i1 (%"class.blink::EventListener"*)***
  %35 = load i1 (%"class.blink::EventListener"*)**, i1 (%"class.blink::EventListener"*)*** %34, align 8
  %36 = getelementptr inbounds i1 (%"class.blink::EventListener"*)*, i1 (%"class.blink::EventListener"*)** %35, i64 10
  %37 = load i1 (%"class.blink::EventListener"*)*, i1 (%"class.blink::EventListener"*)** %36, align 8
  %38 = tail call zeroext i1 %37(%"class.blink::EventListener"* nonnull %26) #6
  br i1 %38, label %39, label %53

39:                                               ; preds = %33
  %40 = bitcast %"class.blink::EventListener"* %26 to %"class.blink::JSBasedEventListener"*
  %41 = bitcast %"class.blink::EventListener"* %26 to i1 (%"class.blink::JSBasedEventListener"*)***
  %42 = load i1 (%"class.blink::JSBasedEventListener"*)**, i1 (%"class.blink::JSBasedEventListener"*)*** %41, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::JSBasedEventListener"*)*, i1 (%"class.blink::JSBasedEventListener"*)** %42, i64 16
  %44 = load i1 (%"class.blink::JSBasedEventListener"*)*, i1 (%"class.blink::JSBasedEventListener"*)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::JSBasedEventListener"* nonnull %40) #6
  br i1 %45, label %46, label %53

46:                                               ; preds = %39
  %47 = bitcast %"class.blink::EventListener"* %26 to %"class.blink::JSEventHandler"*
  %48 = bitcast %"class.blink::EventListener"* %26 to %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)***
  %49 = load %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)**, %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)*** %48, align 8
  %50 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)*, %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)** %49, i64 12
  %51 = load %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)*, %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)** %50, align 8
  %52 = tail call %"class.v8::Value"* %51(%"class.blink::JSEventHandler"* nonnull %47, %"class.blink::EventTarget"* dereferenceable(16) %24) #6
  br label %56

53:                                               ; preds = %39, %33, %22
  %54 = add i64 %30, 176
  %55 = inttoptr i64 %54 to %"class.v8::Value"*
  br label %56

56:                                               ; preds = %46, %53
  %57 = phi %"class.v8::Value"* [ %55, %53 ], [ %52, %46 ]
  %58 = icmp eq %"class.v8::Value"* %57, null
  %59 = bitcast %"class.v8::Value"* %57 to i64*
  %60 = getelementptr inbounds i64, i64* %28, i64 2
  %61 = select i1 %58, i64* %60, i64* %59, !prof !2
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %31, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_115v8_message_port34OnmessageerrorAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 160
  %11 = inttoptr i64 %10 to %"class.v8::Value"*
  br label %16

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %14 = bitcast i64** %13 to %"class.v8::Value"**
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %14, align 8
  br label %16

16:                                               ; preds = %5, %12
  %17 = phi %"class.v8::Value"* [ %11, %5 ], [ %15, %12 ]
  %18 = tail call %"class.blink::JSEventHandler"* @_ZN5blink14JSEventHandler12CreateOrNullEN2v85LocalINS1_5ValueEEENS0_11HandlerTypeE(%"class.v8::Value"* %17, i32 0) #6
  %19 = getelementptr inbounds %"class.blink::JSEventHandler", %"class.blink::JSEventHandler"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %16, %16, %16
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %16
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #6
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast i8* %41 to %"class.blink::MessagePort"*
  %43 = bitcast i8* %41 to %"class.blink::EventTarget"*
  %44 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kMessageerrorE, align 8
  %45 = tail call zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"* %43, %"class.WTF::AtomicString"* dereferenceable(8) %44, %"class.blink::EventListener"* %19) #6
  tail call void @_ZN5blink11MessagePort5startEv(%"class.blink::MessagePort"* %42) #6
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_115v8_message_port22CloseOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #6
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #6
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 783) #6
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #6
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = bitcast i8* %40 to %"class.blink::MessagePort"*
  tail call void @_ZN5blink11MessagePort5closeEv(%"class.blink::MessagePort"* %41) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_115v8_message_port28PostMessageOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ScriptValue", align 8
  %5 = alloca %"class.blink::HeapVector.396", align 8
  %6 = alloca %"class.blink::ExceptionState", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #6
  %9 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %8, i64 0, i32 5
  %14 = load %"class.base::TickClock"*, %"class.base::TickClock"** %13, align 8
  %15 = bitcast %"class.base::TickClock"* %14 to i64 (%"class.base::TickClock"*)***
  %16 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %15, align 8
  %17 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %16, i64 2
  %18 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %17, align 8
  %19 = tail call i64 %18(%"class.base::TickClock"* %14) #6
  %20 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %8, i64 0, i32 4, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp slt i64 %19, %21
  br i1 %22, label %24, label %23

23:                                               ; preds = %12
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %8) #6
  br label %24

24:                                               ; preds = %1, %12, %23
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp slt i32 %26, 2
  %28 = select i1 %27, i32 %26, i32 2
  %29 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds i64, i64* %30, i64 1
  %32 = bitcast i64* %31 to %"class.v8::Isolate"**
  %33 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %32, align 8
  %34 = bitcast %"class.blink::ExceptionState"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %34) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 56, i1 false)
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 0
  store i16 6, i16* %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 1
  store i16 0, i16* %37, align 2
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 2
  %39 = bitcast i8** %38 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)>, <2 x i8*>* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 3
  store %"class.v8::Isolate"* %33, %"class.v8::Isolate"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 4
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 5, i32 0, i32 0
  %44 = bitcast %"class.WTF::StringImpl"** %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #6
  switch i32 %28, label %321 [
    i32 2, label %45
    i32 1, label %320
  ]

45:                                               ; preds = %24
  %46 = icmp sgt i32 %26, 1
  br i1 %46, label %51, label %47

47:                                               ; preds = %45
  %48 = load i64, i64* %31, align 8
  %49 = add i64 %48, 160
  %50 = inttoptr i64 %49 to %"class.v8::Value"*
  br label %56

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %53 = load i64*, i64** %52, align 8
  %54 = getelementptr inbounds i64, i64* %53, i64 1
  %55 = bitcast i64* %54 to %"class.v8::Value"*
  br label %56

56:                                               ; preds = %47, %51
  %57 = phi %"class.v8::Value"* [ %50, %47 ], [ %55, %51 ]
  %58 = bitcast %"class.v8::Value"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = and i64 %59, 3
  %61 = icmp eq i64 %60, 1
  br i1 %61, label %62, label %80

62:                                               ; preds = %56
  %63 = add i64 %59, -1
  %64 = inttoptr i64 %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = and i64 %59, -4294967296
  %67 = zext i32 %65 to i64
  %68 = or i64 %66, %67
  %69 = add i64 %68, 7
  %70 = inttoptr i64 %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp eq i16 %71, 67
  br i1 %72, label %73, label %80

73:                                               ; preds = %62
  %74 = add i64 %59, 23
  %75 = inttoptr i64 %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = and i32 %76, -2
  %78 = icmp eq i32 %77, 10
  br i1 %78, label %79, label %80

79:                                               ; preds = %73
  tail call fastcc void @_ZN5blink12_GLOBAL__N_115v8_message_port29PostMessageOperationOverload2ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %345

80:                                               ; preds = %62, %56, %73
  br i1 %46, label %85, label %81

81:                                               ; preds = %80
  %82 = load i64, i64* %31, align 8
  %83 = add i64 %82, 160
  %84 = inttoptr i64 %83 to %"class.v8::Value"*
  br label %90

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %87 = load i64*, i64** %86, align 8
  %88 = getelementptr inbounds i64, i64* %87, i64 1
  %89 = bitcast i64* %88 to %"class.v8::Value"*
  br label %90

90:                                               ; preds = %81, %85
  %91 = phi %"class.v8::Value"* [ %84, %81 ], [ %89, %85 ]
  %92 = bitcast %"class.v8::Value"* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = and i64 %93, 3
  %95 = icmp eq i64 %94, 1
  br i1 %95, label %96, label %113

96:                                               ; preds = %90
  %97 = add i64 %93, -1
  %98 = inttoptr i64 %97 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = and i64 %93, -4294967296
  %101 = zext i32 %99 to i64
  %102 = or i64 %100, %101
  %103 = add i64 %102, 7
  %104 = inttoptr i64 %103 to i16*
  %105 = load i16, i16* %104, align 2
  %106 = icmp eq i16 %105, 67
  br i1 %106, label %107, label %113

107:                                              ; preds = %96
  %108 = add i64 %93, 23
  %109 = inttoptr i64 %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = ashr i32 %110, 1
  switch i32 %111, label %113 [
    i32 5, label %112
    i32 3, label %112
  ]

112:                                              ; preds = %107, %107
  tail call fastcc void @_ZN5blink12_GLOBAL__N_115v8_message_port29PostMessageOperationOverload2ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %345

113:                                              ; preds = %107, %96, %90
  br i1 %46, label %118, label %114

114:                                              ; preds = %113
  %115 = load i64, i64* %31, align 8
  %116 = add i64 %115, 160
  %117 = inttoptr i64 %116 to %"class.v8::Value"*
  br label %123

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %120 = load i64*, i64** %119, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  %122 = bitcast i64* %121 to %"class.v8::Value"*
  br label %123

123:                                              ; preds = %114, %118
  %124 = phi %"class.v8::Value"* [ %117, %114 ], [ %122, %118 ]
  %125 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %124) #6
  br i1 %125, label %143, label %126

126:                                              ; preds = %123
  %127 = load i32, i32* %25, align 8
  %128 = icmp sgt i32 %127, 1
  br i1 %128, label %135, label %129

129:                                              ; preds = %126
  %130 = load i64*, i64** %29, align 8
  %131 = getelementptr inbounds i64, i64* %130, i64 1
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, 160
  %134 = inttoptr i64 %133 to %"class.v8::Value"*
  br label %140

135:                                              ; preds = %126
  %136 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %137 = load i64*, i64** %136, align 8
  %138 = getelementptr inbounds i64, i64* %137, i64 1
  %139 = bitcast i64* %138 to %"class.v8::Value"*
  br label %140

140:                                              ; preds = %129, %135
  %141 = phi %"class.v8::Value"* [ %134, %129 ], [ %139, %135 ]
  %142 = call zeroext i1 @_ZN5blink8bindings18IsEsIterableObjectEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %33, %"class.v8::Value"* %141, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #6
  br i1 %142, label %143, label %297

143:                                              ; preds = %123, %140
  %144 = load i64*, i64** %29, align 8
  %145 = getelementptr inbounds i64, i64* %144, i64 1
  %146 = bitcast i64* %145 to %"class.v8::Isolate"**
  %147 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %146, align 8
  %148 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %147) #6
  %149 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %148) #6
  %150 = icmp eq %"class.blink::ExecutionContext"* %149, null
  %151 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %149, i64 0, i32 3
  br i1 %150, label %157, label %152

152:                                              ; preds = %143
  %153 = bitcast %"class.blink::UseCounter"* %151 to void (%"class.blink::UseCounter"*, i32)***
  %154 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %153, align 8
  %155 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %154, i64 3
  %156 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %155, align 8
  call void %156(%"class.blink::UseCounter"* nonnull %151, i32 781) #6
  br label %157

157:                                              ; preds = %152, %143
  %158 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %158) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %158, i8 -86, i64 56, i1 false) #6
  %159 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %159, align 8
  %160 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %160, align 8
  %161 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %161, align 2
  %162 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %163 = bitcast i8** %162 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)>, <2 x i8*>* %163, align 8
  %164 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %164, align 8
  %165 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %147, %"class.v8::Isolate"** %165, align 8
  %166 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %166, align 8
  %167 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %168 = bitcast %"class.WTF::StringImpl"** %167 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %168, i8 0, i64 16, i1 false) #6
  %169 = load i32, i32* %25, align 8
  %170 = icmp slt i32 %169, 2
  br i1 %170, label %171, label %191, !prof !2

171:                                              ; preds = %157
  %172 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #6
  %173 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %169) #6
  %174 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %173, %"class.WTF::StringImpl"** %174, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %175, null
  br i1 %176, label %190, label %177

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  br i1 %181, label %184, label %186

184:                                              ; preds = %177
  %185 = add i32 %183, -1
  store i32 %185, i32* %182, align 4
  br label %186

186:                                              ; preds = %184, %177
  %187 = phi i32 [ %185, %184 ], [ %183, %177 ]
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %186
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %175) #6
  br label %190

190:                                              ; preds = %189, %186, %171
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #6
  br label %267

191:                                              ; preds = %157
  %192 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %193 = load i64*, i64** %192, align 8
  %194 = getelementptr inbounds i64, i64* %193, i64 -1
  %195 = bitcast i64* %194 to %"class.v8::Object"*
  %196 = load i64, i64* %194, align 8
  %197 = add i64 %196, -1
  %198 = inttoptr i64 %197 to i32*
  %199 = load i32, i32* %198, align 4
  %200 = and i64 %196, -4294967296
  %201 = zext i32 %199 to i64
  %202 = or i64 %200, %201
  %203 = add i64 %202, 7
  %204 = inttoptr i64 %203 to i16*
  %205 = load i16, i16* %204, align 2
  switch i16 %205, label %210 [
    i16 1057, label %206
    i16 1056, label %206
    i16 1040, label %206
  ]

206:                                              ; preds = %191, %191, %191
  %207 = add i64 %196, 19
  %208 = inttoptr i64 %207 to i8**
  %209 = load i8*, i8** %208, align 1
  br label %212

210:                                              ; preds = %191
  %211 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %195, i32 1) #6
  br label %212

212:                                              ; preds = %210, %206
  %213 = phi i8* [ %209, %206 ], [ %211, %210 ]
  %214 = bitcast i8* %213 to %"class.blink::MessagePort"*
  %215 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %195) #6
  %216 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %215) #6
  %217 = bitcast %"class.blink::ScriptValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %217) #6
  %218 = load i32, i32* %25, align 8
  %219 = icmp sgt i32 %218, 0
  br i1 %219, label %226, label %220

220:                                              ; preds = %212
  %221 = load i64*, i64** %29, align 8
  %222 = getelementptr inbounds i64, i64* %221, i64 1
  %223 = load i64, i64* %222, align 8
  %224 = add i64 %223, 160
  %225 = inttoptr i64 %224 to %"class.v8::Value"*
  br label %229

226:                                              ; preds = %212
  %227 = bitcast i64** %192 to %"class.v8::Value"**
  %228 = load %"class.v8::Value"*, %"class.v8::Value"** %227, align 8
  br label %229

229:                                              ; preds = %226, %220
  %230 = phi %"class.v8::Value"* [ %225, %220 ], [ %228, %226 ]
  %231 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 0
  store %"class.v8::Isolate"* %147, %"class.v8::Isolate"** %231, align 8, !alias.scope !3
  %232 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %232, %"class.v8::Isolate"* %147, %"class.v8::Value"* %230) #6
  %233 = load i32, i32* %166, align 8
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %255

235:                                              ; preds = %229
  %236 = bitcast %"class.blink::HeapVector.396"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %236) #6
  %237 = load i32, i32* %25, align 8
  %238 = icmp sgt i32 %237, 1
  br i1 %238, label %245, label %239

239:                                              ; preds = %235
  %240 = load i64*, i64** %29, align 8
  %241 = getelementptr inbounds i64, i64* %240, i64 1
  %242 = load i64, i64* %241, align 8
  %243 = add i64 %242, 160
  %244 = inttoptr i64 %243 to %"class.v8::Value"*
  br label %249

245:                                              ; preds = %235
  %246 = load i64*, i64** %192, align 8
  %247 = getelementptr inbounds i64, i64* %246, i64 1
  %248 = bitcast i64* %247 to %"class.v8::Value"*
  br label %249

249:                                              ; preds = %245, %239
  %250 = phi %"class.v8::Value"* [ %244, %239 ], [ %248, %245 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_9IDLObjectEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::HeapVector.396"* nonnull sret %5, %"class.v8::Isolate"* %147, %"class.v8::Value"* %250, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %251 = load i32, i32* %166, align 8
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %249
  call void @_ZN5blink11MessagePort11postMessageEPNS_11ScriptStateERKNS_11ScriptValueERNS_10HeapVectorIS3_Lj0EEERNS_14ExceptionStateE(%"class.blink::MessagePort"* %214, %"class.blink::ScriptState"* %216, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %4, %"class.blink::HeapVector.396"* nonnull dereferenceable(16) %5, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %254

254:                                              ; preds = %253, %249
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %236) #6
  br label %255

255:                                              ; preds = %254, %229
  %256 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1, i32 1, i32 0
  %257 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %256, align 8
  %258 = icmp eq %"class.blink::DOMWrapperWorld"* %257, null
  br i1 %258, label %266, label %259

259:                                              ; preds = %255
  %260 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %257, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %260) #6
  %261 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %257, i64 0, i32 0, i32 0, i32 0, i32 0
  %262 = load i32, i32* %261, align 4
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %266

264:                                              ; preds = %259
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %257) #6
  %265 = bitcast %"class.blink::DOMWrapperWorld"* %257 to i8*
  call void @free(i8* %265) #6
  br label %266

266:                                              ; preds = %264, %259, %255
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %217) #6
  br label %267

267:                                              ; preds = %266, %190
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %159, align 8
  %268 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %269 = load i64*, i64** %268, align 8
  %270 = icmp eq i64* %269, null
  br i1 %270, label %280, label %271

271:                                              ; preds = %267
  %272 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %165, align 8
  %273 = bitcast %"class.v8::Isolate"* %272 to %"class.v8::internal::Isolate"*
  %274 = load i64, i64* %269, align 8
  %275 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %273, i64 %274) #6
  %276 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %272) #6
  br i1 %276, label %280, label %277

277:                                              ; preds = %271
  %278 = bitcast i64* %275 to %"class.v8::Value"*
  %279 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %272, %"class.v8::Value"* %278) #6
  br label %280

280:                                              ; preds = %277, %271, %267
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  br i1 %282, label %296, label %283

283:                                              ; preds = %280
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load atomic i32, i32* %284 monotonic, align 4
  %286 = and i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  br i1 %287, label %290, label %292

290:                                              ; preds = %283
  %291 = add i32 %289, -1
  store i32 %291, i32* %288, align 4
  br label %292

292:                                              ; preds = %290, %283
  %293 = phi i32 [ %291, %290 ], [ %289, %283 ]
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %292
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %281) #6
  br label %296

296:                                              ; preds = %280, %292, %295
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %158) #6
  br label %345

297:                                              ; preds = %140
  %298 = load i32, i32* %42, align 8
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %345

300:                                              ; preds = %297
  %301 = load i32, i32* %25, align 8
  %302 = icmp sgt i32 %301, 1
  br i1 %302, label %309, label %303

303:                                              ; preds = %300
  %304 = load i64*, i64** %29, align 8
  %305 = getelementptr inbounds i64, i64* %304, i64 1
  %306 = load i64, i64* %305, align 8
  %307 = add i64 %306, 160
  %308 = inttoptr i64 %307 to %"class.v8::Value"*
  br label %314

309:                                              ; preds = %300
  %310 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %311 = load i64*, i64** %310, align 8
  %312 = getelementptr inbounds i64, i64* %311, i64 1
  %313 = bitcast i64* %312 to %"class.v8::Value"*
  br label %314

314:                                              ; preds = %303, %309
  %315 = phi %"class.v8::Value"* [ %308, %303 ], [ %313, %309 ]
  %316 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %315) #6
  br i1 %316, label %319, label %317

317:                                              ; preds = %314
  %318 = load i32, i32* %25, align 8
  br label %321

319:                                              ; preds = %314
  call fastcc void @_ZN5blink12_GLOBAL__N_115v8_message_port29PostMessageOperationOverload2ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %345

320:                                              ; preds = %24
  tail call fastcc void @_ZN5blink12_GLOBAL__N_115v8_message_port29PostMessageOperationOverload2ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %345

321:                                              ; preds = %317, %24
  %322 = phi i32 [ %318, %317 ], [ %26, %24 ]
  %323 = icmp slt i32 %322, 1
  br i1 %323, label %324, label %344, !prof !2

324:                                              ; preds = %321
  %325 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %325) #6
  %326 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %322) #6
  %327 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %326, %"class.WTF::StringImpl"** %327, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %6, %"class.WTF::String"* nonnull dereferenceable(8) %7) #6
  %328 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %327, align 8
  %329 = icmp eq %"class.WTF::StringImpl"* %328, null
  br i1 %329, label %343, label %330

330:                                              ; preds = %324
  %331 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %328, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %332 = load atomic i32, i32* %331 monotonic, align 4
  %333 = and i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %328, i64 0, i32 0
  %336 = load i32, i32* %335, align 4
  br i1 %334, label %337, label %339

337:                                              ; preds = %330
  %338 = add i32 %336, -1
  store i32 %338, i32* %335, align 4
  br label %339

339:                                              ; preds = %337, %330
  %340 = phi i32 [ %338, %337 ], [ %336, %330 ]
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %342, label %343

342:                                              ; preds = %339
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %328) #6
  br label %343

343:                                              ; preds = %324, %339, %342
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %325) #6
  br label %345

344:                                              ; preds = %321
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %6, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0)) #6
  br label %345

345:                                              ; preds = %297, %344, %343, %320, %319, %296, %112, %79
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %346 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %347 = load i64*, i64** %346, align 8
  %348 = icmp eq i64* %347, null
  br i1 %348, label %358, label %349

349:                                              ; preds = %345
  %350 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %41, align 8
  %351 = bitcast %"class.v8::Isolate"* %350 to %"class.v8::internal::Isolate"*
  %352 = load i64, i64* %347, align 8
  %353 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %351, i64 %352) #6
  %354 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %350) #6
  br i1 %354, label %358, label %355

355:                                              ; preds = %349
  %356 = bitcast i64* %353 to %"class.v8::Value"*
  %357 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %350, %"class.v8::Value"* %356) #6
  br label %358

358:                                              ; preds = %355, %349, %345
  %359 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %360 = icmp eq %"class.WTF::StringImpl"* %359, null
  br i1 %360, label %374, label %361

361:                                              ; preds = %358
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = load atomic i32, i32* %362 monotonic, align 4
  %364 = and i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 0
  %367 = load i32, i32* %366, align 4
  br i1 %365, label %368, label %370

368:                                              ; preds = %361
  %369 = add i32 %367, -1
  store i32 %369, i32* %366, align 4
  br label %370

370:                                              ; preds = %368, %361
  %371 = phi i32 [ %369, %368 ], [ %367, %361 ]
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %374

373:                                              ; preds = %370
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %359) #6
  br label %374

374:                                              ; preds = %358, %370, %373
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %34) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_115v8_message_port22StartOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #6
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #6
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 782) #6
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #6
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = bitcast i8* %40 to %"class.blink::MessagePort"*
  tail call void @_ZN5blink11MessagePort5startEv(%"class.blink::MessagePort"* %41) #6
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span.181"* byval(%"class.base::span.181") align 8) local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

declare %"class.blink::EventListener"* @_ZN5blink11EventTarget25GetAttributeEventListenerERKN3WTF12AtomicStringE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::JSEventHandler"* @_ZN5blink14JSEventHandler12CreateOrNullEN2v85LocalINS1_5ValueEEENS0_11HandlerTypeE(%"class.v8::Value"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*) local_unnamed_addr #2

declare void @_ZN5blink11MessagePort5startEv(%"class.blink::MessagePort"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN5blink11MessagePort5closeEv(%"class.blink::MessagePort"*) local_unnamed_addr #2

declare %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_115v8_message_port29PostMessageOperationOverload2ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ScriptValue", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %9) #6
  %11 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %10) #6
  %12 = icmp eq %"class.blink::ExecutionContext"* %11, null
  %13 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %11, i64 0, i32 3
  %14 = icmp eq %"class.blink::UseCounter"* %13, null
  %15 = or i1 %12, %14
  br i1 %15, label %21, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.blink::UseCounter"* %13 to void (%"class.blink::UseCounter"*, i32)***
  %18 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, i64 3
  %20 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %19, align 8
  tail call void %20(%"class.blink::UseCounter"* nonnull %13, i32 781) #6
  br label %21

21:                                               ; preds = %1, %16
  %22 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %22) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 56, i1 false)
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %24, align 8
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %25, align 2
  %26 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %27 = bitcast i8** %26 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)>, <2 x i8*>* %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %29, align 8
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %32 = bitcast %"class.WTF::StringImpl"** %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #6
  %33 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = icmp slt i32 %34, 1
  br i1 %35, label %36, label %56, !prof !2

36:                                               ; preds = %21
  %37 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #6
  %38 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %34) #6
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %39, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #6
  br label %55

55:                                               ; preds = %36, %51, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #6
  br label %173

56:                                               ; preds = %21
  %57 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %58 = load i64*, i64** %57, align 8
  %59 = getelementptr inbounds i64, i64* %58, i64 -1
  %60 = bitcast i64* %59 to %"class.v8::Object"*
  %61 = load i64, i64* %59, align 8
  %62 = add i64 %61, -1
  %63 = inttoptr i64 %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = and i64 %61, -4294967296
  %66 = zext i32 %64 to i64
  %67 = or i64 %65, %66
  %68 = add i64 %67, 7
  %69 = inttoptr i64 %68 to i16*
  %70 = load i16, i16* %69, align 2
  switch i16 %70, label %75 [
    i16 1057, label %71
    i16 1056, label %71
    i16 1040, label %71
  ]

71:                                               ; preds = %56, %56, %56
  %72 = add i64 %61, 19
  %73 = inttoptr i64 %72 to i8**
  %74 = load i8*, i8** %73, align 1
  br label %77

75:                                               ; preds = %56
  %76 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %60, i32 1) #6
  br label %77

77:                                               ; preds = %71, %75
  %78 = phi i8* [ %74, %71 ], [ %76, %75 ]
  %79 = bitcast i8* %78 to %"class.blink::MessagePort"*
  %80 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %60) #6
  %81 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %80)
  %82 = bitcast %"class.blink::ScriptValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #6
  %83 = load i32, i32* %33, align 8
  %84 = icmp sgt i32 %83, 0
  br i1 %84, label %91, label %85

85:                                               ; preds = %77
  %86 = load i64*, i64** %5, align 8
  %87 = getelementptr inbounds i64, i64* %86, i64 1
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, 160
  %90 = inttoptr i64 %89 to %"class.v8::Value"*
  br label %94

91:                                               ; preds = %77
  %92 = bitcast i64** %57 to %"class.v8::Value"**
  %93 = load %"class.v8::Value"*, %"class.v8::Value"** %92, align 8
  br label %94

94:                                               ; preds = %85, %91
  %95 = phi %"class.v8::Value"* [ %90, %85 ], [ %93, %91 ]
  %96 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 0
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %96, align 8, !alias.scope !8
  %97 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %97, %"class.v8::Isolate"* %9, %"class.v8::Value"* %95) #6
  %98 = load i32, i32* %30, align 8
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %161

100:                                              ; preds = %94
  %101 = load i32, i32* %33, align 8
  %102 = icmp sgt i32 %101, 1
  br i1 %102, label %109, label %103

103:                                              ; preds = %100
  %104 = load i64*, i64** %5, align 8
  %105 = getelementptr inbounds i64, i64* %104, i64 1
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, 160
  %108 = inttoptr i64 %107 to %"class.v8::Value"*
  br label %113

109:                                              ; preds = %100
  %110 = load i64*, i64** %57, align 8
  %111 = getelementptr inbounds i64, i64* %110, i64 1
  %112 = bitcast i64* %111 to %"class.v8::Value"*
  br label %113

113:                                              ; preds = %103, %109
  %114 = phi %"class.v8::Value"* [ %108, %103 ], [ %112, %109 ]
  %115 = bitcast %"class.v8::Value"* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = and i64 %116, 3
  %118 = icmp eq i64 %117, 1
  br i1 %118, label %119, label %143

119:                                              ; preds = %113
  %120 = add i64 %116, -1
  %121 = inttoptr i64 %120 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = and i64 %116, -4294967296
  %124 = zext i32 %122 to i64
  %125 = or i64 %123, %124
  %126 = add i64 %125, 7
  %127 = inttoptr i64 %126 to i16*
  %128 = load i16, i16* %127, align 2
  %129 = icmp eq i16 %128, 67
  br i1 %129, label %130, label %143

130:                                              ; preds = %119
  %131 = add i64 %116, 23
  %132 = inttoptr i64 %131 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = and i32 %133, -2
  %135 = icmp eq i32 %134, 10
  br i1 %135, label %136, label %143

136:                                              ; preds = %130
  %137 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 32) #6
  %138 = bitcast i8* %137 to %"class.blink::PostMessageOptions"*
  call void @_ZN5blink18PostMessageOptionsC1Ev(%"class.blink::PostMessageOptions"* %138) #6
  %139 = getelementptr inbounds i8, i8* %137, i64 -4
  %140 = bitcast i8* %139 to i16*
  %141 = load atomic i16, i16* %140 monotonic, align 2
  %142 = or i16 %141, 1
  store atomic i16 %142, i16* %140 release, align 2
  br label %159

143:                                              ; preds = %119, %113, %130
  br i1 %102, label %150, label %144

144:                                              ; preds = %143
  %145 = load i64*, i64** %5, align 8
  %146 = getelementptr inbounds i64, i64* %145, i64 1
  %147 = load i64, i64* %146, align 8
  %148 = add i64 %147, 160
  %149 = inttoptr i64 %148 to %"class.v8::Value"*
  br label %154

150:                                              ; preds = %143
  %151 = load i64*, i64** %57, align 8
  %152 = getelementptr inbounds i64, i64* %151, i64 1
  %153 = bitcast i64* %152 to %"class.v8::Value"*
  br label %154

154:                                              ; preds = %144, %150
  %155 = phi %"class.v8::Value"* [ %149, %144 ], [ %153, %150 ]
  %156 = call %"class.blink::PostMessageOptions"* @_ZN5blink17NativeValueTraitsINS_18PostMessageOptionsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %9, %"class.v8::Value"* %155, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %157 = load i32, i32* %30, align 8
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %161

159:                                              ; preds = %154, %136
  %160 = phi %"class.blink::PostMessageOptions"* [ %138, %136 ], [ %156, %154 ]
  call void @_ZN5blink11MessagePort11postMessageEPNS_11ScriptStateERKNS_11ScriptValueEPKNS_18PostMessageOptionsERNS_14ExceptionStateE(%"class.blink::MessagePort"* %79, %"class.blink::ScriptState"* %81, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %4, %"class.blink::PostMessageOptions"* %160, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %161

161:                                              ; preds = %154, %94, %159
  %162 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1, i32 1, i32 0
  %163 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %162, align 8
  %164 = icmp eq %"class.blink::DOMWrapperWorld"* %163, null
  br i1 %164, label %172, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %163, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %166) #6
  %167 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %163, i64 0, i32 0, i32 0, i32 0, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %165
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %163) #6
  %171 = bitcast %"class.blink::DOMWrapperWorld"* %163 to i8*
  call void @free(i8* %171) #6
  br label %172

172:                                              ; preds = %161, %165, %170
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #6
  br label %173

173:                                              ; preds = %172, %55
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %174 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %175 = load i64*, i64** %174, align 8
  %176 = icmp eq i64* %175, null
  br i1 %176, label %186, label %177

177:                                              ; preds = %173
  %178 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %29, align 8
  %179 = bitcast %"class.v8::Isolate"* %178 to %"class.v8::internal::Isolate"*
  %180 = load i64, i64* %175, align 8
  %181 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %179, i64 %180) #6
  %182 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %178) #6
  br i1 %182, label %186, label %183

183:                                              ; preds = %177
  %184 = bitcast i64* %181 to %"class.v8::Value"*
  %185 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %178, %"class.v8::Value"* %184) #6
  br label %186

186:                                              ; preds = %183, %177, %173
  %187 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %188 = icmp eq %"class.WTF::StringImpl"* %187, null
  br i1 %188, label %202, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = and i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 0
  %195 = load i32, i32* %194, align 4
  br i1 %193, label %196, label %198

196:                                              ; preds = %189
  %197 = add i32 %195, -1
  store i32 %197, i32* %194, align 4
  br label %198

198:                                              ; preds = %196, %189
  %199 = phi i32 [ %197, %196 ], [ %195, %189 ]
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %202

201:                                              ; preds = %198
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %187) #6
  br label %202

202:                                              ; preds = %186, %198, %201
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %22) #6
  ret void
}

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink8bindings18IsEsIterableObjectEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32, i32) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.7, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0)) #6
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.7, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0)) #6
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #6
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare void @_ZN5blink11MessagePort11postMessageEPNS_11ScriptStateERKNS_11ScriptValueEPKNS_18PostMessageOptionsERNS_14ExceptionStateE(%"class.blink::MessagePort"*, %"class.blink::ScriptState"*, %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::PostMessageOptions"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr.393, %class.scoped_refptr.393* %4, i64 0, i32 0
  %6 = icmp eq %"class.v8::Value"* %2, null
  %7 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  br i1 %6, label %61, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::Value"* %2 to i64*
  %11 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  %13 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %11, i64* nonnull %10, i64* %12, i1 zeroext false) #6
  %14 = ptrtoint i64* %13 to i64
  store atomic i64 %14, i64* %12 monotonic, align 8
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.390"* dereferenceable(8) %9) #6
  %15 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #6
  br i1 %15, label %16, label %38

16:                                               ; preds = %8
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #6
  %18 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %17) #6
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %18, i64 0, i32 2, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #6
  br label %24

24:                                               ; preds = %22, %16
  %25 = ptrtoint %"class.blink::DOMWrapperWorld"* %20 to i64
  %26 = bitcast %class.scoped_refptr.393* %4 to i64*
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %25, i64* %26, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #6
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #6
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #6
  br label %36

36:                                               ; preds = %24, %29, %34
  %37 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  tail call void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32) %37, %"class.v8::Value"* nonnull %2) #6
  br label %61

38:                                               ; preds = %8
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %2) #6
  br i1 %39, label %40, label %61

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %42 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* nonnull %41) #6
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %42)
  %44 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %43, i64 0, i32 2, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #6
  br label %49

49:                                               ; preds = %47, %40
  %50 = ptrtoint %"class.blink::DOMWrapperWorld"* %45 to i64
  %51 = bitcast %class.scoped_refptr.393* %4 to i64*
  %52 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %50, i64* %51, align 8
  %53 = icmp eq %"class.blink::DOMWrapperWorld"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #6
  %56 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %52) #6
  %60 = bitcast %"class.blink::DOMWrapperWorld"* %52 to i8*
  tail call void @free(i8* %60) #6
  br label %61

61:                                               ; preds = %59, %54, %49, %38, %3, %36
  ret void
}

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.390"* dereferenceable(8)) local_unnamed_addr #2

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN5blink18PostMessageOptionsC1Ev(%"class.blink::PostMessageOptions"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.191"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.191"*)) #6
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #6
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %21, i8* %22) #6
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #6
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #6
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.191"*) local_unnamed_addr #2

declare %"class.blink::PostMessageOptions"* @_ZN5blink17NativeValueTraitsINS_18PostMessageOptionsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink11MessagePort11postMessageEPNS_11ScriptStateERKNS_11ScriptValueERNS_10HeapVectorIS3_Lj0EEERNS_14ExceptionStateE(%"class.blink::MessagePort"*, %"class.blink::ScriptState"*, %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::HeapVector.396"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_9IDLObjectEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::HeapVector.396"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #6
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_9IDLObjectEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.blink::HeapVector.396"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #6
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.13, i64 0, i64 0)) #6
  %12 = bitcast %"class.blink::HeapVector.396"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #6
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::HeapVector.396"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.14, i64 0, i64 0)) #6
  %26 = bitcast %"class.blink::HeapVector.396"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false)
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_9IDLObjectEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.blink::HeapVector.396"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #6
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_9IDLObjectEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.blink::HeapVector.396"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::HeapVector.396", align 8
  %7 = alloca %"class.v8::TryCatch", align 8
  %8 = alloca %"class.blink::ScriptValue", align 8
  %9 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #6
  %10 = zext i32 %9 to i64
  %11 = icmp ugt i32 %9, 5592405
  br i1 %11, label %12, label %14

12:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15, i64 0, i64 0)) #6
  %13 = bitcast %"class.blink::HeapVector.396"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false)
  br label %149

14:                                               ; preds = %4
  %15 = bitcast %"class.blink::HeapVector.396"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #6
  %16 = getelementptr inbounds %"class.blink::HeapVector.396", %"class.blink::HeapVector.396"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::HeapVector.396", %"class.blink::HeapVector.396"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.blink::HeapVector.396", %"class.blink::HeapVector.396"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 16, i1 false) #6
  %19 = getelementptr inbounds %"class.blink::HeapVector.396", %"class.blink::HeapVector.396"* %6, i64 0, i32 0
  %20 = icmp eq i32 %9, 0
  br i1 %20, label %33, label %21

21:                                               ; preds = %14
  %22 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_11ScriptValueEEEmm(i64 %10) #6
  %23 = udiv i64 %22, 24
  %24 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %23) #6
  %25 = ptrtoint %"class.blink::HeapVectorBacking"* %24 to i64
  %26 = bitcast %"class.blink::HeapVector.396"* %6 to i64*
  store atomic i64 %25, i64* %26 monotonic, align 8
  %27 = trunc i64 %23 to i32
  store i32 %27, i32* %17, align 8
  %28 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %24, i64 0, i32 0
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %31) #6
  br label %33

33:                                               ; preds = %14, %21, %30
  %34 = phi i32 [ 0, %14 ], [ %27, %21 ], [ %27, %30 ]
  %35 = phi i64 [ 0, %14 ], [ %25, %21 ], [ %25, %30 ]
  %36 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #6
  %37 = bitcast %"class.v8::TryCatch"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %7, %"class.v8::Isolate"* %1) #6
  %38 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #6
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %33
  %41 = bitcast %"class.blink::HeapVector.396"* %6 to i64*
  br label %127

42:                                               ; preds = %33
  %43 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %44 = bitcast %"class.blink::ScriptValue"* %8 to i8*
  %45 = bitcast %"class.WTF::String"* %5 to i8*
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %47 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %48 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 0
  %49 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %51 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1, i32 1, i32 0
  %52 = bitcast %"class.blink::HeapVector.396"* %0 to i8*
  br label %56

53:                                               ; preds = %119
  %54 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #6
  %55 = icmp ult i32 %121, %54
  br i1 %55, label %56, label %122

56:                                               ; preds = %42, %53
  %57 = phi i32 [ 0, %42 ], [ %121, %53 ]
  %58 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %43, %"class.v8::Context"* %36, i32 %57) #6
  %59 = icmp eq %"class.v8::Value"* %58, null
  br i1 %59, label %60, label %67

60:                                               ; preds = %56
  %61 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #6
  %62 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %63 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %63, i64 5
  %65 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %64, align 8
  call void %65(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %61) #6
  %66 = bitcast %"class.blink::HeapVector.396"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false)
  br label %148

67:                                               ; preds = %56
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #6
  %68 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %58) #6, !noalias !13
  br i1 %68, label %69, label %70

69:                                               ; preds = %67
  store %"class.v8::Isolate"* %1, %"class.v8::Isolate"** %48, align 8, !alias.scope !13
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %49, %"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %58) #6
  br label %91

70:                                               ; preds = %67
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #6, !noalias !13
  %71 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i64 0, i64 0)) #6
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %46, align 8, !noalias !13
  %72 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %47, align 8, !noalias !13
  %73 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %72, i64 3
  %74 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %73, align 8
  call void %74(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #6
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8, !noalias !13
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #6
  br label %90

90:                                               ; preds = %89, %86, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #6, !noalias !13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #6, !alias.scope !13
  br label %91

91:                                               ; preds = %69, %90
  %92 = load i32, i32* %50, align 8
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %95, label %94

94:                                               ; preds = %91
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false)
  br label %108

95:                                               ; preds = %91
  %96 = load i32, i32* %18, align 4
  %97 = load i32, i32* %17, align 8
  %98 = icmp eq i32 %96, %97
  br i1 %98, label %107, label %99, !prof !2

99:                                               ; preds = %95
  %100 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %16, align 8
  %101 = zext i32 %96 to i64
  %102 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %100, i64 %101
  %103 = bitcast %"class.blink::ScriptValue"* %102 to i8*
  %104 = call %"class.blink::ScriptValue"* @_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %103, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %8) #6
  %105 = load i32, i32* %18, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %18, align 4
  br label %108

107:                                              ; preds = %95
  call void @_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.399"* nonnull %19, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %8) #6
  br label %108

108:                                              ; preds = %107, %99, %94
  %109 = phi i32 [ 1, %94 ], [ 0, %99 ], [ 0, %107 ]
  %110 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %51, align 8
  %111 = icmp eq %"class.blink::DOMWrapperWorld"* %110, null
  br i1 %111, label %119, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %110, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %113) #6
  %114 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %110, i64 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %119

117:                                              ; preds = %112
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %110) #6
  %118 = bitcast %"class.blink::DOMWrapperWorld"* %110 to i8*
  call void @free(i8* %118) #6
  br label %119

119:                                              ; preds = %117, %112, %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #6
  %120 = icmp eq i32 %109, 0
  %121 = add nuw i32 %57, 1
  br i1 %120, label %53, label %148

122:                                              ; preds = %53
  %123 = bitcast %"class.blink::HeapVector.396"* %6 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = load i32, i32* %17, align 8
  %126 = load i32, i32* %18, align 4
  br label %127

127:                                              ; preds = %40, %122
  %128 = phi i64* [ %41, %40 ], [ %123, %122 ]
  %129 = phi i32 [ 0, %40 ], [ %126, %122 ]
  %130 = phi i32 [ %34, %40 ], [ %125, %122 ]
  %131 = phi i64 [ %35, %40 ], [ %124, %122 ]
  %132 = getelementptr inbounds %"class.blink::HeapVector.396", %"class.blink::HeapVector.396"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %133 = getelementptr inbounds %"class.blink::HeapVector.396", %"class.blink::HeapVector.396"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %134 = bitcast %"class.blink::HeapVector.396"* %0 to i64*
  store i64 0, i64* %134, align 8
  %135 = bitcast %"class.blink::HeapVector.396"* %0 to i64*
  store atomic i64 0, i64* %128 monotonic, align 8
  store atomic i64 %131, i64* %135 monotonic, align 8
  store i32 %130, i32* %132, align 8
  store i32 0, i32* %17, align 8
  store i32 %129, i32* %133, align 4
  store i32 0, i32* %18, align 4
  %136 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %141, label %138

138:                                              ; preds = %127
  %139 = inttoptr i64 %131 to i8*
  %140 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %139) #6
  br label %141

141:                                              ; preds = %138, %127
  %142 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %148, label %144

144:                                              ; preds = %141
  %145 = bitcast %"class.blink::HeapVector.396"* %6 to i8**
  %146 = load i8*, i8** %145, align 8
  %147 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %146) #6
  br label %148

148:                                              ; preds = %119, %60, %144, %141
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #6
  br label %149

149:                                              ; preds = %148, %12
  ret void
}

declare void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* sret, %"class.v8::Isolate"*, %"class.v8::Object"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_9IDLObjectEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.blink::HeapVector.396"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::HeapVector.396", align 8
  %7 = alloca %"class.blink::ScriptValue", align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #6
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %8) #6
  %10 = bitcast %"class.blink::HeapVector.396"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #6
  %11 = getelementptr inbounds %"class.blink::HeapVector.396", %"class.blink::HeapVector.396"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::HeapVector.396", %"class.blink::HeapVector.396"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.blink::HeapVector.396", %"class.blink::HeapVector.396"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #6
  %14 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %9, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #6
  br i1 %14, label %15, label %94

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %17 = bitcast %"class.blink::ScriptValue"* %7 to i8*
  %18 = bitcast %"class.WTF::String"* %5 to i8*
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %21 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 1
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %24 = getelementptr inbounds %"class.blink::HeapVector.396", %"class.blink::HeapVector.396"* %6, i64 0, i32 0
  %25 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 1, i32 1, i32 0
  br label %26

26:                                               ; preds = %15, %92
  %27 = load %"class.v8::Value"*, %"class.v8::Value"** %16, align 8
  %28 = icmp eq %"class.v8::Value"* %27, null
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %26
  call void @_ZN2v82V812ToLocalEmptyEv() #6
  br label %30

30:                                               ; preds = %26, %29
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #6
  %31 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %27) #6, !noalias !16
  br i1 %31, label %32, label %33

32:                                               ; preds = %30
  store %"class.v8::Isolate"* %1, %"class.v8::Isolate"** %21, align 8, !alias.scope !16
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %22, %"class.v8::Isolate"* %1, %"class.v8::Value"* %27) #6
  br label %54

33:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6, !noalias !16
  %34 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i64 0, i64 0)) #6
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %19, align 8, !noalias !16
  %35 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %20, align 8, !noalias !16
  %36 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, i64 3
  %37 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %36, align 8
  call void %37(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #6
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8, !noalias !16
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #6
  br label %53

53:                                               ; preds = %52, %49, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6, !noalias !16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #6, !alias.scope !16
  br label %54

54:                                               ; preds = %32, %53
  %55 = load i32, i32* %23, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %54
  %58 = bitcast %"class.blink::HeapVector.396"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false)
  %59 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %25, align 8
  %60 = icmp eq %"class.blink::DOMWrapperWorld"* %59, null
  br i1 %60, label %68, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %59, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %62) #6
  %63 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %59, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %61
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %59) #6
  %67 = bitcast %"class.blink::DOMWrapperWorld"* %59 to i8*
  call void @free(i8* %67) #6
  br label %68

68:                                               ; preds = %57, %61, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #6
  br label %121

69:                                               ; preds = %54
  %70 = load i32, i32* %13, align 4
  %71 = load i32, i32* %12, align 8
  %72 = icmp eq i32 %70, %71
  br i1 %72, label %81, label %73, !prof !2

73:                                               ; preds = %69
  %74 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %11, align 8
  %75 = zext i32 %70 to i64
  %76 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %74, i64 %75
  %77 = bitcast %"class.blink::ScriptValue"* %76 to i8*
  %78 = call %"class.blink::ScriptValue"* @_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %77, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %7) #6
  %79 = load i32, i32* %13, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %13, align 4
  br label %82

81:                                               ; preds = %69
  call void @_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.399"* nonnull %24, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %7) #6
  br label %82

82:                                               ; preds = %73, %81
  %83 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %25, align 8
  %84 = icmp eq %"class.blink::DOMWrapperWorld"* %83, null
  br i1 %84, label %92, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %83, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %86) #6
  %87 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %83, i64 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %85
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %83) #6
  %91 = bitcast %"class.blink::DOMWrapperWorld"* %83 to i8*
  call void @free(i8* %91) #6
  br label %92

92:                                               ; preds = %82, %85, %90
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #6
  %93 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %9, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #6
  br i1 %93, label %26, label %94

94:                                               ; preds = %92, %4
  %95 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %100, label %98

98:                                               ; preds = %94
  %99 = bitcast %"class.blink::HeapVector.396"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 16, i1 false)
  br label %121

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.blink::HeapVector.396", %"class.blink::HeapVector.396"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %102 = getelementptr inbounds %"class.blink::HeapVector.396", %"class.blink::HeapVector.396"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %103 = bitcast %"class.blink::HeapVector.396"* %6 to i64*
  %104 = bitcast %"class.blink::HeapVector.396"* %0 to i64*
  store i64 0, i64* %104, align 8
  %105 = load i64, i64* %103, align 8
  %106 = bitcast %"class.blink::HeapVector.396"* %0 to i64*
  store atomic i64 0, i64* %103 monotonic, align 8
  store atomic i64 %105, i64* %106 monotonic, align 8
  %107 = load i32, i32* %12, align 8
  store i32 %107, i32* %101, align 8
  store i32 0, i32* %12, align 8
  %108 = load i32, i32* %13, align 4
  store i32 %108, i32* %102, align 4
  store i32 0, i32* %13, align 4
  %109 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %100
  %112 = inttoptr i64 %105 to i8*
  %113 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %112) #6
  br label %114

114:                                              ; preds = %111, %100
  %115 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %114
  %118 = bitcast %"class.blink::HeapVector.396"* %6 to i8**
  %119 = load i8*, i8** %118, align 8
  %120 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %119) #6
  br label %121

121:                                              ; preds = %117, %114, %68, %98
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #6
  ret void
}

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_11ScriptValueEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 5592405
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 5592405) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.17, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = mul i64 %0, 24
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.19, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = mul i64 %0, 24
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.191"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.191"*)) #6
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([132 x i8], [132 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_11ScriptValueENS_12VectorTraitsIS3_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #6
  br i1 %28, label %62, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::ScriptValue"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !2

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = udiv i64 %49, 24
  %51 = icmp ugt i64 %49, 23
  br i1 %51, label %52, label %62

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.390"*)***
  br label %54

54:                                               ; preds = %54, %52
  %55 = phi i64 [ 0, %52 ], [ %60, %54 ]
  %56 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %30, i64 %55, i32 1, i32 0
  %57 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.390"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.390"*)*** %53, align 8
  %58 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.390"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.390"*)** %57, i64 7
  %59 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.390"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.390"*)** %58, align 8
  tail call void %59(%"class.blink::Visitor"* %0, %"class.blink::TraceWrapperV8Reference.390"* dereferenceable(8) %56) #6
  %60 = add nuw nsw i64 %55, 1
  %61 = icmp ult i64 %60, %50
  br i1 %61, label %54, label %62

62:                                               ; preds = %54, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 24
  %22 = bitcast i8* %0 to %"class.blink::ScriptValue"*
  %23 = icmp ugt i64 %20, 23
  br i1 %23, label %24, label %41

24:                                               ; preds = %18, %37
  %25 = phi i64 [ %39, %37 ], [ 0, %18 ]
  %26 = phi i32 [ %38, %37 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %22, i64 %25, i32 1, i32 1, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = icmp eq %"class.blink::DOMWrapperWorld"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %31) #6
  %32 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %28) #6
  %36 = bitcast %"class.blink::DOMWrapperWorld"* %28 to i8*
  tail call void @free(i8* %36) #6
  br label %37

37:                                               ; preds = %35, %30, %24
  %38 = add i32 %26, 1
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %21, %39
  br i1 %40, label %24, label %41

41:                                               ; preds = %37, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptValue"* @_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8*, %"class.blink::ScriptValue"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"class.blink::ScriptValue"*
  %4 = bitcast %"class.blink::ScriptValue"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast i8* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = bitcast i8* %7 to %"class.blink::TraceWrapperV8Reference.390"*
  %9 = bitcast i8* %7 to i64**
  store i64* null, i64** %9, align 8
  %10 = icmp eq %"class.blink::ScriptValue"* %3, %1
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %12, i64** %9) #6
  br label %16

16:                                               ; preds = %15, %11, %2
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.390"* dereferenceable(8) %8) #6
  %17 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %1, i64 0, i32 1, i32 1, i32 0
  %18 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %17, align 8
  %19 = getelementptr inbounds i8, i8* %0, i64 16
  %20 = bitcast i8* %19 to %"class.blink::DOMWrapperWorld"**
  store %"class.blink::DOMWrapperWorld"* %18, %"class.blink::DOMWrapperWorld"** %20, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %18, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %18, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #6
  br label %24

24:                                               ; preds = %16, %22
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %54, label %27

27:                                               ; preds = %24
  %28 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %29 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %28, i64 0, i32 1
  %30 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %29) #6
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %34, !prof !2

32:                                               ; preds = %27
  %33 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %29, i8* %33) #6
  br label %34

34:                                               ; preds = %32, %27
  %35 = phi i8* [ %33, %32 ], [ %30, %27 ]
  %36 = bitcast i8* %35 to %"class.blink::ThreadState"**
  %37 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 9
  %39 = load i8, i8* %38, align 1, !range !19
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 13
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %42, align 8
  %45 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %46, i64 0, i32 0, i32 0
  %48 = bitcast %"class.blink::MarkingVisitor"* %46 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.390"*)***
  %49 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.390"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.390"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.390"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.390"*)** %49, i64 7
  %51 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.390"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.390"*)** %50, align 8
  tail call void %51(%"class.blink::Visitor"* %47, %"class.blink::TraceWrapperV8Reference.390"* dereferenceable(8) %8) #6
  %52 = load i64, i64* %42, align 8
  %53 = add i64 %52, -1
  store i64 %53, i64* %42, align 8
  br label %54

54:                                               ; preds = %24, %34, %41
  ret %"class.blink::ScriptValue"* %3
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.399"*, %"class.blink::ScriptValue"* dereferenceable(24)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.399", %"class.WTF::Vector.399"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.399", %"class.WTF::Vector.399"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %6, align 8
  %8 = icmp ugt %"class.blink::ScriptValue"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 %10
  %12 = icmp ugt %"class.blink::ScriptValue"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.399", %"class.WTF::Vector.399"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.399"* %0, i32 %22) #6
  %23 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::ScriptValue"* %1 to i64
  %26 = ptrtoint %"class.blink::ScriptValue"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = sdiv exact i64 %27, 24
  %29 = getelementptr inbounds %"class.WTF::Vector.399", %"class.WTF::Vector.399"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.399"* %0, i32 %37) #6
  %38 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::ScriptValue"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::ScriptValue"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %41, i64 %44
  %46 = bitcast %"class.blink::ScriptValue"* %45 to i8*
  %47 = tail call %"class.blink::ScriptValue"* @_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %46, %"class.blink::ScriptValue"* dereferenceable(24) %42)
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %3, align 4
  ret void
}

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.399"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.399", %"class.WTF::Vector.399"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !20

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.399", %"class.WTF::Vector.399"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %8, align 8
  %10 = icmp eq %"class.blink::ScriptValue"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_11ScriptValueEEEmm(i64 %11) #6
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = udiv i64 %12, 24
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %14) #6
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.399"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #6
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %8, align 8
  %26 = icmp eq %"class.blink::ScriptValue"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::ScriptValue"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #6
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = udiv i64 %12, 24
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #6
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #6
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !19
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.21, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0)) #6
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #6
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.399"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.399"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %15

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.399", %"class.WTF::Vector.399"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.399", %"class.WTF::Vector.399"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.399"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.399", %"class.WTF::Vector.399"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink11ScriptValueENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::ScriptValue"* %6, %"class.blink::ScriptValue"* %10, %"class.blink::ScriptValue"* null, i1 zeroext true) #6
  %13 = bitcast %"class.blink::ScriptValue"* %6 to i8*
  %14 = mul nuw nsw i64 %9, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %13, i64 %14) #6
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %13) #6
  br label %42

15:                                               ; preds = %2
  %16 = zext i32 %1 to i64
  %17 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_11ScriptValueEEEmm(i64 %16) #6
  %18 = udiv i64 %17, 24
  %19 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %18) #6
  %20 = bitcast %"class.blink::HeapVectorBacking"* %19 to %"class.blink::ScriptValue"*
  %21 = ptrtoint %"class.blink::HeapVectorBacking"* %19 to i64
  %22 = getelementptr inbounds %"class.WTF::Vector.399", %"class.WTF::Vector.399"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %22, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.399", %"class.WTF::Vector.399"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %23, i64 %26
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink11ScriptValueENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::ScriptValue"* %23, %"class.blink::ScriptValue"* %27, %"class.blink::ScriptValue"* %20, i1 zeroext false) #6
  %28 = bitcast %"class.WTF::Vector.399"* %0 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = load i32, i32* %24, align 4
  %31 = zext i32 %30 to i64
  %32 = mul nuw nsw i64 %31, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %29, i64 %32) #6
  %33 = load i8*, i8** %28, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %33) #6
  %34 = bitcast %"class.WTF::Vector.399"* %0 to i64*
  store atomic i64 %21, i64* %34 monotonic, align 8
  %35 = trunc i64 %18 to i32
  %36 = getelementptr inbounds %"class.WTF::Vector.399", %"class.WTF::Vector.399"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %35, i32* %36, align 8
  %37 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %15
  %40 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %19, i64 0, i32 0
  %41 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %40) #6
  br label %42

42:                                               ; preds = %39, %15, %4
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11VectorMoverILb0EN5blink11ScriptValueENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::ScriptValue"*, %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq %"class.blink::ScriptValue"* %0, %1
  br i1 %5, label %74, label %6

6:                                                ; preds = %4, %70
  %7 = phi %"class.blink::ScriptValue"* [ %72, %70 ], [ %0, %4 ]
  %8 = phi %"class.blink::ScriptValue"* [ %71, %70 ], [ %2, %4 ]
  %9 = bitcast %"class.blink::ScriptValue"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.blink::ScriptValue"* %8 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %12, i64 0, i32 0
  %14 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %14, align 8
  %15 = icmp eq %"class.blink::ScriptValue"* %8, %7
  br i1 %15, label %21, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = icmp eq i64* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %17, i64** %14) #6
  br label %21

21:                                               ; preds = %20, %16, %6
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.390"* dereferenceable(8) %13) #6
  %22 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 1, i32 1, i32 0
  %23 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %23, %"class.blink::DOMWrapperWorld"** %24, align 8
  %25 = icmp eq %"class.blink::DOMWrapperWorld"* %23, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %23, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %27) #6
  br label %28

28:                                               ; preds = %21, %26
  br i1 %3, label %29, label %60

29:                                               ; preds = %28
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %60, label %32

32:                                               ; preds = %29
  %33 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %34 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %33, i64 0, i32 1
  %35 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %34) #6
  %36 = icmp eq i8* %35, null
  br i1 %36, label %37, label %39, !prof !2

37:                                               ; preds = %32
  %38 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %34, i8* %38) #6
  br label %39

39:                                               ; preds = %37, %32
  %40 = phi i8* [ %38, %37 ], [ %35, %32 ]
  %41 = bitcast i8* %40 to %"class.blink::ThreadState"**
  %42 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %42, i64 0, i32 9
  %44 = load i8, i8* %43, align 1, !range !19
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %60, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %42, i64 0, i32 13
  %48 = load i64, i64* %47, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %47, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %42, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %51 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %51, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1, i32 0
  %54 = bitcast %"class.blink::MarkingVisitor"* %51 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.390"*)***
  %55 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.390"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.390"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.390"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.390"*)** %55, i64 7
  %57 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.390"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.390"*)** %56, align 8
  tail call void %57(%"class.blink::Visitor"* %52, %"class.blink::TraceWrapperV8Reference.390"* dereferenceable(8) %53) #6
  %58 = load i64, i64* %47, align 8
  %59 = add i64 %58, -1
  store i64 %59, i64* %47, align 8
  br label %60

60:                                               ; preds = %46, %39, %29, %28
  %61 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %22, align 8
  %62 = icmp eq %"class.blink::DOMWrapperWorld"* %61, null
  br i1 %62, label %70, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %61, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %64) #6
  %65 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %63
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %61) #6
  %69 = bitcast %"class.blink::DOMWrapperWorld"* %61 to i8*
  tail call void @free(i8* %69) #6
  br label %70

70:                                               ; preds = %60, %63, %68
  %71 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 1
  %72 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 1
  %73 = icmp eq %"class.blink::ScriptValue"* %72, %1
  br i1 %73, label %74, label %6

74:                                               ; preds = %70, %4
  ret void
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN5blink17NativeValueTraitsINS_6IDLAnyEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!5 = distinct !{!5, !"_ZN5blink17NativeValueTraitsINS_6IDLAnyEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!6 = distinct !{!6, !7, !"_ZN5blink21NativeValueTraitsBaseINS_6IDLAnyEvE13ArgumentValueIJEEEDcPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateEDpT_: argument 0"}
!7 = distinct !{!7, !"_ZN5blink21NativeValueTraitsBaseINS_6IDLAnyEvE13ArgumentValueIJEEEDcPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateEDpT_"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN5blink17NativeValueTraitsINS_6IDLAnyEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!10 = distinct !{!10, !"_ZN5blink17NativeValueTraitsINS_6IDLAnyEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!11 = distinct !{!11, !12, !"_ZN5blink21NativeValueTraitsBaseINS_6IDLAnyEvE13ArgumentValueIJEEEDcPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateEDpT_: argument 0"}
!12 = distinct !{!12, !"_ZN5blink21NativeValueTraitsBaseINS_6IDLAnyEvE13ArgumentValueIJEEEDcPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateEDpT_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN5blink17NativeValueTraitsINS_9IDLObjectEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!15 = distinct !{!15, !"_ZN5blink17NativeValueTraitsINS_9IDLObjectEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN5blink17NativeValueTraitsINS_9IDLObjectEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!18 = distinct !{!18, !"_ZN5blink17NativeValueTraitsINS_9IDLObjectEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!19 = !{i8 0, i8 2}
!20 = !{!"branch_weights", i32 2000, i32 1}
