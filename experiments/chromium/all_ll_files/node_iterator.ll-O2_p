; ModuleID = '../../third_party/blink/renderer/core/dom/node_iterator.cc'
source_filename = "../../third_party/blink/renderer/core/dom/node_iterator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.57" }
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl.60" }
%"struct.std::__1::__cxx_atomic_impl.60" = type { %"struct.std::__1::__cxx_atomic_base_impl.61" }
%"struct.std::__1::__cxx_atomic_base_impl.61" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type opaque
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::NodeIterator::NodePointer" = type <{ %"class.blink::Member", i8, [7 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.6", %"class.blink::Member.8", %"class.blink::Member.0", %"class.blink::Member.10", %"class.blink::Member.10", %"class.blink::Member.26", %"class.blink::Member.28", %"class.blink::Member.30", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.35", %"class.blink::HeapVector.37" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.53", %"class.WTF::Vector.53", i8, i32, %"class.blink::Member.63", %"class.blink::Member.65", %"class.blink::Member.67", %"class.blink::Member.69", %"class.blink::Member.71", %"class.blink::Member.73", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.76", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.82", %"class.blink::Member.84", %"class.blink::Member.43", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.87", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.21", %"class.blink::Member.102", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::UserActionElementSet", %"class.blink::Member.111", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.118", i16, i8, %"class.blink::Member.125", %"class.blink::Member.127", %"class.blink::Member.129", %"class.blink::Member.131", %"class.blink::TextLinkColors", %"class.blink::Member.133", i8, [7 x i8], %"class.blink::HeapHashMap.135", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.21", %"class.WTF::Vector.142", %"class.blink::Member.147", %"class.blink::Member.149", i8, %"class.blink::Member.21", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.151", %"class.blink::HeapVector.153", %"class.std::__1::unique_ptr.161", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.167", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.179", %"class.WTF::Vector.181", i8, i8, %"class.std::__1::unique_ptr.186", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.192", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.200", i8, i32, %"class.blink::Member.202", %"class.blink::Member.204", %"class.blink::Member.206", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.208", %"class.WTF::HashMap.210", %"class.blink::Member.215", %"class.blink::Member.217", %"class.blink::Member.219", %"class.blink::Member.221", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.223", i8, i32, %"class.blink::Member.230", %"class.blink::Member.232", i32, %"class.blink::Member.234", %"class.blink::Member.236", %"class.blink::Member.238", %"class.std::__1::unique_ptr.240", i64, %"class.std::__1::unique_ptr.246", i32, i32, %"class.blink::Member.252", %"class.blink::Member.254", %"class.blink::Member.256", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.258", %"class.WTF::Vector.260", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.265", %"class.blink::Member.272", %"class.std::__1::unique_ptr.274", %"class.blink::Member.280", i8, i8, %"class.WTF::String", %"class.blink::Member.282", i8, [7 x i8], %"class.blink::HeapHashMap.284", %"class.blink::HeapObserverSet", %"class.blink::Member.298", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.300", i32, i8, i8, %"class.blink::WeakMember.302", %"class.blink::Member.303" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.46" }
%"class.blink::HeapHashMap.46" = type { %"class.WTF::HashMap.49" }
%"class.WTF::HashMap.49" = type { %"class.WTF::HashTable.50" }
%"class.WTF::HashTable.50" = type <{ %"struct.WTF::KeyValuePair.52"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.52" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.53" = type { %"class.WTF::VectorBuffer.54" }
%"class.WTF::VectorBuffer.54" = type { %"class.WTF::VectorBufferBase.55" }
%"class.WTF::VectorBufferBase.55" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.56 }
%class.scoped_refptr.56 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.57" }
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.67" = type { %"class.blink::MemberBase.68" }
%"class.blink::MemberBase.68" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.82" = type { %"class.blink::MemberBase.83" }
%"class.blink::MemberBase.83" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.86 }
%class.scoped_refptr.86 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.87" = type { %"class.WTF::VectorBuffer.88" }
%"class.WTF::VectorBuffer.88" = type { %"class.WTF::VectorBufferBase.89" }
%"class.WTF::VectorBufferBase.89" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.90 }
%class.scoped_refptr.90 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.104" }
%"class.blink::HeapHashMap.104" = type { %"class.WTF::HashMap.107" }
%"class.WTF::HashMap.107" = type { %"class.WTF::HashTable.108" }
%"class.WTF::HashTable.108" = type <{ %"struct.WTF::KeyValuePair.110"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.110" = type opaque
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.115" }
%"class.WTF::HashTable.115" = type <{ %"class.blink::WeakMember.117"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.117" = type opaque
%"class.blink::HeapHashSet.118" = type { %"class.WTF::HashSet.121" }
%"class.WTF::HashSet.121" = type { %"class.WTF::HashTable.122" }
%"class.WTF::HashTable.122" = type <{ %"class.blink::WeakMember.124"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.124" = type opaque
%"class.blink::Member.125" = type { %"class.blink::MemberBase.126" }
%"class.blink::MemberBase.126" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.127" = type { %"class.blink::MemberBase.128" }
%"class.blink::MemberBase.128" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.129" = type { %"class.blink::MemberBase.130" }
%"class.blink::MemberBase.130" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.131" = type { %"class.blink::MemberBase.132" }
%"class.blink::MemberBase.132" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.133" = type { %"class.blink::MemberBase.134" }
%"class.blink::MemberBase.134" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.135" = type { %"class.WTF::HashMap.138" }
%"class.WTF::HashMap.138" = type { %"class.WTF::HashTable.139" }
%"class.WTF::HashTable.139" = type <{ %"struct.WTF::KeyValuePair.141"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.141" = type opaque
%"class.WTF::Vector.142" = type { %"class.WTF::VectorBuffer.143" }
%"class.WTF::VectorBuffer.143" = type { %"class.WTF::VectorBufferBase.144" }
%"class.WTF::VectorBufferBase.144" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.147" = type { %"class.blink::MemberBase.148" }
%"class.blink::MemberBase.148" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.149" = type { %"class.blink::MemberBase.150" }
%"class.blink::MemberBase.150" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.151" = type { %"class.blink::MemberBase.152" }
%"class.blink::MemberBase.152" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.153" = type { %"class.WTF::Vector.156" }
%"class.WTF::Vector.156" = type { %"class.WTF::VectorBuffer.157" }
%"class.WTF::VectorBuffer.157" = type { %"class.WTF::VectorBufferBase.158" }
%"class.WTF::VectorBufferBase.158" = type { %"class.blink::Member.159"*, i32, i32 }
%"class.blink::Member.159" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.167" = type { %"class.WTF::HashSet.170" }
%"class.WTF::HashSet.170" = type { %"class.WTF::HashTable.171" }
%"class.WTF::HashTable.171" = type <{ %"class.blink::WeakMember.173"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.173" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.174", i32, [4 x i8] }>
%"class.WTF::Vector.174" = type { %"class.WTF::VectorBuffer.175" }
%"class.WTF::VectorBuffer.175" = type { %"class.WTF::VectorBufferBase.176" }
%"class.WTF::VectorBufferBase.176" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type opaque
%"class.blink::Member.179" = type { %"class.blink::MemberBase.180" }
%"class.blink::MemberBase.180" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.181" = type { %"class.WTF::VectorBuffer.182" }
%"class.WTF::VectorBuffer.182" = type { %"class.WTF::VectorBufferBase.183" }
%"class.WTF::VectorBufferBase.183" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::HeapVector.192" = type { %"class.WTF::Vector.195" }
%"class.WTF::Vector.195" = type { %"class.WTF::VectorBuffer.196" }
%"class.WTF::VectorBuffer.196" = type { %"class.WTF::VectorBufferBase.197" }
%"class.WTF::VectorBufferBase.197" = type { %"class.blink::Member.198"*, i32, i32 }
%"class.blink::Member.198" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.8" }
%"class.blink::Member.200" = type { %"class.blink::MemberBase.201" }
%"class.blink::MemberBase.201" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.202" = type { %"class.blink::MemberBase.203" }
%"class.blink::MemberBase.203" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.204" = type { %"class.blink::MemberBase.205" }
%"class.blink::MemberBase.205" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.206" = type { %"class.blink::MemberBase.207" }
%"class.blink::MemberBase.207" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.208" = type { %"class.blink::MemberBase.209" }
%"class.blink::MemberBase.209" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.210" = type { %"class.WTF::HashTable.211" }
%"class.WTF::HashTable.211" = type <{ %"struct.WTF::KeyValuePair.214"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.214" = type opaque
%"class.blink::Member.215" = type { %"class.blink::MemberBase.216" }
%"class.blink::MemberBase.216" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.217" = type { %"class.blink::MemberBase.218" }
%"class.blink::MemberBase.218" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.219" = type { %"class.blink::MemberBase.220" }
%"class.blink::MemberBase.220" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.221" = type { %"class.blink::MemberBase.222" }
%"class.blink::MemberBase.222" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.93, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.93 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.94" }>
%"class.base::RefCountedThreadSafe.94" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.95 }
%class.scoped_refptr.95 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.96", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.96" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.97" }
%"struct.std::__1::atomic.97" = type { %"struct.std::__1::__atomic_base.98" }
%"struct.std::__1::__atomic_base.98" = type { %"struct.std::__1::__atomic_base.99" }
%"struct.std::__1::__atomic_base.99" = type { %"struct.std::__1::__cxx_atomic_impl.100" }
%"struct.std::__1::__cxx_atomic_impl.100" = type { %"struct.std::__1::__cxx_atomic_base_impl.101" }
%"struct.std::__1::__cxx_atomic_base_impl.101" = type { i8 }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.9" }
%"class.blink::HeapHashSet.223" = type { %"class.WTF::HashSet.226" }
%"class.WTF::HashSet.226" = type { %"class.WTF::HashTable.227" }
%"class.WTF::HashTable.227" = type <{ %"class.blink::Member.229"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.229" = type opaque
%"class.blink::Member.230" = type { %"class.blink::MemberBase.231" }
%"class.blink::MemberBase.231" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.232" = type { %"class.blink::MemberBase.233" }
%"class.blink::MemberBase.233" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.234" = type { %"class.blink::MemberBase.235" }
%"class.blink::MemberBase.235" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.236" = type { %"class.blink::MemberBase.237" }
%"class.blink::MemberBase.237" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.238" = type { %"class.blink::MemberBase.239" }
%"class.blink::MemberBase.239" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.252" = type { %"class.blink::MemberBase.253" }
%"class.blink::MemberBase.253" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.254" = type { %"class.blink::MemberBase.255" }
%"class.blink::MemberBase.255" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.256" = type { %"class.blink::MemberBase.257" }
%"class.blink::MemberBase.257" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.258" = type { %"class.blink::MemberBase.259" }
%"class.blink::MemberBase.259" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.260" = type { %"class.WTF::VectorBuffer.261" }
%"class.WTF::VectorBuffer.261" = type { %"class.WTF::VectorBufferBase.262" }
%"class.WTF::VectorBufferBase.262" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.265" = type { %"class.WTF::HashMap.268" }
%"class.WTF::HashMap.268" = type { %"class.WTF::HashTable.269" }
%"class.WTF::HashTable.269" = type <{ %"struct.WTF::KeyValuePair.271"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.271" = type opaque
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.280" = type { %"class.blink::MemberBase.281" }
%"class.blink::MemberBase.281" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member.282" = type { %"class.blink::MemberBase.283" }
%"class.blink::MemberBase.283" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.284" = type { %"class.WTF::HashMap.287" }
%"class.WTF::HashMap.287" = type { %"class.WTF::HashTable.288" }
%"class.WTF::HashTable.288" = type <{ %"struct.WTF::KeyValuePair.290"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.290" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.291" }
%"class.blink::HeapHashSet.291" = type { %"class.WTF::HashSet.294" }
%"class.WTF::HashSet.294" = type { %"class.WTF::HashTable.295" }
%"class.WTF::HashTable.295" = type <{ %"class.blink::WeakMember.297"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.297" = type opaque
%"class.blink::Member.298" = type { %"class.blink::MemberBase.299" }
%"class.blink::MemberBase.299" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.300" = type { %"class.blink::MemberBase.301" }
%"class.blink::MemberBase.301" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.8", %"class.blink::HeapHashSet.307", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.314", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.307" = type { %"class.WTF::HashSet.310" }
%"class.WTF::HashSet.310" = type { %"class.WTF::HashTable.311" }
%"class.WTF::HashTable.311" = type <{ %"class.blink::Member.313"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.313" = type opaque
%"class.blink::HeapTaskRunnerTimer.314" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.315", { i64, i64 } }
%"class.blink::WeakMember.315" = type { %"class.blink::MemberBase.301" }
%"class.blink::WeakMember.302" = type { %"class.blink::MemberBase" }
%"class.blink::Member.303" = type { %"class.blink::MemberBase.304" }
%"class.blink::MemberBase.304" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector" }
%"class.blink::Member.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.28" = type { %"class.blink::MemberBase.29" }
%"class.blink::MemberBase.29" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.32" }
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::HeapHashMap.34"* }
%"class.blink::HeapHashMap.34" = type opaque
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.37" = type { %"class.WTF::Vector.40" }
%"class.WTF::Vector.40" = type { %"class.WTF::VectorBuffer.41" }
%"class.WTF::VectorBuffer.41" = type { %"class.WTF::VectorBufferBase.42" }
%"class.WTF::VectorBufferBase.42" = type { %"class.blink::Member.43"*, i32, i32 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::NodeIterator" = type { %"class.blink::ScriptWrappable", %"class.blink::NodeIteratorBase.base", [7 x i8], %"class.blink::NodeIterator::NodePointer", %"class.blink::NodeIterator::NodePointer" }
%"class.blink::NodeIteratorBase.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::Member", i32, [4 x i8], %"class.blink::Member.316", i8 }>
%"class.blink::Member.316" = type { %"class.blink::MemberBase.317" }
%"class.blink::MemberBase.317" = type { %"class.blink::V8NodeFilter"* }
%"class.blink::V8NodeFilter" = type { %"class.blink::CallbackInterfaceBase" }
%"class.blink::CallbackInterfaceBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", i8, %"class.blink::Member.320", %"class.blink::Member.320" }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.324, %"class.blink::Member.325", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.324 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.325" = type { %"class.blink::MemberBase.326" }
%"class.blink::MemberBase.326" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.327", i32, [4 x i8], %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.463", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.474", %"class.std::__1::unique_ptr.480", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.492", %"class.std::__1::unique_ptr.498", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.505", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.330", %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.342", %"class.std::__1::unique_ptr.348", %"class.std::__1::unique_ptr.354", %"class.std::__1::unique_ptr.360", %"class.std::__1::unique_ptr.371", %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.385", %"class.std::__1::unique_ptr.392", %"class.std::__1::unique_ptr.399", %"class.std::__1::unique_ptr.399", %"class.std::__1::unique_ptr.406", %"class.std::__1::unique_ptr.413", %"class.std::__1::unique_ptr.420", %"class.std::__1::unique_ptr.443", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.363" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.363" = type { %"struct.std::__1::__atomic_base.364" }
%"struct.std::__1::__atomic_base.364" = type { %"struct.std::__1::__atomic_base.365" }
%"struct.std::__1::__atomic_base.365" = type { %"struct.std::__1::__cxx_atomic_impl.366" }
%"struct.std::__1::__cxx_atomic_impl.366" = type { %"struct.std::__1::__cxx_atomic_base_impl.367" }
%"struct.std::__1::__cxx_atomic_base_impl.367" = type { i64 }
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"class.blink::Worklist.374"* }
%"class.blink::Worklist.374" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.363" }
%"class.std::__1::unique_ptr.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.blink::Worklist.381"* }
%"class.blink::Worklist.381" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.363" }
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.blink::Worklist.388"* }
%"class.blink::Worklist.388" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.363" }
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"class.blink::Worklist.395"* }
%"class.blink::Worklist.395" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.363" }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::Worklist.402"* }
%"class.blink::Worklist.402" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.363" }
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.blink::Worklist.409"* }
%"class.blink::Worklist.409" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.363" }
%"class.std::__1::unique_ptr.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.blink::Worklist.416"* }
%"class.blink::Worklist.416" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.363" }
%"class.std::__1::unique_ptr.420" = type { %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.423", %"class.std::__1::__compressed_pair.430", %"class.std::__1::__compressed_pair.435", %"class.std::__1::__compressed_pair.437", [4 x i8] }>
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425", %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { i64 }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { float }
%"class.std::__1::unique_ptr.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.446", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.455" }
%"class.WTF::Vector.455" = type { %"class.WTF::VectorBuffer.456" }
%"class.WTF::VectorBuffer.456" = type { %"class.WTF::VectorBufferBase.457" }
%"class.WTF::VectorBufferBase.457" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.471" }
%"class.WTF::VectorBuffer.471" = type { %"class.WTF::VectorBufferBase.472" }
%"class.WTF::VectorBufferBase.472" = type { %"struct.std::__1::pair.473"*, i32, i32 }
%"struct.std::__1::pair.473" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.486" }
%"class.std::__1::unique_ptr.486" = type { %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.374"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.381"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.388"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.395"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.402"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.509" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.498" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.504 }
%class.scoped_refptr.504 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.505" = type { %"struct.std::__1::__atomic_base.506" }
%"struct.std::__1::__atomic_base.506" = type { %"struct.std::__1::__cxx_atomic_impl.507" }
%"struct.std::__1::__cxx_atomic_impl.507" = type { %"struct.std::__1::__cxx_atomic_base_impl.508" }
%"struct.std::__1::__cxx_atomic_base_impl.508" = type { i8 }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::NodeIteratorBase" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::Member", i32, [4 x i8], %"class.blink::Member.316", i8, [7 x i8] }>
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.514" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.514" = type { %"class.v8::TracedReference.515" }
%"class.v8::TracedReference.515" = type { %"class.v8::BasicTracedReference.516" }
%"class.v8::BasicTracedReference.516" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::Value" = type { i8 }

$_ZN5blink12NodeIteratorD2Ev = comdat any

$_ZN5blink12NodeIteratorD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink12NodeIterator18GetWrapperTypeInfoEv = comdat any

$_ZThn16_N5blink12NodeIteratorD1Ev = comdat any

$_ZThn16_N5blink12NodeIteratorD0Ev = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

@_ZTVN5blink12NodeIteratorE = hidden unnamed_addr constant { [11 x i8*], [5 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::NodeIterator"*)* @_ZN5blink12NodeIteratorD2Ev to i8*), i8* bitcast (void (%"class.blink::NodeIterator"*)* @_ZN5blink12NodeIteratorD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::NodeIterator"*, %"class.blink::Visitor"*)* @_ZNK5blink12NodeIterator5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::NodeIterator"*)* @_ZNK5blink12NodeIterator18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)], [5 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.blink::NodeIterator"*, %"class.blink::Visitor"*)* @_ZThn16_NK5blink12NodeIterator5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::NodeIterator"*)* @_ZThn16_N5blink12NodeIteratorD1Ev to i8*), i8* bitcast (void (%"class.blink::NodeIterator"*)* @_ZThn16_N5blink12NodeIteratorD0Ev to i8*)] }, align 8
@_ZTVN5blink15ScriptWrappableE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink12NodeIterator18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8

@_ZN5blink12NodeIterator11NodePointerC1Ev = hidden unnamed_addr alias void (%"class.blink::NodeIterator::NodePointer"*), void (%"class.blink::NodeIterator::NodePointer"*)* @_ZN5blink12NodeIterator11NodePointerC2Ev
@_ZN5blink12NodeIterator11NodePointerC1EPNS_4NodeEb = hidden unnamed_addr alias void (%"class.blink::NodeIterator::NodePointer"*, %"class.blink::Node"*, i1), void (%"class.blink::NodeIterator::NodePointer"*, %"class.blink::Node"*, i1)* @_ZN5blink12NodeIterator11NodePointerC2EPNS_4NodeEb
@_ZN5blink12NodeIteratorC1EPNS_4NodeEjPNS_12V8NodeFilterE = hidden unnamed_addr alias void (%"class.blink::NodeIterator"*, %"class.blink::Node"*, i32, %"class.blink::V8NodeFilter"*), void (%"class.blink::NodeIterator"*, %"class.blink::Node"*, i32, %"class.blink::V8NodeFilter"*)* @_ZN5blink12NodeIteratorC2EPNS_4NodeEjPNS_12V8NodeFilterE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink12NodeIterator11NodePointerC2Ev(%"class.blink::NodeIterator::NodePointer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NodeIterator::NodePointer", %"class.blink::NodeIterator::NodePointer"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* null, %"class.blink::Node"** %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink12NodeIterator11NodePointerC2EPNS_4NodeEb(%"class.blink::NodeIterator::NodePointer"* nocapture, %"class.blink::Node"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"class.blink::NodeIterator::NodePointer", %"class.blink::NodeIterator::NodePointer"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::NodeIterator::NodePointer", %"class.blink::NodeIterator::NodePointer"* %0, i64 0, i32 1
  store i8 %4, i8* %6, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink12NodeIterator11NodePointer5ClearEv(%"class.blink::NodeIterator::NodePointer"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.blink::NodeIterator::NodePointer"* %0 to i64*
  store atomic i64 0, i64* %2 monotonic, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12NodeIterator11NodePointer10MoveToNextEPNS_4NodeE(%"class.blink::NodeIterator::NodePointer"* nocapture, %"class.blink::Node"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::NodeIterator::NodePointer", %"class.blink::NodeIterator::NodePointer"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %42, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::NodeIterator::NodePointer", %"class.blink::NodeIterator::NodePointer"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store i8 0, i8* %7, align 8
  br label %42

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1
  %18 = bitcast %"class.blink::Node"* %17 to %"class.blink::Node"**
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %20 = icmp eq %"class.blink::Node"* %19, null
  br i1 %20, label %21, label %29

21:                                               ; preds = %16, %11
  %22 = icmp eq %"class.blink::Node"* %4, %1
  br i1 %22, label %29, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 5, i32 0, i32 0
  %25 = load %"class.blink::Node"*, %"class.blink::Node"** %24, align 8
  %26 = icmp eq %"class.blink::Node"* %25, null
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %4, %"class.blink::Node"* %1) #6
  br label %29

29:                                               ; preds = %16, %21, %23, %27
  %30 = phi %"class.blink::Node"* [ %28, %27 ], [ null, %21 ], [ %25, %23 ], [ %19, %16 ]
  %31 = ptrtoint %"class.blink::Node"* %30 to i64
  %32 = bitcast %"class.blink::NodeIterator::NodePointer"* %0 to i64*
  store atomic i64 %31, i64* %32 monotonic, align 8
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::Node"* %30 to i8*
  %37 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %36) #6
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  br label %39

39:                                               ; preds = %29, %35
  %40 = phi %"class.blink::Node"* [ %30, %29 ], [ %38, %35 ]
  %41 = icmp ne %"class.blink::Node"* %40, null
  br label %42

42:                                               ; preds = %2, %39, %10
  %43 = phi i1 [ true, %10 ], [ %41, %39 ], [ false, %2 ]
  ret i1 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12NodeIterator11NodePointer14MoveToPreviousEPNS_4NodeE(%"class.blink::NodeIterator::NodePointer"* nocapture, %"class.blink::Node"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::NodeIterator::NodePointer", %"class.blink::NodeIterator::NodePointer"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::NodeIterator::NodePointer", %"class.blink::NodeIterator::NodePointer"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i8 1, i8* %7, align 8
  br label %24

11:                                               ; preds = %6
  %12 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %4, %"class.blink::Node"* %1) #6
  %13 = ptrtoint %"class.blink::Node"* %12 to i64
  %14 = bitcast %"class.blink::NodeIterator::NodePointer"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.blink::Node"* %12 to i8*
  %19 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %18) #6
  %20 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  br label %21

21:                                               ; preds = %11, %17
  %22 = phi %"class.blink::Node"* [ %12, %11 ], [ %20, %17 ]
  %23 = icmp ne %"class.blink::Node"* %22, null
  br label %24

24:                                               ; preds = %2, %21, %10
  %25 = phi i1 [ %23, %21 ], [ true, %10 ], [ false, %2 ]
  ret i1 %25
}

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12NodeIteratorC2EPNS_4NodeEjPNS_12V8NodeFilterE(%"class.blink::NodeIterator"*, %"class.blink::Node"*, i32, %"class.blink::V8NodeFilter"*) unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %6, align 8
  %7 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 1
  %8 = bitcast %"class.blink::NodeIteratorBase.base"* %7 to %"class.blink::NodeIteratorBase"*
  tail call void @_ZN5blink16NodeIteratorBaseC2EPNS_4NodeEjPNS_12V8NodeFilterE(%"class.blink::NodeIteratorBase"* %8, %"class.blink::Node"* %1, i32 %2, %"class.blink::V8NodeFilter"* %3) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [5 x i8*] }, { [11 x i8*], [5 x i8*] }* @_ZTVN5blink12NodeIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %9 = getelementptr inbounds %"class.blink::NodeIteratorBase.base", %"class.blink::NodeIteratorBase.base"* %7, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [5 x i8*] }, { [11 x i8*], [5 x i8*] }* @_ZTVN5blink12NodeIteratorE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %11, %"class.blink::Node"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 3, i32 1
  store i8 1, i8* %13, align 8
  %14 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store %"class.blink::Node"* null, %"class.blink::Node"** %14, align 8
  %15 = bitcast %"class.blink::Node"* %11 to i1 (%"class.blink::Node"*)***
  %16 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %16, i64 40
  %18 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::Node"* %11) #6
  br i1 %19, label %26, label %20

20:                                               ; preds = %4
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %21, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %23, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  tail call void @_ZN5blink8Document18AttachNodeIteratorEPNS_12NodeIteratorE(%"class.blink::Document"* %25, %"class.blink::NodeIterator"* %0) #6
  br label %26

26:                                               ; preds = %20, %4
  ret void
}

declare void @_ZN5blink16NodeIteratorBaseC2EPNS_4NodeEjPNS_12V8NodeFilterE(%"class.blink::NodeIteratorBase"*, %"class.blink::Node"*, i32, %"class.blink::V8NodeFilter"*) unnamed_addr #3

declare void @_ZN5blink8Document18AttachNodeIteratorEPNS_12NodeIteratorE(%"class.blink::Document"*, %"class.blink::NodeIterator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink12NodeIterator8nextNodeERNS_14ExceptionStateE(%"class.blink::NodeIterator"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 4
  %5 = bitcast %"class.blink::NodeIterator::NodePointer"* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.blink::NodeIterator::NodePointer"* %4 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = inttoptr i64 %6 to i8*
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #6
  br label %13

13:                                               ; preds = %2, %10
  %14 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 3, i32 1
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 4, i32 1
  store i8 %15, i8* %16, align 8
  %17 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 1
  %18 = bitcast %"class.blink::NodeIteratorBase.base"* %17 to %"class.blink::NodeIteratorBase"*
  %19 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::NodeIterator::NodePointer", %"class.blink::NodeIterator::NodePointer"* %4, i64 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %1, i64 0, i32 4
  br label %22

22:                                               ; preds = %65, %13
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  %24 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %25 = icmp eq %"class.blink::Node"* %24, null
  br i1 %25, label %76, label %26

26:                                               ; preds = %22
  %27 = load i8, i8* %16, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %26
  store i8 0, i8* %16, align 8
  br label %60

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 1
  %37 = bitcast %"class.blink::Node"* %36 to %"class.blink::Node"**
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = icmp eq %"class.blink::Node"* %38, null
  br i1 %39, label %40, label %48

40:                                               ; preds = %35, %30
  %41 = icmp eq %"class.blink::Node"* %24, %23
  br i1 %41, label %48, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 0, i32 5, i32 0, i32 0
  %44 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  %45 = icmp eq %"class.blink::Node"* %44, null
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  %47 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %24, %"class.blink::Node"* %23) #6
  br label %48

48:                                               ; preds = %46, %42, %40, %35
  %49 = phi %"class.blink::Node"* [ %47, %46 ], [ null, %40 ], [ %44, %42 ], [ %38, %35 ]
  %50 = ptrtoint %"class.blink::Node"* %49 to i64
  store atomic i64 %50, i64* %7 monotonic, align 8
  %51 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %48
  %54 = bitcast %"class.blink::Node"* %49 to i8*
  %55 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %54) #6
  %56 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  br label %57

57:                                               ; preds = %48, %53
  %58 = phi %"class.blink::Node"* [ %49, %48 ], [ %56, %53 ]
  %59 = icmp eq %"class.blink::Node"* %58, null
  br i1 %59, label %76, label %60

60:                                               ; preds = %57, %29
  %61 = phi %"class.blink::Node"* [ %58, %57 ], [ %24, %29 ]
  %62 = tail call i32 @_ZN5blink16NodeIteratorBase10AcceptNodeEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::NodeIteratorBase"* %18, %"class.blink::Node"* %61, %"class.blink::ExceptionState"* dereferenceable(72) %1) #6
  %63 = load i32, i32* %21, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %76

65:                                               ; preds = %60
  %66 = icmp eq i32 %62, 1
  br i1 %66, label %67, label %22

67:                                               ; preds = %65
  %68 = load i64, i64* %7, align 8
  store atomic i64 %68, i64* %5 monotonic, align 8
  %69 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %67
  %72 = inttoptr i64 %68 to i8*
  %73 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %72) #6
  br label %74

74:                                               ; preds = %67, %71
  %75 = load i8, i8* %16, align 8, !range !2
  store i8 %75, i8* %14, align 8
  br label %76

76:                                               ; preds = %57, %60, %22, %74
  %77 = phi %"class.blink::Node"* [ %61, %74 ], [ null, %22 ], [ null, %60 ], [ null, %57 ]
  store atomic i64 0, i64* %7 monotonic, align 8
  ret %"class.blink::Node"* %77
}

declare i32 @_ZN5blink16NodeIteratorBase10AcceptNodeEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::NodeIteratorBase"*, %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink12NodeIterator12previousNodeERNS_14ExceptionStateE(%"class.blink::NodeIterator"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 4
  %5 = bitcast %"class.blink::NodeIterator::NodePointer"* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.blink::NodeIterator::NodePointer"* %4 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = inttoptr i64 %6 to i8*
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #6
  br label %13

13:                                               ; preds = %2, %10
  %14 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 3, i32 1
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 4, i32 1
  store i8 %15, i8* %16, align 8
  %17 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 1
  %18 = bitcast %"class.blink::NodeIteratorBase.base"* %17 to %"class.blink::NodeIteratorBase"*
  %19 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::NodeIterator::NodePointer", %"class.blink::NodeIterator::NodePointer"* %4, i64 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %1, i64 0, i32 4
  br label %22

22:                                               ; preds = %47, %13
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  %24 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %25 = icmp eq %"class.blink::Node"* %24, null
  br i1 %25, label %58, label %26

26:                                               ; preds = %22
  %27 = load i8, i8* %16, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  store i8 1, i8* %16, align 8
  br label %42

30:                                               ; preds = %26
  %31 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %24, %"class.blink::Node"* %23) #6
  %32 = ptrtoint %"class.blink::Node"* %31 to i64
  store atomic i64 %32, i64* %7 monotonic, align 8
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.blink::Node"* %31 to i8*
  %37 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %36) #6
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  br label %39

39:                                               ; preds = %30, %35
  %40 = phi %"class.blink::Node"* [ %31, %30 ], [ %38, %35 ]
  %41 = icmp eq %"class.blink::Node"* %40, null
  br i1 %41, label %58, label %42

42:                                               ; preds = %39, %29
  %43 = phi %"class.blink::Node"* [ %40, %39 ], [ %24, %29 ]
  %44 = tail call i32 @_ZN5blink16NodeIteratorBase10AcceptNodeEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::NodeIteratorBase"* %18, %"class.blink::Node"* %43, %"class.blink::ExceptionState"* dereferenceable(72) %1) #6
  %45 = load i32, i32* %21, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = icmp eq i32 %44, 1
  br i1 %48, label %49, label %22

49:                                               ; preds = %47
  %50 = load i64, i64* %7, align 8
  store atomic i64 %50, i64* %5 monotonic, align 8
  %51 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %49
  %54 = inttoptr i64 %50 to i8*
  %55 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %54) #6
  br label %56

56:                                               ; preds = %49, %53
  %57 = load i8, i8* %16, align 8, !range !2
  store i8 %57, i8* %14, align 8
  br label %58

58:                                               ; preds = %42, %39, %22, %56
  %59 = phi %"class.blink::Node"* [ %43, %56 ], [ null, %22 ], [ null, %39 ], [ null, %42 ]
  store atomic i64 0, i64* %7 monotonic, align 8
  ret %"class.blink::Node"* %59
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink12NodeIterator6detachEv(%"class.blink::NodeIterator"* nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12NodeIterator17NodeWillBeRemovedERNS_4NodeE(%"class.blink::NodeIterator"* nocapture, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 4
  tail call void @_ZNK5blink12NodeIterator20UpdateForNodeRemovalERNS_4NodeERNS0_11NodePointerE(%"class.blink::NodeIterator"* %0, %"class.blink::Node"* dereferenceable(64) %1, %"class.blink::NodeIterator::NodePointer"* dereferenceable(16) %3)
  %4 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 3
  tail call void @_ZNK5blink12NodeIterator20UpdateForNodeRemovalERNS_4NodeERNS0_11NodePointerE(%"class.blink::NodeIterator"* %0, %"class.blink::Node"* dereferenceable(64) %1, %"class.blink::NodeIterator::NodePointer"* dereferenceable(16) %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12NodeIterator20UpdateForNodeRemovalERNS_4NodeERNS0_11NodePointerE(%"class.blink::NodeIterator"* nocapture readonly, %"class.blink::Node"* dereferenceable(64), %"class.blink::NodeIterator::NodePointer"* nocapture dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = tail call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* %1, %"class.blink::Node"* %5) #6
  br i1 %6, label %7, label %164

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::NodeIterator::NodePointer", %"class.blink::NodeIterator::NodePointer"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, %1
  %11 = icmp eq %"class.blink::Node"* %9, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %7
  %13 = tail call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* nonnull %9, %"class.blink::Node"* %1) #6
  br label %14

14:                                               ; preds = %7, %12
  %15 = phi i1 [ false, %7 ], [ %13, %12 ]
  %16 = or i1 %10, %15
  br i1 %16, label %17, label %164

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.blink::NodeIterator::NodePointer", %"class.blink::NodeIterator::NodePointer"* %2, i64 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  br i1 %20, label %102, label %22

22:                                               ; preds = %17
  %23 = icmp eq %"class.blink::Node"* %1, null
  br i1 %23, label %34, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1
  %31 = bitcast %"class.blink::Node"* %30 to %"class.blink::Node"**
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %31, align 8
  %33 = icmp eq %"class.blink::Node"* %32, null
  br i1 %33, label %34, label %43

34:                                               ; preds = %29, %24, %22
  %35 = icmp eq %"class.blink::Node"* %21, %1
  br i1 %35, label %80, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 5, i32 0, i32 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = icmp eq %"class.blink::Node"* %38, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %36
  %41 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %1, %"class.blink::Node"* %21) #6
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %29, %36, %40
  %44 = phi %"class.blink::Node"* [ %38, %36 ], [ %32, %29 ], [ %41, %40 ]
  br label %47

45:                                               ; preds = %40
  %46 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  br label %80

47:                                               ; preds = %43, %69
  %48 = phi %"class.blink::Node"* [ %70, %69 ], [ %44, %43 ]
  %49 = tail call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* nonnull %48, %"class.blink::Node"* %1) #6
  br i1 %49, label %50, label %72

50:                                               ; preds = %47
  %51 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %48, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %48, i64 1
  %58 = bitcast %"class.blink::Node"* %57 to %"class.blink::Node"**
  %59 = load %"class.blink::Node"*, %"class.blink::Node"** %58, align 8
  %60 = icmp eq %"class.blink::Node"* %59, null
  br i1 %60, label %61, label %69

61:                                               ; preds = %56, %50
  %62 = icmp eq %"class.blink::Node"* %48, %51
  br i1 %62, label %164, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %48, i64 0, i32 5, i32 0, i32 0
  %65 = load %"class.blink::Node"*, %"class.blink::Node"** %64, align 8
  %66 = icmp eq %"class.blink::Node"* %65, null
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  %68 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %48, %"class.blink::Node"* %51) #6
  br label %69

69:                                               ; preds = %56, %63, %67
  %70 = phi %"class.blink::Node"* [ %68, %67 ], [ %65, %63 ], [ %59, %56 ]
  %71 = icmp eq %"class.blink::Node"* %70, null
  br i1 %71, label %164, label %47

72:                                               ; preds = %47
  %73 = ptrtoint %"class.blink::Node"* %48 to i64
  %74 = bitcast %"class.blink::NodeIterator::NodePointer"* %2 to i64*
  store atomic i64 %73, i64* %74 monotonic, align 8
  %75 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %164, label %77

77:                                               ; preds = %72
  %78 = bitcast %"class.blink::Node"* %48 to i8*
  %79 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %78) #6
  br label %164

80:                                               ; preds = %45, %34
  %81 = phi %"class.blink::Node"* [ %46, %45 ], [ %1, %34 ]
  %82 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %1, %"class.blink::Node"* %81) #6
  %83 = icmp eq %"class.blink::Node"* %82, null
  br i1 %83, label %164, label %84

84:                                               ; preds = %80
  br i1 %15, label %85, label %92

85:                                               ; preds = %84, %88
  %86 = phi %"class.blink::Node"* [ %90, %88 ], [ %82, %84 ]
  %87 = tail call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* nonnull %86, %"class.blink::Node"* %1) #6
  br i1 %87, label %88, label %92

88:                                               ; preds = %85
  %89 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %90 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %86, %"class.blink::Node"* %89) #6
  %91 = icmp eq %"class.blink::Node"* %90, null
  br i1 %91, label %164, label %85

92:                                               ; preds = %85, %84
  %93 = phi %"class.blink::Node"* [ %82, %84 ], [ %86, %85 ]
  %94 = ptrtoint %"class.blink::Node"* %93 to i64
  %95 = bitcast %"class.blink::NodeIterator::NodePointer"* %2 to i64*
  store atomic i64 %94, i64* %95 monotonic, align 8
  %96 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %92
  %99 = bitcast %"class.blink::Node"* %93 to i8*
  %100 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %99) #6
  br label %101

101:                                              ; preds = %92, %98
  store i8 0, i8* %18, align 8
  br label %164

102:                                              ; preds = %17
  %103 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %1, %"class.blink::Node"* %21) #6
  %104 = icmp eq %"class.blink::Node"* %103, null
  br i1 %104, label %122, label %105

105:                                              ; preds = %102
  br i1 %15, label %106, label %113

106:                                              ; preds = %105, %109
  %107 = phi %"class.blink::Node"* [ %111, %109 ], [ %103, %105 ]
  %108 = tail call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* nonnull %107, %"class.blink::Node"* %1) #6
  br i1 %108, label %109, label %113

109:                                              ; preds = %106
  %110 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %111 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %107, %"class.blink::Node"* %110) #6
  %112 = icmp eq %"class.blink::Node"* %111, null
  br i1 %112, label %164, label %106

113:                                              ; preds = %106, %105
  %114 = phi %"class.blink::Node"* [ %103, %105 ], [ %107, %106 ]
  %115 = ptrtoint %"class.blink::Node"* %114 to i64
  %116 = bitcast %"class.blink::NodeIterator::NodePointer"* %2 to i64*
  store atomic i64 %115, i64* %116 monotonic, align 8
  %117 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %164, label %119

119:                                              ; preds = %113
  %120 = bitcast %"class.blink::Node"* %114 to i8*
  %121 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %120) #6
  br label %164

122:                                              ; preds = %102
  %123 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %124 = icmp eq %"class.blink::Node"* %1, null
  br i1 %124, label %135, label %125

125:                                              ; preds = %122
  %126 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %127 = load i32, i32* %126, align 8
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %135, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1
  %132 = bitcast %"class.blink::Node"* %131 to %"class.blink::Node"**
  %133 = load %"class.blink::Node"*, %"class.blink::Node"** %132, align 8
  %134 = icmp eq %"class.blink::Node"* %133, null
  br i1 %134, label %135, label %143

135:                                              ; preds = %130, %125, %122
  %136 = icmp eq %"class.blink::Node"* %123, %1
  br i1 %136, label %143, label %137

137:                                              ; preds = %135
  %138 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 5, i32 0, i32 0
  %139 = load %"class.blink::Node"*, %"class.blink::Node"** %138, align 8
  %140 = icmp eq %"class.blink::Node"* %139, null
  br i1 %140, label %141, label %143

141:                                              ; preds = %137
  %142 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %1, %"class.blink::Node"* %123) #6
  br label %143

143:                                              ; preds = %130, %135, %137, %141
  %144 = phi %"class.blink::Node"* [ %142, %141 ], [ null, %135 ], [ %139, %137 ], [ %133, %130 ]
  %145 = icmp eq %"class.blink::Node"* %144, null
  br i1 %15, label %146, label %154

146:                                              ; preds = %143
  br i1 %145, label %164, label %147

147:                                              ; preds = %146, %150
  %148 = phi %"class.blink::Node"* [ %152, %150 ], [ %144, %146 ]
  %149 = tail call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* nonnull %148, %"class.blink::Node"* %1) #6
  br i1 %149, label %150, label %155

150:                                              ; preds = %147
  %151 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %152 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %148, %"class.blink::Node"* %151) #6
  %153 = icmp eq %"class.blink::Node"* %152, null
  br i1 %153, label %164, label %147

154:                                              ; preds = %143
  br i1 %145, label %164, label %155

155:                                              ; preds = %147, %154
  %156 = phi %"class.blink::Node"* [ %144, %154 ], [ %148, %147 ]
  %157 = ptrtoint %"class.blink::Node"* %156 to i64
  %158 = bitcast %"class.blink::NodeIterator::NodePointer"* %2 to i64*
  store atomic i64 %157, i64* %158 monotonic, align 8
  %159 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %164, label %161

161:                                              ; preds = %155
  %162 = bitcast %"class.blink::Node"* %156 to i8*
  %163 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %162) #6
  br label %164

164:                                              ; preds = %61, %69, %88, %109, %150, %146, %161, %155, %119, %113, %77, %72, %14, %154, %101, %80, %3
  ret void
}

declare zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12NodeIterator5TraceEPNS_7VisitorE(%"class.blink::NodeIterator"*, %"class.blink::Visitor"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::NodeIterator::NodePointer"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #6
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 4
  %15 = bitcast %"class.blink::NodeIterator::NodePointer"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #6
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %25, %"class.blink::Visitor"* %1) #6
  %26 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 0, i32 1
  %27 = bitcast %"class.blink::NodeIteratorBase.base"* %26 to %"class.blink::NodeIteratorBase"*
  tail call void @_ZNK5blink16NodeIteratorBase5TraceEPNS_7VisitorE(%"class.blink::NodeIteratorBase"* %27, %"class.blink::Visitor"* %1) #6
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #3

declare void @_ZNK5blink16NodeIteratorBase5TraceEPNS_7VisitorE(%"class.blink::NodeIteratorBase"*, %"class.blink::Visitor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_NK5blink12NodeIterator5TraceEPNS_7VisitorE(%"class.blink::NodeIterator"*, %"class.blink::Visitor"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::NodeIterator", %"class.blink::NodeIterator"* %0, i64 -1, i32 4
  %4 = getelementptr inbounds %"class.blink::NodeIterator::NodePointer", %"class.blink::NodeIterator::NodePointer"* %3, i64 3, i32 1
  %5 = bitcast i8* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #6
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %"class.blink::NodeIterator::NodePointer", %"class.blink::NodeIterator::NodePointer"* %3, i64 4, i32 1
  %16 = bitcast i8* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #6
  br label %25

25:                                               ; preds = %14, %19
  %26 = bitcast %"class.blink::NodeIterator::NodePointer"* %3 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %26, %"class.blink::Visitor"* %1) #6
  %27 = getelementptr inbounds %"class.blink::NodeIterator::NodePointer", %"class.blink::NodeIterator::NodePointer"* %3, i64 1
  %28 = bitcast %"class.blink::NodeIterator::NodePointer"* %27 to %"class.blink::NodeIteratorBase"*
  tail call void @_ZNK5blink16NodeIteratorBase5TraceEPNS_7VisitorE(%"class.blink::NodeIteratorBase"* %28, %"class.blink::Visitor"* %1) #6
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12NodeIteratorD2Ev(%"class.blink::NodeIterator"*) unnamed_addr #5 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12NodeIteratorD0Ev(%"class.blink::NodeIterator"*) unnamed_addr #5 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink12NodeIterator18GetWrapperTypeInfoEv(%"class.blink::NodeIterator"*) unnamed_addr #2 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12NodeIterator18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #3

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N5blink12NodeIteratorD1Ev(%"class.blink::NodeIterator"*) unnamed_addr #5 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N5blink12NodeIteratorD0Ev(%"class.blink::NodeIterator"*) unnamed_addr #5 comdat align 2 {
  ret void
}

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
