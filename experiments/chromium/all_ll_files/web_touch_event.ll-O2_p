; ModuleID = '../../third_party/blink/common/input/web_touch_event.cc'
source_filename = "../../third_party/blink/common/input/web_touch_event.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::WebTouchEvent" = type { %"class.blink::WebInputEvent", i32, [16 x %"class.blink::WebTouchPoint"], i32, i8, i8, i8, i32 }
%"class.blink::WebTouchPoint" = type { %"class.blink::WebPointerProperties", i32, float, float, float }
%"class.blink::WebPointerProperties" = type { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.gfx::PointF" = type { float, float }

$_ZN5blink13WebInputEventD2Ev = comdat any

$_ZN5blink13WebTouchEventD0Ev = comdat any

@_ZTVN5blink13WebTouchEventE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebInputEvent"*)* @_ZN5blink13WebInputEventD2Ev to i8*), i8* bitcast (void (%"class.blink::WebTouchEvent"*)* @_ZN5blink13WebTouchEventD0Ev to i8*), i8* bitcast (%"class.blink::WebInputEvent"* (%"class.blink::WebTouchEvent"*)* @_ZNK5blink13WebTouchEvent5CloneEv to i8*), i8* bitcast (i1 (%"class.blink::WebTouchEvent"*, %"class.blink::WebInputEvent"*)* @_ZNK5blink13WebTouchEvent11CanCoalesceERKNS_13WebInputEventE to i8*), i8* bitcast (void (%"class.blink::WebTouchEvent"*, %"class.blink::WebInputEvent"*)* @_ZN5blink13WebTouchEvent8CoalesceERKNS_13WebInputEventE to i8*), i8* bitcast (void ()* @_ZNK5blink13WebInputEvent18GetScrollInputTypeEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebInputEvent"* @_ZNK5blink13WebTouchEvent5CloneEv(%"class.blink::WebTouchEvent"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 1272) #7
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 1
  %6 = bitcast float* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %6, i64 32, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 40
  %8 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 1
  %9 = bitcast i32* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %9, i64 1232, i1 false) #8
  %10 = bitcast i8* %2 to %"class.blink::WebInputEvent"*
  ret %"class.blink::WebInputEvent"* %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13WebTouchEvent11CanCoalesceERKNS_13WebInputEventE(%"class.blink::WebTouchEvent"* nocapture readonly, %"class.blink::WebInputEvent"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, -28
  %6 = icmp ult i32 %5, 5
  br i1 %6, label %7, label %75

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::WebInputEvent"* %1 to %"class.blink::WebTouchEvent"*
  %9 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, %4
  %12 = icmp eq i32 %10, 29
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %75

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 5
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 0, i32 5
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %75

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 1
  %24 = bitcast %"class.blink::WebInputEvent"* %23 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = icmp ne i32 %22, %25
  %27 = icmp ugt i32 %22, 16
  %28 = or i1 %27, %26
  br i1 %28, label %75, label %29

29:                                               ; preds = %20
  %30 = shl nsw i32 -1, %22
  %31 = and i32 %30, 65535
  %32 = xor i32 %31, 65535
  %33 = zext i32 %32 to i64
  %34 = icmp eq i32 %22, 0
  br i1 %34, label %71, label %35

35:                                               ; preds = %29
  %36 = zext i32 %22 to i64
  br label %37

37:                                               ; preds = %35, %66
  %38 = phi i64 [ %33, %35 ], [ %68, %66 ]
  %39 = phi i32 [ 0, %35 ], [ %69, %66 ]
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %8, i64 0, i32 2, i64 %40, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  br label %43

43:                                               ; preds = %48, %37
  %44 = phi i64 [ %49, %48 ], [ 0, %37 ]
  %45 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %44, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, %42
  br i1 %47, label %51, label %48

48:                                               ; preds = %43
  %49 = add nuw nsw i64 %44, 1
  %50 = icmp eq i64 %49, %36
  br i1 %50, label %75, label %43

51:                                               ; preds = %43
  %52 = trunc i64 %44 to i32
  %53 = icmp eq i32 %52, -1
  br i1 %53, label %75, label %54

54:                                               ; preds = %51
  %55 = shl i64 %44, 32
  %56 = ashr exact i64 %55, 32
  %57 = shl i64 1, %56
  %58 = and i64 %38, %57
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %75, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %56, i32 0, i32 7
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %8, i64 0, i32 2, i64 %40, i32 0, i32 7
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %62, %64
  br i1 %65, label %66, label %75

66:                                               ; preds = %60
  %67 = xor i64 %57, -1
  %68 = and i64 %38, %67
  %69 = add i32 %39, 1
  %70 = icmp eq i32 %69, %22
  br i1 %70, label %71, label %37

71:                                               ; preds = %66, %29
  %72 = phi i64 [ %33, %29 ], [ %68, %66 ]
  %73 = and i64 %72, 65535
  %74 = icmp eq i64 %73, 0
  br label %75

75:                                               ; preds = %51, %60, %54, %48, %71, %20, %14, %7, %2
  %76 = phi i1 [ false, %2 ], [ false, %20 ], [ false, %14 ], [ false, %7 ], [ %74, %71 ], [ false, %48 ], [ false, %54 ], [ false, %60 ], [ false, %51 ]
  ret i1 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13WebTouchEvent8CoalesceERKNS_13WebInputEventE(%"class.blink::WebTouchEvent"* nocapture, %"class.blink::WebInputEvent"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebTouchEvent", align 8
  %4 = bitcast %"class.blink::WebInputEvent"* %1 to %"class.blink::WebTouchEvent"*
  %5 = bitcast %"class.blink::WebTouchEvent"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1272, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 1
  %9 = bitcast float* %7 to i8*
  %10 = bitcast float* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 32, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %11 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %3, i64 0, i32 1
  %12 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 1
  %13 = bitcast i32* %11 to i8*
  %14 = bitcast i32* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 1232, i1 false) #8
  %15 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 0, i32 1
  %16 = bitcast float* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %16, i64 32, i1 false) #8
  %17 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 1
  %18 = bitcast %"class.blink::WebInputEvent"* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %18, i64 1232, i1 false) #8
  %19 = load i32, i32* %12, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %2
  %22 = load i32, i32* %11, align 8
  %23 = icmp eq i32 %22, 0
  %24 = zext i32 %22 to i64
  %25 = zext i32 %19 to i64
  br label %41

26:                                               ; preds = %72, %2
  %27 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %3, i64 0, i32 4
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 4
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = or i8 %30, %28
  store i8 %31, i8* %29, align 8
  %32 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %3, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %4, i64 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = tail call i32 @_ZN5blink13WebInputEvent18MergeDispatchTypesENS_5mojom12DispatchTypeES2_(i32 %33, i32 %35) #8
  %37 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 3
  store i32 %36, i32* %37, align 4
  %38 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %3, i64 0, i32 7
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 7
  store i32 %39, i32* %40, align 4
  call void @llvm.lifetime.end.p0i8(i64 1272, i8* nonnull %5) #8
  ret void

41:                                               ; preds = %21, %72
  %42 = phi i64 [ 0, %21 ], [ %73, %72 ]
  %43 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %42, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %23, label %53, label %45

45:                                               ; preds = %41, %50
  %46 = phi i64 [ %51, %50 ], [ 0, %41 ]
  %47 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %3, i64 0, i32 2, i64 %46, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, %44
  br i1 %49, label %53, label %50

50:                                               ; preds = %45
  %51 = add nuw nsw i64 %46, 1
  %52 = icmp eq i64 %51, %24
  br i1 %52, label %53, label %45

53:                                               ; preds = %45, %50, %41
  %54 = phi i64 [ -1, %41 ], [ %46, %45 ], [ -1, %50 ]
  %55 = shl i64 %54, 32
  %56 = ashr exact i64 %55, 32
  %57 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %3, i64 0, i32 2, i64 %56, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 3
  br i1 %59, label %60, label %72

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %42, i32 1
  store i32 3, i32* %61, align 4
  %62 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %3, i64 0, i32 2, i64 %56, i32 0, i32 8
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %42, i32 0, i32 8
  %65 = load i32, i32* %64, align 4
  %66 = add nsw i32 %65, %63
  store i32 %66, i32* %64, align 4
  %67 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %3, i64 0, i32 2, i64 %56, i32 0, i32 9
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %42, i32 0, i32 9
  %70 = load i32, i32* %69, align 4
  %71 = add nsw i32 %70, %68
  store i32 %71, i32* %69, align 4
  br label %72

72:                                               ; preds = %60, %53
  %73 = add nuw nsw i64 %42, 1
  %74 = icmp ult i64 %73, %25
  br i1 %74, label %41, label %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @_ZN5blink13WebInputEvent18MergeDispatchTypesENS_5mojom12DispatchTypeES2_(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13WebInputEventD2Ev(%"class.blink::WebInputEvent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13WebTouchEvent16FlattenTransformEv(%"class.blink::WebTouchEvent"* noalias nocapture sret, %"class.blink::WebTouchEvent"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.blink::WebTouchPoint", align 4
  %4 = alloca { i32, i32, float, i32 }, align 8
  %5 = alloca [13 x i8], align 4
  %6 = alloca [35 x i8], align 1
  %7 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 0, i32 1
  %10 = bitcast float* %8 to i8*
  %11 = bitcast float* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 32, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %12 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 1
  %14 = bitcast i32* %12 to i8*
  %15 = bitcast i32* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 1232, i1 false) #8
  %16 = load i32, i32* %13, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %38, label %18

18:                                               ; preds = %2
  %19 = bitcast { i32, i32, float, i32 }* %4 to i8*
  %20 = getelementptr inbounds [13 x i8], [13 x i8]* %5, i64 0, i64 0
  %21 = getelementptr inbounds [35 x i8], [35 x i8]* %6, i64 0, i64 0
  %22 = bitcast %"class.blink::WebTouchPoint"* %3 to i8*
  %23 = getelementptr inbounds %"class.blink::WebTouchPoint", %"class.blink::WebTouchPoint"* %3, i64 0, i32 2
  %24 = getelementptr inbounds %"class.blink::WebTouchPoint", %"class.blink::WebTouchPoint"* %3, i64 0, i32 3
  %25 = getelementptr inbounds %"class.blink::WebTouchPoint", %"class.blink::WebTouchPoint"* %3, i64 0, i32 0, i32 11
  %26 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 0, i32 2, i32 0
  %27 = bitcast %"class.gfx::PointF"* %25 to <2 x float>*
  %28 = getelementptr inbounds %"class.blink::WebTouchPoint", %"class.blink::WebTouchPoint"* %3, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::WebTouchPoint", %"class.blink::WebTouchPoint"* %3, i64 0, i32 0, i32 1
  %30 = bitcast float* %29 to i32*
  %31 = getelementptr inbounds %"class.blink::WebTouchPoint", %"class.blink::WebTouchPoint"* %3, i64 0, i32 0, i32 2
  %32 = bitcast i32* %31 to i8*
  %33 = getelementptr inbounds %"class.blink::WebTouchPoint", %"class.blink::WebTouchPoint"* %3, i64 0, i32 0, i32 6
  %34 = getelementptr inbounds %"class.blink::WebTouchPoint", %"class.blink::WebTouchPoint"* %3, i64 0, i32 0, i32 7
  %35 = bitcast i32* %34 to i8*
  %36 = getelementptr inbounds i8, i8* %22, i64 41
  %37 = bitcast float* %26 to <2 x float>*
  br label %43

38:                                               ; preds = %43, %2
  %39 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 2
  %40 = bitcast %"class.gfx::Vector2dF"* %39 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 2, i32 1
  %42 = bitcast float* %41 to i32*
  store i32 0, i32* %42, align 4
  store float 1.000000e+00, float* %8, align 8
  ret void

43:                                               ; preds = %18, %43
  %44 = phi i64 [ 0, %18 ], [ %70, %43 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19)
  call void @llvm.lifetime.start.p0i8(i64 13, i8* nonnull %20)
  call void @llvm.lifetime.start.p0i8(i64 35, i8* nonnull %21)
  call void @llvm.lifetime.start.p0i8(i64 76, i8* nonnull %22) #8, !noalias !3
  %45 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 2, i64 %44
  %46 = bitcast %"class.blink::WebTouchPoint"* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 4 %46, i64 76, i1 false) #8, !noalias !3
  %47 = load float, float* %9, align 8, !noalias !3
  %48 = load float, float* %23, align 4, !noalias !3
  %49 = fdiv float %48, %47
  store float %49, float* %23, align 4, !noalias !3
  %50 = load float, float* %24, align 4, !noalias !3
  %51 = fdiv float %50, %47
  store float %51, float* %24, align 4, !noalias !3
  %52 = fdiv float 1.000000e+00, %47
  %53 = call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* dereferenceable(8) %25, float %52, float %52) #8, !noalias !3
  %54 = load <2 x float>, <2 x float>* %37, align 4, !noalias !3
  %55 = fadd <2 x float> %54, %53
  store <2 x float> %55, <2 x float>* %27, align 4, !noalias !3
  %56 = load i32, i32* %28, align 4
  %57 = load i32, i32* %30, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 4 %32, i64 16, i1 false)
  %58 = load i32, i32* %33, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %20, i8* align 4 %35, i64 13, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %36, i64 35, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 76, i8* nonnull %22) #8, !noalias !3
  %59 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %44
  %60 = getelementptr inbounds %"class.blink::WebTouchPoint", %"class.blink::WebTouchPoint"* %59, i64 0, i32 0, i32 0
  store i32 %56, i32* %60, align 4
  %61 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %44, i32 0, i32 1
  %62 = bitcast float* %61 to i32*
  store i32 %57, i32* %62, align 4
  %63 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %44, i32 0, i32 2
  %64 = bitcast i32* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* nonnull align 8 %19, i64 16, i1 false)
  %65 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %44, i32 0, i32 6
  store i32 %58, i32* %65, align 4
  %66 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %44, i32 0, i32 7
  %67 = bitcast i32* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* nonnull align 4 %20, i64 13, i1 false)
  %68 = bitcast %"class.blink::WebTouchPoint"* %59 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i64 41
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %69, i8* nonnull align 1 %21, i64 35, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19)
  call void @llvm.lifetime.end.p0i8(i64 13, i8* nonnull %20)
  call void @llvm.lifetime.end.p0i8(i64 35, i8* nonnull %21)
  %70 = add nuw nsw i64 %44, 1
  %71 = load i32, i32* %13, align 8
  %72 = zext i32 %71 to i64
  %73 = icmp ult i64 %70, %72
  br i1 %73, label %43, label %38
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13WebTouchEvent21TouchPointInRootFrameEj(%"class.blink::WebTouchPoint"* noalias nocapture sret, %"class.blink::WebTouchEvent"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.blink::WebTouchPoint", align 4
  %5 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp ugt i32 %6, %2
  br i1 %7, label %18, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WebTouchPoint", %"class.blink::WebTouchPoint"* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.blink::WebTouchPoint", %"class.blink::WebTouchPoint"* %0, i64 0, i32 0, i32 1
  store float 0x7FF8000000000000, float* %10, align 4
  %11 = getelementptr inbounds %"class.blink::WebTouchPoint", %"class.blink::WebTouchPoint"* %0, i64 0, i32 0, i32 2
  %12 = bitcast i32* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 16, i1 false) #8
  %13 = getelementptr inbounds %"class.blink::WebTouchPoint", %"class.blink::WebTouchPoint"* %0, i64 0, i32 0, i32 6
  store i32 -1, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::WebTouchPoint", %"class.blink::WebTouchPoint"* %0, i64 0, i32 0, i32 7
  %15 = bitcast i32* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 13, i1 false) #8
  %16 = getelementptr inbounds %"class.blink::WebTouchPoint", %"class.blink::WebTouchPoint"* %0, i64 0, i32 0, i32 11
  %17 = bitcast %"class.gfx::PointF"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 32, i1 false) #8
  br label %40

18:                                               ; preds = %3
  %19 = bitcast %"class.blink::WebTouchPoint"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 76, i8* nonnull %19) #8
  %20 = zext i32 %2 to i64
  %21 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 2, i64 %20
  %22 = bitcast %"class.blink::WebTouchPoint"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %19, i8* align 4 %22, i64 76, i1 false)
  %23 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 0, i32 1
  %24 = load float, float* %23, align 8
  %25 = getelementptr inbounds %"class.blink::WebTouchPoint", %"class.blink::WebTouchPoint"* %4, i64 0, i32 2
  %26 = load float, float* %25, align 4
  %27 = fdiv float %26, %24
  store float %27, float* %25, align 4
  %28 = getelementptr inbounds %"class.blink::WebTouchPoint", %"class.blink::WebTouchPoint"* %4, i64 0, i32 3
  %29 = load float, float* %28, align 4
  %30 = fdiv float %29, %24
  store float %30, float* %28, align 4
  %31 = getelementptr inbounds %"class.blink::WebTouchPoint", %"class.blink::WebTouchPoint"* %4, i64 0, i32 0, i32 11
  %32 = fdiv float 1.000000e+00, %24
  %33 = call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* dereferenceable(8) %31, float %32, float %32) #8
  %34 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 0, i32 2, i32 0
  %35 = bitcast float* %34 to <2 x float>*
  %36 = load <2 x float>, <2 x float>* %35, align 4
  %37 = fadd <2 x float> %36, %33
  %38 = bitcast %"class.gfx::PointF"* %31 to <2 x float>*
  store <2 x float> %37, <2 x float>* %38, align 4
  %39 = bitcast %"class.blink::WebTouchPoint"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* nonnull align 4 %19, i64 76, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 76, i8* nonnull %19) #8
  br label %40

40:                                               ; preds = %18, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13WebTouchEventD0Ev(%"class.blink::WebTouchEvent"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::WebTouchEvent"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

declare void @_ZNK5blink13WebInputEvent18GetScrollInputTypeEv() unnamed_addr

declare <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* dereferenceable(8), float, float) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5blink13WebTouchEvent21TouchPointInRootFrameEj: argument 0"}
!5 = distinct !{!5, !"_ZNK5blink13WebTouchEvent21TouchPointInRootFrameEj"}
