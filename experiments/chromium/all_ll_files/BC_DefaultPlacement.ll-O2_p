; ModuleID = '../../third_party/pdfium/fxbarcode/datamatrix/BC_DefaultPlacement.cpp'
source_filename = "../../third_party/pdfium/fxbarcode/datamatrix/BC_DefaultPlacement.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CBC_DefaultPlacement = type { %"class.fxcrt::WideString", i32, i32, %"class.std::__1::vector" }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIh16FxAllocAllocatorIhEE8__appendEm = comdat any

@_ZN20CBC_DefaultPlacementC1EN5fxcrt10WideStringEii = hidden unnamed_addr alias void (%class.CBC_DefaultPlacement*, %"class.fxcrt::WideString"*, i32, i32), void (%class.CBC_DefaultPlacement*, %"class.fxcrt::WideString"*, i32, i32)* @_ZN20CBC_DefaultPlacementC2EN5fxcrt10WideStringEii
@_ZN20CBC_DefaultPlacementD1Ev = hidden unnamed_addr alias void (%class.CBC_DefaultPlacement*), void (%class.CBC_DefaultPlacement*)* @_ZN20CBC_DefaultPlacementD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CBC_DefaultPlacementC2EN5fxcrt10WideStringEii(%class.CBC_DefaultPlacement*, %"class.fxcrt::WideString"*, i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10WideStringC1EOS0_(%"class.fxcrt::WideString"* %5, %"class.fxcrt::WideString"* dereferenceable(8) %1) #8
  %6 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 1
  store i32 %3, i32* %6, align 8
  %7 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 2
  store i32 %2, i32* %7, align 4
  %8 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 3
  %9 = bitcast %"class.std::__1::vector"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #8
  %10 = mul i32 %3, %2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %34, label %12

12:                                               ; preds = %4
  %13 = sext i32 %10 to i64
  tail call void @_ZNSt3__16vectorIh16FxAllocAllocatorIhEE8__appendEm(%"class.std::__1::vector"* %8, i64 %13) #8
  %14 = icmp sgt i32 %10, 0
  br i1 %14, label %15, label %34

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %17 = zext i32 %10 to i64
  %18 = add nsw i64 %17, -1
  %19 = and i64 %17, 3
  %20 = icmp ult i64 %18, 3
  br i1 %20, label %23, label %21

21:                                               ; preds = %15
  %22 = sub nsw i64 %17, %19
  br label %35

23:                                               ; preds = %35, %15
  %24 = phi i64 [ 0, %15 ], [ %49, %35 ]
  %25 = icmp eq i64 %19, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %23, %26
  %27 = phi i64 [ %31, %26 ], [ %24, %23 ]
  %28 = phi i64 [ %32, %26 ], [ %19, %23 ]
  %29 = load i8*, i8** %16, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 %27
  store i8 2, i8* %30, align 1
  %31 = add nuw nsw i64 %27, 1
  %32 = add i64 %28, -1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %26, !llvm.loop !2

34:                                               ; preds = %23, %26, %4, %12
  ret void

35:                                               ; preds = %35, %21
  %36 = phi i64 [ 0, %21 ], [ %49, %35 ]
  %37 = phi i64 [ %22, %21 ], [ %50, %35 ]
  %38 = load i8*, i8** %16, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 %36
  store i8 2, i8* %39, align 1
  %40 = or i64 %36, 1
  %41 = load i8*, i8** %16, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 %40
  store i8 2, i8* %42, align 1
  %43 = or i64 %36, 2
  %44 = load i8*, i8** %16, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 %43
  store i8 2, i8* %45, align 1
  %46 = or i64 %36, 3
  %47 = load i8*, i8** %16, align 8
  %48 = getelementptr inbounds i8, i8* %47, i64 %46
  store i8 2, i8* %48, align 1
  %49 = add nuw nsw i64 %36, 4
  %50 = add i64 %37, -4
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %23, label %35
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringC1EOS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CBC_DefaultPlacementD2Ev(%class.CBC_DefaultPlacement*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i8* %3 to i64
  %7 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 3, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  store i64 %6, i64* %8, align 8
  tail call void @_Z7FX_FreePv(i8* nonnull %3) #8
  br label %9

9:                                                ; preds = %1, %5
  %10 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %10) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN20CBC_DefaultPlacement10getNumrowsEv(%class.CBC_DefaultPlacement* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN20CBC_DefaultPlacement10getNumcolsEv(%class.CBC_DefaultPlacement* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZN20CBC_DefaultPlacement7getBitsEv(%class.CBC_DefaultPlacement* readnone) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 3
  ret %"class.std::__1::vector"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN20CBC_DefaultPlacement6getBitEii(%class.CBC_DefaultPlacement* nocapture readonly, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = mul nsw i32 %5, %2
  %7 = add nsw i32 %6, %1
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 1
  ret i1 %13
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN20CBC_DefaultPlacement6setBitEiib(%class.CBC_DefaultPlacement* nocapture readonly, i32, i32, i1 zeroext) local_unnamed_addr #4 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = mul nsw i32 %7, %2
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %10
  store i8 %5, i8* %13, align 1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN20CBC_DefaultPlacement6hasBitEii(%class.CBC_DefaultPlacement* nocapture readonly, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = mul nsw i32 %5, %2
  %7 = add nsw i32 %6, %1
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = load i8, i8* %11, align 1
  %13 = icmp ne i8 %12, 2
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CBC_DefaultPlacement5placeEv(%class.CBC_DefaultPlacement* readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 2
  %3 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load i32, i32* %3, align 8
  br label %6

6:                                                ; preds = %116, %1
  %7 = phi i32 [ %5, %1 ], [ %108, %116 ]
  %8 = phi i32 [ 0, %1 ], [ %105, %116 ]
  %9 = phi i32 [ 4, %1 ], [ %113, %116 ]
  %10 = phi i32 [ 0, %1 ], [ %114, %116 ]
  %11 = icmp eq i32 %9, %7
  %12 = icmp eq i32 %10, 0
  %13 = and i1 %12, %11
  br i1 %13, label %14, label %17

14:                                               ; preds = %6
  %15 = add nsw i32 %8, 1
  tail call void @_ZN20CBC_DefaultPlacement7corner1Ei(%class.CBC_DefaultPlacement* %0, i32 %8)
  %16 = load i32, i32* %3, align 8
  br label %17

17:                                               ; preds = %14, %6
  %18 = phi i32 [ %16, %14 ], [ %7, %6 ]
  %19 = phi i32 [ %15, %14 ], [ %8, %6 ]
  %20 = add nsw i32 %18, -2
  %21 = icmp eq i32 %9, %20
  %22 = and i1 %12, %21
  br i1 %22, label %23, label %31

23:                                               ; preds = %17
  %24 = load i32, i32* %2, align 4
  %25 = and i32 %24, 3
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = add nsw i32 %19, 1
  tail call void @_ZN20CBC_DefaultPlacement7corner2Ei(%class.CBC_DefaultPlacement* %0, i32 %19)
  %29 = load i32, i32* %3, align 8
  %30 = add nsw i32 %29, -2
  br label %31

31:                                               ; preds = %23, %27, %17
  %32 = phi i32 [ %20, %23 ], [ %30, %27 ], [ %20, %17 ]
  %33 = phi i32 [ %18, %23 ], [ %29, %27 ], [ %18, %17 ]
  %34 = phi i32 [ %19, %23 ], [ %28, %27 ], [ %19, %17 ]
  %35 = icmp eq i32 %9, %32
  %36 = and i1 %12, %35
  br i1 %36, label %37, label %43

37:                                               ; preds = %31
  %38 = load i32, i32* %2, align 4
  %39 = srem i32 %38, 8
  %40 = icmp eq i32 %39, 4
  br i1 %40, label %41, label %54

41:                                               ; preds = %37
  %42 = add nsw i32 %34, 1
  tail call void @_ZN20CBC_DefaultPlacement7corner3Ei(%class.CBC_DefaultPlacement* %0, i32 %34)
  br label %54

43:                                               ; preds = %31
  %44 = add nsw i32 %33, 4
  %45 = icmp eq i32 %9, %44
  %46 = icmp eq i32 %10, 2
  %47 = and i1 %46, %45
  br i1 %47, label %48, label %54

48:                                               ; preds = %43
  %49 = load i32, i32* %2, align 4
  %50 = and i32 %49, 7
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = add nsw i32 %34, 1
  tail call void @_ZN20CBC_DefaultPlacement7corner4Ei(%class.CBC_DefaultPlacement* %0, i32 %34)
  br label %54

54:                                               ; preds = %37, %41, %52, %48, %43
  %55 = phi i32 [ %42, %41 ], [ %34, %37 ], [ %34, %43 ], [ %34, %48 ], [ %53, %52 ]
  br label %56

56:                                               ; preds = %54, %80
  %57 = phi i32 [ %76, %80 ], [ %55, %54 ]
  %58 = phi i32 [ %77, %80 ], [ %9, %54 ]
  %59 = phi i32 [ %78, %80 ], [ %10, %54 ]
  %60 = load i32, i32* %3, align 8
  %61 = icmp slt i32 %58, %60
  %62 = icmp sgt i32 %59, -1
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %75

64:                                               ; preds = %56
  %65 = load i32, i32* %2, align 4
  %66 = mul nsw i32 %65, %58
  %67 = add nsw i32 %66, %59
  %68 = sext i32 %67 to i64
  %69 = load i8*, i8** %4, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 %68
  %71 = load i8, i8* %70, align 1
  %72 = icmp eq i8 %71, 2
  br i1 %72, label %73, label %75

73:                                               ; preds = %64
  %74 = add nsw i32 %57, 1
  tail call void @_ZN20CBC_DefaultPlacement4utahEiii(%class.CBC_DefaultPlacement* %0, i32 %58, i32 %59, i32 %57)
  br label %75

75:                                               ; preds = %64, %73, %56
  %76 = phi i32 [ %57, %64 ], [ %74, %73 ], [ %57, %56 ]
  %77 = add nsw i32 %58, -2
  %78 = add nsw i32 %59, 2
  %79 = icmp sgt i32 %77, -1
  br i1 %79, label %80, label %83

80:                                               ; preds = %75
  %81 = load i32, i32* %2, align 4
  %82 = icmp slt i32 %78, %81
  br i1 %82, label %56, label %83

83:                                               ; preds = %75, %80
  %84 = add nsw i32 %58, -1
  %85 = add nsw i32 %59, 5
  br label %86

86:                                               ; preds = %104, %83
  %87 = phi i32 [ %76, %83 ], [ %105, %104 ]
  %88 = phi i32 [ %84, %83 ], [ %106, %104 ]
  %89 = phi i32 [ %85, %83 ], [ %107, %104 ]
  %90 = icmp sgt i32 %88, -1
  br i1 %90, label %91, label %104

91:                                               ; preds = %86
  %92 = load i32, i32* %2, align 4
  %93 = icmp slt i32 %89, %92
  br i1 %93, label %94, label %104

94:                                               ; preds = %91
  %95 = mul nsw i32 %92, %88
  %96 = add nsw i32 %95, %89
  %97 = sext i32 %96 to i64
  %98 = load i8*, i8** %4, align 8
  %99 = getelementptr inbounds i8, i8* %98, i64 %97
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 2
  br i1 %101, label %102, label %104

102:                                              ; preds = %94
  %103 = add nsw i32 %87, 1
  tail call void @_ZN20CBC_DefaultPlacement4utahEiii(%class.CBC_DefaultPlacement* %0, i32 %88, i32 %89, i32 %87)
  br label %104

104:                                              ; preds = %94, %102, %91, %86
  %105 = phi i32 [ %87, %94 ], [ %103, %102 ], [ %87, %91 ], [ %87, %86 ]
  %106 = add nsw i32 %88, 2
  %107 = add nsw i32 %89, -2
  %108 = load i32, i32* %3, align 8
  %109 = icmp slt i32 %106, %108
  %110 = icmp sgt i32 %107, -1
  %111 = and i1 %110, %109
  br i1 %111, label %86, label %112

112:                                              ; preds = %104
  %113 = add nsw i32 %88, 5
  %114 = add nsw i32 %89, -1
  %115 = icmp slt i32 %113, %108
  br i1 %115, label %116, label %117

116:                                              ; preds = %112, %117
  br label %6

117:                                              ; preds = %112
  %118 = load i32, i32* %2, align 4
  %119 = icmp sgt i32 %89, %118
  br i1 %119, label %120, label %116

120:                                              ; preds = %117
  %121 = add nsw i32 %118, -1
  %122 = add nsw i32 %108, -1
  %123 = mul nsw i32 %118, %122
  %124 = add nsw i32 %121, %123
  %125 = sext i32 %124 to i64
  %126 = load i8*, i8** %4, align 8
  %127 = getelementptr inbounds i8, i8* %126, i64 %125
  %128 = load i8, i8* %127, align 1
  %129 = icmp eq i8 %128, 2
  br i1 %129, label %130, label %140

130:                                              ; preds = %120
  store i8 1, i8* %127, align 1
  %131 = load i32, i32* %2, align 4
  %132 = add nsw i32 %131, -2
  %133 = load i32, i32* %3, align 8
  %134 = add nsw i32 %133, -2
  %135 = mul nsw i32 %134, %131
  %136 = add nsw i32 %132, %135
  %137 = sext i32 %136 to i64
  %138 = load i8*, i8** %4, align 8
  %139 = getelementptr inbounds i8, i8* %138, i64 %137
  store i8 1, i8* %139, align 1
  br label %140

140:                                              ; preds = %120, %130
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CBC_DefaultPlacement7corner1Ei(%class.CBC_DefaultPlacement* readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, -1
  %6 = icmp slt i32 %4, 1
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = add nsw i32 %5, %4
  %9 = add nsw i32 %4, 4
  %10 = srem i32 %9, 8
  %11 = sub nsw i32 4, %10
  br label %12

12:                                               ; preds = %2, %7
  %13 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %14 = phi i32 [ %8, %7 ], [ %5, %2 ]
  %15 = sext i32 %1 to i64
  %16 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %16, align 8
  %18 = icmp eq %"class.fxcrt::StringDataTemplate"* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %17, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp ugt i64 %21, %15
  br i1 %22, label %24, label %23, !prof !4

23:                                               ; preds = %19, %12
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %17, i64 0, i32 3, i64 %15
  %26 = load i32, i32* %25, align 4
  %27 = trunc i32 %26 to i8
  %28 = lshr i8 %27, 7
  %29 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = mul nsw i32 %30, %14
  %32 = add nsw i32 %31, %13
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 3, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 %33
  store i8 %28, i8* %36, align 1
  %37 = load i32, i32* %3, align 8
  %38 = add nsw i32 %37, -1
  %39 = icmp slt i32 %37, 1
  br i1 %39, label %40, label %45

40:                                               ; preds = %24
  %41 = add nsw i32 %38, %37
  %42 = add nsw i32 %37, 4
  %43 = srem i32 %42, 8
  %44 = sub nsw i32 5, %43
  br label %45

45:                                               ; preds = %24, %40
  %46 = phi i32 [ %44, %40 ], [ 1, %24 ]
  %47 = phi i32 [ %41, %40 ], [ %38, %24 ]
  %48 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %16, align 8
  %49 = icmp eq %"class.fxcrt::StringDataTemplate"* %48, null
  br i1 %49, label %54, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %48, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp ugt i64 %52, %15
  br i1 %53, label %55, label %54, !prof !4

54:                                               ; preds = %50, %45
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %48, i64 0, i32 3, i64 %15
  %57 = load i32, i32* %56, align 4
  %58 = lshr i32 %57, 6
  %59 = trunc i32 %58 to i8
  %60 = and i8 %59, 1
  %61 = load i32, i32* %29, align 4
  %62 = mul nsw i32 %61, %47
  %63 = add nsw i32 %62, %46
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %34, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  store i8 %60, i8* %66, align 1
  %67 = load i32, i32* %3, align 8
  %68 = add nsw i32 %67, -1
  %69 = icmp slt i32 %67, 1
  br i1 %69, label %70, label %75

70:                                               ; preds = %55
  %71 = add nsw i32 %68, %67
  %72 = add nsw i32 %67, 4
  %73 = srem i32 %72, 8
  %74 = sub nsw i32 6, %73
  br label %75

75:                                               ; preds = %55, %70
  %76 = phi i32 [ %74, %70 ], [ 2, %55 ]
  %77 = phi i32 [ %71, %70 ], [ %68, %55 ]
  %78 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %16, align 8
  %79 = icmp eq %"class.fxcrt::StringDataTemplate"* %78, null
  br i1 %79, label %84, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %78, i64 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = icmp ugt i64 %82, %15
  br i1 %83, label %85, label %84, !prof !4

84:                                               ; preds = %80, %75
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %78, i64 0, i32 3, i64 %15
  %87 = load i32, i32* %86, align 4
  %88 = lshr i32 %87, 5
  %89 = trunc i32 %88 to i8
  %90 = and i8 %89, 1
  %91 = load i32, i32* %29, align 4
  %92 = mul nsw i32 %91, %77
  %93 = add nsw i32 %92, %76
  %94 = sext i32 %93 to i64
  %95 = load i8*, i8** %34, align 8
  %96 = getelementptr inbounds i8, i8* %95, i64 %94
  store i8 %90, i8* %96, align 1
  %97 = load i32, i32* %29, align 4
  %98 = add nsw i32 %97, -2
  %99 = icmp slt i32 %98, 0
  br i1 %99, label %100, label %105

100:                                              ; preds = %85
  %101 = add nsw i32 %98, %97
  %102 = add nsw i32 %97, 4
  %103 = srem i32 %102, 8
  %104 = sub nsw i32 4, %103
  br label %105

105:                                              ; preds = %100, %85
  %106 = phi i32 [ %101, %100 ], [ %98, %85 ]
  %107 = phi i32 [ %104, %100 ], [ 0, %85 ]
  %108 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %16, align 8
  %109 = icmp eq %"class.fxcrt::StringDataTemplate"* %108, null
  br i1 %109, label %114, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %108, i64 0, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = icmp ugt i64 %112, %15
  br i1 %113, label %115, label %114, !prof !4

114:                                              ; preds = %110, %105
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %108, i64 0, i32 3, i64 %15
  %117 = load i32, i32* %116, align 4
  %118 = lshr i32 %117, 4
  %119 = trunc i32 %118 to i8
  %120 = and i8 %119, 1
  %121 = mul nsw i32 %107, %97
  %122 = add nsw i32 %121, %106
  %123 = sext i32 %122 to i64
  %124 = load i8*, i8** %34, align 8
  %125 = getelementptr inbounds i8, i8* %124, i64 %123
  store i8 %120, i8* %125, align 1
  %126 = load i32, i32* %29, align 4
  %127 = add nsw i32 %126, -1
  %128 = icmp slt i32 %126, 1
  br i1 %128, label %129, label %134

129:                                              ; preds = %115
  %130 = add nsw i32 %127, %126
  %131 = add nsw i32 %126, 4
  %132 = srem i32 %131, 8
  %133 = sub nsw i32 4, %132
  br label %134

134:                                              ; preds = %129, %115
  %135 = phi i32 [ %130, %129 ], [ %127, %115 ]
  %136 = phi i32 [ %133, %129 ], [ 0, %115 ]
  %137 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %16, align 8
  %138 = icmp eq %"class.fxcrt::StringDataTemplate"* %137, null
  br i1 %138, label %143, label %139

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %137, i64 0, i32 1
  %141 = load i64, i64* %140, align 8
  %142 = icmp ugt i64 %141, %15
  br i1 %142, label %144, label %143, !prof !4

143:                                              ; preds = %139, %134
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %137, i64 0, i32 3, i64 %15
  %146 = load i32, i32* %145, align 4
  %147 = lshr i32 %146, 3
  %148 = trunc i32 %147 to i8
  %149 = and i8 %148, 1
  %150 = mul nsw i32 %136, %126
  %151 = add nsw i32 %150, %135
  %152 = sext i32 %151 to i64
  %153 = load i8*, i8** %34, align 8
  %154 = getelementptr inbounds i8, i8* %153, i64 %152
  store i8 %149, i8* %154, align 1
  %155 = load i32, i32* %29, align 4
  %156 = add nsw i32 %155, -1
  %157 = icmp slt i32 %155, 1
  br i1 %157, label %158, label %163

158:                                              ; preds = %144
  %159 = add nsw i32 %156, %155
  %160 = add nsw i32 %155, 4
  %161 = srem i32 %160, 8
  %162 = sub nsw i32 5, %161
  br label %163

163:                                              ; preds = %158, %144
  %164 = phi i32 [ %159, %158 ], [ %156, %144 ]
  %165 = phi i32 [ %162, %158 ], [ 1, %144 ]
  %166 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %16, align 8
  %167 = icmp eq %"class.fxcrt::StringDataTemplate"* %166, null
  br i1 %167, label %172, label %168

168:                                              ; preds = %163
  %169 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %166, i64 0, i32 1
  %170 = load i64, i64* %169, align 8
  %171 = icmp ugt i64 %170, %15
  br i1 %171, label %173, label %172, !prof !4

172:                                              ; preds = %168, %163
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %166, i64 0, i32 3, i64 %15
  %175 = load i32, i32* %174, align 4
  %176 = lshr i32 %175, 2
  %177 = trunc i32 %176 to i8
  %178 = and i8 %177, 1
  %179 = mul nsw i32 %165, %155
  %180 = add nsw i32 %179, %164
  %181 = sext i32 %180 to i64
  %182 = load i8*, i8** %34, align 8
  %183 = getelementptr inbounds i8, i8* %182, i64 %181
  store i8 %178, i8* %183, align 1
  %184 = load i32, i32* %29, align 4
  %185 = add nsw i32 %184, -1
  %186 = icmp slt i32 %184, 1
  br i1 %186, label %187, label %192

187:                                              ; preds = %173
  %188 = add nsw i32 %185, %184
  %189 = add nsw i32 %184, 4
  %190 = srem i32 %189, 8
  %191 = sub nsw i32 6, %190
  br label %192

192:                                              ; preds = %187, %173
  %193 = phi i32 [ %188, %187 ], [ %185, %173 ]
  %194 = phi i32 [ %191, %187 ], [ 2, %173 ]
  %195 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %16, align 8
  %196 = icmp eq %"class.fxcrt::StringDataTemplate"* %195, null
  br i1 %196, label %201, label %197

197:                                              ; preds = %192
  %198 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %195, i64 0, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = icmp ugt i64 %199, %15
  br i1 %200, label %202, label %201, !prof !4

201:                                              ; preds = %197, %192
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

202:                                              ; preds = %197
  %203 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %195, i64 0, i32 3, i64 %15
  %204 = load i32, i32* %203, align 4
  %205 = lshr i32 %204, 1
  %206 = trunc i32 %205 to i8
  %207 = and i8 %206, 1
  %208 = mul nsw i32 %194, %184
  %209 = add nsw i32 %208, %193
  %210 = sext i32 %209 to i64
  %211 = load i8*, i8** %34, align 8
  %212 = getelementptr inbounds i8, i8* %211, i64 %210
  store i8 %207, i8* %212, align 1
  %213 = load i32, i32* %29, align 4
  %214 = add nsw i32 %213, -1
  %215 = icmp slt i32 %213, 1
  br i1 %215, label %216, label %221

216:                                              ; preds = %202
  %217 = add nsw i32 %214, %213
  %218 = add nsw i32 %213, 4
  %219 = srem i32 %218, 8
  %220 = sub nsw i32 7, %219
  br label %221

221:                                              ; preds = %216, %202
  %222 = phi i32 [ %217, %216 ], [ %214, %202 ]
  %223 = phi i32 [ %220, %216 ], [ 3, %202 ]
  %224 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %16, align 8
  %225 = icmp eq %"class.fxcrt::StringDataTemplate"* %224, null
  br i1 %225, label %230, label %226

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %224, i64 0, i32 1
  %228 = load i64, i64* %227, align 8
  %229 = icmp ugt i64 %228, %15
  br i1 %229, label %231, label %230, !prof !4

230:                                              ; preds = %226, %221
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

231:                                              ; preds = %226
  %232 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %224, i64 0, i32 3, i64 %15
  %233 = load i32, i32* %232, align 4
  %234 = trunc i32 %233 to i8
  %235 = and i8 %234, 1
  %236 = mul nsw i32 %223, %213
  %237 = add nsw i32 %236, %222
  %238 = sext i32 %237 to i64
  %239 = load i8*, i8** %34, align 8
  %240 = getelementptr inbounds i8, i8* %239, i64 %238
  store i8 %235, i8* %240, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CBC_DefaultPlacement7corner2Ei(%class.CBC_DefaultPlacement* readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, -3
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %7, label %21

7:                                                ; preds = %2
  %8 = add nsw i32 %5, %4
  %9 = add nsw i32 %4, 4
  %10 = srem i32 %9, 8
  %11 = sub nsw i32 4, %10
  %12 = icmp sgt i32 %10, 4
  br i1 %12, label %13, label %21

13:                                               ; preds = %7
  %14 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %15, %11
  %17 = add nsw i32 %15, 4
  %18 = srem i32 %17, 8
  %19 = add i32 %8, 4
  %20 = sub i32 %19, %18
  br label %21

21:                                               ; preds = %2, %13, %7
  %22 = phi i32 [ %16, %13 ], [ %11, %7 ], [ 0, %2 ]
  %23 = phi i32 [ %20, %13 ], [ %8, %7 ], [ %5, %2 ]
  %24 = sext i32 %1 to i64
  %25 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %25, align 8
  %27 = icmp eq %"class.fxcrt::StringDataTemplate"* %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %26, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp ugt i64 %30, %24
  br i1 %31, label %33, label %32, !prof !4

32:                                               ; preds = %28, %21
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %26, i64 0, i32 3, i64 %24
  %35 = load i32, i32* %34, align 4
  %36 = trunc i32 %35 to i8
  %37 = lshr i8 %36, 7
  %38 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = mul nsw i32 %39, %23
  %41 = add nsw i32 %40, %22
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 3, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 %42
  store i8 %37, i8* %45, align 1
  %46 = load i32, i32* %3, align 8
  %47 = add nsw i32 %46, -2
  %48 = icmp slt i32 %47, 0
  br i1 %48, label %49, label %62

49:                                               ; preds = %33
  %50 = add nsw i32 %47, %46
  %51 = add nsw i32 %46, 4
  %52 = srem i32 %51, 8
  %53 = sub nsw i32 4, %52
  %54 = icmp sgt i32 %52, 4
  br i1 %54, label %55, label %62

55:                                               ; preds = %49
  %56 = load i32, i32* %38, align 4
  %57 = add nsw i32 %56, %53
  %58 = add nsw i32 %56, 4
  %59 = srem i32 %58, 8
  %60 = add i32 %50, 4
  %61 = sub i32 %60, %59
  br label %62

62:                                               ; preds = %33, %55, %49
  %63 = phi i32 [ %57, %55 ], [ %53, %49 ], [ 0, %33 ]
  %64 = phi i32 [ %61, %55 ], [ %50, %49 ], [ %47, %33 ]
  %65 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %25, align 8
  %66 = icmp eq %"class.fxcrt::StringDataTemplate"* %65, null
  br i1 %66, label %71, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %65, i64 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = icmp ugt i64 %69, %24
  br i1 %70, label %72, label %71, !prof !4

71:                                               ; preds = %67, %62
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %65, i64 0, i32 3, i64 %24
  %74 = load i32, i32* %73, align 4
  %75 = lshr i32 %74, 6
  %76 = trunc i32 %75 to i8
  %77 = and i8 %76, 1
  %78 = load i32, i32* %38, align 4
  %79 = mul nsw i32 %78, %64
  %80 = add nsw i32 %79, %63
  %81 = sext i32 %80 to i64
  %82 = load i8*, i8** %43, align 8
  %83 = getelementptr inbounds i8, i8* %82, i64 %81
  store i8 %77, i8* %83, align 1
  %84 = load i32, i32* %3, align 8
  %85 = add nsw i32 %84, -1
  %86 = icmp slt i32 %84, 1
  br i1 %86, label %87, label %92

87:                                               ; preds = %72
  %88 = add nsw i32 %85, %84
  %89 = add nsw i32 %84, 4
  %90 = srem i32 %89, 8
  %91 = sub nsw i32 4, %90
  br label %92

92:                                               ; preds = %72, %87
  %93 = phi i32 [ %91, %87 ], [ 0, %72 ]
  %94 = phi i32 [ %88, %87 ], [ %85, %72 ]
  %95 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %25, align 8
  %96 = icmp eq %"class.fxcrt::StringDataTemplate"* %95, null
  br i1 %96, label %101, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %95, i64 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = icmp ugt i64 %99, %24
  br i1 %100, label %102, label %101, !prof !4

101:                                              ; preds = %97, %92
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %95, i64 0, i32 3, i64 %24
  %104 = load i32, i32* %103, align 4
  %105 = lshr i32 %104, 5
  %106 = trunc i32 %105 to i8
  %107 = and i8 %106, 1
  %108 = load i32, i32* %38, align 4
  %109 = mul nsw i32 %108, %94
  %110 = add nsw i32 %109, %93
  %111 = sext i32 %110 to i64
  %112 = load i8*, i8** %43, align 8
  %113 = getelementptr inbounds i8, i8* %112, i64 %111
  store i8 %107, i8* %113, align 1
  %114 = load i32, i32* %38, align 4
  %115 = add nsw i32 %114, -4
  %116 = icmp slt i32 %115, 0
  br i1 %116, label %117, label %122

117:                                              ; preds = %102
  %118 = add nsw i32 %115, %114
  %119 = add nsw i32 %114, 4
  %120 = srem i32 %119, 8
  %121 = sub nsw i32 4, %120
  br label %122

122:                                              ; preds = %117, %102
  %123 = phi i32 [ %118, %117 ], [ %115, %102 ]
  %124 = phi i32 [ %121, %117 ], [ 0, %102 ]
  %125 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %25, align 8
  %126 = icmp eq %"class.fxcrt::StringDataTemplate"* %125, null
  br i1 %126, label %131, label %127

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %125, i64 0, i32 1
  %129 = load i64, i64* %128, align 8
  %130 = icmp ugt i64 %129, %24
  br i1 %130, label %132, label %131, !prof !4

131:                                              ; preds = %127, %122
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %125, i64 0, i32 3, i64 %24
  %134 = load i32, i32* %133, align 4
  %135 = lshr i32 %134, 4
  %136 = trunc i32 %135 to i8
  %137 = and i8 %136, 1
  %138 = mul nsw i32 %124, %114
  %139 = add nsw i32 %138, %123
  %140 = sext i32 %139 to i64
  %141 = load i8*, i8** %43, align 8
  %142 = getelementptr inbounds i8, i8* %141, i64 %140
  store i8 %137, i8* %142, align 1
  %143 = load i32, i32* %38, align 4
  %144 = add nsw i32 %143, -3
  %145 = icmp slt i32 %144, 0
  br i1 %145, label %146, label %151

146:                                              ; preds = %132
  %147 = add nsw i32 %144, %143
  %148 = add nsw i32 %143, 4
  %149 = srem i32 %148, 8
  %150 = sub nsw i32 4, %149
  br label %151

151:                                              ; preds = %146, %132
  %152 = phi i32 [ %147, %146 ], [ %144, %132 ]
  %153 = phi i32 [ %150, %146 ], [ 0, %132 ]
  %154 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %25, align 8
  %155 = icmp eq %"class.fxcrt::StringDataTemplate"* %154, null
  br i1 %155, label %160, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %154, i64 0, i32 1
  %158 = load i64, i64* %157, align 8
  %159 = icmp ugt i64 %158, %24
  br i1 %159, label %161, label %160, !prof !4

160:                                              ; preds = %156, %151
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %154, i64 0, i32 3, i64 %24
  %163 = load i32, i32* %162, align 4
  %164 = lshr i32 %163, 3
  %165 = trunc i32 %164 to i8
  %166 = and i8 %165, 1
  %167 = mul nsw i32 %153, %143
  %168 = add nsw i32 %167, %152
  %169 = sext i32 %168 to i64
  %170 = load i8*, i8** %43, align 8
  %171 = getelementptr inbounds i8, i8* %170, i64 %169
  store i8 %166, i8* %171, align 1
  %172 = load i32, i32* %38, align 4
  %173 = add nsw i32 %172, -2
  %174 = icmp slt i32 %173, 0
  br i1 %174, label %175, label %180

175:                                              ; preds = %161
  %176 = add nsw i32 %173, %172
  %177 = add nsw i32 %172, 4
  %178 = srem i32 %177, 8
  %179 = sub nsw i32 4, %178
  br label %180

180:                                              ; preds = %175, %161
  %181 = phi i32 [ %176, %175 ], [ %173, %161 ]
  %182 = phi i32 [ %179, %175 ], [ 0, %161 ]
  %183 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %25, align 8
  %184 = icmp eq %"class.fxcrt::StringDataTemplate"* %183, null
  br i1 %184, label %189, label %185

185:                                              ; preds = %180
  %186 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %183, i64 0, i32 1
  %187 = load i64, i64* %186, align 8
  %188 = icmp ugt i64 %187, %24
  br i1 %188, label %190, label %189, !prof !4

189:                                              ; preds = %185, %180
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %183, i64 0, i32 3, i64 %24
  %192 = load i32, i32* %191, align 4
  %193 = lshr i32 %192, 2
  %194 = trunc i32 %193 to i8
  %195 = and i8 %194, 1
  %196 = mul nsw i32 %182, %172
  %197 = add nsw i32 %196, %181
  %198 = sext i32 %197 to i64
  %199 = load i8*, i8** %43, align 8
  %200 = getelementptr inbounds i8, i8* %199, i64 %198
  store i8 %195, i8* %200, align 1
  %201 = load i32, i32* %38, align 4
  %202 = add nsw i32 %201, -1
  %203 = icmp slt i32 %201, 1
  br i1 %203, label %204, label %209

204:                                              ; preds = %190
  %205 = add nsw i32 %202, %201
  %206 = add nsw i32 %201, 4
  %207 = srem i32 %206, 8
  %208 = sub nsw i32 4, %207
  br label %209

209:                                              ; preds = %204, %190
  %210 = phi i32 [ %205, %204 ], [ %202, %190 ]
  %211 = phi i32 [ %208, %204 ], [ 0, %190 ]
  %212 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %25, align 8
  %213 = icmp eq %"class.fxcrt::StringDataTemplate"* %212, null
  br i1 %213, label %218, label %214

214:                                              ; preds = %209
  %215 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %212, i64 0, i32 1
  %216 = load i64, i64* %215, align 8
  %217 = icmp ugt i64 %216, %24
  br i1 %217, label %219, label %218, !prof !4

218:                                              ; preds = %214, %209
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %212, i64 0, i32 3, i64 %24
  %221 = load i32, i32* %220, align 4
  %222 = lshr i32 %221, 1
  %223 = trunc i32 %222 to i8
  %224 = and i8 %223, 1
  %225 = mul nsw i32 %211, %201
  %226 = add nsw i32 %225, %210
  %227 = sext i32 %226 to i64
  %228 = load i8*, i8** %43, align 8
  %229 = getelementptr inbounds i8, i8* %228, i64 %227
  store i8 %224, i8* %229, align 1
  %230 = load i32, i32* %38, align 4
  %231 = add nsw i32 %230, -1
  %232 = icmp slt i32 %230, 1
  br i1 %232, label %233, label %238

233:                                              ; preds = %219
  %234 = add nsw i32 %231, %230
  %235 = add nsw i32 %230, 4
  %236 = srem i32 %235, 8
  %237 = sub nsw i32 5, %236
  br label %238

238:                                              ; preds = %233, %219
  %239 = phi i32 [ %234, %233 ], [ %231, %219 ]
  %240 = phi i32 [ %237, %233 ], [ 1, %219 ]
  %241 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %25, align 8
  %242 = icmp eq %"class.fxcrt::StringDataTemplate"* %241, null
  br i1 %242, label %247, label %243

243:                                              ; preds = %238
  %244 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %241, i64 0, i32 1
  %245 = load i64, i64* %244, align 8
  %246 = icmp ugt i64 %245, %24
  br i1 %246, label %248, label %247, !prof !4

247:                                              ; preds = %243, %238
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

248:                                              ; preds = %243
  %249 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %241, i64 0, i32 3, i64 %24
  %250 = load i32, i32* %249, align 4
  %251 = trunc i32 %250 to i8
  %252 = and i8 %251, 1
  %253 = mul nsw i32 %240, %230
  %254 = add nsw i32 %253, %239
  %255 = sext i32 %254 to i64
  %256 = load i8*, i8** %43, align 8
  %257 = getelementptr inbounds i8, i8* %256, i64 %255
  store i8 %252, i8* %257, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CBC_DefaultPlacement7corner3Ei(%class.CBC_DefaultPlacement* readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, -3
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %7, label %21

7:                                                ; preds = %2
  %8 = add nsw i32 %5, %4
  %9 = add nsw i32 %4, 4
  %10 = srem i32 %9, 8
  %11 = sub nsw i32 4, %10
  %12 = icmp sgt i32 %10, 4
  br i1 %12, label %13, label %21

13:                                               ; preds = %7
  %14 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %15, %11
  %17 = add nsw i32 %15, 4
  %18 = srem i32 %17, 8
  %19 = add i32 %8, 4
  %20 = sub i32 %19, %18
  br label %21

21:                                               ; preds = %2, %13, %7
  %22 = phi i32 [ %16, %13 ], [ %11, %7 ], [ 0, %2 ]
  %23 = phi i32 [ %20, %13 ], [ %8, %7 ], [ %5, %2 ]
  %24 = sext i32 %1 to i64
  %25 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %25, align 8
  %27 = icmp eq %"class.fxcrt::StringDataTemplate"* %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %26, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp ugt i64 %30, %24
  br i1 %31, label %33, label %32, !prof !4

32:                                               ; preds = %28, %21
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %26, i64 0, i32 3, i64 %24
  %35 = load i32, i32* %34, align 4
  %36 = trunc i32 %35 to i8
  %37 = lshr i8 %36, 7
  %38 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = mul nsw i32 %39, %23
  %41 = add nsw i32 %40, %22
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 3, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 %42
  store i8 %37, i8* %45, align 1
  %46 = load i32, i32* %3, align 8
  %47 = add nsw i32 %46, -2
  %48 = icmp slt i32 %47, 0
  br i1 %48, label %49, label %62

49:                                               ; preds = %33
  %50 = add nsw i32 %47, %46
  %51 = add nsw i32 %46, 4
  %52 = srem i32 %51, 8
  %53 = sub nsw i32 4, %52
  %54 = icmp sgt i32 %52, 4
  br i1 %54, label %55, label %62

55:                                               ; preds = %49
  %56 = load i32, i32* %38, align 4
  %57 = add nsw i32 %56, %53
  %58 = add nsw i32 %56, 4
  %59 = srem i32 %58, 8
  %60 = add i32 %50, 4
  %61 = sub i32 %60, %59
  br label %62

62:                                               ; preds = %33, %55, %49
  %63 = phi i32 [ %57, %55 ], [ %53, %49 ], [ 0, %33 ]
  %64 = phi i32 [ %61, %55 ], [ %50, %49 ], [ %47, %33 ]
  %65 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %25, align 8
  %66 = icmp eq %"class.fxcrt::StringDataTemplate"* %65, null
  br i1 %66, label %71, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %65, i64 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = icmp ugt i64 %69, %24
  br i1 %70, label %72, label %71, !prof !4

71:                                               ; preds = %67, %62
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %65, i64 0, i32 3, i64 %24
  %74 = load i32, i32* %73, align 4
  %75 = lshr i32 %74, 6
  %76 = trunc i32 %75 to i8
  %77 = and i8 %76, 1
  %78 = load i32, i32* %38, align 4
  %79 = mul nsw i32 %78, %64
  %80 = add nsw i32 %79, %63
  %81 = sext i32 %80 to i64
  %82 = load i8*, i8** %43, align 8
  %83 = getelementptr inbounds i8, i8* %82, i64 %81
  store i8 %77, i8* %83, align 1
  %84 = load i32, i32* %3, align 8
  %85 = add nsw i32 %84, -1
  %86 = icmp slt i32 %84, 1
  br i1 %86, label %87, label %92

87:                                               ; preds = %72
  %88 = add nsw i32 %85, %84
  %89 = add nsw i32 %84, 4
  %90 = srem i32 %89, 8
  %91 = sub nsw i32 4, %90
  br label %92

92:                                               ; preds = %72, %87
  %93 = phi i32 [ %91, %87 ], [ 0, %72 ]
  %94 = phi i32 [ %88, %87 ], [ %85, %72 ]
  %95 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %25, align 8
  %96 = icmp eq %"class.fxcrt::StringDataTemplate"* %95, null
  br i1 %96, label %101, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %95, i64 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = icmp ugt i64 %99, %24
  br i1 %100, label %102, label %101, !prof !4

101:                                              ; preds = %97, %92
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %95, i64 0, i32 3, i64 %24
  %104 = load i32, i32* %103, align 4
  %105 = lshr i32 %104, 5
  %106 = trunc i32 %105 to i8
  %107 = and i8 %106, 1
  %108 = load i32, i32* %38, align 4
  %109 = mul nsw i32 %108, %94
  %110 = add nsw i32 %109, %93
  %111 = sext i32 %110 to i64
  %112 = load i8*, i8** %43, align 8
  %113 = getelementptr inbounds i8, i8* %112, i64 %111
  store i8 %107, i8* %113, align 1
  %114 = load i32, i32* %38, align 4
  %115 = add nsw i32 %114, -2
  %116 = icmp slt i32 %115, 0
  br i1 %116, label %117, label %122

117:                                              ; preds = %102
  %118 = add nsw i32 %115, %114
  %119 = add nsw i32 %114, 4
  %120 = srem i32 %119, 8
  %121 = sub nsw i32 4, %120
  br label %122

122:                                              ; preds = %117, %102
  %123 = phi i32 [ %118, %117 ], [ %115, %102 ]
  %124 = phi i32 [ %121, %117 ], [ 0, %102 ]
  %125 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %25, align 8
  %126 = icmp eq %"class.fxcrt::StringDataTemplate"* %125, null
  br i1 %126, label %131, label %127

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %125, i64 0, i32 1
  %129 = load i64, i64* %128, align 8
  %130 = icmp ugt i64 %129, %24
  br i1 %130, label %132, label %131, !prof !4

131:                                              ; preds = %127, %122
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %125, i64 0, i32 3, i64 %24
  %134 = load i32, i32* %133, align 4
  %135 = lshr i32 %134, 4
  %136 = trunc i32 %135 to i8
  %137 = and i8 %136, 1
  %138 = mul nsw i32 %124, %114
  %139 = add nsw i32 %138, %123
  %140 = sext i32 %139 to i64
  %141 = load i8*, i8** %43, align 8
  %142 = getelementptr inbounds i8, i8* %141, i64 %140
  store i8 %137, i8* %142, align 1
  %143 = load i32, i32* %38, align 4
  %144 = add nsw i32 %143, -1
  %145 = icmp slt i32 %143, 1
  br i1 %145, label %146, label %151

146:                                              ; preds = %132
  %147 = add nsw i32 %144, %143
  %148 = add nsw i32 %143, 4
  %149 = srem i32 %148, 8
  %150 = sub nsw i32 4, %149
  br label %151

151:                                              ; preds = %146, %132
  %152 = phi i32 [ %147, %146 ], [ %144, %132 ]
  %153 = phi i32 [ %150, %146 ], [ 0, %132 ]
  %154 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %25, align 8
  %155 = icmp eq %"class.fxcrt::StringDataTemplate"* %154, null
  br i1 %155, label %160, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %154, i64 0, i32 1
  %158 = load i64, i64* %157, align 8
  %159 = icmp ugt i64 %158, %24
  br i1 %159, label %161, label %160, !prof !4

160:                                              ; preds = %156, %151
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %154, i64 0, i32 3, i64 %24
  %163 = load i32, i32* %162, align 4
  %164 = lshr i32 %163, 3
  %165 = trunc i32 %164 to i8
  %166 = and i8 %165, 1
  %167 = mul nsw i32 %153, %143
  %168 = add nsw i32 %167, %152
  %169 = sext i32 %168 to i64
  %170 = load i8*, i8** %43, align 8
  %171 = getelementptr inbounds i8, i8* %170, i64 %169
  store i8 %166, i8* %171, align 1
  %172 = load i32, i32* %38, align 4
  %173 = add nsw i32 %172, -1
  %174 = icmp slt i32 %172, 1
  br i1 %174, label %175, label %180

175:                                              ; preds = %161
  %176 = add nsw i32 %173, %172
  %177 = add nsw i32 %172, 4
  %178 = srem i32 %177, 8
  %179 = sub nsw i32 5, %178
  br label %180

180:                                              ; preds = %175, %161
  %181 = phi i32 [ %176, %175 ], [ %173, %161 ]
  %182 = phi i32 [ %179, %175 ], [ 1, %161 ]
  %183 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %25, align 8
  %184 = icmp eq %"class.fxcrt::StringDataTemplate"* %183, null
  br i1 %184, label %189, label %185

185:                                              ; preds = %180
  %186 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %183, i64 0, i32 1
  %187 = load i64, i64* %186, align 8
  %188 = icmp ugt i64 %187, %24
  br i1 %188, label %190, label %189, !prof !4

189:                                              ; preds = %185, %180
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %183, i64 0, i32 3, i64 %24
  %192 = load i32, i32* %191, align 4
  %193 = lshr i32 %192, 2
  %194 = trunc i32 %193 to i8
  %195 = and i8 %194, 1
  %196 = mul nsw i32 %182, %172
  %197 = add nsw i32 %196, %181
  %198 = sext i32 %197 to i64
  %199 = load i8*, i8** %43, align 8
  %200 = getelementptr inbounds i8, i8* %199, i64 %198
  store i8 %195, i8* %200, align 1
  %201 = load i32, i32* %38, align 4
  %202 = add nsw i32 %201, -1
  %203 = icmp slt i32 %201, 1
  br i1 %203, label %204, label %209

204:                                              ; preds = %190
  %205 = add nsw i32 %202, %201
  %206 = add nsw i32 %201, 4
  %207 = srem i32 %206, 8
  %208 = sub nsw i32 6, %207
  br label %209

209:                                              ; preds = %204, %190
  %210 = phi i32 [ %205, %204 ], [ %202, %190 ]
  %211 = phi i32 [ %208, %204 ], [ 2, %190 ]
  %212 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %25, align 8
  %213 = icmp eq %"class.fxcrt::StringDataTemplate"* %212, null
  br i1 %213, label %218, label %214

214:                                              ; preds = %209
  %215 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %212, i64 0, i32 1
  %216 = load i64, i64* %215, align 8
  %217 = icmp ugt i64 %216, %24
  br i1 %217, label %219, label %218, !prof !4

218:                                              ; preds = %214, %209
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %212, i64 0, i32 3, i64 %24
  %221 = load i32, i32* %220, align 4
  %222 = lshr i32 %221, 1
  %223 = trunc i32 %222 to i8
  %224 = and i8 %223, 1
  %225 = mul nsw i32 %211, %201
  %226 = add nsw i32 %225, %210
  %227 = sext i32 %226 to i64
  %228 = load i8*, i8** %43, align 8
  %229 = getelementptr inbounds i8, i8* %228, i64 %227
  store i8 %224, i8* %229, align 1
  %230 = load i32, i32* %38, align 4
  %231 = add nsw i32 %230, -1
  %232 = icmp slt i32 %230, 1
  br i1 %232, label %233, label %238

233:                                              ; preds = %219
  %234 = add nsw i32 %231, %230
  %235 = add nsw i32 %230, 4
  %236 = srem i32 %235, 8
  %237 = sub nsw i32 7, %236
  br label %238

238:                                              ; preds = %233, %219
  %239 = phi i32 [ %234, %233 ], [ %231, %219 ]
  %240 = phi i32 [ %237, %233 ], [ 3, %219 ]
  %241 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %25, align 8
  %242 = icmp eq %"class.fxcrt::StringDataTemplate"* %241, null
  br i1 %242, label %247, label %243

243:                                              ; preds = %238
  %244 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %241, i64 0, i32 1
  %245 = load i64, i64* %244, align 8
  %246 = icmp ugt i64 %245, %24
  br i1 %246, label %248, label %247, !prof !4

247:                                              ; preds = %243, %238
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

248:                                              ; preds = %243
  %249 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %241, i64 0, i32 3, i64 %24
  %250 = load i32, i32* %249, align 4
  %251 = trunc i32 %250 to i8
  %252 = and i8 %251, 1
  %253 = mul nsw i32 %240, %230
  %254 = add nsw i32 %253, %239
  %255 = sext i32 %254 to i64
  %256 = load i8*, i8** %43, align 8
  %257 = getelementptr inbounds i8, i8* %256, i64 %255
  store i8 %252, i8* %257, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CBC_DefaultPlacement7corner4Ei(%class.CBC_DefaultPlacement* readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, -1
  %6 = icmp slt i32 %4, 1
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = add nsw i32 %5, %4
  %9 = add nsw i32 %4, 4
  %10 = srem i32 %9, 8
  %11 = sub nsw i32 4, %10
  br label %12

12:                                               ; preds = %2, %7
  %13 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %14 = phi i32 [ %8, %7 ], [ %5, %2 ]
  %15 = sext i32 %1 to i64
  %16 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %16, align 8
  %18 = icmp eq %"class.fxcrt::StringDataTemplate"* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %17, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp ugt i64 %21, %15
  br i1 %22, label %24, label %23, !prof !4

23:                                               ; preds = %19, %12
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %17, i64 0, i32 3, i64 %15
  %26 = load i32, i32* %25, align 4
  %27 = trunc i32 %26 to i8
  %28 = lshr i8 %27, 7
  %29 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = mul nsw i32 %30, %14
  %32 = add nsw i32 %31, %13
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 3, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 %33
  store i8 %28, i8* %36, align 1
  %37 = load i32, i32* %3, align 8
  %38 = add nsw i32 %37, -1
  %39 = load i32, i32* %29, align 4
  %40 = add nsw i32 %39, -1
  %41 = icmp slt i32 %37, 1
  br i1 %41, label %42, label %48

42:                                               ; preds = %24
  %43 = add nsw i32 %38, %37
  %44 = add nsw i32 %37, 4
  %45 = srem i32 %44, 8
  %46 = add i32 %39, 3
  %47 = sub i32 %46, %45
  br label %48

48:                                               ; preds = %42, %24
  %49 = phi i32 [ %47, %42 ], [ %40, %24 ]
  %50 = phi i32 [ %43, %42 ], [ %38, %24 ]
  %51 = icmp slt i32 %49, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = add nsw i32 %49, %39
  %54 = add nsw i32 %39, 4
  %55 = srem i32 %54, 8
  %56 = sub nsw i32 4, %55
  %57 = add i32 %56, %50
  br label %58

58:                                               ; preds = %52, %48
  %59 = phi i32 [ %53, %52 ], [ %49, %48 ]
  %60 = phi i32 [ %57, %52 ], [ %50, %48 ]
  %61 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %16, align 8
  %62 = icmp eq %"class.fxcrt::StringDataTemplate"* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %61, i64 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = icmp ugt i64 %65, %15
  br i1 %66, label %68, label %67, !prof !4

67:                                               ; preds = %63, %58
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %61, i64 0, i32 3, i64 %15
  %70 = load i32, i32* %69, align 4
  %71 = lshr i32 %70, 6
  %72 = trunc i32 %71 to i8
  %73 = and i8 %72, 1
  %74 = mul nsw i32 %60, %39
  %75 = add nsw i32 %74, %59
  %76 = sext i32 %75 to i64
  %77 = load i8*, i8** %34, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 %76
  store i8 %73, i8* %78, align 1
  %79 = load i32, i32* %29, align 4
  %80 = add nsw i32 %79, -3
  %81 = icmp slt i32 %80, 0
  br i1 %81, label %82, label %87

82:                                               ; preds = %68
  %83 = add nsw i32 %80, %79
  %84 = add nsw i32 %79, 4
  %85 = srem i32 %84, 8
  %86 = sub nsw i32 4, %85
  br label %87

87:                                               ; preds = %82, %68
  %88 = phi i32 [ %83, %82 ], [ %80, %68 ]
  %89 = phi i32 [ %86, %82 ], [ 0, %68 ]
  %90 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %16, align 8
  %91 = icmp eq %"class.fxcrt::StringDataTemplate"* %90, null
  br i1 %91, label %96, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %90, i64 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = icmp ugt i64 %94, %15
  br i1 %95, label %97, label %96, !prof !4

96:                                               ; preds = %92, %87
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %90, i64 0, i32 3, i64 %15
  %99 = load i32, i32* %98, align 4
  %100 = lshr i32 %99, 5
  %101 = trunc i32 %100 to i8
  %102 = and i8 %101, 1
  %103 = mul nsw i32 %89, %79
  %104 = add nsw i32 %103, %88
  %105 = sext i32 %104 to i64
  %106 = load i8*, i8** %34, align 8
  %107 = getelementptr inbounds i8, i8* %106, i64 %105
  store i8 %102, i8* %107, align 1
  %108 = load i32, i32* %29, align 4
  %109 = add nsw i32 %108, -2
  %110 = icmp slt i32 %109, 0
  br i1 %110, label %111, label %116

111:                                              ; preds = %97
  %112 = add nsw i32 %109, %108
  %113 = add nsw i32 %108, 4
  %114 = srem i32 %113, 8
  %115 = sub nsw i32 4, %114
  br label %116

116:                                              ; preds = %111, %97
  %117 = phi i32 [ %112, %111 ], [ %109, %97 ]
  %118 = phi i32 [ %115, %111 ], [ 0, %97 ]
  %119 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %16, align 8
  %120 = icmp eq %"class.fxcrt::StringDataTemplate"* %119, null
  br i1 %120, label %125, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %119, i64 0, i32 1
  %123 = load i64, i64* %122, align 8
  %124 = icmp ugt i64 %123, %15
  br i1 %124, label %126, label %125, !prof !4

125:                                              ; preds = %121, %116
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %119, i64 0, i32 3, i64 %15
  %128 = load i32, i32* %127, align 4
  %129 = lshr i32 %128, 4
  %130 = trunc i32 %129 to i8
  %131 = and i8 %130, 1
  %132 = mul nsw i32 %118, %108
  %133 = add nsw i32 %132, %117
  %134 = sext i32 %133 to i64
  %135 = load i8*, i8** %34, align 8
  %136 = getelementptr inbounds i8, i8* %135, i64 %134
  store i8 %131, i8* %136, align 1
  %137 = load i32, i32* %29, align 4
  %138 = add nsw i32 %137, -1
  %139 = icmp slt i32 %137, 1
  br i1 %139, label %140, label %145

140:                                              ; preds = %126
  %141 = add nsw i32 %138, %137
  %142 = add nsw i32 %137, 4
  %143 = srem i32 %142, 8
  %144 = sub nsw i32 4, %143
  br label %145

145:                                              ; preds = %140, %126
  %146 = phi i32 [ %141, %140 ], [ %138, %126 ]
  %147 = phi i32 [ %144, %140 ], [ 0, %126 ]
  %148 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %16, align 8
  %149 = icmp eq %"class.fxcrt::StringDataTemplate"* %148, null
  br i1 %149, label %154, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %148, i64 0, i32 1
  %152 = load i64, i64* %151, align 8
  %153 = icmp ugt i64 %152, %15
  br i1 %153, label %155, label %154, !prof !4

154:                                              ; preds = %150, %145
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %148, i64 0, i32 3, i64 %15
  %157 = load i32, i32* %156, align 4
  %158 = lshr i32 %157, 3
  %159 = trunc i32 %158 to i8
  %160 = and i8 %159, 1
  %161 = mul nsw i32 %147, %137
  %162 = add nsw i32 %161, %146
  %163 = sext i32 %162 to i64
  %164 = load i8*, i8** %34, align 8
  %165 = getelementptr inbounds i8, i8* %164, i64 %163
  store i8 %160, i8* %165, align 1
  %166 = load i32, i32* %29, align 4
  %167 = add nsw i32 %166, -3
  %168 = icmp slt i32 %167, 0
  br i1 %168, label %169, label %174

169:                                              ; preds = %155
  %170 = add nsw i32 %167, %166
  %171 = add nsw i32 %166, 4
  %172 = srem i32 %171, 8
  %173 = sub nsw i32 5, %172
  br label %174

174:                                              ; preds = %169, %155
  %175 = phi i32 [ %170, %169 ], [ %167, %155 ]
  %176 = phi i32 [ %173, %169 ], [ 1, %155 ]
  %177 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %16, align 8
  %178 = icmp eq %"class.fxcrt::StringDataTemplate"* %177, null
  br i1 %178, label %183, label %179

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %177, i64 0, i32 1
  %181 = load i64, i64* %180, align 8
  %182 = icmp ugt i64 %181, %15
  br i1 %182, label %184, label %183, !prof !4

183:                                              ; preds = %179, %174
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %177, i64 0, i32 3, i64 %15
  %186 = load i32, i32* %185, align 4
  %187 = lshr i32 %186, 2
  %188 = trunc i32 %187 to i8
  %189 = and i8 %188, 1
  %190 = mul nsw i32 %176, %166
  %191 = add nsw i32 %190, %175
  %192 = sext i32 %191 to i64
  %193 = load i8*, i8** %34, align 8
  %194 = getelementptr inbounds i8, i8* %193, i64 %192
  store i8 %189, i8* %194, align 1
  %195 = load i32, i32* %29, align 4
  %196 = add nsw i32 %195, -2
  %197 = icmp slt i32 %196, 0
  br i1 %197, label %198, label %203

198:                                              ; preds = %184
  %199 = add nsw i32 %196, %195
  %200 = add nsw i32 %195, 4
  %201 = srem i32 %200, 8
  %202 = sub nsw i32 5, %201
  br label %203

203:                                              ; preds = %198, %184
  %204 = phi i32 [ %199, %198 ], [ %196, %184 ]
  %205 = phi i32 [ %202, %198 ], [ 1, %184 ]
  %206 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %16, align 8
  %207 = icmp eq %"class.fxcrt::StringDataTemplate"* %206, null
  br i1 %207, label %212, label %208

208:                                              ; preds = %203
  %209 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %206, i64 0, i32 1
  %210 = load i64, i64* %209, align 8
  %211 = icmp ugt i64 %210, %15
  br i1 %211, label %213, label %212, !prof !4

212:                                              ; preds = %208, %203
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

213:                                              ; preds = %208
  %214 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %206, i64 0, i32 3, i64 %15
  %215 = load i32, i32* %214, align 4
  %216 = lshr i32 %215, 1
  %217 = trunc i32 %216 to i8
  %218 = and i8 %217, 1
  %219 = mul nsw i32 %205, %195
  %220 = add nsw i32 %219, %204
  %221 = sext i32 %220 to i64
  %222 = load i8*, i8** %34, align 8
  %223 = getelementptr inbounds i8, i8* %222, i64 %221
  store i8 %218, i8* %223, align 1
  %224 = load i32, i32* %29, align 4
  %225 = add nsw i32 %224, -1
  %226 = icmp slt i32 %224, 1
  br i1 %226, label %227, label %232

227:                                              ; preds = %213
  %228 = add nsw i32 %225, %224
  %229 = add nsw i32 %224, 4
  %230 = srem i32 %229, 8
  %231 = sub nsw i32 5, %230
  br label %232

232:                                              ; preds = %227, %213
  %233 = phi i32 [ %228, %227 ], [ %225, %213 ]
  %234 = phi i32 [ %231, %227 ], [ 1, %213 ]
  %235 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %16, align 8
  %236 = icmp eq %"class.fxcrt::StringDataTemplate"* %235, null
  br i1 %236, label %241, label %237

237:                                              ; preds = %232
  %238 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %235, i64 0, i32 1
  %239 = load i64, i64* %238, align 8
  %240 = icmp ugt i64 %239, %15
  br i1 %240, label %242, label %241, !prof !4

241:                                              ; preds = %237, %232
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

242:                                              ; preds = %237
  %243 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %235, i64 0, i32 3, i64 %15
  %244 = load i32, i32* %243, align 4
  %245 = trunc i32 %244 to i8
  %246 = and i8 %245, 1
  %247 = mul nsw i32 %234, %224
  %248 = add nsw i32 %247, %233
  %249 = sext i32 %248 to i64
  %250 = load i8*, i8** %34, align 8
  %251 = getelementptr inbounds i8, i8* %250, i64 %249
  store i8 %246, i8* %251, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CBC_DefaultPlacement4utahEiii(%class.CBC_DefaultPlacement* readonly, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = add nsw i32 %1, -2
  %6 = add nsw i32 %2, -2
  %7 = icmp slt i32 %5, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, %5
  %12 = add nsw i32 %10, 4
  %13 = srem i32 %12, 8
  %14 = add i32 %2, 2
  %15 = sub i32 %14, %13
  br label %16

16:                                               ; preds = %8, %4
  %17 = phi i32 [ %15, %8 ], [ %6, %4 ]
  %18 = phi i32 [ %11, %8 ], [ %5, %4 ]
  %19 = icmp slt i32 %17, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = add nsw i32 %22, %17
  %24 = add nsw i32 %22, 4
  %25 = srem i32 %24, 8
  %26 = add i32 %18, 4
  %27 = sub i32 %26, %25
  br label %28

28:                                               ; preds = %20, %16
  %29 = phi i32 [ %23, %20 ], [ %17, %16 ]
  %30 = phi i32 [ %27, %20 ], [ %18, %16 ]
  %31 = sext i32 %3 to i64
  %32 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %32, align 8
  %34 = icmp eq %"class.fxcrt::StringDataTemplate"* %33, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %33, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = icmp ugt i64 %37, %31
  br i1 %38, label %40, label %39, !prof !4

39:                                               ; preds = %35, %28
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %33, i64 0, i32 3, i64 %31
  %42 = load i32, i32* %41, align 4
  %43 = trunc i32 %42 to i8
  %44 = lshr i8 %43, 7
  %45 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = mul nsw i32 %46, %30
  %48 = add nsw i32 %47, %29
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 3, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %49
  store i8 %44, i8* %52, align 1
  %53 = add nsw i32 %2, -1
  br i1 %7, label %54, label %62

54:                                               ; preds = %40
  %55 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = add nsw i32 %56, %5
  %58 = add nsw i32 %56, 4
  %59 = srem i32 %58, 8
  %60 = add i32 %2, 3
  %61 = sub i32 %60, %59
  br label %62

62:                                               ; preds = %54, %40
  %63 = phi i32 [ %61, %54 ], [ %53, %40 ]
  %64 = phi i32 [ %57, %54 ], [ %5, %40 ]
  %65 = icmp slt i32 %63, 0
  br i1 %65, label %66, label %73

66:                                               ; preds = %62
  %67 = load i32, i32* %45, align 4
  %68 = add nsw i32 %67, %63
  %69 = add nsw i32 %67, 4
  %70 = srem i32 %69, 8
  %71 = add i32 %64, 4
  %72 = sub i32 %71, %70
  br label %73

73:                                               ; preds = %66, %62
  %74 = phi i32 [ %68, %66 ], [ %63, %62 ]
  %75 = phi i32 [ %72, %66 ], [ %64, %62 ]
  %76 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %32, align 8
  %77 = icmp eq %"class.fxcrt::StringDataTemplate"* %76, null
  br i1 %77, label %82, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %76, i64 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = icmp ugt i64 %80, %31
  br i1 %81, label %83, label %82, !prof !4

82:                                               ; preds = %78, %73
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %76, i64 0, i32 3, i64 %31
  %85 = load i32, i32* %84, align 4
  %86 = lshr i32 %85, 6
  %87 = trunc i32 %86 to i8
  %88 = and i8 %87, 1
  %89 = load i32, i32* %45, align 4
  %90 = mul nsw i32 %89, %75
  %91 = add nsw i32 %90, %74
  %92 = sext i32 %91 to i64
  %93 = load i8*, i8** %50, align 8
  %94 = getelementptr inbounds i8, i8* %93, i64 %92
  store i8 %88, i8* %94, align 1
  %95 = add nsw i32 %1, -1
  %96 = icmp slt i32 %1, 1
  br i1 %96, label %97, label %105

97:                                               ; preds = %83
  %98 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = add nsw i32 %99, %95
  %101 = add nsw i32 %99, 4
  %102 = srem i32 %101, 8
  %103 = add i32 %2, 2
  %104 = sub i32 %103, %102
  br label %105

105:                                              ; preds = %97, %83
  %106 = phi i32 [ %104, %97 ], [ %6, %83 ]
  %107 = phi i32 [ %100, %97 ], [ %95, %83 ]
  %108 = icmp slt i32 %106, 0
  br i1 %108, label %109, label %116

109:                                              ; preds = %105
  %110 = load i32, i32* %45, align 4
  %111 = add nsw i32 %110, %106
  %112 = add nsw i32 %110, 4
  %113 = srem i32 %112, 8
  %114 = add i32 %107, 4
  %115 = sub i32 %114, %113
  br label %116

116:                                              ; preds = %109, %105
  %117 = phi i32 [ %111, %109 ], [ %106, %105 ]
  %118 = phi i32 [ %115, %109 ], [ %107, %105 ]
  %119 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %32, align 8
  %120 = icmp eq %"class.fxcrt::StringDataTemplate"* %119, null
  br i1 %120, label %125, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %119, i64 0, i32 1
  %123 = load i64, i64* %122, align 8
  %124 = icmp ugt i64 %123, %31
  br i1 %124, label %126, label %125, !prof !4

125:                                              ; preds = %121, %116
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %119, i64 0, i32 3, i64 %31
  %128 = load i32, i32* %127, align 4
  %129 = lshr i32 %128, 5
  %130 = trunc i32 %129 to i8
  %131 = and i8 %130, 1
  %132 = load i32, i32* %45, align 4
  %133 = mul nsw i32 %132, %118
  %134 = add nsw i32 %133, %117
  %135 = sext i32 %134 to i64
  %136 = load i8*, i8** %50, align 8
  %137 = getelementptr inbounds i8, i8* %136, i64 %135
  store i8 %131, i8* %137, align 1
  br i1 %96, label %138, label %146

138:                                              ; preds = %126
  %139 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 1
  %140 = load i32, i32* %139, align 8
  %141 = add nsw i32 %140, %95
  %142 = add nsw i32 %140, 4
  %143 = srem i32 %142, 8
  %144 = add i32 %2, 3
  %145 = sub i32 %144, %143
  br label %146

146:                                              ; preds = %138, %126
  %147 = phi i32 [ %145, %138 ], [ %53, %126 ]
  %148 = phi i32 [ %141, %138 ], [ %95, %126 ]
  %149 = icmp slt i32 %147, 0
  br i1 %149, label %150, label %157

150:                                              ; preds = %146
  %151 = load i32, i32* %45, align 4
  %152 = add nsw i32 %151, %147
  %153 = add nsw i32 %151, 4
  %154 = srem i32 %153, 8
  %155 = add i32 %148, 4
  %156 = sub i32 %155, %154
  br label %157

157:                                              ; preds = %150, %146
  %158 = phi i32 [ %152, %150 ], [ %147, %146 ]
  %159 = phi i32 [ %156, %150 ], [ %148, %146 ]
  %160 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %32, align 8
  %161 = icmp eq %"class.fxcrt::StringDataTemplate"* %160, null
  br i1 %161, label %166, label %162

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %160, i64 0, i32 1
  %164 = load i64, i64* %163, align 8
  %165 = icmp ugt i64 %164, %31
  br i1 %165, label %167, label %166, !prof !4

166:                                              ; preds = %162, %157
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %160, i64 0, i32 3, i64 %31
  %169 = load i32, i32* %168, align 4
  %170 = lshr i32 %169, 4
  %171 = trunc i32 %170 to i8
  %172 = and i8 %171, 1
  %173 = load i32, i32* %45, align 4
  %174 = mul nsw i32 %173, %159
  %175 = add nsw i32 %174, %158
  %176 = sext i32 %175 to i64
  %177 = load i8*, i8** %50, align 8
  %178 = getelementptr inbounds i8, i8* %177, i64 %176
  store i8 %172, i8* %178, align 1
  br i1 %96, label %179, label %187

179:                                              ; preds = %167
  %180 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 1
  %181 = load i32, i32* %180, align 8
  %182 = add nsw i32 %181, %95
  %183 = add nsw i32 %181, 4
  %184 = srem i32 %183, 8
  %185 = add i32 %2, 4
  %186 = sub i32 %185, %184
  br label %187

187:                                              ; preds = %179, %167
  %188 = phi i32 [ %186, %179 ], [ %2, %167 ]
  %189 = phi i32 [ %182, %179 ], [ %95, %167 ]
  %190 = icmp slt i32 %188, 0
  br i1 %190, label %191, label %198

191:                                              ; preds = %187
  %192 = load i32, i32* %45, align 4
  %193 = add nsw i32 %192, %188
  %194 = add nsw i32 %192, 4
  %195 = srem i32 %194, 8
  %196 = add i32 %189, 4
  %197 = sub i32 %196, %195
  br label %198

198:                                              ; preds = %191, %187
  %199 = phi i32 [ %193, %191 ], [ %188, %187 ]
  %200 = phi i32 [ %197, %191 ], [ %189, %187 ]
  %201 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %32, align 8
  %202 = icmp eq %"class.fxcrt::StringDataTemplate"* %201, null
  br i1 %202, label %207, label %203

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %201, i64 0, i32 1
  %205 = load i64, i64* %204, align 8
  %206 = icmp ugt i64 %205, %31
  br i1 %206, label %208, label %207, !prof !4

207:                                              ; preds = %203, %198
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

208:                                              ; preds = %203
  %209 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %201, i64 0, i32 3, i64 %31
  %210 = load i32, i32* %209, align 4
  %211 = lshr i32 %210, 3
  %212 = trunc i32 %211 to i8
  %213 = and i8 %212, 1
  %214 = load i32, i32* %45, align 4
  %215 = mul nsw i32 %214, %200
  %216 = add nsw i32 %215, %199
  %217 = sext i32 %216 to i64
  %218 = load i8*, i8** %50, align 8
  %219 = getelementptr inbounds i8, i8* %218, i64 %217
  store i8 %213, i8* %219, align 1
  %220 = icmp slt i32 %1, 0
  br i1 %220, label %221, label %229

221:                                              ; preds = %208
  %222 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 1
  %223 = load i32, i32* %222, align 8
  %224 = add nsw i32 %223, %1
  %225 = add nsw i32 %223, 4
  %226 = srem i32 %225, 8
  %227 = add i32 %2, 2
  %228 = sub i32 %227, %226
  br label %229

229:                                              ; preds = %221, %208
  %230 = phi i32 [ %228, %221 ], [ %6, %208 ]
  %231 = phi i32 [ %224, %221 ], [ %1, %208 ]
  %232 = icmp slt i32 %230, 0
  br i1 %232, label %233, label %240

233:                                              ; preds = %229
  %234 = load i32, i32* %45, align 4
  %235 = add nsw i32 %234, %230
  %236 = add nsw i32 %234, 4
  %237 = srem i32 %236, 8
  %238 = add i32 %231, 4
  %239 = sub i32 %238, %237
  br label %240

240:                                              ; preds = %233, %229
  %241 = phi i32 [ %235, %233 ], [ %230, %229 ]
  %242 = phi i32 [ %239, %233 ], [ %231, %229 ]
  %243 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %32, align 8
  %244 = icmp eq %"class.fxcrt::StringDataTemplate"* %243, null
  br i1 %244, label %249, label %245

245:                                              ; preds = %240
  %246 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %243, i64 0, i32 1
  %247 = load i64, i64* %246, align 8
  %248 = icmp ugt i64 %247, %31
  br i1 %248, label %250, label %249, !prof !4

249:                                              ; preds = %245, %240
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

250:                                              ; preds = %245
  %251 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %243, i64 0, i32 3, i64 %31
  %252 = load i32, i32* %251, align 4
  %253 = lshr i32 %252, 2
  %254 = trunc i32 %253 to i8
  %255 = and i8 %254, 1
  %256 = load i32, i32* %45, align 4
  %257 = mul nsw i32 %256, %242
  %258 = add nsw i32 %257, %241
  %259 = sext i32 %258 to i64
  %260 = load i8*, i8** %50, align 8
  %261 = getelementptr inbounds i8, i8* %260, i64 %259
  store i8 %255, i8* %261, align 1
  br i1 %220, label %262, label %270

262:                                              ; preds = %250
  %263 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 1
  %264 = load i32, i32* %263, align 8
  %265 = add nsw i32 %264, %1
  %266 = add nsw i32 %264, 4
  %267 = srem i32 %266, 8
  %268 = add i32 %2, 3
  %269 = sub i32 %268, %267
  br label %270

270:                                              ; preds = %262, %250
  %271 = phi i32 [ %269, %262 ], [ %53, %250 ]
  %272 = phi i32 [ %265, %262 ], [ %1, %250 ]
  %273 = icmp slt i32 %271, 0
  br i1 %273, label %274, label %281

274:                                              ; preds = %270
  %275 = load i32, i32* %45, align 4
  %276 = add nsw i32 %275, %271
  %277 = add nsw i32 %275, 4
  %278 = srem i32 %277, 8
  %279 = add i32 %272, 4
  %280 = sub i32 %279, %278
  br label %281

281:                                              ; preds = %274, %270
  %282 = phi i32 [ %276, %274 ], [ %271, %270 ]
  %283 = phi i32 [ %280, %274 ], [ %272, %270 ]
  %284 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %32, align 8
  %285 = icmp eq %"class.fxcrt::StringDataTemplate"* %284, null
  br i1 %285, label %290, label %286

286:                                              ; preds = %281
  %287 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %284, i64 0, i32 1
  %288 = load i64, i64* %287, align 8
  %289 = icmp ugt i64 %288, %31
  br i1 %289, label %291, label %290, !prof !4

290:                                              ; preds = %286, %281
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

291:                                              ; preds = %286
  %292 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %284, i64 0, i32 3, i64 %31
  %293 = load i32, i32* %292, align 4
  %294 = lshr i32 %293, 1
  %295 = trunc i32 %294 to i8
  %296 = and i8 %295, 1
  %297 = load i32, i32* %45, align 4
  %298 = mul nsw i32 %297, %283
  %299 = add nsw i32 %298, %282
  %300 = sext i32 %299 to i64
  %301 = load i8*, i8** %50, align 8
  %302 = getelementptr inbounds i8, i8* %301, i64 %300
  store i8 %296, i8* %302, align 1
  br i1 %220, label %303, label %311

303:                                              ; preds = %291
  %304 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 1
  %305 = load i32, i32* %304, align 8
  %306 = add nsw i32 %305, %1
  %307 = add nsw i32 %305, 4
  %308 = srem i32 %307, 8
  %309 = add i32 %2, 4
  %310 = sub i32 %309, %308
  br label %311

311:                                              ; preds = %303, %291
  %312 = phi i32 [ %310, %303 ], [ %2, %291 ]
  %313 = phi i32 [ %306, %303 ], [ %1, %291 ]
  %314 = icmp slt i32 %312, 0
  br i1 %314, label %315, label %322

315:                                              ; preds = %311
  %316 = load i32, i32* %45, align 4
  %317 = add nsw i32 %316, %312
  %318 = add nsw i32 %316, 4
  %319 = srem i32 %318, 8
  %320 = add i32 %313, 4
  %321 = sub i32 %320, %319
  br label %322

322:                                              ; preds = %315, %311
  %323 = phi i32 [ %317, %315 ], [ %312, %311 ]
  %324 = phi i32 [ %321, %315 ], [ %313, %311 ]
  %325 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %32, align 8
  %326 = icmp eq %"class.fxcrt::StringDataTemplate"* %325, null
  br i1 %326, label %331, label %327

327:                                              ; preds = %322
  %328 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %325, i64 0, i32 1
  %329 = load i64, i64* %328, align 8
  %330 = icmp ugt i64 %329, %31
  br i1 %330, label %332, label %331, !prof !4

331:                                              ; preds = %327, %322
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

332:                                              ; preds = %327
  %333 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %325, i64 0, i32 3, i64 %31
  %334 = load i32, i32* %333, align 4
  %335 = trunc i32 %334 to i8
  %336 = and i8 %335, 1
  %337 = load i32, i32* %45, align 4
  %338 = mul nsw i32 %337, %324
  %339 = add nsw i32 %338, %323
  %340 = sext i32 %339 to i64
  %341 = load i8*, i8** %50, align 8
  %342 = getelementptr inbounds i8, i8* %341, i64 %340
  store i8 %336, i8* %342, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CBC_DefaultPlacement6moduleEiiii(%class.CBC_DefaultPlacement* nocapture readonly, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = icmp slt i32 %1, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %5
  %8 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, %1
  %11 = add nsw i32 %9, 4
  %12 = srem i32 %11, 8
  %13 = add i32 %2, 4
  %14 = sub i32 %13, %12
  br label %15

15:                                               ; preds = %7, %5
  %16 = phi i32 [ %14, %7 ], [ %2, %5 ]
  %17 = phi i32 [ %10, %7 ], [ %1, %5 ]
  %18 = icmp slt i32 %16, 0
  br i1 %18, label %19, label %27

19:                                               ; preds = %15
  %20 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = add nsw i32 %21, %16
  %23 = add nsw i32 %21, 4
  %24 = srem i32 %23, 8
  %25 = add i32 %17, 4
  %26 = sub i32 %25, %24
  br label %27

27:                                               ; preds = %19, %15
  %28 = phi i32 [ %22, %19 ], [ %16, %15 ]
  %29 = phi i32 [ %26, %19 ], [ %17, %15 ]
  %30 = sext i32 %3 to i64
  %31 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %31, align 8
  %33 = icmp eq %"class.fxcrt::StringDataTemplate"* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %32, i64 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = icmp ugt i64 %36, %30
  br i1 %37, label %39, label %38, !prof !4

38:                                               ; preds = %34, %27
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %32, i64 0, i32 3, i64 %30
  %41 = load i32, i32* %40, align 4
  %42 = sub nsw i32 8, %4
  %43 = shl i32 1, %42
  %44 = and i32 %41, %43
  %45 = icmp ne i32 %44, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = mul nsw i32 %48, %29
  %50 = add nsw i32 %49, %28
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds %class.CBC_DefaultPlacement, %class.CBC_DefaultPlacement* %0, i64 0, i32 3, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 %51
  store i8 %46, i8* %54, align 1
  ret void
}

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIh16FxAllocAllocatorIhEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #8
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %178

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #9
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %39, i64 1) #8
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #8
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = ptrtoint i8* %54 to i64
  %56 = load i8*, i8** %6, align 8
  %57 = ptrtoint i8* %56 to i64
  %58 = icmp eq i8* %56, %54
  br i1 %58, label %172, label %59

59:                                               ; preds = %41
  %60 = ptrtoint i8* %56 to i64
  %61 = sub i64 %60, %55
  %62 = icmp ult i64 %61, 16
  br i1 %62, label %158, label %63

63:                                               ; preds = %59
  %64 = sub i64 %8, %57
  %65 = sub i64 %64, %24
  %66 = getelementptr i8, i8* %54, i64 %65
  %67 = ptrtoint i8* %66 to i64
  %68 = getelementptr i8, i8* %43, i64 %67
  %69 = icmp ult i8* %68, %56
  %70 = icmp ult i8* %54, %44
  %71 = and i1 %69, %70
  br i1 %71, label %158, label %72

72:                                               ; preds = %63
  %73 = and i64 %61, -16
  %74 = sub i64 0, %73
  %75 = getelementptr i8, i8* %44, i64 %74
  %76 = sub i64 0, %73
  %77 = getelementptr i8, i8* %56, i64 %76
  %78 = add i64 %73, -16
  %79 = lshr exact i64 %78, 4
  %80 = add nuw nsw i64 %79, 1
  %81 = and i64 %80, 3
  %82 = icmp ult i64 %78, 48
  br i1 %82, label %135, label %83

83:                                               ; preds = %72
  %84 = sub nsw i64 %80, %81
  %85 = getelementptr i8, i8* %44, i64 -1
  %86 = getelementptr inbounds i8, i8* %85, i64 -8
  %87 = getelementptr inbounds i8, i8* %56, i64 -16
  %88 = getelementptr inbounds i8, i8* %86, i64 -7
  %89 = getelementptr i8, i8* %44, i64 -1
  %90 = getelementptr inbounds i8, i8* %89, i64 -8
  %91 = getelementptr inbounds i8, i8* %56, i64 -16
  %92 = getelementptr inbounds i8, i8* %90, i64 -7
  %93 = getelementptr i8, i8* %44, i64 -1
  %94 = getelementptr inbounds i8, i8* %93, i64 -8
  %95 = getelementptr inbounds i8, i8* %56, i64 -16
  %96 = getelementptr inbounds i8, i8* %94, i64 -7
  %97 = getelementptr i8, i8* %44, i64 -1
  %98 = getelementptr inbounds i8, i8* %97, i64 -8
  %99 = getelementptr inbounds i8, i8* %56, i64 -16
  %100 = getelementptr inbounds i8, i8* %98, i64 -7
  br label %101

101:                                              ; preds = %101, %83
  %102 = phi i64 [ 0, %83 ], [ %132, %101 ]
  %103 = phi i64 [ %84, %83 ], [ %133, %101 ]
  %104 = sub i64 0, %102
  %105 = sub i64 0, %102
  %106 = getelementptr inbounds i8, i8* %87, i64 %105
  %107 = bitcast i8* %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 1, !alias.scope !7
  %109 = getelementptr inbounds i8, i8* %88, i64 %104
  %110 = bitcast i8* %109 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %110, align 1, !alias.scope !10, !noalias !7
  %111 = sub nuw nsw i64 -16, %102
  %112 = sub nuw nsw i64 -16, %102
  %113 = getelementptr inbounds i8, i8* %91, i64 %112
  %114 = bitcast i8* %113 to <2 x i64>*
  %115 = load <2 x i64>, <2 x i64>* %114, align 1, !alias.scope !7
  %116 = getelementptr inbounds i8, i8* %92, i64 %111
  %117 = bitcast i8* %116 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %117, align 1, !alias.scope !10, !noalias !7
  %118 = sub nuw nsw i64 -32, %102
  %119 = sub nuw nsw i64 -32, %102
  %120 = getelementptr inbounds i8, i8* %95, i64 %119
  %121 = bitcast i8* %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 1, !alias.scope !7
  %123 = getelementptr inbounds i8, i8* %96, i64 %118
  %124 = bitcast i8* %123 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %124, align 1, !alias.scope !10, !noalias !7
  %125 = sub nuw nsw i64 -48, %102
  %126 = sub nuw nsw i64 -48, %102
  %127 = getelementptr inbounds i8, i8* %99, i64 %126
  %128 = bitcast i8* %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 1, !alias.scope !7
  %130 = getelementptr inbounds i8, i8* %100, i64 %125
  %131 = bitcast i8* %130 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %131, align 1, !alias.scope !10, !noalias !7
  %132 = add i64 %102, 64
  %133 = add i64 %103, -4
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %101, !llvm.loop !12

135:                                              ; preds = %101, %72
  %136 = phi i64 [ 0, %72 ], [ %132, %101 ]
  %137 = icmp eq i64 %81, 0
  br i1 %137, label %156, label %138

138:                                              ; preds = %135
  %139 = getelementptr i8, i8* %44, i64 -1
  %140 = getelementptr inbounds i8, i8* %139, i64 -8
  %141 = getelementptr inbounds i8, i8* %56, i64 -16
  %142 = getelementptr inbounds i8, i8* %140, i64 -7
  br label %143

143:                                              ; preds = %143, %138
  %144 = phi i64 [ %136, %138 ], [ %153, %143 ]
  %145 = phi i64 [ %81, %138 ], [ %154, %143 ]
  %146 = sub i64 0, %144
  %147 = sub i64 0, %144
  %148 = getelementptr inbounds i8, i8* %141, i64 %147
  %149 = bitcast i8* %148 to <2 x i64>*
  %150 = load <2 x i64>, <2 x i64>* %149, align 1, !alias.scope !7
  %151 = getelementptr inbounds i8, i8* %142, i64 %146
  %152 = bitcast i8* %151 to <2 x i64>*
  store <2 x i64> %150, <2 x i64>* %152, align 1, !alias.scope !10, !noalias !7
  %153 = add i64 %144, 16
  %154 = add i64 %145, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %143, !llvm.loop !14

156:                                              ; preds = %143, %135
  %157 = icmp eq i64 %61, %73
  br i1 %157, label %168, label %158

158:                                              ; preds = %156, %63, %59
  %159 = phi i8* [ %44, %63 ], [ %44, %59 ], [ %75, %156 ]
  %160 = phi i8* [ %56, %63 ], [ %56, %59 ], [ %77, %156 ]
  br label %161

161:                                              ; preds = %158, %161
  %162 = phi i8* [ %164, %161 ], [ %159, %158 ]
  %163 = phi i8* [ %165, %161 ], [ %160, %158 ]
  %164 = getelementptr inbounds i8, i8* %162, i64 -1
  %165 = getelementptr inbounds i8, i8* %163, i64 -1
  %166 = load i8, i8* %165, align 1
  store i8 %166, i8* %164, align 1
  %167 = icmp eq i8* %165, %54
  br i1 %167, label %168, label %161, !llvm.loop !15

168:                                              ; preds = %161, %156
  %169 = phi i8* [ %75, %156 ], [ %164, %161 ]
  %170 = ptrtoint i8* %169 to i64
  %171 = load i64, i64* %23, align 8
  br label %172

172:                                              ; preds = %41, %168
  %173 = phi i64 [ %170, %168 ], [ %45, %41 ]
  %174 = phi i64 [ %171, %168 ], [ %55, %41 ]
  store i64 %173, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %178, label %176

176:                                              ; preds = %172
  %177 = inttoptr i64 %174 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %177) #8
  br label %178

178:                                              ; preds = %176, %172, %20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64, i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{i32 -2143825004}
!6 = !{i32 -2143824983}
!7 = !{!8}
!8 = distinct !{!8, !9}
!9 = distinct !{!9, !"LVerDomain"}
!10 = !{!11}
!11 = distinct !{!11, !9}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.isvectorized", i32 1}
!14 = distinct !{!14, !3}
!15 = distinct !{!15, !13}
