; ModuleID = '../../third_party/skia/src/pathops/SkOpContour.cpp'
source_filename = "../../third_party/skia/src/pathops/SkOpContour.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkOpContour = type <{ %class.SkOpGlobalState*, %class.SkOpSegment, %class.SkOpSegment*, %class.SkOpContour*, %struct.SkPathOpsBounds, i32, i32, i32, i8, i8, i8, i8, i8, [7 x i8] }>
%class.SkOpGlobalState = type <{ %class.SkArenaAlloc*, %class.SkOpCoincidence*, %class.SkOpContourHead*, i32, i8, i8, i8, i8 }>
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%class.SkOpCoincidence = type opaque
%class.SkOpContourHead = type { %class.SkOpContour.base, [7 x i8] }
%class.SkOpContour.base = type <{ %class.SkOpGlobalState*, %class.SkOpSegment, %class.SkOpSegment*, %class.SkOpContour*, %struct.SkPathOpsBounds, i32, i32, i32, i8, i8, i8, i8, i8 }>
%class.SkOpSegment = type <{ %class.SkOpSpan, %class.SkOpSpanBase, %class.SkOpContour*, %class.SkOpSegment*, %class.SkOpSegment*, %struct.SkPoint*, %struct.SkPathOpsBounds, float, i32, i32, i32, i8, [7 x i8] }>
%class.SkOpSpan = type <{ %class.SkOpSpanBase.base, [2 x i8], %class.SkOpSpan*, %class.SkOpAngle*, %class.SkOpSpanBase*, i32, i32, i32, i32, i32, i8, i8, [2 x i8] }>
%class.SkOpSpanBase.base = type <{ %class.SkOpPtT, %class.SkOpSegment*, %class.SkOpSpanBase*, %class.SkOpAngle*, %class.SkOpSpan*, i32, i8, i8 }>
%class.SkOpPtT = type <{ double, %struct.SkPoint, %class.SkOpSpanBase*, %class.SkOpPtT*, i8, i8, i8, [5 x i8] }>
%struct.SkPoint = type { float, float }
%class.SkOpAngle = type <{ %struct.SkDCurve, %class.SkDCurveSweep, double, %class.SkLineParameters, %class.SkOpAngle*, %class.SkOpSpanBase*, %class.SkOpSpanBase*, %class.SkOpSpanBase*, %class.SkOpSpanBase*, i32, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%struct.SkDCurve = type { %union.anon }
%union.anon = type { %struct.SkDCubic }
%struct.SkDCubic = type { [4 x %struct.SkDPoint] }
%struct.SkDPoint = type { double, double }
%class.SkDCurveSweep = type <{ %struct.SkDCurve, [2 x %struct.SkDVector], i8, i8, [6 x i8] }>
%struct.SkDVector = type { double, double }
%class.SkLineParameters = type { double, double, double }
%class.SkOpSpanBase = type <{ %class.SkOpPtT, %class.SkOpSegment*, %class.SkOpSpanBase*, %class.SkOpAngle*, %class.SkOpSpan*, i32, i8, i8, [2 x i8] }>
%struct.SkPathOpsBounds = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%class.SkPathWriter = type { %class.SkPath, %class.SkTArray, %class.SkTDArray.13, %class.SkPath*, [2 x %class.SkOpPtT*], %class.SkOpPtT* }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%class.SkTArray = type { %class.SkPath*, i64 }
%class.SkTDArray.13 = type { %class.SkOpPtT**, i32, i32 }
%class.SkOpContourBuilder = type <{ %class.SkOpContour*, [2 x %struct.SkPoint], i8, [7 x i8] }>

$_ZN11SkOpContour8addConicEP7SkPointf = comdat any

$_ZN11SkOpContour7addQuadEP7SkPoint = comdat any

$_ZN11SkOpContour7addLineEP7SkPoint = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11SkOpContour6toPathEP12SkPathWriter(%class.SkOpContour*, %class.SkPathWriter*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %0, i64 0, i32 1
  br label %8

8:                                                ; preds = %8, %6
  %9 = phi %class.SkOpSegment* [ %7, %6 ], [ %14, %8 ]
  %10 = bitcast %class.SkOpSegment* %9 to %class.SkOpSpanBase*
  %11 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %9, i64 0, i32 1
  %12 = tail call zeroext i1 @_ZNK11SkOpSegment10addCurveToEPK12SkOpSpanBaseS2_P12SkPathWriter(%class.SkOpSegment* %9, %class.SkOpSpanBase* %10, %class.SkOpSpanBase* %11, %class.SkPathWriter* %1) #3
  %13 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %9, i64 0, i32 3
  %14 = load %class.SkOpSegment*, %class.SkOpSegment** %13, align 8
  %15 = icmp eq %class.SkOpSegment* %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8
  tail call void @_ZN12SkPathWriter13finishContourEv(%class.SkPathWriter* %1) #3
  tail call void @_ZN12SkPathWriter8assembleEv(%class.SkPathWriter* %1) #3
  br label %17

17:                                               ; preds = %2, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK11SkOpSegment10addCurveToEPK12SkOpSpanBaseS2_P12SkPathWriter(%class.SkOpSegment*, %class.SkOpSpanBase*, %class.SkOpSpanBase*, %class.SkPathWriter*) local_unnamed_addr #2

declare void @_ZN12SkPathWriter13finishContourEv(%class.SkPathWriter*) local_unnamed_addr #2

declare void @_ZN12SkPathWriter8assembleEv(%class.SkPathWriter*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11SkOpContour13toReversePathEP12SkPathWriter(%class.SkOpContour* nocapture readonly, %class.SkPathWriter*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %0, i64 0, i32 2
  %4 = load %class.SkOpSegment*, %class.SkOpSegment** %3, align 8
  br label %5

5:                                                ; preds = %5, %2
  %6 = phi %class.SkOpSegment* [ %4, %2 ], [ %11, %5 ]
  %7 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %6, i64 0, i32 1
  %8 = bitcast %class.SkOpSegment* %6 to %class.SkOpSpanBase*
  %9 = tail call zeroext i1 @_ZNK11SkOpSegment10addCurveToEPK12SkOpSpanBaseS2_P12SkPathWriter(%class.SkOpSegment* %6, %class.SkOpSpanBase* %7, %class.SkOpSpanBase* %8, %class.SkPathWriter* %1) #3
  %10 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %6, i64 0, i32 4
  %11 = load %class.SkOpSegment*, %class.SkOpSegment** %10, align 8
  %12 = icmp eq %class.SkOpSegment* %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5
  tail call void @_ZN12SkPathWriter13finishContourEv(%class.SkPathWriter* %1) #3
  tail call void @_ZN12SkPathWriter8assembleEv(%class.SkPathWriter* %1) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkOpSpan* @_ZN11SkOpContour10undoneSpanEv(%class.SkOpContour*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %0, i64 0, i32 1
  br label %3

3:                                                ; preds = %12, %1
  %4 = phi %class.SkOpSegment* [ %2, %1 ], [ %14, %12 ]
  %5 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %4, i64 0, i32 9
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %4, i64 0, i32 8
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = tail call %class.SkOpSpan* @_ZN11SkOpSegment10undoneSpanEv(%class.SkOpSegment* %4) #3
  br label %18

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %4, i64 0, i32 3
  %14 = load %class.SkOpSegment*, %class.SkOpSegment** %13, align 8
  %15 = icmp eq %class.SkOpSegment* %14, null
  br i1 %15, label %16, label %3

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %0, i64 0, i32 8
  store i8 1, i8* %17, align 4
  br label %18

18:                                               ; preds = %16, %10
  %19 = phi %class.SkOpSpan* [ null, %16 ], [ %11, %10 ]
  ret %class.SkOpSpan* %19
}

declare %class.SkOpSpan* @_ZN11SkOpSegment10undoneSpanEv(%class.SkOpSegment*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkOpContourBuilder8addConicEP7SkPointf(%class.SkOpContourBuilder* nocapture, %struct.SkPoint*, float) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %40, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 0
  %9 = load %class.SkOpContour*, %class.SkOpContour** %8, align 8
  %10 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %9, i64 0, i32 0
  %11 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %10, align 8
  %12 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %11, i64 0, i32 0
  %13 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %12, align 8
  %14 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %13, i64 0, i32 1
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 0, %16
  %18 = and i64 %17, 3
  %19 = or i64 %18, 16
  %20 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %13, i64 0, i32 2
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %22, %16
  %24 = icmp ugt i64 %19, %23
  br i1 %24, label %25, label %29

25:                                               ; preds = %7
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %13, i32 16, i32 4) #3
  %26 = load i64, i64* %15, align 8
  %27 = sub i64 0, %26
  %28 = and i64 %27, 3
  br label %29

29:                                               ; preds = %25, %7
  %30 = phi i64 [ %26, %25 ], [ %16, %7 ]
  %31 = phi i64 [ %28, %25 ], [ %18, %7 ]
  %32 = inttoptr i64 %30 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 %31
  %34 = getelementptr inbounds i8, i8* %33, i64 16
  store i8* %34, i8** %14, align 8
  %35 = bitcast i8* %33 to %struct.SkPoint*
  %36 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 1, i64 0
  %37 = bitcast %struct.SkPoint* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 8 %37, i64 16, i1 false) #3
  %38 = load %class.SkOpContour*, %class.SkOpContour** %8, align 8
  %39 = tail call %class.SkOpSegment* @_ZN11SkOpContour7addLineEP7SkPoint(%class.SkOpContour* %38, %struct.SkPoint* %35) #3
  store i8 0, i8* %4, align 8
  br label %40

40:                                               ; preds = %3, %29
  %41 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 0
  %42 = load %class.SkOpContour*, %class.SkOpContour** %41, align 8
  tail call void @_ZN11SkOpContour8addConicEP7SkPointf(%class.SkOpContour* %42, %struct.SkPoint* %1, float %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkOpContourBuilder5flushEv(%class.SkOpContourBuilder* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %38, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 0
  %7 = load %class.SkOpContour*, %class.SkOpContour** %6, align 8
  %8 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %7, i64 0, i32 0
  %9 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %8, align 8
  %10 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %9, i64 0, i32 0
  %11 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %10, align 8
  %12 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %11, i64 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 0, %14
  %16 = and i64 %15, 3
  %17 = or i64 %16, 16
  %18 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %11, i64 0, i32 2
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %14
  %22 = icmp ugt i64 %17, %21
  br i1 %22, label %23, label %27

23:                                               ; preds = %5
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %11, i32 16, i32 4) #3
  %24 = load i64, i64* %13, align 8
  %25 = sub i64 0, %24
  %26 = and i64 %25, 3
  br label %27

27:                                               ; preds = %5, %23
  %28 = phi i64 [ %24, %23 ], [ %14, %5 ]
  %29 = phi i64 [ %26, %23 ], [ %16, %5 ]
  %30 = inttoptr i64 %28 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 %29
  %32 = getelementptr inbounds i8, i8* %31, i64 16
  store i8* %32, i8** %12, align 8
  %33 = bitcast i8* %31 to %struct.SkPoint*
  %34 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 1, i64 0
  %35 = bitcast %struct.SkPoint* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 8 %35, i64 16, i1 false)
  %36 = load %class.SkOpContour*, %class.SkOpContour** %6, align 8
  %37 = tail call %class.SkOpSegment* @_ZN11SkOpContour7addLineEP7SkPoint(%class.SkOpContour* %36, %struct.SkPoint* %33)
  store i8 0, i8* %2, align 8
  br label %38

38:                                               ; preds = %1, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11SkOpContour8addConicEP7SkPointf(%class.SkOpContour*, %struct.SkPoint*, float) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %struct.SkDCurve, align 16
  %5 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 4
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* %5, align 4
  %8 = icmp eq i32 %6, 0
  br i1 %8, label %36, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %0, i64 0, i32 0
  %11 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %10, align 8
  %12 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %11, i64 0, i32 0
  %13 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %12, align 8
  %14 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %13, i64 0, i32 1
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 0, %16
  %18 = and i64 %17, 7
  %19 = or i64 %18, 280
  %20 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %13, i64 0, i32 2
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %22, %16
  %24 = icmp ugt i64 %19, %23
  br i1 %24, label %25, label %29

25:                                               ; preds = %9
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %13, i32 280, i32 8) #3
  %26 = load i64, i64* %15, align 8
  %27 = sub i64 0, %26
  %28 = and i64 %27, 7
  br label %29

29:                                               ; preds = %25, %9
  %30 = phi i64 [ %26, %25 ], [ %16, %9 ]
  %31 = phi i64 [ %28, %25 ], [ %18, %9 ]
  %32 = inttoptr i64 %30 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 %31
  %34 = getelementptr inbounds i8, i8* %33, i64 280
  store i8* %34, i8** %14, align 8
  %35 = bitcast i8* %33 to %class.SkOpSegment*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 280, i1 false) #3
  br label %38

36:                                               ; preds = %3
  %37 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %0, i64 0, i32 1
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi %class.SkOpSegment* [ %35, %29 ], [ %37, %36 ]
  %40 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %0, i64 0, i32 2
  %41 = bitcast %class.SkOpSegment** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %39, i64 0, i32 4
  %44 = bitcast %class.SkOpSegment** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = load %class.SkOpSegment*, %class.SkOpSegment** %40, align 8
  %46 = icmp eq %class.SkOpSegment* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %38
  %48 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %45, i64 0, i32 3
  store %class.SkOpSegment* %39, %class.SkOpSegment** %48, align 8
  br label %49

49:                                               ; preds = %38, %47
  store %class.SkOpSegment* %39, %class.SkOpSegment** %40, align 8
  tail call void @_ZN11SkOpSegment4initEP7SkPointfP11SkOpContourN6SkPath4VerbE(%class.SkOpSegment* %39, %struct.SkPoint* %1, float %2, %class.SkOpContour* %0, i32 3) #3
  %50 = bitcast %struct.SkDCurve* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %50) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %50, i8 -1, i64 64, i1 false) #3
  %51 = bitcast %struct.SkPoint* %1 to <2 x float>*
  %52 = load <2 x float>, <2 x float>* %51, align 4
  %53 = fpext <2 x float> %52 to <2 x double>
  %54 = bitcast %struct.SkDCurve* %4 to <2 x double>*
  store <2 x double> %53, <2 x double>* %54, align 16
  %55 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 0
  %56 = getelementptr inbounds %struct.SkDCurve, %struct.SkDCurve* %4, i64 0, i32 0, i32 0, i32 0, i64 1, i32 0
  %57 = bitcast float* %55 to <2 x float>*
  %58 = load <2 x float>, <2 x float>* %57, align 4
  %59 = fpext <2 x float> %58 to <2 x double>
  %60 = bitcast double* %56 to <2 x double>*
  store <2 x double> %59, <2 x double>* %60, align 16
  %61 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 0
  %62 = getelementptr inbounds %struct.SkDCurve, %struct.SkDCurve* %4, i64 0, i32 0, i32 0, i32 0, i64 2, i32 0
  %63 = bitcast float* %61 to <2 x float>*
  %64 = load <2 x float>, <2 x float>* %63, align 4
  %65 = fpext <2 x float> %64 to <2 x double>
  %66 = bitcast double* %62 to <2 x double>*
  store <2 x double> %65, <2 x double>* %66, align 16
  %67 = getelementptr inbounds %struct.SkDCurve, %struct.SkDCurve* %4, i64 0, i32 0, i32 0, i32 0, i64 3
  %68 = bitcast %struct.SkDPoint* %67 to float*
  store float %2, float* %68, align 16
  %69 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %39, i64 0, i32 6
  call void @_ZN8SkDCurve14setConicBoundsEPK7SkPointfddP15SkPathOpsBounds(%struct.SkDCurve* nonnull %4, %struct.SkPoint* %1, float %2, double 0.000000e+00, double 1.000000e+00, %struct.SkPathOpsBounds* %69) #3
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %50) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkOpContourBuilder8addCubicEP7SkPoint(%class.SkOpContourBuilder* nocapture, %struct.SkPoint*) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkDCurve, align 16
  %4 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %40, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 0
  %9 = load %class.SkOpContour*, %class.SkOpContour** %8, align 8
  %10 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %9, i64 0, i32 0
  %11 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %10, align 8
  %12 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %11, i64 0, i32 0
  %13 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %12, align 8
  %14 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %13, i64 0, i32 1
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 0, %16
  %18 = and i64 %17, 3
  %19 = or i64 %18, 16
  %20 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %13, i64 0, i32 2
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %22, %16
  %24 = icmp ugt i64 %19, %23
  br i1 %24, label %25, label %29

25:                                               ; preds = %7
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %13, i32 16, i32 4) #3
  %26 = load i64, i64* %15, align 8
  %27 = sub i64 0, %26
  %28 = and i64 %27, 3
  br label %29

29:                                               ; preds = %25, %7
  %30 = phi i64 [ %26, %25 ], [ %16, %7 ]
  %31 = phi i64 [ %28, %25 ], [ %18, %7 ]
  %32 = inttoptr i64 %30 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 %31
  %34 = getelementptr inbounds i8, i8* %33, i64 16
  store i8* %34, i8** %14, align 8
  %35 = bitcast i8* %33 to %struct.SkPoint*
  %36 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 1, i64 0
  %37 = bitcast %struct.SkPoint* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 8 %37, i64 16, i1 false) #3
  %38 = load %class.SkOpContour*, %class.SkOpContour** %8, align 8
  %39 = tail call %class.SkOpSegment* @_ZN11SkOpContour7addLineEP7SkPoint(%class.SkOpContour* %38, %struct.SkPoint* %35) #3
  store i8 0, i8* %4, align 8
  br label %40

40:                                               ; preds = %2, %29
  %41 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 0
  %42 = load %class.SkOpContour*, %class.SkOpContour** %41, align 8
  %43 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %42, i64 0, i32 6
  %44 = load i32, i32* %43, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %43, align 4
  %46 = icmp eq i32 %44, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %42, i64 0, i32 0
  %49 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %48, align 8
  %50 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %49, i64 0, i32 0
  %51 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %50, align 8
  %52 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %51, i64 0, i32 1
  %53 = bitcast i8** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 0, %54
  %56 = and i64 %55, 7
  %57 = or i64 %56, 280
  %58 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %51, i64 0, i32 2
  %59 = bitcast i8** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %60, %54
  %62 = icmp ugt i64 %57, %61
  br i1 %62, label %63, label %67

63:                                               ; preds = %47
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %51, i32 280, i32 8) #3
  %64 = load i64, i64* %53, align 8
  %65 = sub i64 0, %64
  %66 = and i64 %65, 7
  br label %67

67:                                               ; preds = %63, %47
  %68 = phi i64 [ %64, %63 ], [ %54, %47 ]
  %69 = phi i64 [ %66, %63 ], [ %56, %47 ]
  %70 = inttoptr i64 %68 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 %69
  %72 = getelementptr inbounds i8, i8* %71, i64 280
  store i8* %72, i8** %52, align 8
  %73 = bitcast i8* %71 to %class.SkOpSegment*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 280, i1 false) #3
  br label %76

74:                                               ; preds = %40
  %75 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %42, i64 0, i32 1
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi %class.SkOpSegment* [ %73, %67 ], [ %75, %74 ]
  %78 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %42, i64 0, i32 2
  %79 = bitcast %class.SkOpSegment** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %77, i64 0, i32 4
  %82 = bitcast %class.SkOpSegment** %81 to i64*
  store i64 %80, i64* %82, align 8
  %83 = load %class.SkOpSegment*, %class.SkOpSegment** %78, align 8
  %84 = icmp eq %class.SkOpSegment* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %76
  %86 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %83, i64 0, i32 3
  store %class.SkOpSegment* %77, %class.SkOpSegment** %86, align 8
  br label %87

87:                                               ; preds = %76, %85
  store %class.SkOpSegment* %77, %class.SkOpSegment** %78, align 8
  tail call void @_ZN11SkOpSegment4initEP7SkPointfP11SkOpContourN6SkPath4VerbE(%class.SkOpSegment* %77, %struct.SkPoint* %1, float 1.000000e+00, %class.SkOpContour* %42, i32 4) #3
  %88 = bitcast %struct.SkDCurve* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %88) #3
  %89 = bitcast %struct.SkPoint* %1 to <2 x float>*
  %90 = load <2 x float>, <2 x float>* %89, align 4
  %91 = fpext <2 x float> %90 to <2 x double>
  %92 = bitcast %struct.SkDCurve* %3 to <2 x double>*
  store <2 x double> %91, <2 x double>* %92, align 16
  %93 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 0
  %94 = getelementptr inbounds %struct.SkDCurve, %struct.SkDCurve* %3, i64 0, i32 0, i32 0, i32 0, i64 1, i32 0
  %95 = bitcast float* %93 to <2 x float>*
  %96 = load <2 x float>, <2 x float>* %95, align 4
  %97 = fpext <2 x float> %96 to <2 x double>
  %98 = bitcast double* %94 to <2 x double>*
  store <2 x double> %97, <2 x double>* %98, align 16
  %99 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 0
  %100 = getelementptr inbounds %struct.SkDCurve, %struct.SkDCurve* %3, i64 0, i32 0, i32 0, i32 0, i64 2, i32 0
  %101 = bitcast float* %99 to <2 x float>*
  %102 = load <2 x float>, <2 x float>* %101, align 4
  %103 = fpext <2 x float> %102 to <2 x double>
  %104 = bitcast double* %100 to <2 x double>*
  store <2 x double> %103, <2 x double>* %104, align 16
  %105 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 3, i32 0
  %106 = getelementptr inbounds %struct.SkDCurve, %struct.SkDCurve* %3, i64 0, i32 0, i32 0, i32 0, i64 3, i32 0
  %107 = bitcast float* %105 to <2 x float>*
  %108 = load <2 x float>, <2 x float>* %107, align 4
  %109 = fpext <2 x float> %108 to <2 x double>
  %110 = bitcast double* %106 to <2 x double>*
  store <2 x double> %109, <2 x double>* %110, align 16
  %111 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %77, i64 0, i32 6
  call void @_ZN8SkDCurve14setCubicBoundsEPK7SkPointfddP15SkPathOpsBounds(%struct.SkDCurve* nonnull %3, %struct.SkPoint* %1, float 1.000000e+00, double 0.000000e+00, double 1.000000e+00, %struct.SkPathOpsBounds* %111) #3
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %88) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkOpContourBuilder8addCurveEN6SkPath4VerbEPK7SkPointf(%class.SkOpContourBuilder* nocapture, i32, %struct.SkPoint* nocapture readonly, float) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i32 %1, 1
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @_ZN18SkOpContourBuilder7addLineEPK7SkPoint(%class.SkOpContourBuilder* %0, %struct.SkPoint* %2)
  br label %160

7:                                                ; preds = %4
  %8 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 0
  %9 = load %class.SkOpContour*, %class.SkOpContour** %8, align 8
  %10 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %9, i64 0, i32 0
  %11 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %10, align 8
  %12 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %11, i64 0, i32 0
  %13 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %12, align 8
  switch i32 %1, label %160 [
    i32 2, label %14
    i32 3, label %75
    i32 4, label %136
  ]

14:                                               ; preds = %7
  %15 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %13, i64 0, i32 1
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 0, %17
  %19 = and i64 %18, 3
  %20 = or i64 %19, 24
  %21 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %13, i64 0, i32 2
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %23, %17
  %25 = icmp ugt i64 %20, %24
  br i1 %25, label %26, label %30

26:                                               ; preds = %14
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %13, i32 24, i32 4) #3
  %27 = load i64, i64* %16, align 8
  %28 = sub i64 0, %27
  %29 = and i64 %28, 3
  br label %30

30:                                               ; preds = %14, %26
  %31 = phi i64 [ %27, %26 ], [ %17, %14 ]
  %32 = phi i64 [ %29, %26 ], [ %19, %14 ]
  %33 = inttoptr i64 %31 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 %32
  %35 = getelementptr inbounds i8, i8* %34, i64 24
  store i8* %35, i8** %15, align 8
  %36 = bitcast i8* %34 to %struct.SkPoint*
  %37 = bitcast %struct.SkPoint* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %37, i64 24, i1 false)
  %38 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 2
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %73, label %41

41:                                               ; preds = %30
  %42 = load %class.SkOpContour*, %class.SkOpContour** %8, align 8
  %43 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %42, i64 0, i32 0
  %44 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %43, align 8
  %45 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %44, i64 0, i32 0
  %46 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %45, align 8
  %47 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %46, i64 0, i32 1
  %48 = bitcast i8** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 0, %49
  %51 = and i64 %50, 3
  %52 = or i64 %51, 16
  %53 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %46, i64 0, i32 2
  %54 = bitcast i8** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %55, %49
  %57 = icmp ugt i64 %52, %56
  br i1 %57, label %58, label %62

58:                                               ; preds = %41
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %46, i32 16, i32 4) #3
  %59 = load i64, i64* %48, align 8
  %60 = sub i64 0, %59
  %61 = and i64 %60, 3
  br label %62

62:                                               ; preds = %58, %41
  %63 = phi i64 [ %59, %58 ], [ %49, %41 ]
  %64 = phi i64 [ %61, %58 ], [ %51, %41 ]
  %65 = inttoptr i64 %63 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = getelementptr inbounds i8, i8* %66, i64 16
  store i8* %67, i8** %47, align 8
  %68 = bitcast i8* %66 to %struct.SkPoint*
  %69 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 1, i64 0
  %70 = bitcast %struct.SkPoint* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* align 8 %70, i64 16, i1 false) #3
  %71 = load %class.SkOpContour*, %class.SkOpContour** %8, align 8
  %72 = tail call %class.SkOpSegment* @_ZN11SkOpContour7addLineEP7SkPoint(%class.SkOpContour* %71, %struct.SkPoint* %68) #3
  store i8 0, i8* %38, align 8
  br label %73

73:                                               ; preds = %30, %62
  %74 = load %class.SkOpContour*, %class.SkOpContour** %8, align 8
  tail call void @_ZN11SkOpContour7addQuadEP7SkPoint(%class.SkOpContour* %74, %struct.SkPoint* %36) #3
  br label %160

75:                                               ; preds = %7
  %76 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %13, i64 0, i32 1
  %77 = bitcast i8** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 0, %78
  %80 = and i64 %79, 3
  %81 = or i64 %80, 24
  %82 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %13, i64 0, i32 2
  %83 = bitcast i8** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = sub i64 %84, %78
  %86 = icmp ugt i64 %81, %85
  br i1 %86, label %87, label %91

87:                                               ; preds = %75
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %13, i32 24, i32 4) #3
  %88 = load i64, i64* %77, align 8
  %89 = sub i64 0, %88
  %90 = and i64 %89, 3
  br label %91

91:                                               ; preds = %75, %87
  %92 = phi i64 [ %88, %87 ], [ %78, %75 ]
  %93 = phi i64 [ %90, %87 ], [ %80, %75 ]
  %94 = inttoptr i64 %92 to i8*
  %95 = getelementptr inbounds i8, i8* %94, i64 %93
  %96 = getelementptr inbounds i8, i8* %95, i64 24
  store i8* %96, i8** %76, align 8
  %97 = bitcast i8* %95 to %struct.SkPoint*
  %98 = bitcast %struct.SkPoint* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* align 4 %98, i64 24, i1 false)
  %99 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 2
  %100 = load i8, i8* %99, align 8, !range !2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %134, label %102

102:                                              ; preds = %91
  %103 = load %class.SkOpContour*, %class.SkOpContour** %8, align 8
  %104 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %103, i64 0, i32 0
  %105 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %104, align 8
  %106 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %105, i64 0, i32 0
  %107 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %106, align 8
  %108 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %107, i64 0, i32 1
  %109 = bitcast i8** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = sub i64 0, %110
  %112 = and i64 %111, 3
  %113 = or i64 %112, 16
  %114 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %107, i64 0, i32 2
  %115 = bitcast i8** %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %116, %110
  %118 = icmp ugt i64 %113, %117
  br i1 %118, label %119, label %123

119:                                              ; preds = %102
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %107, i32 16, i32 4) #3
  %120 = load i64, i64* %109, align 8
  %121 = sub i64 0, %120
  %122 = and i64 %121, 3
  br label %123

123:                                              ; preds = %119, %102
  %124 = phi i64 [ %120, %119 ], [ %110, %102 ]
  %125 = phi i64 [ %122, %119 ], [ %112, %102 ]
  %126 = inttoptr i64 %124 to i8*
  %127 = getelementptr inbounds i8, i8* %126, i64 %125
  %128 = getelementptr inbounds i8, i8* %127, i64 16
  store i8* %128, i8** %108, align 8
  %129 = bitcast i8* %127 to %struct.SkPoint*
  %130 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 1, i64 0
  %131 = bitcast %struct.SkPoint* %130 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %127, i8* align 8 %131, i64 16, i1 false) #3
  %132 = load %class.SkOpContour*, %class.SkOpContour** %8, align 8
  %133 = tail call %class.SkOpSegment* @_ZN11SkOpContour7addLineEP7SkPoint(%class.SkOpContour* %132, %struct.SkPoint* %129) #3
  store i8 0, i8* %99, align 8
  br label %134

134:                                              ; preds = %91, %123
  %135 = load %class.SkOpContour*, %class.SkOpContour** %8, align 8
  tail call void @_ZN11SkOpContour8addConicEP7SkPointf(%class.SkOpContour* %135, %struct.SkPoint* %97, float %3) #3
  br label %160

136:                                              ; preds = %7
  %137 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %13, i64 0, i32 1
  %138 = bitcast i8** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 0, %139
  %141 = and i64 %140, 3
  %142 = or i64 %141, 32
  %143 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %13, i64 0, i32 2
  %144 = bitcast i8** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = sub i64 %145, %139
  %147 = icmp ugt i64 %142, %146
  br i1 %147, label %148, label %152

148:                                              ; preds = %136
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %13, i32 32, i32 4) #3
  %149 = load i64, i64* %138, align 8
  %150 = sub i64 0, %149
  %151 = and i64 %150, 3
  br label %152

152:                                              ; preds = %136, %148
  %153 = phi i64 [ %149, %148 ], [ %139, %136 ]
  %154 = phi i64 [ %151, %148 ], [ %141, %136 ]
  %155 = inttoptr i64 %153 to i8*
  %156 = getelementptr inbounds i8, i8* %155, i64 %154
  %157 = getelementptr inbounds i8, i8* %156, i64 32
  store i8* %157, i8** %137, align 8
  %158 = bitcast i8* %156 to %struct.SkPoint*
  %159 = bitcast %struct.SkPoint* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %156, i8* align 4 %159, i64 32, i1 false)
  tail call void @_ZN18SkOpContourBuilder8addCubicEP7SkPoint(%class.SkOpContourBuilder* %0, %struct.SkPoint* %158)
  br label %160

160:                                              ; preds = %73, %134, %152, %7, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkOpContourBuilder7addLineEPK7SkPoint(%class.SkOpContourBuilder* nocapture, %struct.SkPoint* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 1, i64 0
  %8 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %7, i64 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 0
  %11 = load float, float* %10, align 4
  %12 = fcmp oeq float %9, %11
  br i1 %12, label %13, label %31

13:                                               ; preds = %6
  %14 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 1, i64 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 1
  %17 = load float, float* %16, align 4
  %18 = fcmp oeq float %15, %17
  br i1 %18, label %19, label %31

19:                                               ; preds = %13
  %20 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 1, i64 1, i32 0
  %21 = load float, float* %20, align 4
  %22 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %23 = load float, float* %22, align 4
  %24 = fcmp oeq float %21, %23
  br i1 %24, label %25, label %31

25:                                               ; preds = %19
  %26 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 1, i64 1, i32 1
  %27 = load float, float* %26, align 4
  %28 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %29 = load float, float* %28, align 4
  %30 = fcmp oeq float %27, %29
  br i1 %30, label %67, label %31

31:                                               ; preds = %19, %6, %13, %25
  %32 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 0
  %33 = load %class.SkOpContour*, %class.SkOpContour** %32, align 8
  %34 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %33, i64 0, i32 0
  %35 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %34, align 8
  %36 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %35, i64 0, i32 0
  %37 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %36, align 8
  %38 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %37, i64 0, i32 1
  %39 = bitcast i8** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 0, %40
  %42 = and i64 %41, 3
  %43 = or i64 %42, 16
  %44 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %37, i64 0, i32 2
  %45 = bitcast i8** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %46, %40
  %48 = icmp ugt i64 %43, %47
  br i1 %48, label %49, label %53

49:                                               ; preds = %31
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %37, i32 16, i32 4) #3
  %50 = load i64, i64* %39, align 8
  %51 = sub i64 0, %50
  %52 = and i64 %51, 3
  br label %53

53:                                               ; preds = %31, %49
  %54 = phi i64 [ %50, %49 ], [ %40, %31 ]
  %55 = phi i64 [ %52, %49 ], [ %42, %31 ]
  %56 = inttoptr i64 %54 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 %55
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  store i8* %58, i8** %38, align 8
  %59 = bitcast i8* %57 to %struct.SkPoint*
  %60 = bitcast %struct.SkPoint* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* align 8 %60, i64 16, i1 false) #3
  %61 = load %class.SkOpContour*, %class.SkOpContour** %32, align 8
  %62 = tail call %class.SkOpSegment* @_ZN11SkOpContour7addLineEP7SkPoint(%class.SkOpContour* %61, %struct.SkPoint* %59) #3
  store i8 0, i8* %3, align 8
  br label %63

63:                                               ; preds = %2, %53
  %64 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 1, i64 0
  %65 = bitcast %struct.SkPoint* %64 to i8*
  %66 = bitcast %struct.SkPoint* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 4 %66, i64 16, i1 false)
  br label %67

67:                                               ; preds = %25, %63
  %68 = phi i8 [ 1, %63 ], [ 0, %25 ]
  store i8 %68, i8* %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkOpContourBuilder7addQuadEP7SkPoint(%class.SkOpContourBuilder* nocapture, %struct.SkPoint*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %39, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 0
  %8 = load %class.SkOpContour*, %class.SkOpContour** %7, align 8
  %9 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %8, i64 0, i32 0
  %10 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %9, align 8
  %11 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %10, i64 0, i32 0
  %12 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %11, align 8
  %13 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %12, i64 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 0, %15
  %17 = and i64 %16, 3
  %18 = or i64 %17, 16
  %19 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %12, i64 0, i32 2
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %21, %15
  %23 = icmp ugt i64 %18, %22
  br i1 %23, label %24, label %28

24:                                               ; preds = %6
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %12, i32 16, i32 4) #3
  %25 = load i64, i64* %14, align 8
  %26 = sub i64 0, %25
  %27 = and i64 %26, 3
  br label %28

28:                                               ; preds = %24, %6
  %29 = phi i64 [ %25, %24 ], [ %15, %6 ]
  %30 = phi i64 [ %27, %24 ], [ %17, %6 ]
  %31 = inttoptr i64 %29 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 %30
  %33 = getelementptr inbounds i8, i8* %32, i64 16
  store i8* %33, i8** %13, align 8
  %34 = bitcast i8* %32 to %struct.SkPoint*
  %35 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 1, i64 0
  %36 = bitcast %struct.SkPoint* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 8 %36, i64 16, i1 false) #3
  %37 = load %class.SkOpContour*, %class.SkOpContour** %7, align 8
  %38 = tail call %class.SkOpSegment* @_ZN11SkOpContour7addLineEP7SkPoint(%class.SkOpContour* %37, %struct.SkPoint* %34) #3
  store i8 0, i8* %3, align 8
  br label %39

39:                                               ; preds = %2, %28
  %40 = getelementptr inbounds %class.SkOpContourBuilder, %class.SkOpContourBuilder* %0, i64 0, i32 0
  %41 = load %class.SkOpContour*, %class.SkOpContour** %40, align 8
  tail call void @_ZN11SkOpContour7addQuadEP7SkPoint(%class.SkOpContour* %41, %struct.SkPoint* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11SkOpContour7addQuadEP7SkPoint(%class.SkOpContour*, %struct.SkPoint*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %struct.SkDCurve, align 16
  %4 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %0, i64 0, i32 6
  %5 = load i32, i32* %4, align 4
  %6 = add nsw i32 %5, 1
  store i32 %6, i32* %4, align 4
  %7 = icmp eq i32 %5, 0
  br i1 %7, label %35, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %0, i64 0, i32 0
  %10 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %9, align 8
  %11 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %10, i64 0, i32 0
  %12 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %11, align 8
  %13 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %12, i64 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 0, %15
  %17 = and i64 %16, 7
  %18 = or i64 %17, 280
  %19 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %12, i64 0, i32 2
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %21, %15
  %23 = icmp ugt i64 %18, %22
  br i1 %23, label %24, label %28

24:                                               ; preds = %8
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %12, i32 280, i32 8) #3
  %25 = load i64, i64* %14, align 8
  %26 = sub i64 0, %25
  %27 = and i64 %26, 7
  br label %28

28:                                               ; preds = %24, %8
  %29 = phi i64 [ %25, %24 ], [ %15, %8 ]
  %30 = phi i64 [ %27, %24 ], [ %17, %8 ]
  %31 = inttoptr i64 %29 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 %30
  %33 = getelementptr inbounds i8, i8* %32, i64 280
  store i8* %33, i8** %13, align 8
  %34 = bitcast i8* %32 to %class.SkOpSegment*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 280, i1 false) #3
  br label %37

35:                                               ; preds = %2
  %36 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %0, i64 0, i32 1
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi %class.SkOpSegment* [ %34, %28 ], [ %36, %35 ]
  %39 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %0, i64 0, i32 2
  %40 = bitcast %class.SkOpSegment** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %38, i64 0, i32 4
  %43 = bitcast %class.SkOpSegment** %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = load %class.SkOpSegment*, %class.SkOpSegment** %39, align 8
  %45 = icmp eq %class.SkOpSegment* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %37
  %47 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %44, i64 0, i32 3
  store %class.SkOpSegment* %38, %class.SkOpSegment** %47, align 8
  br label %48

48:                                               ; preds = %37, %46
  store %class.SkOpSegment* %38, %class.SkOpSegment** %39, align 8
  tail call void @_ZN11SkOpSegment4initEP7SkPointfP11SkOpContourN6SkPath4VerbE(%class.SkOpSegment* %38, %struct.SkPoint* %1, float 1.000000e+00, %class.SkOpContour* %0, i32 2) #3
  %49 = bitcast %struct.SkDCurve* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %49) #3
  %50 = getelementptr inbounds %struct.SkDCurve, %struct.SkDCurve* %3, i64 0, i32 0, i32 0, i32 0, i64 3
  %51 = bitcast %struct.SkDPoint* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %51, i8 -1, i64 16, i1 false) #3
  %52 = bitcast %struct.SkPoint* %1 to <2 x float>*
  %53 = load <2 x float>, <2 x float>* %52, align 4
  %54 = fpext <2 x float> %53 to <2 x double>
  %55 = bitcast %struct.SkDCurve* %3 to <2 x double>*
  store <2 x double> %54, <2 x double>* %55, align 16
  %56 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 0
  %57 = getelementptr inbounds %struct.SkDCurve, %struct.SkDCurve* %3, i64 0, i32 0, i32 0, i32 0, i64 1, i32 0
  %58 = bitcast float* %56 to <2 x float>*
  %59 = load <2 x float>, <2 x float>* %58, align 4
  %60 = fpext <2 x float> %59 to <2 x double>
  %61 = bitcast double* %57 to <2 x double>*
  store <2 x double> %60, <2 x double>* %61, align 16
  %62 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 0
  %63 = getelementptr inbounds %struct.SkDCurve, %struct.SkDCurve* %3, i64 0, i32 0, i32 0, i32 0, i64 2, i32 0
  %64 = bitcast float* %62 to <2 x float>*
  %65 = load <2 x float>, <2 x float>* %64, align 4
  %66 = fpext <2 x float> %65 to <2 x double>
  %67 = bitcast double* %63 to <2 x double>*
  store <2 x double> %66, <2 x double>* %67, align 16
  %68 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %38, i64 0, i32 6
  call void @_ZN8SkDCurve13setQuadBoundsEPK7SkPointfddP15SkPathOpsBounds(%struct.SkDCurve* nonnull %3, %struct.SkPoint* %1, float 1.000000e+00, double 0.000000e+00, double 1.000000e+00, %struct.SkPathOpsBounds* %68) #3
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %49) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkOpSegment* @_ZN11SkOpContour7addLineEP7SkPoint(%class.SkOpContour*, %struct.SkPoint*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 4
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* %3, align 4
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %34, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %0, i64 0, i32 0
  %9 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %8, align 8
  %10 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %9, i64 0, i32 0
  %11 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %10, align 8
  %12 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %11, i64 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 0, %14
  %16 = and i64 %15, 7
  %17 = or i64 %16, 280
  %18 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %11, i64 0, i32 2
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %14
  %22 = icmp ugt i64 %17, %21
  br i1 %22, label %23, label %27

23:                                               ; preds = %7
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %11, i32 280, i32 8) #3
  %24 = load i64, i64* %13, align 8
  %25 = sub i64 0, %24
  %26 = and i64 %25, 7
  br label %27

27:                                               ; preds = %23, %7
  %28 = phi i64 [ %24, %23 ], [ %14, %7 ]
  %29 = phi i64 [ %26, %23 ], [ %16, %7 ]
  %30 = inttoptr i64 %28 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 %29
  %32 = getelementptr inbounds i8, i8* %31, i64 280
  store i8* %32, i8** %12, align 8
  %33 = bitcast i8* %31 to %class.SkOpSegment*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 280, i1 false) #3
  br label %36

34:                                               ; preds = %2
  %35 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %0, i64 0, i32 1
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi %class.SkOpSegment* [ %33, %27 ], [ %35, %34 ]
  %38 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %0, i64 0, i32 2
  %39 = bitcast %class.SkOpSegment** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %37, i64 0, i32 4
  %42 = bitcast %class.SkOpSegment** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = load %class.SkOpSegment*, %class.SkOpSegment** %38, align 8
  %44 = icmp eq %class.SkOpSegment* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %36
  %46 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %43, i64 0, i32 3
  store %class.SkOpSegment* %37, %class.SkOpSegment** %46, align 8
  br label %47

47:                                               ; preds = %36, %45
  store %class.SkOpSegment* %37, %class.SkOpSegment** %38, align 8
  tail call void @_ZN11SkOpSegment4initEP7SkPointfP11SkOpContourN6SkPath4VerbE(%class.SkOpSegment* %37, %struct.SkPoint* %1, float 1.000000e+00, %class.SkOpContour* %0, i32 1) #3
  %48 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %37, i64 0, i32 6, i32 0
  %49 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %48, %struct.SkPoint* %1, i32 2) #3
  ret %class.SkOpSegment* %37
}

declare void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN11SkOpSegment4initEP7SkPointfP11SkOpContourN6SkPath4VerbE(%class.SkOpSegment*, %struct.SkPoint*, float, %class.SkOpContour*, i32) local_unnamed_addr #2

declare void @_ZN8SkDCurve14setConicBoundsEPK7SkPointfddP15SkPathOpsBounds(%struct.SkDCurve*, %struct.SkPoint*, float, double, double, %struct.SkPathOpsBounds*) local_unnamed_addr #2

declare void @_ZN8SkDCurve14setCubicBoundsEPK7SkPointfddP15SkPathOpsBounds(%struct.SkDCurve*, %struct.SkPoint*, float, double, double, %struct.SkPathOpsBounds*) local_unnamed_addr #2

declare void @_ZN8SkDCurve13setQuadBoundsEPK7SkPointfddP15SkPathOpsBounds(%struct.SkDCurve*, %struct.SkPoint*, float, double, double, %struct.SkPathOpsBounds*) local_unnamed_addr #2

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
