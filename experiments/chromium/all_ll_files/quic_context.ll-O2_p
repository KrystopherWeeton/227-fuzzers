; ModuleID = '../../net/quic/quic_context.cc'
source_filename = "../../net/quic/quic_context.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::QuicParams" = type { %"class.std::__1::vector", %"class.std::__1::basic_string", i64, i64, %"class.std::__1::set", %"class.std::__1::vector.14", %"class.std::__1::vector.14", i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i32, i8, i8, i8, i8, i8, i8, i8, %"class.base::TimeDelta", i8, i8, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair" }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { i32*, i32*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i32* }
%"class.base::TimeDelta" = type { i64 }
%"class.net::QuicContext" = type { %"class.std::__1::unique_ptr", %"struct.net::QuicParams" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.quic::QuicConnectionHelperInterface"* }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"class.net::HostPortPair" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.quic::QuicChromiumClock" = type { %"class.quic::QuicClock" }
%"class.quic::QuicClock" = type { i32 (...)**, i8, %"class.quic::QuicTime::Delta" }
%"class.quic::QuicTime::Delta" = type { i64 }
%"class.quic::QuicRandom" = type { i32 (...)** }
%"class.net::QuicChromiumConnectionHelper" = type { %"class.quic::QuicConnectionHelperInterface", %"class.quic::QuicClock"*, %"class.quic::QuicRandom"* }
%"class.quic::QuicConfig" = type { i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i64, %"class.quic::QuicFixedTagVector", %"class.quic::QuicFixedTagVector", %"class.quic::QuicTime::Delta", %"class.absl::optional", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint32", i8, i8, [6 x i8], %"class.quic::QuicFixedSocketAddress", %"class.quic::QuicFixedSocketAddress", %"class.absl::optional.33", %"class.quic::QuicFixedStatelessResetToken", %"class.std::__1::vector.14", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.absl::optional.41", %"class.absl::optional.41", %"class.absl::optional.41", %"class.absl::optional.41", %"class.absl::optional.41", %"class.absl::optional.41", %"class.absl::flat_hash_map", %"class.absl::flat_hash_map" }
%"class.quic::QuicFixedTagVector" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"class.std::__1::vector.14", %"class.std::__1::vector.14" }
%"class.quic::QuicConfigValue.base" = type <{ i32 (...)**, i32, i8 }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.30 }
%union.anon.30 = type { %"class.quic::QuicTime::Delta" }
%"class.quic::QuicFixedSocketAddress" = type { %"class.quic::QuicConfigValue.base", i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.quic::QuicSocketAddress" = type <{ %"class.quic::QuicIpAddress", i16, [2 x i8] }>
%"class.quic::QuicIpAddress" = type { %union.anon.31, i32 }
%union.anon.31 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.32 }
%union.anon.32 = type { [4 x i32] }
%"class.absl::optional.33" = type { %"class.absl::optional_internal::optional_data.34" }
%"class.absl::optional_internal::optional_data.34" = type { %"class.absl::optional_internal::optional_data_base.35" }
%"class.absl::optional_internal::optional_data_base.35" = type { %"class.absl::optional_internal::optional_data_dtor_base.36" }
%"class.absl::optional_internal::optional_data_dtor_base.36" = type { i8, %union.anon.37 }
%union.anon.37 = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.quic::QuicConnectionId", %"struct.std::__1::array" }
%"class.quic::QuicConnectionId" = type { %union.anon.38 }
%union.anon.38 = type { %struct.anon.40 }
%struct.anon.40 = type { i8, i8* }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.quic::QuicFixedStatelessResetToken" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"struct.std::__1::array", %"struct.std::__1::array", i8 }
%"class.quic::QuicFixedUint32" = type { %"class.quic::QuicConfigValue.base", i8, i8, i32, i32 }
%"class.quic::QuicFixedUint62" = type { %"class.quic::QuicConfigValue.base", i8, i8, i64, i64 }
%"class.absl::optional.41" = type { %"class.absl::optional_internal::optional_data.42" }
%"class.absl::optional_internal::optional_data.42" = type { %"class.absl::optional_internal::optional_data_base.43" }
%"class.absl::optional_internal::optional_data_base.43" = type { %"class.absl::optional_internal::optional_data_dtor_base.44" }
%"class.absl::optional_internal::optional_data_dtor_base.44" = type { i8, %union.anon.45 }
%union.anon.45 = type { %"class.quic::QuicConnectionId" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }

$_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE30__emplace_hint_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEENS_21__tree_const_iteratorIS2_SG_lEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS2_PNS_11__tree_nodeIS2_SA_EElEERPNS_15__tree_end_nodeISC_EESD_RKT_ = comdat any

$_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISC_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZN3net10QuicParamsC1Ev = hidden unnamed_addr alias void (%"struct.net::QuicParams"*), void (%"struct.net::QuicParams"*)* @_ZN3net10QuicParamsC2Ev
@_ZN3net10QuicParamsC1ERKS0_ = hidden unnamed_addr alias void (%"struct.net::QuicParams"*, %"struct.net::QuicParams"*), void (%"struct.net::QuicParams"*, %"struct.net::QuicParams"*)* @_ZN3net10QuicParamsC2ERKS0_
@_ZN3net10QuicParamsD1Ev = hidden unnamed_addr alias void (%"struct.net::QuicParams"*), void (%"struct.net::QuicParams"*)* @_ZN3net10QuicParamsD2Ev
@_ZN3net11QuicContextC1Ev = hidden unnamed_addr alias void (%"class.net::QuicContext"*), void (%"class.net::QuicContext"*)* @_ZN3net11QuicContextC2Ev
@_ZN3net11QuicContextC1ENSt3__110unique_ptrIN4quic29QuicConnectionHelperInterfaceENS1_14default_deleteIS4_EEEE = hidden unnamed_addr alias void (%"class.net::QuicContext"*, %"class.quic::QuicConnectionHelperInterface"*), void (%"class.net::QuicContext"*, %"class.quic::QuicConnectionHelperInterface"*)* @_ZN3net11QuicContextC2ENSt3__110unique_ptrIN4quic29QuicConnectionHelperInterfaceENS1_14default_deleteIS4_EEEE
@_ZN3net11QuicContextD1Ev = hidden unnamed_addr alias void (%"class.net::QuicContext"*), void (%"class.net::QuicContext"*)* @_ZN3net11QuicContextD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net10QuicParamsC2Ev(%"struct.net::QuicParams"*) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #7, !noalias !2
  %3 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"struct.net::QuicParams"* %0 to i8**
  store i8* %2, i8** %4, align 8, !alias.scope !2
  %5 = getelementptr inbounds i8, i8* %2, i64 16
  %6 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"struct.quic::ParsedQuicVersion"** %6 to i8**
  store i8* %5, i8** %7, align 8, !alias.scope !2
  %8 = bitcast i8* %2 to <4 x i32>*
  store <4 x i32> <i32 1, i32 50, i32 2, i32 73>, <4 x i32>* %8, align 4, !noalias !2
  %9 = bitcast %"struct.quic::ParsedQuicVersion"** %3 to i64*
  %10 = ptrtoint i8* %5 to i64
  store i64 %10, i64* %9, align 8, !alias.scope !2
  %11 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #8
  %13 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 2
  %14 = bitcast i64* %13 to <2 x i64>*
  store <2 x i64> <i64 1350, i64 0>, <2 x i64>* %14, align 8
  %15 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 4, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_node_base"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %16, %"class.std::__1::__tree_end_node"** %17, align 8
  %19 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 5
  %20 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 8
  %21 = bitcast %"class.std::__1::vector.14"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 49, i1 false)
  store i8 1, i8* %20, align 1
  %22 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 9
  store i8 0, i8* %22, align 2
  %23 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 10
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 11, i32 0
  %25 = bitcast i64* %24 to <2 x i64>*
  store <2 x i64> <i64 30000000, i64 15000000>, <2 x i64>* %25, align 8
  %26 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 13, i32 0
  %27 = bitcast i64* %26 to <2 x i64>*
  store <2 x i64> <i64 0, i64 10000000>, <2 x i64>* %27, align 8
  %28 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 15, i32 0
  store i64 5000000, i64* %28, align 8
  %29 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 16
  %30 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 21, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 5, i1 false)
  %31 = bitcast i64* %30 to <2 x i64>*
  store <2 x i64> <i64 30000000, i64 128000000>, <2 x i64>* %31, align 8
  %32 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 23
  store i32 5, i32* %32, align 8
  %33 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 24
  store i32 5, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 25
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 26
  store i8 1, i8* %35, align 1
  %36 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 27
  %37 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 32, i32 0
  store i64 0, i64* %37, align 8
  %38 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 33
  call void @llvm.memset.p0i8.i64(i8* align 2 %36, i8 0, i64 5, i1 false)
  store i8 1, i8* %38, align 8
  %39 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 34
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 35
  store i32 0, i32* %40, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net10QuicParamsC2ERKS0_(%"struct.net::QuicParams"*, %"struct.net::QuicParams"* readonly dereferenceable(240)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::QuicParams"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #8
  %4 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.quic::ParsedQuicVersion"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"struct.net::QuicParams"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %93, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 2305843009213693951
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"struct.net::QuicParams"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #9
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #7
  %18 = bitcast i8* %17 to %"struct.quic::ParsedQuicVersion"*
  %19 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %"struct.quic::ParsedQuicVersion"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"struct.net::QuicParams"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %18, i64 %10
  %23 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.quic::ParsedQuicVersion"* %22, %"struct.quic::ParsedQuicVersion"** %23, align 8
  %24 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %24, align 8
  %26 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %4, align 8
  %27 = bitcast %"struct.quic::ParsedQuicVersion"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"struct.quic::ParsedQuicVersion"* %25, %26
  br i1 %29, label %91, label %30

30:                                               ; preds = %16
  %31 = ptrtoint %"struct.quic::ParsedQuicVersion"* %25 to i64
  %32 = getelementptr %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %26, i64 -1, i32 0
  %33 = ptrtoint i32* %32 to i64
  %34 = sub i64 %33, %31
  %35 = lshr i64 %34, 3
  %36 = add nuw nsw i64 %35, 1
  %37 = and i64 %36, 3
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %53, label %39

39:                                               ; preds = %30, %39
  %40 = phi %"struct.quic::ParsedQuicVersion"* [ %50, %39 ], [ %18, %30 ]
  %41 = phi %"struct.quic::ParsedQuicVersion"* [ %49, %39 ], [ %25, %30 ]
  %42 = phi i64 [ %51, %39 ], [ %37, %30 ]
  %43 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %41, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %41, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %40, i64 0, i32 0
  store i32 %44, i32* %47, align 4
  %48 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %40, i64 0, i32 1
  store i32 %46, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %41, i64 1
  %50 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %40, i64 1
  %51 = add i64 %42, -1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %39, !llvm.loop !5

53:                                               ; preds = %39, %30
  %54 = phi %"struct.quic::ParsedQuicVersion"* [ undef, %30 ], [ %50, %39 ]
  %55 = phi %"struct.quic::ParsedQuicVersion"* [ %18, %30 ], [ %50, %39 ]
  %56 = phi %"struct.quic::ParsedQuicVersion"* [ %25, %30 ], [ %49, %39 ]
  %57 = icmp ult i64 %34, 24
  br i1 %57, label %88, label %58

58:                                               ; preds = %53, %58
  %59 = phi %"struct.quic::ParsedQuicVersion"* [ %86, %58 ], [ %55, %53 ]
  %60 = phi %"struct.quic::ParsedQuicVersion"* [ %85, %58 ], [ %56, %53 ]
  %61 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %60, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %60, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %59, i64 0, i32 0
  store i32 %62, i32* %65, align 4
  %66 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %59, i64 0, i32 1
  store i32 %64, i32* %66, align 4
  %67 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %60, i64 1, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %60, i64 1, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %59, i64 1, i32 0
  store i32 %68, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %59, i64 1, i32 1
  store i32 %70, i32* %72, align 4
  %73 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %60, i64 2, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %60, i64 2, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %59, i64 2, i32 0
  store i32 %74, i32* %77, align 4
  %78 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %59, i64 2, i32 1
  store i32 %76, i32* %78, align 4
  %79 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %60, i64 3, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %60, i64 3, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %59, i64 3, i32 0
  store i32 %80, i32* %83, align 4
  %84 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %59, i64 3, i32 1
  store i32 %82, i32* %84, align 4
  %85 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %60, i64 4
  %86 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %59, i64 4
  %87 = icmp eq %"struct.quic::ParsedQuicVersion"* %85, %26
  br i1 %87, label %88, label %58

88:                                               ; preds = %58, %53
  %89 = phi %"struct.quic::ParsedQuicVersion"* [ %54, %53 ], [ %86, %58 ]
  %90 = ptrtoint %"struct.quic::ParsedQuicVersion"* %89 to i64
  br label %91

91:                                               ; preds = %88, %16
  %92 = phi i64 [ %28, %16 ], [ %90, %88 ]
  store i64 %92, i64* %27, align 8
  br label %93

93:                                               ; preds = %2, %91
  %94 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 1
  %95 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %1, i64 0, i32 1
  %96 = bitcast %"class.std::__1::basic_string"* %95 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %103, label %100

100:                                              ; preds = %93
  %101 = bitcast %"class.std::__1::basic_string"* %94 to i8*
  %102 = bitcast %"class.std::__1::basic_string"* %95 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %102, i64 24, i1 false) #8
  br label %108

103:                                              ; preds = %93
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  %106 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %107 = load i64, i64* %106, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %94, i8* %105, i64 %107) #8
  br label %108

108:                                              ; preds = %100, %103
  %109 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 2
  %110 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %1, i64 0, i32 2
  %111 = bitcast i64* %109 to i8*
  %112 = bitcast i64* %110 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 16, i1 false)
  %113 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 4
  %114 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %113, i64 0, i32 0
  %115 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %113, i64 0, i32 0, i32 0
  %116 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 4, i32 0, i32 1
  %118 = bitcast %"class.std::__1::__compressed_pair.6"* %117 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %116, %"class.std::__1::__tree_end_node"** %115, align 8
  %119 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %1, i64 0, i32 4, i32 0, i32 0
  %120 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %119, align 8
  %121 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %122 = icmp eq %"class.std::__1::__tree_end_node"* %120, %121
  br i1 %122, label %158, label %123

123:                                              ; preds = %108, %155
  %124 = phi %"class.std::__1::__tree_end_node"* [ %156, %155 ], [ %120, %108 ]
  %125 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %124, i64 4
  %126 = bitcast %"class.std::__1::__tree_end_node"* %125 to %"class.net::HostPortPair"*
  %127 = tail call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE30__emplace_hint_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEENS_21__tree_const_iteratorIS2_SG_lEERKT_DpOT0_(%"class.std::__1::__tree"* %114, %"class.std::__1::__tree_end_node"* %116, %"class.net::HostPortPair"* dereferenceable(32) %126, %"class.net::HostPortPair"* dereferenceable(32) %126) #8
  %128 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %124, i64 1, i32 0
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = icmp eq %"class.std::__1::__tree_node_base"* %129, null
  br i1 %130, label %131, label %139

131:                                              ; preds = %123
  %132 = bitcast %"class.std::__1::__tree_end_node"* %124 to %"class.std::__1::__tree_node_base"*
  %133 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %124, i64 2
  %134 = bitcast %"class.std::__1::__tree_end_node"* %133 to %"class.std::__1::__tree_end_node"**
  %135 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %134, align 8
  %136 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %135, i64 0, i32 0
  %137 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %136, align 8
  %138 = icmp eq %"class.std::__1::__tree_node_base"* %137, %132
  br i1 %138, label %155, label %146

139:                                              ; preds = %123, %139
  %140 = phi %"class.std::__1::__tree_node_base"* [ %142, %139 ], [ %129, %123 ]
  %141 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %140, i64 0, i32 0, i32 0
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %141, align 8
  %143 = icmp eq %"class.std::__1::__tree_node_base"* %142, null
  br i1 %143, label %144, label %139

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %140, i64 0, i32 0
  br label %155

146:                                              ; preds = %131, %146
  %147 = phi %"class.std::__1::__tree_end_node"** [ %150, %146 ], [ %134, %131 ]
  %148 = bitcast %"class.std::__1::__tree_end_node"** %147 to %"class.std::__1::__tree_node_base"**
  %149 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %148, align 8
  %150 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %149, i64 0, i32 2
  %151 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %150, align 8
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %151, i64 0, i32 0
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, %149
  br i1 %154, label %155, label %146

155:                                              ; preds = %146, %144, %131
  %156 = phi %"class.std::__1::__tree_end_node"* [ %145, %144 ], [ %135, %131 ], [ %151, %146 ]
  %157 = icmp eq %"class.std::__1::__tree_end_node"* %156, %121
  br i1 %157, label %158, label %123

158:                                              ; preds = %155, %108
  %159 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 5
  %160 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %1, i64 0, i32 5
  %161 = bitcast %"class.std::__1::vector.14"* %159 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %161, i8 0, i64 24, i1 false) #8
  %162 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %1, i64 0, i32 5, i32 0, i32 1
  %163 = bitcast i32** %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = bitcast %"class.std::__1::vector.14"* %160 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = sub i64 %164, %166
  %168 = ashr exact i64 %167, 2
  %169 = icmp eq i64 %167, 0
  br i1 %169, label %197, label %170

170:                                              ; preds = %158
  %171 = icmp ugt i64 %168, 4611686018427387903
  br i1 %171, label %172, label %174

172:                                              ; preds = %170
  %173 = bitcast %"class.std::__1::vector.14"* %159 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %173) #9
  unreachable

174:                                              ; preds = %170
  %175 = tail call i8* @_Znwm(i64 %167) #7
  %176 = bitcast i8* %175 to i32*
  %177 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 5, i32 0, i32 1
  %178 = bitcast i32** %177 to i8**
  store i8* %175, i8** %178, align 8
  %179 = bitcast %"class.std::__1::vector.14"* %159 to i8**
  store i8* %175, i8** %179, align 8
  %180 = getelementptr inbounds i32, i32* %176, i64 %168
  %181 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  store i32* %180, i32** %181, align 8
  %182 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %160, i64 0, i32 0, i32 0
  %183 = load i32*, i32** %182, align 8
  %184 = load i64, i64* %163, align 8
  %185 = bitcast i32** %177 to i64*
  %186 = ptrtoint i8* %175 to i64
  %187 = ptrtoint i32* %183 to i64
  %188 = sub i64 %184, %187
  %189 = icmp sgt i64 %188, 0
  br i1 %189, label %190, label %195

190:                                              ; preds = %174
  %191 = lshr exact i64 %188, 2
  %192 = bitcast i32* %183 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %175, i8* align 4 %192, i64 %188, i1 false) #8
  %193 = getelementptr inbounds i32, i32* %176, i64 %191
  %194 = ptrtoint i32* %193 to i64
  br label %195

195:                                              ; preds = %190, %174
  %196 = phi i64 [ %194, %190 ], [ %186, %174 ]
  store i64 %196, i64* %185, align 8
  br label %197

197:                                              ; preds = %158, %195
  %198 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 6
  %199 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %1, i64 0, i32 6
  %200 = bitcast %"class.std::__1::vector.14"* %198 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %200, i8 0, i64 24, i1 false) #8
  %201 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %1, i64 0, i32 6, i32 0, i32 1
  %202 = bitcast i32** %201 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = bitcast %"class.std::__1::vector.14"* %199 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = sub i64 %203, %205
  %207 = ashr exact i64 %206, 2
  %208 = icmp eq i64 %206, 0
  br i1 %208, label %236, label %209

209:                                              ; preds = %197
  %210 = icmp ugt i64 %207, 4611686018427387903
  br i1 %210, label %211, label %213

211:                                              ; preds = %209
  %212 = bitcast %"class.std::__1::vector.14"* %198 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %212) #9
  unreachable

213:                                              ; preds = %209
  %214 = tail call i8* @_Znwm(i64 %206) #7
  %215 = bitcast i8* %214 to i32*
  %216 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 6, i32 0, i32 1
  %217 = bitcast i32** %216 to i8**
  store i8* %214, i8** %217, align 8
  %218 = bitcast %"class.std::__1::vector.14"* %198 to i8**
  store i8* %214, i8** %218, align 8
  %219 = getelementptr inbounds i32, i32* %215, i64 %207
  %220 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store i32* %219, i32** %220, align 8
  %221 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %199, i64 0, i32 0, i32 0
  %222 = load i32*, i32** %221, align 8
  %223 = load i64, i64* %202, align 8
  %224 = bitcast i32** %216 to i64*
  %225 = ptrtoint i8* %214 to i64
  %226 = ptrtoint i32* %222 to i64
  %227 = sub i64 %223, %226
  %228 = icmp sgt i64 %227, 0
  br i1 %228, label %229, label %234

229:                                              ; preds = %213
  %230 = lshr exact i64 %227, 2
  %231 = bitcast i32* %222 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %214, i8* align 4 %231, i64 %227, i1 false) #8
  %232 = getelementptr inbounds i32, i32* %215, i64 %230
  %233 = ptrtoint i32* %232 to i64
  br label %234

234:                                              ; preds = %229, %213
  %235 = phi i64 [ %233, %229 ], [ %225, %213 ]
  store i64 %235, i64* %224, align 8
  br label %236

236:                                              ; preds = %197, %234
  %237 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 7
  %238 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %1, i64 0, i32 7
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %237, i8* align 8 %238, i64 104, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net10QuicParamsD2Ev(%"struct.net::QuicParams"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i32* %3 to i64
  %7 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 6, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #7
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 5, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i32* %12 to i64
  %16 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 5, i32 0, i32 1
  %17 = bitcast i32** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i32* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #7
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 4, i32 0
  %21 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %22 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node"**
  %23 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %22, align 8
  tail call void @_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %20, %"class.std::__1::__tree_node"* %23) #8
  %24 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 1
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  tail call void @_ZdlPv(i8* %31) #7
  br label %32

32:                                               ; preds = %19, %29
  %33 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %33, align 8
  %35 = icmp eq %"struct.quic::ParsedQuicVersion"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = ptrtoint %"struct.quic::ParsedQuicVersion"* %34 to i64
  %38 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %0, i64 0, i32 0, i32 0, i32 1
  %39 = bitcast %"struct.quic::ParsedQuicVersion"** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"struct.quic::ParsedQuicVersion"* %34 to i8*
  tail call void @_ZdlPv(i8* %40) #7
  br label %41

41:                                               ; preds = %32, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11QuicContextC2Ev(%"class.net::QuicContext"*) unnamed_addr #0 align 2 {
  %2 = tail call %"class.quic::QuicChromiumClock"* @_ZN4quic17QuicChromiumClock11GetInstanceEv() #8
  %3 = tail call %"class.quic::QuicRandom"* @_ZN4quic10QuicRandom11GetInstanceEv() #8
  %4 = tail call i8* @_Znwm(i64 24) #7
  %5 = bitcast i8* %4 to %"class.net::QuicChromiumConnectionHelper"*
  %6 = getelementptr inbounds %"class.quic::QuicChromiumClock", %"class.quic::QuicChromiumClock"* %2, i64 0, i32 0
  tail call void @_ZN3net28QuicChromiumConnectionHelperC1EPKN4quic9QuicClockEPNS1_10QuicRandomE(%"class.net::QuicChromiumConnectionHelper"* nonnull %5, %"class.quic::QuicClock"* %6, %"class.quic::QuicRandom"* %3) #8
  %7 = ptrtoint i8* %4 to i64
  %8 = bitcast %"class.net::QuicContext"* %0 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1
  %10 = tail call i8* @_Znwm(i64 16) #7, !noalias !7
  %11 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = bitcast %"struct.net::QuicParams"* %9 to i8**
  store i8* %10, i8** %12, align 8, !alias.scope !7
  %13 = getelementptr inbounds i8, i8* %10, i64 16
  %14 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"struct.quic::ParsedQuicVersion"** %14 to i8**
  store i8* %13, i8** %15, align 8, !alias.scope !7
  %16 = bitcast i8* %10 to <4 x i32>*
  store <4 x i32> <i32 1, i32 50, i32 2, i32 73>, <4 x i32>* %16, align 4, !noalias !7
  %17 = bitcast %"struct.quic::ParsedQuicVersion"** %11 to i64*
  %18 = ptrtoint i8* %13 to i64
  store i64 %18, i64* %17, align 8, !alias.scope !7
  %19 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #8
  %21 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 2
  %22 = bitcast i64* %21 to <2 x i64>*
  store <2 x i64> <i64 1350, i64 0>, <2 x i64>* %22, align 8
  %23 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 4, i32 0, i32 1, i32 0, i32 0
  %25 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 4, i32 0, i32 0
  %26 = bitcast %"class.std::__1::__tree_node_base"** %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %24, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 5
  %28 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 8
  %29 = bitcast %"class.std::__1::vector.14"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 49, i1 false) #8
  store i8 1, i8* %28, align 1
  %30 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 9
  store i8 0, i8* %30, align 2
  %31 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 10
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 11, i32 0
  %33 = bitcast i64* %32 to <2 x i64>*
  store <2 x i64> <i64 30000000, i64 15000000>, <2 x i64>* %33, align 8
  %34 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 13, i32 0
  %35 = bitcast i64* %34 to <2 x i64>*
  store <2 x i64> <i64 0, i64 10000000>, <2 x i64>* %35, align 8
  %36 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 15, i32 0
  store i64 5000000, i64* %36, align 8
  %37 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 16
  %38 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 21, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 5, i1 false) #8
  store i64 30000000, i64* %38, align 8
  %39 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 22, i32 0
  store i64 128000000, i64* %39, align 8
  %40 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 23
  store i32 5, i32* %40, align 8
  %41 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 24
  store i32 5, i32* %41, align 4
  %42 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 25
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 26
  store i8 1, i8* %43, align 1
  %44 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 27
  %45 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 32, i32 0
  store i64 0, i64* %45, align 8
  %46 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 33
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %44, i8 0, i64 5, i1 false) #8
  store i8 1, i8* %46, align 8
  %47 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 34
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 35
  store i32 0, i32* %48, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.quic::QuicChromiumClock"* @_ZN4quic17QuicChromiumClock11GetInstanceEv() local_unnamed_addr #2

declare %"class.quic::QuicRandom"* @_ZN4quic10QuicRandom11GetInstanceEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11QuicContextC2ENSt3__110unique_ptrIN4quic29QuicConnectionHelperInterfaceENS1_14default_deleteIS4_EEEE(%"class.net::QuicContext"*, %"class.quic::QuicConnectionHelperInterface"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.quic::QuicConnectionHelperInterface"* %1 to i64
  %4 = bitcast %"class.net::QuicContext"* %0 to i64*
  store i64 %3, i64* %4, align 8
  %5 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1
  %6 = tail call i8* @_Znwm(i64 16) #7, !noalias !10
  %7 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.net::QuicParams"* %5 to i8**
  store i8* %6, i8** %8, align 8, !alias.scope !10
  %9 = getelementptr inbounds i8, i8* %6, i64 16
  %10 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast %"struct.quic::ParsedQuicVersion"** %10 to i8**
  store i8* %9, i8** %11, align 8, !alias.scope !10
  %12 = bitcast i8* %6 to <4 x i32>*
  store <4 x i32> <i32 1, i32 50, i32 2, i32 73>, <4 x i32>* %12, align 4, !noalias !10
  %13 = bitcast %"struct.quic::ParsedQuicVersion"** %7 to i64*
  %14 = ptrtoint i8* %9 to i64
  store i64 %14, i64* %13, align 8, !alias.scope !10
  %15 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #8
  %17 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 2
  %18 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> <i64 1350, i64 0>, <2 x i64>* %18, align 8
  %19 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 4, i32 0, i32 1, i32 0, i32 0
  %21 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 4, i32 0, i32 0
  %22 = bitcast %"class.std::__1::__tree_node_base"** %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %20, %"class.std::__1::__tree_end_node"** %21, align 8
  %23 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 5
  %24 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 8
  %25 = bitcast %"class.std::__1::vector.14"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 49, i1 false) #8
  store i8 1, i8* %24, align 1
  %26 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 9
  store i8 0, i8* %26, align 2
  %27 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 10
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 11, i32 0
  %29 = bitcast i64* %28 to <2 x i64>*
  store <2 x i64> <i64 30000000, i64 15000000>, <2 x i64>* %29, align 8
  %30 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 13, i32 0
  %31 = bitcast i64* %30 to <2 x i64>*
  store <2 x i64> <i64 0, i64 10000000>, <2 x i64>* %31, align 8
  %32 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 15, i32 0
  store i64 5000000, i64* %32, align 8
  %33 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 16
  %34 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 21, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 5, i1 false) #8
  store i64 30000000, i64* %34, align 8
  %35 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 22, i32 0
  store i64 128000000, i64* %35, align 8
  %36 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 23
  store i32 5, i32* %36, align 8
  %37 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 24
  store i32 5, i32* %37, align 4
  %38 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 25
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 26
  store i8 1, i8* %39, align 1
  %40 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 27
  %41 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 32, i32 0
  store i64 0, i64* %41, align 8
  %42 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 33
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %40, i8 0, i64 5, i1 false) #8
  store i8 1, i8* %42, align 8
  %43 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 34
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1, i32 35
  store i32 0, i32* %44, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11QuicContextD2Ev(%"class.net::QuicContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 1
  tail call void @_ZN3net10QuicParamsD2Ev(%"struct.net::QuicParams"* %2) #8
  %3 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.quic::QuicConnectionHelperInterface"*, %"class.quic::QuicConnectionHelperInterface"** %3, align 8
  store %"class.quic::QuicConnectionHelperInterface"* null, %"class.quic::QuicConnectionHelperInterface"** %3, align 8
  %5 = icmp eq %"class.quic::QuicConnectionHelperInterface"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.quic::QuicConnectionHelperInterface"* %4 to void (%"class.quic::QuicConnectionHelperInterface"*)***
  %8 = load void (%"class.quic::QuicConnectionHelperInterface"*)**, void (%"class.quic::QuicConnectionHelperInterface"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.quic::QuicConnectionHelperInterface"*)*, void (%"class.quic::QuicConnectionHelperInterface"*)** %8, i64 1
  %10 = load void (%"class.quic::QuicConnectionHelperInterface"*)*, void (%"class.quic::QuicConnectionHelperInterface"*)** %9, align 8
  tail call void %10(%"class.quic::QuicConnectionHelperInterface"* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20InitializeQuicConfigERKNS_10QuicParamsE(%"class.quic::QuicConfig"* noalias sret, %"struct.net::QuicParams"* dereferenceable(240)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.quic::QuicConfig", %"class.quic::QuicConfig"* %0, i64 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 1112, i1 false)
  tail call void @_ZN4quic10QuicConfigC1Ev(%"class.quic::QuicConfig"* %0) #8
  %4 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %1, i64 0, i32 11, i32 0
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4quic10QuicConfig21SetIdleNetworkTimeoutENS_8QuicTime5DeltaE(%"class.quic::QuicConfig"* %0, i64 %5) #8
  %6 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %1, i64 0, i32 14, i32 0
  %7 = getelementptr inbounds %"class.quic::QuicConfig", %"class.quic::QuicConfig"* %0, i64 0, i32 1, i32 0
  %8 = bitcast i64* %6 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  %10 = bitcast i64* %7 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %10, align 8
  %11 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %1, i64 0, i32 5
  tail call void @_ZN4quic10QuicConfig26SetConnectionOptionsToSendERKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.quic::QuicConfig"* %0, %"class.std::__1::vector.14"* dereferenceable(24) %11) #8
  %12 = getelementptr inbounds %"struct.net::QuicParams", %"struct.net::QuicParams"* %1, i64 0, i32 6
  tail call void @_ZN4quic10QuicConfig26SetClientConnectionOptionsERKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.quic::QuicConfig"* %0, %"class.std::__1::vector.14"* dereferenceable(24) %12) #8
  %13 = getelementptr inbounds %"class.quic::QuicConfig", %"class.quic::QuicConfig"* %0, i64 0, i32 3
  store i64 100, i64* %13, align 8
  tail call void @_ZN4quic10QuicConfig40SetInitialSessionFlowControlWindowToSendEm(%"class.quic::QuicConfig"* %0, i64 15728640) #8
  tail call void @_ZN4quic10QuicConfig39SetInitialStreamFlowControlWindowToSendEm(%"class.quic::QuicConfig"* %0, i64 6291456) #8
  tail call void @_ZN4quic10QuicConfig29SetBytesForConnectionIdToSendEj(%"class.quic::QuicConfig"* %0, i32 0) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4quic10QuicConfigC1Ev(%"class.quic::QuicConfig"*) unnamed_addr #2

declare void @_ZN4quic10QuicConfig21SetIdleNetworkTimeoutENS_8QuicTime5DeltaE(%"class.quic::QuicConfig"*, i64) local_unnamed_addr #2

declare void @_ZN4quic10QuicConfig26SetConnectionOptionsToSendERKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.quic::QuicConfig"*, %"class.std::__1::vector.14"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4quic10QuicConfig26SetClientConnectionOptionsERKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.quic::QuicConfig"*, %"class.std::__1::vector.14"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4quic10QuicConfig40SetInitialSessionFlowControlWindowToSendEm(%"class.quic::QuicConfig"*, i64) local_unnamed_addr #2

declare void @_ZN4quic10QuicConfig39SetInitialStreamFlowControlWindowToSendEm(%"class.quic::QuicConfig"*, i64) local_unnamed_addr #2

declare void @_ZN4quic10QuicConfig29SetBytesForConnectionIdToSendEj(%"class.quic::QuicConfig"*, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #8
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #8
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 2
  %11 = bitcast %"class.net::HostPortPair"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #7
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #7
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE30__emplace_hint_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEENS_21__tree_const_iteratorIS2_SG_lEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*, %"class.net::HostPortPair"* dereferenceable(32), %"class.net::HostPortPair"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %6 = alloca %"class.std::__1::__tree_node_base"*, align 8
  %7 = bitcast %"class.std::__1::__tree_end_node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %5, align 8
  %8 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  store %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*), %"class.std::__1::__tree_node_base"** %6, align 8
  %9 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS2_PNS_11__tree_nodeIS2_SA_EElEERPNS_15__tree_end_nodeISC_EESD_RKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %5, %"class.std::__1::__tree_node_base"** nonnull dereferenceable(8) %6, %"class.net::HostPortPair"* dereferenceable(32) %2)
  %10 = bitcast %"class.std::__1::__tree_node_base"** %9 to %"class.std::__1::__tree_node"**
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %12 = icmp eq %"class.std::__1::__tree_node"* %11, null
  br i1 %12, label %13, label %56

13:                                               ; preds = %4
  %14 = call i8* @_Znwm(i64 64) #7, !noalias !13
  %15 = getelementptr inbounds i8, i8* %14, i64 32
  %16 = bitcast %"class.net::HostPortPair"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1, !noalias !13
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.net::HostPortPair"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %21, i64 24, i1 false) #8, !noalias !13
  br label %28

22:                                               ; preds = %13
  %23 = bitcast i8* %15 to %"class.std::__1::basic_string"*
  %24 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8, !noalias !13
  %26 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8, !noalias !13
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %23, i8* %25, i64 %27) #8, !noalias !13
  br label %28

28:                                               ; preds = %20, %22
  %29 = getelementptr inbounds i8, i8* %14, i64 56
  %30 = bitcast i8* %29 to i16*
  %31 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %3, i64 0, i32 1
  %32 = load i16, i16* %31, align 8, !noalias !13
  store i16 %32, i16* %30, align 8, !noalias !13
  %33 = bitcast %"class.std::__1::__tree_end_node"** %5 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast i8* %14 to %"class.std::__1::__tree_node"*
  %36 = bitcast i8* %14 to %"class.std::__1::__tree_node_base"*
  %37 = getelementptr inbounds i8, i8* %14, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #8
  %38 = bitcast i8* %37 to i64*
  store i64 %34, i64* %38, align 8
  %39 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8**
  store i8* %14, i8** %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %41 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %28
  %46 = ptrtoint %"class.std::__1::__tree_node_base"* %43 to i64
  %47 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %46, i64* %47, align 8
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  br label %49

49:                                               ; preds = %45, %28
  %50 = phi %"class.std::__1::__tree_node_base"* [ %36, %28 ], [ %48, %45 ]
  %51 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %52, %"class.std::__1::__tree_node_base"* %50) #8
  %53 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %53, align 8
  br label %56

56:                                               ; preds = %49, %4
  %57 = phi i8 [ 1, %49 ], [ 0, %4 ]
  %58 = phi %"class.std::__1::__tree_node"* [ %35, %49 ], [ %11, %4 ]
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %58, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  %60 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %59, 0
  %61 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %60, i8 %57, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS2_PNS_11__tree_nodeIS2_SA_EElEERPNS_15__tree_end_nodeISC_EESD_RKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.net::HostPortPair"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %6 = ptrtoint %"class.std::__1::__tree_end_node"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %7, %1
  br i1 %8, label %55, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %11 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 7
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to i16*
  %14 = load i16, i16* %11, align 2
  %15 = load i16, i16* %13, align 2
  %16 = icmp ult i16 %14, %15
  br i1 %16, label %55, label %17

17:                                               ; preds = %9
  %18 = icmp ult i16 %15, %14
  br i1 %18, label %174, label %19

19:                                               ; preds = %17
  %20 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %22 to i64
  %28 = select i1 %23, i64 %26, i64 %27
  %29 = bitcast %"class.net::HostPortPair"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  %33 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = zext i8 %31 to i64
  %36 = select i1 %32, i64 %34, i64 %35
  %37 = icmp ult i64 %28, %36
  %38 = select i1 %37, i64 %28, i64 %36
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %51, label %40

40:                                               ; preds = %19
  %41 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = bitcast %"class.net::HostPortPair"* %4 to i8*
  %44 = select i1 %32, i8* %42, i8* %43
  %45 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8*
  %48 = select i1 %23, i8* %46, i8* %47
  %49 = tail call i32 @memcmp(i8* %44, i8* %48, i64 %38) #8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %40, %19
  %52 = icmp ult i64 %36, %28
  br i1 %52, label %55, label %138

53:                                               ; preds = %40
  %54 = icmp slt i32 %49, 0
  br i1 %54, label %55, label %138

55:                                               ; preds = %9, %5, %51, %53
  %56 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %57 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %57, %1
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br i1 %58, label %127, label %61

61:                                               ; preds = %55
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %61, %63
  %64 = phi %"class.std::__1::__tree_node_base"* [ %66, %63 ], [ %60, %61 ]
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %64, i64 0, i32 1
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %79, label %63

68:                                               ; preds = %61, %68
  %69 = phi %"class.std::__1::__tree_end_node"* [ %73, %68 ], [ %1, %61 ]
  %70 = bitcast %"class.std::__1::__tree_end_node"* %69 to %"class.std::__1::__tree_node_base"*
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 2
  %72 = bitcast %"class.std::__1::__tree_end_node"* %71 to %"class.std::__1::__tree_end_node"**
  %73 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node_base"* %75, %70
  br i1 %76, label %68, label %77

77:                                               ; preds = %68
  %78 = bitcast %"class.std::__1::__tree_end_node"* %73 to %"class.std::__1::__tree_node_base"*
  br label %79

79:                                               ; preds = %63, %77
  %80 = phi %"class.std::__1::__tree_node_base"* [ %78, %77 ], [ %64, %63 ]
  %81 = ptrtoint %"class.std::__1::__tree_node_base"* %80 to i64
  %82 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 1
  %83 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 1, i32 3
  %84 = bitcast i8* %83 to i16*
  %85 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 1
  %86 = load i16, i16* %84, align 2
  %87 = load i16, i16* %85, align 2
  %88 = icmp ult i16 %86, %87
  br i1 %88, label %127, label %89

89:                                               ; preds = %79
  %90 = icmp ult i16 %87, %86
  br i1 %90, label %136, label %91

91:                                               ; preds = %89
  %92 = bitcast %"class.net::HostPortPair"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  %96 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = zext i8 %94 to i64
  %99 = select i1 %95, i64 %97, i64 %98
  %100 = bitcast %"class.std::__1::__tree_node_base"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  %104 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 1, i32 1
  %105 = bitcast %"class.std::__1::__tree_node_base"** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = zext i8 %102 to i64
  %108 = select i1 %103, i64 %106, i64 %107
  %109 = icmp ult i64 %99, %108
  %110 = select i1 %109, i64 %99, i64 %108
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %123, label %112

112:                                              ; preds = %91
  %113 = bitcast %"class.std::__1::__tree_node_base"* %82 to i8**
  %114 = load i8*, i8** %113, align 8
  %115 = bitcast %"class.std::__1::__tree_node_base"* %82 to i8*
  %116 = select i1 %103, i8* %114, i8* %115
  %117 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  %119 = bitcast %"class.net::HostPortPair"* %4 to i8*
  %120 = select i1 %95, i8* %118, i8* %119
  %121 = tail call i32 @memcmp(i8* %116, i8* %120, i64 %110) #8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %125

123:                                              ; preds = %112, %91
  %124 = icmp ult i64 %108, %99
  br i1 %124, label %127, label %136

125:                                              ; preds = %112
  %126 = icmp slt i32 %121, 0
  br i1 %126, label %127, label %136

127:                                              ; preds = %55, %79, %123, %125
  %128 = phi i64 [ %81, %125 ], [ %81, %123 ], [ %81, %79 ], [ %6, %55 ]
  %129 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %129, label %130, label %132

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %259

132:                                              ; preds = %127
  %133 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %128, i64* %133, align 8
  %134 = inttoptr i64 %128 to %"class.std::__1::__tree_node_base"*
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %134, i64 0, i32 1
  br label %259

136:                                              ; preds = %89, %123, %125
  %137 = tail call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISC_EERKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"** dereferenceable(8) %2, %"class.net::HostPortPair"* dereferenceable(32) %4)
  br label %259

138:                                              ; preds = %51, %53
  %139 = bitcast %"class.net::HostPortPair"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  %143 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %144 = load i64, i64* %143, align 8
  %145 = zext i8 %141 to i64
  %146 = select i1 %142, i64 %144, i64 %145
  %147 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %147, i64 0, i32 1, i32 0
  %149 = load i8, i8* %148, align 1
  %150 = icmp slt i8 %149, 0
  %151 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %152 = bitcast %"class.std::__1::__tree_end_node"* %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = zext i8 %149 to i64
  %155 = select i1 %150, i64 %153, i64 %154
  %156 = icmp ult i64 %146, %155
  %157 = select i1 %156, i64 %146, i64 %155
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %170, label %159

159:                                              ; preds = %138
  %160 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8**
  %161 = load i8*, i8** %160, align 8
  %162 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8*
  %163 = select i1 %150, i8* %161, i8* %162
  %164 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load i8*, i8** %164, align 8
  %166 = bitcast %"class.net::HostPortPair"* %4 to i8*
  %167 = select i1 %142, i8* %165, i8* %166
  %168 = tail call i32 @memcmp(i8* %163, i8* %167, i64 %157) #8
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %159, %138
  %171 = icmp ult i64 %155, %146
  br i1 %171, label %174, label %256

172:                                              ; preds = %159
  %173 = icmp slt i32 %168, 0
  br i1 %173, label %174, label %256

174:                                              ; preds = %17, %170, %172
  %175 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %176 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %175, align 8
  %177 = icmp eq %"class.std::__1::__tree_node_base"* %176, null
  br i1 %177, label %178, label %186

178:                                              ; preds = %174
  %179 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %180 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %181 = bitcast %"class.std::__1::__tree_end_node"* %180 to %"class.std::__1::__tree_end_node"**
  %182 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %181, align 8
  %183 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %182, i64 0, i32 0
  %184 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %183, align 8
  %185 = icmp eq %"class.std::__1::__tree_node_base"* %184, %179
  br i1 %185, label %202, label %193

186:                                              ; preds = %174, %186
  %187 = phi %"class.std::__1::__tree_node_base"* [ %189, %186 ], [ %176, %174 ]
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %187, i64 0, i32 0, i32 0
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %188, align 8
  %190 = icmp eq %"class.std::__1::__tree_node_base"* %189, null
  br i1 %190, label %191, label %186

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %187, i64 0, i32 0
  br label %202

193:                                              ; preds = %178, %193
  %194 = phi %"class.std::__1::__tree_end_node"** [ %197, %193 ], [ %181, %178 ]
  %195 = bitcast %"class.std::__1::__tree_end_node"** %194 to %"class.std::__1::__tree_node_base"**
  %196 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %195, align 8
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %196, i64 0, i32 2
  %198 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %199 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %198, i64 0, i32 0
  %200 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %199, align 8
  %201 = icmp eq %"class.std::__1::__tree_node_base"* %200, %196
  br i1 %201, label %202, label %193

202:                                              ; preds = %193, %191, %178
  %203 = phi %"class.std::__1::__tree_end_node"* [ %192, %191 ], [ %182, %178 ], [ %198, %193 ]
  %204 = icmp eq %"class.std::__1::__tree_end_node"* %203, %7
  br i1 %204, label %249, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %203, i64 4
  %207 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %203, i64 7
  %208 = bitcast %"class.std::__1::__tree_end_node"* %207 to i16*
  %209 = load i16, i16* %208, align 2
  %210 = icmp ult i16 %14, %209
  br i1 %210, label %249, label %211

211:                                              ; preds = %205
  %212 = icmp ult i16 %209, %14
  br i1 %212, label %254, label %213

213:                                              ; preds = %211
  %214 = bitcast %"class.std::__1::__tree_end_node"* %206 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %215 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %214, i64 0, i32 1, i32 0
  %216 = load i8, i8* %215, align 1
  %217 = icmp slt i8 %216, 0
  %218 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %203, i64 5
  %219 = bitcast %"class.std::__1::__tree_end_node"* %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = zext i8 %216 to i64
  %222 = select i1 %217, i64 %220, i64 %221
  %223 = bitcast %"class.net::HostPortPair"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %223, i64 0, i32 1, i32 0
  %225 = load i8, i8* %224, align 1
  %226 = icmp slt i8 %225, 0
  %227 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %228 = load i64, i64* %227, align 8
  %229 = zext i8 %225 to i64
  %230 = select i1 %226, i64 %228, i64 %229
  %231 = icmp ult i64 %222, %230
  %232 = select i1 %231, i64 %222, i64 %230
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %245, label %234

234:                                              ; preds = %213
  %235 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load i8*, i8** %235, align 8
  %237 = bitcast %"class.net::HostPortPair"* %4 to i8*
  %238 = select i1 %226, i8* %236, i8* %237
  %239 = bitcast %"class.std::__1::__tree_end_node"* %206 to i8**
  %240 = load i8*, i8** %239, align 8
  %241 = bitcast %"class.std::__1::__tree_end_node"* %206 to i8*
  %242 = select i1 %217, i8* %240, i8* %241
  %243 = tail call i32 @memcmp(i8* %238, i8* %242, i64 %232) #8
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %247

245:                                              ; preds = %234, %213
  %246 = icmp ult i64 %230, %222
  br i1 %246, label %249, label %254

247:                                              ; preds = %234
  %248 = icmp slt i32 %243, 0
  br i1 %248, label %249, label %254

249:                                              ; preds = %205, %202, %245, %247
  br i1 %177, label %250, label %252

250:                                              ; preds = %249
  %251 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %251, align 8
  br label %259

252:                                              ; preds = %249
  store %"class.std::__1::__tree_end_node"* %203, %"class.std::__1::__tree_end_node"** %2, align 8
  %253 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %203, i64 0, i32 0
  br label %259

254:                                              ; preds = %211, %245, %247
  %255 = tail call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISC_EERKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"** dereferenceable(8) %2, %"class.net::HostPortPair"* dereferenceable(32) %4)
  br label %259

256:                                              ; preds = %170, %172
  %257 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %257, align 8
  %258 = bitcast %"class.std::__1::__tree_node_base"** %3 to i64*
  store i64 %6, i64* %258, align 8
  br label %259

259:                                              ; preds = %250, %252, %254, %130, %132, %136, %256
  %260 = phi %"class.std::__1::__tree_node_base"** [ %3, %256 ], [ %131, %130 ], [ %135, %132 ], [ %137, %136 ], [ %175, %250 ], [ %253, %252 ], [ %255, %254 ]
  ret %"class.std::__1::__tree_node_base"** %260
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISC_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.net::HostPortPair"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %101, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %2, i64 0, i32 1
  %11 = load i16, i16* %10, align 2
  %12 = bitcast %"class.net::HostPortPair"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = zext i8 %14 to i64
  %18 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.net::HostPortPair"* %2 to i8*
  br label %20

20:                                               ; preds = %8, %97
  %21 = phi %"class.std::__1::__tree_node"* [ %100, %97 ], [ %6, %8 ]
  %22 = phi %"class.std::__1::__tree_node_base"** [ %99, %97 ], [ %9, %8 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 2
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 2, i32 1
  %25 = load i16, i16* %24, align 2
  %26 = icmp ult i16 %11, %25
  br i1 %26, label %56, label %27

27:                                               ; preds = %20
  %28 = icmp ult i16 %25, %11
  br i1 %28, label %89, label %29

29:                                               ; preds = %27
  %30 = bitcast %"class.net::HostPortPair"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = zext i8 %32 to i64
  %37 = select i1 %33, i64 %35, i64 %36
  %38 = load i64, i64* %16, align 8
  %39 = select i1 %15, i64 %38, i64 %17
  %40 = icmp ult i64 %37, %39
  %41 = select i1 %40, i64 %37, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %29
  %44 = load i8*, i8** %18, align 8
  %45 = select i1 %15, i8* %44, i8* %19
  %46 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = bitcast %"class.net::HostPortPair"* %23 to i8*
  %49 = select i1 %33, i8* %47, i8* %48
  %50 = tail call i32 @memcmp(i8* %45, i8* %49, i64 %41) #8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %43, %29
  %53 = icmp ult i64 %39, %37
  br i1 %53, label %56, label %62

54:                                               ; preds = %43
  %55 = icmp slt i32 %50, 0
  br i1 %55, label %56, label %62

56:                                               ; preds = %20, %52, %54
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, null
  br i1 %59, label %60, label %97

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %61, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %103

62:                                               ; preds = %52, %54
  %63 = load i64, i64* %16, align 8
  %64 = select i1 %15, i64 %63, i64 %17
  %65 = bitcast %"class.net::HostPortPair"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  %69 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = zext i8 %67 to i64
  %72 = select i1 %68, i64 %70, i64 %71
  %73 = icmp ult i64 %64, %72
  %74 = select i1 %73, i64 %64, i64 %72
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %85, label %76

76:                                               ; preds = %62
  %77 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = bitcast %"class.net::HostPortPair"* %23 to i8*
  %80 = select i1 %68, i8* %78, i8* %79
  %81 = load i8*, i8** %18, align 8
  %82 = select i1 %15, i8* %81, i8* %19
  %83 = tail call i32 @memcmp(i8* %80, i8* %82, i64 %74) #8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %76, %62
  %86 = icmp ult i64 %72, %64
  br i1 %86, label %89, label %95

87:                                               ; preds = %76
  %88 = icmp slt i32 %83, 0
  br i1 %88, label %89, label %95

89:                                               ; preds = %27, %85, %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 1
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %90, align 8
  %92 = icmp eq %"class.std::__1::__tree_node_base"* %91, null
  br i1 %92, label %93, label %97

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %94, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %103

95:                                               ; preds = %85, %87
  %96 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %96, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %103

97:                                               ; preds = %89, %56
  %98 = phi %"class.std::__1::__tree_node_base"* [ %58, %56 ], [ %91, %89 ]
  %99 = phi %"class.std::__1::__tree_node_base"** [ %57, %56 ], [ %90, %89 ]
  %100 = bitcast %"class.std::__1::__tree_node_base"* %98 to %"class.std::__1::__tree_node"*
  br label %20

101:                                              ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %103

103:                                              ; preds = %101, %95, %93, %60
  %104 = phi %"class.std::__1::__tree_node_base"** [ %57, %60 ], [ %90, %93 ], [ %22, %95 ], [ %102, %101 ]
  ret %"class.std::__1::__tree_node_base"** %104
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !16
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !16
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !16
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare void @_ZN3net28QuicChromiumConnectionHelperC1EPKN4quic9QuicClockEPNS1_10QuicRandomE(%"class.net::QuicChromiumConnectionHelper"*, %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3net28DefaultSupportedQuicVersionsEv: argument 0"}
!4 = distinct !{!4, !"_ZN3net28DefaultSupportedQuicVersionsEv"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN3net28DefaultSupportedQuicVersionsEv: argument 0"}
!9 = distinct !{!9, !"_ZN3net28DefaultSupportedQuicVersionsEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN3net28DefaultSupportedQuicVersionsEv: argument 0"}
!12 = distinct !{!12, !"_ZN3net28DefaultSupportedQuicVersionsEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!16 = !{i8 0, i8 2}
