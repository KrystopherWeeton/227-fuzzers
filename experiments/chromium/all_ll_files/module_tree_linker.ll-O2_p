; ModuleID = '../../third_party/blink/renderer/core/loader/modulescript/module_tree_linker.cc'
source_filename = "../../third_party/blink/renderer/core/loader/modulescript/module_tree_linker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.218", i32, [4 x i8], %"class.std::__1::unique_ptr.356", %"class.std::__1::unique_ptr.356", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.373", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.385", %"class.std::__1::unique_ptr.391", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.398", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.251", %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.269", %"class.std::__1::unique_ptr.269", %"class.std::__1::unique_ptr.276", %"class.std::__1::unique_ptr.283", %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.297", %"class.std::__1::unique_ptr.304", %"class.std::__1::unique_ptr.311", %"class.std::__1::unique_ptr.336", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.254" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.254" = type { %"struct.std::__1::__atomic_base.255" }
%"struct.std::__1::__atomic_base.255" = type { %"struct.std::__1::__atomic_base.256" }
%"struct.std::__1::__atomic_base.256" = type { %"struct.std::__1::__cxx_atomic_impl.257" }
%"struct.std::__1::__cxx_atomic_impl.257" = type { %"struct.std::__1::__cxx_atomic_base_impl.258" }
%"struct.std::__1::__cxx_atomic_base_impl.258" = type { i64 }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.blink::Worklist.265"* }
%"class.blink::Worklist.265" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.254" }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.blink::Worklist.272"* }
%"class.blink::Worklist.272" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.254" }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::Worklist.279"* }
%"class.blink::Worklist.279" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.254" }
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.blink::Worklist.286"* }
%"class.blink::Worklist.286" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.254" }
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.blink::Worklist.293"* }
%"class.blink::Worklist.293" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.254" }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::Worklist.300"* }
%"class.blink::Worklist.300" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.254" }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.blink::Worklist.307"* }
%"class.blink::Worklist.307" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.254" }
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.314", %"class.std::__1::__compressed_pair.322", %"class.std::__1::__compressed_pair.327", %"class.std::__1::__compressed_pair.329", [4 x i8] }>
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316", %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { i64 }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { float }
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.339", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.348" }
%"class.WTF::Vector.348" = type { %"class.WTF::VectorBuffer.349" }
%"class.WTF::VectorBuffer.349" = type { %"class.WTF::VectorBufferBase.350" }
%"class.WTF::VectorBufferBase.350" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.356" = type { %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.364" }
%"class.WTF::VectorBuffer.364" = type { %"class.WTF::VectorBufferBase.365" }
%"class.WTF::VectorBufferBase.365" = type { %"struct.std::__1::pair.366"*, i32, i32 }
%"struct.std::__1::pair.366" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.379" }
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.265"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.272"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.279"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.286"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.293"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.482", i64 }
%"class.std::__1::vector.482" = type { %"class.std::__1::__vector_base.483" }
%"class.std::__1::__vector_base.483" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.484" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.397 }
%class.scoped_refptr.397 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.398" = type { %"struct.std::__1::__atomic_base.399" }
%"struct.std::__1::__atomic_base.399" = type { %"struct.std::__1::__cxx_atomic_impl.400" }
%"struct.std::__1::__cxx_atomic_impl.400" = type { %"struct.std::__1::__cxx_atomic_base_impl.401" }
%"struct.std::__1::__cxx_atomic_base_impl.401" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.7" }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i32 }
%"class.blink::ModuleTreeLinker" = type { %"class.blink::SingleModuleClient", %"class.blink::Member.506", i32, i32, %"class.blink::Member.507", i32, [4 x i8], %"class.WTF::HashSet.509", %"class.blink::Member.514", %"class.blink::Member.516", i32, %"class.blink::Member.518", i8, i64 }
%"class.blink::SingleModuleClient" = type { %"class.blink::NameClient" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::Member.506" = type { %"class.blink::MemberBase.450" }
%"class.blink::MemberBase.450" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::Modulator"* }
%"class.WTF::HashSet.509" = type { %"class.WTF::HashTable.510" }
%"class.WTF::HashTable.510" = type <{ %"struct.std::__1::pair.513"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.513" = type <{ %"class.blink::KURL", i32, [4 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::ModuleTreeLinkerRegistry"* }
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::ModuleTreeClient"* }
%"class.blink::Member.518" = type { %"class.blink::MemberBase.519" }
%"class.blink::MemberBase.519" = type { %"class.blink::ModuleScript"* }
%"class.blink::ModuleScript" = type { %"class.blink::Script", %"class.blink::Member.507", %"class.blink::TraceWrapperV8Reference", %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference", %"class.WTF::HashMap.525", %"class.blink::KURL" }
%"class.blink::Script" = type { i32 (...)**, %"class.blink::ScriptFetchOptions", %"class.blink::KURL" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet.212", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias", [6 x i8] }>
%"class.WTF::HashSet.212" = type { %"class.WTF::HashTable.213" }
%"class.WTF::HashTable.213" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%"class.base::StrongAlias" = type { i8 }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.522", %class.scoped_refptr.216 }
%"class.blink::TraceWrapperV8Reference.522" = type { %"class.v8::TracedReference.523" }
%"class.v8::TracedReference.523" = type { %"class.v8::BasicTracedReference.524" }
%"class.v8::BasicTracedReference.524" = type { %"class.v8::TracedReferenceBase" }
%class.scoped_refptr.216 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.217" }
%"class.base::RefCounted.217" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::HashMap.525" = type { %"class.WTF::HashTable.526" }
%"class.WTF::HashTable.526" = type <{ %"struct.WTF::KeyValuePair.529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.529" = type opaque
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member", %"class.blink::Member.2", %"class.blink::Member.4", %class.scoped_refptr.6, %class.scoped_refptr.6, %"class.blink::Member.12", %"class.blink::Member.14", %"class.blink::Member.16", %"class.blink::Member.20", %"class.blink::Member.65", %"class.blink::HeapHashMap.67", %"class.blink::HeapHashSet", %"class.blink::HeapHashSet", %"class.blink::HeapHashMap.432", %"class.blink::HeapVector", %"class.blink::Member.446", %"class.blink::HeapTaskRunnerTimer", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.451", %"class.WTF::Vector.458", %"class.blink::HeapHashSet.464", %"class.blink::HeapHashSet.464", %"class.std::__1::unique_ptr.470", %"class.base::WeakPtr", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.479", i8, i8, %"class.base::WeakPtrFactory.481" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%class.scoped_refptr.6 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.7" }
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type opaque
%"class.blink::Member.16" = type { %"class.blink::MemberBase.17" }
%"class.blink::MemberBase.17" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.24", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap", %"class.WTF::HashSet", i8, [3 x i8], i32, %"class.blink::HeapHashMap", %"class.std::__1::map", %"class.std::__1::map.41", %"class.std::__1::unique_ptr.50", %"class.blink::Member.14", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.63", %"class.mojo::InlinedStructPtr", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.26" }
%"class.WTF::HashTable.26" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.31" }
%"class.WTF::HashMap.31" = type { %"class.WTF::HashTable.32" }
%"class.WTF::HashTable.32" = type <{ %"struct.WTF::KeyValuePair.34"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.34" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::map.41" = type { %"class.std::__1::__tree.42" }
%"class.std::__1::__tree.42" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.67" = type { %"class.WTF::HashMap.70" }
%"class.WTF::HashMap.70" = type { %"class.WTF::HashTable.71" }
%"class.WTF::HashTable.71" = type <{ %"struct.WTF::KeyValuePair.73"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.73" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.76" }
%"class.WTF::HashSet.76" = type { %"class.WTF::HashTable.77" }
%"class.WTF::HashTable.77" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.79" }
%"class.blink::MemberBase.79" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.105", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.205", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.407", %"class.blink::ResourceResponse", %class.scoped_refptr.409, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.82", i8, %"class.absl::optional.93", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.82" = type { %"class.absl::optional_internal::optional_data.83" }
%"class.absl::optional_internal::optional_data.83" = type { %"class.absl::optional_internal::optional_data_base.84" }
%"class.absl::optional_internal::optional_data_base.84" = type { %"class.absl::optional_internal::optional_data_dtor_base.85" }
%"class.absl::optional_internal::optional_data_dtor_base.85" = type { i8, [7 x i8], %union.anon.86 }
%union.anon.86 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.89 }
%union.anon.89 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.93" = type { %"class.absl::optional_internal::optional_data.94" }
%"class.absl::optional_internal::optional_data.94" = type { %"class.absl::optional_internal::optional_data_base.95" }
%"class.absl::optional_internal::optional_data_base.95" = type { %"class.absl::optional_internal::optional_data_dtor_base.96" }
%"class.absl::optional_internal::optional_data_dtor_base.96" = type { i8, %union.anon.97 }
%union.anon.97 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector", %"class.WTF::Vector.100" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i32*, i32, i32 }
%"class.WTF::Vector.100" = type { %"class.WTF::VectorBuffer.101" }
%"class.WTF::VectorBuffer.101" = type { %"class.WTF::VectorBufferBase.102" }
%"class.WTF::VectorBufferBase.102" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.105" = type { %"class.WTF::VectorBuffer.106" }
%"class.WTF::VectorBuffer.106" = type { %"class.WTF::VectorBufferBase.107" }
%"class.WTF::VectorBufferBase.107" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.201" }
%"class.WTF::HashMap.201" = type { %"class.WTF::HashTable.202" }
%"class.WTF::HashTable.202" = type <{ %"struct.WTF::KeyValuePair.204"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.204" = type <{ %"class.blink::WeakMember.629", i32, [4 x i8] }>
%"class.blink::WeakMember.629" = type { %"class.blink::MemberBase.630" }
%"class.blink::MemberBase.630" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type opaque
%"class.blink::HeapHashSet.205" = type { %"class.WTF::HashSet.208" }
%"class.WTF::HashSet.208" = type { %"class.WTF::HashTable.209" }
%"class.WTF::HashTable.209" = type <{ %"class.blink::WeakMember.211"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.211" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.212", i8, i8, %class.scoped_refptr.216, %class.scoped_refptr.402, %class.scoped_refptr.404 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%class.scoped_refptr.402 = type { %"class.base::RefCountedData.403"* }
%"class.base::RefCountedData.403" = type opaque
%class.scoped_refptr.404 = type { %"class.base::RefCountedData.405"* }
%"class.base::RefCountedData.405" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.164" }
%"class.base::time_internal::TimeBase.164" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.113, %class.scoped_refptr.113, %class.scoped_refptr.113, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.119, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.128", %"class.absl::optional.133", %"class.absl::optional.143", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.153", %"class.absl::optional.143", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.143", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.153", %"class.absl::optional.158", i8, %class.scoped_refptr.163 }
%"class.base::TimeDelta" = type { i64 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.108" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.108" = type { %"class.absl::optional_internal::optional_data.109" }
%"class.absl::optional_internal::optional_data.109" = type { %"class.absl::optional_internal::optional_data_base.110" }
%"class.absl::optional_internal::optional_data_base.110" = type { %"class.absl::optional_internal::optional_data_dtor_base.111" }
%"class.absl::optional_internal::optional_data_dtor_base.111" = type { i8, %union.anon.112 }
%union.anon.112 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.113 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.489", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.108", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.113 }
%"class.WTF::RefCounted.489" = type { %"class.base::RefCounted.490" }
%"class.base::RefCounted.490" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.114" }
%"class.WTF::HashMap.114" = type { %"class.WTF::HashTable.115" }
%"class.WTF::HashTable.115" = type <{ %"struct.WTF::KeyValuePair.118"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.118" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.119 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.126, i8, %"class.url::Origin" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.120"*, %"class.std::__1::unique_ptr.120"*, %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.615" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.616" }
%"struct.std::__1::__compressed_pair_elem.616" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.std::__1::unique_ptr.120"* }
%class.scoped_refptr.126 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.127", [4 x i8] }>
%"class.base::RefCountedThreadSafe.127" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.128" = type { %"class.absl::optional_internal::optional_data.129" }
%"class.absl::optional_internal::optional_data.129" = type { %"class.absl::optional_internal::optional_data_base.130" }
%"class.absl::optional_internal::optional_data_base.130" = type { %"class.absl::optional_internal::optional_data_dtor_base.131" }
%"class.absl::optional_internal::optional_data_dtor_base.131" = type { i8, %union.anon.132 }
%union.anon.132 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.133" = type { %"class.absl::optional_internal::optional_data.134" }
%"class.absl::optional_internal::optional_data.134" = type { %"class.absl::optional_internal::optional_data_base.135" }
%"class.absl::optional_internal::optional_data_base.135" = type { %"class.absl::optional_internal::optional_data_dtor_base.136" }
%"class.absl::optional_internal::optional_data_dtor_base.136" = type { i8, %union.anon.137 }
%union.anon.137 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.138", %"class.WTF::Vector.100", %"class.WTF::String" }
%"class.WTF::Vector.138" = type { %"class.WTF::VectorBuffer.139" }
%"class.WTF::VectorBuffer.139" = type { %"class.WTF::VectorBufferBase.140" }
%"class.WTF::VectorBufferBase.140" = type { %class.scoped_refptr.113*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.148", %"class.absl::optional.148" }
%"class.absl::optional.148" = type { %"class.absl::optional_internal::optional_data.149" }
%"class.absl::optional_internal::optional_data.149" = type { %"class.absl::optional_internal::optional_data_base.150" }
%"class.absl::optional_internal::optional_data_base.150" = type { %"class.absl::optional_internal::optional_data_dtor_base.151" }
%"class.absl::optional_internal::optional_data_dtor_base.151" = type { i8, %union.anon.152 }
%union.anon.152 = type { %"class.base::TimeDelta" }
%"class.absl::optional.143" = type { %"class.absl::optional_internal::optional_data.144" }
%"class.absl::optional_internal::optional_data.144" = type { %"class.absl::optional_internal::optional_data_base.145" }
%"class.absl::optional_internal::optional_data_base.145" = type { %"class.absl::optional_internal::optional_data_dtor_base.146" }
%"class.absl::optional_internal::optional_data_dtor_base.146" = type { i8, %union.anon.147 }
%union.anon.147 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.153" = type { %"class.absl::optional_internal::optional_data.154" }
%"class.absl::optional_internal::optional_data.154" = type { %"class.absl::optional_internal::optional_data_base.155" }
%"class.absl::optional_internal::optional_data_base.155" = type { %"class.absl::optional_internal::optional_data_dtor_base.156" }
%"class.absl::optional_internal::optional_data_dtor_base.156" = type { i8, %union.anon.157 }
%union.anon.157 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.158" = type { %"class.absl::optional_internal::optional_data.159" }
%"class.absl::optional_internal::optional_data.159" = type { %"class.absl::optional_internal::optional_data_base.160" }
%"class.absl::optional_internal::optional_data_base.160" = type { %"class.absl::optional_internal::optional_data_dtor_base.161" }
%"class.absl::optional_internal::optional_data_dtor_base.161" = type { i8, %union.anon.162 }
%union.anon.162 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.163 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.620", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.620" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.621" }
%"class.std::__1::vector.621" = type { %"class.std::__1::__vector_base.622" }
%"class.std::__1::__vector_base.622" = type { i32*, i32*, %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { i32* }
%"class.blink::Member.407" = type { %"class.blink::MemberBase.408" }
%"class.blink::MemberBase.408" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.165", %class.scoped_refptr.180, %class.scoped_refptr.181, %"struct.blink::CacheControlHeader", %"class.absl::optional.148", %"class.absl::optional.182", %"class.absl::optional.182", %"class.absl::optional.182", i64, %"class.blink::KURL", %"class.WTF::Vector.187", %"class.WTF::String", %"class.WTF::Vector.100", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.153", %"class.WTF::Vector.100", %"class.blink::KURL", %"class.absl::optional.192" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.165" = type { %"class.absl::optional_internal::optional_data.166" }
%"class.absl::optional_internal::optional_data.166" = type { %"class.absl::optional_internal::optional_data_base.167" }
%"class.absl::optional_internal::optional_data_base.167" = type { %"class.absl::optional_internal::optional_data_dtor_base.168" }
%"class.absl::optional_internal::optional_data_dtor_base.168" = type { i8, %union.anon.169 }
%union.anon.169 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.100", %"class.WTF::String", i64, i64, %"class.WTF::Vector.170", %"class.WTF::Vector.175" }
%"class.WTF::Vector.170" = type { %"class.WTF::VectorBuffer.171" }
%"class.WTF::VectorBuffer.171" = type { %"class.WTF::VectorBufferBase.172" }
%"class.WTF::VectorBufferBase.172" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.175" = type { %"class.WTF::VectorBuffer.176" }
%"class.WTF::VectorBuffer.176" = type { %"class.WTF::VectorBufferBase.177" }
%"class.WTF::VectorBufferBase.177" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.180 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.181 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.182" = type { %"class.absl::optional_internal::optional_data.183" }
%"class.absl::optional_internal::optional_data.183" = type { %"class.absl::optional_internal::optional_data_base.184" }
%"class.absl::optional_internal::optional_data_base.184" = type { %"class.absl::optional_internal::optional_data_dtor_base.185" }
%"class.absl::optional_internal::optional_data_dtor_base.185" = type { i8, %union.anon.186 }
%union.anon.186 = type { %"class.base::Time" }
%"class.WTF::Vector.187" = type { %"class.WTF::VectorBuffer.188" }
%"class.WTF::VectorBuffer.188" = type { %"class.WTF::VectorBufferBase.189" }
%"class.WTF::VectorBufferBase.189" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.192" = type { %"class.absl::optional_internal::optional_data.193" }
%"class.absl::optional_internal::optional_data.193" = type { %"class.absl::optional_internal::optional_data_base.194" }
%"class.absl::optional_internal::optional_data_base.194" = type { %"class.absl::optional_internal::optional_data_dtor_base.195" }
%"class.absl::optional_internal::optional_data_dtor_base.195" = type { i8, %union.anon.196 }
%union.anon.196 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.409 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.410", i64, %"class.WTF::Vector.412", %"class.WTF::Vector.417" }
%"class.WTF::RefCounted.410" = type { %"class.base::RefCounted.411" }
%"class.base::RefCounted.411" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { i8*, i32, i32 }
%"class.WTF::Vector.417" = type { %"class.WTF::VectorBuffer.418" }
%"class.WTF::VectorBuffer.418" = type { %"class.WTF::VectorBufferBase.419" }
%"class.WTF::VectorBufferBase.419" = type { %"class.std::__1::unique_ptr.420"*, i32, i32 }
%"class.std::__1::unique_ptr.420" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.423" }
%"class.std::__1::__tree.423" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.424", %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.blink::HeapHashMap.432" = type { %"class.WTF::HashMap.435" }
%"class.WTF::HashMap.435" = type { %"class.WTF::HashTable.436" }
%"class.WTF::HashTable.436" = type <{ %"struct.WTF::KeyValuePair.438"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.438" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.441" }
%"class.WTF::Vector.441" = type { %"class.WTF::VectorBuffer.442" }
%"class.WTF::VectorBuffer.442" = type { %"class.WTF::VectorBufferBase.443" }
%"class.WTF::VectorBufferBase.443" = type { %"class.blink::Member.444"*, i32, i32 }
%"class.blink::Member.444" = type { %"class.blink::MemberBase.79" }
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.449", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.6, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.54", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.54" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.55" }
%"struct.std::__1::atomic.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i8 }
%"class.blink::WeakMember.449" = type { %"class.blink::MemberBase.450" }
%"class.blink::HeapHashMap.451" = type { %"class.WTF::HashMap.454" }
%"class.WTF::HashMap.454" = type { %"class.WTF::HashTable.455" }
%"class.WTF::HashTable.455" = type <{ %"struct.WTF::KeyValuePair.457"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.457" = type opaque
%"class.WTF::Vector.458" = type { %"class.WTF::VectorBuffer.459" }
%"class.WTF::VectorBuffer.459" = type { %"class.WTF::VectorBufferBase.460" }
%"class.WTF::VectorBufferBase.460" = type { %class.scoped_refptr.461*, i32, i32 }
%class.scoped_refptr.461 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.464" = type { %"class.WTF::HashSet.467" }
%"class.WTF::HashSet.467" = type { %"class.WTF::HashTable.468" }
%"class.WTF::HashTable.468" = type <{ %"class.blink::Member.407"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.WTF::HashSet.473"* }
%"class.WTF::HashSet.473" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.53 }
%class.scoped_refptr.53 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.406 }
%class.scoped_refptr.406 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.477" }
%"class.blink::Member.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.481" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ModuleTreeLinkerRegistry" = type { %"class.blink::NameClient", %"class.blink::HeapHashSet.495" }
%"class.blink::HeapHashSet.495" = type { %"class.WTF::HashSet.498" }
%"class.WTF::HashSet.498" = type { %"class.WTF::HashTable.499" }
%"class.WTF::HashTable.499" = type <{ %"class.blink::Member.501"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.501" = type opaque
%"class.blink::ModuleTreeClient" = type { %"class.blink::NameClient" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.530 }
%class.scoped_refptr.530 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.531", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.531" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Persistent.532" = type { %"class.blink::PersistentBase.533" }
%"class.blink::PersistentBase.533" = type { %"class.blink::ModuleTreeLinker"*, %"class.blink::PersistentNodePtr" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::ModuleScriptFetchRequest" = type { %"class.blink::KURL", i32, i32, i32, [4 x i8], %"class.blink::ScriptFetchOptions", %"class.WTF::String", %"class.WTF::TextPosition" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.blink::Persistent.534" = type { %"class.blink::PersistentBase.535" }
%"class.blink::PersistentBase.535" = type { %"class.blink::ModuleScript"*, %"class.blink::PersistentNodePtr" }
%"struct.std::__1::__tuple_impl.694" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.695" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::Persistent.532" }
%"class.std::__1::__tuple_leaf.695" = type { %"class.blink::Persistent.534" }
%"class.WTF::VectorBufferBase.593" = type { %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"*, i32, i32 }
%"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget" = type <{ %"class.blink::KURL", i32, %"class.WTF::TextPosition", [4 x i8] }>
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.WTF::Vector.591" = type { %"class.WTF::VectorBuffer.592" }
%"class.WTF::VectorBuffer.592" = type { %"class.WTF::VectorBufferBase.593" }
%"class.WTF::Vector.596" = type { %"class.WTF::VectorBuffer.597" }
%"class.WTF::VectorBuffer.597" = type { %"class.WTF::VectorBufferBase.598" }
%"class.WTF::VectorBufferBase.598" = type { %"struct.blink::ModuleRequest"*, i32, i32 }
%"struct.blink::ModuleRequest" = type { %"class.WTF::String", %"class.WTF::TextPosition", %"class.WTF::Vector.599" }
%"class.WTF::Vector.599" = type { %"class.WTF::VectorBuffer.600" }
%"class.WTF::VectorBuffer.600" = type { %"class.WTF::VectorBufferBase.601" }
%"class.WTF::VectorBufferBase.601" = type { %"struct.blink::ImportAssertion"*, i32, i32 }
%"struct.blink::ImportAssertion" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::TextPosition" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.538, %"class.blink::Member.539", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.538 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.539" = type { %"class.blink::MemberBase.540" }
%"class.blink::MemberBase.540" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.543", %"class.blink::HeapHashMap.555", %"class.std::__1::unique_ptr.565", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.577", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.580" }
%"class.blink::HeapHashMap.543" = type { %"class.WTF::HashMap.546" }
%"class.WTF::HashMap.546" = type { %"class.WTF::HashTable.547" }
%"class.WTF::HashTable.547" = type <{ %"struct.WTF::KeyValuePair.549"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.549" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.552" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Template" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::TraceWrapperV8Reference.552" = type { %"class.v8::TracedReference.553" }
%"class.v8::TracedReference.553" = type { %"class.v8::BasicTracedReference.554" }
%"class.v8::BasicTracedReference.554" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::HeapHashMap.555" = type { %"class.WTF::HashMap.558" }
%"class.WTF::HashMap.558" = type { %"class.WTF::HashTable.559" }
%"class.WTF::HashTable.559" = type <{ %"struct.WTF::KeyValuePair.561"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.561" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.562" }
%"class.blink::TraceWrapperV8Reference.562" = type { %"class.v8::TracedReference.563" }
%"class.v8::TracedReference.563" = type { %"class.v8::BasicTracedReference.564" }
%"class.v8::BasicTracedReference.564" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.565" = type { %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.568" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.577" = type { %"class.v8::Persistent.578" }
%"class.v8::Persistent.578" = type { %"class.v8::PersistentBase.579" }
%"class.v8::PersistentBase.579" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.580" = type { %"class.WTF::HashMap.583" }
%"class.WTF::HashMap.583" = type { %"class.WTF::HashTable.584" }
%"class.WTF::HashTable.584" = type <{ %"struct.WTF::KeyValuePair.586"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.586" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.587" }
%"class.blink::Persistent.587" = type { %"class.blink::PersistentBase.588" }
%"class.blink::PersistentBase.588" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias.589" }
%"class.base::StrongAlias.589" = type { %"class.base::UnguessableToken" }
%"class.v8::Module" = type { i8 }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::HeapHashSet.606" = type { %"class.WTF::HashSet.609" }
%"class.WTF::HashSet.609" = type { %"class.WTF::HashTable.610" }
%"class.WTF::HashTable.610" = type <{ %"class.blink::Member.612"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.612" = type { %"class.blink::MemberBase.613" }
%"class.blink::MemberBase.613" = type { %"class.blink::ModuleScript"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapHashTableBacking" = type { i8 }

$_ZN5blink24ModuleScriptFetchRequestC2ERKNS_4KURLENS_10ModuleTypeENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationERKNS_18ScriptFetchOptionsERKN3WTF6StringERKNSD_12TextPositionE = comdat any

$_ZN5blink18ScriptFetchOptionsD2Ev = comdat any

$_ZNK5blink18SingleModuleClient18NameInHeapSnapshotEv = comdat any

$_ZN5blink16ModuleTreeLinkerD2Ev = comdat any

$_ZN5blink16ModuleTreeLinkerD0Ev = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEC2ERKSD_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EENS2_IPS6_bEERKT0_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SB_SC_EERKS6_SI_EENS_18HashTableAddResultISD_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN5blink13ModuleRequestD2Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_18SingleModuleClientEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_18SingleModuleClientEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_18SingleModuleClientEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_18SingleModuleClientEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_15ResourceFetcherEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_9ModulatorEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_24ModuleTreeLinkerRegistryEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_16ModuleTreeClientEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_12ModuleScriptEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_16ModuleTreeLinkerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_16ModuleTreeLinkerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink16ModuleTreeLinkerEFvNS4_5StateEEJNS3_10PersistentIS4_EES5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink16ModuleTreeLinkerEFvNS3_5StateEEJNS2_10PersistentIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEES6_NS_17IdentityExtractorENS_8PairHashIS4_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SB_SC_EERKS6_S6_EENS_18HashTableAddResultISD_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEES6_NS_17IdentityExtractorENS_8PairHashIS4_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEES6_NS_17IdentityExtractorENS_8PairHashIS4_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE13AllocateTableEj = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEES6_NS_17IdentityExtractorENS_8PairHashIS4_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_ = comdat any

$_ZN3WTF15HashTableHelperINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_17IdentityExtractorENS_10HashTraitsIS6_EEE28IsEmptyOrDeletedBucketForKeyERKS6_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEES6_NS_17IdentityExtractorENS_8PairHashIS4_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EENS2_IPS6_bEERKT0_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12ModuleScriptELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink16ModuleTreeLinkerEFvPKNS3_12ModuleScriptEEJNS3_10PersistentIS4_EENSA_IS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink16ModuleTreeLinkerEFvPKNS2_12ModuleScriptEEJNS2_10PersistentIS3_EENS9_IS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_16ModuleTreeLinkerEEENS4_INS3_12ModuleScriptEEEEED2Ev = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_16ModuleTreeLinkerEEENS4_INS3_12ModuleScriptEEEEEC2IJLm0ELm1EEJS6_S8_EJEJEJS6_S8_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSC_IJDpT2_EEEDpOT3_ = comdat any

$_ZNK3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEES6_NS_17IdentityExtractorENS_8PairHashIS4_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EEPKS6_RKT0_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS4_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_18SingleModuleClientEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_18SingleModuleClientEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink16ModuleTreeLinkerE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::SingleModuleClient"*)* @_ZNK5blink18SingleModuleClient18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ModuleTreeLinker"*)* @_ZN5blink16ModuleTreeLinkerD2Ev to i8*), i8* bitcast (void (%"class.blink::ModuleTreeLinker"*)* @_ZN5blink16ModuleTreeLinkerD0Ev to i8*), i8* bitcast (void (%"class.blink::ModuleTreeLinker"*, %"class.blink::Visitor"*)* @_ZNK5blink16ModuleTreeLinker5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ModuleTreeLinker"*, %"class.blink::ModuleScript"*)* @_ZN5blink16ModuleTreeLinker24NotifyModuleLoadFinishedEPNS_12ModuleScriptE to i8*)] }, align 8
@.str = private unnamed_addr constant [80 x i8] c"../../third_party/blink/renderer/core/loader/modulescript/module_tree_linker.cc\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"modulator\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"registry\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"client\00", align 1
@.str.4 = private unnamed_addr constant [30 x i8] c"num_incomplete_fetches_ == 0u\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"new_state == State::kFetchingSelf\00", align 1
@.str.6 = private unnamed_addr constant [75 x i8] c"new_state == State::kFetchingDependencies || new_state == State::kFinished\00", align 1
@.str.7 = private unnamed_addr constant [68 x i8] c"new_state == State::kInstantiating || new_state == State::kFinished\00", align 1
@.str.8 = private unnamed_addr constant [30 x i8] c"new_state == State::kFinished\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"FetchRoot\00", align 1
@.str.10 = private unnamed_addr constant [36 x i8] c"module_type != ModuleType::kInvalid\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"FetchRootInline\00", align 1
@.str.12 = private unnamed_addr constant [29 x i8] c"num_incomplete_fetches_ > 0u\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"url.IsValid()\00", align 1
@.str.14 = private unnamed_addr constant [69 x i8] c"ModuleScript::ResolveModuleSpecifier() impl must return a valid url.\00", align 1
@.str.15 = private unnamed_addr constant [20 x i8] c"child_url.IsValid()\00", align 1
@.str.16 = private unnamed_addr constant [42 x i8] c"child_module_type != ModuleType::kInvalid\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"child_module\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"about:client\00", align 1
@.str.19 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.20 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEEEEPKcv = private unnamed_addr constant [102 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<WTF::String, blink::IntegrityAlgorithm>]\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.22 = private unnamed_addr constant [19 x i8] c"SingleModuleClient\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18SingleModuleClientEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SingleModuleClient]\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.25 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_18SingleModuleClientEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_18SingleModuleClientEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_18SingleModuleClientEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_18SingleModuleClientEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_18SingleModuleClientEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEEEEPKcv = private unnamed_addr constant [94 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<blink::KURL, blink::ModuleType>]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.27 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.28 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.29 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12_GLOBAL__N_123ModuleScriptFetchTargetEEEPKcv = private unnamed_addr constant [101 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::(anonymous namespace)::ModuleScriptFetchTarget]\00", align 1
@.str.30 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.31 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.32 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberIKNS1_12ModuleScriptEEES7_NS_17IdentityExtractorENS_10MemberHashIS6_EENS_10HashTraitsIS7_EESC_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [386 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<const blink::ModuleScript>, blink::Member<const blink::ModuleScript>, WTF::IdentityExtractor, WTF::MemberHash<const blink::ModuleScript>, WTF::HashTraits<blink::Member<const blink::ModuleScript> >, WTF::HashTraits<blink::Member<const blink::ModuleScript> >, blink::HeapAllocator> >]\00", align 1

@_ZN5blink16ModuleTreeLinkerC1EPNS_15ResourceFetcherENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationEPNS_9ModulatorENS_27ModuleScriptCustomFetchTypeEPNS_24ModuleTreeLinkerRegistryEPNS_16ModuleTreeClientE = hidden unnamed_addr alias void (%"class.blink::ModuleTreeLinker"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::Modulator"*, i32, %"class.blink::ModuleTreeLinkerRegistry"*, %"class.blink::ModuleTreeClient"*), void (%"class.blink::ModuleTreeLinker"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::Modulator"*, i32, %"class.blink::ModuleTreeLinkerRegistry"*, %"class.blink::ModuleTreeClient"*)* @_ZN5blink16ModuleTreeLinkerC2EPNS_15ResourceFetcherENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationEPNS_9ModulatorENS_27ModuleScriptCustomFetchTypeEPNS_24ModuleTreeLinkerRegistryEPNS_16ModuleTreeClientE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ModuleTreeLinker5FetchERKNS_4KURLERKNS_10ModuleTypeEPNS_15ResourceFetcherENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationERKNS_18ScriptFetchOptionsEPNS_9ModulatorENS_27ModuleScriptCustomFetchTypeEPNS_24ModuleTreeLinkerRegistryEPNS_16ModuleTreeClientE(%"class.blink::KURL"* dereferenceable(112), i32* nocapture readonly dereferenceable(4), %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ScriptFetchOptions"* dereferenceable(64), %"class.blink::Modulator"*, i32, %"class.blink::ModuleTreeLinkerRegistry"*, %"class.blink::ModuleTreeClient"*) local_unnamed_addr #0 align 2 {
  %11 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18SingleModuleClientEEEPhm(i64 112) #9
  %12 = bitcast i8* %11 to %"class.blink::ModuleTreeLinker"*
  tail call void @_ZN5blink16ModuleTreeLinkerC2EPNS_15ResourceFetcherENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationEPNS_9ModulatorENS_27ModuleScriptCustomFetchTypeEPNS_24ModuleTreeLinkerRegistryEPNS_16ModuleTreeClientE(%"class.blink::ModuleTreeLinker"* %12, %"class.blink::ResourceFetcher"* %2, i32 %3, i32 %4, %"class.blink::Modulator"* %6, i32 %7, %"class.blink::ModuleTreeLinkerRegistry"* %8, %"class.blink::ModuleTreeClient"* %9) #9
  %13 = getelementptr inbounds i8, i8* %11, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  tail call void @_ZN5blink24ModuleTreeLinkerRegistry10AddFetcherEPNS_16ModuleTreeLinkerE(%"class.blink::ModuleTreeLinkerRegistry"* %8, %"class.blink::ModuleTreeLinker"* %12) #9
  %17 = load i32, i32* %1, align 4
  tail call void @_ZN5blink16ModuleTreeLinker9FetchRootERKNS_4KURLENS_10ModuleTypeERKNS_18ScriptFetchOptionsE(%"class.blink::ModuleTreeLinker"* %12, %"class.blink::KURL"* dereferenceable(112) %0, i32 %17, %"class.blink::ScriptFetchOptions"* dereferenceable(64) %5)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink24ModuleTreeLinkerRegistry10AddFetcherEPNS_16ModuleTreeLinkerE(%"class.blink::ModuleTreeLinkerRegistry"*, %"class.blink::ModuleTreeLinker"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ModuleTreeLinker9FetchRootERKNS_4KURLENS_10ModuleTypeERKNS_18ScriptFetchOptionsE(%"class.blink::ModuleTreeLinker"*, %"class.blink::KURL"* dereferenceable(112), i32, %"class.blink::ScriptFetchOptions"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.blink::KURL", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %"class.base::OnceCallback", align 8
  %10 = alloca %"class.blink::Persistent.532", align 8
  %11 = alloca %"class.logging::CheckOpResult", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca %"struct.std::__1::pair.513", align 8
  %14 = alloca %"class.blink::ModuleScriptFetchRequest", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca i64, align 8
  %17 = bitcast i64* %16 to %"class.WTF::TextPosition"*
  %18 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 4, i32 0, i32 0
  %19 = load %"class.blink::Modulator"*, %"class.blink::Modulator"** %18, align 8
  %20 = bitcast %"class.blink::Modulator"* %19 to void (%"class.blink::Modulator"*, i32)***
  %21 = load void (%"class.blink::Modulator"*, i32)**, void (%"class.blink::Modulator"*, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Modulator"*, i32)*, void (%"class.blink::Modulator"*, i32)** %21, i64 20
  %23 = load void (%"class.blink::Modulator"*, i32)*, void (%"class.blink::Modulator"*, i32)** %22, align 8
  tail call void %23(%"class.blink::Modulator"* %19, i32 2) #9
  tail call void @_ZN5blink16ModuleTreeLinker12AdvanceStateENS0_5StateE(%"class.blink::ModuleTreeLinker"* %0, i32 1)
  %24 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %24) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %7, %"class.blink::KURL"* dereferenceable(112) %1) #9
  %25 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %7) #9
  br i1 %25, label %133, label %26

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 11
  %28 = bitcast %"class.blink::Member.518"* %27 to i64*
  store atomic i64 0, i64* %28 monotonic, align 8
  %29 = load %"class.blink::Modulator"*, %"class.blink::Modulator"** %18, align 8
  %30 = bitcast %"class.blink::Modulator"* %29 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)***
  %31 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)*** %30, align 8
  %32 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)** %31, i64 5
  %33 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)** %32, align 8
  %34 = call %"class.base::SingleThreadTaskRunner"* %33(%"class.blink::Modulator"* %29) #9
  %35 = bitcast %"class.base::SingleThreadTaskRunner"* %34 to %"class.base::TaskRunner"*
  %36 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 225) #9
  %37 = bitcast %"class.blink::Persistent.532"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #9
  %38 = getelementptr inbounds %"class.blink::Persistent.532", %"class.blink::Persistent.532"* %10, i64 0, i32 0
  %39 = getelementptr inbounds %"class.blink::Persistent.532", %"class.blink::Persistent.532"* %10, i64 0, i32 0, i32 0
  store %"class.blink::ModuleTreeLinker"* %0, %"class.blink::ModuleTreeLinker"** %39, align 8, !alias.scope !2
  %40 = getelementptr inbounds %"class.blink::Persistent.532", %"class.blink::Persistent.532"* %10, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %40, align 8, !alias.scope !2
  %41 = ptrtoint %"class.blink::ModuleTreeLinker"* %0 to i64
  switch i64 %41, label %42 [
    i64 0, label %68
    i64 -1, label %68
  ]

42:                                               ; preds = %26
  %43 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !2
  %44 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %43, i64 0, i32 1
  %45 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %44) #9, !noalias !2
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %49, !prof !5

47:                                               ; preds = %42
  %48 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %44, i8* %48) #9
  br label %49

49:                                               ; preds = %47, %42
  %50 = phi i8* [ %48, %47 ], [ %45, %42 ]
  %51 = bitcast i8* %50 to %"class.blink::ThreadState"**
  %52 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %51, align 8, !noalias !2
  %53 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %53, align 8, !noalias !2
  %55 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %54, i64 0, i32 0, i32 0
  %56 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %55, align 8, !noalias !2
  %57 = icmp eq %"class.blink::PersistentNode"* %56, null
  br i1 %57, label %58, label %61, !prof !5

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %54, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %59) #9
  %60 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %55, align 8
  br label %61

61:                                               ; preds = %58, %49
  %62 = phi %"class.blink::PersistentNode"* [ %60, %58 ], [ %56, %49 ]
  %63 = bitcast %"class.blink::PersistentNode"* %62 to i64*
  %64 = load i64, i64* %63, align 8, !noalias !2
  %65 = bitcast %"class.blink::PersistentRegion"* %54 to i64*
  store i64 %64, i64* %65, align 8, !noalias !2
  %66 = bitcast %"class.blink::PersistentNode"* %62 to %"class.blink::PersistentBase.533"**
  store %"class.blink::PersistentBase.533"* %38, %"class.blink::PersistentBase.533"** %66, align 8, !noalias !2
  %67 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %62, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_16ModuleTreeLinkerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  store %"class.blink::PersistentNode"* %62, %"class.blink::PersistentNode"** %40, align 8, !alias.scope !2
  br label %68

68:                                               ; preds = %26, %26, %61
  %69 = call i8* @_Znwm(i64 72) #10, !noalias !6
  %70 = bitcast i8* %69 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %70, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink16ModuleTreeLinkerEFvNS4_5StateEEJNS3_10PersistentIS4_EES5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink16ModuleTreeLinkerEFvNS3_5StateEEJNS2_10PersistentIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !6
  %71 = getelementptr inbounds i8, i8* %69, i64 32
  %72 = bitcast i8* %71 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ModuleTreeLinker"*, i32)* @_ZN5blink16ModuleTreeLinker12AdvanceStateENS0_5StateE to i64), i64 0>, <2 x i64>* %72, align 8, !noalias !6
  %73 = getelementptr inbounds i8, i8* %69, i64 48
  %74 = bitcast %"class.blink::Persistent.532"* %10 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast i8* %73 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i8, i8* %69, i64 56
  %78 = bitcast i8* %77 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %78, align 8
  switch i64 %75, label %79 [
    i64 0, label %105
    i64 -1, label %105
  ]

79:                                               ; preds = %68
  %80 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %81 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %80, i64 0, i32 1
  %82 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %81) #9
  %83 = icmp eq i8* %82, null
  br i1 %83, label %84, label %86, !prof !5

84:                                               ; preds = %79
  %85 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %81, i8* %85) #9
  br label %86

86:                                               ; preds = %84, %79
  %87 = phi i8* [ %85, %84 ], [ %82, %79 ]
  %88 = bitcast i8* %87 to %"class.blink::ThreadState"**
  %89 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %89, i64 0, i32 3, i32 0, i32 0, i32 0
  %91 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %91, i64 0, i32 0, i32 0
  %93 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %92, align 8
  %94 = icmp eq %"class.blink::PersistentNode"* %93, null
  br i1 %94, label %95, label %98, !prof !5

95:                                               ; preds = %86
  %96 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %91, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %96) #9
  %97 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %92, align 8
  br label %98

98:                                               ; preds = %95, %86
  %99 = phi %"class.blink::PersistentNode"* [ %97, %95 ], [ %93, %86 ]
  %100 = bitcast %"class.blink::PersistentNode"* %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.blink::PersistentRegion"* %91 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %99, i64 0, i32 0
  store i8* %73, i8** %103, align 8
  %104 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %99, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_16ModuleTreeLinkerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %104, align 8
  store %"class.blink::PersistentNode"* %99, %"class.blink::PersistentNode"** %78, align 8
  br label %105

105:                                              ; preds = %68, %68, %98
  %106 = getelementptr inbounds i8, i8* %69, i64 64
  %107 = bitcast i8* %106 to i32*
  store i32 4, i32* %107, align 4
  %108 = bitcast %"class.base::OnceCallback"* %9 to i8**
  store i8* %69, i8** %108, align 8, !alias.scope !6
  %109 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %35, %"class.base::Location"* nonnull dereferenceable(32) %8, %"class.base::OnceCallback"* nonnull %9) #9
  %110 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %110) #9
  %111 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %40, align 8
  %112 = icmp eq %"class.blink::PersistentNode"* %111, null
  br i1 %112, label %132, label %113

113:                                              ; preds = %105
  %114 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %115 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %114, i64 0, i32 1
  %116 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %115) #9
  %117 = icmp eq i8* %116, null
  br i1 %117, label %118, label %120, !prof !5

118:                                              ; preds = %113
  %119 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %115, i8* %119) #9
  br label %120

120:                                              ; preds = %118, %113
  %121 = phi i8* [ %119, %118 ], [ %116, %113 ]
  %122 = bitcast i8* %121 to %"class.blink::ThreadState"**
  %123 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %123, i64 0, i32 3, i32 0, i32 0, i32 0
  %125 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %124, align 8
  %126 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %40, align 8
  %127 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %125, i64 0, i32 0, i32 0
  %128 = bitcast %"class.blink::PersistentRegion"* %125 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.blink::PersistentNode"* %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %126, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %131, align 8
  store %"class.blink::PersistentNode"* %126, %"class.blink::PersistentNode"** %127, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %40, align 8
  br label %132

132:                                              ; preds = %105, %120
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #9
  br label %214

133:                                              ; preds = %4
  %134 = bitcast %"class.logging::CheckOpResult"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #9
  %135 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %11, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %135, align 8
  %136 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136)
  %137 = icmp eq i32 %2, 0
  br i1 %137, label %139, label %138

138:                                              ; preds = %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136)
  store i8* null, i8** %135, align 8
  br label %148

139:                                              ; preds = %133
  %140 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  %141 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10, i64 0, i64 0), i8* %140, i8* %141) #9
  %142 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %143 = load i8*, i8** %142, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136)
  store i8* %143, i8** %135, align 8
  %144 = icmp eq i8* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 230, %"class.logging::CheckOpResult"* nonnull %11) #9
  %147 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #9
  br label %148

148:                                              ; preds = %138, %139, %145
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #9
  %149 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %13, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %149) #9
  %150 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %13, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %150, %"class.blink::KURL"* nonnull dereferenceable(112) %7) #9
  %151 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %13, i64 0, i32 1
  store i32 %2, i32* %151, align 8, !alias.scope !13
  %152 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 7, i32 0
  %153 = call { %"struct.std::__1::pair.513"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEES6_NS_17IdentityExtractorENS_8PairHashIS4_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SB_SC_EERKS6_S6_EENS_18HashTableAddResultISD_S6_EEOT0_OT1_(%"class.WTF::HashTable.510"* %152, %"struct.std::__1::pair.513"* nonnull dereferenceable(120) %13, %"struct.std::__1::pair.513"* nonnull dereferenceable(120) %13) #9
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %150) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %149) #9
  %154 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %14, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %154) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 -86, i64 208, i1 false)
  %155 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 2
  %156 = load i32, i32* %155, align 8
  %157 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 3
  %158 = load i32, i32* %157, align 4
  %159 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #9
  %160 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %160)
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i64 12) #9
  %161 = bitcast %"class.WTF::String"* %5 to i64*
  %162 = load i64, i64* %161, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160)
  %163 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %164 = bitcast %"class.WTF::String"* %15 to i64*
  store i64 %162, i64* %164, align 8
  %165 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #9
  store i64 0, i64* %16, align 8
  call void @_ZN5blink24ModuleScriptFetchRequestC2ERKNS_4KURLENS_10ModuleTypeENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationERKNS_18ScriptFetchOptionsERKN3WTF6StringERKNSD_12TextPositionE(%"class.blink::ModuleScriptFetchRequest"* nonnull %14, %"class.blink::KURL"* nonnull dereferenceable(112) %7, i32 %2, i32 %156, i32 %158, %"class.blink::ScriptFetchOptions"* dereferenceable(64) %3, %"class.WTF::String"* nonnull dereferenceable(8) %15, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %17)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #9
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %167, label %181, label %168

168:                                              ; preds = %148
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  br i1 %172, label %175, label %177

175:                                              ; preds = %168
  %176 = add i32 %174, -1
  store i32 %176, i32* %173, align 4
  br label %177

177:                                              ; preds = %175, %168
  %178 = phi i32 [ %176, %175 ], [ %174, %168 ]
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %177
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %166) #9
  br label %181

181:                                              ; preds = %148, %177, %180
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #9
  %182 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 13
  %183 = load i64, i64* %182, align 8
  %184 = add i64 %183, 1
  store i64 %184, i64* %182, align 8
  %185 = load %"class.blink::Modulator"*, %"class.blink::Modulator"** %18, align 8
  %186 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 1, i32 0, i32 0
  %187 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %186, align 8
  %188 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 5
  %189 = load i32, i32* %188, align 8
  %190 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 0
  %191 = bitcast %"class.blink::Modulator"* %185 to void (%"class.blink::Modulator"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*)***
  %192 = load void (%"class.blink::Modulator"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*)**, void (%"class.blink::Modulator"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.blink::Modulator"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*)*, void (%"class.blink::Modulator"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*)** %192, i64 10
  %194 = load void (%"class.blink::Modulator"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*)*, void (%"class.blink::Modulator"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*)** %193, align 8
  call void %194(%"class.blink::Modulator"* %185, %"class.blink::ModuleScriptFetchRequest"* nonnull dereferenceable(208) %14, %"class.blink::ResourceFetcher"* %187, i32 0, i32 %189, %"class.blink::SingleModuleClient"* %190) #9
  %195 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %14, i64 0, i32 6, i32 0, i32 0
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %196, null
  br i1 %197, label %211, label %198

198:                                              ; preds = %181
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  br i1 %202, label %205, label %207

205:                                              ; preds = %198
  %206 = add i32 %204, -1
  store i32 %206, i32* %203, align 4
  br label %207

207:                                              ; preds = %205, %198
  %208 = phi i32 [ %206, %205 ], [ %204, %198 ]
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %207
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %196) #9
  br label %211

211:                                              ; preds = %181, %207, %210
  %212 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %14, i64 0, i32 5
  call void @_ZN5blink18ScriptFetchOptionsD2Ev(%"class.blink::ScriptFetchOptions"* %212) #9
  %213 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %14, i64 0, i32 0
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %213) #9
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %154) #9
  br label %214

214:                                              ; preds = %211, %132
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %24) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ModuleTreeLinker31FetchDescendantsForInlineScriptEPNS_12ModuleScriptEPNS_15ResourceFetcherENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationEPNS_9ModulatorENS_27ModuleScriptCustomFetchTypeEPNS_24ModuleTreeLinkerRegistryEPNS_16ModuleTreeClientE(%"class.blink::ModuleScript"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::Modulator"*, i32, %"class.blink::ModuleTreeLinkerRegistry"*, %"class.blink::ModuleTreeClient"*) local_unnamed_addr #0 align 2 {
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18SingleModuleClientEEEPhm(i64 112) #9
  %10 = bitcast i8* %9 to %"class.blink::ModuleTreeLinker"*
  tail call void @_ZN5blink16ModuleTreeLinkerC2EPNS_15ResourceFetcherENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationEPNS_9ModulatorENS_27ModuleScriptCustomFetchTypeEPNS_24ModuleTreeLinkerRegistryEPNS_16ModuleTreeClientE(%"class.blink::ModuleTreeLinker"* %10, %"class.blink::ResourceFetcher"* %1, i32 %2, i32 %3, %"class.blink::Modulator"* %4, i32 %5, %"class.blink::ModuleTreeLinkerRegistry"* %6, %"class.blink::ModuleTreeClient"* %7) #9
  %11 = getelementptr inbounds i8, i8* %9, i64 -4
  %12 = bitcast i8* %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = or i16 %13, 1
  store atomic i16 %14, i16* %12 release, align 2
  tail call void @_ZN5blink24ModuleTreeLinkerRegistry10AddFetcherEPNS_16ModuleTreeLinkerE(%"class.blink::ModuleTreeLinkerRegistry"* %6, %"class.blink::ModuleTreeLinker"* %10) #9
  tail call void @_ZN5blink16ModuleTreeLinker15FetchRootInlineEPNS_12ModuleScriptE(%"class.blink::ModuleTreeLinker"* %10, %"class.blink::ModuleScript"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ModuleTreeLinker15FetchRootInlineEPNS_12ModuleScriptE(%"class.blink::ModuleTreeLinker"*, %"class.blink::ModuleScript"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.blink::Persistent.532", align 8
  %6 = alloca %"class.blink::Persistent.534", align 8
  %7 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 4, i32 0, i32 0
  %8 = load %"class.blink::Modulator"*, %"class.blink::Modulator"** %7, align 8
  %9 = bitcast %"class.blink::Modulator"* %8 to void (%"class.blink::Modulator"*, i32)***
  %10 = load void (%"class.blink::Modulator"*, i32)**, void (%"class.blink::Modulator"*, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Modulator"*, i32)*, void (%"class.blink::Modulator"*, i32)** %10, i64 20
  %12 = load void (%"class.blink::Modulator"*, i32)*, void (%"class.blink::Modulator"*, i32)** %11, align 8
  tail call void %12(%"class.blink::Modulator"* %8, i32 2) #9
  tail call void @_ZN5blink16ModuleTreeLinker12AdvanceStateENS0_5StateE(%"class.blink::ModuleTreeLinker"* %0, i32 1)
  %13 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 11
  %14 = ptrtoint %"class.blink::ModuleScript"* %1 to i64
  %15 = bitcast %"class.blink::Member.518"* %13 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %2
  %19 = bitcast %"class.blink::ModuleScript"* %1 to i8*
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #9
  br label %21

21:                                               ; preds = %2, %18
  tail call void @_ZN5blink16ModuleTreeLinker12AdvanceStateENS0_5StateE(%"class.blink::ModuleTreeLinker"* %0, i32 2)
  %22 = load %"class.blink::Modulator"*, %"class.blink::Modulator"** %7, align 8
  %23 = bitcast %"class.blink::Modulator"* %22 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)***
  %24 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)** %24, i64 5
  %26 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)** %25, align 8
  %27 = tail call %"class.base::SingleThreadTaskRunner"* %26(%"class.blink::Modulator"* %22) #9
  %28 = bitcast %"class.base::SingleThreadTaskRunner"* %27 to %"class.base::TaskRunner"*
  %29 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 295) #9
  %30 = bitcast %"class.blink::Persistent.532"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #9
  %31 = getelementptr inbounds %"class.blink::Persistent.532", %"class.blink::Persistent.532"* %5, i64 0, i32 0
  %32 = getelementptr inbounds %"class.blink::Persistent.532", %"class.blink::Persistent.532"* %5, i64 0, i32 0, i32 0
  store %"class.blink::ModuleTreeLinker"* %0, %"class.blink::ModuleTreeLinker"** %32, align 8, !alias.scope !16
  %33 = getelementptr inbounds %"class.blink::Persistent.532", %"class.blink::Persistent.532"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %33, align 8, !alias.scope !16
  %34 = ptrtoint %"class.blink::ModuleTreeLinker"* %0 to i64
  switch i64 %34, label %35 [
    i64 0, label %61
    i64 -1, label %61
  ]

35:                                               ; preds = %21
  %36 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !16
  %37 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %36, i64 0, i32 1
  %38 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %37) #9, !noalias !16
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %42, !prof !5

40:                                               ; preds = %35
  %41 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %37, i8* %41) #9
  br label %42

42:                                               ; preds = %40, %35
  %43 = phi i8* [ %41, %40 ], [ %38, %35 ]
  %44 = bitcast i8* %43 to %"class.blink::ThreadState"**
  %45 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %44, align 8, !noalias !16
  %46 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %46, align 8, !noalias !16
  %48 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %48, align 8, !noalias !16
  %50 = icmp eq %"class.blink::PersistentNode"* %49, null
  br i1 %50, label %51, label %54, !prof !5

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %47, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %52) #9
  %53 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %48, align 8
  br label %54

54:                                               ; preds = %51, %42
  %55 = phi %"class.blink::PersistentNode"* [ %53, %51 ], [ %49, %42 ]
  %56 = bitcast %"class.blink::PersistentNode"* %55 to i64*
  %57 = load i64, i64* %56, align 8, !noalias !16
  %58 = bitcast %"class.blink::PersistentRegion"* %47 to i64*
  store i64 %57, i64* %58, align 8, !noalias !16
  %59 = bitcast %"class.blink::PersistentNode"* %55 to %"class.blink::PersistentBase.533"**
  store %"class.blink::PersistentBase.533"* %31, %"class.blink::PersistentBase.533"** %59, align 8, !noalias !16
  %60 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %55, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_16ModuleTreeLinkerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %60, align 8
  store %"class.blink::PersistentNode"* %55, %"class.blink::PersistentNode"** %33, align 8, !alias.scope !16
  br label %61

61:                                               ; preds = %21, %21, %54
  %62 = bitcast %"class.blink::Persistent.534"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #9
  %63 = getelementptr inbounds %"class.blink::Persistent.534", %"class.blink::Persistent.534"* %6, i64 0, i32 0
  %64 = getelementptr inbounds %"class.blink::Persistent.534", %"class.blink::Persistent.534"* %6, i64 0, i32 0, i32 0
  store %"class.blink::ModuleScript"* %1, %"class.blink::ModuleScript"** %64, align 8, !alias.scope !19
  %65 = getelementptr inbounds %"class.blink::Persistent.534", %"class.blink::Persistent.534"* %6, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %65, align 8, !alias.scope !19
  switch i64 %14, label %66 [
    i64 0, label %92
    i64 -1, label %92
  ]

66:                                               ; preds = %61
  %67 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !19
  %68 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %67, i64 0, i32 1
  %69 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %68) #9, !noalias !19
  %70 = icmp eq i8* %69, null
  br i1 %70, label %71, label %73, !prof !5

71:                                               ; preds = %66
  %72 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %68, i8* %72) #9
  br label %73

73:                                               ; preds = %71, %66
  %74 = phi i8* [ %72, %71 ], [ %69, %66 ]
  %75 = bitcast i8* %74 to %"class.blink::ThreadState"**
  %76 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %75, align 8, !noalias !19
  %77 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %76, i64 0, i32 3, i32 0, i32 0, i32 0
  %78 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %77, align 8, !noalias !19
  %79 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %78, i64 0, i32 0, i32 0
  %80 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %79, align 8, !noalias !19
  %81 = icmp eq %"class.blink::PersistentNode"* %80, null
  br i1 %81, label %82, label %85, !prof !5

82:                                               ; preds = %73
  %83 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %78, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %83) #9
  %84 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %79, align 8
  br label %85

85:                                               ; preds = %82, %73
  %86 = phi %"class.blink::PersistentNode"* [ %84, %82 ], [ %80, %73 ]
  %87 = bitcast %"class.blink::PersistentNode"* %86 to i64*
  %88 = load i64, i64* %87, align 8, !noalias !19
  %89 = bitcast %"class.blink::PersistentRegion"* %78 to i64*
  store i64 %88, i64* %89, align 8, !noalias !19
  %90 = bitcast %"class.blink::PersistentNode"* %86 to %"class.blink::PersistentBase.535"**
  store %"class.blink::PersistentBase.535"* %63, %"class.blink::PersistentBase.535"** %90, align 8, !noalias !19
  %91 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %86, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12ModuleScriptELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %91, align 8
  store %"class.blink::PersistentNode"* %86, %"class.blink::PersistentNode"** %65, align 8, !alias.scope !19
  br label %92

92:                                               ; preds = %61, %61, %85
  %93 = call i8* @_Znwm(i64 80) #10, !noalias !22
  %94 = bitcast i8* %93 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %94, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink16ModuleTreeLinkerEFvPKNS3_12ModuleScriptEEJNS3_10PersistentIS4_EENSA_IS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink16ModuleTreeLinkerEFvPKNS2_12ModuleScriptEEJNS2_10PersistentIS3_EENS9_IS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !22
  %95 = getelementptr inbounds i8, i8* %93, i64 32
  %96 = bitcast i8* %95 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ModuleTreeLinker"*, %"class.blink::ModuleScript"*)* @_ZN5blink16ModuleTreeLinker16FetchDescendantsEPKNS_12ModuleScriptE to i64), i64 0>, <2 x i64>* %96, align 8, !noalias !22
  %97 = getelementptr inbounds i8, i8* %93, i64 48
  %98 = bitcast i8* %97 to %"struct.std::__1::__tuple_impl.694"*
  call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_16ModuleTreeLinkerEEENS4_INS3_12ModuleScriptEEEEEC2IJLm0ELm1EEJS6_S8_EJEJEJS6_S8_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSC_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl.694"* %98, %"class.blink::Persistent.532"* nonnull dereferenceable(16) %5, %"class.blink::Persistent.534"* nonnull dereferenceable(16) %6) #9, !noalias !22
  %99 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %93, i8** %99, align 8, !alias.scope !22
  %100 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %28, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #9
  %101 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %101) #9
  %102 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %65, align 8
  %103 = icmp eq %"class.blink::PersistentNode"* %102, null
  br i1 %103, label %123, label %104

104:                                              ; preds = %92
  %105 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %106 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %105, i64 0, i32 1
  %107 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %106) #9
  %108 = icmp eq i8* %107, null
  br i1 %108, label %109, label %111, !prof !5

109:                                              ; preds = %104
  %110 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %106, i8* %110) #9
  br label %111

111:                                              ; preds = %109, %104
  %112 = phi i8* [ %110, %109 ], [ %107, %104 ]
  %113 = bitcast i8* %112 to %"class.blink::ThreadState"**
  %114 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %114, i64 0, i32 3, i32 0, i32 0, i32 0
  %116 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %115, align 8
  %117 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %65, align 8
  %118 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %116, i64 0, i32 0, i32 0
  %119 = bitcast %"class.blink::PersistentRegion"* %116 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %"class.blink::PersistentNode"* %117 to i64*
  store i64 %120, i64* %121, align 8
  %122 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %117, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %122, align 8
  store %"class.blink::PersistentNode"* %117, %"class.blink::PersistentNode"** %118, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %65, align 8
  br label %123

123:                                              ; preds = %92, %111
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #9
  %124 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %33, align 8
  %125 = icmp eq %"class.blink::PersistentNode"* %124, null
  br i1 %125, label %145, label %126

126:                                              ; preds = %123
  %127 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %128 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %127, i64 0, i32 1
  %129 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %128) #9
  %130 = icmp eq i8* %129, null
  br i1 %130, label %131, label %133, !prof !5

131:                                              ; preds = %126
  %132 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %128, i8* %132) #9
  br label %133

133:                                              ; preds = %131, %126
  %134 = phi i8* [ %132, %131 ], [ %129, %126 ]
  %135 = bitcast i8* %134 to %"class.blink::ThreadState"**
  %136 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %136, i64 0, i32 3, i32 0, i32 0, i32 0
  %138 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %137, align 8
  %139 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %33, align 8
  %140 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %138, i64 0, i32 0, i32 0
  %141 = bitcast %"class.blink::PersistentRegion"* %138 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.blink::PersistentNode"* %139 to i64*
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %139, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %144, align 8
  store %"class.blink::PersistentNode"* %139, %"class.blink::PersistentNode"** %140, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %33, align 8
  br label %145

145:                                              ; preds = %123, %133
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ModuleTreeLinkerC2EPNS_15ResourceFetcherENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationEPNS_9ModulatorENS_27ModuleScriptCustomFetchTypeEPNS_24ModuleTreeLinkerRegistryEPNS_16ModuleTreeClientE(%"class.blink::ModuleTreeLinker"* nocapture, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::Modulator"*, i32, %"class.blink::ModuleTreeLinkerRegistry"*, %"class.blink::ModuleTreeClient"*) unnamed_addr #0 align 2 {
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink16ModuleTreeLinkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::ResourceFetcher"* %1, %"class.blink::ResourceFetcher"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 2
  store i32 %2, i32* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 3
  store i32 %3, i32* %15, align 4
  %16 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.blink::Modulator"* %4, %"class.blink::Modulator"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 5
  store i32 %5, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 7
  %19 = bitcast %"class.WTF::HashSet.509"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 20, i1 false) #9
  %20 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 8, i32 0, i32 0
  store %"class.blink::ModuleTreeLinkerRegistry"* %6, %"class.blink::ModuleTreeLinkerRegistry"** %20, align 8
  %21 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 9, i32 0, i32 0
  store %"class.blink::ModuleTreeClient"* %7, %"class.blink::ModuleTreeClient"** %21, align 8
  %22 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 10
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 11, i32 0, i32 0
  store %"class.blink::ModuleScript"* null, %"class.blink::ModuleScript"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 12
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 13
  store i64 0, i64* %25, align 8
  %26 = icmp eq %"class.blink::Modulator"* %4, null
  br i1 %26, label %27, label %30

27:                                               ; preds = %8
  %28 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 104, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0)) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %8, %27
  %31 = icmp eq %"class.blink::ModuleTreeLinkerRegistry"* %6, null
  br i1 %31, label %32, label %35

32:                                               ; preds = %30
  %33 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 105, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0)) #9
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  br label %35

35:                                               ; preds = %30, %32
  %36 = icmp eq %"class.blink::ModuleTreeClient"* %7, null
  br i1 %36, label %37, label %40

37:                                               ; preds = %35
  %38 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 106, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0)) #9
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #9
  br label %40

40:                                               ; preds = %35, %37
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16ModuleTreeLinker5TraceEPNS_7VisitorE(%"class.blink::ModuleTreeLinker"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.506"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15ResourceFetcherEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 4
  %15 = bitcast %"class.blink::Member.507"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9ModulatorEE5TraceEPNS_7VisitorEPKv) #9
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 8
  %26 = bitcast %"class.blink::Member.514"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_24ModuleTreeLinkerRegistryEE5TraceEPNS_7VisitorEPKv) #9
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 9
  %37 = bitcast %"class.blink::Member.516"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16ModuleTreeClientEE5TraceEPNS_7VisitorEPKv) #9
  br label %46

46:                                               ; preds = %35, %40
  %47 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 11
  %48 = bitcast %"class.blink::Member.518"* %47 to i64*
  %49 = load atomic i64, i64* %48 monotonic, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %46
  %52 = inttoptr i64 %49 to i8*
  %53 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, i64 5
  %56 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %55, align 8
  tail call void %56(%"class.blink::Visitor"* %1, i8* nonnull %52, i8* nonnull %52, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12ModuleScriptEE5TraceEPNS_7VisitorEPKv) #9
  br label %57

57:                                               ; preds = %46, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ModuleTreeLinker12AdvanceStateENS0_5StateE(%"class.blink::ModuleTreeLinker"*, i32) #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.logging::CheckOpResult", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = alloca %"class.logging::CheckError", align 8
  %15 = alloca %"class.logging::CheckOpResult", align 8
  %16 = alloca %"class.logging::CheckError", align 8
  %17 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 10
  %18 = load i32, i32* %17, align 8
  switch i32 %18, label %95 [
    i32 0, label %19
    i32 1, label %52
    i32 2, label %73
    i32 3, label %79
  ]

19:                                               ; preds = %2
  %20 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %21, align 8
  %22 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 13
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %21, align 8
  br label %36

27:                                               ; preds = %19
  %28 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %23) #9
  %29 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i64 0, i64 0), i8* %28, i8* %29) #9
  %30 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %31, i8** %21, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %27
  %34 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 146, %"class.logging::CheckOpResult"* nonnull %7) #9
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  br label %36

36:                                               ; preds = %26, %27, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  %37 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #9
  %38 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %38, align 8
  %39 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  %40 = icmp eq i32 %1, 1
  br i1 %40, label %41, label %42

41:                                               ; preds = %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  store i8* null, i8** %38, align 8
  br label %51

42:                                               ; preds = %36
  %43 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %44 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 1) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i8* %43, i8* %44) #9
  %45 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  store i8* %46, i8** %38, align 8
  %47 = icmp eq i8* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %42
  %49 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 147, %"class.logging::CheckOpResult"* nonnull %9) #9
  %50 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #9
  br label %51

51:                                               ; preds = %41, %42, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #9
  br label %95

52:                                               ; preds = %2
  %53 = bitcast %"class.logging::CheckOpResult"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #9
  %54 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %11, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %54, align 8
  %55 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 13
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57)
  %58 = icmp eq i64 %56, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57)
  store i8* null, i8** %54, align 8
  br label %69

60:                                               ; preds = %52
  %61 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %56) #9
  %62 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i64 0, i64 0), i8* %61, i8* %62) #9
  %63 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57)
  store i8* %64, i8** %54, align 8
  %65 = icmp eq i8* %64, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %60
  %67 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 150, %"class.logging::CheckOpResult"* nonnull %11) #9
  %68 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #9
  br label %69

69:                                               ; preds = %59, %60, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #9
  switch i32 %1, label %70 [
    i32 4, label %95
    i32 2, label %95
  ]

70:                                               ; preds = %69
  %71 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 152, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.6, i64 0, i64 0)) #9
  %72 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #9
  br label %95

73:                                               ; preds = %2
  %74 = add i32 %1, -3
  %75 = icmp ult i32 %74, 2
  br i1 %75, label %95, label %76

76:                                               ; preds = %73
  %77 = bitcast %"class.logging::CheckError"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %14, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 156, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.7, i64 0, i64 0)) #9
  %78 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %14) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #9
  store i32 %1, i32* %17, align 8
  br label %108

79:                                               ; preds = %2
  %80 = bitcast %"class.logging::CheckOpResult"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #9
  %81 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %15, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %81, align 8
  %82 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82)
  %83 = icmp eq i32 %1, 4
  br i1 %83, label %84, label %85

84:                                               ; preds = %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82)
  store i8* null, i8** %81, align 8
  br label %94

85:                                               ; preds = %79
  %86 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %87 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 4) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.8, i64 0, i64 0), i8* %86, i8* %87) #9
  %88 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %89 = load i8*, i8** %88, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82)
  store i8* %89, i8** %81, align 8
  %90 = icmp eq i8* %89, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %85
  %92 = bitcast %"class.logging::CheckError"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %16, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 159, %"class.logging::CheckOpResult"* nonnull %15) #9
  %93 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %16) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #9
  br label %94

94:                                               ; preds = %84, %85, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #9
  br label %95

95:                                               ; preds = %73, %70, %69, %69, %2, %94, %51
  store i32 %1, i32* %17, align 8
  %96 = icmp eq i32 %1, 4
  br i1 %96, label %97, label %108

97:                                               ; preds = %95
  %98 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 8, i32 0, i32 0
  %99 = load %"class.blink::ModuleTreeLinkerRegistry"*, %"class.blink::ModuleTreeLinkerRegistry"** %98, align 8
  call void @_ZN5blink24ModuleTreeLinkerRegistry22ReleaseFinishedFetcherEPNS_16ModuleTreeLinkerE(%"class.blink::ModuleTreeLinkerRegistry"* %99, %"class.blink::ModuleTreeLinker"* %0) #9
  %100 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 9, i32 0, i32 0
  %101 = load %"class.blink::ModuleTreeClient"*, %"class.blink::ModuleTreeClient"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 11, i32 0, i32 0
  %103 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %102, align 8
  %104 = bitcast %"class.blink::ModuleTreeClient"* %101 to void (%"class.blink::ModuleTreeClient"*, %"class.blink::ModuleScript"*)***
  %105 = load void (%"class.blink::ModuleTreeClient"*, %"class.blink::ModuleScript"*)**, void (%"class.blink::ModuleTreeClient"*, %"class.blink::ModuleScript"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.blink::ModuleTreeClient"*, %"class.blink::ModuleScript"*)*, void (%"class.blink::ModuleTreeClient"*, %"class.blink::ModuleScript"*)** %105, i64 4
  %107 = load void (%"class.blink::ModuleTreeClient"*, %"class.blink::ModuleScript"*)*, void (%"class.blink::ModuleTreeClient"*, %"class.blink::ModuleScript"*)** %106, align 8
  call void %107(%"class.blink::ModuleTreeClient"* %101, %"class.blink::ModuleScript"* %103) #9
  br label %108

108:                                              ; preds = %76, %97, %95
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare void @_ZN5blink24ModuleTreeLinkerRegistry22ReleaseFinishedFetcherEPNS_16ModuleTreeLinkerE(%"class.blink::ModuleTreeLinkerRegistry"*, %"class.blink::ModuleTreeLinker"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24ModuleScriptFetchRequestC2ERKNS_4KURLENS_10ModuleTypeENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationERKNS_18ScriptFetchOptionsERKN3WTF6StringERKNSD_12TextPositionE(%"class.blink::ModuleScriptFetchRequest"*, %"class.blink::KURL"* dereferenceable(112), i32, i32, i32, %"class.blink::ScriptFetchOptions"* dereferenceable(64), %"class.WTF::String"* dereferenceable(8), %"class.WTF::TextPosition"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %9 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %0, i64 0, i32 0
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %9, %"class.blink::KURL"* dereferenceable(112) %1) #9
  %10 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %0, i64 0, i32 1
  store i32 %2, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %0, i64 0, i32 2
  store i32 %3, i32* %11, align 4
  %12 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %0, i64 0, i32 3
  store i32 %4, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %5, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %15, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i33
  %26 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #9
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !5

31:                                               ; preds = %22
  tail call void @llvm.trap() #9
  unreachable

32:                                               ; preds = %22
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %23, align 4
  br label %34

34:                                               ; preds = %32, %17, %8
  %35 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %0, i64 0, i32 5, i32 1, i32 0
  %36 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %5, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEC2ERKSD_(%"class.WTF::HashTable.213"* %35, %"class.WTF::HashTable.213"* dereferenceable(24) %36) #9
  %37 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %5, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %0, i64 0, i32 5, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %39, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #9
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !5

55:                                               ; preds = %46
  tail call void @llvm.trap() #9
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %34, %41, %56
  %59 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %0, i64 0, i32 5, i32 3
  %60 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %5, i64 0, i32 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 18, i1 false) #9
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %0, i64 0, i32 6, i32 0, i32 0
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %63, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %82

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #9
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !5

79:                                               ; preds = %70
  tail call void @llvm.trap() #9
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  br label %82

82:                                               ; preds = %58, %65, %80
  %83 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %0, i64 0, i32 7
  %84 = bitcast %"class.WTF::TextPosition"* %7 to i64*
  %85 = bitcast %"class.WTF::TextPosition"* %83 to i64*
  %86 = load i64, i64* %84, align 4
  store i64 %86, i64* %85, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ModuleTreeLinker16FetchDescendantsEPKNS_12ModuleScriptE(%"class.blink::ModuleTreeLinker"*, %"class.blink::ModuleScript"*) #0 align 2 {
  %3 = alloca %"class.WTF::VectorBufferBase.593", align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.v8::HandleScope", align 8
  %8 = alloca %"class.WTF::Vector.591", align 8
  %9 = alloca %"class.WTF::Vector.596", align 8
  %10 = alloca %"class.blink::KURL", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = alloca %"struct.std::__1::pair.513", align 8
  %15 = alloca %"struct.std::__1::pair.513", align 8
  %16 = alloca %"class.blink::ScriptFetchOptions", align 8
  %17 = alloca %"class.blink::ModuleScriptFetchRequest", align 8
  %18 = alloca %"class.logging::CheckOpResult", align 8
  %19 = alloca %"class.logging::CheckError", align 8
  %20 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 4, i32 0, i32 0
  %21 = load %"class.blink::Modulator"*, %"class.blink::Modulator"** %20, align 8
  %22 = bitcast %"class.blink::Modulator"* %21 to %"class.blink::ScriptState"* (%"class.blink::Modulator"*)***
  %23 = load %"class.blink::ScriptState"* (%"class.blink::Modulator"*)**, %"class.blink::ScriptState"* (%"class.blink::Modulator"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ScriptState"* (%"class.blink::Modulator"*)*, %"class.blink::ScriptState"* (%"class.blink::Modulator"*)** %23, i64 6
  %25 = load %"class.blink::ScriptState"* (%"class.blink::Modulator"*)*, %"class.blink::ScriptState"* (%"class.blink::Modulator"*)** %24, align 8
  %26 = tail call %"class.blink::ScriptState"* %25(%"class.blink::Modulator"* %21) #9
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 0
  %28 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %27, align 8
  %29 = bitcast %"class.v8::HandleScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #9
  %30 = bitcast %"class.v8::HandleScope"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false)
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %7, %"class.v8::Isolate"* %28) #9
  %31 = load %"class.blink::Modulator"*, %"class.blink::Modulator"** %20, align 8
  %32 = bitcast %"class.blink::Modulator"* %31 to i1 (%"class.blink::Modulator"*)***
  %33 = load i1 (%"class.blink::Modulator"*)**, i1 (%"class.blink::Modulator"*)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::Modulator"*)*, i1 (%"class.blink::Modulator"*)** %33, i64 22
  %35 = load i1 (%"class.blink::Modulator"*)*, i1 (%"class.blink::Modulator"*)** %34, align 8
  %36 = call zeroext i1 %35(%"class.blink::Modulator"* %31) #9
  br i1 %36, label %40, label %37

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 11
  %39 = bitcast %"class.blink::Member.518"* %38 to i64*
  store atomic i64 0, i64* %39 monotonic, align 8
  call void @_ZN5blink16ModuleTreeLinker12AdvanceStateENS0_5StateE(%"class.blink::ModuleTreeLinker"* %0, i32 4)
  br label %337

40:                                               ; preds = %2
  %41 = call %"class.v8::Module"* @_ZNK5blink12ModuleScript8V8ModuleEv(%"class.blink::ModuleScript"* %1) #9
  %42 = icmp eq %"class.v8::Module"* %41, null
  br i1 %42, label %43, label %49

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 12
  store i8 1, i8* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 13
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %337

48:                                               ; preds = %43
  call void @_ZN5blink16ModuleTreeLinker11InstantiateEv(%"class.blink::ModuleTreeLinker"* %0) #9
  br label %337

49:                                               ; preds = %40
  %50 = bitcast %"class.WTF::Vector.591"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #9
  %51 = getelementptr inbounds %"class.WTF::Vector.591", %"class.WTF::Vector.591"* %8, i64 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.WTF::Vector.591", %"class.WTF::Vector.591"* %8, i64 0, i32 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.WTF::Vector.591", %"class.WTF::Vector.591"* %8, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 16, i1 false) #9
  %54 = bitcast %"class.WTF::Vector.596"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #9
  %55 = getelementptr inbounds %"class.WTF::Vector.596", %"class.WTF::Vector.596"* %9, i64 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.WTF::Vector.596", %"class.WTF::Vector.596"* %9, i64 0, i32 0, i32 0, i32 2
  %57 = bitcast %"class.WTF::Vector.596"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 16, i1 false)
  %58 = load %"class.blink::Modulator"*, %"class.blink::Modulator"** %20, align 8
  %59 = bitcast %"class.blink::Modulator"* %58 to void (%"class.WTF::Vector.596"*, %"class.blink::Modulator"*, %"class.v8::Module"*)***
  %60 = load void (%"class.WTF::Vector.596"*, %"class.blink::Modulator"*, %"class.v8::Module"*)**, void (%"class.WTF::Vector.596"*, %"class.blink::Modulator"*, %"class.v8::Module"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.WTF::Vector.596"*, %"class.blink::Modulator"*, %"class.v8::Module"*)*, void (%"class.WTF::Vector.596"*, %"class.blink::Modulator"*, %"class.v8::Module"*)** %60, i64 24
  %62 = load void (%"class.WTF::Vector.596"*, %"class.blink::Modulator"*, %"class.v8::Module"*)*, void (%"class.WTF::Vector.596"*, %"class.blink::Modulator"*, %"class.v8::Module"*)** %61, align 8
  call void %62(%"class.WTF::Vector.596"* nonnull sret %9, %"class.blink::Modulator"* %58, %"class.v8::Module"* nonnull %41) #9
  %63 = load %"struct.blink::ModuleRequest"*, %"struct.blink::ModuleRequest"** %55, align 8
  %64 = load i32, i32* %56, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %63, i64 %65
  %67 = icmp eq i32 %64, 0
  br i1 %67, label %187, label %68

68:                                               ; preds = %49
  %69 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %10, i64 0, i32 0
  %70 = bitcast %"class.logging::CheckError"* %11 to i8*
  %71 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  %72 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  %73 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  %74 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %75 = bitcast %"class.logging::CheckError"* %13 to i8*
  %76 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %14, i64 0, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %14, i64 0, i32 0
  %78 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %14, i64 0, i32 1
  %79 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 7, i32 0
  %80 = bitcast %"class.WTF::VectorBufferBase.593"* %3 to i8*
  %81 = getelementptr inbounds %"class.WTF::VectorBufferBase.593", %"class.WTF::VectorBufferBase.593"* %3, i64 0, i32 0
  %82 = getelementptr inbounds %"class.WTF::VectorBufferBase.593", %"class.WTF::VectorBufferBase.593"* %3, i64 0, i32 1
  %83 = bitcast i32* %82 to i64*
  %84 = bitcast %"class.WTF::Vector.591"* %8 to i64*
  %85 = getelementptr inbounds %"class.WTF::Vector.591", %"class.WTF::Vector.591"* %8, i64 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  %87 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %15, i64 0, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %15, i64 0, i32 0
  %89 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %15, i64 0, i32 1
  br label %92

90:                                               ; preds = %179
  %91 = icmp eq i32 %184, 0
  br i1 %91, label %187, label %193

92:                                               ; preds = %68, %179
  %93 = phi %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* [ null, %68 ], [ %180, %179 ]
  %94 = phi %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* [ null, %68 ], [ %181, %179 ]
  %95 = phi %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* [ null, %68 ], [ %182, %179 ]
  %96 = phi %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* [ null, %68 ], [ %183, %179 ]
  %97 = phi i32 [ 0, %68 ], [ %184, %179 ]
  %98 = phi %"struct.blink::ModuleRequest"* [ %63, %68 ], [ %185, %179 ]
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %69) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 112, i1 false)
  %99 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %98, i64 0, i32 0
  call void @_ZNK5blink12ModuleScript22ResolveModuleSpecifierERKN3WTF6StringEPS2_(%"class.blink::KURL"* nonnull sret %10, %"class.blink::ModuleScript"* %1, %"class.WTF::String"* dereferenceable(8) %99, %"class.WTF::String"* null) #9
  %100 = load %"class.blink::Modulator"*, %"class.blink::Modulator"** %20, align 8
  %101 = bitcast %"class.blink::Modulator"* %100 to i32 (%"class.blink::Modulator"*, %"struct.blink::ModuleRequest"*)***
  %102 = load i32 (%"class.blink::Modulator"*, %"struct.blink::ModuleRequest"*)**, i32 (%"class.blink::Modulator"*, %"struct.blink::ModuleRequest"*)*** %101, align 8
  %103 = getelementptr inbounds i32 (%"class.blink::Modulator"*, %"struct.blink::ModuleRequest"*)*, i32 (%"class.blink::Modulator"*, %"struct.blink::ModuleRequest"*)** %102, i64 25
  %104 = load i32 (%"class.blink::Modulator"*, %"struct.blink::ModuleRequest"*)*, i32 (%"class.blink::Modulator"*, %"struct.blink::ModuleRequest"*)** %103, align 8
  %105 = call i32 %104(%"class.blink::Modulator"* %100, %"struct.blink::ModuleRequest"* dereferenceable(32) %98) #9
  %106 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %10) #9
  br i1 %106, label %110, label %107

107:                                              ; preds = %92
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 423, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0)) #9
  %108 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #9
  %109 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %108, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.14, i64 0, i64 0), i64 68) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #9
  br label %110

110:                                              ; preds = %92, %107
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %72, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73)
  %111 = icmp eq i32 %105, 0
  br i1 %111, label %113, label %112

112:                                              ; preds = %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73)
  store i8* null, i8** %72, align 8
  br label %120

113:                                              ; preds = %110
  %114 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  %115 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10, i64 0, i64 0), i8* %114, i8* %115) #9
  %116 = load i8*, i8** %74, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73)
  store i8* %116, i8** %72, align 8
  %117 = icmp eq i8* %116, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %113
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 425, %"class.logging::CheckOpResult"* nonnull %12) #9
  %119 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #9
  br label %120

120:                                              ; preds = %112, %113, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #9
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %76) #9
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %77, %"class.blink::KURL"* nonnull dereferenceable(112) %10) #9
  store i32 %105, i32* %78, align 8, !alias.scope !29
  %121 = call %"struct.std::__1::pair.513"* @_ZNK3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEES6_NS_17IdentityExtractorENS_8PairHashIS4_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EEPKS6_RKT0_(%"class.WTF::HashTable.510"* %79, %"struct.std::__1::pair.513"* nonnull dereferenceable(120) %14) #9
  %122 = icmp eq %"struct.std::__1::pair.513"* %121, null
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %77) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %76) #9
  br i1 %122, label %123, label %179

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %98, i64 0, i32 1
  %125 = load i32, i32* %52, align 8
  %126 = icmp eq i32 %97, %125
  br i1 %126, label %127, label %163, !prof !5

127:                                              ; preds = %123
  %128 = add i32 %97, 1
  %129 = lshr i32 %97, 2
  %130 = add i32 %128, %129
  %131 = icmp ugt i32 %130, 4
  %132 = select i1 %131, i32 %130, i32 4
  %133 = icmp ugt i32 %132, %128
  %134 = select i1 %133, i32 %132, i32 %128
  %135 = icmp ult i32 %97, %134
  br i1 %135, label %136, label %163, !prof !32

136:                                              ; preds = %127
  %137 = icmp eq %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %96, null
  br i1 %137, label %138, label %141

138:                                              ; preds = %136
  call fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_123ModuleScriptFetchTargetENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.593"* nonnull %85, i32 %134) #9
  %139 = load %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"*, %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"** %51, align 8
  %140 = load i32, i32* %53, align 4
  br label %163

141:                                              ; preds = %136
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 16, i1 false) #9
  store %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* null, %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"** %81, align 8
  store i32 0, i32* %82, align 8
  call fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_123ModuleScriptFetchTargetENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.593"* nonnull %3, i32 %134) #9
  %142 = load %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"*, %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"** %81, align 8
  %143 = load i64, i64* %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #9
  %144 = ptrtoint %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %142 to i64
  %145 = zext i32 %97 to i64
  %146 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget", %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %96, i64 %145
  %147 = icmp eq i32 %97, 0
  br i1 %147, label %160, label %148

148:                                              ; preds = %141, %148
  %149 = phi %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* [ %158, %148 ], [ %96, %141 ]
  %150 = phi %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* [ %157, %148 ], [ %142, %141 ]
  %151 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget", %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %150, i64 0, i32 0, i32 0
  %152 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget", %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %150, i64 0, i32 0
  %153 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget", %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %149, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %152, %"class.blink::KURL"* dereferenceable(112) %153) #9
  %154 = getelementptr inbounds i8, i8* %151, i64 112
  %155 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget", %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %149, i64 0, i32 1
  %156 = bitcast i32* %155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %154, i8* align 8 %156, i64 12, i1 false) #9
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %153) #9
  %157 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget", %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %150, i64 1
  %158 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget", %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %149, i64 1
  %159 = icmp eq %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %158, %146
  br i1 %159, label %160, label %148

160:                                              ; preds = %148, %141
  %161 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget", %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %96, i64 0, i32 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %161) #9
  store atomic i64 %144, i64* %84 monotonic, align 8
  %162 = trunc i64 %143 to i32
  store i32 %162, i32* %52, align 8
  br label %163

163:                                              ; preds = %123, %127, %138, %160
  %164 = phi %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* [ %93, %123 ], [ %93, %127 ], [ %139, %138 ], [ %142, %160 ]
  %165 = phi %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* [ %94, %123 ], [ %94, %127 ], [ %139, %138 ], [ %142, %160 ]
  %166 = phi i32 [ %97, %123 ], [ %97, %127 ], [ %140, %138 ], [ %97, %160 ]
  %167 = phi %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* [ %95, %123 ], [ %95, %127 ], [ %139, %138 ], [ %142, %160 ]
  %168 = zext i32 %166 to i64
  %169 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget", %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %167, i64 %168, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %86) #9
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %4, %"class.blink::KURL"* nonnull dereferenceable(112) %10) #9
  %170 = bitcast %"class.WTF::TextPosition"* %124 to i64*
  %171 = load i64, i64* %170, align 4
  %172 = bitcast i8* %169 to %"class.blink::KURL"*
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %172, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #9
  %173 = getelementptr inbounds i8, i8* %169, i64 112
  %174 = bitcast i8* %173 to i32*
  store i32 %105, i32* %174, align 8
  %175 = getelementptr inbounds i8, i8* %169, i64 116
  %176 = bitcast i8* %175 to i64*
  store i64 %171, i64* %176, align 4
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %86) #9
  %177 = add i32 %166, 1
  store i32 %177, i32* %53, align 4
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %87) #9
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %88, %"class.blink::KURL"* nonnull dereferenceable(112) %10) #9
  store i32 %105, i32* %89, align 8, !alias.scope !33
  %178 = call { %"struct.std::__1::pair.513"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEES6_NS_17IdentityExtractorENS_8PairHashIS4_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SB_SC_EERKS6_S6_EENS_18HashTableAddResultISD_S6_EEOT0_OT1_(%"class.WTF::HashTable.510"* %79, %"struct.std::__1::pair.513"* nonnull dereferenceable(120) %15, %"struct.std::__1::pair.513"* nonnull dereferenceable(120) %15) #9
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %88) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %87) #9
  br label %179

179:                                              ; preds = %120, %163
  %180 = phi %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* [ %93, %120 ], [ %164, %163 ]
  %181 = phi %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* [ %94, %120 ], [ %165, %163 ]
  %182 = phi %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* [ %95, %120 ], [ %167, %163 ]
  %183 = phi %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* [ %96, %120 ], [ %167, %163 ]
  %184 = phi i32 [ %97, %120 ], [ %177, %163 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %69) #9
  %185 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %98, i64 1
  %186 = icmp eq %"struct.blink::ModuleRequest"* %185, %66
  br i1 %186, label %90, label %92

187:                                              ; preds = %49, %90
  %188 = phi %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* [ %180, %90 ], [ null, %49 ]
  %189 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 13
  %190 = load i64, i64* %189, align 8
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %300

192:                                              ; preds = %187
  call void @_ZN5blink16ModuleTreeLinker11InstantiateEv(%"class.blink::ModuleTreeLinker"* %0) #9
  br label %300

193:                                              ; preds = %90
  %194 = bitcast %"class.blink::ScriptFetchOptions"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %194) #9
  %195 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %16, i64 0, i32 1
  %196 = bitcast %"class.WTF::HashSet.212"* %195 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %196, i8 -86, i64 56, i1 false)
  %197 = getelementptr inbounds %"class.blink::ModuleScript", %"class.blink::ModuleScript"* %1, i64 0, i32 0, i32 1, i32 3
  %198 = load i8, i8* %197, align 1
  %199 = getelementptr inbounds %"class.blink::ModuleScript", %"class.blink::ModuleScript"* %1, i64 0, i32 0, i32 1, i32 5
  %200 = load i32, i32* %199, align 4
  %201 = getelementptr inbounds %"class.blink::ModuleScript", %"class.blink::ModuleScript"* %1, i64 0, i32 0, i32 1, i32 6
  %202 = load i32, i32* %201, align 8
  %203 = getelementptr inbounds %"class.blink::ModuleScript", %"class.blink::ModuleScript"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %16, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %204, %"class.WTF::StringImpl"** %205, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %206, label %224, label %207

207:                                              ; preds = %193
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load atomic i32, i32* %208 monotonic, align 4
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %224

212:                                              ; preds = %207
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %214 = load i32, i32* %213, align 4
  %215 = zext i32 %214 to i33
  %216 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %215, i33 1) #9
  %217 = extractvalue { i33, i1 } %216, 1
  %218 = extractvalue { i33, i1 } %216, 0
  %219 = icmp slt i33 %218, 0
  %220 = or i1 %217, %219
  br i1 %220, label %221, label %222, !prof !5

221:                                              ; preds = %212
  call void @llvm.trap() #9
  unreachable

222:                                              ; preds = %212
  %223 = trunc i33 %218 to i32
  store i32 %223, i32* %213, align 4
  br label %224

224:                                              ; preds = %193, %207, %222
  %225 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %16, i64 0, i32 1, i32 0
  %226 = bitcast %"class.WTF::HashTable.213"* %225 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %226, i8 0, i64 20, i1 false) #9
  %227 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %16, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %227, align 8
  %228 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %16, i64 0, i32 3
  store i8 %198, i8* %228, align 8
  %229 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %16, i64 0, i32 5
  store i32 %200, i32* %229, align 4
  %230 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %16, i64 0, i32 6
  store i32 %202, i32* %230, align 8
  %231 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %16, i64 0, i32 7
  store i32 1, i32* %231, align 4
  %232 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %16, i64 0, i32 8
  store i8 2, i8* %232, align 8
  %233 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %16, i64 0, i32 9, i32 0
  store i8 0, i8* %233, align 1
  %234 = zext i32 %184 to i64
  %235 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget", %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %181, i64 %234
  %236 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %17, i64 0, i32 0, i32 0
  %237 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 2
  %238 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 3
  %239 = getelementptr inbounds %"class.blink::ModuleScript", %"class.blink::ModuleScript"* %1, i64 0, i32 0, i32 2, i32 4
  %240 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 13
  %241 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 1, i32 0, i32 0
  %242 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 5
  %243 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 0
  %244 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %17, i64 0, i32 6, i32 0, i32 0
  %245 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %17, i64 0, i32 5
  %246 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %17, i64 0, i32 0
  br label %261

247:                                              ; preds = %293
  %248 = bitcast %"class.logging::CheckOpResult"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %248) #9
  %249 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %18, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %249, align 8
  %250 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 13
  %251 = load i64, i64* %250, align 8
  %252 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %252)
  %253 = icmp eq i64 %251, 0
  br i1 %253, label %255, label %254

254:                                              ; preds = %247
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %252)
  store i8* null, i8** %249, align 8
  br label %299

255:                                              ; preds = %247
  %256 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %257 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.12, i64 0, i64 0), i8* %256, i8* %257) #9
  %258 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %259 = load i8*, i8** %258, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %252)
  store i8* %259, i8** %249, align 8
  %260 = icmp eq i8* %259, null
  br i1 %260, label %299, label %296

261:                                              ; preds = %224, %293
  %262 = phi %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* [ %181, %224 ], [ %294, %293 ]
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %236) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %236, i8 -86, i64 208, i1 false)
  %263 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget", %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %262, i64 0, i32 0
  %264 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget", %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %262, i64 0, i32 1
  %265 = load i32, i32* %264, align 8
  %266 = load i32, i32* %237, align 8
  %267 = load i32, i32* %238, align 4
  %268 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget", %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %262, i64 0, i32 2
  call void @_ZN5blink24ModuleScriptFetchRequestC2ERKNS_4KURLENS_10ModuleTypeENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationERKNS_18ScriptFetchOptionsERKN3WTF6StringERKNSD_12TextPositionE(%"class.blink::ModuleScriptFetchRequest"* nonnull %17, %"class.blink::KURL"* dereferenceable(112) %263, i32 %265, i32 %266, i32 %267, %"class.blink::ScriptFetchOptions"* nonnull dereferenceable(64) %16, %"class.WTF::String"* dereferenceable(8) %239, %"class.WTF::TextPosition"* dereferenceable(8) %268)
  %269 = load i64, i64* %240, align 8
  %270 = add i64 %269, 1
  store i64 %270, i64* %240, align 8
  %271 = load %"class.blink::Modulator"*, %"class.blink::Modulator"** %20, align 8
  %272 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %241, align 8
  %273 = load i32, i32* %242, align 8
  %274 = bitcast %"class.blink::Modulator"* %271 to void (%"class.blink::Modulator"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*)***
  %275 = load void (%"class.blink::Modulator"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*)**, void (%"class.blink::Modulator"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*)*** %274, align 8
  %276 = getelementptr inbounds void (%"class.blink::Modulator"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*)*, void (%"class.blink::Modulator"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*)** %275, i64 10
  %277 = load void (%"class.blink::Modulator"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*)*, void (%"class.blink::Modulator"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*)** %276, align 8
  call void %277(%"class.blink::Modulator"* %271, %"class.blink::ModuleScriptFetchRequest"* nonnull dereferenceable(208) %17, %"class.blink::ResourceFetcher"* %272, i32 1, i32 %273, %"class.blink::SingleModuleClient"* %243) #9
  %278 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %244, align 8
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %261
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #9
  br label %293

293:                                              ; preds = %261, %289, %292
  call void @_ZN5blink18ScriptFetchOptionsD2Ev(%"class.blink::ScriptFetchOptions"* %245) #9
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %246) #9
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %236) #9
  %294 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget", %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %262, i64 1
  %295 = icmp eq %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %294, %235
  br i1 %295, label %247, label %261

296:                                              ; preds = %255
  %297 = bitcast %"class.logging::CheckError"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %297) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %19, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 501, %"class.logging::CheckOpResult"* nonnull %18) #9
  %298 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %19) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %19) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %297) #9
  br label %299

299:                                              ; preds = %254, %255, %296
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %248) #9
  call void @_ZN5blink18ScriptFetchOptionsD2Ev(%"class.blink::ScriptFetchOptions"* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %194) #9
  br label %300

300:                                              ; preds = %192, %187, %299
  %301 = phi i1 [ true, %192 ], [ true, %187 ], [ %91, %299 ]
  %302 = phi i32 [ 0, %192 ], [ 0, %187 ], [ %184, %299 ]
  %303 = phi %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* [ %188, %192 ], [ %188, %187 ], [ %180, %299 ]
  %304 = load %"struct.blink::ModuleRequest"*, %"struct.blink::ModuleRequest"** %55, align 8
  %305 = icmp eq %"struct.blink::ModuleRequest"* %304, null
  br i1 %305, label %322, label %306, !prof !32

306:                                              ; preds = %300
  %307 = bitcast %"struct.blink::ModuleRequest"* %304 to i8*
  %308 = load i32, i32* %56, align 4
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %320, label %310, !prof !5

310:                                              ; preds = %306
  %311 = zext i32 %308 to i64
  %312 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %304, i64 %311
  br label %313

313:                                              ; preds = %313, %310
  %314 = phi %"struct.blink::ModuleRequest"* [ %315, %313 ], [ %304, %310 ]
  call void @_ZN5blink13ModuleRequestD2Ev(%"struct.blink::ModuleRequest"* %314) #9
  %315 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %314, i64 1
  %316 = icmp eq %"struct.blink::ModuleRequest"* %315, %312
  br i1 %316, label %317, label %313

317:                                              ; preds = %313
  store i32 0, i32* %56, align 4
  %318 = bitcast %"class.WTF::Vector.596"* %9 to i8**
  %319 = load i8*, i8** %318, align 8
  br label %320

320:                                              ; preds = %317, %306
  %321 = phi i8* [ %319, %317 ], [ %307, %306 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %321) #9
  store %"struct.blink::ModuleRequest"* null, %"struct.blink::ModuleRequest"** %55, align 8
  br label %322

322:                                              ; preds = %300, %320
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #9
  %323 = icmp eq %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %303, null
  br i1 %323, label %336, label %324, !prof !32

324:                                              ; preds = %322
  br i1 %301, label %334, label %325, !prof !5

325:                                              ; preds = %324
  %326 = zext i32 %302 to i64
  %327 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget", %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %303, i64 %326
  br label %328

328:                                              ; preds = %328, %325
  %329 = phi %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* [ %331, %328 ], [ %303, %325 ]
  %330 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget", %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %329, i64 0, i32 0
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %330) #9
  %331 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget", %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %329, i64 1
  %332 = icmp eq %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %331, %327
  br i1 %332, label %333, label %328

333:                                              ; preds = %328
  store i32 0, i32* %53, align 4
  br label %334

334:                                              ; preds = %333, %324
  %335 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget", %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* %303, i64 0, i32 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %335) #9
  store %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"* null, %"struct.blink::(anonymous namespace)::ModuleScriptFetchTarget"** %51, align 8
  br label %336

336:                                              ; preds = %322, %334
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #9
  br label %337

337:                                              ; preds = %336, %43, %48, %37
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ModuleTreeLinker24NotifyModuleLoadFinishedEPNS_12ModuleScriptE(%"class.blink::ModuleTreeLinker"*, %"class.blink::ModuleScript"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 13
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 304, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = load i64, i64* %8, align 8
  %24 = add i64 %23, -1
  store i64 %24, i64* %8, align 8
  %25 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 10
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %39

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 11
  %30 = ptrtoint %"class.blink::ModuleScript"* %1 to i64
  %31 = bitcast %"class.blink::Member.518"* %29 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.blink::ModuleScript"* %1 to i8*
  %36 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %35) #9
  br label %37

37:                                               ; preds = %28, %34
  call void @_ZN5blink16ModuleTreeLinker12AdvanceStateENS0_5StateE(%"class.blink::ModuleTreeLinker"* %0, i32 2)
  %38 = load i32, i32* %25, align 8
  br label %39

39:                                               ; preds = %37, %22
  %40 = phi i32 [ %38, %37 ], [ %26, %22 ]
  %41 = icmp eq i32 %40, 2
  br i1 %41, label %42, label %48

42:                                               ; preds = %39
  %43 = icmp eq %"class.blink::ModuleScript"* %1, null
  br i1 %43, label %44, label %47

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 11
  %46 = bitcast %"class.blink::Member.518"* %45 to i64*
  store atomic i64 0, i64* %46 monotonic, align 8
  call void @_ZN5blink16ModuleTreeLinker12AdvanceStateENS0_5StateE(%"class.blink::ModuleTreeLinker"* %0, i32 4)
  br label %48

47:                                               ; preds = %42
  call void @_ZN5blink16ModuleTreeLinker16FetchDescendantsEPKNS_12ModuleScriptE(%"class.blink::ModuleTreeLinker"* %0, %"class.blink::ModuleScript"* nonnull %1)
  br label %48

48:                                               ; preds = %39, %47, %44
  ret void
}

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::Module"* @_ZNK5blink12ModuleScript8V8ModuleEv(%"class.blink::ModuleScript"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ModuleTreeLinker42FinalizeFetchDescendantsForOneModuleScriptEv(%"class.blink::ModuleTreeLinker"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 13
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @_ZN5blink16ModuleTreeLinker11InstantiateEv(%"class.blink::ModuleTreeLinker"* %0)
  br label %6

6:                                                ; preds = %5, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNK5blink12ModuleScript22ResolveModuleSpecifierERKN3WTF6StringEPS2_(%"class.blink::KURL"* sret, %"class.blink::ModuleScript"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18ScriptFetchOptionsD2Ev(%"class.blink::ScriptFetchOptions"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #9
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %0, i64 0, i32 1, i32 0, i32 0
  %20 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %19, align 8
  %21 = icmp eq %"struct.std::__1::pair"* %20, null
  br i1 %21, label %54, label %22, !prof !32

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %0, i64 0, i32 1, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %52, label %26

26:                                               ; preds = %22
  %27 = zext i32 %24 to i64
  br label %28

28:                                               ; preds = %49, %26
  %29 = phi i64 [ 0, %26 ], [ %50, %49 ]
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 %29
  %31 = bitcast %"struct.std::__1::pair"* %30 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast i8* %32 to %"class.WTF::StringImpl"*
  %34 = ptrtoint i8* %32 to i64
  switch i64 %34, label %35 [
    i64 -1, label %49
    i64 0, label %49
  ]

35:                                               ; preds = %28
  %36 = getelementptr inbounds i8, i8* %32, i64 8
  %37 = bitcast i8* %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = bitcast i8* %32 to i32*
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %35
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %35
  %46 = phi i32 [ %44, %43 ], [ %42, %35 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #9
  br label %49

49:                                               ; preds = %48, %45, %28, %28
  %50 = add nuw nsw i64 %29, 1
  %51 = icmp eq i64 %50, %27
  br i1 %51, label %52, label %28

52:                                               ; preds = %49, %22
  %53 = bitcast %"struct.std::__1::pair"* %20 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %53) #9
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %19, align 8
  br label %54

54:                                               ; preds = %18, %52
  %55 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %0, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #9
  br label %71

71:                                               ; preds = %54, %67, %70
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ModuleTreeLinker11InstantiateEv(%"class.blink::ModuleTreeLinker"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::ScriptValue", align 8
  %3 = alloca %"class.blink::ScriptValue", align 8
  %4 = alloca %"class.blink::HeapHashSet.606", align 8
  %5 = alloca %"class.blink::ScriptValue", align 8
  %6 = alloca %"class.blink::ScriptValue", align 8
  %7 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 4, i32 0, i32 0
  %8 = load %"class.blink::Modulator"*, %"class.blink::Modulator"** %7, align 8
  %9 = bitcast %"class.blink::Modulator"* %8 to i1 (%"class.blink::Modulator"*)***
  %10 = load i1 (%"class.blink::Modulator"*)**, i1 (%"class.blink::Modulator"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::Modulator"*)*, i1 (%"class.blink::Modulator"*)** %10, i64 22
  %12 = load i1 (%"class.blink::Modulator"*)*, i1 (%"class.blink::Modulator"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::Modulator"* %8) #9
  %14 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 11
  br i1 %13, label %17, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::Member.518"* %14 to i64*
  store atomic i64 0, i64* %16 monotonic, align 8
  tail call void @_ZN5blink16ModuleTreeLinker12AdvanceStateENS0_5StateE(%"class.blink::ModuleTreeLinker"* %0, i32 4)
  br label %120

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::Member.518", %"class.blink::Member.518"* %14, i64 0, i32 0, i32 0
  %19 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %18, align 8
  %20 = icmp eq %"class.blink::ModuleScript"* %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  tail call void @_ZN5blink16ModuleTreeLinker12AdvanceStateENS0_5StateE(%"class.blink::ModuleTreeLinker"* %0, i32 4)
  br label %120

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 12
  %24 = load i8, i8* %23, align 8, !range !36
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %74

26:                                               ; preds = %22
  %27 = tail call %"class.v8::Module"* @_ZNK5blink12ModuleScript8V8ModuleEv(%"class.blink::ModuleScript"* nonnull %19) #9
  tail call void @_ZN5blink16ModuleTreeLinker12AdvanceStateENS0_5StateE(%"class.blink::ModuleTreeLinker"* %0, i32 3)
  %28 = bitcast %"class.blink::ScriptValue"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1, i32 1, i32 0
  %31 = bitcast %"class.blink::ScriptValue"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false)
  %32 = load %"class.blink::Modulator"*, %"class.blink::Modulator"** %7, align 8
  %33 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %18, align 8
  %34 = getelementptr inbounds %"class.blink::ModuleScript", %"class.blink::ModuleScript"* %33, i64 0, i32 6
  %35 = bitcast %"class.blink::Modulator"* %32 to void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.v8::Module"*, %"class.blink::KURL"*)***
  %36 = load void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.v8::Module"*, %"class.blink::KURL"*)**, void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.v8::Module"*, %"class.blink::KURL"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.v8::Module"*, %"class.blink::KURL"*)*, void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.v8::Module"*, %"class.blink::KURL"*)** %36, i64 23
  %38 = load void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.v8::Module"*, %"class.blink::KURL"*)*, void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.v8::Module"*, %"class.blink::KURL"*)** %37, align 8
  call void %38(%"class.blink::ScriptValue"* nonnull sret %2, %"class.blink::Modulator"* %32, %"class.v8::Module"* %27, %"class.blink::KURL"* dereferenceable(112) %34) #9
  %39 = load i64*, i64** %29, align 8
  %40 = icmp eq i64* %39, null
  br i1 %40, label %64, label %41

41:                                               ; preds = %26
  %42 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %18, align 8
  %43 = bitcast %"class.blink::ScriptValue"* %2 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.blink::ScriptValue"* %3 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %3, i64 0, i32 1
  %47 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %46, i64 0, i32 0
  %48 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %48, align 8
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %29, i64** %48) #9
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.522"* dereferenceable(8) %47) #9
  %49 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %30, align 8
  %50 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %3, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %49, %"class.blink::DOMWrapperWorld"** %50, align 8
  %51 = icmp eq %"class.blink::DOMWrapperWorld"* %49, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %41
  %53 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %49, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %53) #9
  br label %54

54:                                               ; preds = %41, %52
  call void @_ZN5blink12ModuleScript17SetErrorToRethrowENS_11ScriptValueE(%"class.blink::ModuleScript"* %42, %"class.blink::ScriptValue"* nonnull %3) #9
  %55 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %50, align 8
  %56 = icmp eq %"class.blink::DOMWrapperWorld"* %55, null
  br i1 %56, label %64, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %55, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %58) #9
  %59 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %55) #9
  %63 = bitcast %"class.blink::DOMWrapperWorld"* %55 to i8*
  call void @free(i8* %63) #9
  br label %64

64:                                               ; preds = %62, %57, %54, %26
  %65 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %30, align 8
  %66 = icmp eq %"class.blink::DOMWrapperWorld"* %65, null
  br i1 %66, label %118, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %65, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %68) #9
  %69 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %65, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %118

72:                                               ; preds = %67
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %65) #9
  %73 = bitcast %"class.blink::DOMWrapperWorld"* %65 to i8*
  call void @free(i8* %73) #9
  br label %118

74:                                               ; preds = %22
  %75 = bitcast %"class.blink::HeapHashSet.606"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #9
  %76 = bitcast %"class.blink::HeapHashSet.606"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 20, i1 false) #9
  %77 = bitcast %"class.blink::ScriptValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #9
  %78 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %5, i64 0, i32 1, i32 1, i32 0
  %80 = bitcast %"class.blink::ScriptValue"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink16ModuleTreeLinker19FindFirstParseErrorEPKNS_12ModuleScriptEPNS_11HeapHashSetINS_6MemberIS2_EEN3WTF10MemberHashIS2_EENS7_10HashTraitsIS6_EEEE(%"class.blink::ScriptValue"* nonnull sret %5, %"class.blink::ModuleTreeLinker"* %0, %"class.blink::ModuleScript"* nonnull %19, %"class.blink::HeapHashSet.606"* nonnull %4)
  %81 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %18, align 8
  %82 = bitcast %"class.blink::ScriptValue"* %5 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.blink::ScriptValue"* %6 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1
  %86 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %85, i64 0, i32 0
  %87 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %87, align 8
  %88 = load i64*, i64** %78, align 8
  %89 = icmp eq i64* %88, null
  br i1 %89, label %91, label %90

90:                                               ; preds = %74
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %78, i64** %87) #9
  br label %91

91:                                               ; preds = %90, %74
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.522"* dereferenceable(8) %86) #9
  %92 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %79, align 8
  %93 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %92, %"class.blink::DOMWrapperWorld"** %93, align 8
  %94 = icmp eq %"class.blink::DOMWrapperWorld"* %92, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %92, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %96) #9
  br label %97

97:                                               ; preds = %91, %95
  call void @_ZN5blink12ModuleScript17SetErrorToRethrowENS_11ScriptValueE(%"class.blink::ModuleScript"* %81, %"class.blink::ScriptValue"* nonnull %6) #9
  %98 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %93, align 8
  %99 = icmp eq %"class.blink::DOMWrapperWorld"* %98, null
  br i1 %99, label %107, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %98, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %101) #9
  %102 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %98, i64 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %100
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %98) #9
  %106 = bitcast %"class.blink::DOMWrapperWorld"* %98 to i8*
  call void @free(i8* %106) #9
  br label %107

107:                                              ; preds = %97, %100, %105
  %108 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %79, align 8
  %109 = icmp eq %"class.blink::DOMWrapperWorld"* %108, null
  br i1 %109, label %117, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %108, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %111) #9
  %112 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %108, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %110
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %108) #9
  %116 = bitcast %"class.blink::DOMWrapperWorld"* %108 to i8*
  call void @free(i8* %116) #9
  br label %117

117:                                              ; preds = %107, %110, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #9
  br label %118

118:                                              ; preds = %72, %67, %64, %117
  %119 = phi i8* [ %75, %117 ], [ %28, %64 ], [ %28, %67 ], [ %28, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #9
  call void @_ZN5blink16ModuleTreeLinker12AdvanceStateENS0_5StateE(%"class.blink::ModuleTreeLinker"* %0, i32 4)
  br label %120

120:                                              ; preds = %118, %21, %15
  ret void
}

declare void @_ZN5blink12ModuleScript17SetErrorToRethrowENS_11ScriptValueE(%"class.blink::ModuleScript"*, %"class.blink::ScriptValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16ModuleTreeLinker19FindFirstParseErrorEPKNS_12ModuleScriptEPNS_11HeapHashSetINS_6MemberIS2_EEN3WTF10MemberHashIS2_EENS7_10HashTraitsIS6_EEEE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::ModuleTreeLinker"* nocapture readonly, %"class.blink::ModuleScript"*, %"class.blink::HeapHashSet.606"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.blink::ModuleScript"*, align 8
  %7 = alloca %"class.WTF::Vector.596", align 8
  %8 = alloca %"class.blink::KURL", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  store %"class.blink::ModuleScript"* %2, %"class.blink::ModuleScript"** %6, align 8
  %13 = getelementptr inbounds %"class.blink::HeapHashSet.606", %"class.blink::HeapHashSet.606"* %3, i64 0, i32 0, i32 0
  %14 = call { %"class.blink::Member.612"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS4_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.610"* %13, %"class.blink::ModuleScript"** nonnull dereferenceable(8) %6, %"class.blink::ModuleScript"** nonnull dereferenceable(8) %6) #9
  %15 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %6, align 8
  %16 = call %"class.v8::Module"* @_ZNK5blink12ModuleScript8V8ModuleEv(%"class.blink::ModuleScript"* %15) #9
  %17 = icmp eq %"class.v8::Module"* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %4
  %19 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %6, align 8
  call void @_ZNK5blink12ModuleScript16CreateParseErrorEv(%"class.blink::ScriptValue"* sret %0, %"class.blink::ModuleScript"* %19) #9
  br label %187

20:                                               ; preds = %4
  %21 = bitcast %"class.WTF::Vector.596"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #9
  %22 = getelementptr inbounds %"class.WTF::Vector.596", %"class.WTF::Vector.596"* %7, i64 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.WTF::Vector.596", %"class.WTF::Vector.596"* %7, i64 0, i32 0, i32 0, i32 2
  %24 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %1, i64 0, i32 4, i32 0, i32 0
  %25 = bitcast %"class.WTF::Vector.596"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false)
  %26 = load %"class.blink::Modulator"*, %"class.blink::Modulator"** %24, align 8
  %27 = bitcast %"class.blink::Modulator"* %26 to void (%"class.WTF::Vector.596"*, %"class.blink::Modulator"*, %"class.v8::Module"*)***
  %28 = load void (%"class.WTF::Vector.596"*, %"class.blink::Modulator"*, %"class.v8::Module"*)**, void (%"class.WTF::Vector.596"*, %"class.blink::Modulator"*, %"class.v8::Module"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.WTF::Vector.596"*, %"class.blink::Modulator"*, %"class.v8::Module"*)*, void (%"class.WTF::Vector.596"*, %"class.blink::Modulator"*, %"class.v8::Module"*)** %28, i64 24
  %30 = load void (%"class.WTF::Vector.596"*, %"class.blink::Modulator"*, %"class.v8::Module"*)*, void (%"class.WTF::Vector.596"*, %"class.blink::Modulator"*, %"class.v8::Module"*)** %29, align 8
  call void %30(%"class.WTF::Vector.596"* nonnull sret %7, %"class.blink::Modulator"* %26, %"class.v8::Module"* nonnull %16) #9
  %31 = load %"struct.blink::ModuleRequest"*, %"struct.blink::ModuleRequest"** %22, align 8
  %32 = load i32, i32* %23, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %31, i64 %33
  %35 = icmp eq i32 %32, 0
  br i1 %35, label %164, label %36

36:                                               ; preds = %20
  %37 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 0
  %38 = bitcast %"class.logging::CheckError"* %9 to i8*
  %39 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %43 = bitcast %"class.logging::CheckError"* %11 to i8*
  %44 = bitcast %"class.logging::CheckError"* %12 to i8*
  %45 = getelementptr inbounds %"class.blink::HeapHashSet.606", %"class.blink::HeapHashSet.606"* %3, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::HeapHashSet.606", %"class.blink::HeapHashSet.606"* %3, i64 0, i32 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1, i32 1, i32 0
  %49 = bitcast %"class.blink::ScriptValue"* %0 to i8*
  br label %50

50:                                               ; preds = %36, %161
  %51 = phi %"struct.blink::ModuleRequest"* [ %31, %36 ], [ %162, %161 ]
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %37) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 112, i1 false)
  %52 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %6, align 8
  %53 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %51, i64 0, i32 0
  call void @_ZNK5blink12ModuleScript22ResolveModuleSpecifierERKN3WTF6StringEPS2_(%"class.blink::KURL"* nonnull sret %8, %"class.blink::ModuleScript"* %52, %"class.WTF::String"* dereferenceable(8) %53, %"class.WTF::String"* null) #9
  %54 = load %"class.blink::Modulator"*, %"class.blink::Modulator"** %24, align 8
  %55 = bitcast %"class.blink::Modulator"* %54 to i32 (%"class.blink::Modulator"*, %"struct.blink::ModuleRequest"*)***
  %56 = load i32 (%"class.blink::Modulator"*, %"struct.blink::ModuleRequest"*)**, i32 (%"class.blink::Modulator"*, %"struct.blink::ModuleRequest"*)*** %55, align 8
  %57 = getelementptr inbounds i32 (%"class.blink::Modulator"*, %"struct.blink::ModuleRequest"*)*, i32 (%"class.blink::Modulator"*, %"struct.blink::ModuleRequest"*)** %56, i64 25
  %58 = load i32 (%"class.blink::Modulator"*, %"struct.blink::ModuleRequest"*)*, i32 (%"class.blink::Modulator"*, %"struct.blink::ModuleRequest"*)** %57, align 8
  %59 = call i32 %58(%"class.blink::Modulator"* %54, %"struct.blink::ModuleRequest"* dereferenceable(32) %51) #9
  %60 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %8) #9
  br i1 %60, label %64, label %61

61:                                               ; preds = %50
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 623, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.15, i64 0, i64 0)) #9
  %62 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  %63 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %62, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.14, i64 0, i64 0), i64 68) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #9
  br label %64

64:                                               ; preds = %50, %61
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %65 = icmp eq i32 %59, 0
  br i1 %65, label %67, label %66

66:                                               ; preds = %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %74

67:                                               ; preds = %64
  %68 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  %69 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.16, i64 0, i64 0), i8* %68, i8* %69) #9
  %70 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %70, i8** %40, align 8
  %71 = icmp eq i8* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %67
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 626, %"class.logging::CheckOpResult"* nonnull %10) #9
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #9
  br label %74

74:                                               ; preds = %66, %67, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  %75 = load %"class.blink::Modulator"*, %"class.blink::Modulator"** %24, align 8
  %76 = bitcast %"class.blink::Modulator"* %75 to %"class.blink::ModuleScript"* (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32)***
  %77 = load %"class.blink::ModuleScript"* (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32)**, %"class.blink::ModuleScript"* (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32)*** %76, align 8
  %78 = getelementptr inbounds %"class.blink::ModuleScript"* (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32)*, %"class.blink::ModuleScript"* (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32)** %77, i64 12
  %79 = load %"class.blink::ModuleScript"* (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32)*, %"class.blink::ModuleScript"* (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32)** %78, align 8
  %80 = call %"class.blink::ModuleScript"* %79(%"class.blink::Modulator"* %75, %"class.blink::KURL"* nonnull dereferenceable(112) %8, i32 %59) #9
  %81 = icmp eq %"class.blink::ModuleScript"* %80, null
  br i1 %81, label %82, label %84

82:                                               ; preds = %74
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 637, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0)) #9
  %83 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #9
  br label %84

84:                                               ; preds = %74, %82
  %85 = ptrtoint %"class.blink::ModuleScript"* %80 to i64
  %86 = load %"class.blink::Member.612"*, %"class.blink::Member.612"** %45, align 8
  %87 = icmp eq %"class.blink::Member.612"* %86, null
  br i1 %87, label %148, label %88

88:                                               ; preds = %84
  %89 = load i32, i32* %46, align 8
  %90 = add i32 %89, -1
  %91 = zext i32 %90 to i64
  %92 = shl i64 %85, 32
  %93 = xor i64 %92, -1
  %94 = add i64 %93, %85
  %95 = lshr i64 %94, 22
  %96 = xor i64 %95, %94
  %97 = shl i64 %96, 13
  %98 = xor i64 %97, -1
  %99 = add i64 %96, %98
  %100 = lshr i64 %99, 8
  %101 = xor i64 %100, %99
  %102 = mul i64 %101, 9
  %103 = lshr i64 %102, 15
  %104 = xor i64 %103, %102
  %105 = shl i64 %104, 27
  %106 = xor i64 %105, -1
  %107 = add i64 %104, %106
  %108 = lshr i64 %107, 31
  %109 = xor i64 %108, %107
  %110 = trunc i64 %109 to i32
  %111 = and i32 %90, %110
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.612", %"class.blink::Member.612"* %86, i64 %112
  %114 = getelementptr inbounds %"class.blink::Member.612", %"class.blink::Member.612"* %113, i64 0, i32 0, i32 0
  %115 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %114, align 8
  %116 = icmp eq %"class.blink::ModuleScript"* %115, %80
  br i1 %116, label %145, label %117

117:                                              ; preds = %88
  %118 = xor i32 %110, -1
  %119 = lshr i32 %110, 23
  %120 = add i32 %119, %118
  %121 = shl i32 %120, 12
  %122 = xor i32 %121, %120
  %123 = lshr i32 %122, 7
  %124 = xor i32 %123, %122
  %125 = shl i32 %124, 2
  %126 = xor i32 %125, %124
  %127 = lshr i32 %126, 20
  %128 = xor i32 %127, %126
  %129 = or i32 %128, 1
  %130 = zext i32 %129 to i64
  br label %131

131:                                              ; preds = %136, %117
  %132 = phi %"class.blink::ModuleScript"* [ %115, %117 ], [ %143, %136 ]
  %133 = phi i64 [ %112, %117 ], [ %140, %136 ]
  %134 = phi i64 [ 0, %117 ], [ %138, %136 ]
  %135 = icmp eq %"class.blink::ModuleScript"* %132, null
  br i1 %135, label %148, label %136

136:                                              ; preds = %131
  %137 = icmp eq i64 %134, 0
  %138 = select i1 %137, i64 %130, i64 %134
  %139 = add i64 %138, %133
  %140 = and i64 %139, %91
  %141 = getelementptr inbounds %"class.blink::Member.612", %"class.blink::Member.612"* %86, i64 %140
  %142 = getelementptr inbounds %"class.blink::Member.612", %"class.blink::Member.612"* %141, i64 0, i32 0, i32 0
  %143 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %142, align 8
  %144 = icmp eq %"class.blink::ModuleScript"* %143, %80
  br i1 %144, label %145, label %131

145:                                              ; preds = %136, %88
  %146 = phi %"class.blink::Member.612"* [ %113, %88 ], [ %141, %136 ]
  %147 = icmp eq %"class.blink::Member.612"* %146, null
  br i1 %147, label %148, label %161

148:                                              ; preds = %131, %145, %84
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink16ModuleTreeLinker19FindFirstParseErrorEPKNS_12ModuleScriptEPNS_11HeapHashSetINS_6MemberIS2_EEN3WTF10MemberHashIS2_EENS7_10HashTraitsIS6_EEEE(%"class.blink::ScriptValue"* sret %0, %"class.blink::ModuleTreeLinker"* %1, %"class.blink::ModuleScript"* %80, %"class.blink::HeapHashSet.606"* %3)
  %149 = load i64*, i64** %47, align 8
  %150 = icmp eq i64* %149, null
  br i1 %150, label %151, label %166

151:                                              ; preds = %148
  %152 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %48, align 8
  %153 = icmp eq %"class.blink::DOMWrapperWorld"* %152, null
  br i1 %153, label %161, label %154

154:                                              ; preds = %151
  %155 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %152, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %155) #9
  %156 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %152, i64 0, i32 0, i32 0, i32 0, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %161

159:                                              ; preds = %154
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %152) #9
  %160 = bitcast %"class.blink::DOMWrapperWorld"* %152 to i8*
  call void @free(i8* %160) #9
  br label %161

161:                                              ; preds = %151, %154, %159, %145
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %37) #9
  %162 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %51, i64 1
  %163 = icmp eq %"struct.blink::ModuleRequest"* %162, %34
  br i1 %163, label %164, label %50

164:                                              ; preds = %161, %20
  %165 = bitcast %"class.blink::ScriptValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %165, i8 0, i64 24, i1 false)
  br label %167

166:                                              ; preds = %148
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %37) #9
  br label %167

167:                                              ; preds = %166, %164
  %168 = load %"struct.blink::ModuleRequest"*, %"struct.blink::ModuleRequest"** %22, align 8
  %169 = icmp eq %"struct.blink::ModuleRequest"* %168, null
  br i1 %169, label %186, label %170, !prof !32

170:                                              ; preds = %167
  %171 = bitcast %"struct.blink::ModuleRequest"* %168 to i8*
  %172 = load i32, i32* %23, align 4
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %184, label %174, !prof !5

174:                                              ; preds = %170
  %175 = zext i32 %172 to i64
  %176 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %168, i64 %175
  br label %177

177:                                              ; preds = %177, %174
  %178 = phi %"struct.blink::ModuleRequest"* [ %179, %177 ], [ %168, %174 ]
  call void @_ZN5blink13ModuleRequestD2Ev(%"struct.blink::ModuleRequest"* %178) #9
  %179 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %178, i64 1
  %180 = icmp eq %"struct.blink::ModuleRequest"* %179, %176
  br i1 %180, label %181, label %177

181:                                              ; preds = %177
  store i32 0, i32* %23, align 4
  %182 = bitcast %"class.WTF::Vector.596"* %7 to i8**
  %183 = load i8*, i8** %182, align 8
  br label %184

184:                                              ; preds = %181, %170
  %185 = phi i8* [ %183, %181 ], [ %171, %170 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %185) #9
  store %"struct.blink::ModuleRequest"* null, %"struct.blink::ModuleRequest"** %22, align 8
  br label %186

186:                                              ; preds = %167, %184
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #9
  br label %187

187:                                              ; preds = %186, %18
  ret void
}

declare void @_ZNK5blink12ModuleScript16CreateParseErrorEv(%"class.blink::ScriptValue"* sret, %"class.blink::ModuleScript"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink18SingleModuleClient18NameInHeapSnapshotEv(%"class.blink::SingleModuleClient"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16ModuleTreeLinkerD2Ev(%"class.blink::ModuleTreeLinker"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink16ModuleTreeLinkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.513"*, %"struct.std::__1::pair.513"** %3, align 8
  %5 = icmp eq %"struct.std::__1::pair.513"* %4, null
  br i1 %5, label %25, label %6, !prof !32

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 7, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %20, %10
  %13 = phi i64 [ 0, %10 ], [ %21, %20 ]
  %14 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %4, i64 %13, i32 0, i32 4
  %15 = bitcast %"class.WTF::String"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, inttoptr (i64 -1 to i8*)
  br i1 %17, label %20, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %4, i64 %13, i32 0
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %19) #9
  br label %20

20:                                               ; preds = %18, %12
  %21 = add nuw nsw i64 %13, 1
  %22 = icmp eq i64 %21, %11
  br i1 %22, label %23, label %12

23:                                               ; preds = %20, %6
  %24 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %4, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %24) #9
  store %"struct.std::__1::pair.513"* null, %"struct.std::__1::pair.513"** %3, align 8
  br label %25

25:                                               ; preds = %1, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16ModuleTreeLinkerD0Ev(%"class.blink::ModuleTreeLinker"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink16ModuleTreeLinkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.513"*, %"struct.std::__1::pair.513"** %3, align 8
  %5 = icmp eq %"struct.std::__1::pair.513"* %4, null
  br i1 %5, label %25, label %6, !prof !32

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ModuleTreeLinker", %"class.blink::ModuleTreeLinker"* %0, i64 0, i32 7, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %20, %10
  %13 = phi i64 [ 0, %10 ], [ %21, %20 ]
  %14 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %4, i64 %13, i32 0, i32 4
  %15 = bitcast %"class.WTF::String"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, inttoptr (i64 -1 to i8*)
  br i1 %17, label %20, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %4, i64 %13, i32 0
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %19) #9
  br label %20

20:                                               ; preds = %18, %12
  %21 = add nuw nsw i64 %13, 1
  %22 = icmp eq i64 %21, %11
  br i1 %22, label %23, label %12

23:                                               ; preds = %20, %6
  %24 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %4, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %24) #9
  store %"struct.std::__1::pair.513"* null, %"struct.std::__1::pair.513"** %3, align 8
  br label %25

25:                                               ; preds = %1, %23
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEC2ERKSD_(%"class.WTF::HashTable.213"*, %"class.WTF::HashTable.213"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %1, i64 0, i32 2
  %4 = bitcast %"class.WTF::HashTable.213"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 20, i1 false)
  %5 = load i32, i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %35, label %7

7:                                                ; preds = %2
  tail call void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.213"* %0, i32 %5)
  %8 = load i32, i32* %3, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %1, i64 0, i32 0
  %11 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %14
  br i1 %9, label %35, label %16

16:                                               ; preds = %7
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %16, %29
  %19 = phi %"struct.std::__1::pair"* [ %30, %29 ], [ %11, %16 ]
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 0, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  %26 = and i1 %22, %25
  %27 = icmp eq %"class.WTF::StringImpl"* %21, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %28 = or i1 %27, %26
  br i1 %28, label %29, label %32

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 1
  %31 = icmp eq %"struct.std::__1::pair"* %30, %15
  br i1 %31, label %35, label %18

32:                                               ; preds = %18, %16
  %33 = phi %"struct.std::__1::pair"* [ %11, %16 ], [ %19, %18 ]
  %34 = icmp eq %"struct.std::__1::pair"* %33, %15
  br i1 %34, label %35, label %36

35:                                               ; preds = %29, %36, %55, %52, %2, %7, %32
  ret void

36:                                               ; preds = %32, %55
  %37 = phi %"struct.std::__1::pair"* [ %42, %55 ], [ %33, %32 ]
  %38 = tail call { %"struct.std::__1::pair"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SB_SC_EERKS6_SI_EENS_18HashTableAddResultISD_S6_EEOT0_OT1_(%"class.WTF::HashTable.213"* %0, %"struct.std::__1::pair"* dereferenceable(16) %37, %"struct.std::__1::pair"* dereferenceable(16) %37) #9
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 1
  %40 = icmp eq %"struct.std::__1::pair"* %39, %15
  br i1 %40, label %35, label %41

41:                                               ; preds = %36, %52
  %42 = phi %"struct.std::__1::pair"* [ %53, %52 ], [ %39, %36 ]
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %42, i64 0, i32 1
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 0
  %49 = and i1 %45, %48
  %50 = icmp eq %"class.WTF::StringImpl"* %44, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %51 = or i1 %50, %49
  br i1 %51, label %52, label %55

52:                                               ; preds = %41
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %42, i64 1
  %54 = icmp eq %"struct.std::__1::pair"* %53, %15
  br i1 %54, label %35, label %41

55:                                               ; preds = %41
  %56 = icmp eq %"struct.std::__1::pair"* %42, %15
  br i1 %56, label %35, label %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.213"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %71

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.20, i64 0, i64 0)) #9
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEEEEPKcv, i64 0, i64 0)) #9
  %30 = bitcast i8* %29 to %"struct.std::__1::pair"*
  %31 = add nsw i64 %27, -1
  %32 = and i64 %27, 3
  %33 = icmp ult i64 %31, 3
  br i1 %33, label %57, label %34

34:                                               ; preds = %26
  %35 = sub nsw i64 %27, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %54, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %55, %36 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %37
  %40 = bitcast %"struct.std::__1::pair"* %39 to i64*
  store i64 0, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %37, i32 1
  store i8 0, i8* %41, align 8
  %42 = or i64 %37, 1
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %42
  %44 = bitcast %"struct.std::__1::pair"* %43 to i64*
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %42, i32 1
  store i8 0, i8* %45, align 8
  %46 = or i64 %37, 2
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %46
  %48 = bitcast %"struct.std::__1::pair"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %46, i32 1
  store i8 0, i8* %49, align 8
  %50 = or i64 %37, 3
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %50
  %52 = bitcast %"struct.std::__1::pair"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %50, i32 1
  store i8 0, i8* %53, align 8
  %54 = add nuw nsw i64 %37, 4
  %55 = add i64 %38, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %36

57:                                               ; preds = %36, %26
  %58 = phi i64 [ 0, %26 ], [ %54, %36 ]
  %59 = icmp eq i64 %32, 0
  br i1 %59, label %69, label %60

60:                                               ; preds = %57, %60
  %61 = phi i64 [ %66, %60 ], [ %58, %57 ]
  %62 = phi i64 [ %67, %60 ], [ %32, %57 ]
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %61
  %64 = bitcast %"struct.std::__1::pair"* %63 to i64*
  store i64 0, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %61, i32 1
  store i8 0, i8* %65, align 8
  %66 = add nuw nsw i64 %61, 1
  %67 = add i64 %62, -1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %60, !llvm.loop !37

69:                                               ; preds = %60, %57
  %70 = call %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_(%"class.WTF::HashTable.213"* %0, %"struct.std::__1::pair"* %30, i32 %17, %"struct.std::__1::pair"* null) #9
  br label %71

71:                                               ; preds = %69, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_(%"class.WTF::HashTable.213"*, %"struct.std::__1::pair"*, i32, %"struct.std::__1::pair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.213", align 8
  %6 = bitcast %"class.WTF::HashTable.213"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.213"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.std::__1::pair"* %1, %"struct.std::__1::pair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.213"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.213"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %15, align 8
  %23 = ptrtoint %"struct.std::__1::pair"* %22 to i64
  br label %71

24:                                               ; preds = %119
  %25 = bitcast %"class.WTF::HashTable.213"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.213"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %120, %24 ]
  %33 = phi %"struct.std::__1::pair"* [ null, %16 ], [ %123, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %121, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.std::__1::pair"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 %42
  %44 = bitcast %"struct.std::__1::pair"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #9
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #9
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret %"struct.std::__1::pair"* %33

71:                                               ; preds = %21, %119
  %72 = phi i64 [ %120, %119 ], [ %23, %21 ]
  %73 = phi i32 [ %121, %119 ], [ %13, %21 ]
  %74 = phi %"struct.std::__1::pair"* [ %122, %119 ], [ %22, %21 ]
  %75 = phi %"struct.std::__1::pair"* [ %123, %119 ], [ null, %21 ]
  %76 = phi i32 [ %124, %119 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 %77
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 %77, i32 1
  %83 = load i8, i8* %82, align 1
  %84 = icmp eq i8 %83, 0
  %85 = and i1 %81, %84
  %86 = icmp eq %"class.WTF::StringImpl"* %80, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %87 = or i1 %86, %85
  br i1 %87, label %119, label %88

88:                                               ; preds = %71
  %89 = call { %"struct.std::__1::pair"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EENS2_IPS6_bEERKT0_(%"class.WTF::HashTable.213"* nonnull %5, %"struct.std::__1::pair"* dereferenceable(16) %78) #9
  %90 = extractvalue { %"struct.std::__1::pair"*, i8 } %89, 0
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #9
  br label %107

107:                                              ; preds = %88, %103, %106
  %108 = bitcast %"struct.std::__1::pair"* %78 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair"* %90 to i64*
  store i64 %109, i64* %110, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %90, i64 0, i32 1
  %112 = load i8, i8* %82, align 8
  store i8 %112, i8* %111, align 8
  %113 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %15, align 8
  %114 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %113, i64 %77
  %115 = icmp eq %"struct.std::__1::pair"* %114, %3
  %116 = select i1 %115, %"struct.std::__1::pair"* %90, %"struct.std::__1::pair"* %75
  %117 = load i32, i32* %12, align 8
  %118 = ptrtoint %"struct.std::__1::pair"* %113 to i64
  br label %119

119:                                              ; preds = %71, %107
  %120 = phi i64 [ %72, %71 ], [ %118, %107 ]
  %121 = phi i32 [ %73, %71 ], [ %117, %107 ]
  %122 = phi %"struct.std::__1::pair"* [ %74, %71 ], [ %113, %107 ]
  %123 = phi %"struct.std::__1::pair"* [ %75, %71 ], [ %116, %107 ]
  %124 = add i32 %76, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %24, label %71
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EENS2_IPS6_bEERKT0_(%"class.WTF::HashTable.213"*, %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #9
  br label %17

17:                                               ; preds = %2, %15
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %20 = load i8, i8* %19, align 8
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 15
  %23 = xor i32 %22, -1
  %24 = add nsw i32 %23, %21
  %25 = lshr i32 %24, 10
  %26 = xor i32 %25, %24
  %27 = mul nsw i32 %26, 9
  %28 = lshr i32 %27, 6
  %29 = xor i32 %28, %27
  %30 = shl i32 %29, 11
  %31 = xor i32 %30, -1
  %32 = add i32 %29, %31
  %33 = lshr i32 %32, 16
  %34 = xor i32 %33, %32
  %35 = zext i32 %18 to i64
  %36 = mul i64 %35, 5146158508761418231
  %37 = zext i32 %34 to i64
  %38 = mul i64 %37, -682818954288075998
  %39 = add i64 %38, %36
  %40 = lshr i64 %39, 32
  %41 = trunc i64 %40 to i32
  %42 = and i32 %7, %41
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %43
  %45 = ptrtoint %"struct.std::__1::pair"* %44 to i64
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %44, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %43, i32 1
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 0
  %52 = and i1 %48, %51
  br i1 %52, label %70, label %53

53:                                               ; preds = %17
  %54 = xor i32 %41, -1
  %55 = lshr i64 %39, 55
  %56 = trunc i64 %55 to i32
  %57 = add i32 %56, %54
  %58 = shl i32 %57, 12
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 7
  %61 = xor i32 %60, %59
  %62 = shl i32 %61, 2
  %63 = xor i32 %62, %61
  %64 = lshr i32 %63, 20
  %65 = xor i32 %64, %63
  %66 = or i32 %65, 1
  %67 = zext i32 %66 to i64
  br label %76

68:                                               ; preds = %94
  %69 = ptrtoint %"struct.std::__1::pair"* %100 to i64
  br label %70

70:                                               ; preds = %68, %17
  %71 = phi i64 [ %45, %17 ], [ %69, %68 ]
  %72 = phi %"struct.std::__1::pair"* [ null, %17 ], [ %95, %68 ]
  %73 = icmp eq %"struct.std::__1::pair"* %72, null
  %74 = ptrtoint %"struct.std::__1::pair"* %72 to i64
  %75 = select i1 %73, i64 %71, i64 %74
  br label %109

76:                                               ; preds = %53, %94
  %77 = phi %"struct.std::__1::pair"* [ null, %53 ], [ %95, %94 ]
  %78 = phi i8* [ %49, %53 ], [ %105, %94 ]
  %79 = phi %"class.WTF::StringImpl"* [ %47, %53 ], [ %103, %94 ]
  %80 = phi i64 [ %45, %53 ], [ %101, %94 ]
  %81 = phi %"struct.std::__1::pair"* [ %44, %53 ], [ %100, %94 ]
  %82 = phi i64 [ %43, %53 ], [ %99, %94 ]
  %83 = phi i64 [ 0, %53 ], [ %97, %94 ]
  %84 = bitcast %"struct.std::__1::pair"* %81 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = icmp eq i8* %85, inttoptr (i64 -1 to i8*)
  br i1 %86, label %94, label %87

87:                                               ; preds = %76
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %89 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %79, %"class.WTF::StringImpl"* %88) #9
  br i1 %89, label %90, label %94

90:                                               ; preds = %87
  %91 = load i8, i8* %78, align 8
  %92 = load i8, i8* %19, align 8
  %93 = icmp eq i8 %91, %92
  br i1 %93, label %109, label %94

94:                                               ; preds = %76, %87, %90
  %95 = phi %"struct.std::__1::pair"* [ %77, %87 ], [ %77, %90 ], [ %81, %76 ]
  %96 = icmp eq i64 %83, 0
  %97 = select i1 %96, i64 %67, i64 %83
  %98 = add i64 %97, %82
  %99 = and i64 %98, %8
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %99
  %101 = ptrtoint %"struct.std::__1::pair"* %100 to i64
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %100, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %99, i32 1
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 0
  %108 = and i1 %104, %107
  br i1 %108, label %68, label %76

109:                                              ; preds = %90, %70
  %110 = phi i64 [ %75, %70 ], [ %80, %90 ]
  %111 = phi i8 [ 0, %70 ], [ 1, %90 ]
  %112 = inttoptr i64 %110 to %"struct.std::__1::pair"*
  %113 = insertvalue { %"struct.std::__1::pair"*, i8 } undef, %"struct.std::__1::pair"* %112, 0
  %114 = insertvalue { %"struct.std::__1::pair"*, i8 } %113, i8 %111, 1
  ret { %"struct.std::__1::pair"*, i8 } %114
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SB_SC_EERKS6_SI_EENS_18HashTableAddResultISD_S6_EEOT0_OT1_(%"class.WTF::HashTable.213"*, %"struct.std::__1::pair"* dereferenceable(16), %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = icmp eq %"struct.std::__1::pair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.213"* %0, %"struct.std::__1::pair"* null)
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.std::__1::pair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #9
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %27 = load i8, i8* %26, align 8
  %28 = zext i8 %27 to i32
  %29 = shl nuw nsw i32 %28, 15
  %30 = xor i32 %29, -1
  %31 = add nsw i32 %30, %28
  %32 = lshr i32 %31, 10
  %33 = xor i32 %32, %31
  %34 = mul nsw i32 %33, 9
  %35 = lshr i32 %34, 6
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 11
  %38 = xor i32 %37, -1
  %39 = add i32 %36, %38
  %40 = lshr i32 %39, 16
  %41 = xor i32 %40, %39
  %42 = zext i32 %25 to i64
  %43 = mul i64 %42, 5146158508761418231
  %44 = zext i32 %41 to i64
  %45 = mul i64 %44, -682818954288075998
  %46 = add i64 %45, %43
  %47 = lshr i64 %46, 32
  %48 = trunc i64 %47 to i32
  %49 = and i32 %14, %48
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %50
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %50, i32 1
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 0
  %58 = and i1 %54, %57
  br i1 %58, label %116, label %59

59:                                               ; preds = %24
  %60 = xor i32 %48, -1
  %61 = lshr i64 %46, 55
  %62 = trunc i64 %61 to i32
  %63 = add i32 %62, %60
  %64 = shl i32 %63, 12
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 7
  %67 = xor i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 20
  %71 = xor i32 %70, %69
  %72 = or i32 %71, 1
  %73 = zext i32 %72 to i64
  br label %74

74:                                               ; preds = %59, %91
  %75 = phi i8* [ %55, %59 ], [ %101, %91 ]
  %76 = phi %"class.WTF::StringImpl"* [ %53, %59 ], [ %99, %91 ]
  %77 = phi %"struct.std::__1::pair"* [ %51, %59 ], [ %97, %91 ]
  %78 = phi %"struct.std::__1::pair"* [ null, %59 ], [ %92, %91 ]
  %79 = phi i64 [ %50, %59 ], [ %96, %91 ]
  %80 = phi i64 [ 0, %59 ], [ %94, %91 ]
  %81 = bitcast %"struct.std::__1::pair"* %77 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, inttoptr (i64 -1 to i8*)
  br i1 %83, label %91, label %84

84:                                               ; preds = %74
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %86 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"* %85) #9
  br i1 %86, label %87, label %91

87:                                               ; preds = %84
  %88 = load i8, i8* %75, align 8
  %89 = load i8, i8* %26, align 8
  %90 = icmp eq i8 %88, %89
  br i1 %90, label %172, label %91

91:                                               ; preds = %74, %84, %87
  %92 = phi %"struct.std::__1::pair"* [ %78, %87 ], [ %77, %74 ], [ %78, %84 ]
  %93 = icmp eq i64 %80, 0
  %94 = select i1 %93, i64 %73, i64 %80
  %95 = add i64 %94, %79
  %96 = and i64 %95, %15
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %96
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %96, i32 1
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 0
  %104 = and i1 %100, %103
  br i1 %104, label %105, label %74

105:                                              ; preds = %91
  %106 = icmp eq %"struct.std::__1::pair"* %92, null
  br i1 %106, label %116, label %107

107:                                              ; preds = %105
  %108 = bitcast %"struct.std::__1::pair"* %92 to i64*
  store i64 0, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 0, i32 1
  store i8 0, i8* %109, align 8
  %110 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = add i32 %111, 2147483647
  %113 = and i32 %112, 2147483647
  %114 = and i32 %111, -2147483648
  %115 = or i32 %113, %114
  store i32 %115, i32* %110, align 8
  br label %116

116:                                              ; preds = %24, %105, %107
  %117 = phi %"struct.std::__1::pair"* [ %92, %107 ], [ %97, %105 ], [ %51, %24 ]
  %118 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %138, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = zext i32 %128 to i33
  %130 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %129, i33 1) #9
  %131 = extractvalue { i33, i1 } %130, 1
  %132 = extractvalue { i33, i1 } %130, 0
  %133 = icmp slt i33 %132, 0
  %134 = or i1 %131, %133
  br i1 %134, label %135, label %136, !prof !5

135:                                              ; preds = %126
  tail call void @llvm.trap() #9
  unreachable

136:                                              ; preds = %126
  %137 = trunc i33 %132 to i32
  store i32 %137, i32* %127, align 4
  br label %138

138:                                              ; preds = %136, %121, %116
  %139 = ptrtoint %"class.WTF::StringImpl"* %119 to i64
  %140 = bitcast %"struct.std::__1::pair"* %117 to i64*
  %141 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 0, i32 0, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  store i64 %139, i64* %140, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #9
  br label %157

157:                                              ; preds = %138, %153, %156
  %158 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %159 = load i8, i8* %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 0, i32 1
  store i8 %159, i8* %160, align 8
  %161 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 2
  %162 = load i32, i32* %161, align 4
  %163 = add i32 %162, 1
  store i32 %163, i32* %161, align 4
  %164 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 3
  %165 = load i32, i32* %164, align 8
  %166 = add i32 %165, %163
  %167 = shl i32 %166, 1
  %168 = load i32, i32* %12, align 8
  %169 = icmp ult i32 %167, %168
  br i1 %169, label %172, label %170

170:                                              ; preds = %157
  %171 = tail call %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.213"* %0, %"struct.std::__1::pair"* %117)
  br label %172

172:                                              ; preds = %87, %157, %170
  %173 = phi i8 [ 1, %157 ], [ 1, %170 ], [ 0, %87 ]
  %174 = phi %"struct.std::__1::pair"* [ %117, %157 ], [ %171, %170 ], [ %77, %87 ]
  %175 = insertvalue { %"struct.std::__1::pair"*, i8 } undef, %"struct.std::__1::pair"* %174, 0
  %176 = insertvalue { %"struct.std::__1::pair"*, i8 } %175, i8 %173, 1
  ret { %"struct.std::__1::pair"*, i8 } %176
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.213"*, %"struct.std::__1::pair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEEEEPKcv, i64 0, i64 0)) #9
  %36 = bitcast i8* %35 to %"struct.std::__1::pair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %45
  %48 = bitcast %"struct.std::__1::pair"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %45, i32 1
  store i8 0, i8* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %50
  %52 = bitcast %"struct.std::__1::pair"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %50, i32 1
  store i8 0, i8* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %54
  %56 = bitcast %"struct.std::__1::pair"* %55 to i64*
  store i64 0, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %54, i32 1
  store i8 0, i8* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %58
  %60 = bitcast %"struct.std::__1::pair"* %59 to i64*
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %58, i32 1
  store i8 0, i8* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %69
  %72 = bitcast %"struct.std::__1::pair"* %71 to i64*
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %69, i32 1
  store i8 0, i8* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !39

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_(%"class.WTF::HashTable.213"* %0, %"struct.std::__1::pair"* %36, i32 %32, %"struct.std::__1::pair"* %1) #9
  ret %"struct.std::__1::pair"* %78
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13ModuleRequestD2Ev(%"struct.blink::ModuleRequest"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.599", %"class.WTF::Vector.599"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::ImportAssertion"*, %"struct.blink::ImportAssertion"** %3, align 8
  %5 = icmp eq %"struct.blink::ImportAssertion"* %4, null
  br i1 %5, label %57, label %6, !prof !32

6:                                                ; preds = %1
  %7 = bitcast %"struct.blink::ImportAssertion"* %4 to i8*
  %8 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %55, label %11, !prof !5

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %4, i64 %12
  br label %14

14:                                               ; preds = %11, %49
  %15 = phi %"struct.blink::ImportAssertion"* [ %50, %49 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %15, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #9
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %15, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #9
  br label %49

49:                                               ; preds = %48, %45, %32
  %50 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %15, i64 1
  %51 = icmp eq %"struct.blink::ImportAssertion"* %50, %13
  br i1 %51, label %52, label %14

52:                                               ; preds = %49
  store i32 0, i32* %8, align 4
  %53 = bitcast %"class.WTF::Vector.599"* %2 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %6
  %56 = phi i8* [ %54, %52 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #9
  store %"struct.blink::ImportAssertion"* null, %"struct.blink::ImportAssertion"** %3, align 8
  br label %57

57:                                               ; preds = %1, %55
  %58 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %0, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #9
  br label %74

74:                                               ; preds = %57, %70, %73
  ret void
}

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #2

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.522"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !36
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_18SingleModuleClientEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_18SingleModuleClientEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_18SingleModuleClientEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_18SingleModuleClientEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18SingleModuleClientEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.25, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !5

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18SingleModuleClientEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SingleModuleClient"*
  %4 = bitcast i8* %1 to void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)**, void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)*, void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)*, void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SingleModuleClient"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_18SingleModuleClientEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::SingleModuleClient"*
  %3 = bitcast i8* %0 to void (%"class.blink::SingleModuleClient"*)***
  %4 = load void (%"class.blink::SingleModuleClient"*)**, void (%"class.blink::SingleModuleClient"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::SingleModuleClient"*)*, void (%"class.blink::SingleModuleClient"*)** %4, i64 1
  %6 = load void (%"class.blink::SingleModuleClient"*)*, void (%"class.blink::SingleModuleClient"*)** %5, align 8
  tail call void %6(%"class.blink::SingleModuleClient"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_18SingleModuleClientEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #9
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ResourceFetcherEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ResourceFetcher"*
  %4 = bitcast i8* %1 to void (%"class.blink::ResourceFetcher"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ResourceFetcher"*, %"class.blink::Visitor"*)**, void (%"class.blink::ResourceFetcher"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ResourceFetcher"*, %"class.blink::Visitor"*)*, void (%"class.blink::ResourceFetcher"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::ResourceFetcher"*, %"class.blink::Visitor"*)*, void (%"class.blink::ResourceFetcher"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ResourceFetcher"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9ModulatorEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Modulator"*
  %4 = bitcast i8* %1 to void (%"class.blink::Modulator"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Modulator"*, %"class.blink::Visitor"*)**, void (%"class.blink::Modulator"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::Modulator"*, %"class.blink::Visitor"*)*, void (%"class.blink::Modulator"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::Modulator"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_24ModuleTreeLinkerRegistryEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ModuleTreeLinkerRegistry"*
  tail call void @_ZNK5blink24ModuleTreeLinkerRegistry5TraceEPNS_7VisitorE(%"class.blink::ModuleTreeLinkerRegistry"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink24ModuleTreeLinkerRegistry5TraceEPNS_7VisitorE(%"class.blink::ModuleTreeLinkerRegistry"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16ModuleTreeClientEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ModuleTreeClient"*
  %4 = bitcast i8* %1 to void (%"class.blink::ModuleTreeClient"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ModuleTreeClient"*, %"class.blink::Visitor"*)**, void (%"class.blink::ModuleTreeClient"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ModuleTreeClient"*, %"class.blink::Visitor"*)*, void (%"class.blink::ModuleTreeClient"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::ModuleTreeClient"*, %"class.blink::Visitor"*)*, void (%"class.blink::ModuleTreeClient"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ModuleTreeClient"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12ModuleScriptEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ModuleScript"*
  %4 = bitcast i8* %1 to void (%"class.blink::ModuleScript"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ModuleScript"*, %"class.blink::Visitor"*)**, void (%"class.blink::ModuleScript"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::ModuleScript"*, %"class.blink::Visitor"*)*, void (%"class.blink::ModuleScript"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::ModuleScript"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_16ModuleTreeLinkerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::ModuleTreeLinker"**
  %5 = load %"class.blink::ModuleTreeLinker"*, %"class.blink::ModuleTreeLinker"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #9
  %7 = icmp eq %"class.blink::ModuleTreeLinker"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::ModuleTreeLinker"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16ModuleTreeLinkerEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #9
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16ModuleTreeLinkerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15ResourceFetcherEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 24
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %0, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9ModulatorEE5TraceEPNS_7VisitorEPKv) #9
  br label %24

24:                                               ; preds = %18, %13
  %25 = getelementptr inbounds i8, i8* %1, i64 64
  %26 = bitcast i8* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %0, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_24ModuleTreeLinkerRegistryEE5TraceEPNS_7VisitorEPKv) #9
  br label %35

35:                                               ; preds = %29, %24
  %36 = getelementptr inbounds i8, i8* %1, i64 72
  %37 = bitcast i8* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %0, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16ModuleTreeClientEE5TraceEPNS_7VisitorEPKv) #9
  br label %46

46:                                               ; preds = %40, %35
  %47 = getelementptr inbounds i8, i8* %1, i64 88
  %48 = bitcast i8* %47 to i64*
  %49 = load atomic i64, i64* %48 monotonic, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %46
  %52 = inttoptr i64 %49 to i8*
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, i64 5
  %56 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %55, align 8
  tail call void %56(%"class.blink::Visitor"* %0, i8* nonnull %52, i8* nonnull %52, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12ModuleScriptEE5TraceEPNS_7VisitorEPKv) #9
  br label %57

57:                                               ; preds = %46, %51
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink16ModuleTreeLinkerEFvNS4_5StateEEJNS3_10PersistentIS4_EES5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i32*
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %10
  %14 = bitcast i8* %13 to %"class.blink::ModuleTreeLinker"*
  %15 = and i64 %7, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %1
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %7, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.blink::ModuleTreeLinker"*, i32)**
  %23 = load void (%"class.blink::ModuleTreeLinker"*, i32)*, void (%"class.blink::ModuleTreeLinker"*, i32)** %22, align 8
  br label %26

24:                                               ; preds = %1
  %25 = inttoptr i64 %7 to void (%"class.blink::ModuleTreeLinker"*, i32)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.blink::ModuleTreeLinker"*, i32)* [ %23, %17 ], [ %25, %24 ]
  %28 = load i32, i32* %5, align 4
  tail call void %27(%"class.blink::ModuleTreeLinker"* %14, i32 %28) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink16ModuleTreeLinkerEFvNS3_5StateEEJNS2_10PersistentIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #9
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !5

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #9
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair.513"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEES6_NS_17IdentityExtractorENS_8PairHashIS4_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SB_SC_EERKS6_S6_EENS_18HashTableAddResultISD_S6_EEOT0_OT1_(%"class.WTF::HashTable.510"*, %"struct.std::__1::pair.513"* dereferenceable(120), %"struct.std::__1::pair.513"* dereferenceable(120)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca %"struct.std::__1::pair.513", align 8
  %6 = alloca %"class.blink::KURL", align 8
  %7 = alloca %"struct.std::__1::pair.513", align 8
  %8 = getelementptr inbounds %"class.WTF::HashTable.510", %"class.WTF::HashTable.510"* %0, i64 0, i32 0
  %9 = load %"struct.std::__1::pair.513"*, %"struct.std::__1::pair.513"** %8, align 8
  %10 = icmp eq %"struct.std::__1::pair.513"* %9, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %3
  %12 = tail call %"struct.std::__1::pair.513"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEES6_NS_17IdentityExtractorENS_8PairHashIS4_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.510"* %0, %"struct.std::__1::pair.513"* null)
  %13 = load %"struct.std::__1::pair.513"*, %"struct.std::__1::pair.513"** %8, align 8
  br label %14

14:                                               ; preds = %3, %11
  %15 = phi %"struct.std::__1::pair.513"* [ %9, %3 ], [ %13, %11 ]
  %16 = getelementptr inbounds %"class.WTF::HashTable.510", %"class.WTF::HashTable.510"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = add i32 %17, -1
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %1, i64 0, i32 0, i32 4, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = lshr i32 %23, 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %14
  %27 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %21) #9
  br label %28

28:                                               ; preds = %14, %26
  %29 = phi i32 [ %27, %26 ], [ %24, %14 ]
  %30 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %1, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = shl i32 %31, 15
  %33 = xor i32 %32, -1
  %34 = add i32 %31, %33
  %35 = lshr i32 %34, 10
  %36 = xor i32 %35, %34
  %37 = mul i32 %36, 9
  %38 = lshr i32 %37, 6
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 11
  %41 = xor i32 %40, -1
  %42 = add i32 %39, %41
  %43 = lshr i32 %42, 16
  %44 = xor i32 %43, %42
  %45 = zext i32 %29 to i64
  %46 = mul i64 %45, 5146158508761418231
  %47 = zext i32 %44 to i64
  %48 = mul i64 %47, -682818954288075998
  %49 = add i64 %48, %46
  %50 = lshr i64 %49, 32
  %51 = trunc i64 %50 to i32
  %52 = and i32 %18, %51
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %7, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  %56 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %7, i64 0, i32 0
  %57 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %7, i64 0, i32 1
  %58 = xor i32 %51, -1
  %59 = lshr i64 %49, 55
  %60 = trunc i64 %59 to i32
  %61 = add i32 %60, %58
  %62 = shl i32 %61, 12
  %63 = xor i32 %62, %61
  %64 = lshr i32 %63, 7
  %65 = xor i32 %64, %63
  %66 = shl i32 %65, 2
  %67 = xor i32 %66, %65
  %68 = lshr i32 %67, 20
  %69 = xor i32 %68, %67
  %70 = or i32 %69, 1
  %71 = zext i32 %70 to i64
  br label %72

72:                                               ; preds = %99, %28
  %73 = phi i64 [ 0, %28 ], [ %102, %99 ]
  %74 = phi i64 [ %53, %28 ], [ %104, %99 ]
  %75 = phi %"struct.std::__1::pair.513"* [ null, %28 ], [ %100, %99 ]
  %76 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %15, i64 %74
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %54) #9
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %55) #9, !noalias !40
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %6) #9, !noalias !40
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %56, %"class.blink::KURL"* nonnull dereferenceable(112) %6) #9
  store i32 -128, i32* %57, align 8, !alias.scope !43
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %55) #9, !noalias !40
  %77 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %76, i64 0, i32 0
  %78 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %77, %"class.blink::KURL"* nonnull dereferenceable(112) %56) #9
  br i1 %78, label %80, label %79

79:                                               ; preds = %72
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %56) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %54) #9
  br label %85

80:                                               ; preds = %72
  %81 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %15, i64 %74, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = load i32, i32* %57, align 8
  %84 = icmp eq i32 %82, %83
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %56) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %54) #9
  br i1 %84, label %105, label %85

85:                                               ; preds = %79, %80
  %86 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %15, i64 %74, i32 0, i32 4
  %87 = bitcast %"class.WTF::String"* %86 to i8**
  %88 = load i8*, i8** %87, align 8
  %89 = icmp eq i8* %88, inttoptr (i64 -1 to i8*)
  br i1 %89, label %99, label %90

90:                                               ; preds = %85
  %91 = bitcast i8* %88 to %"class.WTF::StringImpl"*
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %93 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"* %92) #9
  br i1 %93, label %94, label %99

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %15, i64 %74, i32 1
  %96 = load i32, i32* %95, align 8
  %97 = load i32, i32* %30, align 8
  %98 = icmp eq i32 %96, %97
  br i1 %98, label %142, label %99

99:                                               ; preds = %85, %90, %94
  %100 = phi %"struct.std::__1::pair.513"* [ %75, %94 ], [ %76, %85 ], [ %75, %90 ]
  %101 = icmp eq i64 %73, 0
  %102 = select i1 %101, i64 %71, i64 %73
  %103 = add i64 %102, %74
  %104 = and i64 %103, %19
  br label %72

105:                                              ; preds = %80
  %106 = icmp eq %"struct.std::__1::pair.513"* %75, null
  br i1 %106, label %123, label %107

107:                                              ; preds = %105
  %108 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %75, i64 0, i32 0, i32 0
  %109 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %5, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %109) #9
  %110 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %110) #9, !noalias !46
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %4) #9, !noalias !46
  %111 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %5, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %111, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #9
  %112 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %5, i64 0, i32 1
  store i32 -128, i32* %112, align 8, !alias.scope !49
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %110) #9, !noalias !46
  %113 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %75, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %113, %"class.blink::KURL"* nonnull dereferenceable(112) %111) #9
  %114 = getelementptr inbounds i8, i8* %108, i64 112
  %115 = bitcast i8* %114 to i32*
  %116 = load i32, i32* %112, align 8
  store i32 %116, i32* %115, align 8
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %111) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %109) #9
  %117 = getelementptr inbounds %"class.WTF::HashTable.510", %"class.WTF::HashTable.510"* %0, i64 0, i32 3
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, 2147483647
  %120 = and i32 %119, 2147483647
  %121 = and i32 %118, -2147483648
  %122 = or i32 %120, %121
  store i32 %122, i32* %117, align 8
  br label %123

123:                                              ; preds = %105, %107
  %124 = phi %"struct.std::__1::pair.513"* [ %75, %107 ], [ %76, %105 ]
  %125 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %2, i64 0, i32 0
  %126 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %124, i64 0, i32 0
  %127 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %126, %"class.blink::KURL"* dereferenceable(112) %125) #9
  %128 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %2, i64 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %124, i64 0, i32 1
  store i32 %129, i32* %130, align 8
  %131 = getelementptr inbounds %"class.WTF::HashTable.510", %"class.WTF::HashTable.510"* %0, i64 0, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = add i32 %132, 1
  store i32 %133, i32* %131, align 4
  %134 = getelementptr inbounds %"class.WTF::HashTable.510", %"class.WTF::HashTable.510"* %0, i64 0, i32 3
  %135 = load i32, i32* %134, align 8
  %136 = add i32 %135, %133
  %137 = shl i32 %136, 1
  %138 = load i32, i32* %16, align 8
  %139 = icmp ult i32 %137, %138
  br i1 %139, label %142, label %140

140:                                              ; preds = %123
  %141 = call %"struct.std::__1::pair.513"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEES6_NS_17IdentityExtractorENS_8PairHashIS4_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.510"* %0, %"struct.std::__1::pair.513"* %124)
  br label %142

142:                                              ; preds = %94, %123, %140
  %143 = phi i8 [ 1, %123 ], [ 1, %140 ], [ 0, %94 ]
  %144 = phi %"struct.std::__1::pair.513"* [ %124, %123 ], [ %141, %140 ], [ %76, %94 ]
  %145 = insertvalue { %"struct.std::__1::pair.513"*, i8 } undef, %"struct.std::__1::pair.513"* %144, 0
  %146 = insertvalue { %"struct.std::__1::pair.513"*, i8 } %145, i8 %143, 1
  ret { %"struct.std::__1::pair.513"*, i8 } %146
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.513"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEES6_NS_17IdentityExtractorENS_8PairHashIS4_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.510"*, %"struct.std::__1::pair.513"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.510", %"class.WTF::HashTable.510"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.510", %"class.WTF::HashTable.510"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = call %"struct.std::__1::pair.513"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEES6_NS_17IdentityExtractorENS_8PairHashIS4_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE13AllocateTableEj(i32 %32) #9
  %34 = call %"struct.std::__1::pair.513"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEES6_NS_17IdentityExtractorENS_8PairHashIS4_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_(%"class.WTF::HashTable.510"* %0, %"struct.std::__1::pair.513"* %33, i32 %32, %"struct.std::__1::pair.513"* %1) #9
  ret %"struct.std::__1::pair.513"* %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.513"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEES6_NS_17IdentityExtractorENS_8PairHashIS4_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE13AllocateTableEj(i32) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = alloca %"struct.std::__1::pair.513", align 8
  %4 = zext i32 %0 to i64
  %5 = mul nuw nsw i64 %4, 120
  %6 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %5, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEEEEPKcv, i64 0, i64 0)) #9
  %7 = bitcast i8* %6 to %"struct.std::__1::pair.513"*
  %8 = icmp eq i32 %0, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %3, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %3, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %3, i64 0, i32 1
  br label %15

14:                                               ; preds = %15, %1
  ret %"struct.std::__1::pair.513"* %7

15:                                               ; preds = %15, %9
  %16 = phi i64 [ 0, %9 ], [ %23, %15 ]
  %17 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %7, i64 %16
  %18 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %17, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %10) #9
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %11) #9, !noalias !52
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %2) #9, !noalias !52
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %12, %"class.blink::KURL"* nonnull dereferenceable(112) %2) #9
  store i32 -128, i32* %13, align 8, !alias.scope !55
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %11) #9, !noalias !52
  %19 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %17, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %19, %"class.blink::KURL"* nonnull dereferenceable(112) %12) #9
  %20 = getelementptr inbounds i8, i8* %18, i64 112
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %13, align 8
  store i32 %22, i32* %21, align 8
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %10) #9
  %23 = add nuw nsw i64 %16, 1
  %24 = icmp eq i64 %23, %4
  br i1 %24, label %14, label %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.513"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEES6_NS_17IdentityExtractorENS_8PairHashIS4_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_(%"class.WTF::HashTable.510"*, %"struct.std::__1::pair.513"*, i32, %"struct.std::__1::pair.513"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.510", align 8
  %6 = bitcast %"class.WTF::HashTable.510"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::HashTable.510", %"class.WTF::HashTable.510"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.510", %"class.WTF::HashTable.510"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.510", %"class.WTF::HashTable.510"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.510", %"class.WTF::HashTable.510"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.510"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.std::__1::pair.513"* %1, %"struct.std::__1::pair.513"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.510", %"class.WTF::HashTable.510"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.510", %"class.WTF::HashTable.510"* %0, i64 0, i32 0
  br i1 %14, label %16, label %52

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.std::__1::pair.513"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.510"* %5 to i64*
  br label %22

19:                                               ; preds = %73
  %20 = bitcast %"class.WTF::HashTable.510"* %5 to i64*
  %21 = load i64, i64* %20, align 8
  br label %22

22:                                               ; preds = %16, %19
  %23 = phi i64* [ %18, %16 ], [ %20, %19 ]
  %24 = phi i64 [ %17, %16 ], [ %21, %19 ]
  %25 = phi %"struct.std::__1::pair.513"* [ null, %16 ], [ %74, %19 ]
  %26 = phi i32 [ 0, %16 ], [ %75, %19 ]
  %27 = bitcast %"class.WTF::HashTable.510"* %0 to i64*
  %28 = load i64, i64* %27, align 8
  store atomic i64 %24, i64* %27 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %28, i64* %23, align 8
  store i32 %26, i32* %8, align 8
  %29 = inttoptr i64 %28 to %"struct.std::__1::pair.513"*
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %48, label %31

31:                                               ; preds = %22
  %32 = icmp eq i32 %26, 0
  br i1 %32, label %46, label %33

33:                                               ; preds = %31
  %34 = zext i32 %26 to i64
  br label %35

35:                                               ; preds = %43, %33
  %36 = phi i64 [ 0, %33 ], [ %44, %43 ]
  %37 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %29, i64 %36, i32 0, i32 4
  %38 = bitcast %"class.WTF::String"* %37 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, inttoptr (i64 -1 to i8*)
  br i1 %40, label %43, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %29, i64 %36, i32 0
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %42) #9
  br label %43

43:                                               ; preds = %41, %35
  %44 = add nuw nsw i64 %36, 1
  %45 = icmp eq i64 %44, %34
  br i1 %45, label %46, label %35

46:                                               ; preds = %43, %31
  %47 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %29, i64 0, i32 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %47) #9
  store atomic i64 0, i64* %23 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %48

48:                                               ; preds = %22, %46
  %49 = getelementptr inbounds %"class.WTF::HashTable.510", %"class.WTF::HashTable.510"* %0, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = and i32 %50, -2147483648
  store i32 %51, i32* %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret %"struct.std::__1::pair.513"* %25

52:                                               ; preds = %4, %73
  %53 = phi %"struct.std::__1::pair.513"* [ %74, %73 ], [ null, %4 ]
  %54 = phi i32 [ %75, %73 ], [ 0, %4 ]
  %55 = load %"struct.std::__1::pair.513"*, %"struct.std::__1::pair.513"** %15, align 8
  %56 = zext i32 %54 to i64
  %57 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %55, i64 %56
  %58 = call zeroext i1 @_ZN3WTF15HashTableHelperINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_17IdentityExtractorENS_10HashTraitsIS6_EEE28IsEmptyOrDeletedBucketForKeyERKS6_(%"struct.std::__1::pair.513"* dereferenceable(120) %57) #9
  br i1 %58, label %73, label %59

59:                                               ; preds = %52
  %60 = load %"struct.std::__1::pair.513"*, %"struct.std::__1::pair.513"** %15, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %60, i64 %56
  %62 = call { %"struct.std::__1::pair.513"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEES6_NS_17IdentityExtractorENS_8PairHashIS4_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EENS2_IPS6_bEERKT0_(%"class.WTF::HashTable.510"* nonnull %5, %"struct.std::__1::pair.513"* dereferenceable(120) %61) #9
  %63 = extractvalue { %"struct.std::__1::pair.513"*, i8 } %62, 0
  %64 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %63, i64 0, i32 0
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %64) #9
  %65 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %61, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %64, %"class.blink::KURL"* dereferenceable(112) %65) #9
  %66 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %63, i64 0, i32 1
  %67 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %60, i64 %56, i32 1
  %68 = load i32, i32* %67, align 8
  store i32 %68, i32* %66, align 8
  %69 = load %"struct.std::__1::pair.513"*, %"struct.std::__1::pair.513"** %15, align 8
  %70 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %69, i64 %56
  %71 = icmp eq %"struct.std::__1::pair.513"* %70, %3
  %72 = select i1 %71, %"struct.std::__1::pair.513"* %63, %"struct.std::__1::pair.513"* %53
  br label %73

73:                                               ; preds = %52, %59
  %74 = phi %"struct.std::__1::pair.513"* [ %53, %52 ], [ %72, %59 ]
  %75 = add i32 %54, 1
  %76 = load i32, i32* %12, align 8
  %77 = icmp eq i32 %75, %76
  br i1 %77, label %19, label %52
}

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF15HashTableHelperINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_17IdentityExtractorENS_10HashTraitsIS6_EEE28IsEmptyOrDeletedBucketForKeyERKS6_(%"struct.std::__1::pair.513"* dereferenceable(120)) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = alloca %"struct.std::__1::pair.513", align 8
  %4 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %3, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %5) #9, !noalias !58
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %2) #9, !noalias !58
  %6 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %3, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %6, %"class.blink::KURL"* nonnull dereferenceable(112) %2) #9
  %7 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %3, i64 0, i32 1
  store i32 -128, i32* %7, align 8, !alias.scope !61
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %5) #9, !noalias !58
  %8 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %0, i64 0, i32 0
  %9 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %8, %"class.blink::KURL"* nonnull dereferenceable(112) %6) #9
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %4) #9
  br label %16

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load i32, i32* %7, align 8
  %15 = icmp eq i32 %13, %14
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %4) #9
  br i1 %15, label %21, label %16

16:                                               ; preds = %10, %11
  %17 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %0, i64 0, i32 0, i32 4
  %18 = bitcast %"class.WTF::String"* %17 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, inttoptr (i64 -1 to i8*)
  br label %21

21:                                               ; preds = %16, %11
  %22 = phi i1 [ true, %11 ], [ %20, %16 ]
  ret i1 %22
}

declare zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair.513"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEES6_NS_17IdentityExtractorENS_8PairHashIS4_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EENS2_IPS6_bEERKT0_(%"class.WTF::HashTable.510"*, %"struct.std::__1::pair.513"* dereferenceable(120)) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"struct.std::__1::pair.513", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.510", %"class.WTF::HashTable.510"* %0, i64 0, i32 0
  %6 = load %"struct.std::__1::pair.513"*, %"struct.std::__1::pair.513"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.510", %"class.WTF::HashTable.510"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %1, i64 0, i32 0, i32 4, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #9
  br label %19

19:                                               ; preds = %2, %17
  %20 = phi i32 [ %18, %17 ], [ %15, %2 ]
  %21 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %1, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = shl i32 %22, 15
  %24 = xor i32 %23, -1
  %25 = add i32 %22, %24
  %26 = lshr i32 %25, 10
  %27 = xor i32 %26, %25
  %28 = mul i32 %27, 9
  %29 = lshr i32 %28, 6
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 11
  %32 = xor i32 %31, -1
  %33 = add i32 %30, %32
  %34 = lshr i32 %33, 16
  %35 = xor i32 %34, %33
  %36 = zext i32 %20 to i64
  %37 = mul i64 %36, 5146158508761418231
  %38 = zext i32 %35 to i64
  %39 = mul i64 %38, -682818954288075998
  %40 = add i64 %39, %37
  %41 = lshr i64 %40, 32
  %42 = trunc i64 %41 to i32
  %43 = and i32 %9, %42
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %4, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  %47 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %4, i64 0, i32 0
  %48 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %4, i64 0, i32 1
  %49 = xor i32 %42, -1
  %50 = lshr i64 %40, 55
  %51 = trunc i64 %50 to i32
  %52 = add i32 %51, %49
  %53 = shl i32 %52, 12
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 7
  %56 = xor i32 %55, %54
  %57 = shl i32 %56, 2
  %58 = xor i32 %57, %56
  %59 = lshr i32 %58, 20
  %60 = xor i32 %59, %58
  %61 = or i32 %60, 1
  %62 = zext i32 %61 to i64
  br label %63

63:                                               ; preds = %93, %19
  %64 = phi %"struct.std::__1::pair.513"* [ null, %19 ], [ %94, %93 ]
  %65 = phi i64 [ 0, %19 ], [ %96, %93 ]
  %66 = phi i64 [ %44, %19 ], [ %98, %93 ]
  %67 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %6, i64 %66
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %45) #9
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %46) #9, !noalias !64
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %3) #9, !noalias !64
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %47, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #9
  store i32 -128, i32* %48, align 8, !alias.scope !67
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %46) #9, !noalias !64
  %68 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %67, i64 0, i32 0
  %69 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %68, %"class.blink::KURL"* nonnull dereferenceable(112) %47) #9
  br i1 %69, label %71, label %70

70:                                               ; preds = %63
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %47) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %45) #9
  br label %79

71:                                               ; preds = %63
  %72 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %6, i64 %66, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = load i32, i32* %48, align 8
  %75 = icmp eq i32 %73, %74
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %47) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %45) #9
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = icmp eq %"struct.std::__1::pair.513"* %64, null
  %78 = select i1 %77, %"struct.std::__1::pair.513"* %67, %"struct.std::__1::pair.513"* %64
  br label %99

79:                                               ; preds = %70, %71
  %80 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %6, i64 %66, i32 0, i32 4
  %81 = bitcast %"class.WTF::String"* %80 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, inttoptr (i64 -1 to i8*)
  br i1 %83, label %93, label %84

84:                                               ; preds = %79
  %85 = bitcast i8* %82 to %"class.WTF::StringImpl"*
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %87 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %85, %"class.WTF::StringImpl"* %86) #9
  br i1 %87, label %88, label %93

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %6, i64 %66, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = load i32, i32* %21, align 8
  %92 = icmp eq i32 %90, %91
  br i1 %92, label %99, label %93

93:                                               ; preds = %79, %84, %88
  %94 = phi %"struct.std::__1::pair.513"* [ %64, %84 ], [ %64, %88 ], [ %67, %79 ]
  %95 = icmp eq i64 %65, 0
  %96 = select i1 %95, i64 %62, i64 %65
  %97 = add i64 %96, %66
  %98 = and i64 %97, %10
  br label %63

99:                                               ; preds = %88, %76
  %100 = phi %"struct.std::__1::pair.513"* [ %78, %76 ], [ %67, %88 ]
  %101 = phi i8 [ 0, %76 ], [ 1, %88 ]
  %102 = insertvalue { %"struct.std::__1::pair.513"*, i8 } undef, %"struct.std::__1::pair.513"* %100, 0
  %103 = insertvalue { %"struct.std::__1::pair.513"*, i8 } %102, i8 %101, 1
  ret { %"struct.std::__1::pair.513"*, i8 } %103
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12ModuleScriptELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::ModuleScript"**
  %5 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #9
  %7 = icmp eq %"class.blink::ModuleScript"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::ModuleScript"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12ModuleScriptEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #9
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink16ModuleTreeLinkerEFvPKNS3_12ModuleScriptEEJNS3_10PersistentIS4_EENSA_IS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::ModuleTreeLinker"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::ModuleTreeLinker"*, %"class.blink::ModuleScript"*)**
  %21 = load void (%"class.blink::ModuleTreeLinker"*, %"class.blink::ModuleScript"*)*, void (%"class.blink::ModuleTreeLinker"*, %"class.blink::ModuleScript"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::ModuleTreeLinker"*, %"class.blink::ModuleScript"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::ModuleTreeLinker"*, %"class.blink::ModuleScript"*)* [ %21, %15 ], [ %23, %22 ]
  %26 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %27 = bitcast void (%"class.base::internal::BindStateBase"*)** %26 to %"class.blink::ModuleScript"**
  %28 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %27, align 8
  tail call void %25(%"class.blink::ModuleTreeLinker"* %12, %"class.blink::ModuleScript"* %28) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink16ModuleTreeLinkerEFvPKNS2_12ModuleScriptEEJNS2_10PersistentIS3_EENS9_IS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"struct.std::__1::__tuple_impl.694"*
  tail call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_16ModuleTreeLinkerEEENS4_INS3_12ModuleScriptEEEEED2Ev(%"struct.std::__1::__tuple_impl.694"* %5) #9
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_16ModuleTreeLinkerEEENS4_INS3_12ModuleScriptEEEEED2Ev(%"struct.std::__1::__tuple_impl.694"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__tuple_impl.694", %"struct.std::__1::__tuple_impl.694"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #9
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !5

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #9
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"struct.std::__1::__tuple_impl.694", %"struct.std::__1::__tuple_impl.694"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %47, label %28

28:                                               ; preds = %24
  %29 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %30 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %29, i64 0, i32 1
  %31 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %30) #9
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %35, !prof !5

33:                                               ; preds = %28
  %34 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %30, i8* %34) #9
  br label %35

35:                                               ; preds = %33, %28
  %36 = phi i8* [ %34, %33 ], [ %31, %28 ]
  %37 = bitcast i8* %36 to %"class.blink::ThreadState"**
  %38 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %39, align 8
  %41 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %42 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %40, i64 0, i32 0, i32 0
  %43 = bitcast %"class.blink::PersistentRegion"* %40 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.blink::PersistentNode"* %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %41, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %46, align 8
  store %"class.blink::PersistentNode"* %41, %"class.blink::PersistentNode"** %42, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %25, align 8
  br label %47

47:                                               ; preds = %24, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_16ModuleTreeLinkerEEENS4_INS3_12ModuleScriptEEEEEC2IJLm0ELm1EEJS6_S8_EJEJEJS6_S8_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSC_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl.694"*, %"class.blink::Persistent.532"* dereferenceable(16), %"class.blink::Persistent.534"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__tuple_impl.694", %"struct.std::__1::__tuple_impl.694"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::Persistent.532"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"struct.std::__1::__tuple_impl.694"* %0 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__tuple_impl.694", %"struct.std::__1::__tuple_impl.694"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %8, align 8
  switch i64 %6, label %9 [
    i64 0, label %35
    i64 -1, label %35
  ]

9:                                                ; preds = %3
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #9
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !5

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #9
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %24 = icmp eq %"class.blink::PersistentNode"* %23, null
  br i1 %24, label %25, label %28, !prof !5

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %26) #9
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi %"class.blink::PersistentNode"* [ %27, %25 ], [ %23, %16 ]
  %30 = bitcast %"class.blink::PersistentNode"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %"class.blink::PersistentNode"* %29 to %"class.blink::PersistentBase.533"**
  store %"class.blink::PersistentBase.533"* %4, %"class.blink::PersistentBase.533"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_16ModuleTreeLinkerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %8, align 8
  br label %35

35:                                               ; preds = %3, %3, %28
  %36 = getelementptr inbounds %"struct.std::__1::__tuple_impl.694", %"struct.std::__1::__tuple_impl.694"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"class.std::__1::__tuple_leaf.695", %"class.std::__1::__tuple_leaf.695"* %36, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::Persistent.534"* %2 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::__tuple_leaf.695"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__tuple_impl.694", %"struct.std::__1::__tuple_impl.694"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %41, align 8
  switch i64 %39, label %42 [
    i64 0, label %68
    i64 -1, label %68
  ]

42:                                               ; preds = %35
  %43 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %44 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %43, i64 0, i32 1
  %45 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %44) #9
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %49, !prof !5

47:                                               ; preds = %42
  %48 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %44, i8* %48) #9
  br label %49

49:                                               ; preds = %47, %42
  %50 = phi i8* [ %48, %47 ], [ %45, %42 ]
  %51 = bitcast i8* %50 to %"class.blink::ThreadState"**
  %52 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %54, i64 0, i32 0, i32 0
  %56 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %55, align 8
  %57 = icmp eq %"class.blink::PersistentNode"* %56, null
  br i1 %57, label %58, label %61, !prof !5

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %54, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %59) #9
  %60 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %55, align 8
  br label %61

61:                                               ; preds = %58, %49
  %62 = phi %"class.blink::PersistentNode"* [ %60, %58 ], [ %56, %49 ]
  %63 = bitcast %"class.blink::PersistentNode"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::PersistentRegion"* %54 to i64*
  store i64 %64, i64* %65, align 8
  %66 = bitcast %"class.blink::PersistentNode"* %62 to %"class.blink::PersistentBase.535"**
  store %"class.blink::PersistentBase.535"* %37, %"class.blink::PersistentBase.535"** %66, align 8
  %67 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %62, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12ModuleScriptELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  store %"class.blink::PersistentNode"* %62, %"class.blink::PersistentNode"** %41, align 8
  br label %68

68:                                               ; preds = %35, %35, %61
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.513"* @_ZNK3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEES6_NS_17IdentityExtractorENS_8PairHashIS4_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EEPKS6_RKT0_(%"class.WTF::HashTable.510"*, %"struct.std::__1::pair.513"* dereferenceable(120)) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"struct.std::__1::pair.513", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.510", %"class.WTF::HashTable.510"* %0, i64 0, i32 0
  %6 = load %"struct.std::__1::pair.513"*, %"struct.std::__1::pair.513"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.513"* %6, null
  br i1 %7, label %96, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashTable.510", %"class.WTF::HashTable.510"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %1, i64 0, i32 0, i32 4, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = lshr i32 %16, 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %8
  %20 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %14) #9
  br label %21

21:                                               ; preds = %8, %19
  %22 = phi i32 [ %20, %19 ], [ %17, %8 ]
  %23 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %1, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = shl i32 %24, 15
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 10
  %29 = xor i32 %28, %27
  %30 = mul i32 %29, 9
  %31 = lshr i32 %30, 6
  %32 = xor i32 %31, %30
  %33 = shl i32 %32, 11
  %34 = xor i32 %33, -1
  %35 = add i32 %32, %34
  %36 = lshr i32 %35, 16
  %37 = xor i32 %36, %35
  %38 = zext i32 %22 to i64
  %39 = mul i64 %38, 5146158508761418231
  %40 = zext i32 %37 to i64
  %41 = mul i64 %40, -682818954288075998
  %42 = add i64 %41, %39
  %43 = lshr i64 %42, 32
  %44 = trunc i64 %43 to i32
  %45 = and i32 %11, %44
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %4, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  %49 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %4, i64 0, i32 0
  %50 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %4, i64 0, i32 1
  %51 = xor i32 %44, -1
  %52 = lshr i64 %42, 55
  %53 = trunc i64 %52 to i32
  %54 = add i32 %53, %51
  %55 = shl i32 %54, 12
  %56 = xor i32 %55, %54
  %57 = lshr i32 %56, 7
  %58 = xor i32 %57, %56
  %59 = shl i32 %58, 2
  %60 = xor i32 %59, %58
  %61 = lshr i32 %60, 20
  %62 = xor i32 %61, %60
  %63 = or i32 %62, 1
  %64 = zext i32 %63 to i64
  br label %65

65:                                               ; preds = %91, %21
  %66 = phi i64 [ 0, %21 ], [ %93, %91 ]
  %67 = phi i64 [ %46, %21 ], [ %95, %91 ]
  %68 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %6, i64 %67
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %47) #9
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %48) #9, !noalias !70
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %3) #9, !noalias !70
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %49, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #9
  store i32 -128, i32* %50, align 8, !alias.scope !73
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %48) #9, !noalias !70
  %69 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %68, i64 0, i32 0
  %70 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %69, %"class.blink::KURL"* nonnull dereferenceable(112) %49) #9
  br i1 %70, label %72, label %71

71:                                               ; preds = %65
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %49) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %47) #9
  br label %77

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %6, i64 %67, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = load i32, i32* %50, align 8
  %76 = icmp eq i32 %74, %75
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %49) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %47) #9
  br i1 %76, label %96, label %77

77:                                               ; preds = %71, %72
  %78 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %6, i64 %67, i32 0, i32 4
  %79 = bitcast %"class.WTF::String"* %78 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = icmp eq i8* %80, inttoptr (i64 -1 to i8*)
  br i1 %81, label %91, label %82

82:                                               ; preds = %77
  %83 = bitcast i8* %80 to %"class.WTF::StringImpl"*
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %85 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"* %84) #9
  br i1 %85, label %86, label %91

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"struct.std::__1::pair.513", %"struct.std::__1::pair.513"* %6, i64 %67, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = load i32, i32* %23, align 8
  %90 = icmp eq i32 %88, %89
  br i1 %90, label %96, label %91

91:                                               ; preds = %82, %77, %86
  %92 = icmp eq i64 %66, 0
  %93 = select i1 %92, i64 %64, i64 %66
  %94 = add i64 %93, %67
  %95 = and i64 %94, %12
  br label %65

96:                                               ; preds = %86, %72, %2
  %97 = phi %"struct.std::__1::pair.513"* [ null, %2 ], [ null, %72 ], [ %68, %86 ]
  ret %"struct.std::__1::pair.513"* %97
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_123ModuleScriptFetchTargetENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.593"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = zext i32 %1 to i64
  %7 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = icmp ugt i32 %1, 16760832
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  store i8* null, i8** %8, align 8
  br label %21

12:                                               ; preds = %2
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %6) #9
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16760832) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.28, i64 0, i64 0), i8* %13, i8* %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  store i8* %16, i8** %8, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.29, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %4) #9
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  br label %21

21:                                               ; preds = %11, %12, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  %22 = shl nuw nsw i64 %6, 7
  %23 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %22) #9
  %24 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %23, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12_GLOBAL__N_123ModuleScriptFetchTargetEEEPKcv, i64 0, i64 0)) #9
  %25 = bitcast %"class.WTF::VectorBufferBase.593"* %0 to i64*
  %26 = ptrtoint i8* %24 to i64
  store atomic i64 %26, i64* %25 monotonic, align 8
  %27 = lshr i64 %23, 7
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds %"class.WTF::VectorBufferBase.593", %"class.WTF::VectorBufferBase.593"* %0, i64 0, i32 1
  store i32 %28, i32* %29, align 8
  ret void
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.612"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS4_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.610"*, %"class.blink::ModuleScript"** dereferenceable(8), %"class.blink::ModuleScript"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.610", %"class.WTF::HashTable.610"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.612"*, %"class.blink::Member.612"** %4, align 8
  %6 = icmp eq %"class.blink::Member.612"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.612"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.610"* %0, %"class.blink::Member.612"* null)
  %9 = load %"class.blink::Member.612"*, %"class.blink::Member.612"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.612"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.610", %"class.WTF::HashTable.610"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::ModuleScript"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.612", %"class.blink::Member.612"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.612", %"class.blink::Member.612"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %40, align 8
  %42 = icmp eq %"class.blink::ModuleScript"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::ModuleScript"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::ModuleScript"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.612"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.612"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::ModuleScript"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::ModuleScript"* %59, inttoptr (i64 -1 to %"class.blink::ModuleScript"*)
  %67 = select i1 %66, %"class.blink::Member.612"* %60, %"class.blink::Member.612"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.612", %"class.blink::Member.612"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.612", %"class.blink::Member.612"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %73, align 8
  %75 = icmp eq %"class.blink::ModuleScript"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.612"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.612"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #9
  %80 = getelementptr inbounds %"class.WTF::HashTable.610", %"class.WTF::HashTable.610"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.612"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %2, align 8
  %89 = ptrtoint %"class.blink::ModuleScript"* %88 to i64
  %90 = bitcast %"class.blink::Member.612"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::ModuleScript"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #9
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.612"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #9
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.610", %"class.WTF::HashTable.610"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.610", %"class.WTF::HashTable.610"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.612"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.610"* %0, %"class.blink::Member.612"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.612"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.612"*, i8 } undef, %"class.blink::Member.612"* %117, 0
  %119 = insertvalue { %"class.blink::Member.612"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.612"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.612"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.610"*, %"class.blink::Member.612"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.610", %"class.WTF::HashTable.610"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.610", %"class.WTF::HashTable.610"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #9
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %23, i8* %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #9
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.612"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb(%"class.WTF::HashTable.610"* %0, i32 %35, %"class.blink::Member.612"* %1, i8* nonnull dereferenceable(1) %4) #9
  %37 = load i8, i8* %4, align 1, !range !36
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #9
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member.612"*
  %44 = call %"class.blink::Member.612"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.610"* %0, %"class.blink::Member.612"* %43, i32 %40, %"class.blink::Member.612"* %1) #9
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.612"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.612"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.612"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb(%"class.WTF::HashTable.610"*, i32, %"class.blink::Member.612"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #9
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !5

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #9
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !36
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.27, i64 0, i64 0)) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.610", %"class.WTF::HashTable.610"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.612"*, %"class.blink::Member.612"** %31, align 8
  %33 = icmp eq %"class.blink::Member.612"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.612"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #9
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.610", %"class.WTF::HashTable.610"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.612"*, %"class.blink::Member.612"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #9
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member.612"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.612"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.612"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.612"*, %"class.blink::Member.612"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.612", %"class.blink::Member.612"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.612"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.612", %"class.blink::Member.612"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.612"* %61, %"class.blink::Member.612"* %55
  %63 = bitcast %"class.blink::Member.612"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.612"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.612"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.610"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #9
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.612"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.612"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.610"* %0, %"class.blink::Member.612"* %42, i32 %1, %"class.blink::Member.612"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.612"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.612"*, %"class.blink::Member.612"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.612", %"class.blink::Member.612"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.612"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.612", %"class.blink::Member.612"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.612"* %87, %"class.blink::Member.612"* %82
  %89 = bitcast %"class.blink::Member.612"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.612"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.612"*, %"class.blink::Member.612"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.612", %"class.blink::Member.612"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.612"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.612", %"class.blink::Member.612"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.612"* %99, %"class.blink::Member.612"* %88
  %101 = bitcast %"class.blink::Member.612"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.612"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.612"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.612"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.612"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.610"*, %"class.blink::Member.612"*, i32, %"class.blink::Member.612"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.612"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.610", %"class.WTF::HashTable.610"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.610", %"class.WTF::HashTable.610"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.612"*, %"class.blink::Member.612"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.612"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.612"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #9
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.610", %"class.WTF::HashTable.610"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.612"*, %"class.blink::Member.612"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.610"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.612"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #9
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.612"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.612"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #9
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.610", %"class.WTF::HashTable.610"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.612"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.612"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.612"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.612", %"class.blink::Member.612"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.612"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.612", %"class.blink::Member.612"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.612"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.612", %"class.blink::Member.612"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %70, align 8
  %72 = icmp eq %"class.blink::ModuleScript"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::ModuleScript"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.612"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.612"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.612"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.612"* %93, null
  %95 = ptrtoint %"class.blink::Member.612"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::ModuleScript"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::ModuleScript"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::ModuleScript"* %99, inttoptr (i64 -1 to %"class.blink::ModuleScript"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.612", %"class.blink::Member.612"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.612"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.612", %"class.blink::Member.612"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %113, align 8
  %115 = icmp eq %"class.blink::ModuleScript"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.612"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.612"*, %"class.blink::Member.612"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.612", %"class.blink::Member.612"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.612"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.612"* %118, %"class.blink::Member.612"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.612"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.612"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.31, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([386 x i8], [386 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberIKNS1_12ModuleScriptEEES7_NS_17IdentityExtractorENS_10MemberHashIS6_EENS_10HashTraitsIS7_EESC_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.612"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !5

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #9
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.612", %"class.blink::Member.612"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.612"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12ModuleScriptEE5TraceEPNS_7VisitorEPKv) #9
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12ModuleScriptEE5TraceEPNS_7VisitorEPKv) #9
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink22WrapPersistentInternalINS_16ModuleTreeLinkerEEENS_10PersistentIT_EEPS3_: argument 0"}
!4 = distinct !{!4, !"_ZN5blink22WrapPersistentInternalINS_16ModuleTreeLinkerEEENS_10PersistentIT_EEPS3_"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!7, !9, !11}
!7 = distinct !{!7, !8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink16ModuleTreeLinkerEFvNS4_5StateEEJNS3_10PersistentIS4_EES5_EEEDcOT0_DpOT1_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink16ModuleTreeLinkerEFvNS4_5StateEEJNS3_10PersistentIS4_EES5_EEEDcOT0_DpOT1_"}
!9 = distinct !{!9, !10, !"_ZN4base8BindOnceIMN5blink16ModuleTreeLinkerEFvNS2_5StateEEJNS1_10PersistentIS2_EES3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8BindOnceIMN5blink16ModuleTreeLinkerEFvNS2_5StateEEJNS1_10PersistentIS2_EES3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!11 = distinct !{!11, !12, !"_ZN3WTF4BindIMN5blink16ModuleTreeLinkerEFvNS2_5StateEEJNS1_10PersistentIS2_EES3_EFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!12 = distinct !{!12, !"_ZN3WTF4BindIMN5blink16ModuleTreeLinkerEFvNS2_5StateEEJNS1_10PersistentIS2_EES3_EFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__19make_pairIRN5blink4KURLERNS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS7_IT0_E4typeEEEOS8_OSB_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__19make_pairIRN5blink4KURLERNS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS7_IT0_E4typeEEEOS8_OSB_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN5blink22WrapPersistentInternalINS_16ModuleTreeLinkerEEENS_10PersistentIT_EEPS3_: argument 0"}
!18 = distinct !{!18, !"_ZN5blink22WrapPersistentInternalINS_16ModuleTreeLinkerEEENS_10PersistentIT_EEPS3_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN5blink22WrapPersistentInternalINS_12ModuleScriptEEENS_10PersistentIT_EEPS3_: argument 0"}
!21 = distinct !{!21, !"_ZN5blink22WrapPersistentInternalINS_12ModuleScriptEEENS_10PersistentIT_EEPS3_"}
!22 = !{!23, !25, !27}
!23 = distinct !{!23, !24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink16ModuleTreeLinkerEFvPKNS3_12ModuleScriptEEJNS3_10PersistentIS4_EENSA_IS5_EEEEEDcOT0_DpOT1_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink16ModuleTreeLinkerEFvPKNS3_12ModuleScriptEEJNS3_10PersistentIS4_EENSA_IS5_EEEEEDcOT0_DpOT1_"}
!25 = distinct !{!25, !26, !"_ZN4base8BindOnceIMN5blink16ModuleTreeLinkerEFvPKNS1_12ModuleScriptEEJNS1_10PersistentIS2_EENS8_IS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8BindOnceIMN5blink16ModuleTreeLinkerEFvPKNS1_12ModuleScriptEEJNS1_10PersistentIS2_EENS8_IS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!27 = distinct !{!27, !28, !"_ZN3WTF4BindIMN5blink16ModuleTreeLinkerEFvPKNS1_12ModuleScriptEEJNS1_10PersistentIS2_EENS8_IS3_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!28 = distinct !{!28, !"_ZN3WTF4BindIMN5blink16ModuleTreeLinkerEFvPKNS1_12ModuleScriptEEJNS1_10PersistentIS2_EENS8_IS3_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNSt3__19make_pairIRN5blink4KURLERNS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS7_IT0_E4typeEEEOS8_OSB_: argument 0"}
!31 = distinct !{!31, !"_ZNSt3__19make_pairIRN5blink4KURLERNS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS7_IT0_E4typeEEEOS8_OSB_"}
!32 = !{!"branch_weights", i32 2000, i32 1}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNSt3__19make_pairIRN5blink4KURLERNS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS7_IT0_E4typeEEEOS8_OSB_: argument 0"}
!35 = distinct !{!35, !"_ZNSt3__19make_pairIRN5blink4KURLERNS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS7_IT0_E4typeEEEOS8_OSB_"}
!36 = !{i8 0, i8 2}
!37 = distinct !{!37, !38}
!38 = !{!"llvm.loop.unroll.disable"}
!39 = distinct !{!39, !38}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv: argument 0"}
!42 = distinct !{!42, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv"}
!43 = !{!44, !41}
!44 = distinct !{!44, !45, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_: argument 0"}
!45 = distinct !{!45, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv: argument 0"}
!48 = distinct !{!48, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv"}
!49 = !{!50, !47}
!50 = distinct !{!50, !51, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_: argument 0"}
!51 = distinct !{!51, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv: argument 0"}
!54 = distinct !{!54, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv"}
!55 = !{!56, !53}
!56 = distinct !{!56, !57, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_: argument 0"}
!57 = distinct !{!57, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv: argument 0"}
!60 = distinct !{!60, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv"}
!61 = !{!62, !59}
!62 = distinct !{!62, !63, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_: argument 0"}
!63 = distinct !{!63, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv: argument 0"}
!66 = distinct !{!66, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv"}
!67 = !{!68, !65}
!68 = distinct !{!68, !69, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_: argument 0"}
!69 = distinct !{!69, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_"}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv: argument 0"}
!72 = distinct !{!72, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv"}
!73 = !{!74, !71}
!74 = distinct !{!74, !75, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_: argument 0"}
!75 = distinct !{!75, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_"}
