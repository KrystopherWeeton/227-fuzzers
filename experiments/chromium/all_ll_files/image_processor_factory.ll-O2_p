; ModuleID = '../../media/gpu/chromeos/image_processor_factory.cc'
source_filename = "../../media/gpu/chromeos/image_processor_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::ImageProcessor" = type { i32 (...)**, %"class.std::__1::unique_ptr.0", %"class.std::__1::map", i32, %class.scoped_refptr.14, %class.scoped_refptr.14, %"class.base::WeakPtr", %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.media::ImageProcessorBackend"* }
%"class.media::ImageProcessorBackend" = type { i32 (...)**, %"struct.media::ImageProcessorBackend::PortConfig", %"struct.media::ImageProcessorBackend::PortConfig", i32, i32, %"class.base::RepeatingCallback", %class.scoped_refptr.14 }
%"struct.media::ImageProcessorBackend::PortConfig" = type { %"class.media::Fourcc", %"class.gfx::Size", %"class.std::__1::vector", %"class.gfx::Rect", %"class.std::__1::vector.6" }
%"class.media::Fourcc" = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"*, %"class.std::__1::__compressed_pair.3" }
%"struct.media::ColorPlaneLayout" = type { i32, i64, i64 }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.media::ColorPlaneLayout"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { i32*, i32*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i32* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { i64 }
%class.scoped_refptr.14 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.25 }
%class.scoped_refptr.25 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.26", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.26" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.27" }
%"struct.std::__1::atomic.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__cxx_atomic_impl.30" }
%"struct.std::__1::__cxx_atomic_impl.30" = type { %"struct.std::__1::__cxx_atomic_base_impl.31" }
%"struct.std::__1::__cxx_atomic_base_impl.31" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { i32*, i32*, %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { i32* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.15" }>
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"class.base::RepeatingCallback.45"*, %"class.base::RepeatingCallback.45"*, %"class.std::__1::__compressed_pair.46" }
%"class.base::RepeatingCallback.45" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.base::RepeatingCallback.45"* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.15", [4 x i8] }>
%"class.std::__1::vector.51" = type opaque
%"class.base::RepeatingCallback.52" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__110unique_ptrIN5media21ImageProcessorBackendENS3_14default_deleteIS6_EEEERKNS6_10PortConfigESC_RKNS3_6vectorINS6_10OutputModeENS3_9allocatorISE_EEEENS5_13VideoRotationENS_17RepeatingCallbackIFvvEEE13scoped_refptrINS_19SequencedTaskRunnerEEEJEEESR_E3RunEPNS0_13BindStateBaseESC_SC_SJ_SK_OSN_OSQ_ = comdat any

$_ZN4base8internal9BindStateIPFNSt3__110unique_ptrIN5media21ImageProcessorBackendENS2_14default_deleteIS5_EEEERKNS5_10PortConfigESB_RKNS2_6vectorINS5_10OutputModeENS2_9allocatorISD_EEEENS4_13VideoRotationENS_17RepeatingCallbackIFvvEEE13scoped_refptrINS_19SequencedTaskRunnerEEEJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16vectorIN4base17RepeatingCallbackIFNS_10unique_ptrIN5media21ImageProcessorBackendENS_14default_deleteIS5_EEEERKNS5_10PortConfigESB_RKNS0_INS5_10OutputModeENS_9allocatorISC_EEEENS4_13VideoRotationENS2_IFvvEEE13scoped_refptrINS1_19SequencedTaskRunnerEEEEENSD_ISP_EEE21__push_back_slow_pathISP_EEvOT_ = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::ImageProcessor"* @_ZN5media21ImageProcessorFactory6CreateERKNS_21ImageProcessorBackend10PortConfigES4_RKNSt3__16vectorINS1_10OutputModeENS5_9allocatorIS7_EEEEmNS_13VideoRotationE13scoped_refptrIN4base19SequencedTaskRunnerEENSF_17RepeatingCallbackIFvvEEE(%"struct.media::ImageProcessorBackend::PortConfig"* dereferenceable(80), %"struct.media::ImageProcessorBackend::PortConfig"* dereferenceable(80), %"class.std::__1::vector.36"* dereferenceable(24), i64, i32, %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::vector.43", align 8
  %9 = alloca %"class.base::RepeatingCallback.45", align 8
  %10 = alloca %"class.base::RepeatingCallback.45", align 8
  %11 = alloca %"class.base::RepeatingCallback", align 8
  %12 = bitcast %"class.std::__1::vector.43"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %8, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #9
  %15 = bitcast %"class.base::RepeatingCallback.45"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  %16 = tail call i8* @_Znwm(i64 48) #10, !noalias !2
  %17 = bitcast i8* %16 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %17, void ()* bitcast (%"class.media::ImageProcessorBackend"* (%"class.base::internal::BindStateBase"*, %"struct.media::ImageProcessorBackend::PortConfig"*, %"struct.media::ImageProcessorBackend::PortConfig"*, %"class.std::__1::vector.36"*, i32, %"class.base::RepeatingCallback"*, %class.scoped_refptr.14*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__110unique_ptrIN5media21ImageProcessorBackendENS3_14default_deleteIS6_EEEERKNS6_10PortConfigESC_RKNS3_6vectorINS6_10OutputModeENS3_9allocatorISE_EEEENS5_13VideoRotationENS_17RepeatingCallbackIFvvEEE13scoped_refptrINS_19SequencedTaskRunnerEEEJEEESR_E3RunEPNS0_13BindStateBaseESC_SC_SJ_SK_OSN_OSQ_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFNSt3__110unique_ptrIN5media21ImageProcessorBackendENS2_14default_deleteIS5_EEEERKNS5_10PortConfigESB_RKNS2_6vectorINS5_10OutputModeENS2_9allocatorISD_EEEENS4_13VideoRotationENS_17RepeatingCallbackIFvvEEE13scoped_refptrINS_19SequencedTaskRunnerEEEJEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !2
  %18 = getelementptr inbounds i8, i8* %16, i64 32
  %19 = bitcast i8* %18 to i64*
  store i64 ptrtoint (%"class.media::ImageProcessorBackend"* (%"struct.media::ImageProcessorBackend::PortConfig"*, %"struct.media::ImageProcessorBackend::PortConfig"*, %"class.std::__1::vector.36"*, i32, %"class.base::RepeatingCallback"*, %"class.base::SequencedTaskRunner"*)* @_ZN5media27LibYUVImageProcessorBackend6CreateERKNS_21ImageProcessorBackend10PortConfigES4_RKNSt3__16vectorINS1_10OutputModeENS5_9allocatorIS7_EEEENS_13VideoRotationEN4base17RepeatingCallbackIFvvEEE13scoped_refptrINSE_19SequencedTaskRunnerEE to i64), i64* %19, align 8, !noalias !2
  %20 = bitcast %"class.base::RepeatingCallback.45"* %9 to i8**
  store i8* %16, i8** %20, align 8, !alias.scope !2
  call void @_ZNSt3__16vectorIN4base17RepeatingCallbackIFNS_10unique_ptrIN5media21ImageProcessorBackendENS_14default_deleteIS5_EEEERKNS5_10PortConfigESB_RKNS0_INS5_10OutputModeENS_9allocatorISC_EEEENS4_13VideoRotationENS2_IFvvEEE13scoped_refptrINS1_19SequencedTaskRunnerEEEEENSD_ISP_EEE21__push_back_slow_pathISP_EEvOT_(%"class.std::__1::vector.43"* nonnull %8, %"class.base::RepeatingCallback.45"* nonnull dereferenceable(8) %9) #9
  %21 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  %22 = load %"class.base::RepeatingCallback.45"*, %"class.base::RepeatingCallback.45"** %13, align 8
  %23 = load %"class.base::RepeatingCallback.45"*, %"class.base::RepeatingCallback.45"** %14, align 8
  %24 = icmp eq %"class.base::RepeatingCallback.45"* %22, %23
  br i1 %24, label %49, label %25

25:                                               ; preds = %7
  %26 = bitcast %"class.base::RepeatingCallback.45"* %10 to i64*
  %27 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %11, i64 0, i32 0
  %28 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0
  %29 = ptrtoint %"class.base::SequencedTaskRunner"* %5 to i64
  %30 = icmp eq %"class.base::SequencedTaskRunner"* %5, null
  %31 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %11, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %10, i64 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %41, %25
  %35 = phi %"class.base::RepeatingCallback.45"* [ %22, %25 ], [ %44, %41 ]
  %36 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %35, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.base::RepeatingCallback.45"* %35 to i64*
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %26, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %36, align 8
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %27, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %28) #9
  br i1 %30, label %41, label %39

39:                                               ; preds = %34
  %40 = atomicrmw add i32* %31, i32 1 monotonic
  br label %41

41:                                               ; preds = %39, %34
  %42 = call %"class.media::ImageProcessor"* @_ZN5media14ImageProcessor6CreateEN4base17RepeatingCallbackIFNSt3__110unique_ptrINS_21ImageProcessorBackendENS3_14default_deleteIS5_EEEERKNS5_10PortConfigESB_RKNS3_6vectorINS5_10OutputModeENS3_9allocatorISD_EEEENS_13VideoRotationENS2_IFvvEEE13scoped_refptrINS1_19SequencedTaskRunnerEEEEESB_SB_SI_SJ_SL_SO_(%"class.base::RepeatingCallback.45"* nonnull %10, %"struct.media::ImageProcessorBackend::PortConfig"* dereferenceable(80) %0, %"struct.media::ImageProcessorBackend::PortConfig"* dereferenceable(80) %1, %"class.std::__1::vector.36"* dereferenceable(24) %2, i32 %4, %"class.base::RepeatingCallback"* nonnull %11, i64 %29) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #9
  %43 = icmp ne %"class.media::ImageProcessor"* %42, null
  %44 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %35, i64 1
  %45 = icmp eq %"class.base::RepeatingCallback.45"* %44, %23
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %34

47:                                               ; preds = %41
  %48 = load %"class.base::RepeatingCallback.45"*, %"class.base::RepeatingCallback.45"** %13, align 8
  br label %49

49:                                               ; preds = %47, %7
  %50 = phi %"class.base::RepeatingCallback.45"* [ %48, %47 ], [ %22, %7 ]
  %51 = phi %"class.media::ImageProcessor"* [ %42, %47 ], [ null, %7 ]
  %52 = icmp eq %"class.base::RepeatingCallback.45"* %50, null
  br i1 %52, label %67, label %53

53:                                               ; preds = %49
  %54 = bitcast %"class.base::RepeatingCallback.45"* %50 to i8*
  %55 = load %"class.base::RepeatingCallback.45"*, %"class.base::RepeatingCallback.45"** %14, align 8
  %56 = icmp eq %"class.base::RepeatingCallback.45"* %55, %50
  br i1 %56, label %65, label %57

57:                                               ; preds = %53, %57
  %58 = phi %"class.base::RepeatingCallback.45"* [ %59, %57 ], [ %55, %53 ]
  %59 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %58, i64 -1
  %60 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %59, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %60) #9
  %61 = icmp eq %"class.base::RepeatingCallback.45"* %59, %50
  br i1 %61, label %62, label %57

62:                                               ; preds = %57
  %63 = bitcast %"class.std::__1::vector.43"* %8 to i8**
  %64 = load i8*, i8** %63, align 8
  br label %65

65:                                               ; preds = %62, %53
  %66 = phi i8* [ %64, %62 ], [ %54, %53 ]
  store %"class.base::RepeatingCallback.45"* %50, %"class.base::RepeatingCallback.45"** %14, align 8
  call void @_ZdlPv(i8* %66) #10
  br label %67

67:                                               ; preds = %49, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9
  %68 = icmp eq %"class.base::SequencedTaskRunner"* %5, null
  br i1 %68, label %77, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %5, i64 0, i32 0, i32 1
  %71 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw sub i32* %71, i32 1 acq_rel
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %77

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %70, i64 -2
  %76 = bitcast %"class.base::RefCountedThreadSafe.15"* %75 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %76) #9
  br label %77

77:                                               ; preds = %67, %69, %74
  ret %"class.media::ImageProcessor"* %51
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.media::ImageProcessorBackend"* @_ZN5media27LibYUVImageProcessorBackend6CreateERKNS_21ImageProcessorBackend10PortConfigES4_RKNSt3__16vectorINS1_10OutputModeENS5_9allocatorIS7_EEEENS_13VideoRotationEN4base17RepeatingCallbackIFvvEEE13scoped_refptrINSE_19SequencedTaskRunnerEE(%"struct.media::ImageProcessorBackend::PortConfig"* dereferenceable(80), %"struct.media::ImageProcessorBackend::PortConfig"* dereferenceable(80), %"class.std::__1::vector.36"* dereferenceable(24), i32, %"class.base::RepeatingCallback"*, %"class.base::SequencedTaskRunner"*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.media::ImageProcessor"* @_ZN5media14ImageProcessor6CreateEN4base17RepeatingCallbackIFNSt3__110unique_ptrINS_21ImageProcessorBackendENS3_14default_deleteIS5_EEEERKNS5_10PortConfigESB_RKNS3_6vectorINS5_10OutputModeENS3_9allocatorISD_EEEENS_13VideoRotationENS2_IFvvEEE13scoped_refptrINS1_19SequencedTaskRunnerEEEEESB_SB_SI_SJ_SL_SO_(%"class.base::RepeatingCallback.45"*, %"struct.media::ImageProcessorBackend::PortConfig"* dereferenceable(80), %"struct.media::ImageProcessorBackend::PortConfig"* dereferenceable(80), %"class.std::__1::vector.36"* dereferenceable(24), i32, %"class.base::RepeatingCallback"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::ImageProcessor"* @_ZN5media21ImageProcessorFactory25CreateWithInputCandidatesERKNSt3__16vectorINS1_4pairINS_6FourccEN3gfx4SizeEEENS1_9allocatorIS7_EEEERKS6_m13scoped_refptrIN4base19SequencedTaskRunnerEENSG_17RepeatingCallbackIFN4absl8optionalIS4_EERKNS2_IS4_NS8_IS4_EEEEEEENSJ_IFvvEEE(%"class.std::__1::vector.51"* nocapture readnone, %"class.gfx::Size"* nocapture readnone dereferenceable(8), i64, %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.52"* nocapture readnone, %"class.base::RepeatingCallback"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %7 = icmp eq %"class.base::SequencedTaskRunner"* %3, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %3, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe.15"* %14 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %15) #9
  br label %16

16:                                               ; preds = %6, %8, %13
  ret %"class.media::ImageProcessor"* null
}

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.media::ImageProcessorBackend"* @_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__110unique_ptrIN5media21ImageProcessorBackendENS3_14default_deleteIS6_EEEERKNS6_10PortConfigESC_RKNS3_6vectorINS6_10OutputModeENS3_9allocatorISE_EEEENS5_13VideoRotationENS_17RepeatingCallbackIFvvEEE13scoped_refptrINS_19SequencedTaskRunnerEEEJEEESR_E3RunEPNS0_13BindStateBaseESC_SC_SJ_SK_OSN_OSQ_(%"class.base::internal::BindStateBase"*, %"struct.media::ImageProcessorBackend::PortConfig"* dereferenceable(80), %"struct.media::ImageProcessorBackend::PortConfig"* dereferenceable(80), %"class.std::__1::vector.36"* dereferenceable(24), i32, %"class.base::RepeatingCallback"* dereferenceable(8), %class.scoped_refptr.14* dereferenceable(8)) #0 comdat align 2 {
  %8 = alloca %"class.base::RepeatingCallback", align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %10 = bitcast %"class.base::internal::BindStateBase"* %9 to %"class.media::ImageProcessorBackend"* (%"struct.media::ImageProcessorBackend::PortConfig"*, %"struct.media::ImageProcessorBackend::PortConfig"*, %"class.std::__1::vector.36"*, i32, %"class.base::RepeatingCallback"*, %"class.base::SequencedTaskRunner"*)**
  %11 = bitcast %"class.base::RepeatingCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = load %"class.media::ImageProcessorBackend"* (%"struct.media::ImageProcessorBackend::PortConfig"*, %"struct.media::ImageProcessorBackend::PortConfig"*, %"class.std::__1::vector.36"*, i32, %"class.base::RepeatingCallback"*, %"class.base::SequencedTaskRunner"*)*, %"class.media::ImageProcessorBackend"* (%"struct.media::ImageProcessorBackend::PortConfig"*, %"struct.media::ImageProcessorBackend::PortConfig"*, %"class.std::__1::vector.36"*, i32, %"class.base::RepeatingCallback"*, %"class.base::SequencedTaskRunner"*)** %10, align 8
  %13 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::RepeatingCallback"* %5 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.base::RepeatingCallback"* %8 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %17 = getelementptr inbounds %class.scoped_refptr.14, %class.scoped_refptr.14* %6, i64 0, i32 0
  %18 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %17, align 8
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %17, align 8
  %19 = call %"class.media::ImageProcessorBackend"* %12(%"struct.media::ImageProcessorBackend::PortConfig"* dereferenceable(80) %1, %"struct.media::ImageProcessorBackend::PortConfig"* dereferenceable(80) %2, %"class.std::__1::vector.36"* dereferenceable(24) %3, i32 %4, %"class.base::RepeatingCallback"* nonnull %8, %"class.base::SequencedTaskRunner"* %18) #9
  %20 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  ret %"class.media::ImageProcessorBackend"* %19
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFNSt3__110unique_ptrIN5media21ImageProcessorBackendENS2_14default_deleteIS5_EEEERKNS5_10PortConfigESB_RKNS2_6vectorINS5_10OutputModeENS2_9allocatorISD_EEEENS4_13VideoRotationENS_17RepeatingCallbackIFvvEEE13scoped_refptrINS_19SequencedTaskRunnerEEEJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base17RepeatingCallbackIFNS_10unique_ptrIN5media21ImageProcessorBackendENS_14default_deleteIS5_EEEERKNS5_10PortConfigESB_RKNS0_INS5_10OutputModeENS_9allocatorISC_EEEENS4_13VideoRotationENS2_IFvvEEE13scoped_refptrINS1_19SequencedTaskRunnerEEEEENSD_ISP_EEE21__push_back_slow_pathISP_EEvOT_(%"class.std::__1::vector.43"*, %"class.base::RepeatingCallback.45"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::RepeatingCallback.45"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.43"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.43"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::RepeatingCallback.45"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.base::RepeatingCallback.45"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::RepeatingCallback.45"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %36, i64 %35
  %39 = ptrtoint %"class.base::RepeatingCallback.45"* %38 to i64
  %40 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.base::RepeatingCallback.45"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.base::RepeatingCallback.45"* %37 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %40, align 8
  %44 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %37, i64 1
  %45 = ptrtoint %"class.base::RepeatingCallback.45"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.base::RepeatingCallback.45"*, %"class.base::RepeatingCallback.45"** %46, align 8
  %48 = ptrtoint %"class.base::RepeatingCallback.45"* %47 to i64
  %49 = load %"class.base::RepeatingCallback.45"*, %"class.base::RepeatingCallback.45"** %3, align 8
  %50 = icmp eq %"class.base::RepeatingCallback.45"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %49, i64 -1, i32 0, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.base::internal::BindStateBase"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.base::RepeatingCallback.45"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.base::RepeatingCallback.45"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %60, i64 -1
  %64 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %61, i64 -1
  %65 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.base::RepeatingCallback.45"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.base::RepeatingCallback.45"* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %65, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !7

71:                                               ; preds = %59, %51
  %72 = phi %"class.base::RepeatingCallback.45"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.base::RepeatingCallback.45"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.base::RepeatingCallback.45"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.base::RepeatingCallback.45"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.base::RepeatingCallback.45"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %77, i64 -1
  %80 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %78, i64 -1
  %81 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.base::RepeatingCallback.45"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.base::RepeatingCallback.45"* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %81, align 8
  %85 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %77, i64 -2
  %86 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %78, i64 -2
  %87 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %86, i64 0, i32 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.base::RepeatingCallback.45"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.base::RepeatingCallback.45"* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %87, align 8
  %91 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %77, i64 -3
  %92 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %78, i64 -3
  %93 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %92, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.base::RepeatingCallback.45"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.base::RepeatingCallback.45"* %91 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %93, align 8
  %97 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %77, i64 -4
  %98 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %78, i64 -4
  %99 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %98, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.base::RepeatingCallback.45"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.base::RepeatingCallback.45"* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %99, align 8
  %103 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %77, i64 -5
  %104 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %78, i64 -5
  %105 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %104, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.base::RepeatingCallback.45"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.base::RepeatingCallback.45"* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %105, align 8
  %109 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %77, i64 -6
  %110 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %78, i64 -6
  %111 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %110, i64 0, i32 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.base::RepeatingCallback.45"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.base::RepeatingCallback.45"* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %111, align 8
  %115 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %77, i64 -7
  %116 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %78, i64 -7
  %117 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %116, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.base::RepeatingCallback.45"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.base::RepeatingCallback.45"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %117, align 8
  %121 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %77, i64 -8
  %122 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %78, i64 -8
  %123 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %122, i64 0, i32 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.base::RepeatingCallback.45"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.base::RepeatingCallback.45"* %121 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %123, align 8
  %127 = icmp eq %"class.base::RepeatingCallback.45"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.base::RepeatingCallback.45"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.base::RepeatingCallback.45"*, %"class.base::RepeatingCallback.45"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.base::RepeatingCallback.45"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.base::RepeatingCallback.45"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.base::RepeatingCallback.45"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.base::RepeatingCallback.45"*
  %138 = icmp eq %"class.base::RepeatingCallback.45"* %133, %137
  br i1 %138, label %144, label %139

139:                                              ; preds = %132, %139
  %140 = phi %"class.base::RepeatingCallback.45"* [ %141, %139 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %140, i64 -1
  %142 = getelementptr inbounds %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45"* %141, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %142) #9
  %143 = icmp eq %"class.base::RepeatingCallback.45"* %141, %137
  br i1 %143, label %144, label %139

144:                                              ; preds = %139, %132
  %145 = icmp eq i64 %135, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %144
  %147 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %147) #10
  br label %148

148:                                              ; preds = %144, %146
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFNSt3__110unique_ptrIN5media21ImageProcessorBackendENS3_14default_deleteIS6_EEEERKNS6_10PortConfigESC_RKNS3_6vectorINS6_10OutputModeENS3_9allocatorISE_EEEENS5_13VideoRotationENS2_IFvvEEE13scoped_refptrINS_19SequencedTaskRunnerEEEJEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFNSt3__110unique_ptrIN5media21ImageProcessorBackendENS3_14default_deleteIS6_EEEERKNS6_10PortConfigESC_RKNS3_6vectorINS6_10OutputModeENS3_9allocatorISE_EEEENS5_13VideoRotationENS2_IFvvEEE13scoped_refptrINS_19SequencedTaskRunnerEEEJEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base13BindRepeatingIPFNSt3__110unique_ptrIN5media21ImageProcessorBackendENS1_14default_deleteIS4_EEEERKNS4_10PortConfigESA_RKNS1_6vectorINS4_10OutputModeENS1_9allocatorISC_EEEENS3_13VideoRotationENS_17RepeatingCallbackIFvvEEE13scoped_refptrINS_19SequencedTaskRunnerEEEJEEENSJ_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOST_DpOSU_: argument 0"}
!6 = distinct !{!6, !"_ZN4base13BindRepeatingIPFNSt3__110unique_ptrIN5media21ImageProcessorBackendENS1_14default_deleteIS4_EEEERKNS4_10PortConfigESA_RKNS1_6vectorINS4_10OutputModeENS1_9allocatorISC_EEEENS3_13VideoRotationENS_17RepeatingCallbackIFvvEEE13scoped_refptrINS_19SequencedTaskRunnerEEEJEEENSJ_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOST_DpOSU_"}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
