; ModuleID = '../../third_party/blink/renderer/core/css/parser/at_rule_descriptor_parser.cc'
source_filename = "../../third_party/blink/renderer/core/css/parser/at_rule_descriptor_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon }
%union.anon = type { double }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.11", i32, [4 x i8], %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.143", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.159", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.177", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.184", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.127", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__cxx_atomic_impl.50" }
%"struct.std::__1::__cxx_atomic_impl.50" = type { %"struct.std::__1::__cxx_atomic_base_impl.51" }
%"struct.std::__1::__cxx_atomic_base_impl.51" = type { i64 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::Worklist.58"* }
%"class.blink::Worklist.58" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::Worklist.65"* }
%"class.blink::Worklist.65" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist.72"* }
%"class.blink::Worklist.72" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::Worklist.93"* }
%"class.blink::Worklist.93" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::Worklist.100"* }
%"class.blink::Worklist.100" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.107", %"class.std::__1::__compressed_pair.114", %"class.std::__1::__compressed_pair.119", %"class.std::__1::__compressed_pair.121", [4 x i8] }>
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109", %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { i64 }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { float }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.130", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.151" }
%"class.WTF::VectorBuffer.151" = type { %"class.WTF::VectorBufferBase.152" }
%"class.WTF::VectorBufferBase.152" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.165" }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.58"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.65"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.72"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.79"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.86"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.190" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.183 }
%class.scoped_refptr.183 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__cxx_atomic_impl.186" }
%"struct.std::__1::__cxx_atomic_impl.186" = type { %"struct.std::__1::__cxx_atomic_base_impl.187" }
%"struct.std::__1::__cxx_atomic_base_impl.187" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.314" }
%"struct.std::__1::atomic.314" = type { %"struct.std::__1::__atomic_base.315" }
%"struct.std::__1::__atomic_base.315" = type { %"struct.std::__1::__atomic_base.316" }
%"struct.std::__1::__atomic_base.316" = type { %"struct.std::__1::__cxx_atomic_impl.317" }
%"struct.std::__1::__cxx_atomic_impl.317" = type { %"struct.std::__1::__cxx_atomic_base_impl.318" }
%"struct.std::__1::__cxx_atomic_base_impl.318" = type { i32 }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::CSSParserTokenRange" = type { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* }
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.4, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.188", i32, [4 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%class.scoped_refptr.4 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::WeakMember.188" = type { %"class.blink::MemberBase.189" }
%"class.blink::MemberBase.189" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::CSSValueList" = type { %"class.blink::CSSValue", %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.197" }
%"class.WTF::Vector.197" = type { %"class.WTF::VectorBuffer.198" }
%"class.WTF::VectorBuffer.198" = type { %"class.WTF::VectorBufferBase.199", [32 x i8] }
%"class.WTF::VectorBufferBase.199" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase.200" }
%"class.blink::MemberBase.200" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSFontFaceSrcValue" = type { %"class.blink::CSSValue", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"struct.blink::Referrer", i8, %class.scoped_refptr.4, i32, i8, %"class.blink::Member.260" }
%"class.blink::Member.260" = type { %"class.blink::MemberBase.261" }
%"class.blink::MemberBase.261" = type { %"class.blink::CSSFontFaceSrcValue::FontResourceHelper"* }
%"class.blink::CSSFontFaceSrcValue::FontResourceHelper" = type { %"class.blink::FontResourceClient.base", [7 x i8] }
%"class.blink::FontResourceClient.base" = type { %"class.blink::ResourceClient.base" }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.264", i8 }>
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.264" = type { %"class.blink::MemberBase.265" }
%"class.blink::MemberBase.265" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.284", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.422", %"class.blink::ResourceResponse", %class.scoped_refptr.424, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.268 }
%union.anon.268 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.269", i8, %"class.absl::optional.274", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.269" = type { %"class.absl::optional_internal::optional_data.270" }
%"class.absl::optional_internal::optional_data.270" = type { %"class.absl::optional_internal::optional_data_base.271" }
%"class.absl::optional_internal::optional_data_base.271" = type { %"class.absl::optional_internal::optional_data_dtor_base.272" }
%"class.absl::optional_internal::optional_data_dtor_base.272" = type { i8, [7 x i8], %union.anon.273 }
%union.anon.273 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.255 }
%union.anon.255 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.274" = type { %"class.absl::optional_internal::optional_data.275" }
%"class.absl::optional_internal::optional_data.275" = type { %"class.absl::optional_internal::optional_data_base.276" }
%"class.absl::optional_internal::optional_data_base.276" = type { %"class.absl::optional_internal::optional_data_dtor_base.277" }
%"class.absl::optional_internal::optional_data_dtor_base.277" = type { i8, %union.anon.278 }
%union.anon.278 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.279", %"class.WTF::Vector.208" }
%"class.WTF::Vector.279" = type { %"class.WTF::VectorBuffer.280" }
%"class.WTF::VectorBuffer.280" = type { %"class.WTF::VectorBufferBase.281" }
%"class.WTF::VectorBufferBase.281" = type { i32*, i32, i32 }
%"class.WTF::Vector.208" = type { %"class.WTF::VectorBuffer.209" }
%"class.WTF::VectorBuffer.209" = type { %"class.WTF::VectorBufferBase.210" }
%"class.WTF::VectorBufferBase.210" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.401" }
%"class.WTF::HashMap.401" = type { %"class.WTF::HashTable.402" }
%"class.WTF::HashTable.402" = type <{ %"struct.WTF::KeyValuePair.404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.404" = type <{ %"class.blink::WeakMember.405", i32, [4 x i8] }>
%"class.blink::WeakMember.405" = type { %"class.blink::MemberBase.406" }
%"class.blink::MemberBase.406" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.264", i8, [7 x i8] }>
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.409" }
%"class.WTF::HashTable.409" = type <{ %"class.blink::WeakMember.411"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.411" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.412", i8, i8, %class.scoped_refptr.4, %class.scoped_refptr.417, %class.scoped_refptr.419 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.412" = type { %"class.WTF::HashTable.413" }
%"class.WTF::HashTable.413" = type <{ %"struct.std::__1::pair.416"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.416" = type opaque
%class.scoped_refptr.417 = type { %"class.base::RefCountedData.418"* }
%"class.base::RefCountedData.418" = type opaque
%class.scoped_refptr.419 = type { %"class.base::RefCountedData.420"* }
%"class.base::RefCountedData.420" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.364" }
%"class.base::time_internal::TimeBase.364" = type { i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.421 }
%class.scoped_refptr.421 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.292, %class.scoped_refptr.292, %class.scoped_refptr.292, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.298, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.319", %"class.absl::optional.324", %"class.absl::optional.334", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.344", %"class.absl::optional.334", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.334", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.344", %"class.absl::optional.349", i8, %class.scoped_refptr.354 }
%"class.base::TimeDelta" = type { i64 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.287" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.287" = type { %"class.absl::optional_internal::optional_data.288" }
%"class.absl::optional_internal::optional_data.288" = type { %"class.absl::optional_internal::optional_data_base.289" }
%"class.absl::optional_internal::optional_data_base.289" = type { %"class.absl::optional_internal::optional_data_dtor_base.290" }
%"class.absl::optional_internal::optional_data_dtor_base.290" = type { i8, %union.anon.291 }
%union.anon.291 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.292 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.446", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.287", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.292 }
%"class.WTF::RefCounted.446" = type { %"class.base::RefCounted.447" }
%"class.base::RefCounted.447" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.293" }
%"class.WTF::HashMap.293" = type { %"class.WTF::HashTable.294" }
%"class.WTF::HashTable.294" = type <{ %"struct.WTF::KeyValuePair.297"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.297" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.298 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.299", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.313, i8, %"class.url::Origin" }
%"class.base::RefCounted.299" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector.300" }
%"class.std::__1::vector.300" = type { %"class.std::__1::__vector_base.301" }
%"class.std::__1::__vector_base.301" = type { %"class.std::__1::unique_ptr.302"*, %"class.std::__1::unique_ptr.302"*, %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.std::__1::unique_ptr.302"* }
%class.scoped_refptr.313 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.314" }
%"class.absl::optional.319" = type { %"class.absl::optional_internal::optional_data.320" }
%"class.absl::optional_internal::optional_data.320" = type { %"class.absl::optional_internal::optional_data_base.321" }
%"class.absl::optional_internal::optional_data_base.321" = type { %"class.absl::optional_internal::optional_data_dtor_base.322" }
%"class.absl::optional_internal::optional_data_dtor_base.322" = type { i8, %union.anon.323 }
%union.anon.323 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.324" = type { %"class.absl::optional_internal::optional_data.325" }
%"class.absl::optional_internal::optional_data.325" = type { %"class.absl::optional_internal::optional_data_base.326" }
%"class.absl::optional_internal::optional_data_base.326" = type { %"class.absl::optional_internal::optional_data_dtor_base.327" }
%"class.absl::optional_internal::optional_data_dtor_base.327" = type { i8, %union.anon.328 }
%union.anon.328 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.329", %"class.WTF::Vector.208", %"class.WTF::String" }
%"class.WTF::Vector.329" = type { %"class.WTF::VectorBuffer.330" }
%"class.WTF::VectorBuffer.330" = type { %"class.WTF::VectorBufferBase.331" }
%"class.WTF::VectorBufferBase.331" = type { %class.scoped_refptr.292*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.339", %"class.absl::optional.339" }
%"class.absl::optional.339" = type { %"class.absl::optional_internal::optional_data.340" }
%"class.absl::optional_internal::optional_data.340" = type { %"class.absl::optional_internal::optional_data_base.341" }
%"class.absl::optional_internal::optional_data_base.341" = type { %"class.absl::optional_internal::optional_data_dtor_base.342" }
%"class.absl::optional_internal::optional_data_dtor_base.342" = type { i8, %union.anon.343 }
%union.anon.343 = type { %"class.base::TimeDelta" }
%"class.absl::optional.334" = type { %"class.absl::optional_internal::optional_data.335" }
%"class.absl::optional_internal::optional_data.335" = type { %"class.absl::optional_internal::optional_data_base.336" }
%"class.absl::optional_internal::optional_data_base.336" = type { %"class.absl::optional_internal::optional_data_dtor_base.337" }
%"class.absl::optional_internal::optional_data_dtor_base.337" = type { i8, %union.anon.338 }
%union.anon.338 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.344" = type { %"class.absl::optional_internal::optional_data.345" }
%"class.absl::optional_internal::optional_data.345" = type { %"class.absl::optional_internal::optional_data_base.346" }
%"class.absl::optional_internal::optional_data_base.346" = type { %"class.absl::optional_internal::optional_data_dtor_base.347" }
%"class.absl::optional_internal::optional_data_dtor_base.347" = type { i8, %union.anon.348 }
%union.anon.348 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.349" = type { %"class.absl::optional_internal::optional_data.350" }
%"class.absl::optional_internal::optional_data.350" = type { %"class.absl::optional_internal::optional_data_base.351" }
%"class.absl::optional_internal::optional_data_base.351" = type { %"class.absl::optional_internal::optional_data_dtor_base.352" }
%"class.absl::optional_internal::optional_data_dtor_base.352" = type { i8, %union.anon.353 }
%union.anon.353 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.354 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.355", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.355" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.356" }
%"class.std::__1::vector.356" = type { %"class.std::__1::__vector_base.357" }
%"class.std::__1::__vector_base.357" = type { i32*, i32*, %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { i32* }
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.365", %class.scoped_refptr.380, %class.scoped_refptr.381, %"struct.blink::CacheControlHeader", %"class.absl::optional.339", %"class.absl::optional.382", %"class.absl::optional.382", %"class.absl::optional.382", i64, %"class.blink::KURL", %"class.WTF::Vector.387", %"class.WTF::String", %"class.WTF::Vector.208", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.344", %"class.WTF::Vector.208", %"class.blink::KURL", %"class.absl::optional.392" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.363", i8 }
%"struct.std::__1::array.363" = type { [16 x i8] }
%"class.absl::optional.365" = type { %"class.absl::optional_internal::optional_data.366" }
%"class.absl::optional_internal::optional_data.366" = type { %"class.absl::optional_internal::optional_data_base.367" }
%"class.absl::optional_internal::optional_data_base.367" = type { %"class.absl::optional_internal::optional_data_dtor_base.368" }
%"class.absl::optional_internal::optional_data_dtor_base.368" = type { i8, %union.anon.369 }
%union.anon.369 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.208", %"class.WTF::String", i64, i64, %"class.WTF::Vector.370", %"class.WTF::Vector.375" }
%"class.WTF::Vector.370" = type { %"class.WTF::VectorBuffer.371" }
%"class.WTF::VectorBuffer.371" = type { %"class.WTF::VectorBufferBase.372" }
%"class.WTF::VectorBufferBase.372" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.375" = type { %"class.WTF::VectorBuffer.376" }
%"class.WTF::VectorBuffer.376" = type { %"class.WTF::VectorBufferBase.377" }
%"class.WTF::VectorBufferBase.377" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.380 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.381 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.382" = type { %"class.absl::optional_internal::optional_data.383" }
%"class.absl::optional_internal::optional_data.383" = type { %"class.absl::optional_internal::optional_data_base.384" }
%"class.absl::optional_internal::optional_data_base.384" = type { %"class.absl::optional_internal::optional_data_dtor_base.385" }
%"class.absl::optional_internal::optional_data_dtor_base.385" = type { i8, %union.anon.386 }
%union.anon.386 = type { %"class.base::Time" }
%"class.WTF::Vector.387" = type { %"class.WTF::VectorBuffer.388" }
%"class.WTF::VectorBuffer.388" = type { %"class.WTF::VectorBufferBase.389" }
%"class.WTF::VectorBufferBase.389" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.392" = type { %"class.absl::optional_internal::optional_data.393" }
%"class.absl::optional_internal::optional_data.393" = type { %"class.absl::optional_internal::optional_data_base.394" }
%"class.absl::optional_internal::optional_data_base.394" = type { %"class.absl::optional_internal::optional_data_dtor_base.395" }
%"class.absl::optional_internal::optional_data_dtor_base.395" = type { i8, %union.anon.396 }
%union.anon.396 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.424 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.425", i64, %"class.WTF::Vector.427", %"class.WTF::Vector.432" }
%"class.WTF::RefCounted.425" = type { %"class.base::RefCounted.426" }
%"class.base::RefCounted.426" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.427" = type { %"class.WTF::VectorBuffer.428" }
%"class.WTF::VectorBuffer.428" = type { %"class.WTF::VectorBufferBase.429" }
%"class.WTF::VectorBufferBase.429" = type { i8*, i32, i32 }
%"class.WTF::Vector.432" = type { %"class.WTF::VectorBuffer.433" }
%"class.WTF::VectorBuffer.433" = type { %"class.WTF::VectorBufferBase.434" }
%"class.WTF::VectorBufferBase.434" = type { %"class.std::__1::unique_ptr.435"*, i32, i32 }
%"class.std::__1::unique_ptr.435" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.438", %"class.std::__1::__compressed_pair.443" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%struct.anon = type { i32, i32 }
%"class.blink::CSSIdentifierValue" = type { %"class.blink::CSSValue", i32 }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.blink::CSSTokenizer" = type { %"class.blink::CSSTokenizerInputStream", %"class.WTF::Vector.203", %"class.WTF::Vector.208", i32, i32 }
%"class.blink::CSSTokenizerInputStream" = type { i32, i32, %class.scoped_refptr }
%"class.WTF::Vector.203" = type { %"class.WTF::VectorBuffer.204" }
%"class.WTF::VectorBuffer.204" = type { %"class.WTF::VectorBufferBase.205", [32 x i8] }
%"class.WTF::VectorBufferBase.205" = type { i32*, i32, i32 }
%"class.WTF::Vector.213" = type { %"class.WTF::VectorBuffer.214" }
%"class.WTF::VectorBuffer.214" = type { %"class.WTF::VectorBufferBase.215", [768 x i8] }
%"class.WTF::VectorBufferBase.215" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"struct.blink::CSSTokenizedValue" = type { %"class.blink::CSSParserTokenRange", %"class.WTF::StringView" }
%"class.blink::CSSStringValue" = type { %"class.blink::CSSValue", %"class.WTF::String" }
%"class.blink::CSSCustomPropertyDeclaration" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.218, i32, [4 x i8] }>
%class.scoped_refptr.218 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.219", %"class.WTF::Vector.208", %"class.WTF::Vector.221", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.219" = type { %"class.base::RefCounted.220" }
%"class.base::RefCounted.220" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.221" = type { %"class.WTF::VectorBuffer.222" }
%"class.WTF::VectorBuffer.222" = type { %"class.WTF::VectorBufferBase.215" }
%"class.blink::HeapVector.225" = type { %"class.WTF::Vector.228" }
%"class.WTF::Vector.228" = type { %"class.WTF::VectorBuffer.229" }
%"class.WTF::VectorBuffer.229" = type { %"class.WTF::VectorBufferBase.230", [6144 x i8] }
%"class.WTF::VectorBufferBase.230" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::CSSPropertyName" = type { i32, %"class.WTF::AtomicString" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapVectorBacking.463" = type { i8 }

$_ZN5blink12CSSTokenizerD2Ev = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_19CSSFontFaceSrcValueEEEPvm = comdat any

$_ZN5blink19CSSFontFaceSrcValueC2ERKN3WTF6StringES4_RKNS_8ReferrerEb13scoped_refptrIKNS_15DOMWrapperWorldEENS_11OriginCleanEb = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_8cssvalue20CSSUnicodeRangeValueEEEPvm = comdat any

$_ZN5blink17css_parsing_utils12ConsumeIdentIJLNS_10CSSValueIDE405ELS2_379ELS2_85ELS2_86ELS2_87EEEEPNS_18CSSIdentifierValueERNS_19CSSParserTokenRangeE = comdat any

$_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink17css_parsing_utils12ConsumeIdentIJLNS_10CSSValueIDE405ELS2_3EEEEPNS_18CSSIdentifierValueERNS_19CSSParserTokenRangeE = comdat any

$_ZN5blink17css_parsing_utils12ConsumeIdentIJLNS_10CSSValueIDE405ELS2_379ELS2_378ELS2_511ELS2_512EEEEPNS_18CSSIdentifierValueERNS_19CSSParserTokenRangeE = comdat any

$_ZN3WTF15ConstructTraitsIN5blink16CSSPropertyValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_16CSSPropertyValueEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv = comdat any

$_ZN5blink13HeapAllocator16NotifyNewObjectsINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEvPT_m = comdat any

$_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink18g_static_eof_tokenE = external local_unnamed_addr constant %"class.blink::CSSParserToken"*, align 8
@.str = private unnamed_addr constant [16 x i8] c"blink::CSSValue\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.3 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN3WTF10StringImpl12empty16_bit_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.4 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.10 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_8CSSValueEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<const blink::CSSValue>, WTF::VectorTraits<blink::Member<const blink::CSSValue> > >]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase37is_css_font_face_size_adjust_enabled_E = external local_unnamed_addr global i8, align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_16CSSPropertyValueENS_12VectorTraitsIS3_EEEEEEPKcv = private unnamed_addr constant [142 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::CSSPropertyValue, WTF::VectorTraits<blink::CSSPropertyValue> >]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZN5blink22AtRuleDescriptorParser23ParseFontFaceDescriptorENS_18AtRuleDescriptorIDERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(i32, %"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.blink::KURL", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"struct.blink::Referrer", align 8
  %9 = alloca %"struct.blink::Referrer", align 8
  %10 = alloca %"class.blink::CSSParserTokenRange", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 0
  %15 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 1
  %17 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %16, align 8
  %18 = icmp ult %"class.blink::CSSParserToken"* %15, %17
  %19 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %20 = select i1 %18, %"class.blink::CSSParserToken"* %15, %"class.blink::CSSParserToken"* %19
  %21 = bitcast %"class.blink::CSSParserToken"* %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 63
  %24 = icmp eq i32 %23, 17
  br i1 %24, label %25, label %34

25:                                               ; preds = %3, %25
  %26 = phi %"class.blink::CSSParserToken"* [ %27, %25 ], [ %15, %3 ]
  %27 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %26, i64 1
  store %"class.blink::CSSParserToken"* %27, %"class.blink::CSSParserToken"** %14, align 8
  %28 = icmp ult %"class.blink::CSSParserToken"* %27, %17
  %29 = select i1 %28, %"class.blink::CSSParserToken"* %27, %"class.blink::CSSParserToken"* %19
  %30 = bitcast %"class.blink::CSSParserToken"* %29 to i32*
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 63
  %33 = icmp eq i32 %32, 17
  br i1 %33, label %25, label %34

34:                                               ; preds = %25, %3
  %35 = phi %"class.blink::CSSParserToken"* [ %15, %3 ], [ %27, %25 ]
  switch i32 %0, label %664 [
    i32 6, label %36
    i32 31, label %41
    i32 38, label %441
    i32 5, label %529
    i32 8, label %532
    i32 9, label %538
    i32 10, label %544
    i32 11, label %600
    i32 7, label %606
    i32 2, label %608
    i32 3, label %608
    i32 16, label %608
    i32 28, label %650
  ]

36:                                               ; preds = %34
  %37 = tail call %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils20ConsumeGenericFamilyERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1) #8
  %38 = icmp eq %"class.blink::CSSValue"* %37, null
  br i1 %38, label %39, label %664

39:                                               ; preds = %36
  %40 = tail call %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils17ConsumeFamilyNameERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1) #8
  br label %656

41:                                               ; preds = %34
  %42 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #8
  %43 = bitcast i8* %42 to %"class.blink::CSSValueList"*
  tail call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %43, i32 1) #8
  %44 = getelementptr inbounds i8, i8* %42, i64 -4
  %45 = bitcast i8* %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = or i16 %46, 1
  store atomic i16 %47, i16* %45 release, align 2
  %48 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %49 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %16, align 8
  %50 = icmp ult %"class.blink::CSSParserToken"* %48, %49
  %51 = select i1 %50, %"class.blink::CSSParserToken"* %48, %"class.blink::CSSParserToken"* %19
  %52 = bitcast %"class.blink::CSSParserToken"* %51 to i32*
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, 63
  %55 = icmp eq i32 %54, 17
  br i1 %55, label %56, label %65

56:                                               ; preds = %41, %56
  %57 = phi %"class.blink::CSSParserToken"* [ %58, %56 ], [ %48, %41 ]
  %58 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %57, i64 1
  store %"class.blink::CSSParserToken"* %58, %"class.blink::CSSParserToken"** %14, align 8
  %59 = icmp ult %"class.blink::CSSParserToken"* %58, %49
  %60 = select i1 %59, %"class.blink::CSSParserToken"* %58, %"class.blink::CSSParserToken"* %19
  %61 = bitcast %"class.blink::CSSParserToken"* %60 to i32*
  %62 = load i32, i32* %61, align 8
  %63 = and i32 %62, 63
  %64 = icmp eq i32 %63, 17
  br i1 %64, label %56, label %65

65:                                               ; preds = %56, %41
  %66 = phi %"class.blink::CSSParserToken"* [ %48, %41 ], [ %58, %56 ]
  %67 = bitcast %"class.WTF::String"* %4 to i8*
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %69 = bitcast %"class.WTF::StringView"* %5 to i8*
  %70 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  %71 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 4
  %72 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %2, i64 0, i32 6
  %73 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %2, i64 0, i32 1, i32 0
  %74 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %2, i64 0, i32 7
  %75 = bitcast %"class.WTF::StringView"* %7 to i8*
  %76 = bitcast %"class.WTF::StringView"* %7 to i64*
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %78 = bitcast i8** %77 to i64*
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %80 = bitcast %"class.blink::CSSParserTokenRange"* %10 to i8*
  %81 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %10, i64 0, i32 0
  %82 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %10, i64 0, i32 1
  %83 = bitcast %"class.WTF::String"* %13 to i8*
  %84 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %85 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %86 = bitcast %"struct.blink::Referrer"* %9 to i8*
  %87 = getelementptr inbounds %"struct.blink::Referrer", %"struct.blink::Referrer"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.blink::Referrer", %"struct.blink::Referrer"* %9, i64 0, i32 1
  %89 = bitcast %"class.WTF::String"* %11 to i8*
  %90 = bitcast %"class.WTF::StringView"* %12 to i8*
  %91 = bitcast %"class.WTF::StringView"* %12 to i64*
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %93 = bitcast i8** %92 to i64*
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  %95 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %96 = bitcast %"struct.blink::Referrer"* %8 to i8*
  %97 = getelementptr inbounds %"struct.blink::Referrer", %"struct.blink::Referrer"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.blink::Referrer", %"struct.blink::Referrer"* %8, i64 0, i32 1
  %99 = getelementptr inbounds i8, i8* %42, i64 8
  %100 = getelementptr inbounds i8, i8* %42, i64 20
  %101 = bitcast i8* %100 to i32*
  %102 = getelementptr inbounds i8, i8* %42, i64 16
  %103 = bitcast i8* %102 to i32*
  %104 = bitcast i8* %99 to %"class.blink::Member"**
  %105 = bitcast i8* %99 to %"class.WTF::Vector.197"*
  br label %106

106:                                              ; preds = %435, %65
  %107 = phi %"class.blink::CSSParserToken"* [ %437, %435 ], [ %49, %65 ]
  %108 = phi %"class.blink::CSSParserToken"* [ %436, %435 ], [ %66, %65 ]
  %109 = icmp ult %"class.blink::CSSParserToken"* %108, %107
  %110 = select i1 %109, %"class.blink::CSSParserToken"* %108, %"class.blink::CSSParserToken"* %19
  %111 = call i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* %110) #8
  %112 = icmp eq i32 %111, 483
  br i1 %112, label %113, label %268

113:                                              ; preds = %106
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #8
  %114 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink17css_parsing_utils15ConsumeFunctionERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1) #8
  %115 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %114, 0
  store %"class.blink::CSSParserToken"* %115, %"class.blink::CSSParserToken"** %81, align 8
  %116 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %114, 1
  store %"class.blink::CSSParserToken"* %116, %"class.blink::CSSParserToken"** %82, align 8
  %117 = icmp ult %"class.blink::CSSParserToken"* %115, %116
  %118 = select i1 %117, %"class.blink::CSSParserToken"* %115, %"class.blink::CSSParserToken"* %19
  %119 = bitcast %"class.blink::CSSParserToken"* %118 to i32*
  %120 = load i32, i32* %119, align 8
  %121 = and i32 %120, 63
  switch i32 %121, label %266 [
    i32 29, label %122
    i32 0, label %209
  ]

122:                                              ; preds = %113
  %123 = icmp eq %"class.blink::CSSParserToken"* %115, %116
  br i1 %123, label %126, label %124

124:                                              ; preds = %122
  %125 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %115, i64 1
  store %"class.blink::CSSParserToken"* %125, %"class.blink::CSSParserToken"** %81, align 8
  br label %126

126:                                              ; preds = %124, %122
  %127 = phi %"class.blink::CSSParserToken"* [ %125, %124 ], [ %115, %122 ]
  %128 = phi %"class.blink::CSSParserToken"* [ %115, %124 ], [ %19, %122 ]
  %129 = icmp ult %"class.blink::CSSParserToken"* %127, %116
  %130 = select i1 %129, %"class.blink::CSSParserToken"* %127, %"class.blink::CSSParserToken"* %19
  %131 = bitcast %"class.blink::CSSParserToken"* %130 to i32*
  %132 = load i32, i32* %131, align 8
  %133 = and i32 %132, 63
  %134 = icmp eq i32 %133, 17
  br i1 %134, label %135, label %144

135:                                              ; preds = %126, %135
  %136 = phi %"class.blink::CSSParserToken"* [ %137, %135 ], [ %127, %126 ]
  %137 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %136, i64 1
  store %"class.blink::CSSParserToken"* %137, %"class.blink::CSSParserToken"** %81, align 8
  %138 = icmp ult %"class.blink::CSSParserToken"* %137, %116
  %139 = select i1 %138, %"class.blink::CSSParserToken"* %137, %"class.blink::CSSParserToken"* %19
  %140 = bitcast %"class.blink::CSSParserToken"* %139 to i32*
  %141 = load i32, i32* %140, align 8
  %142 = and i32 %141, 63
  %143 = icmp eq i32 %142, 17
  br i1 %143, label %135, label %144

144:                                              ; preds = %135, %126
  %145 = phi %"class.blink::CSSParserToken"* [ %127, %126 ], [ %137, %135 ]
  %146 = icmp eq %"class.blink::CSSParserToken"* %145, %116
  br i1 %146, label %147, label %266

147:                                              ; preds = %144
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #8
  %148 = bitcast %"class.blink::CSSParserToken"* %128 to i32*
  %149 = load i32, i32* %148, align 8, !noalias !2
  %150 = and i32 %149, 262144
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %128, i64 0, i32 2
  %153 = bitcast i8** %152 to i64*
  %154 = load i64, i64* %153, align 8, !noalias !2
  %155 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %128, i64 0, i32 1
  %156 = load i32, i32* %155, align 4, !noalias !2
  %157 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %158 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %159 = select i1 %151, i64 %157, i64 %158
  store i64 %159, i64* %91, align 8, !alias.scope !2
  store i64 %154, i64* %93, align 8, !alias.scope !2
  store i32 %156, i32* %94, align 8, !alias.scope !2
  %160 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* nonnull %12) #8
  store %"class.WTF::StringImpl"* %160, %"class.WTF::StringImpl"** %95, align 8
  %161 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %73, align 8
  %162 = icmp eq %"class.blink::DOMWrapperWorld"* %161, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %147
  %164 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %161, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %164) #8
  br label %165

165:                                              ; preds = %163, %147
  %166 = call zeroext i1 @_ZNK5blink16CSSParserContext13IsOriginCleanEv(%"class.blink::CSSParserContext"* %2) #8
  %167 = zext i1 %166 to i32
  %168 = load i8, i8* %74, align 8, !range !5
  %169 = icmp ne i8 %168, 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %97, align 8
  store i32 1, i32* %98, align 8
  %170 = call i8* @_ZN5blink8CSSValue14AllocateObjectINS_19CSSFontFaceSrcValueEEEPvm(i64 80) #8
  %171 = bitcast i8* %170 to %"class.blink::CSSFontFaceSrcValue"*
  call void @_ZN5blink19CSSFontFaceSrcValueC2ERKN3WTF6StringES4_RKNS_8ReferrerEb13scoped_refptrIKNS_15DOMWrapperWorldEENS_11OriginCleanEb(%"class.blink::CSSFontFaceSrcValue"* %171, %"class.WTF::String"* dereferenceable(8) %85, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"struct.blink::Referrer"* nonnull dereferenceable(16) %8, i1 zeroext true, %"class.blink::DOMWrapperWorld"* %161, i32 %167, i1 zeroext %169) #8
  %172 = getelementptr inbounds i8, i8* %170, i64 -4
  %173 = bitcast i8* %172 to i16*
  %174 = load atomic i16, i16* %173 monotonic, align 2
  %175 = or i16 %174, 1
  store atomic i16 %175, i16* %173 release, align 2
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %165
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #8
  br label %191

191:                                              ; preds = %190, %187, %165
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96) #8
  %192 = bitcast i8* %170 to %"class.blink::CSSValue"*
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %194, label %208, label %195

195:                                              ; preds = %191
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  br i1 %199, label %202, label %204

202:                                              ; preds = %195
  %203 = add i32 %201, -1
  store i32 %203, i32* %200, align 4
  br label %204

204:                                              ; preds = %202, %195
  %205 = phi i32 [ %203, %202 ], [ %201, %195 ]
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #8
  br label %208

208:                                              ; preds = %207, %204, %191
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #8
  br label %266

209:                                              ; preds = %113
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #8
  %210 = call %"class.WTF::StringImpl"* @_ZN5blink17css_parsing_utils21ConcatenateFamilyNameERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %10) #8
  store %"class.WTF::StringImpl"* %210, %"class.WTF::StringImpl"** %84, align 8
  %211 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %81, align 8
  %212 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %82, align 8
  %213 = icmp eq %"class.blink::CSSParserToken"* %211, %212
  br i1 %213, label %214, label %248

214:                                              ; preds = %209
  %215 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %73, align 8
  %216 = icmp eq %"class.blink::DOMWrapperWorld"* %215, null
  br i1 %216, label %219, label %217

217:                                              ; preds = %214
  %218 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %215, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %218) #8
  br label %219

219:                                              ; preds = %217, %214
  %220 = call zeroext i1 @_ZNK5blink16CSSParserContext13IsOriginCleanEv(%"class.blink::CSSParserContext"* %2) #8
  %221 = zext i1 %220 to i32
  %222 = load i8, i8* %74, align 8, !range !5
  %223 = icmp ne i8 %222, 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %87, align 8
  store i32 1, i32* %88, align 8
  %224 = call i8* @_ZN5blink8CSSValue14AllocateObjectINS_19CSSFontFaceSrcValueEEEPvm(i64 80) #8
  %225 = bitcast i8* %224 to %"class.blink::CSSFontFaceSrcValue"*
  call void @_ZN5blink19CSSFontFaceSrcValueC2ERKN3WTF6StringES4_RKNS_8ReferrerEb13scoped_refptrIKNS_15DOMWrapperWorldEENS_11OriginCleanEb(%"class.blink::CSSFontFaceSrcValue"* %225, %"class.WTF::String"* dereferenceable(8) %85, %"class.WTF::String"* nonnull dereferenceable(8) %13, %"struct.blink::Referrer"* nonnull dereferenceable(16) %9, i1 zeroext true, %"class.blink::DOMWrapperWorld"* %215, i32 %221, i1 zeroext %223) #8
  %226 = getelementptr inbounds i8, i8* %224, i64 -4
  %227 = bitcast i8* %226 to i16*
  %228 = load atomic i16, i16* %227 monotonic, align 2
  %229 = or i16 %228, 1
  store atomic i16 %229, i16* %227 release, align 2
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %231 = icmp eq %"class.WTF::StringImpl"* %230, null
  br i1 %231, label %245, label %232

232:                                              ; preds = %219
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load atomic i32, i32* %233 monotonic, align 4
  %235 = and i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 0
  %238 = load i32, i32* %237, align 4
  br i1 %236, label %239, label %241

239:                                              ; preds = %232
  %240 = add i32 %238, -1
  store i32 %240, i32* %237, align 4
  br label %241

241:                                              ; preds = %239, %232
  %242 = phi i32 [ %240, %239 ], [ %238, %232 ]
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %241
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %230) #8
  br label %245

245:                                              ; preds = %244, %241, %219
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #8
  %246 = bitcast i8* %224 to %"class.blink::CSSValue"*
  %247 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  br label %248

248:                                              ; preds = %245, %209
  %249 = phi %"class.WTF::StringImpl"* [ %210, %209 ], [ %247, %245 ]
  %250 = phi %"class.blink::CSSValue"* [ null, %209 ], [ %246, %245 ]
  %251 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %251, label %265, label %252

252:                                              ; preds = %248
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load atomic i32, i32* %253 monotonic, align 4
  %255 = and i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %258 = load i32, i32* %257, align 4
  br i1 %256, label %259, label %261

259:                                              ; preds = %252
  %260 = add i32 %258, -1
  store i32 %260, i32* %257, align 4
  br label %261

261:                                              ; preds = %259, %252
  %262 = phi i32 [ %260, %259 ], [ %258, %252 ]
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %265

264:                                              ; preds = %261
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %249) #8
  br label %265

265:                                              ; preds = %264, %261, %248
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #8
  br label %266

266:                                              ; preds = %265, %208, %144, %113
  %267 = phi %"class.blink::CSSValue"* [ %250, %265 ], [ %192, %208 ], [ null, %144 ], [ null, %113 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #8
  br label %411

268:                                              ; preds = %106
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #8
  call void @_ZN5blink17css_parsing_utils22ConsumeUrlAsStringViewERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.WTF::StringView"* nonnull sret %5, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.blink::CSSParserContext"* dereferenceable(176) %2) #8
  %269 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* nonnull %5) #8
  store %"class.WTF::StringImpl"* %269, %"class.WTF::StringImpl"** %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #8
  %270 = icmp eq %"class.WTF::StringImpl"* %269, null
  br i1 %270, label %409, label %271

271:                                              ; preds = %268
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %70) #8
  call void @_ZNK5blink16CSSParserContext11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %6, %"class.blink::CSSParserContext"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #8
  %272 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %73, align 8
  %273 = icmp eq %"class.blink::DOMWrapperWorld"* %272, null
  br i1 %273, label %276, label %274

274:                                              ; preds = %271
  %275 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %272, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %275) #8
  br label %276

276:                                              ; preds = %274, %271
  %277 = call zeroext i1 @_ZNK5blink16CSSParserContext13IsOriginCleanEv(%"class.blink::CSSParserContext"* %2) #8
  %278 = zext i1 %277 to i32
  %279 = load i8, i8* %74, align 8, !range !5
  %280 = icmp ne i8 %279, 0
  %281 = call i8* @_ZN5blink8CSSValue14AllocateObjectINS_19CSSFontFaceSrcValueEEEPvm(i64 80) #8
  %282 = bitcast i8* %281 to %"class.blink::CSSFontFaceSrcValue"*
  call void @_ZN5blink19CSSFontFaceSrcValueC2ERKN3WTF6StringES4_RKNS_8ReferrerEb13scoped_refptrIKNS_15DOMWrapperWorldEENS_11OriginCleanEb(%"class.blink::CSSFontFaceSrcValue"* %282, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %71, %"struct.blink::Referrer"* dereferenceable(16) %72, i1 zeroext false, %"class.blink::DOMWrapperWorld"* %272, i32 %278, i1 zeroext %280) #8
  %283 = getelementptr inbounds i8, i8* %281, i64 -4
  %284 = bitcast i8* %283 to i16*
  %285 = load atomic i16, i16* %284 monotonic, align 2
  %286 = or i16 %285, 1
  store atomic i16 %286, i16* %284 release, align 2
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %70) #8
  %287 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %288 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %16, align 8
  %289 = icmp ult %"class.blink::CSSParserToken"* %287, %288
  %290 = select i1 %289, %"class.blink::CSSParserToken"* %287, %"class.blink::CSSParserToken"* %19
  %291 = call i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* %290) #8
  %292 = icmp eq i32 %291, 773
  br i1 %292, label %295, label %293

293:                                              ; preds = %276
  %294 = bitcast i8* %281 to %"class.blink::CSSValue"*
  br label %392

295:                                              ; preds = %276
  %296 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink17css_parsing_utils15ConsumeFunctionERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1) #8
  %297 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %296, 0
  %298 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %296, 1
  %299 = icmp eq %"class.blink::CSSParserToken"* %297, %298
  %300 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %297, i64 1
  %301 = select i1 %299, %"class.blink::CSSParserToken"* %297, %"class.blink::CSSParserToken"* %300
  %302 = select i1 %299, %"class.blink::CSSParserToken"* %19, %"class.blink::CSSParserToken"* %297
  %303 = icmp ult %"class.blink::CSSParserToken"* %301, %298
  %304 = select i1 %303, %"class.blink::CSSParserToken"* %301, %"class.blink::CSSParserToken"* %19
  %305 = bitcast %"class.blink::CSSParserToken"* %304 to i32*
  %306 = load i32, i32* %305, align 8
  %307 = and i32 %306, 63
  %308 = icmp eq i32 %307, 17
  br i1 %308, label %309, label %318

309:                                              ; preds = %295, %309
  %310 = phi %"class.blink::CSSParserToken"* [ %311, %309 ], [ %301, %295 ]
  %311 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %310, i64 1
  %312 = icmp ult %"class.blink::CSSParserToken"* %311, %298
  %313 = select i1 %312, %"class.blink::CSSParserToken"* %311, %"class.blink::CSSParserToken"* %19
  %314 = bitcast %"class.blink::CSSParserToken"* %313 to i32*
  %315 = load i32, i32* %314, align 8
  %316 = and i32 %315, 63
  %317 = icmp eq i32 %316, 17
  br i1 %317, label %309, label %318

318:                                              ; preds = %309, %295
  %319 = phi %"class.blink::CSSParserToken"* [ %301, %295 ], [ %311, %309 ]
  %320 = bitcast %"class.blink::CSSParserToken"* %302 to i32*
  %321 = load i32, i32* %320, align 8
  %322 = and i32 %321, 63
  %323 = icmp eq i32 %322, 29
  %324 = icmp eq %"class.blink::CSSParserToken"* %319, %298
  %325 = and i1 %324, %323
  br i1 %325, label %326, label %392

326:                                              ; preds = %318
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #8
  %327 = and i32 %321, 262144
  %328 = icmp eq i32 %327, 0
  %329 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %302, i64 0, i32 2
  %330 = bitcast i8** %329 to i64*
  %331 = load i64, i64* %330, align 8, !noalias !6
  %332 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %302, i64 0, i32 1
  %333 = load i32, i32* %332, align 4, !noalias !6
  %334 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %335 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %336 = select i1 %328, i64 %334, i64 %335
  store i64 %336, i64* %76, align 8, !alias.scope !6
  store i64 %331, i64* %78, align 8, !alias.scope !6
  store i32 %333, i32* %79, align 8, !alias.scope !6
  %337 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* nonnull %7) #8
  %338 = getelementptr inbounds i8, i8* %281, i64 24
  %339 = icmp eq %"class.WTF::StringImpl"* %337, null
  br i1 %339, label %357, label %340

340:                                              ; preds = %326
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %337, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %342 = load atomic i32, i32* %341 monotonic, align 4
  %343 = and i32 %342, 2
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %357

345:                                              ; preds = %340
  %346 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %337, i64 0, i32 0
  %347 = load i32, i32* %346, align 4
  %348 = zext i32 %347 to i33
  %349 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %348, i33 1) #8
  %350 = extractvalue { i33, i1 } %349, 1
  %351 = extractvalue { i33, i1 } %349, 0
  %352 = icmp slt i33 %351, 0
  %353 = or i1 %350, %352
  br i1 %353, label %354, label %355, !prof !9

354:                                              ; preds = %345
  call void @llvm.trap() #8
  unreachable

355:                                              ; preds = %345
  %356 = trunc i33 %351 to i32
  store i32 %356, i32* %346, align 4
  br label %357

357:                                              ; preds = %355, %340, %326
  %358 = ptrtoint %"class.WTF::StringImpl"* %337 to i64
  %359 = bitcast i8* %338 to i64*
  %360 = bitcast i8* %338 to %"class.WTF::StringImpl"**
  %361 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %360, align 8
  store i64 %358, i64* %359, align 8
  %362 = icmp eq %"class.WTF::StringImpl"* %361, null
  br i1 %362, label %376, label %363

363:                                              ; preds = %357
  %364 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %361, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %365 = load atomic i32, i32* %364 monotonic, align 4
  %366 = and i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %361, i64 0, i32 0
  %369 = load i32, i32* %368, align 4
  br i1 %367, label %370, label %372

370:                                              ; preds = %363
  %371 = add i32 %369, -1
  store i32 %371, i32* %368, align 4
  br label %372

372:                                              ; preds = %370, %363
  %373 = phi i32 [ %371, %370 ], [ %369, %363 ]
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %375, label %376

375:                                              ; preds = %372
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %361) #8
  br label %376

376:                                              ; preds = %375, %372, %357
  br i1 %339, label %390, label %377

377:                                              ; preds = %376
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %337, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %379 = load atomic i32, i32* %378 monotonic, align 4
  %380 = and i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %337, i64 0, i32 0
  %383 = load i32, i32* %382, align 4
  br i1 %381, label %384, label %386

384:                                              ; preds = %377
  %385 = add i32 %383, -1
  store i32 %385, i32* %382, align 4
  br label %386

386:                                              ; preds = %384, %377
  %387 = phi i32 [ %385, %384 ], [ %383, %377 ]
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %389, label %390

389:                                              ; preds = %386
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %337) #8
  br label %390

390:                                              ; preds = %389, %386, %376
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #8
  %391 = bitcast i8* %281 to %"class.blink::CSSValue"*
  br label %392

392:                                              ; preds = %390, %318, %293
  %393 = phi %"class.blink::CSSValue"* [ null, %318 ], [ %391, %390 ], [ %294, %293 ]
  %394 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %395 = icmp eq %"class.WTF::StringImpl"* %394, null
  br i1 %395, label %409, label %396

396:                                              ; preds = %392
  %397 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %394, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %398 = load atomic i32, i32* %397 monotonic, align 4
  %399 = and i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %394, i64 0, i32 0
  %402 = load i32, i32* %401, align 4
  br i1 %400, label %403, label %405

403:                                              ; preds = %396
  %404 = add i32 %402, -1
  store i32 %404, i32* %401, align 4
  br label %405

405:                                              ; preds = %403, %396
  %406 = phi i32 [ %404, %403 ], [ %402, %396 ]
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %408, label %409

408:                                              ; preds = %405
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %394) #8
  br label %409

409:                                              ; preds = %408, %405, %392, %268
  %410 = phi %"class.blink::CSSValue"* [ %393, %392 ], [ %393, %405 ], [ %393, %408 ], [ null, %268 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #8
  br label %411

411:                                              ; preds = %409, %266
  %412 = phi %"class.blink::CSSValue"* [ %267, %266 ], [ %410, %409 ]
  %413 = icmp eq %"class.blink::CSSValue"* %412, null
  br i1 %413, label %438, label %414

414:                                              ; preds = %411
  %415 = load i32, i32* %101, align 4
  %416 = load i32, i32* %103, align 8
  %417 = icmp eq i32 %415, %416
  br i1 %417, label %432, label %418, !prof !9

418:                                              ; preds = %414
  %419 = load %"class.blink::Member"*, %"class.blink::Member"** %104, align 8
  %420 = zext i32 %415 to i64
  %421 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %419, i64 %420
  %422 = ptrtoint %"class.blink::CSSValue"* %412 to i64
  %423 = bitcast %"class.blink::Member"* %421 to i64*
  store atomic i64 %422, i64* %423 monotonic, align 8
  %424 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %429, label %426

426:                                              ; preds = %418
  %427 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %412, i64 0, i32 0
  %428 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %427) #8
  br label %429

429:                                              ; preds = %426, %418
  %430 = load i32, i32* %101, align 4
  %431 = add i32 %430, 1
  store i32 %431, i32* %101, align 4
  br label %433

432:                                              ; preds = %414
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.197"* %105, %"class.blink::CSSValue"* nonnull dereferenceable(3) %412) #8
  br label %433

433:                                              ; preds = %432, %429
  %434 = call zeroext i1 @_ZN5blink17css_parsing_utils31ConsumeCommaIncludingWhitespaceERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1) #8
  br i1 %434, label %435, label %438

435:                                              ; preds = %433
  %436 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %437 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %16, align 8
  br label %106

438:                                              ; preds = %411, %433
  %439 = phi %"class.blink::CSSValueList"* [ null, %411 ], [ %43, %433 ]
  %440 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %439, i64 0, i32 0
  br label %656

441:                                              ; preds = %34
  %442 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #8
  %443 = bitcast i8* %442 to %"class.blink::CSSValueList"*
  tail call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %443, i32 1) #8
  %444 = getelementptr inbounds i8, i8* %442, i64 -4
  %445 = bitcast i8* %444 to i16*
  %446 = load atomic i16, i16* %445 monotonic, align 2
  %447 = or i16 %446, 1
  store atomic i16 %447, i16* %445 release, align 2
  %448 = getelementptr inbounds i8, i8* %442, i64 8
  %449 = getelementptr inbounds i8, i8* %442, i64 20
  %450 = bitcast i8* %449 to i32*
  %451 = getelementptr inbounds i8, i8* %442, i64 16
  %452 = bitcast i8* %451 to i32*
  %453 = bitcast i8* %448 to %"class.blink::Member"**
  %454 = bitcast i8* %448 to %"class.WTF::Vector.197"*
  br label %455

455:                                              ; preds = %524, %441
  %456 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %457 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %16, align 8
  %458 = icmp eq %"class.blink::CSSParserToken"* %456, %457
  br i1 %458, label %461, label %459

459:                                              ; preds = %455
  %460 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %456, i64 1
  store %"class.blink::CSSParserToken"* %460, %"class.blink::CSSParserToken"** %14, align 8
  br label %461

461:                                              ; preds = %459, %455
  %462 = phi %"class.blink::CSSParserToken"* [ %460, %459 ], [ %456, %455 ]
  %463 = phi %"class.blink::CSSParserToken"* [ %456, %459 ], [ %19, %455 ]
  %464 = icmp ult %"class.blink::CSSParserToken"* %462, %457
  %465 = select i1 %464, %"class.blink::CSSParserToken"* %462, %"class.blink::CSSParserToken"* %19
  %466 = bitcast %"class.blink::CSSParserToken"* %465 to i32*
  %467 = load i32, i32* %466, align 8
  %468 = and i32 %467, 63
  %469 = icmp eq i32 %468, 17
  br i1 %469, label %470, label %479

470:                                              ; preds = %461, %470
  %471 = phi %"class.blink::CSSParserToken"* [ %472, %470 ], [ %462, %461 ]
  %472 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %471, i64 1
  store %"class.blink::CSSParserToken"* %472, %"class.blink::CSSParserToken"** %14, align 8
  %473 = icmp ult %"class.blink::CSSParserToken"* %472, %457
  %474 = select i1 %473, %"class.blink::CSSParserToken"* %472, %"class.blink::CSSParserToken"* %19
  %475 = bitcast %"class.blink::CSSParserToken"* %474 to i32*
  %476 = load i32, i32* %475, align 8
  %477 = and i32 %476, 63
  %478 = icmp eq i32 %477, 17
  br i1 %478, label %470, label %479

479:                                              ; preds = %470, %461
  %480 = bitcast %"class.blink::CSSParserToken"* %463 to i32*
  %481 = load i32, i32* %480, align 8
  %482 = and i32 %481, 63
  %483 = icmp eq i32 %482, 16
  br i1 %483, label %484, label %526

484:                                              ; preds = %479
  %485 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %463, i64 0, i32 3
  %486 = bitcast %union.anon* %485 to i32*
  %487 = load i32, i32* %486, align 8
  %488 = bitcast %union.anon* %485 to %struct.anon*
  %489 = getelementptr inbounds %struct.anon, %struct.anon* %488, i64 0, i32 1
  %490 = load i32, i32* %489, align 4
  %491 = icmp sgt i32 %487, %490
  br i1 %491, label %526, label %492

492:                                              ; preds = %484
  %493 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_8cssvalue20CSSUnicodeRangeValueEEEPvm(i64 12) #8
  store i8 0, i8* %493, align 1
  %494 = getelementptr inbounds i8, i8* %493, i64 1
  %495 = load i8, i8* %494, align 1
  %496 = and i8 %495, -8
  store i8 %496, i8* %494, align 1
  %497 = getelementptr inbounds i8, i8* %493, i64 2
  store i8 38, i8* %497, align 1
  %498 = getelementptr inbounds i8, i8* %493, i64 4
  %499 = bitcast i8* %498 to i32*
  store i32 %487, i32* %499, align 4
  %500 = getelementptr inbounds i8, i8* %493, i64 8
  %501 = bitcast i8* %500 to i32*
  store i32 %490, i32* %501, align 4
  %502 = getelementptr inbounds i8, i8* %493, i64 -4
  %503 = bitcast i8* %502 to i16*
  %504 = load atomic i16, i16* %503 monotonic, align 2
  %505 = or i16 %504, 1
  store atomic i16 %505, i16* %503 release, align 2
  %506 = load i32, i32* %450, align 4
  %507 = load i32, i32* %452, align 8
  %508 = icmp eq i32 %506, %507
  br i1 %508, label %522, label %509, !prof !9

509:                                              ; preds = %492
  %510 = load %"class.blink::Member"*, %"class.blink::Member"** %453, align 8
  %511 = zext i32 %506 to i64
  %512 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %510, i64 %511
  %513 = ptrtoint i8* %493 to i64
  %514 = bitcast %"class.blink::Member"* %512 to i64*
  store atomic i64 %513, i64* %514 monotonic, align 8
  %515 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %516 = icmp eq i32 %515, 0
  br i1 %516, label %519, label %517

517:                                              ; preds = %509
  %518 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %493) #8
  br label %519

519:                                              ; preds = %517, %509
  %520 = load i32, i32* %450, align 4
  %521 = add i32 %520, 1
  store i32 %521, i32* %450, align 4
  br label %524

522:                                              ; preds = %492
  %523 = bitcast i8* %493 to %"class.blink::CSSValue"*
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.197"* %454, %"class.blink::CSSValue"* dereferenceable(3) %523) #8
  br label %524

524:                                              ; preds = %522, %519
  %525 = tail call zeroext i1 @_ZN5blink17css_parsing_utils31ConsumeCommaIncludingWhitespaceERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1) #8
  br i1 %525, label %455, label %526

526:                                              ; preds = %479, %484, %524
  %527 = phi %"class.blink::CSSValueList"* [ %443, %524 ], [ null, %484 ], [ null, %479 ]
  %528 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %527, i64 0, i32 0
  br label %656

529:                                              ; preds = %34
  %530 = tail call %"class.blink::CSSIdentifierValue"* @_ZN5blink17css_parsing_utils12ConsumeIdentIJLNS_10CSSValueIDE405ELS2_379ELS2_85ELS2_86ELS2_87EEEEPNS_18CSSIdentifierValueERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1) #8
  %531 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %530, i64 0, i32 0
  br label %656

532:                                              ; preds = %34
  %533 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %2, i64 0, i32 3
  %534 = load i8, i8* %533, align 1
  store i8 4, i8* %533, align 1
  %535 = tail call %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils18ConsumeFontStretchERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.blink::CSSParserContext"* dereferenceable(176) %2) #8
  %536 = icmp eq i8* %533, null
  br i1 %536, label %656, label %537

537:                                              ; preds = %532
  store i8 %534, i8* %533, align 1
  br label %656

538:                                              ; preds = %34
  %539 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %2, i64 0, i32 3
  %540 = load i8, i8* %539, align 1
  store i8 4, i8* %539, align 1
  %541 = tail call %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils16ConsumeFontStyleERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.blink::CSSParserContext"* dereferenceable(176) %2) #8
  %542 = icmp eq i8* %539, null
  br i1 %542, label %656, label %543

543:                                              ; preds = %538
  store i8 %540, i8* %539, align 1
  br label %656

544:                                              ; preds = %34
  %545 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #8
  %546 = bitcast i8* %545 to %"class.blink::CSSValueList"*
  tail call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %546, i32 1) #8
  %547 = getelementptr inbounds i8, i8* %545, i64 -4
  %548 = bitcast i8* %547 to i16*
  %549 = load atomic i16, i16* %548 monotonic, align 2
  %550 = or i16 %549, 1
  store atomic i16 %550, i16* %548 release, align 2
  %551 = getelementptr inbounds i8, i8* %545, i64 8
  %552 = getelementptr inbounds i8, i8* %545, i64 20
  %553 = bitcast i8* %552 to i32*
  %554 = getelementptr inbounds i8, i8* %545, i64 16
  %555 = bitcast i8* %554 to i32*
  %556 = bitcast i8* %551 to %"class.blink::Member"**
  %557 = bitcast i8* %551 to %"class.WTF::Vector.197"*
  br label %558

558:                                              ; preds = %594, %544
  %559 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %560 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %16, align 8
  %561 = icmp ult %"class.blink::CSSParserToken"* %559, %560
  %562 = select i1 %561, %"class.blink::CSSParserToken"* %559, %"class.blink::CSSParserToken"* %19
  %563 = tail call i32 @_ZNK5blink14CSSParserToken2IdEv(%"class.blink::CSSParserToken"* %562) #8
  %564 = icmp eq i32 %563, 24
  br i1 %564, label %565, label %571

565:                                              ; preds = %558
  %566 = load i32, i32* %553, align 4
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %568, label %664

568:                                              ; preds = %565
  %569 = tail call %"class.blink::CSSIdentifierValue"* @_ZN5blink17css_parsing_utils12ConsumeIdentERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1) #8
  %570 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %569, i64 0, i32 0
  br label %656

571:                                              ; preds = %558
  %572 = tail call %"class.blink::CSSIdentifierValue"* @_ZN5blink17css_parsing_utils23ConsumeFontVariantCSS21ERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1) #8
  %573 = icmp eq %"class.blink::CSSIdentifierValue"* %572, null
  br i1 %573, label %594, label %574

574:                                              ; preds = %571
  %575 = load i32, i32* %553, align 4
  %576 = load i32, i32* %555, align 8
  %577 = icmp eq i32 %575, %576
  br i1 %577, label %592, label %578, !prof !9

578:                                              ; preds = %574
  %579 = load %"class.blink::Member"*, %"class.blink::Member"** %556, align 8
  %580 = zext i32 %575 to i64
  %581 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %579, i64 %580
  %582 = ptrtoint %"class.blink::CSSIdentifierValue"* %572 to i64
  %583 = bitcast %"class.blink::Member"* %581 to i64*
  store atomic i64 %582, i64* %583 monotonic, align 8
  %584 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %589, label %586

586:                                              ; preds = %578
  %587 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %572, i64 0, i32 0, i32 0
  %588 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %587) #8
  br label %589

589:                                              ; preds = %586, %578
  %590 = load i32, i32* %553, align 4
  %591 = add i32 %590, 1
  store i32 %591, i32* %553, align 4
  br label %594

592:                                              ; preds = %574
  %593 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %572, i64 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.197"* %557, %"class.blink::CSSValue"* dereferenceable(3) %593) #8
  br label %594

594:                                              ; preds = %592, %589, %571
  %595 = tail call zeroext i1 @_ZN5blink17css_parsing_utils31ConsumeCommaIncludingWhitespaceERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1) #8
  br i1 %595, label %558, label %596

596:                                              ; preds = %594
  %597 = load i32, i32* %553, align 4
  %598 = icmp eq i32 %597, 0
  %599 = bitcast i8* %545 to %"class.blink::CSSValue"*
  br i1 %598, label %664, label %656

600:                                              ; preds = %34
  %601 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %2, i64 0, i32 3
  %602 = load i8, i8* %601, align 1
  store i8 4, i8* %601, align 1
  %603 = tail call %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils17ConsumeFontWeightERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.blink::CSSParserContext"* dereferenceable(176) %2) #8
  %604 = icmp eq i8* %601, null
  br i1 %604, label %656, label %605

605:                                              ; preds = %600
  store i8 %602, i8* %601, align 1
  br label %656

606:                                              ; preds = %34
  %607 = tail call %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils26ConsumeFontFeatureSettingsERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.blink::CSSParserContext"* dereferenceable(176) %2) #8
  br label %656

608:                                              ; preds = %34, %34, %34
  %609 = icmp ult %"class.blink::CSSParserToken"* %35, %17
  %610 = select i1 %609, %"class.blink::CSSParserToken"* %35, %"class.blink::CSSParserToken"* %19
  %611 = bitcast %"class.blink::CSSParserToken"* %610 to i32*
  %612 = load i32, i32* %611, align 8
  %613 = and i32 %612, 63
  %614 = icmp eq i32 %613, 0
  br i1 %614, label %615, label %647

615:                                              ; preds = %608
  %616 = tail call i32 @_ZNK5blink14CSSParserToken2IdEv(%"class.blink::CSSParserToken"* %610) #8
  %617 = icmp eq i32 %616, 56
  br i1 %617, label %618, label %647

618:                                              ; preds = %615
  %619 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %620 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %16, align 8
  %621 = icmp eq %"class.blink::CSSParserToken"* %619, %620
  br i1 %621, label %624, label %622

622:                                              ; preds = %618
  %623 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %619, i64 1
  store %"class.blink::CSSParserToken"* %623, %"class.blink::CSSParserToken"** %14, align 8
  br label %624

624:                                              ; preds = %622, %618
  %625 = phi %"class.blink::CSSParserToken"* [ %623, %622 ], [ %619, %618 ]
  %626 = phi %"class.blink::CSSParserToken"* [ %619, %622 ], [ %19, %618 ]
  %627 = icmp ult %"class.blink::CSSParserToken"* %625, %620
  %628 = select i1 %627, %"class.blink::CSSParserToken"* %625, %"class.blink::CSSParserToken"* %19
  %629 = bitcast %"class.blink::CSSParserToken"* %628 to i32*
  %630 = load i32, i32* %629, align 8
  %631 = and i32 %630, 63
  %632 = icmp eq i32 %631, 17
  br i1 %632, label %633, label %642

633:                                              ; preds = %624, %633
  %634 = phi %"class.blink::CSSParserToken"* [ %635, %633 ], [ %625, %624 ]
  %635 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %634, i64 1
  store %"class.blink::CSSParserToken"* %635, %"class.blink::CSSParserToken"** %14, align 8
  %636 = icmp ult %"class.blink::CSSParserToken"* %635, %620
  %637 = select i1 %636, %"class.blink::CSSParserToken"* %635, %"class.blink::CSSParserToken"* %19
  %638 = bitcast %"class.blink::CSSParserToken"* %637 to i32*
  %639 = load i32, i32* %638, align 8
  %640 = and i32 %639, 63
  %641 = icmp eq i32 %640, 17
  br i1 %641, label %633, label %642

642:                                              ; preds = %633, %624
  %643 = tail call i32 @_ZNK5blink14CSSParserToken2IdEv(%"class.blink::CSSParserToken"* %626) #8
  %644 = tail call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 %643) #8
  %645 = icmp eq %"class.blink::CSSIdentifierValue"* %644, null
  %646 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %644, i64 0, i32 0
  br i1 %645, label %647, label %656

647:                                              ; preds = %642, %615, %608
  %648 = tail call %"class.blink::CSSPrimitiveValue"* @_ZN5blink17css_parsing_utils14ConsumePercentERNS_19CSSParserTokenRangeERKNS_16CSSParserContextENS_10ValueRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.blink::CSSParserContext"* dereferenceable(176) %2, i32 1) #8
  %649 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %648, i64 0, i32 0
  br label %656

650:                                              ; preds = %34
  %651 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase37is_css_font_face_size_adjust_enabled_E, align 1, !range !5
  %652 = icmp eq i8 %651, 0
  br i1 %652, label %664, label %653

653:                                              ; preds = %650
  %654 = tail call %"class.blink::CSSPrimitiveValue"* @_ZN5blink17css_parsing_utils14ConsumePercentERNS_19CSSParserTokenRangeERKNS_16CSSParserContextENS_10ValueRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.blink::CSSParserContext"* dereferenceable(176) %2, i32 1) #8
  %655 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %654, i64 0, i32 0
  br label %656

656:                                              ; preds = %596, %647, %642, %605, %600, %568, %543, %538, %537, %532, %653, %606, %529, %526, %438, %39
  %657 = phi %"class.blink::CSSValue"* [ %655, %653 ], [ %607, %606 ], [ %531, %529 ], [ %528, %526 ], [ %440, %438 ], [ %40, %39 ], [ %535, %532 ], [ %535, %537 ], [ %541, %538 ], [ %541, %543 ], [ %599, %596 ], [ %570, %568 ], [ %603, %600 ], [ %603, %605 ], [ %649, %647 ], [ %646, %642 ]
  %658 = icmp eq %"class.blink::CSSValue"* %657, null
  br i1 %658, label %664, label %659

659:                                              ; preds = %656
  %660 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %661 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %16, align 8
  %662 = icmp eq %"class.blink::CSSParserToken"* %660, %661
  %663 = select i1 %662, %"class.blink::CSSValue"* %657, %"class.blink::CSSValue"* null
  ret %"class.blink::CSSValue"* %663

664:                                              ; preds = %650, %596, %565, %34, %656, %36
  ret %"class.blink::CSSValue"* null
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils20ConsumeGenericFamilyERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils17ConsumeFamilyNameERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils18ConsumeFontStretchERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils16ConsumeFontStyleERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #2

declare %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils17ConsumeFontWeightERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #2

declare %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils26ConsumeFontFeatureSettingsERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #2

declare %"class.blink::CSSPrimitiveValue"* @_ZN5blink17css_parsing_utils14ConsumePercentERNS_19CSSParserTokenRangeERKNS_16CSSParserContextENS_10ValueRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZN5blink22AtRuleDescriptorParser23ParseFontFaceDescriptorENS_18AtRuleDescriptorIDERKN3WTF6StringERKNS_16CSSParserContextE(i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::CSSTokenizer", align 8
  %5 = alloca %"class.WTF::Vector.213", align 8
  %6 = alloca %"class.blink::CSSParserTokenRange", align 8
  %7 = bitcast %"class.blink::CSSTokenizer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 88, i1 false)
  call void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"* nonnull %4, %"class.WTF::String"* dereferenceable(8) %1, i32 0) #8
  %8 = bitcast %"class.WTF::Vector.213"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 784, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 784, i1 false)
  call void @_ZN5blink12CSSTokenizer13TokenizeToEOFEv(%"class.WTF::Vector.213"* nonnull sret %5, %"class.blink::CSSTokenizer"* nonnull %4) #8
  %9 = bitcast %"class.blink::CSSParserTokenRange"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %6, i64 0, i32 1
  %11 = bitcast %"class.WTF::Vector.213"* %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.blink::CSSParserTokenRange"* %6 to i64*
  store i64 %12, i64* %13, align 8
  %14 = inttoptr i64 %12 to %"class.blink::CSSParserToken"*
  %15 = getelementptr inbounds %"class.WTF::Vector.213", %"class.WTF::Vector.213"* %5, i64 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %14, i64 %17
  store %"class.blink::CSSParserToken"* %18, %"class.blink::CSSParserToken"** %10, align 8
  %19 = call %"class.blink::CSSValue"* @_ZN5blink22AtRuleDescriptorParser23ParseFontFaceDescriptorENS_18AtRuleDescriptorIDERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(i32 %0, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %6, %"class.blink::CSSParserContext"* dereferenceable(176) %2)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  %20 = load i32, i32* %15, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22, !prof !9

22:                                               ; preds = %3
  store i32 0, i32* %15, align 4
  br label %23

23:                                               ; preds = %22, %3
  %24 = getelementptr inbounds %"class.WTF::Vector.213", %"class.WTF::Vector.213"* %5, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %24, align 8
  %26 = getelementptr inbounds %"class.WTF::Vector.213", %"class.WTF::Vector.213"* %5, i64 0, i32 0, i32 1, i64 0
  %27 = bitcast i8* %26 to %"class.blink::CSSParserToken"*
  %28 = icmp eq %"class.blink::CSSParserToken"* %25, %27
  br i1 %28, label %31, label %29, !prof !10

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::Vector.213", %"class.WTF::Vector.213"* %5, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.214"* nonnull %30, %"class.blink::CSSParserToken"* %25) #8
  br label %31

31:                                               ; preds = %23, %29
  call void @llvm.lifetime.end.p0i8(i64 784, i8* nonnull %8) #8
  call void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %7) #8
  ret %"class.blink::CSSValue"* %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #2

declare void @_ZN5blink12CSSTokenizer13TokenizeToEOFEv(%"class.WTF::Vector.213"* sret, %"class.blink::CSSTokenizer"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.208", %"class.WTF::Vector.208"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %40, label %6, !prof !10

6:                                                ; preds = %1
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %38, label %11, !prof !9

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %12
  br label %14

14:                                               ; preds = %32, %11
  %15 = phi %"class.WTF::String"* [ %33, %32 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #8
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 1
  %34 = icmp eq %"class.WTF::String"* %33, %13
  br i1 %34, label %35, label %14

35:                                               ; preds = %32
  store i32 0, i32* %8, align 4
  %36 = bitcast %"class.WTF::Vector.208"* %2 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %6
  %39 = phi i8* [ %37, %35 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %3, align 8
  br label %40

40:                                               ; preds = %1, %38
  %41 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %46, label %45, !prof !9

45:                                               ; preds = %40
  store i32 0, i32* %42, align 4
  br label %46

46:                                               ; preds = %45, %40
  %47 = getelementptr inbounds %"class.WTF::Vector.203", %"class.WTF::Vector.203"* %41, i64 0, i32 0, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i32* %48, %50
  br i1 %51, label %54, label %52, !prof !10

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.WTF::Vector.203", %"class.WTF::Vector.203"* %41, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.204"* %53, i32* %48) #8
  br label %54

54:                                               ; preds = %46, %52
  store i32* null, i32** %47, align 8
  %55 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 0, i32 2, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #8
  br label %71

71:                                               ; preds = %54, %67, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZN5blink22AtRuleDescriptorParser24ParseFontFaceDeclarationERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 0
  %4 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 1
  %6 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %5, align 8
  %7 = icmp eq %"class.blink::CSSParserToken"* %4, %6
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  br label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %4, i64 1
  store %"class.blink::CSSParserToken"* %11, %"class.blink::CSSParserToken"** %3, align 8
  %12 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  br label %13

13:                                               ; preds = %10, %8
  %14 = phi %"class.blink::CSSParserToken"* [ %9, %8 ], [ %12, %10 ]
  %15 = phi %"class.blink::CSSParserToken"* [ %4, %8 ], [ %11, %10 ]
  %16 = phi %"class.blink::CSSParserToken"* [ %9, %8 ], [ %4, %10 ]
  %17 = icmp ult %"class.blink::CSSParserToken"* %15, %6
  %18 = select i1 %17, %"class.blink::CSSParserToken"* %15, %"class.blink::CSSParserToken"* %14
  %19 = bitcast %"class.blink::CSSParserToken"* %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 63
  %22 = icmp eq i32 %21, 17
  br i1 %22, label %23, label %32

23:                                               ; preds = %13, %23
  %24 = phi %"class.blink::CSSParserToken"* [ %25, %23 ], [ %15, %13 ]
  %25 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %24, i64 1
  store %"class.blink::CSSParserToken"* %25, %"class.blink::CSSParserToken"** %3, align 8
  %26 = icmp ult %"class.blink::CSSParserToken"* %25, %6
  %27 = select i1 %26, %"class.blink::CSSParserToken"* %25, %"class.blink::CSSParserToken"* %14
  %28 = bitcast %"class.blink::CSSParserToken"* %27 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 63
  %31 = icmp eq i32 %30, 17
  br i1 %31, label %23, label %32

32:                                               ; preds = %23, %13
  %33 = tail call i32 @_ZNK5blink14CSSParserToken25ParseAsAtRuleDescriptorIDEv(%"class.blink::CSSParserToken"* %16) #8
  %34 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %3, align 8
  %35 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %5, align 8
  %36 = icmp eq %"class.blink::CSSParserToken"* %34, %35
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %34, i64 1
  store %"class.blink::CSSParserToken"* %38, %"class.blink::CSSParserToken"** %3, align 8
  br label %39

39:                                               ; preds = %32, %37
  %40 = phi %"class.blink::CSSParserToken"* [ %34, %37 ], [ %14, %32 ]
  %41 = bitcast %"class.blink::CSSParserToken"* %40 to i32*
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 63
  %44 = icmp eq i32 %43, 20
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = tail call %"class.blink::CSSValue"* @_ZN5blink22AtRuleDescriptorParser23ParseFontFaceDescriptorENS_18AtRuleDescriptorIDERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(i32 %33, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %0, %"class.blink::CSSParserContext"* dereferenceable(176) %1)
  br label %47

47:                                               ; preds = %39, %45
  %48 = phi %"class.blink::CSSValue"* [ %46, %45 ], [ null, %39 ]
  ret %"class.blink::CSSValue"* %48
}

declare i32 @_ZNK5blink14CSSParserToken25ParseAsAtRuleDescriptorIDEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZN5blink22AtRuleDescriptorParser25ParseAtPropertyDescriptorENS_18AtRuleDescriptorIDERKNS_17CSSTokenizedValueERKNS_16CSSParserContextE(i32, %"struct.blink::CSSTokenizedValue"* dereferenceable(40), %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::CSSParserTokenRange", align 8
  %5 = bitcast %"class.blink::CSSParserTokenRange"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %4, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %4, i64 0, i32 1
  %8 = bitcast %"struct.blink::CSSTokenizedValue"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %8, i64 16, i1 false)
  switch i32 %0, label %103 [
    i32 35, label %9
    i32 14, label %31
    i32 13, label %35
  ]

9:                                                ; preds = %3
  %10 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %11 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %12 = icmp ult %"class.blink::CSSParserToken"* %10, %11
  %13 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %14 = select i1 %12, %"class.blink::CSSParserToken"* %10, %"class.blink::CSSParserToken"* %13
  %15 = bitcast %"class.blink::CSSParserToken"* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 63
  %18 = icmp eq i32 %17, 17
  br i1 %18, label %19, label %28

19:                                               ; preds = %9, %19
  %20 = phi %"class.blink::CSSParserToken"* [ %21, %19 ], [ %10, %9 ]
  %21 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %20, i64 1
  store %"class.blink::CSSParserToken"* %21, %"class.blink::CSSParserToken"** %6, align 8
  %22 = icmp ult %"class.blink::CSSParserToken"* %21, %11
  %23 = select i1 %22, %"class.blink::CSSParserToken"* %21, %"class.blink::CSSParserToken"* %13
  %24 = bitcast %"class.blink::CSSParserToken"* %23 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 63
  %27 = icmp eq i32 %26, 17
  br i1 %27, label %19, label %28

28:                                               ; preds = %19, %9
  %29 = call %"class.blink::CSSStringValue"* @_ZN5blink17css_parsing_utils13ConsumeStringERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %4) #8
  %30 = getelementptr inbounds %"class.blink::CSSStringValue", %"class.blink::CSSStringValue"* %29, i64 0, i32 0
  br label %95

31:                                               ; preds = %3
  %32 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %33 = tail call %"class.blink::CSSCustomPropertyDeclaration"* @_ZN5blink17CSSVariableParser21ParseDeclarationValueERKN3WTF12AtomicStringERKNS_17CSSTokenizedValueEbRKNS_16CSSParserContextE(%"class.WTF::AtomicString"* dereferenceable(8) %32, %"struct.blink::CSSTokenizedValue"* dereferenceable(40) %1, i1 zeroext false, %"class.blink::CSSParserContext"* dereferenceable(176) %2) #8
  %34 = getelementptr inbounds %"class.blink::CSSCustomPropertyDeclaration", %"class.blink::CSSCustomPropertyDeclaration"* %33, i64 0, i32 0
  br label %103

35:                                               ; preds = %3
  %36 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %37 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %38 = icmp ult %"class.blink::CSSParserToken"* %36, %37
  %39 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %40 = select i1 %38, %"class.blink::CSSParserToken"* %36, %"class.blink::CSSParserToken"* %39
  %41 = bitcast %"class.blink::CSSParserToken"* %40 to i32*
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 63
  %44 = icmp eq i32 %43, 17
  br i1 %44, label %45, label %56

45:                                               ; preds = %35, %45
  %46 = phi %"class.blink::CSSParserToken"* [ %47, %45 ], [ %36, %35 ]
  %47 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %46, i64 1
  store %"class.blink::CSSParserToken"* %47, %"class.blink::CSSParserToken"** %6, align 8
  %48 = icmp ult %"class.blink::CSSParserToken"* %47, %37
  %49 = select i1 %48, %"class.blink::CSSParserToken"* %47, %"class.blink::CSSParserToken"* %39
  %50 = bitcast %"class.blink::CSSParserToken"* %49 to i32*
  %51 = load i32, i32* %50, align 8
  %52 = and i32 %51, 63
  %53 = icmp eq i32 %52, 17
  br i1 %53, label %45, label %54

54:                                               ; preds = %45
  %55 = bitcast %"class.blink::CSSParserToken"* %49 to i32*
  br label %56

56:                                               ; preds = %54, %35
  %57 = phi i32* [ %41, %35 ], [ %55, %54 ]
  %58 = phi %"class.blink::CSSParserToken"* [ %40, %35 ], [ %49, %54 ]
  %59 = phi %"class.blink::CSSParserToken"* [ %36, %35 ], [ %47, %54 ]
  %60 = load i32, i32* %57, align 8
  %61 = and i32 %60, 63
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %92

63:                                               ; preds = %56
  %64 = tail call i32 @_ZNK5blink14CSSParserToken2IdEv(%"class.blink::CSSParserToken"* %58) #8
  %65 = add i32 %64, -845
  %66 = icmp ult i32 %65, 2
  br i1 %66, label %67, label %92

67:                                               ; preds = %63
  %68 = icmp eq %"class.blink::CSSParserToken"* %59, %37
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %59, i64 1
  store %"class.blink::CSSParserToken"* %70, %"class.blink::CSSParserToken"** %6, align 8
  br label %71

71:                                               ; preds = %69, %67
  %72 = phi %"class.blink::CSSParserToken"* [ %70, %69 ], [ %37, %67 ]
  %73 = phi %"class.blink::CSSParserToken"* [ %59, %69 ], [ %39, %67 ]
  %74 = icmp ult %"class.blink::CSSParserToken"* %72, %37
  %75 = select i1 %74, %"class.blink::CSSParserToken"* %72, %"class.blink::CSSParserToken"* %39
  %76 = bitcast %"class.blink::CSSParserToken"* %75 to i32*
  %77 = load i32, i32* %76, align 8
  %78 = and i32 %77, 63
  %79 = icmp eq i32 %78, 17
  br i1 %79, label %80, label %89

80:                                               ; preds = %71, %80
  %81 = phi %"class.blink::CSSParserToken"* [ %82, %80 ], [ %72, %71 ]
  %82 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %81, i64 1
  store %"class.blink::CSSParserToken"* %82, %"class.blink::CSSParserToken"** %6, align 8
  %83 = icmp ult %"class.blink::CSSParserToken"* %82, %37
  %84 = select i1 %83, %"class.blink::CSSParserToken"* %82, %"class.blink::CSSParserToken"* %39
  %85 = bitcast %"class.blink::CSSParserToken"* %84 to i32*
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, 63
  %88 = icmp eq i32 %87, 17
  br i1 %88, label %80, label %89

89:                                               ; preds = %80, %71
  %90 = tail call i32 @_ZNK5blink14CSSParserToken2IdEv(%"class.blink::CSSParserToken"* %73) #8
  %91 = tail call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 %90) #8
  br label %92

92:                                               ; preds = %56, %63, %89
  %93 = phi %"class.blink::CSSIdentifierValue"* [ %91, %89 ], [ null, %56 ], [ null, %63 ]
  %94 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %93, i64 0, i32 0
  br label %95

95:                                               ; preds = %92, %28
  %96 = phi %"class.blink::CSSValue"* [ %94, %92 ], [ %30, %28 ]
  %97 = icmp eq %"class.blink::CSSValue"* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %95
  %99 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %100 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %101 = icmp eq %"class.blink::CSSParserToken"* %99, %100
  %102 = select i1 %101, %"class.blink::CSSValue"* %96, %"class.blink::CSSValue"* null
  br label %103

103:                                              ; preds = %3, %98, %95, %31
  %104 = phi %"class.blink::CSSValue"* [ %34, %31 ], [ null, %95 ], [ %102, %98 ], [ null, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8
  ret %"class.blink::CSSValue"* %104
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.blink::CSSStringValue"* @_ZN5blink17css_parsing_utils13ConsumeStringERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::CSSCustomPropertyDeclaration"* @_ZN5blink17CSSVariableParser21ParseDeclarationValueERKN3WTF12AtomicStringERKNS_17CSSTokenizedValueEbRKNS_16CSSParserContextE(%"class.WTF::AtomicString"* dereferenceable(8), %"struct.blink::CSSTokenizedValue"* dereferenceable(40), i1 zeroext, %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZN5blink22AtRuleDescriptorParser31ParseAtScrollTimelineDescriptorENS_18AtRuleDescriptorIDERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(i32, %"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 0
  %5 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 1
  %7 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %8 = icmp ult %"class.blink::CSSParserToken"* %5, %7
  %9 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %10 = select i1 %8, %"class.blink::CSSParserToken"* %5, %"class.blink::CSSParserToken"* %9
  %11 = bitcast %"class.blink::CSSParserToken"* %10 to i32*
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 63
  %14 = icmp eq i32 %13, 17
  br i1 %14, label %15, label %24

15:                                               ; preds = %3, %15
  %16 = phi %"class.blink::CSSParserToken"* [ %17, %15 ], [ %5, %3 ]
  %17 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %16, i64 1
  store %"class.blink::CSSParserToken"* %17, %"class.blink::CSSParserToken"** %4, align 8
  %18 = icmp ult %"class.blink::CSSParserToken"* %17, %7
  %19 = select i1 %18, %"class.blink::CSSParserToken"* %17, %"class.blink::CSSParserToken"* %9
  %20 = bitcast %"class.blink::CSSParserToken"* %19 to i32*
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 63
  %23 = icmp eq i32 %22, 17
  br i1 %23, label %15, label %24

24:                                               ; preds = %15, %3
  %25 = phi %"class.blink::CSSParserToken"* [ %5, %3 ], [ %17, %15 ]
  switch i32 %0, label %88 [
    i32 29, label %26
    i32 24, label %32
    i32 32, label %35
    i32 4, label %35
    i32 37, label %37
  ]

26:                                               ; preds = %24
  %27 = tail call %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils23ConsumeSelectorFunctionERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1) #8
  %28 = icmp eq %"class.blink::CSSValue"* %27, null
  br i1 %28, label %29, label %82

29:                                               ; preds = %26
  %30 = tail call %"class.blink::CSSIdentifierValue"* @_ZN5blink17css_parsing_utils12ConsumeIdentIJLNS_10CSSValueIDE405ELS2_3EEEEPNS_18CSSIdentifierValueERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1) #8
  %31 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %30, i64 0, i32 0
  br label %79

32:                                               ; preds = %24
  %33 = tail call %"class.blink::CSSIdentifierValue"* @_ZN5blink17css_parsing_utils12ConsumeIdentIJLNS_10CSSValueIDE405ELS2_379ELS2_378ELS2_511ELS2_512EEEEPNS_18CSSIdentifierValueERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1) #8
  %34 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %33, i64 0, i32 0
  br label %79

35:                                               ; preds = %24, %24
  %36 = tail call %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils19ConsumeScrollOffsetERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.blink::CSSParserContext"* dereferenceable(176) %2) #8
  br label %79

37:                                               ; preds = %24
  %38 = icmp ult %"class.blink::CSSParserToken"* %25, %7
  %39 = select i1 %38, %"class.blink::CSSParserToken"* %25, %"class.blink::CSSParserToken"* %9
  %40 = bitcast %"class.blink::CSSParserToken"* %39 to i32*
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 63
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %76

44:                                               ; preds = %37
  %45 = tail call i32 @_ZNK5blink14CSSParserToken2IdEv(%"class.blink::CSSParserToken"* %39) #8
  %46 = icmp eq i32 %45, 405
  br i1 %46, label %47, label %76

47:                                               ; preds = %44
  %48 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %49 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %50 = icmp eq %"class.blink::CSSParserToken"* %48, %49
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %48, i64 1
  store %"class.blink::CSSParserToken"* %52, %"class.blink::CSSParserToken"** %4, align 8
  br label %53

53:                                               ; preds = %51, %47
  %54 = phi %"class.blink::CSSParserToken"* [ %52, %51 ], [ %48, %47 ]
  %55 = phi %"class.blink::CSSParserToken"* [ %48, %51 ], [ %9, %47 ]
  %56 = icmp ult %"class.blink::CSSParserToken"* %54, %49
  %57 = select i1 %56, %"class.blink::CSSParserToken"* %54, %"class.blink::CSSParserToken"* %9
  %58 = bitcast %"class.blink::CSSParserToken"* %57 to i32*
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, 63
  %61 = icmp eq i32 %60, 17
  br i1 %61, label %62, label %71

62:                                               ; preds = %53, %62
  %63 = phi %"class.blink::CSSParserToken"* [ %64, %62 ], [ %54, %53 ]
  %64 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %63, i64 1
  store %"class.blink::CSSParserToken"* %64, %"class.blink::CSSParserToken"** %4, align 8
  %65 = icmp ult %"class.blink::CSSParserToken"* %64, %49
  %66 = select i1 %65, %"class.blink::CSSParserToken"* %64, %"class.blink::CSSParserToken"* %9
  %67 = bitcast %"class.blink::CSSParserToken"* %66 to i32*
  %68 = load i32, i32* %67, align 8
  %69 = and i32 %68, 63
  %70 = icmp eq i32 %69, 17
  br i1 %70, label %62, label %71

71:                                               ; preds = %62, %53
  %72 = tail call i32 @_ZNK5blink14CSSParserToken2IdEv(%"class.blink::CSSParserToken"* %55) #8
  %73 = tail call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 %72) #8
  %74 = icmp eq %"class.blink::CSSIdentifierValue"* %73, null
  %75 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %73, i64 0, i32 0
  br i1 %74, label %76, label %79

76:                                               ; preds = %71, %44, %37
  %77 = tail call %"class.blink::CSSPrimitiveValue"* @_ZN5blink17css_parsing_utils11ConsumeTimeERNS_19CSSParserTokenRangeERKNS_16CSSParserContextENS_10ValueRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.blink::CSSParserContext"* dereferenceable(176) %2, i32 0) #8
  %78 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %77, i64 0, i32 0
  br label %79

79:                                               ; preds = %76, %71, %29, %35, %32
  %80 = phi %"class.blink::CSSValue"* [ %36, %35 ], [ %34, %32 ], [ %31, %29 ], [ %78, %76 ], [ %75, %71 ]
  %81 = icmp eq %"class.blink::CSSValue"* %80, null
  br i1 %81, label %88, label %82

82:                                               ; preds = %26, %79
  %83 = phi %"class.blink::CSSValue"* [ %80, %79 ], [ %27, %26 ]
  %84 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %85 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %86 = icmp eq %"class.blink::CSSParserToken"* %84, %85
  %87 = select i1 %86, %"class.blink::CSSValue"* %83, %"class.blink::CSSValue"* null
  ret %"class.blink::CSSValue"* %87

88:                                               ; preds = %24, %79
  ret %"class.blink::CSSValue"* null
}

declare %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils19ConsumeScrollOffsetERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink22AtRuleDescriptorParser11ParseAtRuleENS_13StyleRuleBase8RuleTypeENS_18AtRuleDescriptorIDERKNS_17CSSTokenizedValueERKNS_16CSSParserContextERNS_10HeapVectorINS_16CSSPropertyValueELj256EEE(i32, i32, %"struct.blink::CSSTokenizedValue"* dereferenceable(40), %"class.blink::CSSParserContext"* dereferenceable(176), %"class.blink::HeapVector.225"* dereferenceable(6160)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::CSSParserTokenRange", align 8
  %7 = alloca %"class.blink::CSSPropertyValue", align 8
  %8 = alloca %"class.blink::CSSPropertyName", align 8
  %9 = bitcast %"class.blink::CSSParserTokenRange"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = bitcast %"struct.blink::CSSTokenizedValue"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 16, i1 false) #8
  switch i32 %0, label %19 [
    i32 4, label %11
    i32 6, label %13
    i32 11, label %15
    i32 12, label %17
    i32 0, label %20
    i32 10, label %20
    i32 1, label %20
    i32 2, label %20
    i32 3, label %20
    i32 5, label %20
    i32 7, label %20
    i32 8, label %20
    i32 9, label %20
    i32 13, label %20
    i32 14, label %20
  ]

11:                                               ; preds = %5
  %12 = call %"class.blink::CSSValue"* @_ZN5blink22AtRuleDescriptorParser23ParseFontFaceDescriptorENS_18AtRuleDescriptorIDERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(i32 %1, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %6, %"class.blink::CSSParserContext"* dereferenceable(176) %3) #8
  br label %21

13:                                               ; preds = %5
  %14 = tail call %"class.blink::CSSValue"* @_ZN5blink22AtRuleDescriptorParser25ParseAtPropertyDescriptorENS_18AtRuleDescriptorIDERKNS_17CSSTokenizedValueERKNS_16CSSParserContextE(i32 %1, %"struct.blink::CSSTokenizedValue"* dereferenceable(40) %2, %"class.blink::CSSParserContext"* dereferenceable(176) %3) #8
  br label %21

15:                                               ; preds = %5
  %16 = call %"class.blink::CSSValue"* @_ZN5blink22AtRuleDescriptorParser29ParseAtCounterStyleDescriptorENS_18AtRuleDescriptorIDERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(i32 %1, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %6, %"class.blink::CSSParserContext"* dereferenceable(176) %3) #8
  br label %21

17:                                               ; preds = %5
  %18 = call %"class.blink::CSSValue"* @_ZN5blink22AtRuleDescriptorParser31ParseAtScrollTimelineDescriptorENS_18AtRuleDescriptorIDERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(i32 %1, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %6, %"class.blink::CSSParserContext"* dereferenceable(176) %3) #8
  br label %21

19:                                               ; preds = %5
  unreachable

20:                                               ; preds = %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  br label %82

21:                                               ; preds = %11, %13, %15, %17
  %22 = phi %"class.blink::CSSValue"* [ %18, %17 ], [ %16, %15 ], [ %14, %13 ], [ %12, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  %23 = icmp eq %"class.blink::CSSValue"* %22, null
  br i1 %23, label %82, label %24

24:                                               ; preds = %21
  %25 = call i32 @_ZN5blink33AtRuleDescriptorIDAsCSSPropertyIDENS_18AtRuleDescriptorIDE(i32 %1) #8
  %26 = bitcast %"class.blink::CSSPropertyValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #8
  %27 = bitcast %"class.blink::CSSPropertyName"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %8, i64 0, i32 0
  store i32 %25, i32* %28, align 8
  %29 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %29, align 8
  %30 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %7, i64 0, i32 0
  call void @_ZN5blink24CSSPropertyValueMetadataC1ERKNS_15CSSPropertyNameEbibb(%"struct.blink::CSSPropertyValueMetadata"* nonnull %30, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %8, i1 zeroext false, i32 0, i1 zeroext false, i1 zeroext false) #8
  %31 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %7, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::CSSValue"* %22, %"class.blink::CSSValue"** %31, align 8
  %32 = getelementptr inbounds %"class.blink::HeapVector.225", %"class.blink::HeapVector.225"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.blink::HeapVector.225", %"class.blink::HeapVector.225"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %33, %35
  br i1 %36, label %46, label %37, !prof !9

37:                                               ; preds = %24
  %38 = getelementptr inbounds %"class.blink::HeapVector.225", %"class.blink::HeapVector.225"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %38, align 8
  %40 = zext i32 %33 to i64
  %41 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %39, i64 %40
  %42 = bitcast %"class.blink::CSSPropertyValue"* %41 to i8*
  %43 = call %"class.blink::CSSPropertyValue"* @_ZN3WTF15ConstructTraitsIN5blink16CSSPropertyValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %42, %"class.blink::CSSPropertyValue"* nonnull dereferenceable(24) %7) #8
  %44 = load i32, i32* %32, align 4
  %45 = add i32 %44, 1
  store i32 %45, i32* %32, align 4
  br label %48

46:                                               ; preds = %24
  %47 = getelementptr inbounds %"class.blink::HeapVector.225", %"class.blink::HeapVector.225"* %4, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.228"* %47, %"class.blink::CSSPropertyValue"* nonnull dereferenceable(24) %7) #8
  br label %48

48:                                               ; preds = %37, %46
  %49 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #8
  br label %65

65:                                               ; preds = %48, %61, %64
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #8
  br label %81

81:                                               ; preds = %65, %77, %80
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #8
  br label %82

82:                                               ; preds = %20, %21, %81
  %83 = phi i1 [ true, %81 ], [ false, %21 ], [ false, %20 ]
  ret i1 %83
}

declare i32 @_ZN5blink33AtRuleDescriptorIDAsCSSPropertyIDENS_18AtRuleDescriptorIDE(i32) local_unnamed_addr #2

declare i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink17css_parsing_utils31ConsumeCommaIncludingWhitespaceERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !9

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 7, i32 %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0))
  ret i8* %21
}

declare void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"*, i32) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #3 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #8
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %21, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !9

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #8
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSValue"*
  tail call void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"*) local_unnamed_addr #2

declare { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink17css_parsing_utils15ConsumeFunctionERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16CSSParserContext13IsOriginCleanEv(%"class.blink::CSSParserContext"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17css_parsing_utils21ConcatenateFamilyNameERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_19CSSFontFaceSrcValueEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !9

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 7, i32 %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19CSSFontFaceSrcValueC2ERKN3WTF6StringES4_RKNS_8ReferrerEb13scoped_refptrIKNS_15DOMWrapperWorldEENS_11OriginCleanEb(%"class.blink::CSSFontFaceSrcValue"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"struct.blink::Referrer"* dereferenceable(16), i1 zeroext, %"class.blink::DOMWrapperWorld"*, i32, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %9 = ptrtoint %"class.blink::DOMWrapperWorld"* %5 to i64
  %10 = zext i1 %4 to i8
  %11 = zext i1 %7 to i8
  %12 = getelementptr inbounds %"class.blink::CSSFontFaceSrcValue", %"class.blink::CSSFontFaceSrcValue"* %0, i64 0, i32 0, i32 0
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %"class.blink::CSSFontFaceSrcValue", %"class.blink::CSSFontFaceSrcValue"* %0, i64 0, i32 0, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = and i8 %14, -8
  store i8 %15, i8* %13, align 1
  %16 = getelementptr inbounds %"class.blink::CSSFontFaceSrcValue", %"class.blink::CSSFontFaceSrcValue"* %0, i64 0, i32 0, i32 2
  store i8 28, i8* %16, align 1
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::CSSFontFaceSrcValue", %"class.blink::CSSFontFaceSrcValue"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %19, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %8
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #8
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !9

35:                                               ; preds = %26
  tail call void @llvm.trap() #8
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %8, %21, %36
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::CSSFontFaceSrcValue", %"class.blink::CSSFontFaceSrcValue"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %41, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %42, label %60, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i33
  %52 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %51, i33 1) #8
  %53 = extractvalue { i33, i1 } %52, 1
  %54 = extractvalue { i33, i1 } %52, 0
  %55 = icmp slt i33 %54, 0
  %56 = or i1 %53, %55
  br i1 %56, label %57, label %58, !prof !9

57:                                               ; preds = %48
  tail call void @llvm.trap() #8
  unreachable

58:                                               ; preds = %48
  %59 = trunc i33 %54 to i32
  store i32 %59, i32* %49, align 4
  br label %60

60:                                               ; preds = %38, %43, %58
  %61 = getelementptr inbounds %"class.blink::CSSFontFaceSrcValue", %"class.blink::CSSFontFaceSrcValue"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %61, align 8
  %62 = getelementptr inbounds %"struct.blink::Referrer", %"struct.blink::Referrer"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::CSSFontFaceSrcValue", %"class.blink::CSSFontFaceSrcValue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %64, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #8
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !9

80:                                               ; preds = %71
  tail call void @llvm.trap() #8
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %81, %66, %60
  %84 = getelementptr inbounds %"class.blink::CSSFontFaceSrcValue", %"class.blink::CSSFontFaceSrcValue"* %0, i64 0, i32 4, i32 1
  %85 = getelementptr inbounds %"struct.blink::Referrer", %"struct.blink::Referrer"* %3, i64 0, i32 1
  %86 = load i32, i32* %85, align 8
  store i32 %86, i32* %84, align 8
  %87 = getelementptr inbounds %"class.blink::CSSFontFaceSrcValue", %"class.blink::CSSFontFaceSrcValue"* %0, i64 0, i32 5
  store i8 %10, i8* %87, align 8
  %88 = getelementptr inbounds %"class.blink::CSSFontFaceSrcValue", %"class.blink::CSSFontFaceSrcValue"* %0, i64 0, i32 6
  %89 = bitcast %class.scoped_refptr.4* %88 to i64*
  store i64 %9, i64* %89, align 8
  %90 = getelementptr inbounds %"class.blink::CSSFontFaceSrcValue", %"class.blink::CSSFontFaceSrcValue"* %0, i64 0, i32 7
  store i32 %6, i32* %90, align 8
  %91 = getelementptr inbounds %"class.blink::CSSFontFaceSrcValue", %"class.blink::CSSFontFaceSrcValue"* %0, i64 0, i32 8
  store i8 %11, i8* %91, align 4
  %92 = getelementptr inbounds %"class.blink::CSSFontFaceSrcValue", %"class.blink::CSSFontFaceSrcValue"* %0, i64 0, i32 9, i32 0, i32 0
  store %"class.blink::CSSFontFaceSrcValue::FontResourceHelper"* null, %"class.blink::CSSFontFaceSrcValue::FontResourceHelper"** %92, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink17css_parsing_utils22ConsumeUrlAsStringViewERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.WTF::StringView"* sret, %"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #2

declare void @_ZNK5blink16CSSParserContext11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.blink::CSSParserContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.197"*, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.197"* %0, i32 %5) #8
  %6 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member"*, %"class.blink::Member"** %6, align 8
  %8 = load i32, i32* %3, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %7, i64 %9
  %11 = ptrtoint %"class.blink::CSSValue"* %1 to i64
  %12 = bitcast %"class.blink::Member"* %10 to i64*
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #8
  br label %18

18:                                               ; preds = %2, %15
  %19 = load i32, i32* %3, align 4
  %20 = add i32 %19, 1
  store i32 %20, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.197"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.197"* %0, i32 %27)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.197"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 4
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %14) #8
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #8
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = bitcast %"class.WTF::Vector.197"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #8
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.197"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 4, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"class.blink::Member"*
  %33 = icmp eq %"class.blink::Member"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 5
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %37) #8
  %39 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %40 = icmp eq %"class.blink::Member"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 32, %34 ]
  %43 = phi %"class.blink::Member"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"class.blink::Member"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #8
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = lshr i64 %42, 3
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !9

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #8
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !5
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #8
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #8
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.197"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.197"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %43

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member"*, %"class.blink::Member"** %5, align 8
  %7 = icmp eq %"class.blink::Member"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::Member"*
  %10 = icmp eq %"class.blink::Member"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.197"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %102

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector.197"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %23, align 8
  %24 = icmp eq i8* %8, null
  %25 = bitcast %"class.blink::Member"* %6 to i8*
  %26 = shl nuw nsw i64 %19, 3
  br i1 %24, label %42, label %27, !prof !9

27:                                               ; preds = %16
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %8, i8* nonnull %25, i64 %26) #8
  %28 = icmp eq i32 %18, 0
  br i1 %28, label %42, label %29

29:                                               ; preds = %27, %39
  %30 = phi i64 [ %32, %39 ], [ %19, %27 ]
  %31 = phi %"class.blink::Member"* [ %40, %39 ], [ %9, %27 ]
  %32 = add nsw i64 %30, -1
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::Member"* %31 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #8
  br label %39

39:                                               ; preds = %35, %29
  %40 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %31, i64 1
  %41 = icmp eq i64 %32, 0
  br i1 %41, label %42, label %29

42:                                               ; preds = %39, %16, %27
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %25, i64 %26) #8
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.198"* %20, %"class.blink::Member"* %6) #8
  br label %102

43:                                               ; preds = %2
  %44 = zext i32 %1 to i64
  %45 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %44) #8
  %46 = lshr i64 %45, 3
  %47 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %46) #8
  %48 = ptrtoint %"class.blink::HeapVectorBacking"* %47 to i64
  %49 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::Member"*, %"class.blink::Member"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 0, i32 2
  %52 = icmp ne %"class.blink::HeapVectorBacking"* %47, null
  %53 = icmp ne %"class.blink::Member"* %50, null
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %81, !prof !10

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 1, i64 0
  %57 = bitcast i8* %56 to %"class.blink::Member"*
  %58 = icmp ne %"class.blink::Member"* %50, %57
  %59 = load i32, i32* %51, align 4
  %60 = zext i32 %59 to i64
  %61 = bitcast %"class.blink::Member"* %50 to i8*
  %62 = shl nuw nsw i64 %60, 3
  %63 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %63, i8* nonnull %61, i64 %62) #8
  %64 = icmp eq i32 %59, 0
  %65 = or i1 %58, %64
  br i1 %65, label %81, label %66

66:                                               ; preds = %55
  %67 = bitcast %"class.blink::HeapVectorBacking"* %47 to %"class.blink::Member"*
  br label %68

68:                                               ; preds = %66, %78
  %69 = phi i64 [ %71, %78 ], [ %60, %66 ]
  %70 = phi %"class.blink::Member"* [ %79, %78 ], [ %67, %66 ]
  %71 = add nsw i64 %69, -1
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.blink::Member"* %70 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #8
  br label %78

78:                                               ; preds = %74, %68
  %79 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %70, i64 1
  %80 = icmp eq i64 %71, 0
  br i1 %80, label %81, label %68

81:                                               ; preds = %78, %43, %55
  %82 = bitcast %"class.WTF::Vector.197"* %0 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = load i32, i32* %51, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %83, i64 %86) #8
  %87 = load %"class.blink::Member"*, %"class.blink::Member"** %49, align 8
  %88 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 1, i64 0
  %89 = bitcast i8* %88 to %"class.blink::Member"*
  %90 = icmp eq %"class.blink::Member"* %87, %89
  br i1 %90, label %93, label %91, !prof !10

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.198"* %92, %"class.blink::Member"* %87) #8
  br label %93

93:                                               ; preds = %81, %91
  %94 = bitcast %"class.WTF::Vector.197"* %0 to i64*
  store atomic i64 %48, i64* %94 monotonic, align 8
  %95 = trunc i64 %46 to i32
  %96 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %95, i32* %96, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  %101 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #8
  br label %102

102:                                              ; preds = %99, %93, %42, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !9

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_8CSSValueEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !9

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::CSSValue"*
  %35 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %34, i64 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.198"*, %"class.blink::Member"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"class.blink::Member"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #8
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_8cssvalue20CSSUnicodeRangeValueEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !9

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 7, i32 %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSIdentifierValue"* @_ZN5blink17css_parsing_utils12ConsumeIdentIJLNS_10CSSValueIDE405ELS2_379ELS2_85ELS2_86ELS2_87EEEEPNS_18CSSIdentifierValueERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %2 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 0
  %3 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 1
  %5 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %6 = icmp ult %"class.blink::CSSParserToken"* %3, %5
  %7 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %8 = select i1 %6, %"class.blink::CSSParserToken"* %3, %"class.blink::CSSParserToken"* %7
  %9 = bitcast %"class.blink::CSSParserToken"* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 63
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %1
  %14 = tail call i32 @_ZNK5blink14CSSParserToken2IdEv(%"class.blink::CSSParserToken"* %8) #8
  switch i32 %14, label %42 [
    i32 405, label %15
    i32 379, label %15
    i32 87, label %15
    i32 86, label %15
    i32 85, label %15
  ]

15:                                               ; preds = %13, %13, %13, %13, %13
  %16 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %2, align 8
  %17 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %18 = icmp eq %"class.blink::CSSParserToken"* %16, %17
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %16, i64 1
  store %"class.blink::CSSParserToken"* %20, %"class.blink::CSSParserToken"** %2, align 8
  br label %21

21:                                               ; preds = %15, %19
  %22 = phi %"class.blink::CSSParserToken"* [ %20, %19 ], [ %16, %15 ]
  %23 = phi %"class.blink::CSSParserToken"* [ %16, %19 ], [ %7, %15 ]
  %24 = icmp ult %"class.blink::CSSParserToken"* %22, %17
  %25 = select i1 %24, %"class.blink::CSSParserToken"* %22, %"class.blink::CSSParserToken"* %7
  %26 = bitcast %"class.blink::CSSParserToken"* %25 to i32*
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 63
  %29 = icmp eq i32 %28, 17
  br i1 %29, label %30, label %39

30:                                               ; preds = %21, %30
  %31 = phi %"class.blink::CSSParserToken"* [ %32, %30 ], [ %22, %21 ]
  %32 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %31, i64 1
  store %"class.blink::CSSParserToken"* %32, %"class.blink::CSSParserToken"** %2, align 8
  %33 = icmp ult %"class.blink::CSSParserToken"* %32, %17
  %34 = select i1 %33, %"class.blink::CSSParserToken"* %32, %"class.blink::CSSParserToken"* %7
  %35 = bitcast %"class.blink::CSSParserToken"* %34 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 63
  %38 = icmp eq i32 %37, 17
  br i1 %38, label %30, label %39

39:                                               ; preds = %30, %21
  %40 = tail call i32 @_ZNK5blink14CSSParserToken2IdEv(%"class.blink::CSSParserToken"* %23) #8
  %41 = tail call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 %40) #8
  br label %42

42:                                               ; preds = %13, %1, %39
  %43 = phi %"class.blink::CSSIdentifierValue"* [ %41, %39 ], [ null, %1 ], [ null, %13 ]
  ret %"class.blink::CSSIdentifierValue"* %43
}

declare i32 @_ZNK5blink14CSSParserToken2IdEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #2

declare %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32) local_unnamed_addr #2

declare %"class.blink::CSSIdentifierValue"* @_ZN5blink17css_parsing_utils12ConsumeIdentERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::CSSIdentifierValue"* @_ZN5blink17css_parsing_utils23ConsumeFontVariantCSS21ERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.214"*, %"class.blink::CSSParserToken"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"class.blink::CSSParserToken"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #8
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.204"*, i32*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #8
  ret void
}

declare %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils23ConsumeSelectorFunctionERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSIdentifierValue"* @_ZN5blink17css_parsing_utils12ConsumeIdentIJLNS_10CSSValueIDE405ELS2_3EEEEPNS_18CSSIdentifierValueERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %2 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 0
  %3 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 1
  %5 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %6 = icmp ult %"class.blink::CSSParserToken"* %3, %5
  %7 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %8 = select i1 %6, %"class.blink::CSSParserToken"* %3, %"class.blink::CSSParserToken"* %7
  %9 = bitcast %"class.blink::CSSParserToken"* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 63
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %1
  %14 = tail call i32 @_ZNK5blink14CSSParserToken2IdEv(%"class.blink::CSSParserToken"* %8) #8
  switch i32 %14, label %42 [
    i32 405, label %15
    i32 3, label %15
  ]

15:                                               ; preds = %13, %13
  %16 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %2, align 8
  %17 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %18 = icmp eq %"class.blink::CSSParserToken"* %16, %17
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %16, i64 1
  store %"class.blink::CSSParserToken"* %20, %"class.blink::CSSParserToken"** %2, align 8
  br label %21

21:                                               ; preds = %15, %19
  %22 = phi %"class.blink::CSSParserToken"* [ %20, %19 ], [ %16, %15 ]
  %23 = phi %"class.blink::CSSParserToken"* [ %16, %19 ], [ %7, %15 ]
  %24 = icmp ult %"class.blink::CSSParserToken"* %22, %17
  %25 = select i1 %24, %"class.blink::CSSParserToken"* %22, %"class.blink::CSSParserToken"* %7
  %26 = bitcast %"class.blink::CSSParserToken"* %25 to i32*
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 63
  %29 = icmp eq i32 %28, 17
  br i1 %29, label %30, label %39

30:                                               ; preds = %21, %30
  %31 = phi %"class.blink::CSSParserToken"* [ %32, %30 ], [ %22, %21 ]
  %32 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %31, i64 1
  store %"class.blink::CSSParserToken"* %32, %"class.blink::CSSParserToken"** %2, align 8
  %33 = icmp ult %"class.blink::CSSParserToken"* %32, %17
  %34 = select i1 %33, %"class.blink::CSSParserToken"* %32, %"class.blink::CSSParserToken"* %7
  %35 = bitcast %"class.blink::CSSParserToken"* %34 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 63
  %38 = icmp eq i32 %37, 17
  br i1 %38, label %30, label %39

39:                                               ; preds = %30, %21
  %40 = tail call i32 @_ZNK5blink14CSSParserToken2IdEv(%"class.blink::CSSParserToken"* %23) #8
  %41 = tail call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 %40) #8
  br label %42

42:                                               ; preds = %13, %1, %39
  %43 = phi %"class.blink::CSSIdentifierValue"* [ %41, %39 ], [ null, %1 ], [ null, %13 ]
  ret %"class.blink::CSSIdentifierValue"* %43
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSIdentifierValue"* @_ZN5blink17css_parsing_utils12ConsumeIdentIJLNS_10CSSValueIDE405ELS2_379ELS2_378ELS2_511ELS2_512EEEEPNS_18CSSIdentifierValueERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %2 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 0
  %3 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 1
  %5 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %6 = icmp ult %"class.blink::CSSParserToken"* %3, %5
  %7 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %8 = select i1 %6, %"class.blink::CSSParserToken"* %3, %"class.blink::CSSParserToken"* %7
  %9 = bitcast %"class.blink::CSSParserToken"* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 63
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %1
  %14 = tail call i32 @_ZNK5blink14CSSParserToken2IdEv(%"class.blink::CSSParserToken"* %8) #8
  switch i32 %14, label %42 [
    i32 405, label %15
    i32 379, label %15
    i32 512, label %15
    i32 511, label %15
    i32 378, label %15
  ]

15:                                               ; preds = %13, %13, %13, %13, %13
  %16 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %2, align 8
  %17 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %18 = icmp eq %"class.blink::CSSParserToken"* %16, %17
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %16, i64 1
  store %"class.blink::CSSParserToken"* %20, %"class.blink::CSSParserToken"** %2, align 8
  br label %21

21:                                               ; preds = %15, %19
  %22 = phi %"class.blink::CSSParserToken"* [ %20, %19 ], [ %16, %15 ]
  %23 = phi %"class.blink::CSSParserToken"* [ %16, %19 ], [ %7, %15 ]
  %24 = icmp ult %"class.blink::CSSParserToken"* %22, %17
  %25 = select i1 %24, %"class.blink::CSSParserToken"* %22, %"class.blink::CSSParserToken"* %7
  %26 = bitcast %"class.blink::CSSParserToken"* %25 to i32*
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 63
  %29 = icmp eq i32 %28, 17
  br i1 %29, label %30, label %39

30:                                               ; preds = %21, %30
  %31 = phi %"class.blink::CSSParserToken"* [ %32, %30 ], [ %22, %21 ]
  %32 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %31, i64 1
  store %"class.blink::CSSParserToken"* %32, %"class.blink::CSSParserToken"** %2, align 8
  %33 = icmp ult %"class.blink::CSSParserToken"* %32, %17
  %34 = select i1 %33, %"class.blink::CSSParserToken"* %32, %"class.blink::CSSParserToken"* %7
  %35 = bitcast %"class.blink::CSSParserToken"* %34 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 63
  %38 = icmp eq i32 %37, 17
  br i1 %38, label %30, label %39

39:                                               ; preds = %30, %21
  %40 = tail call i32 @_ZNK5blink14CSSParserToken2IdEv(%"class.blink::CSSParserToken"* %23) #8
  %41 = tail call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 %40) #8
  br label %42

42:                                               ; preds = %13, %1, %39
  %43 = phi %"class.blink::CSSIdentifierValue"* [ %41, %39 ], [ null, %1 ], [ null, %13 ]
  ret %"class.blink::CSSIdentifierValue"* %43
}

declare %"class.blink::CSSPrimitiveValue"* @_ZN5blink17css_parsing_utils11ConsumeTimeERNS_19CSSParserTokenRangeERKNS_16CSSParserContextENS_10ValueRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176), i32) local_unnamed_addr #2

declare %"class.blink::CSSValue"* @_ZN5blink22AtRuleDescriptorParser29ParseAtCounterStyleDescriptorENS_18AtRuleDescriptorIDERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(i32, %"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #2

declare void @_ZN5blink24CSSPropertyValueMetadataC1ERKNS_15CSSPropertyNameEbibb(%"struct.blink::CSSPropertyValueMetadata"*, %"class.blink::CSSPropertyName"* dereferenceable(16), i1 zeroext, i32, i1 zeroext, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValue"* @_ZN3WTF15ConstructTraitsIN5blink16CSSPropertyValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8*, %"class.blink::CSSPropertyValue"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"class.blink::CSSPropertyValue"*
  %4 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::CSSPropertyValue"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast i8* %0 to i64*
  store i64 %6, i64* %7, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 8
  %9 = bitcast i8* %8 to i16*
  %10 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %1, i64 0, i32 0, i32 1
  %11 = load i16, i16* %10, align 8
  store i16 %11, i16* %9, align 8
  %12 = getelementptr inbounds i8, i8* %0, i64 16
  %13 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %1, i64 0, i32 1
  %14 = bitcast %"class.blink::Member"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %53, label %19

19:                                               ; preds = %2
  %20 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %21 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %20, i64 0, i32 1
  %22 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %21) #8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %26, !prof !9

24:                                               ; preds = %19
  %25 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %21, i8* %25) #8
  br label %26

26:                                               ; preds = %24, %19
  %27 = phi i8* [ %25, %24 ], [ %22, %19 ]
  %28 = bitcast i8* %27 to %"class.blink::ThreadState"**
  %29 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 9
  %31 = load i8, i8* %30, align 1, !range !5
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %53, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 13
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %34, align 8
  %37 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %38 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %37, align 8
  %39 = load atomic i64, i64* %16 monotonic, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %38, i64 0, i32 0, i32 0
  %43 = inttoptr i64 %39 to %"class.blink::CSSValue"*
  %44 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %43, i64 0, i32 0
  %45 = bitcast %"class.blink::MarkingVisitor"* %38 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %42, i8* %44, i8* %44, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #8
  %49 = load i64, i64* %34, align 8
  br label %50

50:                                               ; preds = %41, %33
  %51 = phi i64 [ %36, %33 ], [ %49, %41 ]
  %52 = add i64 %51, -1
  store i64 %52, i64* %34, align 8
  br label %53

53:                                               ; preds = %2, %26, %50
  ret %"class.blink::CSSPropertyValue"* %3
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.228"*, %"class.blink::CSSPropertyValue"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %6, align 8
  %8 = icmp ugt %"class.blink::CSSPropertyValue"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %7, i64 %10
  %12 = icmp ugt %"class.blink::CSSPropertyValue"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.228"* %0, i32 %5) #8
  %14 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::CSSPropertyValue"* %1 to i64
  %17 = ptrtoint %"class.blink::CSSPropertyValue"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 24
  tail call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.228"* %0, i32 %5) #8
  %20 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::CSSPropertyValue"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::CSSPropertyValue"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %23, i64 %26
  %28 = bitcast %"class.blink::CSSPropertyValue"* %27 to i8*
  %29 = tail call %"class.blink::CSSPropertyValue"* @_ZN3WTF15ConstructTraitsIN5blink16CSSPropertyValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %28, %"class.blink::CSSPropertyValue"* dereferenceable(24) %24)
  %30 = load i32, i32* %3, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.228"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.228"* %0, i32 %27)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.228"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %8, align 8
  %10 = icmp eq %"class.blink::CSSPropertyValue"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 256
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_16CSSPropertyValueEEEmm(i64 %14) #8
  %16 = udiv i64 %15, 24
  %17 = tail call %"class.blink::HeapVectorBacking.463"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %16) #8
  %18 = ptrtoint %"class.blink::HeapVectorBacking.463"* %17 to i64
  %19 = bitcast %"class.WTF::Vector.228"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking.463", %"class.blink::HeapVectorBacking.463"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #8
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.228"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 256, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"class.blink::CSSPropertyValue"*
  %33 = icmp eq %"class.blink::CSSPropertyValue"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 257
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_16CSSPropertyValueEEEmm(i64 %37) #8
  %39 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %8, align 8
  %40 = icmp eq %"class.blink::CSSPropertyValue"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 6144, %34 ]
  %43 = phi %"class.blink::CSSPropertyValue"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"class.blink::CSSPropertyValue"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #8
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = udiv i64 %42, 24
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !9

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #8
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !5
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #8
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #8
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.228"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.228"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 257
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %5, align 8
  %7 = icmp eq %"class.blink::CSSPropertyValue"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::CSSPropertyValue"*
  %10 = icmp eq %"class.blink::CSSPropertyValue"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.228"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 256, i32* %15, align 8
  br label %73

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector.228"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 256, i32* %23, align 8
  %24 = icmp eq i8* %8, null
  %25 = bitcast %"class.blink::CSSPropertyValue"* %6 to i8*
  %26 = mul nuw nsw i64 %19, 24
  br i1 %24, label %28, label %27, !prof !9

27:                                               ; preds = %16
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %8, i8* nonnull %25, i64 %26) #8
  tail call void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"class.blink::CSSPropertyValue"* nonnull %9, i64 %19) #8
  br label %28

28:                                               ; preds = %16, %27
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %25, i64 %26) #8
  tail call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.229"* %20, %"class.blink::CSSPropertyValue"* nonnull %6) #8
  br label %73

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_16CSSPropertyValueEEEmm(i64 %30) #8
  %32 = udiv i64 %31, 24
  %33 = tail call %"class.blink::HeapVectorBacking.463"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %32) #8
  %34 = bitcast %"class.blink::HeapVectorBacking.463"* %33 to %"class.blink::CSSPropertyValue"*
  %35 = ptrtoint %"class.blink::HeapVectorBacking.463"* %33 to i64
  %36 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %36, align 8
  %38 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0, i32 0, i32 2
  %39 = icmp ne %"class.blink::HeapVectorBacking.463"* %33, null
  %40 = icmp ne %"class.blink::CSSPropertyValue"* %37, null
  %41 = and i1 %39, %40
  br i1 %41, label %42, label %52, !prof !10

42:                                               ; preds = %29
  %43 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = bitcast i8* %43 to %"class.blink::CSSPropertyValue"*
  %45 = icmp eq %"class.blink::CSSPropertyValue"* %37, %44
  %46 = load i32, i32* %38, align 4
  %47 = zext i32 %46 to i64
  %48 = bitcast %"class.blink::CSSPropertyValue"* %37 to i8*
  %49 = mul nuw nsw i64 %47, 24
  %50 = getelementptr inbounds %"class.blink::HeapVectorBacking.463", %"class.blink::HeapVectorBacking.463"* %33, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %50, i8* nonnull %48, i64 %49) #8
  br i1 %45, label %51, label %52

51:                                               ; preds = %42
  tail call void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"class.blink::CSSPropertyValue"* nonnull %34, i64 %47) #8
  br label %52

52:                                               ; preds = %29, %42, %51
  %53 = bitcast %"class.WTF::Vector.228"* %0 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = load i32, i32* %38, align 4
  %56 = zext i32 %55 to i64
  %57 = mul nuw nsw i64 %56, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %54, i64 %57) #8
  %58 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %36, align 8
  %59 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0, i32 1, i64 0
  %60 = bitcast i8* %59 to %"class.blink::CSSPropertyValue"*
  %61 = icmp eq %"class.blink::CSSPropertyValue"* %58, %60
  br i1 %61, label %64, label %62, !prof !10

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.229"* %63, %"class.blink::CSSPropertyValue"* %58) #8
  br label %64

64:                                               ; preds = %52, %62
  %65 = bitcast %"class.WTF::Vector.228"* %0 to i64*
  store atomic i64 %35, i64* %65 monotonic, align 8
  %66 = trunc i64 %32 to i32
  %67 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %66, i32* %67, align 8
  %68 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.blink::HeapVectorBacking.463", %"class.blink::HeapVectorBacking.463"* %33, i64 0, i32 0
  %72 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %71) #8
  br label %73

73:                                               ; preds = %70, %64, %28, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_16CSSPropertyValueEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 5592405
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 5592405) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = mul i64 %0, 24
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.463"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = mul i64 %0, 24
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.463"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.463"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !9

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([142 x i8], [142 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_16CSSPropertyValueENS_12VectorTraitsIS3_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #8
  br i1 %28, label %69, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::CSSPropertyValue"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !9

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = udiv i64 %49, 24
  %51 = icmp ugt i64 %49, 23
  br i1 %51, label %52, label %69

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %54

54:                                               ; preds = %66, %52
  %55 = phi i64 [ 0, %52 ], [ %67, %66 ]
  %56 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %30, i64 %55, i32 1
  %57 = bitcast %"class.blink::Member"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %58 to %"class.blink::CSSValue"*
  %62 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %61, i64 0, i32 0
  %63 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %64 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, i64 5
  %65 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %64, align 8
  tail call void %65(%"class.blink::Visitor"* %0, i8* %62, i8* %62, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %66

66:                                               ; preds = %60, %54
  %67 = add nuw nsw i64 %55, 1
  %68 = icmp ult i64 %67, %50
  br i1 %68, label %54, label %69

69:                                               ; preds = %66, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !9

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 24
  %22 = bitcast i8* %0 to %"class.blink::CSSPropertyValue"*
  %23 = icmp ugt i64 %20, 23
  br i1 %23, label %24, label %47

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %22, i64 %25, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #8
  br label %43

43:                                               ; preds = %42, %39, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"class.blink::CSSPropertyValue"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::CSSPropertyValue"* %0 to i8*
  %4 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !9

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #8
  br label %13

13:                                               ; preds = %6, %11
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 9
  %18 = load i8, i8* %17, align 1, !range !5
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %52, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 13
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %21, align 8
  %24 = icmp eq i64 %1, 0
  br i1 %24, label %49, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  br label %27

27:                                               ; preds = %44, %25
  %28 = phi i8* [ %3, %25 ], [ %45, %44 ]
  %29 = phi i64 [ %1, %25 ], [ %30, %44 ]
  %30 = add i64 %29, -1
  %31 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %26, align 8
  %32 = getelementptr inbounds i8, i8* %28, i64 16
  %33 = bitcast i8* %32 to i64*
  %34 = load atomic i64, i64* %33 monotonic, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %31, i64 0, i32 0, i32 0
  %38 = inttoptr i64 %34 to %"class.blink::CSSValue"*
  %39 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %38, i64 0, i32 0
  %40 = bitcast %"class.blink::MarkingVisitor"* %31 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %41 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, i64 5
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, align 8
  tail call void %43(%"class.blink::Visitor"* %37, i8* %39, i8* %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %44

44:                                               ; preds = %27, %36
  %45 = getelementptr inbounds i8, i8* %28, i64 24
  %46 = icmp eq i64 %30, 0
  br i1 %46, label %47, label %27

47:                                               ; preds = %44
  %48 = load i64, i64* %21, align 8
  br label %49

49:                                               ; preds = %47, %20
  %50 = phi i64 [ %48, %47 ], [ %23, %20 ]
  %51 = add i64 %50, -1
  store i64 %51, i64* %21, align 8
  br label %52

52:                                               ; preds = %2, %13, %49
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.229"*, %"class.blink::CSSPropertyValue"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"class.blink::CSSPropertyValue"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5blink14CSSParserToken5ValueEv"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink14CSSParserToken5ValueEv"}
!9 = !{!"branch_weights", i32 1, i32 2000}
!10 = !{!"branch_weights", i32 2000, i32 1}
