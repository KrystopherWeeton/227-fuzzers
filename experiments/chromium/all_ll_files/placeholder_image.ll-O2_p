; ModuleID = '../../third_party/blink/renderer/platform/graphics/placeholder_image.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/placeholder_image.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::PlaceholderImage::SharedFont" = type <{ %"class.WTF::RefCounted", [4 x i8], %"class.blink::Font", float, [4 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.23 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.2, %class.scoped_refptr.5, %class.scoped_refptr.15, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.22 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.1 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.242", [4 x i8] }>
%"class.WTF::RefCounted.242" = type { %"class.base::RefCounted.243" }
%"class.base::RefCounted.243" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.3", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.5 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.6", %"class.WTF::RefCounted.13", [4 x i8] }>
%"class.blink::FontSettings.6" = type { %"class.WTF::Vector.7" }
%"class.WTF::Vector.7" = type { %"class.WTF::VectorBuffer.8" }
%"class.WTF::VectorBuffer.8" = type { %"class.WTF::VectorBufferBase.9" }
%"class.WTF::VectorBufferBase.9" = type { %"class.blink::FontTagValuePair.10"*, i32, i32 }
%"class.blink::FontTagValuePair.10" = type { i32, float }
%"class.WTF::RefCounted.13" = type { %"class.base::RefCounted.14" }
%"class.base::RefCounted.14" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.15 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.16", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.19, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.16" = type { %"class.base::RefCounted.17" }
%"class.base::RefCounted.17" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.19 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.20", [4 x i8] }>
%"class.WTF::RefCounted.20" = type { %"class.base::RefCounted.21" }
%"class.base::RefCounted.21" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.22 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.23 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.24", %"class.WTF::Vector.26", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.24" = type { %"class.base::RefCounted.25" }
%"class.base::RefCounted.25" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.26" = type { %"class.WTF::VectorBuffer.27" }
%"class.WTF::VectorBuffer.27" = type { %"class.WTF::VectorBufferBase.28", [8 x i8] }
%"class.WTF::VectorBufferBase.28" = type { %class.scoped_refptr.29*, i32, i32 }
%class.scoped_refptr.29 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.30", [4 x i8] }>
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.50, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.30" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.34 }
%union.anon.34 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.45, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.35" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.35" }>
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.40" }
%"struct.std::__1::atomic.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__cxx_atomic_impl.43" }
%"struct.std::__1::__cxx_atomic_impl.43" = type { %"struct.std::__1::__cxx_atomic_base_impl.44" }
%"struct.std::__1::__cxx_atomic_base_impl.44" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.45 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.48, %class.scoped_refptr.48 }
%class.scoped_refptr.48 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.50 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.51", [4 x i8] }>
%"class.WTF::RefCounted.51" = type { %"class.base::RefCounted.52" }
%"class.base::RefCounted.52" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.53", i32, [4 x i8], %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.191", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.207", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.225", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.232", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.171", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.89" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.89" = type { %"struct.std::__1::__atomic_base.90" }
%"struct.std::__1::__atomic_base.90" = type { %"struct.std::__1::__atomic_base.91" }
%"struct.std::__1::__atomic_base.91" = type { %"struct.std::__1::__cxx_atomic_impl.92" }
%"struct.std::__1::__cxx_atomic_impl.92" = type { %"struct.std::__1::__cxx_atomic_base_impl.93" }
%"struct.std::__1::__cxx_atomic_base_impl.93" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::Worklist.100"* }
%"class.blink::Worklist.100" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.89" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::Worklist.107"* }
%"class.blink::Worklist.107" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.89" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::Worklist.114"* }
%"class.blink::Worklist.114" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.89" }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::Worklist.121"* }
%"class.blink::Worklist.121" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.89" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::Worklist.128"* }
%"class.blink::Worklist.128" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.89" }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::Worklist.135"* }
%"class.blink::Worklist.135" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.89" }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::Worklist.142"* }
%"class.blink::Worklist.142" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.89" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.149", %"class.std::__1::__compressed_pair.158", %"class.std::__1::__compressed_pair.163", %"class.std::__1::__compressed_pair.165", [4 x i8] }>
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151", %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { i64 }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { float }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.174", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.183" }
%"class.WTF::Vector.183" = type { %"class.WTF::VectorBuffer.184" }
%"class.WTF::VectorBuffer.184" = type { %"class.WTF::VectorBufferBase.185" }
%"class.WTF::VectorBufferBase.185" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.199" }
%"class.WTF::VectorBuffer.199" = type { %"class.WTF::VectorBufferBase.200" }
%"class.WTF::VectorBufferBase.200" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.213" }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.100"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.107"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.114"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.121"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.128"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.237" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.231 }
%class.scoped_refptr.231 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.232" = type { %"struct.std::__1::__atomic_base.233" }
%"struct.std::__1::__atomic_base.233" = type { %"struct.std::__1::__cxx_atomic_impl.234" }
%"struct.std::__1::__cxx_atomic_impl.234" = type { %"struct.std::__1::__cxx_atomic_base_impl.235" }
%"struct.std::__1::__cxx_atomic_base_impl.235" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.236 }
%class.scoped_refptr.236 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.35" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.40" }
%"class.cc::PaintFlags" = type <{ %class.sk_sp.316, %class.sk_sp.317, %class.sk_sp.343, %class.sk_sp.344, %class.sk_sp.345, %class.sk_sp.346, i32, float, float, i32, %union.anon.353, [4 x i8] }>
%class.sk_sp.316 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.317 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.318", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.268, i32, %"class.absl::optional.323", %"class.std::__1::vector.328", %"class.std::__1::vector.335", %class.sk_sp.342, %class.sk_sp.273, i32, [4 x i8] }>
%"class.absl::optional.318" = type { %"class.absl::optional_internal::optional_data.319" }
%"class.absl::optional_internal::optional_data.319" = type { %"class.absl::optional_internal::optional_data_base.320" }
%"class.absl::optional_internal::optional_data_base.320" = type { %"class.absl::optional_internal::optional_data_dtor_base.321" }
%"class.absl::optional_internal::optional_data_dtor_base.321" = type { i8, %union.anon.322 }
%union.anon.322 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.273, %class.sk_sp.268, %"class.gfx::Rect", i32, %class.sk_sp.275, %class.sk_sp.283, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.273, %class.scoped_refptr.284 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.275 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.276" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.274, i32, i32 }
%class.sk_sp.274 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.35" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.276" = type { %"class.std::__1::__vector_base.277" }
%"class.std::__1::__vector_base.277" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.278" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.283 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.284 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.285", [4 x i8] }>
%"class.base::RefCountedThreadSafe.285" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.sk_sp.268 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.269", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { i8* }
%"class.absl::optional.323" = type { %"class.absl::optional_internal::optional_data.324" }
%"class.absl::optional_internal::optional_data.324" = type { %"class.absl::optional_internal::optional_data_base.325" }
%"class.absl::optional_internal::optional_data_base.325" = type { %"class.absl::optional_internal::optional_data_dtor_base.326" }
%"class.absl::optional_internal::optional_data_dtor_base.326" = type { i8, %union.anon.327 }
%union.anon.327 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.328" = type { %"class.std::__1::__vector_base.329" }
%"class.std::__1::__vector_base.329" = type { i32*, i32*, %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { i32* }
%"class.std::__1::vector.335" = type { %"class.std::__1::__vector_base.336" }
%"class.std::__1::__vector_base.336" = type { float*, float*, %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { float* }
%class.sk_sp.342 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.232", [7 x i8] }>
%class.sk_sp.273 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.343 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.344 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.345 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.346 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.347, i32, %"class.absl::optional.348", i8, i32 }
%class.sk_sp.347 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional.348" = type { %"class.absl::optional_internal::optional_data.349" }
%"class.absl::optional_internal::optional_data.349" = type { %"class.absl::optional_internal::optional_data_base.350" }
%"class.absl::optional_internal::optional_data_base.350" = type { %"class.absl::optional_internal::optional_data_dtor_base.351" }
%"class.absl::optional_internal::optional_data_dtor_base.351" = type { i8, %union.anon.352 }
%union.anon.352 = type { %struct.SkRect }
%union.anon.353 = type { i32 }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i8, %class.scoped_refptr.245, %"class.blink::WeakPersistent.259", i32, i8, %"class.std::__1::unique_ptr.261" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.244" }
%"class.base::RefCountedThreadSafe.244" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.245 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.246", i64, %"class.WTF::Vector.248", %"class.WTF::Vector.253" }
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.248" = type { %"class.WTF::VectorBuffer.249" }
%"class.WTF::VectorBuffer.249" = type { %"class.WTF::VectorBufferBase.250" }
%"class.WTF::VectorBufferBase.250" = type { i8*, i32, i32 }
%"class.WTF::Vector.253" = type { %"class.WTF::VectorBuffer.254" }
%"class.WTF::VectorBuffer.254" = type { %"class.WTF::VectorBufferBase.255" }
%"class.WTF::VectorBufferBase.255" = type { %"class.std::__1::unique_ptr.256"*, i32, i32 }
%"class.std::__1::unique_ptr.256" = type opaque
%"class.blink::WeakPersistent.259" = type { %"class.blink::PersistentBase.260" }
%"class.blink::PersistentBase.260" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::PlaceholderImage" = type <{ %"class.blink::Image", %"class.blink::IntSize", %"class.WTF::String", float, [4 x i8], %class.scoped_refptr.267, %"class.absl::optional", %class.sk_sp.268, i32, [4 x i8] }>
%"class.blink::IntSize" = type { i32, i32 }
%class.scoped_refptr.267 = type { %"class.blink::PlaceholderImage::SharedFont"* }
%"class.WTF::IntegerToStringConverter.403" = type <{ [25 x i8], [7 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::IntegerToStringConverter" = type <{ [13 x i8], [3 x i8], i8*, i32, [4 x i8] }>
%"class.blink::Locale" = type <{ i32 (...)**, [12 x %"class.WTF::String"], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i8, i8, [6 x i8] }>
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic.35", [4 x i8] }>
%"class.cc::PaintImageBuilder" = type { %"class.cc::PaintImage" }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.286, %"class.std::__1::unique_ptr.287" }
%class.scoped_refptr.286 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.290", %struct.SkRect }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.absl::optional.290" = type { %"class.absl::optional_internal::optional_data.291" }
%"class.absl::optional_internal::optional_data.291" = type { %"class.absl::optional_internal::optional_data_base.292" }
%"class.absl::optional_internal::optional_data_base.292" = type { %"class.absl::optional_internal::optional_data_dtor_base.293" }
%"class.absl::optional_internal::optional_data_dtor_base.293" = type { i8, %union.anon.294 }
%union.anon.294 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.295, [384 x i64], %class.sk_sp.296, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.297", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.303" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.295 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.296 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%"class.blink::TextRun" = type <{ %union.anon.354, i32, i32, float, float, i16, [2 x i8], %"struct.blink::TabSize", [4 x i8] }>
%union.anon.354 = type { i8* }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"struct.blink::TextRunPaintInfo" = type { %"class.blink::TextRun"*, i32, i32 }
%"class.WTF::HashSet" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::GraphicsContext" = type { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.355", i32, %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, %"class.std::__1::unique_ptr.366", i8, i8, i8, i32 }
%"class.blink::PaintController" = type opaque
%"class.WTF::Vector.355" = type { %"class.WTF::VectorBuffer.356" }
%"class.WTF::VectorBuffer.356" = type { %"class.WTF::VectorBufferBase.357" }
%"class.WTF::VectorBufferBase.357" = type { %"class.std::__1::unique_ptr.358"*, i32, i32 }
%"class.std::__1::unique_ptr.358" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.blink::GraphicsContextState"* }
%"class.blink::GraphicsContextState" = type <{ %"class.cc::PaintFlags", %"class.cc::PaintFlags", %"class.blink::StrokeData", i32, i32, i16, i8, [5 x i8] }>
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp.316 }
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.blink::DarkModeFilter"* }
%"class.blink::DarkModeFilter" = type { %"struct.blink::DarkModeFilter::ImmutableData", %"class.absl::optional.387", %"class.std::__1::unique_ptr.392" }
%"struct.blink::DarkModeFilter::ImmutableData" = type { %"struct.blink::DarkModeSettings", %"class.std::__1::unique_ptr.369", %"class.std::__1::unique_ptr.369", %"class.std::__1::unique_ptr.375", %"class.std::__1::unique_ptr.381", %class.sk_sp.344 }
%"struct.blink::DarkModeSettings" = type <{ i32, i8, [3 x i8], float, float, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.blink::DarkModeColorClassifier"* }
%"class.blink::DarkModeColorClassifier" = type opaque
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.blink::DarkModeImageClassifier"* }
%"class.blink::DarkModeImageClassifier" = type opaque
%"class.std::__1::unique_ptr.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"class.blink::DarkModeColorFilter"* }
%"class.blink::DarkModeColorFilter" = type opaque
%"class.absl::optional.387" = type { %"class.absl::optional_internal::optional_data.388" }
%"class.absl::optional_internal::optional_data.388" = type { %"class.absl::optional_internal::optional_data_base.389" }
%"class.absl::optional_internal::optional_data_base.389" = type { %"class.absl::optional_internal::optional_data_dtor_base.390" }
%"class.absl::optional_internal::optional_data_dtor_base.390" = type { i8, %union.anon.391 }
%union.anon.391 = type { i32 }
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"class.blink::DarkModeInvertedColorCache"* }
%"class.blink::DarkModeInvertedColorCache" = type opaque
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::WebGraphicsContext3DProvider" = type opaque
%"class.base::WeakPtr.402" = type { %"class.base::internal::WeakPtrBase" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN5blink16PlaceholderImage10SharedFont19GetOrCreateInstanceEf = comdat any

$_ZNK5blink5Image10IsSVGImageEv = comdat any

$_ZNK5blink5Image13IsBitmapImageEv = comdat any

$_ZNK5blink5Image19IsStaticBitmapImageEv = comdat any

$_ZN5blink5Image22CurrentFrameIsCompleteEv = comdat any

$_ZN5blink5Image25CurrentFrameIsLazyDecodedEv = comdat any

$_ZN5blink5Image10FrameCountEv = comdat any

$_ZNK5blink5Image15IsTextureBackedEv = comdat any

$_ZNK5blink5Image16HasIntrinsicSizeEv = comdat any

$_ZNK5blink5Image20DensityCorrectedSizeEv = comdat any

$_ZNK5blink5Image20PreferredDisplaySizeEv = comdat any

$_ZNK5blink5Image11SizeAsFloatENS_27RespectImageOrientationEnumE = comdat any

$_ZNK5blink5Image10GetHotSpotERNS_8IntPointE = comdat any

$_ZN5blink5Image11DataChangedEb = comdat any

$_ZN5blink5Image4DataEv = comdat any

$_ZN5blink5Image14StartAnimationEv = comdat any

$_ZN5blink5Image14ResetAnimationEv = comdat any

$_ZN5blink5Image13MaybeAnimatedEv = comdat any

$_ZN5blink5Image18SetAnimationPolicyENS_5mojom20ImageAnimationPolicyE = comdat any

$_ZN5blink5Image15AnimationPolicyEv = comdat any

$_ZN5blink5Image26AdvanceAnimationForTestingEv = comdat any

$_ZNK5blink5Image21HasDefaultOrientationEv = comdat any

$_ZNK5blink5Image23CurrentFrameOrientationEv = comdat any

$_ZNK5blink5Image32CurrentFrameDensityCorrectedSizeEv = comdat any

$_ZNK5blink5Image15ContextProviderEv = comdat any

$_ZNK5blink5Image22ContextProviderWrapperEv = comdat any

$_ZN5blink5Image15IsSizeAvailableEv = comdat any

$_ZN5blink15FontDescriptionD2Ev = comdat any

$_ZN5blink10FontFamilyD2Ev = comdat any

@_ZN5blink16PlaceholderImage10SharedFont11g_instance_E = hidden local_unnamed_addr global %"class.blink::PlaceholderImage::SharedFont"* null, align 8
@_ZTVN5blink16PlaceholderImageE = hidden unnamed_addr constant { [42 x i8*] } { [42 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::PlaceholderImage"*)* @_ZN5blink16PlaceholderImageD2Ev to i8*), i8* bitcast (void (%"class.blink::PlaceholderImage"*)* @_ZN5blink16PlaceholderImageD0Ev to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image10IsSVGImageEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image13IsBitmapImageEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image19IsStaticBitmapImageEv to i8*), i8* bitcast (i1 (%"class.blink::PlaceholderImage"*)* @_ZNK5blink16PlaceholderImage18IsPlaceholderImageEv to i8*), i8* bitcast (i1 (%"class.blink::PlaceholderImage"*)* @_ZN5blink16PlaceholderImage27CurrentFrameKnownToBeOpaqueEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZN5blink5Image22CurrentFrameIsCompleteEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZN5blink5Image25CurrentFrameIsLazyDecodedEv to i8*), i8* bitcast (i64 (%"class.blink::Image"*)* @_ZN5blink5Image10FrameCountEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image15IsTextureBackedEv to i8*), i8* bitcast (i1 (%"class.blink::PlaceholderImage"*)* @_ZNK5blink16PlaceholderImage35CurrentFrameHasSingleSecurityOriginEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image16HasIntrinsicSizeEv to i8*), i8* bitcast (i64 (%"class.blink::PlaceholderImage"*)* @_ZNK5blink16PlaceholderImage4SizeEv to i8*), i8* bitcast (i64 (%"class.blink::Image"*)* @_ZNK5blink5Image20DensityCorrectedSizeEv to i8*), i8* bitcast (i64 (%"class.blink::Image"*)* @_ZNK5blink5Image20PreferredDisplaySizeEv to i8*), i8* bitcast (<2 x float> (%"class.blink::Image"*, i32)* @_ZNK5blink5Image11SizeAsFloatENS_27RespectImageOrientationEnumE to i8*), i8* bitcast (i1 (%"class.blink::Image"*, %"class.blink::IntPoint"*)* @_ZNK5blink5Image10GetHotSpotERNS_8IntPointE to i8*), i8* bitcast (i32 (%"class.blink::PlaceholderImage"*, %"class.WTF::SharedBuffer"*, i1)* @_ZN5blink16PlaceholderImage7SetDataE13scoped_refptrIN3WTF12SharedBufferEEb to i8*), i8* bitcast (i32 (%"class.blink::Image"*, i1)* @_ZN5blink5Image11DataChangedEb to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Image"*)* @_ZNK5blink5Image17FilenameExtensionEv to i8*), i8* bitcast (void (%"class.blink::PlaceholderImage"*)* @_ZN5blink16PlaceholderImage18DestroyDecodedDataEv to i8*), i8* bitcast (%"class.WTF::SharedBuffer"* (%"class.blink::Image"*)* @_ZN5blink5Image4DataEv to i8*), i8* bitcast (void (%"class.blink::Image"*)* @_ZN5blink5Image14StartAnimationEv to i8*), i8* bitcast (void (%"class.blink::Image"*)* @_ZN5blink5Image14ResetAnimationEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZN5blink5Image13MaybeAnimatedEv to i8*), i8* bitcast (void (%"class.blink::Image"*, i32)* @_ZN5blink5Image18SetAnimationPolicyENS_5mojom20ImageAnimationPolicyE to i8*), i8* bitcast (i32 (%"class.blink::Image"*)* @_ZN5blink5Image15AnimationPolicyEv to i8*), i8* bitcast (void (%"class.blink::Image"*)* @_ZN5blink5Image26AdvanceAnimationForTestingEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Image"*)* @_ZN5blink5Image20ImageForDefaultFrameEv to i8*), i8* bitcast (void (%"class.cc::PaintImage"*, %"class.blink::PlaceholderImage"*)* @_ZN5blink16PlaceholderImage25PaintImageForCurrentFrameEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image21HasDefaultOrientationEv to i8*), i8* bitcast (i8 (%"class.blink::Image"*)* @_ZNK5blink5Image23CurrentFrameOrientationEv to i8*), i8* bitcast (i64 (%"class.blink::Image"*)* @_ZNK5blink5Image32CurrentFrameDensityCorrectedSizeEv to i8*), i8* bitcast (void (%"class.blink::PlaceholderImage"*, %"class.cc::PaintCanvas"*, %"class.cc::PaintFlags"*, %"class.blink::FloatRect"*, %"class.blink::FloatRect"*, %struct.SkSamplingOptions*, i32, i32, i32)* @_ZN5blink16PlaceholderImage4DrawEPN2cc11PaintCanvasERKNS1_10PaintFlagsERKNS_9FloatRectES9_RK17SkSamplingOptionsNS_27RespectImageOrientationEnumENS_5Image17ImageClampingModeENSE_17ImageDecodingModeE to i8*), i8* bitcast (i1 (%"class.blink::Image"*, %"class.cc::PaintFlags"*, %class.SkMatrix*)* @_ZN5blink5Image11ApplyShaderERN2cc10PaintFlagsERK8SkMatrix to i8*), i8* bitcast (%"class.blink::WebGraphicsContext3DProvider"* (%"class.blink::Image"*)* @_ZNK5blink5Image15ContextProviderEv to i8*), i8* bitcast (void (%"class.base::WeakPtr.402"*, %"class.blink::Image"*)* @_ZNK5blink5Image22ContextProviderWrapperEv to i8*), i8* bitcast (void (%"class.blink::PlaceholderImage"*, %"class.blink::GraphicsContext"*, %"class.blink::FloatRect"*, %"class.blink::FloatSize"*, %"class.blink::FloatPoint"*, i32, %"class.blink::FloatRect"*, %"class.blink::FloatSize"*, i32)* @_ZN5blink16PlaceholderImage11DrawPatternERNS_15GraphicsContextERKNS_9FloatRectERKNS_9FloatSizeERKNS_10FloatPointE11SkBlendModeS5_S8_NS_27RespectImageOrientationEnumE to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZN5blink5Image15IsSizeAvailableEv to i8*)] }, align 8
@__const._ZN5blink16PlaceholderImage11DrawPatternERNS_15GraphicsContextERKNS_9FloatRectERKNS_9FloatSizeERKNS_10FloatPointE11SkBlendModeS5_S8_NS_27RespectImageOrientationEnumE.flags = private unnamed_addr constant %"class.cc::PaintFlags" <{ %class.sk_sp.316 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.317 { %"class.cc::PaintShader"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintShader"*) }, %class.sk_sp.343 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.344 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.345 { %class.SkDrawLooper* inttoptr (i64 -6148914691236517206 to %class.SkDrawLooper*) }, %class.sk_sp.346 { %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*) }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, %union.anon.353 { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZZN5blink12_GLOBAL__N_131FormatOriginalResourceSizeBytesElE17kUnitsResourceIds = internal unnamed_addr constant [5 x i32] [i32 25088, i32 25089, i32 25090, i32 25091, i32 25092], align 16
@__const._ZN5blink12_GLOBAL__N_132CreatePlaceholderFontDescriptionEf.description = private unnamed_addr constant %"class.blink::FontDescription" { %"class.blink::FontFamily" { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %class.scoped_refptr.1 { %"class.blink::SharedFontFamily"* inttoptr (i64 -6148914691236517206 to %"class.blink::SharedFontFamily"*) } }, %class.scoped_refptr.2 { %"class.blink::FontFeatureSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontFeatureSettings"*) }, %class.scoped_refptr.5 { %"class.blink::FontVariationSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontVariationSettings"*) }, %class.scoped_refptr.15 { %"class.blink::LayoutLocale"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutLocale"*) }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"struct.blink::FontSelectionRequest" { %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 } }, %"class.blink::FontSelectionValue" { i16 -21846 }, %union.anon.22 { %"struct.blink::FontDescription::BitFields" { i56 -24019198012642646 } } }, align 8
@.str = private unnamed_addr constant [7 x i8] c"Roboto\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"Helvetica Neue\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"Helvetica\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"Arial\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZZN5blink12_GLOBAL__N_18DrawIconEPN2cc11PaintCanvasERKNS1_10PaintFlagsEffRK17SkSamplingOptionsfE10icon_image = internal unnamed_addr global %"class.blink::Image"* null, align 8
@_ZGVZN5blink12_GLOBAL__N_18DrawIconEPN2cc11PaintCanvasERKNS1_10PaintFlagsEffRK17SkSamplingOptionsfE10icon_image = internal global i64 0, align 8
@.str.4 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1

@_ZN5blink16PlaceholderImageC1EPNS_13ImageObserverERKNS_7IntSizeEl = hidden unnamed_addr alias void (%"class.blink::PlaceholderImage"*, %"class.blink::ImageObserver"*, %"class.blink::IntSize"*, i64), void (%"class.blink::PlaceholderImage"*, %"class.blink::ImageObserver"*, %"class.blink::IntSize"*, i64)* @_ZN5blink16PlaceholderImageC2EPNS_13ImageObserverERKNS_7IntSizeEl
@_ZN5blink16PlaceholderImageD1Ev = hidden unnamed_addr alias void (%"class.blink::PlaceholderImage"*), void (%"class.blink::PlaceholderImage"*)* @_ZN5blink16PlaceholderImageD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16PlaceholderImageC2EPNS_13ImageObserverERKNS_7IntSizeEl(%"class.blink::PlaceholderImage"*, %"class.blink::ImageObserver"*, %"class.blink::IntSize"* nocapture readonly dereferenceable(8), i64) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::IntegerToStringConverter.403", align 8
  %6 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 0
  tail call void @_ZN5blink5ImageC2EPNS_13ImageObserverEb(%"class.blink::Image"* %9, %"class.blink::ImageObserver"* %1, i1 zeroext false) #14
  %10 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [42 x i8*] }, { [42 x i8*] }* @_ZTVN5blink16PlaceholderImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 1
  %12 = bitcast %"class.blink::IntSize"* %2 to i64*
  %13 = bitcast %"class.blink::IntSize"* %11 to i64*
  %14 = load i64, i64* %12, align 4
  store i64 %14, i64* %13, align 8
  %15 = icmp slt i64 %3, 1
  br i1 %15, label %178, label %16

16:                                               ; preds = %4
  %17 = icmp slt i64 %3, 1024000
  br i1 %17, label %24, label %18

18:                                               ; preds = %16
  %19 = icmp slt i64 %3, 1048576000
  br i1 %19, label %20, label %186

20:                                               ; preds = %188, %186, %18
  %21 = phi i64 [ 1, %18 ], [ 2, %186 ], [ %190, %188 ]
  %22 = phi i64 [ 1048576, %18 ], [ 1073741824, %186 ], [ %191, %188 ]
  %23 = getelementptr inbounds [5 x i32], [5 x i32]* @_ZZN5blink12_GLOBAL__N_131FormatOriginalResourceSizeBytesElE17kUnitsResourceIds, i64 0, i64 %21
  br label %24

24:                                               ; preds = %20, %16
  %25 = phi i64 [ %22, %20 ], [ 1024, %16 ]
  %26 = phi i64 [ 1, %20 ], [ 0, %16 ]
  %27 = phi i32* [ %23, %20 ], [ getelementptr inbounds ([5 x i32], [5 x i32]* @_ZZN5blink12_GLOBAL__N_131FormatOriginalResourceSizeBytesElE17kUnitsResourceIds, i64 0, i64 0), %16 ]
  %28 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %29, align 8
  %30 = icmp sgt i64 %25, %3
  br i1 %30, label %31, label %54

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #14
  %33 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 12
  %34 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 2
  %35 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false) #14
  store i8* %33, i8** %34, align 8
  store i8 49, i8* %33, align 4
  store i32 1, i32* %35, align 8
  %36 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %33, i32 1) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #14
  %37 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %38 = bitcast %"class.WTF::String"* %7 to i64*
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  store i64 %37, i64* %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %139, label %41

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %139

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #14
  br label %139

54:                                               ; preds = %24
  %55 = icmp ne i64 %26, 0
  %56 = mul nsw i64 %25, 10
  %57 = icmp sgt i64 %56, %3
  %58 = and i1 %55, %57
  br i1 %58, label %59, label %66

59:                                               ; preds = %54
  %60 = sitofp i64 %3 to double
  %61 = sitofp i64 %25 to double
  %62 = fdiv double %60, %61
  %63 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double %62, i32 2) #14
  %64 = ptrtoint %"class.WTF::StringImpl"* %63 to i64
  %65 = bitcast %"class.WTF::String"* %7 to i64*
  store i64 %64, i64* %65, align 8
  br label %139

66:                                               ; preds = %54
  %67 = sdiv i64 %3, %25
  %68 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.403", %"class.WTF::IntegerToStringConverter.403"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %68) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 48, i1 false) #14
  %69 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.403", %"class.WTF::IntegerToStringConverter.403"* %5, i64 0, i32 0, i64 25
  %70 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.403", %"class.WTF::IntegerToStringConverter.403"* %5, i64 0, i32 2
  %71 = icmp slt i64 %67, 0
  %72 = sub nsw i64 0, %67
  %73 = select i1 %71, i64 %72, i64 %67
  %74 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.403", %"class.WTF::IntegerToStringConverter.403"* %5, i64 0, i32 0, i64 24
  store i8* %74, i8** %70, align 8
  %75 = urem i64 %73, 10
  %76 = udiv i64 %73, 10
  %77 = trunc i64 %75 to i8
  %78 = or i8 %77, 48
  store i8 %78, i8* %74, align 8
  %79 = icmp ugt i64 %73, 9
  br i1 %79, label %80, label %109

80:                                               ; preds = %66
  %81 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.403", %"class.WTF::IntegerToStringConverter.403"* %5, i64 0, i32 0, i64 23
  store i8* %81, i8** %70, align 8
  %82 = urem i64 %76, 10
  %83 = trunc i64 %82 to i8
  %84 = or i8 %83, 48
  store i8 %84, i8* %81, align 1
  %85 = icmp ugt i64 %73, 99
  br i1 %85, label %86, label %109

86:                                               ; preds = %80
  %87 = udiv i64 %73, 100
  %88 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.403", %"class.WTF::IntegerToStringConverter.403"* %5, i64 0, i32 0, i64 22
  store i8* %88, i8** %70, align 8
  %89 = urem i64 %87, 10
  %90 = trunc i64 %89 to i8
  %91 = or i8 %90, 48
  store i8 %91, i8* %88, align 2
  %92 = icmp ugt i64 %73, 999
  br i1 %92, label %93, label %109

93:                                               ; preds = %86
  %94 = udiv i64 %73, 1000
  %95 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.403", %"class.WTF::IntegerToStringConverter.403"* %5, i64 0, i32 0, i64 21
  store i8* %95, i8** %70, align 8
  %96 = urem i64 %94, 10
  %97 = trunc i64 %96 to i8
  %98 = or i8 %97, 48
  store i8 %98, i8* %95, align 1
  %99 = icmp ugt i64 %73, 9999
  br i1 %99, label %100, label %109

100:                                              ; preds = %93, %100
  %101 = phi i64 [ %103, %100 ], [ %94, %93 ]
  %102 = load i8*, i8** %70, align 8
  %103 = udiv i64 %101, 10
  %104 = getelementptr inbounds i8, i8* %102, i64 -1
  store i8* %104, i8** %70, align 8
  %105 = urem i64 %103, 10
  %106 = trunc i64 %105 to i8
  %107 = or i8 %106, 48
  store i8 %107, i8* %104, align 1
  %108 = icmp ugt i64 %101, 99
  br i1 %108, label %100, label %109

109:                                              ; preds = %100, %93, %86, %80, %66
  br i1 %71, label %110, label %113

110:                                              ; preds = %109
  %111 = load i8*, i8** %70, align 8
  %112 = getelementptr inbounds i8, i8* %111, i64 -1
  store i8* %112, i8** %70, align 8
  store i8 45, i8* %112, align 1
  br label %113

113:                                              ; preds = %110, %109
  %114 = bitcast i8** %70 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = ptrtoint i8* %69 to i64
  %117 = sub i64 %116, %115
  %118 = trunc i64 %117 to i32
  %119 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.403", %"class.WTF::IntegerToStringConverter.403"* %5, i64 0, i32 3
  store i32 %118, i32* %119, align 8
  %120 = inttoptr i64 %115 to i8*
  %121 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %120, i32 %118) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %68) #14
  %122 = ptrtoint %"class.WTF::StringImpl"* %121 to i64
  %123 = bitcast %"class.WTF::String"* %7 to i64*
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  store i64 %122, i64* %123, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %113
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #14
  br label %139

139:                                              ; preds = %138, %135, %113, %59, %53, %50, %31
  %140 = call dereferenceable(152) %"class.blink::Locale"* @_ZN5blink6Locale13DefaultLocaleEv() #14
  %141 = load i32, i32* %27, align 4
  %142 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #14
  %143 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale24ConvertToLocalizedNumberERKN3WTF6StringE(%"class.blink::Locale"* %140, %"class.WTF::String"* nonnull dereferenceable(8) %7) #14
  %144 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %143, %"class.WTF::StringImpl"** %144, align 8
  %145 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEiRKN3WTF6StringE(%"class.blink::Locale"* %140, i32 %141, %"class.WTF::String"* nonnull dereferenceable(8) %8) #14
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %139
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %146) #14
  br label %161

161:                                              ; preds = %160, %157, %139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #14
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #14
  br label %177

177:                                              ; preds = %161, %173, %176
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  br label %178

178:                                              ; preds = %4, %177
  %179 = phi %"class.WTF::StringImpl"* [ %145, %177 ], [ null, %4 ]
  %180 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %179, %"class.WTF::StringImpl"** %180, align 8
  %181 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 3
  store float 1.000000e+00, float* %181, align 8
  %182 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 5, i32 0
  store %"class.blink::PlaceholderImage::SharedFont"* null, %"class.blink::PlaceholderImage::SharedFont"** %182, align 8
  %183 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %183, align 4
  %184 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 7, i32 0
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %184, align 8
  %185 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 8
  store i32 -1, i32* %185, align 8
  ret void

186:                                              ; preds = %18
  %187 = icmp slt i64 %3, 1073741824000
  br i1 %187, label %20, label %188

188:                                              ; preds = %186
  %189 = icmp slt i64 %3, 1099511627776000
  %190 = select i1 %189, i64 3, i64 4
  %191 = select i1 %189, i64 1099511627776, i64 1125899906842624
  br label %20
}

declare void @_ZN5blink5ImageC2EPNS_13ImageObserverEb(%"class.blink::Image"*, %"class.blink::ImageObserver"*, i1 zeroext) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16PlaceholderImageD2Ev(%"class.blink::PlaceholderImage"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [42 x i8*] }, { [42 x i8*] }* @_ZTVN5blink16PlaceholderImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 7, i32 0
  %4 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %3, align 8
  %5 = icmp eq %"class.cc::PaintOpBuffer"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintOpBuffer"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintOpBuffer"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 5, i32 0
  %18 = load %"class.blink::PlaceholderImage::SharedFont"*, %"class.blink::PlaceholderImage::SharedFont"** %17, align 8
  %19 = icmp eq %"class.blink::PlaceholderImage::SharedFont"* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::PlaceholderImage::SharedFont", %"class.blink::PlaceholderImage::SharedFont"* %18, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #14
  %22 = getelementptr inbounds %"class.blink::PlaceholderImage::SharedFont", %"class.blink::PlaceholderImage::SharedFont"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::PlaceholderImage::SharedFont", %"class.blink::PlaceholderImage::SharedFont"* %18, i64 0, i32 0, i32 0
  store %"class.blink::PlaceholderImage::SharedFont"* null, %"class.blink::PlaceholderImage::SharedFont"** @_ZN5blink16PlaceholderImage10SharedFont11g_instance_E, align 8
  %27 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %26, i64 2
  %28 = bitcast %"class.base::RefCounted"* %27 to %"class.blink::Font"*
  tail call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* %28) #14
  %29 = bitcast %"class.blink::PlaceholderImage::SharedFont"* %18 to i8*
  tail call void @free(i8* %29) #14
  br label %30

30:                                               ; preds = %16, %20, %25
  %31 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #14
  br label %47

47:                                               ; preds = %30, %43, %46
  %48 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 0
  tail call void @_ZN5blink5ImageD2Ev(%"class.blink::Image"* %48) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5ImageD2Ev(%"class.blink::Image"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16PlaceholderImageD0Ev(%"class.blink::PlaceholderImage"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink16PlaceholderImageD2Ev(%"class.blink::PlaceholderImage"* %0) #14
  %2 = bitcast %"class.blink::PlaceholderImage"* %0 to i8*
  tail call void @free(i8* %2) #14
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink16PlaceholderImage4SizeEv(%"class.blink::PlaceholderImage"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::IntSize"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  ret i64 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink16PlaceholderImage18IsPlaceholderImageEv(%"class.blink::PlaceholderImage"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink16PlaceholderImage35CurrentFrameHasSingleSecurityOriginEv(%"class.blink::PlaceholderImage"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink16PlaceholderImage27CurrentFrameKnownToBeOpaqueEv(%"class.blink::PlaceholderImage"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16PlaceholderImage25PaintImageForCurrentFrameEv(%"class.cc::PaintImage"* noalias sret, %"class.blink::PlaceholderImage"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::PaintImageBuilder", align 8
  %4 = alloca %"class.cc::PaintImageBuilder", align 8
  %5 = alloca %"class.cc::PaintRecorder", align 8
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = alloca %"class.cc::PaintFlags", align 8
  %8 = alloca %"class.blink::FloatRect", align 4
  %9 = alloca %"class.blink::FloatRect", align 4
  %10 = alloca %struct.SkSamplingOptions, align 4
  %11 = alloca %class.sk_sp.268, align 8
  %12 = bitcast %"class.cc::PaintImageBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %12) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 104, i1 false)
  %13 = bitcast %"class.cc::PaintImageBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %1, i64 0, i32 0
  call void @_ZN5blink5Image23CreatePaintImageBuilderEv(%"class.cc::PaintImageBuilder"* nonnull sret %4, %"class.blink::Image"* %14) #14
  %15 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %4, i64 0, i32 0, i32 8
  store i32 0, i32* %15, align 8
  call void @_ZN2cc17PaintImageBuilderC1EOS0_(%"class.cc::PaintImageBuilder"* nonnull %3, %"class.cc::PaintImageBuilder"* nonnull dereferenceable(104) %4) #14
  call void @_ZN2cc17PaintImageBuilderD1Ev(%"class.cc::PaintImageBuilder"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %13) #14
  %16 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %1, i64 0, i32 1, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %1, i64 0, i32 1, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %1, i64 0, i32 7
  %21 = getelementptr inbounds %class.sk_sp.268, %class.sk_sp.268* %20, i64 0, i32 0
  %22 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %21, align 8
  %23 = icmp eq %"class.cc::PaintOpBuffer"* %22, null
  br i1 %23, label %59, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %22, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 1 monotonic
  %27 = ptrtoint %"class.cc::PaintOpBuffer"* %22 to i64
  %28 = icmp sgt i32 %17, 0
  %29 = icmp sgt i32 %19, 0
  %30 = select i1 %28, i32 %17, i32 0
  %31 = select i1 %29, i32 %19, i32 0
  %32 = zext i32 %31 to i64
  %33 = shl nuw nsw i64 %32, 32
  %34 = zext i32 %30 to i64
  %35 = or i64 %33, %34
  %36 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %1, i64 0, i32 8
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %3, i64 0, i32 0, i32 1
  %39 = getelementptr inbounds %class.sk_sp.268, %class.sk_sp.268* %38, i64 0, i32 0
  %40 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %39, align 8
  %41 = bitcast %class.sk_sp.268* %38 to i64*
  store i64 %27, i64* %41, align 8
  %42 = icmp eq %"class.cc::PaintOpBuffer"* %40, null
  br i1 %42, label %53, label %43

43:                                               ; preds = %24
  %44 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %40, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %53

47:                                               ; preds = %43
  %48 = bitcast %"class.cc::PaintOpBuffer"* %40 to %class.SkRefCntBase*
  %49 = bitcast %"class.cc::PaintOpBuffer"* %40 to void (%class.SkRefCntBase*)***
  %50 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, i64 2
  %52 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, align 8
  call void %52(%class.SkRefCntBase* nonnull %48) #14
  br label %53

53:                                               ; preds = %47, %43, %24
  %54 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %3, i64 0, i32 0, i32 2
  %55 = bitcast %"class.gfx::Rect"* %54 to i64*
  store i64 0, i64* %55, align 8
  %56 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %3, i64 0, i32 0, i32 2, i32 1
  %57 = bitcast %"class.gfx::Size"* %56 to i64*
  store i64 %35, i64* %57, align 8
  %58 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %3, i64 0, i32 0, i32 3
  store i32 %37, i32* %58, align 8
  call void @_ZN2cc17PaintImageBuilder14TakePaintImageEv(%"class.cc::PaintImage"* sret %0, %"class.cc::PaintImageBuilder"* nonnull %3) #14
  br label %154

59:                                               ; preds = %2
  %60 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  %61 = bitcast %"class.cc::PaintRecorder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #14
  %62 = bitcast %"class.cc::PaintRecorder"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 24, i1 false)
  call void @_ZN2cc13PaintRecorderC1Ev(%"class.cc::PaintRecorder"* nonnull %5) #14
  %63 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #14
  %64 = sitofp i32 %17 to float
  %65 = sitofp i32 %19 to float
  %66 = insertelement <2 x float> undef, float %64, i32 0
  %67 = insertelement <2 x float> %66, float %65, i32 1
  %68 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %68, align 8
  %69 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %67, <2 x float>* %69, align 8
  %70 = call %"class.cc::PaintCanvas"* @_ZN2cc13PaintRecorder14beginRecordingERK6SkRect(%"class.cc::PaintRecorder"* nonnull %5, %struct.SkRect* nonnull dereferenceable(16) %60) #14
  %71 = bitcast %"class.cc::PaintFlags"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %71) #14
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %7) #14
  %72 = bitcast %"class.blink::FloatRect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #14
  %73 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %8, i64 0, i32 0, i32 0
  store float 0.000000e+00, float* %73, align 4
  %74 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %8, i64 0, i32 0, i32 1
  store float 0.000000e+00, float* %74, align 4
  %75 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %8, i64 0, i32 1, i32 0
  store float %64, float* %75, align 4
  %76 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %8, i64 0, i32 1, i32 1
  store float %65, float* %76, align 4
  %77 = bitcast %"class.blink::FloatRect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #14
  %78 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %9, i64 0, i32 0, i32 0
  store float 0.000000e+00, float* %78, align 4
  %79 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %9, i64 0, i32 0, i32 1
  store float 0.000000e+00, float* %79, align 4
  %80 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %9, i64 0, i32 1, i32 0
  store float %64, float* %80, align 4
  %81 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %9, i64 0, i32 1, i32 1
  store float %65, float* %81, align 4
  %82 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %82) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %82, i8 0, i64 20, i1 false)
  call void @_ZN5blink16PlaceholderImage4DrawEPN2cc11PaintCanvasERKNS1_10PaintFlagsERKNS_9FloatRectES9_RK17SkSamplingOptionsNS_27RespectImageOrientationEnumENS_5Image17ImageClampingModeENSE_17ImageDecodingModeE(%"class.blink::PlaceholderImage"* %1, %"class.cc::PaintCanvas"* %70, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %7, %"class.blink::FloatRect"* nonnull dereferenceable(16) %8, %"class.blink::FloatRect"* nonnull dereferenceable(16) %9, %struct.SkSamplingOptions* nonnull dereferenceable(20) %10, i32 undef, i32 undef, i32 undef)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %82) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #14
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %71) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #14
  %83 = bitcast %class.sk_sp.268* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #14
  call void @_ZN2cc13PaintRecorder24finishRecordingAsPictureEv(%class.sk_sp.268* nonnull sret %11, %"class.cc::PaintRecorder"* nonnull %5) #14
  %84 = getelementptr inbounds %class.sk_sp.268, %class.sk_sp.268* %11, i64 0, i32 0
  %85 = bitcast %class.sk_sp.268* %11 to i64*
  %86 = load i64, i64* %85, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %84, align 8
  %87 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %21, align 8
  %88 = bitcast %class.sk_sp.268* %20 to i64*
  store i64 %86, i64* %88, align 8
  %89 = icmp eq %"class.cc::PaintOpBuffer"* %87, null
  br i1 %89, label %113, label %90

90:                                               ; preds = %59
  %91 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %87, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw add i32* %91, i32 -1 acq_rel
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %100

94:                                               ; preds = %90
  %95 = bitcast %"class.cc::PaintOpBuffer"* %87 to %class.SkRefCntBase*
  %96 = bitcast %"class.cc::PaintOpBuffer"* %87 to void (%class.SkRefCntBase*)***
  %97 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %96, align 8
  %98 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %97, i64 2
  %99 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %98, align 8
  call void %99(%class.SkRefCntBase* nonnull %95) #14
  br label %100

100:                                              ; preds = %90, %94
  %101 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %84, align 8
  %102 = icmp eq %"class.cc::PaintOpBuffer"* %101, null
  br i1 %102, label %113, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %101, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = atomicrmw add i32* %104, i32 -1 acq_rel
  %106 = icmp eq i32 %105, 1
  br i1 %106, label %107, label %113

107:                                              ; preds = %103
  %108 = bitcast %"class.cc::PaintOpBuffer"* %101 to %class.SkRefCntBase*
  %109 = bitcast %"class.cc::PaintOpBuffer"* %101 to void (%class.SkRefCntBase*)***
  %110 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %109, align 8
  %111 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %110, i64 2
  %112 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %111, align 8
  call void %112(%class.SkRefCntBase* nonnull %108) #14
  br label %113

113:                                              ; preds = %59, %100, %103, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #14
  %114 = call i32 @_ZN2cc10PaintImage16GetNextContentIdEv() #14
  %115 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %1, i64 0, i32 8
  store i32 %114, i32* %115, align 8
  %116 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %21, align 8
  %117 = icmp eq %"class.cc::PaintOpBuffer"* %116, null
  br i1 %117, label %122, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %116, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = atomicrmw add i32* %119, i32 1 monotonic
  %121 = load i32, i32* %115, align 8
  br label %122

122:                                              ; preds = %113, %118
  %123 = phi i32 [ %114, %113 ], [ %121, %118 ]
  %124 = ptrtoint %"class.cc::PaintOpBuffer"* %116 to i64
  %125 = icmp sgt i32 %17, 0
  %126 = icmp sgt i32 %19, 0
  %127 = select i1 %125, i32 %17, i32 0
  %128 = select i1 %126, i32 %19, i32 0
  %129 = zext i32 %128 to i64
  %130 = shl nuw nsw i64 %129, 32
  %131 = zext i32 %127 to i64
  %132 = or i64 %130, %131
  %133 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %3, i64 0, i32 0, i32 1
  %134 = getelementptr inbounds %class.sk_sp.268, %class.sk_sp.268* %133, i64 0, i32 0
  %135 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %134, align 8
  %136 = bitcast %class.sk_sp.268* %133 to i64*
  store i64 %124, i64* %136, align 8
  %137 = icmp eq %"class.cc::PaintOpBuffer"* %135, null
  br i1 %137, label %148, label %138

138:                                              ; preds = %122
  %139 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %135, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = atomicrmw add i32* %139, i32 -1 acq_rel
  %141 = icmp eq i32 %140, 1
  br i1 %141, label %142, label %148

142:                                              ; preds = %138
  %143 = bitcast %"class.cc::PaintOpBuffer"* %135 to %class.SkRefCntBase*
  %144 = bitcast %"class.cc::PaintOpBuffer"* %135 to void (%class.SkRefCntBase*)***
  %145 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %144, align 8
  %146 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %145, i64 2
  %147 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %146, align 8
  call void %147(%class.SkRefCntBase* nonnull %143) #14
  br label %148

148:                                              ; preds = %142, %138, %122
  %149 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %3, i64 0, i32 0, i32 2
  %150 = bitcast %"class.gfx::Rect"* %149 to i64*
  store i64 0, i64* %150, align 8
  %151 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %3, i64 0, i32 0, i32 2, i32 1
  %152 = bitcast %"class.gfx::Size"* %151 to i64*
  store i64 %132, i64* %152, align 8
  %153 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %3, i64 0, i32 0, i32 3
  store i32 %123, i32* %153, align 8
  call void @_ZN2cc17PaintImageBuilder14TakePaintImageEv(%"class.cc::PaintImage"* sret %0, %"class.cc::PaintImageBuilder"* nonnull %3) #14
  call void @_ZN2cc13PaintRecorderD1Ev(%"class.cc::PaintRecorder"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #14
  br label %154

154:                                              ; preds = %148, %53
  call void @_ZN2cc17PaintImageBuilderD1Ev(%"class.cc::PaintImageBuilder"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %12) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink5Image23CreatePaintImageBuilderEv(%"class.cc::PaintImageBuilder"* sret, %"class.blink::Image"*) local_unnamed_addr #1

declare void @_ZN2cc17PaintImageBuilderC1EOS0_(%"class.cc::PaintImageBuilder"*, %"class.cc::PaintImageBuilder"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc17PaintImageBuilderD1Ev(%"class.cc::PaintImageBuilder"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2cc17PaintImageBuilder14TakePaintImageEv(%"class.cc::PaintImage"* sret, %"class.cc::PaintImageBuilder"*) local_unnamed_addr #1

declare void @_ZN2cc13PaintRecorderC1Ev(%"class.cc::PaintRecorder"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16PlaceholderImage4DrawEPN2cc11PaintCanvasERKNS1_10PaintFlagsERKNS_9FloatRectES9_RK17SkSamplingOptionsNS_27RespectImageOrientationEnumENS_5Image17ImageClampingModeENSE_17ImageDecodingModeE(%"class.blink::PlaceholderImage"* nocapture, %"class.cc::PaintCanvas"*, %"class.cc::PaintFlags"* dereferenceable(72), %"class.blink::FloatRect"* nocapture readonly dereferenceable(16), %"class.blink::FloatRect"* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), i32, i32, i32) unnamed_addr #0 align 2 {
  %10 = alloca %"class.blink::Font", align 8
  %11 = alloca %"class.blink::FontDescription", align 8
  %12 = alloca %"class.blink::FloatRect", align 4
  %13 = alloca %"class.cc::PaintFlags", align 8
  %14 = alloca { <2 x float>, <2 x float> }, align 8
  %15 = alloca %"class.blink::TextRun", align 8
  %16 = alloca %"struct.blink::TextRunPaintInfo", align 8
  %17 = alloca %"class.blink::TextRun", align 8
  %18 = alloca %"class.blink::FloatPoint", align 4
  %19 = bitcast %"class.blink::FloatRect"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #14
  %20 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 1, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = sitofp i32 %21 to float
  %23 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 1, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = sitofp i32 %24 to float
  %26 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %12, i64 0, i32 0, i32 0
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %12, i64 0, i32 0, i32 1
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %12, i64 0, i32 1, i32 0
  store float %22, float* %28, align 4
  %29 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %12, i64 0, i32 1, i32 1
  store float %25, float* %29, align 4
  %30 = call zeroext i1 @_ZNK5blink9FloatRect10IntersectsERKS0_(%"class.blink::FloatRect"* %4, %"class.blink::FloatRect"* nonnull dereferenceable(16) %12) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #14
  br i1 %30, label %31, label %283

31:                                               ; preds = %9
  %32 = bitcast { <2 x float>, <2 x float> }* %14 to %struct.SkRect*
  %33 = bitcast %"class.cc::PaintFlags"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %33) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN5blink16PlaceholderImage11DrawPatternERNS_15GraphicsContextERKNS_9FloatRectERKNS_9FloatSizeERKNS_10FloatPointE11SkBlendModeS5_S8_NS_27RespectImageOrientationEnumE.flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* nonnull %13, %"class.cc::PaintFlags"* dereferenceable(72) %2) #14
  %34 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %13, i64 0, i32 10
  %35 = bitcast %union.anon.353* %34 to i16*
  %36 = load i16, i16* %35, align 8
  %37 = and i16 %36, -193
  store i16 %37, i16* %35, align 8
  %38 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %13, i64 0, i32 6
  store i32 -2133206567, i32* %38, align 8
  %39 = bitcast { <2 x float>, <2 x float> }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #14
  %40 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %3, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %3, i64 0, i32 0, i32 1
  %42 = bitcast %"class.blink::FloatRect"* %3 to <2 x float>*
  %43 = load <2 x float>, <2 x float>* %42, align 4
  %44 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %3, i64 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %3, i64 0, i32 1, i32 1
  %46 = bitcast float* %44 to <2 x float>*
  %47 = load <2 x float>, <2 x float>* %46, align 4
  %48 = fadd <2 x float> %43, %47
  %49 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 0
  store <2 x float> %43, <2 x float>* %49, align 8
  %50 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 1
  store <2 x float> %48, <2 x float>* %50, align 8
  %51 = bitcast %"class.cc::PaintCanvas"* %1 to void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)***
  %52 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %52, i64 28
  %54 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %53, align 8
  call void %54(%"class.cc::PaintCanvas"* %1, %struct.SkRect* nonnull dereferenceable(16) %32, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %13) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #14
  %55 = load float, float* %44, align 4
  %56 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 3
  %57 = load float, float* %56, align 8
  %58 = fmul float %57, 4.000000e+01
  %59 = fcmp olt float %55, %58
  br i1 %59, label %282, label %60

60:                                               ; preds = %31
  %61 = load float, float* %45, align 4
  %62 = fmul float %57, 3.400000e+01
  %63 = fcmp olt float %61, %62
  br i1 %63, label %282, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 2, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %82

72:                                               ; preds = %64, %68
  %73 = load float, float* %40, align 4
  %74 = fmul float %57, 2.400000e+01
  %75 = fsub float %55, %74
  %76 = fmul float %75, 5.000000e-01
  %77 = fadd float %76, %73
  %78 = load float, float* %41, align 4
  %79 = fsub float %61, %74
  %80 = fmul float %79, 5.000000e-01
  %81 = fadd float %80, %78
  call fastcc void @_ZN5blink12_GLOBAL__N_18DrawIconEPN2cc11PaintCanvasERKNS1_10PaintFlagsEffRK17SkSamplingOptionsf(%"class.cc::PaintCanvas"* %1, %"class.cc::PaintFlags"* dereferenceable(72) %2, float %77, float %81, %struct.SkSamplingOptions* dereferenceable(20) %5, float %57) #14
  br label %282

82:                                               ; preds = %68
  %83 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 5
  %84 = getelementptr inbounds %class.scoped_refptr.267, %class.scoped_refptr.267* %83, i64 0, i32 0
  %85 = load %"class.blink::PlaceholderImage::SharedFont"*, %"class.blink::PlaceholderImage::SharedFont"** %84, align 8
  %86 = icmp eq %"class.blink::PlaceholderImage::SharedFont"* %85, null
  br i1 %86, label %87, label %103

87:                                               ; preds = %82
  %88 = call %"class.blink::PlaceholderImage::SharedFont"* @_ZN5blink16PlaceholderImage10SharedFont19GetOrCreateInstanceEf(float %57)
  %89 = ptrtoint %"class.blink::PlaceholderImage::SharedFont"* %88 to i64
  %90 = bitcast %class.scoped_refptr.267* %83 to i64*
  %91 = load %"class.blink::PlaceholderImage::SharedFont"*, %"class.blink::PlaceholderImage::SharedFont"** %84, align 8
  store i64 %89, i64* %90, align 8
  %92 = icmp eq %"class.blink::PlaceholderImage::SharedFont"* %91, null
  br i1 %92, label %112, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.blink::PlaceholderImage::SharedFont", %"class.blink::PlaceholderImage::SharedFont"* %91, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %94) #14
  %95 = getelementptr inbounds %"class.blink::PlaceholderImage::SharedFont", %"class.blink::PlaceholderImage::SharedFont"* %91, i64 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %112

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.blink::PlaceholderImage::SharedFont", %"class.blink::PlaceholderImage::SharedFont"* %91, i64 0, i32 0, i32 0
  store %"class.blink::PlaceholderImage::SharedFont"* null, %"class.blink::PlaceholderImage::SharedFont"** @_ZN5blink16PlaceholderImage10SharedFont11g_instance_E, align 8
  %100 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %99, i64 2
  %101 = bitcast %"class.base::RefCounted"* %100 to %"class.blink::Font"*
  call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* %101) #14
  %102 = bitcast %"class.blink::PlaceholderImage::SharedFont"* %91 to i8*
  call void @free(i8* %102) #14
  br label %112

103:                                              ; preds = %82
  %104 = getelementptr inbounds %"class.blink::PlaceholderImage::SharedFont", %"class.blink::PlaceholderImage::SharedFont"* %85, i64 0, i32 3
  %105 = load float, float* %104, align 8
  %106 = fcmp oeq float %105, %57
  br i1 %106, label %112, label %107

107:                                              ; preds = %103
  store float %57, float* %104, align 8
  %108 = bitcast %"class.blink::Font"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %108) #14
  %109 = bitcast %"class.blink::FontDescription"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %109) #14
  call fastcc void @_ZN5blink12_GLOBAL__N_132CreatePlaceholderFontDescriptionEf(%"class.blink::FontDescription"* nonnull sret %11, float %57) #14
  call void @_ZN5blink4FontC1ERKNS_15FontDescriptionE(%"class.blink::Font"* nonnull %10, %"class.blink::FontDescription"* nonnull dereferenceable(80) %11) #14
  %110 = getelementptr inbounds %"class.blink::PlaceholderImage::SharedFont", %"class.blink::PlaceholderImage::SharedFont"* %85, i64 0, i32 2
  %111 = call dereferenceable(88) %"class.blink::Font"* @_ZN5blink4FontaSERKS0_(%"class.blink::Font"* %110, %"class.blink::Font"* nonnull dereferenceable(88) %10) #14
  call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* nonnull %10) #14
  call void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %109) #14
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %108) #14
  br label %112

112:                                              ; preds = %107, %103, %98, %93, %87
  %113 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 6
  %114 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i8, i8* %114, align 4, !range !2
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %120, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %119 = load float, float* %118, align 4
  br label %170

120:                                              ; preds = %112
  %121 = load %"class.blink::PlaceholderImage::SharedFont"*, %"class.blink::PlaceholderImage::SharedFont"** %84, align 8
  %122 = getelementptr inbounds %"class.blink::PlaceholderImage::SharedFont", %"class.blink::PlaceholderImage::SharedFont"* %121, i64 0, i32 2
  %123 = bitcast %"class.blink::TextRun"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %123) #14
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %126, label %128

126:                                              ; preds = %120
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  br label %133

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 1
  %132 = ptrtoint %"class.WTF::StringImpl"* %131 to i64
  br label %133

133:                                              ; preds = %126, %128
  %134 = phi %"class.WTF::StringImpl"* [ %127, %126 ], [ %124, %128 ]
  %135 = phi i64 [ 0, %126 ], [ %132, %128 ]
  %136 = phi i32 [ 0, %126 ], [ %130, %128 ]
  %137 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %15, i64 0, i32 1
  store i32 %136, i32* %137, align 8
  %138 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %15, i64 0, i32 2
  store i32 %136, i32* %138, align 4
  %139 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %15, i64 0, i32 3
  store float 0.000000e+00, float* %139, align 8
  %140 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %15, i64 0, i32 4
  store float 0.000000e+00, float* %140, align 4
  %141 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %15, i64 0, i32 5
  %142 = load i16, i16* %141, align 8
  %143 = and i16 %142, -1020
  %144 = or i16 %143, 1
  store i16 %144, i16* %141, align 8
  %145 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %15, i64 0, i32 7, i32 0
  store float 0.000000e+00, float* %145, align 4
  %146 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %15, i64 0, i32 7, i32 1
  %147 = load i8, i8* %146, align 4
  %148 = or i8 %147, 1
  store i8 %148, i8* %146, align 4
  %149 = icmp eq i32 %136, 0
  br i1 %149, label %150, label %153

150:                                              ; preds = %133
  %151 = or i16 %143, 5
  store i16 %151, i16* %141, align 8
  %152 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %15, i64 0, i32 0, i32 0
  store i8* null, i8** %152, align 8
  br label %163

153:                                              ; preds = %133
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 1
  %157 = icmp eq i32 %156, 0
  %158 = bitcast %"class.blink::TextRun"* %15 to i64*
  store i64 %135, i64* %158, align 8
  br i1 %157, label %161, label %159

159:                                              ; preds = %153
  %160 = or i16 %143, 5
  store i16 %160, i16* %141, align 8
  br label %163

161:                                              ; preds = %153
  %162 = and i16 %144, -1023
  store i16 %162, i16* %141, align 8
  br label %163

163:                                              ; preds = %161, %159, %150
  %164 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %122, %"class.blink::TextRun"* nonnull dereferenceable(40) %15, %"class.WTF::HashSet"* null, %"class.blink::FloatRect"* null) #14
  %165 = bitcast float %164 to i32
  %166 = bitcast %"class.absl::optional"* %113 to i64*
  %167 = zext i32 %165 to i64
  %168 = shl nuw i64 %167, 32
  %169 = or i64 %168, 1
  store i64 %169, i64* %166, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %123) #14
  br label %170

170:                                              ; preds = %163, %117
  %171 = phi float [ %119, %117 ], [ %164, %163 ]
  %172 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %173 = load float, float* %56, align 8
  %174 = fmul float %173, 4.200000e+01
  %175 = fadd float %171, %174
  %176 = load float, float* %44, align 4
  %177 = fcmp olt float %176, %175
  %178 = load float, float* %40, align 4
  br i1 %177, label %179, label %189

179:                                              ; preds = %170
  %180 = fmul float %173, 2.400000e+01
  %181 = fsub float %176, %180
  %182 = fmul float %181, 5.000000e-01
  %183 = fadd float %178, %182
  %184 = load float, float* %41, align 4
  %185 = load float, float* %45, align 4
  %186 = fsub float %185, %180
  %187 = fmul float %186, 5.000000e-01
  %188 = fadd float %184, %187
  call fastcc void @_ZN5blink12_GLOBAL__N_18DrawIconEPN2cc11PaintCanvasERKNS1_10PaintFlagsEffRK17SkSamplingOptionsf(%"class.cc::PaintCanvas"* %1, %"class.cc::PaintFlags"* dereferenceable(72) %2, float %183, float %188, %struct.SkSamplingOptions* dereferenceable(20) %5, float %173) #14
  br label %282

189:                                              ; preds = %170
  %190 = fsub float %176, %175
  %191 = fmul float %190, 5.000000e-01
  %192 = fadd float %178, %191
  %193 = load float, float* %41, align 4
  %194 = load float, float* %45, align 4
  %195 = fmul float %173, 3.400000e+01
  %196 = fsub float %194, %195
  %197 = fmul float %196, 5.000000e-01
  %198 = fadd float %193, %197
  %199 = call dereferenceable(152) %"class.blink::Locale"* @_ZN5blink6Locale13DefaultLocaleEv() #14
  %200 = bitcast %"class.blink::Locale"* %199 to i1 (%"class.blink::Locale"*)***
  %201 = load i1 (%"class.blink::Locale"*)**, i1 (%"class.blink::Locale"*)*** %200, align 8
  %202 = getelementptr inbounds i1 (%"class.blink::Locale"*)*, i1 (%"class.blink::Locale"*)** %201, i64 14
  %203 = load i1 (%"class.blink::Locale"*)*, i1 (%"class.blink::Locale"*)** %202, align 8
  %204 = call zeroext i1 %203(%"class.blink::Locale"* %199) #14
  br i1 %204, label %205, label %216

205:                                              ; preds = %189
  %206 = load i8, i8* %114, align 4, !range !2
  %207 = icmp eq i8 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %205
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #15
  unreachable

209:                                              ; preds = %205
  %210 = load float, float* %172, align 4
  %211 = fadd float %192, %210
  %212 = load float, float* %56, align 8
  %213 = fmul float %212, 1.000000e+01
  %214 = fadd float %211, %213
  %215 = fmul float %212, 8.000000e+00
  br label %221

216:                                              ; preds = %189
  %217 = load float, float* %56, align 8
  %218 = fmul float %217, 8.000000e+00
  %219 = fadd float %192, %218
  %220 = fmul float %217, 3.400000e+01
  br label %221

221:                                              ; preds = %216, %209
  %222 = phi float [ %212, %209 ], [ %217, %216 ]
  %223 = phi float [ %214, %209 ], [ %219, %216 ]
  %224 = phi float [ %215, %209 ], [ %220, %216 ]
  %225 = fadd float %192, %224
  %226 = fmul float %222, 5.000000e+00
  %227 = fadd float %198, %226
  call fastcc void @_ZN5blink12_GLOBAL__N_18DrawIconEPN2cc11PaintCanvasERKNS1_10PaintFlagsEffRK17SkSamplingOptionsf(%"class.cc::PaintCanvas"* %1, %"class.cc::PaintFlags"* dereferenceable(72) %2, float %223, float %227, %struct.SkSamplingOptions* dereferenceable(20) %5, float %222)
  store i32 -1426063360, i32* %38, align 8
  %228 = load %"class.blink::PlaceholderImage::SharedFont"*, %"class.blink::PlaceholderImage::SharedFont"** %84, align 8
  %229 = getelementptr inbounds %"class.blink::PlaceholderImage::SharedFont", %"class.blink::PlaceholderImage::SharedFont"* %228, i64 0, i32 2
  %230 = bitcast %"struct.blink::TextRunPaintInfo"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %230) #14
  %231 = bitcast %"class.blink::TextRun"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %231) #14
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %233 = icmp eq %"class.WTF::StringImpl"* %232, null
  br i1 %233, label %234, label %236

234:                                              ; preds = %221
  %235 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  br label %241

236:                                              ; preds = %221
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 1
  %238 = load i32, i32* %237, align 4
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 1
  %240 = ptrtoint %"class.WTF::StringImpl"* %239 to i64
  br label %241

241:                                              ; preds = %234, %236
  %242 = phi i64 [ 0, %234 ], [ %240, %236 ]
  %243 = phi %"class.WTF::StringImpl"* [ %235, %234 ], [ %232, %236 ]
  %244 = phi i32 [ 0, %234 ], [ %238, %236 ]
  %245 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %17, i64 0, i32 1
  store i32 %244, i32* %245, align 8
  %246 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %17, i64 0, i32 2
  store i32 %244, i32* %246, align 4
  %247 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %17, i64 0, i32 3
  store float 0.000000e+00, float* %247, align 8
  %248 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %17, i64 0, i32 4
  store float 0.000000e+00, float* %248, align 4
  %249 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %17, i64 0, i32 5
  %250 = load i16, i16* %249, align 8
  %251 = and i16 %250, -1020
  %252 = or i16 %251, 1
  store i16 %252, i16* %249, align 8
  %253 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %17, i64 0, i32 7, i32 0
  store float 0.000000e+00, float* %253, align 4
  %254 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %17, i64 0, i32 7, i32 1
  %255 = load i8, i8* %254, align 4
  %256 = or i8 %255, 1
  store i8 %256, i8* %254, align 4
  %257 = icmp eq i32 %244, 0
  br i1 %257, label %258, label %261

258:                                              ; preds = %241
  %259 = or i16 %251, 5
  store i16 %259, i16* %249, align 8
  %260 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %17, i64 0, i32 0, i32 0
  store i8* null, i8** %260, align 8
  br label %271

261:                                              ; preds = %241
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load atomic i32, i32* %262 monotonic, align 4
  %264 = and i32 %263, 1
  %265 = icmp eq i32 %264, 0
  %266 = bitcast %"class.blink::TextRun"* %17 to i64*
  store i64 %242, i64* %266, align 8
  br i1 %265, label %269, label %267

267:                                              ; preds = %261
  %268 = or i16 %251, 5
  store i16 %268, i16* %249, align 8
  br label %271

269:                                              ; preds = %261
  %270 = and i16 %252, -1023
  store i16 %270, i16* %249, align 8
  br label %271

271:                                              ; preds = %258, %267, %269
  %272 = getelementptr inbounds %"struct.blink::TextRunPaintInfo", %"struct.blink::TextRunPaintInfo"* %16, i64 0, i32 0
  store %"class.blink::TextRun"* %17, %"class.blink::TextRun"** %272, align 8
  %273 = getelementptr inbounds %"struct.blink::TextRunPaintInfo", %"struct.blink::TextRunPaintInfo"* %16, i64 0, i32 1
  store i32 0, i32* %273, align 8
  %274 = getelementptr inbounds %"struct.blink::TextRunPaintInfo", %"struct.blink::TextRunPaintInfo"* %16, i64 0, i32 2
  store i32 %244, i32* %274, align 4
  %275 = bitcast %"class.blink::FloatPoint"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %275) #14
  %276 = load float, float* %56, align 8
  %277 = fmul float %276, 2.300000e+01
  %278 = fadd float %198, %277
  %279 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %18, i64 0, i32 0
  store float %225, float* %279, align 4
  %280 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %18, i64 0, i32 1
  store float %278, float* %280, align 4
  %281 = call zeroext i1 @_ZNK5blink4Font12DrawBidiTextEPN2cc11PaintCanvasERKNS_16TextRunPaintInfoERKNS_10FloatPointENS0_24CustomFontNotReadyActionEfRKNS1_10PaintFlagsENS0_8DrawTypeE(%"class.blink::Font"* %229, %"class.cc::PaintCanvas"* %1, %"struct.blink::TextRunPaintInfo"* nonnull dereferenceable(16) %16, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %18, i32 1, float 1.000000e+00, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %13, i32 0) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %275) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %231) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %230) #14
  br label %282

282:                                              ; preds = %179, %271, %31, %60, %72
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %33) #14
  br label %283

283:                                              ; preds = %9, %282
  ret void
}

declare %"class.cc::PaintCanvas"* @_ZN2cc13PaintRecorder14beginRecordingERK6SkRect(%"class.cc::PaintRecorder"*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"*) unnamed_addr #3

declare void @_ZN2cc13PaintRecorder24finishRecordingAsPictureEv(%class.sk_sp.268* sret, %"class.cc::PaintRecorder"*) local_unnamed_addr #1

declare i32 @_ZN2cc10PaintImage16GetNextContentIdEv() local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc13PaintRecorderD1Ev(%"class.cc::PaintRecorder"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16PlaceholderImage25SetIconAndTextScaleFactorEf(%"class.blink::PlaceholderImage"* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 3
  %4 = load float, float* %3, align 8
  %5 = fcmp oeq float %4, %1
  br i1 %5, label %21, label %6

6:                                                ; preds = %2
  store float %1, float* %3, align 8
  %7 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 7, i32 0
  %9 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %8, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %8, align 8
  %10 = icmp eq %"class.cc::PaintOpBuffer"* %9, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %9, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = bitcast %"class.cc::PaintOpBuffer"* %9 to %class.SkRefCntBase*
  %17 = bitcast %"class.cc::PaintOpBuffer"* %9 to void (%class.SkRefCntBase*)***
  %18 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, i64 2
  %20 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, align 8
  tail call void %20(%class.SkRefCntBase* nonnull %16) #14
  br label %21

21:                                               ; preds = %15, %11, %6, %2
  ret void
}

declare zeroext i1 @_ZNK5blink9FloatRect10IntersectsERKS0_(%"class.blink::FloatRect"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"*, %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::PlaceholderImage::SharedFont"* @_ZN5blink16PlaceholderImage10SharedFont19GetOrCreateInstanceEf(float) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::FontDescription", align 8
  %3 = alloca %"class.blink::Font", align 8
  %4 = alloca %"class.blink::FontDescription", align 8
  %5 = load %"class.blink::PlaceholderImage::SharedFont"*, %"class.blink::PlaceholderImage::SharedFont"** @_ZN5blink16PlaceholderImage10SharedFont11g_instance_E, align 8
  %6 = icmp eq %"class.blink::PlaceholderImage::SharedFont"* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = ptrtoint %"class.blink::PlaceholderImage::SharedFont"* %5 to i64
  %9 = getelementptr inbounds %"class.blink::PlaceholderImage::SharedFont", %"class.blink::PlaceholderImage::SharedFont"* %5, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %9) #14
  %10 = getelementptr inbounds %"class.blink::PlaceholderImage::SharedFont", %"class.blink::PlaceholderImage::SharedFont"* %5, i64 0, i32 3
  %11 = load float, float* %10, align 8
  %12 = fcmp oeq float %11, %0
  br i1 %12, label %27, label %13

13:                                               ; preds = %7
  store float %0, float* %10, align 8
  %14 = bitcast %"class.blink::Font"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %14) #14
  %15 = bitcast %"class.blink::FontDescription"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %15) #14
  call fastcc void @_ZN5blink12_GLOBAL__N_132CreatePlaceholderFontDescriptionEf(%"class.blink::FontDescription"* nonnull sret %4, float %0) #14
  call void @_ZN5blink4FontC1ERKNS_15FontDescriptionE(%"class.blink::Font"* nonnull %3, %"class.blink::FontDescription"* nonnull dereferenceable(80) %4) #14
  %16 = getelementptr inbounds %"class.blink::PlaceholderImage::SharedFont", %"class.blink::PlaceholderImage::SharedFont"* %5, i64 0, i32 2
  %17 = call dereferenceable(88) %"class.blink::Font"* @_ZN5blink4FontaSERKS0_(%"class.blink::Font"* %16, %"class.blink::Font"* nonnull dereferenceable(88) %3) #14
  call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* nonnull %3) #14
  call void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %14) #14
  br label %27

18:                                               ; preds = %1
  %19 = tail call noalias i8* @malloc(i64 104) #14
  %20 = bitcast i8* %19 to i32*
  store i32 1, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %19, i64 8
  %22 = bitcast i8* %21 to %"class.blink::Font"*
  %23 = bitcast %"class.blink::FontDescription"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %23) #14
  call fastcc void @_ZN5blink12_GLOBAL__N_132CreatePlaceholderFontDescriptionEf(%"class.blink::FontDescription"* nonnull sret %2, float %0) #14
  call void @_ZN5blink4FontC1ERKNS_15FontDescriptionE(%"class.blink::Font"* %22, %"class.blink::FontDescription"* nonnull dereferenceable(80) %2) #14
  call void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %23) #14
  %24 = getelementptr inbounds i8, i8* %19, i64 96
  %25 = bitcast i8* %24 to float*
  store float %0, float* %25, align 8
  %26 = ptrtoint i8* %19 to i64
  store i8* %19, i8** bitcast (%"class.blink::PlaceholderImage::SharedFont"** @_ZN5blink16PlaceholderImage10SharedFont11g_instance_E to i8**), align 8
  br label %27

27:                                               ; preds = %13, %7, %18
  %28 = phi i64 [ %26, %18 ], [ %8, %7 ], [ %8, %13 ]
  %29 = inttoptr i64 %28 to %"class.blink::PlaceholderImage::SharedFont"*
  ret %"class.blink::PlaceholderImage::SharedFont"* %29
}

declare float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"*, %"class.blink::TextRun"* dereferenceable(40), %"class.WTF::HashSet"*, %"class.blink::FloatRect"*) local_unnamed_addr #1

declare dereferenceable(152) %"class.blink::Locale"* @_ZN5blink6Locale13DefaultLocaleEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_18DrawIconEPN2cc11PaintCanvasERKNS1_10PaintFlagsEffRK17SkSamplingOptionsf(%"class.cc::PaintCanvas"*, %"class.cc::PaintFlags"* dereferenceable(72), float, float, %struct.SkSamplingOptions* dereferenceable(20), float) unnamed_addr #0 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.cc::PaintImage", align 8
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRect*
  %11 = alloca { <2 x float>, <2 x float> }, align 8
  %12 = bitcast { <2 x float>, <2 x float> }* %11 to %struct.SkRect*
  %13 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_18DrawIconEPN2cc11PaintCanvasERKNS1_10PaintFlagsEffRK17SkSamplingOptionsfE10icon_image to i8*) acquire, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %41, !prof !3

15:                                               ; preds = %6
  %16 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_18DrawIconEPN2cc11PaintCanvasERKNS1_10PaintFlagsEffRK17SkSamplingOptionsfE10icon_image) #14
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %41, label %18

18:                                               ; preds = %15
  %19 = tail call %"class.blink::Image"* @_ZN5blink5Image20LoadPlatformResourceEiN2ui11ScaleFactorE(i32 24678, i32 1) #14
  %20 = icmp eq %"class.blink::Image"* %19, null
  br i1 %20, label %40, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #14
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #14
  br label %28

28:                                               ; preds = %25, %21
  %29 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %19, i64 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.244", %"class.base::RefCountedThreadSafe.244"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.244", %"class.base::RefCountedThreadSafe.244"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.244"* %34 to %"class.blink::Image"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.244"* %34 to void (%"class.blink::Image"*)***
  %37 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %37, i64 1
  %39 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %38, align 8
  call void %39(%"class.blink::Image"* nonnull %35) #14
  br label %40

40:                                               ; preds = %18, %28, %33
  store %"class.blink::Image"* %19, %"class.blink::Image"** @_ZZN5blink12_GLOBAL__N_18DrawIconEPN2cc11PaintCanvasERKNS1_10PaintFlagsEffRK17SkSamplingOptionsfE10icon_image, align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_18DrawIconEPN2cc11PaintCanvasERKNS1_10PaintFlagsEffRK17SkSamplingOptionsfE10icon_image) #14
  br label %41

41:                                               ; preds = %15, %40, %6
  %42 = bitcast %"class.cc::PaintImage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %42) #14
  %43 = load %"class.blink::Image"*, %"class.blink::Image"** @_ZZN5blink12_GLOBAL__N_18DrawIconEPN2cc11PaintCanvasERKNS1_10PaintFlagsEffRK17SkSamplingOptionsfE10icon_image, align 8
  %44 = bitcast %"class.blink::Image"* %43 to void (%"class.cc::PaintImage"*, %"class.blink::Image"*)***
  %45 = load void (%"class.cc::PaintImage"*, %"class.blink::Image"*)**, void (%"class.cc::PaintImage"*, %"class.blink::Image"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.cc::PaintImage"*, %"class.blink::Image"*)*, void (%"class.cc::PaintImage"*, %"class.blink::Image"*)** %45, i64 30
  %47 = load void (%"class.cc::PaintImage"*, %"class.blink::Image"*)*, void (%"class.cc::PaintImage"*, %"class.blink::Image"*)** %46, align 8
  call void %47(%"class.cc::PaintImage"* nonnull sret %8, %"class.blink::Image"* %43) #14
  %48 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #14
  %49 = load %"class.blink::Image"*, %"class.blink::Image"** @_ZZN5blink12_GLOBAL__N_18DrawIconEPN2cc11PaintCanvasERKNS1_10PaintFlagsEffRK17SkSamplingOptionsfE10icon_image, align 8
  %50 = bitcast %"class.blink::Image"* %49 to i64 (%"class.blink::Image"*)***
  %51 = load i64 (%"class.blink::Image"*)**, i64 (%"class.blink::Image"*)*** %50, align 8
  %52 = getelementptr inbounds i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %51, i64 13
  %53 = load i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %52, align 8
  %54 = call i64 %53(%"class.blink::Image"* %49) #14
  %55 = trunc i64 %54 to i32
  %56 = sitofp i32 %55 to float
  %57 = lshr i64 %54, 32
  %58 = trunc i64 %57 to i32
  %59 = sitofp i32 %58 to float
  %60 = insertelement <2 x float> undef, float %56, i32 0
  %61 = insertelement <2 x float> %60, float %59, i32 1
  %62 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %62, align 8
  %63 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  store <2 x float> %61, <2 x float>* %63, align 8
  %64 = bitcast { <2 x float>, <2 x float> }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #14
  %65 = fmul float %5, 2.400000e+01
  %66 = insertelement <2 x float> undef, float %2, i32 0
  %67 = insertelement <2 x float> %66, float %3, i32 1
  %68 = fadd float %65, %2
  %69 = insertelement <2 x float> undef, float %68, i32 0
  %70 = fadd float %65, %3
  %71 = insertelement <2 x float> %69, float %70, i32 1
  %72 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0
  store <2 x float> %67, <2 x float>* %72, align 8
  %73 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  store <2 x float> %71, <2 x float>* %73, align 8
  %74 = bitcast %"class.cc::PaintCanvas"* %0 to void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*, i32)***
  %75 = load void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*, i32)**, void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*, i32)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*, i32)*, void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*, i32)** %75, i64 36
  %77 = load void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*, i32)*, void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*, i32)** %76, align 8
  call void %77(%"class.cc::PaintCanvas"* %0, %"class.cc::PaintImage"* nonnull dereferenceable(104) %8, %struct.SkRect* nonnull dereferenceable(16) %10, %struct.SkRect* nonnull dereferenceable(16) %12, %struct.SkSamplingOptions* dereferenceable(20) %4, %"class.cc::PaintFlags"* %1, i32 1) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #14
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %42) #14
  ret void
}

declare zeroext i1 @_ZNK5blink4Font12DrawBidiTextEPN2cc11PaintCanvasERKNS_16TextRunPaintInfoERKNS_10FloatPointENS0_24CustomFontNotReadyActionEfRKNS1_10PaintFlagsENS0_8DrawTypeE(%"class.blink::Font"*, %"class.cc::PaintCanvas"*, %"struct.blink::TextRunPaintInfo"* dereferenceable(16), %"class.blink::FloatPoint"* dereferenceable(8), i32, float, %"class.cc::PaintFlags"* dereferenceable(72), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16PlaceholderImage11DrawPatternERNS_15GraphicsContextERKNS_9FloatRectERKNS_9FloatSizeERKNS_10FloatPointE11SkBlendModeS5_S8_NS_27RespectImageOrientationEnumE(%"class.blink::PlaceholderImage"* nocapture, %"class.blink::GraphicsContext"* nocapture readonly dereferenceable(112), %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatSize"* nocapture readnone dereferenceable(8), %"class.blink::FloatPoint"* nocapture readnone dereferenceable(8), i32, %"class.blink::FloatRect"* nocapture readonly dereferenceable(16), %"class.blink::FloatSize"* nocapture readnone dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %10 = alloca %"class.cc::PaintFlags", align 8
  %11 = alloca %struct.SkSamplingOptions, align 4
  %12 = bitcast %"class.cc::PaintFlags"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %12) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN5blink16PlaceholderImage11DrawPatternERNS_15GraphicsContextERKNS_9FloatRectERKNS_9FloatSizeERKNS_10FloatPointE11SkBlendModeS5_S8_NS_27RespectImageOrientationEnumE.flags to i8*), i64 72, i1 false)
  %13 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %1, i64 0, i32 4
  %14 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %14, i64 0, i32 1
  call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* nonnull %10, %"class.cc::PaintFlags"* dereferenceable(72) %15) #14
  %16 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %10, i64 0, i32 9
  store i32 %5, i32* %16, align 4
  %17 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %1, i64 0, i32 0
  %18 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %17, align 8
  %19 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %19) #14
  %20 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %13, align 8, !noalias !4
  %21 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %20, i64 0, i32 4
  %22 = load i32, i32* %21, align 4, !noalias !4
  call void @_ZN2cc10PaintFlags32FilterQualityToSkSamplingOptionsE15SkFilterQuality(%struct.SkSamplingOptions* nonnull sret %11, i32 %22) #14
  call void @_ZN5blink16PlaceholderImage4DrawEPN2cc11PaintCanvasERKNS1_10PaintFlagsERKNS_9FloatRectES9_RK17SkSamplingOptionsNS_27RespectImageOrientationEnumENS_5Image17ImageClampingModeENSE_17ImageDecodingModeE(%"class.blink::PlaceholderImage"* %0, %"class.cc::PaintCanvas"* %18, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %10, %"class.blink::FloatRect"* dereferenceable(16) %6, %"class.blink::FloatRect"* dereferenceable(16) %2, %struct.SkSamplingOptions* nonnull dereferenceable(20) %11, i32 undef, i32 undef, i32 undef)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %19) #14
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16PlaceholderImage18DestroyDecodedDataEv(%"class.blink::PlaceholderImage"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 7, i32 0
  %3 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %2, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %2, align 8
  %4 = icmp eq %"class.cc::PaintOpBuffer"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 -1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = bitcast %"class.cc::PaintOpBuffer"* %3 to %class.SkRefCntBase*
  %11 = bitcast %"class.cc::PaintOpBuffer"* %3 to void (%class.SkRefCntBase*)***
  %12 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %12, i64 2
  %14 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, align 8
  tail call void %14(%class.SkRefCntBase* nonnull %10) #14
  br label %15

15:                                               ; preds = %1, %5, %9
  %16 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 5
  %17 = bitcast %class.scoped_refptr.267* %16 to i64*
  %18 = getelementptr inbounds %class.scoped_refptr.267, %class.scoped_refptr.267* %16, i64 0, i32 0
  %19 = load %"class.blink::PlaceholderImage::SharedFont"*, %"class.blink::PlaceholderImage::SharedFont"** %18, align 8
  store i64 0, i64* %17, align 8
  %20 = icmp eq %"class.blink::PlaceholderImage::SharedFont"* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::PlaceholderImage::SharedFont", %"class.blink::PlaceholderImage::SharedFont"* %19, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #14
  %23 = getelementptr inbounds %"class.blink::PlaceholderImage::SharedFont", %"class.blink::PlaceholderImage::SharedFont"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %31

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::PlaceholderImage::SharedFont", %"class.blink::PlaceholderImage::SharedFont"* %19, i64 0, i32 0, i32 0
  store %"class.blink::PlaceholderImage::SharedFont"* null, %"class.blink::PlaceholderImage::SharedFont"** @_ZN5blink16PlaceholderImage10SharedFont11g_instance_E, align 8
  %28 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %27, i64 2
  %29 = bitcast %"class.base::RefCounted"* %28 to %"class.blink::Font"*
  tail call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* %29) #14
  %30 = bitcast %"class.blink::PlaceholderImage::SharedFont"* %19 to i8*
  tail call void @free(i8* %30) #14
  br label %31

31:                                               ; preds = %15, %21, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink16PlaceholderImage7SetDataE13scoped_refptrIN3WTF12SharedBufferEEb(%"class.blink::PlaceholderImage"* nocapture readnone, %"class.WTF::SharedBuffer"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.WTF::SharedBuffer"* %1, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %1, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #14
  %7 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %1) #14
  %11 = bitcast %"class.WTF::SharedBuffer"* %1 to i8*
  tail call void @free(i8* %11) #14
  br label %12

12:                                               ; preds = %3, %5, %10
  ret i32 2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::Font"* @_ZNK5blink16PlaceholderImage17GetFontForTestingEv(%"class.blink::PlaceholderImage"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::PlaceholderImage", %"class.blink::PlaceholderImage"* %0, i64 0, i32 5, i32 0
  %3 = load %"class.blink::PlaceholderImage::SharedFont"*, %"class.blink::PlaceholderImage::SharedFont"** %2, align 8
  %4 = icmp eq %"class.blink::PlaceholderImage::SharedFont"* %3, null
  %5 = getelementptr inbounds %"class.blink::PlaceholderImage::SharedFont", %"class.blink::PlaceholderImage::SharedFont"* %3, i64 0, i32 2
  %6 = select i1 %4, %"class.blink::Font"* null, %"class.blink::Font"* %5
  ret %"class.blink::Font"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image10IsSVGImageEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image13IsBitmapImageEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image19IsStaticBitmapImageEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5Image22CurrentFrameIsCompleteEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5Image25CurrentFrameIsLazyDecodedEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink5Image10FrameCountEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image15IsTextureBackedEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image16HasIntrinsicSizeEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink5Image20DensityCorrectedSizeEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::Image"* %0 to i64 (%"class.blink::Image"*)***
  %3 = load i64 (%"class.blink::Image"*)**, i64 (%"class.blink::Image"*)*** %2, align 8
  %4 = getelementptr inbounds i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %3, i64 13
  %5 = load i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %4, align 8
  %6 = tail call i64 %5(%"class.blink::Image"* %0) #14
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink5Image20PreferredDisplaySizeEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::Image"* %0 to i64 (%"class.blink::Image"*)***
  %3 = load i64 (%"class.blink::Image"*)**, i64 (%"class.blink::Image"*)*** %2, align 8
  %4 = getelementptr inbounds i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %3, i64 13
  %5 = load i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %4, align 8
  %6 = tail call i64 %5(%"class.blink::Image"* %0) #14
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden <2 x float> @_ZNK5blink5Image11SizeAsFloatENS_27RespectImageOrientationEnumE(%"class.blink::Image"*, i32) unnamed_addr #6 comdat align 2 {
  %3 = tail call i64 @_ZNK5blink5Image4SizeENS_27RespectImageOrientationEnumE(%"class.blink::Image"* %0, i32 %1) #14
  %4 = trunc i64 %3 to i32
  %5 = lshr i64 %3, 32
  %6 = trunc i64 %5 to i32
  %7 = sitofp i32 %4 to float
  %8 = sitofp i32 %6 to float
  %9 = insertelement <2 x float> undef, float %7, i32 0
  %10 = insertelement <2 x float> %9, float %8, i32 1
  ret <2 x float> %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image10GetHotSpotERNS_8IntPointE(%"class.blink::Image"*, %"class.blink::IntPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink5Image11DataChangedEb(%"class.blink::Image"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare %"class.WTF::StringImpl"* @_ZNK5blink5Image17FilenameExtensionEv(%"class.blink::Image"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::SharedBuffer"* @_ZN5blink5Image4DataEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %2, align 8
  %4 = icmp eq %"class.WTF::SharedBuffer"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %6) #14
  br label %7

7:                                                ; preds = %1, %5
  ret %"class.WTF::SharedBuffer"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5Image14StartAnimationEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5Image14ResetAnimationEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5Image13MaybeAnimatedEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5Image18SetAnimationPolicyENS_5mojom20ImageAnimationPolicyE(%"class.blink::Image"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink5Image15AnimationPolicyEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5Image26AdvanceAnimationForTestingEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.blink::Image"* @_ZN5blink5Image20ImageForDefaultFrameEv(%"class.blink::Image"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image21HasDefaultOrientationEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8 @_ZNK5blink5Image23CurrentFrameOrientationEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i8 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink5Image32CurrentFrameDensityCorrectedSizeEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare zeroext i1 @_ZN5blink5Image11ApplyShaderERN2cc10PaintFlagsERK8SkMatrix(%"class.blink::Image"*, %"class.cc::PaintFlags"* dereferenceable(72), %class.SkMatrix* dereferenceable(40)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WebGraphicsContext3DProvider"* @_ZNK5blink5Image15ContextProviderEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::WebGraphicsContext3DProvider"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink5Image22ContextProviderWrapperEv(%"class.base::WeakPtr.402"* noalias sret, %"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::WeakPtr.402", %"class.base::WeakPtr.402"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5Image15IsSizeAvailableEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double, i32) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEiRKN3WTF6StringE(%"class.blink::Locale"*, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale24ConvertToLocalizedNumberERKN3WTF6StringE(%"class.blink::Locale"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_132CreatePlaceholderFontDescriptionEf(%"class.blink::FontDescription"* noalias sret, float) unnamed_addr #0 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = bitcast %"class.blink::FontDescription"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 bitcast (%"class.blink::FontDescription"* @__const._ZN5blink12_GLOBAL__N_132CreatePlaceholderFontDescriptionEf.description to i8*), i64 80, i1 false)
  tail call void @_ZN5blink15FontDescriptionC1Ev(%"class.blink::FontDescription"* %0) #14
  %8 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i64 6) #14
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #14
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !7

26:                                               ; preds = %17
  call void @llvm.trap() #14
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %2
  %30 = ptrtoint %"class.WTF::StringImpl"* %10 to i64
  %31 = bitcast %"class.blink::FontDescription"* %0 to i64*
  %32 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  store i64 %30, i64* %31, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #14
  br label %48

48:                                               ; preds = %29, %44, %47
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #14
  br label %64

64:                                               ; preds = %48, %60, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  %65 = call noalias i8* @malloc(i64 24) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 16, i1 false) #14
  %66 = getelementptr inbounds i8, i8* %65, i64 16
  %67 = bitcast i8* %66 to i32*
  store i32 1, i32* %67, align 4
  %68 = ptrtoint i8* %65 to i64
  %69 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #14
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i64 14) #14
  %70 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %90, label %73

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %90

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #14
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !7

87:                                               ; preds = %78
  call void @llvm.trap() #14
  unreachable

88:                                               ; preds = %78
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %79, align 4
  br label %90

90:                                               ; preds = %88, %73, %64
  %91 = ptrtoint %"class.WTF::StringImpl"* %71 to i64
  %92 = bitcast i8* %65 to i64*
  %93 = bitcast i8* %65 to %"class.WTF::StringImpl"**
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  store i64 %91, i64* %92, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #14
  br label %109

109:                                              ; preds = %90, %105, %108
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #14
  br label %125

125:                                              ; preds = %109, %121, %124
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #14
  %126 = call noalias i8* @malloc(i64 24) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 16, i1 false) #14
  %127 = getelementptr inbounds i8, i8* %126, i64 16
  %128 = bitcast i8* %127 to i32*
  store i32 1, i32* %128, align 4
  %129 = ptrtoint i8* %126 to i64
  %130 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #14
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i64 9) #14
  %131 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %151, label %134

134:                                              ; preds = %125
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %151

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  %142 = zext i32 %141 to i33
  %143 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %142, i33 1) #14
  %144 = extractvalue { i33, i1 } %143, 1
  %145 = extractvalue { i33, i1 } %143, 0
  %146 = icmp slt i33 %145, 0
  %147 = or i1 %144, %146
  br i1 %147, label %148, label %149, !prof !7

148:                                              ; preds = %139
  call void @llvm.trap() #14
  unreachable

149:                                              ; preds = %139
  %150 = trunc i33 %145 to i32
  store i32 %150, i32* %140, align 4
  br label %151

151:                                              ; preds = %149, %134, %125
  %152 = ptrtoint %"class.WTF::StringImpl"* %132 to i64
  %153 = bitcast i8* %126 to i64*
  %154 = bitcast i8* %126 to %"class.WTF::StringImpl"**
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  store i64 %152, i64* %153, align 8
  %156 = icmp eq %"class.WTF::StringImpl"* %155, null
  br i1 %156, label %170, label %157

157:                                              ; preds = %151
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  br i1 %161, label %164, label %166

164:                                              ; preds = %157
  %165 = add i32 %163, -1
  store i32 %165, i32* %162, align 4
  br label %166

166:                                              ; preds = %164, %157
  %167 = phi i32 [ %165, %164 ], [ %163, %157 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %155) #14
  br label %170

170:                                              ; preds = %151, %166, %169
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #14
  br label %186

186:                                              ; preds = %170, %182, %185
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #14
  %187 = call noalias i8* @malloc(i64 24) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %187, i8 0, i64 16, i1 false) #14
  %188 = getelementptr inbounds i8, i8* %187, i64 16
  %189 = bitcast i8* %188 to i32*
  store i32 1, i32* %189, align 4
  %190 = ptrtoint i8* %187 to i64
  %191 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %191) #14
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 5) #14
  %192 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %192, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %194, label %212, label %195

195:                                              ; preds = %186
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %212

200:                                              ; preds = %195
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %202 = load i32, i32* %201, align 4
  %203 = zext i32 %202 to i33
  %204 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %203, i33 1) #14
  %205 = extractvalue { i33, i1 } %204, 1
  %206 = extractvalue { i33, i1 } %204, 0
  %207 = icmp slt i33 %206, 0
  %208 = or i1 %205, %207
  br i1 %208, label %209, label %210, !prof !7

209:                                              ; preds = %200
  call void @llvm.trap() #14
  unreachable

210:                                              ; preds = %200
  %211 = trunc i33 %206 to i32
  store i32 %211, i32* %201, align 4
  br label %212

212:                                              ; preds = %210, %195, %186
  %213 = ptrtoint %"class.WTF::StringImpl"* %193 to i64
  %214 = bitcast i8* %187 to i64*
  %215 = bitcast i8* %187 to %"class.WTF::StringImpl"**
  %216 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %215, align 8
  store i64 %213, i64* %214, align 8
  %217 = icmp eq %"class.WTF::StringImpl"* %216, null
  br i1 %217, label %231, label %218

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = and i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  br i1 %222, label %225, label %227

225:                                              ; preds = %218
  %226 = add i32 %224, -1
  store i32 %226, i32* %223, align 4
  br label %227

227:                                              ; preds = %225, %218
  %228 = phi i32 [ %226, %225 ], [ %224, %218 ]
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %227
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %216) #14
  br label %231

231:                                              ; preds = %212, %227, %230
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %192, align 8
  %233 = icmp eq %"class.WTF::StringImpl"* %232, null
  br i1 %233, label %247, label %234

234:                                              ; preds = %231
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load atomic i32, i32* %235 monotonic, align 4
  %237 = and i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  br i1 %238, label %241, label %243

241:                                              ; preds = %234
  %242 = add i32 %240, -1
  store i32 %242, i32* %239, align 4
  br label %243

243:                                              ; preds = %241, %234
  %244 = phi i32 [ %242, %241 ], [ %240, %234 ]
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %247

246:                                              ; preds = %243
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %232) #14
  br label %247

247:                                              ; preds = %231, %243, %246
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %191) #14
  %248 = getelementptr inbounds i8, i8* %126, i64 8
  %249 = bitcast i8* %248 to i64*
  %250 = bitcast i8* %248 to %"class.blink::SharedFontFamily"**
  %251 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %250, align 8
  store i64 %190, i64* %249, align 8
  %252 = icmp eq %"class.blink::SharedFontFamily"* %251, null
  br i1 %252, label %263, label %253

253:                                              ; preds = %247
  %254 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %251, i64 0, i32 1, i32 0
  %255 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %254, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %255) #14
  %256 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %254, i64 0, i32 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %263

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %254, i64 -4
  %261 = bitcast %"class.base::RefCounted.243"* %260 to %"class.blink::FontFamily"*
  call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %261) #14
  %262 = bitcast %"class.base::RefCounted.243"* %260 to i8*
  call void @free(i8* %262) #14
  br label %263

263:                                              ; preds = %247, %253, %259
  %264 = getelementptr inbounds i8, i8* %65, i64 8
  %265 = bitcast i8* %264 to i64*
  %266 = bitcast i8* %264 to %"class.blink::SharedFontFamily"**
  %267 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %266, align 8
  store i64 %129, i64* %265, align 8
  %268 = icmp eq %"class.blink::SharedFontFamily"* %267, null
  br i1 %268, label %279, label %269

269:                                              ; preds = %263
  %270 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %267, i64 0, i32 1, i32 0
  %271 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %270, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %271) #14
  %272 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %270, i64 0, i32 0, i32 0
  %273 = load i32, i32* %272, align 4
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %279

275:                                              ; preds = %269
  %276 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %270, i64 -4
  %277 = bitcast %"class.base::RefCounted.243"* %276 to %"class.blink::FontFamily"*
  call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %277) #14
  %278 = bitcast %"class.base::RefCounted.243"* %276 to i8*
  call void @free(i8* %278) #14
  br label %279

279:                                              ; preds = %263, %269, %275
  %280 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 0, i32 1
  %281 = bitcast %class.scoped_refptr.1* %280 to i64*
  %282 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %280, i64 0, i32 0
  %283 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %282, align 8
  store i64 %68, i64* %281, align 8
  %284 = icmp eq %"class.blink::SharedFontFamily"* %283, null
  br i1 %284, label %295, label %285

285:                                              ; preds = %279
  %286 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %283, i64 0, i32 1, i32 0
  %287 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %286, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %287) #14
  %288 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %286, i64 0, i32 0, i32 0
  %289 = load i32, i32* %288, align 4
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %295

291:                                              ; preds = %285
  %292 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %286, i64 -4
  %293 = bitcast %"class.base::RefCounted.243"* %292 to %"class.blink::FontFamily"*
  call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %293) #14
  %294 = bitcast %"class.base::RefCounted.243"* %292 to i8*
  call void @free(i8* %294) #14
  br label %295

295:                                              ; preds = %291, %285, %279
  %296 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 12, i32 0
  %297 = bitcast %"struct.blink::FontDescription::BitFields"* %296 to i64*
  %298 = load i64, i64* %297, align 8
  %299 = and i64 %298, -1793
  %300 = or i64 %299, 768
  store i64 %300, i64* %297, align 8
  %301 = fmul float %1, 1.400000e+01
  %302 = fcmp ult float %301, 0x47EFFFFFE0000000
  %303 = fcmp ole float %301, 0xC7EFFFFFE0000000
  %304 = select i1 %303, float 0xC7EFFFFFE0000000, float %301
  %305 = select i1 %302, float %304, float 0x47EFFFFFE0000000
  %306 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 5
  store float %305, float* %306, align 4
  %307 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 10, i32 0, i32 0
  store i16 2000, i16* %307, align 8
  ret void
}

declare void @_ZN5blink4FontC1ERKNS_15FontDescriptionE(%"class.blink::Font"*, %"class.blink::FontDescription"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutLocale"* %3, null
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #14
  %7 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %55

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 5, i32 0
  %12 = load %"class.blink::Hyphenation"*, %"class.blink::Hyphenation"** %11, align 8
  %13 = icmp eq %"class.blink::Hyphenation"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::Hyphenation", %"class.blink::Hyphenation"* %12, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.base::RefCounted.21", %"class.base::RefCounted.21"* %15, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #14
  %17 = getelementptr inbounds %"class.base::RefCounted.21", %"class.base::RefCounted.21"* %15, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.base::RefCounted.21", %"class.base::RefCounted.21"* %15, i64 -2
  %22 = bitcast %"class.base::RefCounted.21"* %21 to %"class.blink::Hyphenation"*
  %23 = bitcast %"class.base::RefCounted.21"* %21 to void (%"class.blink::Hyphenation"*)***
  %24 = load void (%"class.blink::Hyphenation"*)**, void (%"class.blink::Hyphenation"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %24, i64 1
  %26 = load void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %25, align 8
  tail call void %26(%"class.blink::Hyphenation"* nonnull %22) #14
  br label %27

27:                                               ; preds = %20, %14, %10
  %28 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 3
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #16
  br label %36

36:                                               ; preds = %33, %27
  %37 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #14
  br label %53

53:                                               ; preds = %36, %49, %52
  %54 = bitcast %"class.blink::LayoutLocale"* %3 to i8*
  tail call void @free(i8* %54) #14
  br label %55

55:                                               ; preds = %1, %5, %53
  %56 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 2, i32 0
  %57 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %56, align 8
  %58 = icmp eq %"class.blink::FontVariationSettings"* %57, null
  br i1 %58, label %79, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %57, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.base::RefCounted.14", %"class.base::RefCounted.14"* %60, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #14
  %62 = getelementptr inbounds %"class.base::RefCounted.14", %"class.base::RefCounted.14"* %60, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %79

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.base::RefCounted.14", %"class.base::RefCounted.14"* %60, i64 -4
  %67 = bitcast %"class.base::RefCounted.14"* %66 to %"class.blink::FontTagValuePair.10"**
  %68 = load %"class.blink::FontTagValuePair.10"*, %"class.blink::FontTagValuePair.10"** %67, align 8
  %69 = icmp eq %"class.blink::FontTagValuePair.10"* %68, null
  %70 = bitcast %"class.blink::FontTagValuePair.10"* %68 to i8*
  br i1 %69, label %77, label %71, !prof !8

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.base::RefCounted.14", %"class.base::RefCounted.14"* %60, i64 -1, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75, !prof !7

75:                                               ; preds = %71
  store i32 0, i32* %72, align 4
  br label %76

76:                                               ; preds = %75, %71
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %70) #14
  br label %77

77:                                               ; preds = %76, %65
  %78 = bitcast %"class.base::RefCounted.14"* %66 to i8*
  tail call void @free(i8* %78) #14
  br label %79

79:                                               ; preds = %55, %59, %77
  %80 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 1, i32 0
  %81 = load %"class.blink::FontFeatureSettings"*, %"class.blink::FontFeatureSettings"** %80, align 8
  %82 = icmp eq %"class.blink::FontFeatureSettings"* %81, null
  br i1 %82, label %103, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %81, i64 0, i32 1, i32 0
  %85 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %84, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %85) #14
  %86 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %84, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %103

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %84, i64 -4
  %91 = bitcast %"class.base::RefCounted.4"* %90 to %"class.blink::FontTagValuePair"**
  %92 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %91, align 8
  %93 = icmp eq %"class.blink::FontTagValuePair"* %92, null
  %94 = bitcast %"class.blink::FontTagValuePair"* %92 to i8*
  br i1 %93, label %101, label %95, !prof !8

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %84, i64 -1, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %100, label %99, !prof !7

99:                                               ; preds = %95
  store i32 0, i32* %96, align 4
  br label %100

100:                                              ; preds = %99, %95
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %94) #14
  br label %101

101:                                              ; preds = %100, %89
  %102 = bitcast %"class.base::RefCounted.4"* %90 to i8*
  tail call void @free(i8* %102) #14
  br label %103

103:                                              ; preds = %79, %83, %101
  %104 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 0
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %104) #14
  ret void
}

declare void @_ZN5blink15FontDescriptionC1Ev(%"class.blink::FontDescription"*) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %2, align 8
  %4 = icmp eq %"class.blink::SharedFontFamily"* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1, %22
  %6 = phi %"class.blink::SharedFontFamily"* [ %12, %22 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %11, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #14
  %15 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %13, i64 -4
  %20 = bitcast %"class.base::RefCounted.243"* %19 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %20) #14
  %21 = bitcast %"class.base::RefCounted.243"* %19 to i8*
  tail call void @free(i8* %21) #14
  br label %22

22:                                               ; preds = %10, %18
  %23 = icmp eq %"class.blink::SharedFontFamily"* %12, null
  br i1 %23, label %34, label %5

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #14
  %27 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %25, i64 -4
  %32 = bitcast %"class.base::RefCounted.243"* %31 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %32) #14
  %33 = bitcast %"class.base::RefCounted.243"* %31 to i8*
  tail call void @free(i8* %33) #14
  br label %34

34:                                               ; preds = %22, %24, %30
  %35 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  %36 = icmp eq %"class.blink::SharedFontFamily"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %35, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %38, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #14
  %40 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %38, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCounted.243", %"class.base::RefCounted.243"* %38, i64 -4
  %45 = bitcast %"class.base::RefCounted.243"* %44 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %45) #14
  %46 = bitcast %"class.base::RefCounted.243"* %44 to i8*
  tail call void @free(i8* %46) #14
  br label %47

47:                                               ; preds = %1, %43, %37, %34
  %48 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #14
  br label %64

64:                                               ; preds = %47, %60, %63
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare dereferenceable(88) %"class.blink::Font"* @_ZN5blink4FontaSERKS0_(%"class.blink::Font"*, %"class.blink::Font"* dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4FontD1Ev(%"class.blink::Font"*) unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #12

declare %"class.blink::Image"* @_ZN5blink5Image20LoadPlatformResourceEiN2ui11ScaleFactorE(i32, i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #12

; Function Attrs: nounwind
declare void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"*) unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN2cc10PaintFlags32FilterQualityToSkSamplingOptionsE15SkFilterQuality(%struct.SkSamplingOptions* sret, i32) local_unnamed_addr #1

declare i64 @_ZNK5blink5Image4SizeENS_27RespectImageOrientationEnumE(%"class.blink::Image"*, i32) local_unnamed_addr #1

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK5blink15GraphicsContext20ImageSamplingOptionsEv: argument 0"}
!6 = distinct !{!6, !"_ZNK5blink15GraphicsContext20ImageSamplingOptionsEv"}
!7 = !{!"branch_weights", i32 1, i32 2000}
!8 = !{!"branch_weights", i32 2000, i32 1}
