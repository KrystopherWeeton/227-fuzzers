; ModuleID = '../../components/viz/service/display/sync_query_collection.cc'
source_filename = "../../components/viz/service/display/sync_query_collection.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.viz::SyncQueryCollection" = type { %"class.base::circular_deque", %"class.base::circular_deque", %"class.std::__1::unique_ptr", %"class.gpu::gles2::GLES2Interface"* }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.viz::SyncQuery"* }
%"class.viz::SyncQuery" = type { i32 (...)**, %"class.gpu::gles2::GLES2Interface"*, i32, i8, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.gpu::gles2::GLES2Interface" = type { %"class.gpu::InterfaceBase" }
%"class.gpu::InterfaceBase" = type { i32 (...)** }
%"class.viz::ResourceFence" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.8", [4 x i8] }>
%"class.base::RefCountedThreadSafe.8" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.viz::SyncQuery::Fence" = type { %"class.viz::ResourceFence.base", %"class.base::WeakPtr" }
%"class.viz::ResourceFence.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.8" }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3viz9SyncQuery5BeginEv = comdat any

$_ZN3viz9SyncQuery5Fence3SetEv = comdat any

$_ZN3viz9SyncQuery5Fence9HasPassedEv = comdat any

$_ZN3viz9SyncQuery5FenceD2Ev = comdat any

$_ZN3viz9SyncQuery5FenceD0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz9SyncQueryENS1_14default_deleteIS4_EEEEE13DestructRangeEmm = comdat any

$_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_ = comdat any

$_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm = comdat any

$_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN3viz9SyncQueryENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_ = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz9SyncQueryENS1_14default_deleteIS4_EEEEE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz9SyncQueryENS1_14default_deleteIS4_EEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_ = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz9SyncQueryENS1_14default_deleteIS4_EEEEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm = comdat any

$_ZN3viz9SyncQueryD2Ev = comdat any

$_ZN3viz9SyncQueryD0Ev = comdat any

$_ZTVN3viz9SyncQuery5FenceE = comdat any

$_ZTVN3viz9SyncQueryE = comdat any

@.str = private unnamed_addr constant [62 x i8] c"../../components/viz/service/display/sync_query_collection.cc\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"Reached limit of pending sync queries.\00", align 1
@_ZTVN3viz9SyncQuery5FenceE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::SyncQuery::Fence"*)* @_ZN3viz9SyncQuery5Fence3SetEv to i8*), i8* bitcast (i1 (%"class.viz::SyncQuery::Fence"*)* @_ZN3viz9SyncQuery5Fence9HasPassedEv to i8*), i8* bitcast (void (%"class.viz::SyncQuery::Fence"*)* @_ZN3viz9SyncQuery5FenceD2Ev to i8*), i8* bitcast (void (%"class.viz::SyncQuery::Fence"*)* @_ZN3viz9SyncQuery5FenceD0Ev to i8*)] }, comdat, align 8
@.str.2 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.5 = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.6 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.8 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@_ZTVN3viz9SyncQueryE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::SyncQuery"*)* @_ZN3viz9SyncQueryD2Ev to i8*), i8* bitcast (void (%"class.viz::SyncQuery"*)* @_ZN3viz9SyncQueryD0Ev to i8*)] }, comdat, align 8

@_ZN3viz19SyncQueryCollectionC1EPN3gpu5gles214GLES2InterfaceE = hidden unnamed_addr alias void (%"class.viz::SyncQueryCollection"*, %"class.gpu::gles2::GLES2Interface"*), void (%"class.viz::SyncQueryCollection"*, %"class.gpu::gles2::GLES2Interface"*)* @_ZN3viz19SyncQueryCollectionC2EPN3gpu5gles214GLES2InterfaceE
@_ZN3viz19SyncQueryCollectionD1Ev = hidden unnamed_addr alias void (%"class.viz::SyncQueryCollection"*), void (%"class.viz::SyncQueryCollection"*)* @_ZN3viz19SyncQueryCollectionD2Ev
@_ZN3viz19SyncQueryCollectionC1EOS0_ = hidden unnamed_addr alias void (%"class.viz::SyncQueryCollection"*, %"class.viz::SyncQueryCollection"*), void (%"class.viz::SyncQueryCollection"*, %"class.viz::SyncQueryCollection"*)* @_ZN3viz19SyncQueryCollectionC2EOS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz19SyncQueryCollectionC2EPN3gpu5gles214GLES2InterfaceE(%"class.viz::SyncQueryCollection"* nocapture, %"class.gpu::gles2::GLES2Interface"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 3
  %4 = bitcast %"class.viz::SyncQueryCollection"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 72, i1 false)
  store %"class.gpu::gles2::GLES2Interface"* %1, %"class.gpu::gles2::GLES2Interface"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz19SyncQueryCollectionD2Ev(%"class.viz::SyncQueryCollection"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.viz::SyncQuery"*, %"class.viz::SyncQuery"** %2, align 8
  store %"class.viz::SyncQuery"* null, %"class.viz::SyncQuery"** %2, align 8
  %4 = icmp eq %"class.viz::SyncQuery"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.viz::SyncQuery"* %3 to void (%"class.viz::SyncQuery"*)***
  %7 = load void (%"class.viz::SyncQuery"*)**, void (%"class.viz::SyncQuery"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.viz::SyncQuery"*)*, void (%"class.viz::SyncQuery"*)** %7, i64 1
  %9 = load void (%"class.viz::SyncQuery"*)*, void (%"class.viz::SyncQuery"*)** %8, align 8
  tail call void %9(%"class.viz::SyncQuery"* nonnull %3) #10
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 1, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 1, i32 2
  %15 = load i64, i64* %14, align 8
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz9SyncQueryENS1_14default_deleteIS4_EEEEE13DestructRangeEmm(%"class.base::circular_deque"* %11, i64 %13, i64 %15) #10
  %16 = bitcast %"class.base::circular_deque"* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @free(i8* %17) #10
  %18 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 0
  %19 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 0, i32 2
  %22 = load i64, i64* %21, align 8
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz9SyncQueryENS1_14default_deleteIS4_EEEEE13DestructRangeEmm(%"class.base::circular_deque"* %18, i64 %20, i64 %22) #10
  %23 = bitcast %"class.viz::SyncQueryCollection"* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  tail call void @free(i8* %24) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz19SyncQueryCollectionC2EOS0_(%"class.viz::SyncQueryCollection"* nocapture, %"class.viz::SyncQueryCollection"* nocapture dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::SyncQueryCollection"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.viz::SyncQueryCollection"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %6, align 8
  %9 = bitcast %"class.viz::SyncQueryCollection"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #10
  %10 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %1, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %10, align 8
  %13 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %1, i64 0, i32 0, i32 2
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %13, align 8
  %16 = bitcast i64* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #10
  %17 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %1, i64 0, i32 1
  %19 = bitcast %"class.base::circular_deque"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.base::circular_deque"* %17 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 1, i32 0, i32 1
  %23 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %1, i64 0, i32 1, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %22, align 8
  %25 = bitcast %"class.base::circular_deque"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #10
  %26 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 1, i32 1
  %27 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %1, i64 0, i32 1, i32 1
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %26, align 8
  %29 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 1, i32 2
  %30 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %1, i64 0, i32 1, i32 2
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %29, align 8
  %32 = bitcast i64* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #10
  %33 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 2
  %34 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %1, i64 0, i32 2
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.std::__1::unique_ptr"* %34 to i64*
  %37 = load i64, i64* %36, align 8
  store %"class.viz::SyncQuery"* null, %"class.viz::SyncQuery"** %35, align 8
  %38 = bitcast %"class.std::__1::unique_ptr"* %33 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 3
  %40 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %1, i64 0, i32 3
  %41 = bitcast %"class.gpu::gles2::GLES2Interface"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.gpu::gles2::GLES2Interface"** %39 to i64*
  store i64 %42, i64* %43, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(80) %"class.viz::SyncQueryCollection"* @_ZN3viz19SyncQueryCollectionaSEOS0_(%"class.viz::SyncQueryCollection"* returned, %"class.viz::SyncQueryCollection"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.viz::SyncQueryCollection"* %1, %0
  br i1 %3, label %46, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 0, i32 2
  %9 = load i64, i64* %8, align 8
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz9SyncQueryENS1_14default_deleteIS4_EEEEE13DestructRangeEmm(%"class.base::circular_deque"* %5, i64 %7, i64 %9) #10
  %10 = bitcast i64* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #10
  %11 = bitcast %"class.viz::SyncQueryCollection"* %0 to i8**
  %12 = load i8*, i8** %11, align 8
  tail call void @free(i8* %12) #10
  %13 = bitcast %"class.viz::SyncQueryCollection"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.viz::SyncQueryCollection"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %1, i64 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %18, align 8
  %19 = bitcast %"class.viz::SyncQueryCollection"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #10
  %20 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %1, i64 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  store i64 %21, i64* %6, align 8
  %22 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %1, i64 0, i32 0, i32 2
  %23 = load i64, i64* %22, align 8
  store i64 %23, i64* %8, align 8
  %24 = bitcast i64* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #10
  %25 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 1
  %26 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %1, i64 0, i32 1
  %27 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 1, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 1, i32 2
  %30 = load i64, i64* %29, align 8
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz9SyncQueryENS1_14default_deleteIS4_EEEEE13DestructRangeEmm(%"class.base::circular_deque"* %25, i64 %28, i64 %30) #10
  %31 = bitcast i64* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #10
  %32 = bitcast %"class.base::circular_deque"* %25 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @free(i8* %33) #10
  %34 = bitcast %"class.base::circular_deque"* %26 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.base::circular_deque"* %25 to i64*
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %1, i64 0, i32 1, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.base::circular_deque"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #10
  %41 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %1, i64 0, i32 1, i32 1
  %42 = load i64, i64* %41, align 8
  store i64 %42, i64* %27, align 8
  %43 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %1, i64 0, i32 1, i32 2
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %29, align 8
  %45 = bitcast i64* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #10
  br label %46

46:                                               ; preds = %2, %4
  %47 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 2
  %48 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %1, i64 0, i32 2
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.std::__1::unique_ptr"* %48 to i64*
  %51 = load i64, i64* %50, align 8
  store %"class.viz::SyncQuery"* null, %"class.viz::SyncQuery"** %49, align 8
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %47, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.viz::SyncQuery"*, %"class.viz::SyncQuery"** %52, align 8
  %54 = bitcast %"class.std::__1::unique_ptr"* %47 to i64*
  store i64 %51, i64* %54, align 8
  %55 = icmp eq %"class.viz::SyncQuery"* %53, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %46
  %57 = bitcast %"class.viz::SyncQuery"* %53 to void (%"class.viz::SyncQuery"*)***
  %58 = load void (%"class.viz::SyncQuery"*)**, void (%"class.viz::SyncQuery"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.viz::SyncQuery"*)*, void (%"class.viz::SyncQuery"*)** %58, i64 1
  %60 = load void (%"class.viz::SyncQuery"*)*, void (%"class.viz::SyncQuery"*)** %59, align 8
  tail call void %60(%"class.viz::SyncQuery"* nonnull %53) #10
  br label %61

61:                                               ; preds = %46, %56
  %62 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %1, i64 0, i32 3
  %63 = bitcast %"class.gpu::gles2::GLES2Interface"** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 3
  %66 = bitcast %"class.gpu::gles2::GLES2Interface"** %65 to i64*
  store i64 %64, i64* %66, align 8
  ret %"class.viz::SyncQueryCollection"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.viz::ResourceFence"* @_ZN3viz19SyncQueryCollection13StartNewFrameEv(%"class.viz::SyncQueryCollection"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %9, %7
  br i1 %10, label %13, label %11

11:                                               ; preds = %1
  %12 = sub i64 %9, %7
  br label %18

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %9, %7
  %17 = add i64 %16, %15
  br label %18

18:                                               ; preds = %11, %13
  %19 = phi i64 [ %12, %11 ], [ %17, %13 ]
  %20 = icmp ugt i64 %19, 15
  br i1 %20, label %21, label %47

21:                                               ; preds = %18
  %22 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %22, label %23, label %28

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %24) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 119, i32 2) #10
  %25 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %26 = bitcast %"class.std::__1::basic_ostringstream"* %25 to %"class.std::__1::basic_ostream"*
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %26, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i64 38) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %24) #10
  br label %28

28:                                               ; preds = %21, %23
  %29 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 0, i32 0
  %30 = load i64, i64* %6, align 8
  %31 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %29, i64 %30) #10
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.viz::SyncQuery"*, %"class.viz::SyncQuery"** %32, align 8
  %34 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %33, i64 0, i32 3
  %35 = load i8, i8* %34, align 4, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %47, label %37

37:                                               ; preds = %28
  %38 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #10
  store i32 0, i32* %3, align 4
  %39 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %33, i64 0, i32 1
  %40 = load %"class.gpu::gles2::GLES2Interface"*, %"class.gpu::gles2::GLES2Interface"** %39, align 8
  %41 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %33, i64 0, i32 2
  %42 = load i32, i32* %41, align 8
  %43 = bitcast %"class.gpu::gles2::GLES2Interface"* %40 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)***
  %44 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)** %44, i64 253
  %46 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)** %45, align 8
  call void %46(%"class.gpu::gles2::GLES2Interface"* %40, i32 %42, i32 34918, i32* nonnull %3) #10
  store i8 0, i8* %34, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #10
  br label %47

47:                                               ; preds = %37, %28, %18
  %48 = bitcast i32* %2 to i8*
  %49 = load i64, i64* %6, align 8
  %50 = load i64, i64* %8, align 8
  %51 = icmp eq i64 %49, %50
  br i1 %51, label %113, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 1
  %55 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %54, i64 0, i32 0
  %57 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 1, i32 2
  %58 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 1, i32 0, i32 1
  br label %59

59:                                               ; preds = %52, %107
  %60 = phi i64 [ %49, %52 ], [ %110, %107 ]
  %61 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %53, i64 %60) #10
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.viz::SyncQuery"*, %"class.viz::SyncQuery"** %62, align 8
  %64 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %63, i64 0, i32 3
  %65 = load i8, i8* %64, align 4, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %79, label %67

67:                                               ; preds = %59
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #10
  store i32 1, i32* %2, align 4
  %68 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %63, i64 0, i32 1
  %69 = load %"class.gpu::gles2::GLES2Interface"*, %"class.gpu::gles2::GLES2Interface"** %68, align 8
  %70 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %63, i64 0, i32 2
  %71 = load i32, i32* %70, align 8
  %72 = bitcast %"class.gpu::gles2::GLES2Interface"* %69 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)***
  %73 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)** %73, i64 253
  %75 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)** %74, align 8
  call void %75(%"class.gpu::gles2::GLES2Interface"* %69, i32 %71, i32 34919, i32* nonnull %2) #10
  %76 = load i32, i32* %2, align 4
  %77 = icmp eq i32 %76, 0
  %78 = zext i1 %77 to i8
  store i8 %78, i8* %64, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #10
  br i1 %77, label %113, label %79

79:                                               ; preds = %59, %67
  %80 = load i64, i64* %6, align 8
  %81 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %53, i64 %80) #10
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::unique_ptr"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  store %"class.viz::SyncQuery"* null, %"class.viz::SyncQuery"** %82, align 8
  %85 = load i64, i64* %6, align 8
  %86 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %53, i64 %85) #10
  %87 = load i64, i64* %6, align 8
  %88 = add i64 %87, 1
  %89 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %53, i64 %88) #10
  call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %53, %"class.std::__1::unique_ptr"* %86, %"class.std::__1::unique_ptr"* %89) #10
  %90 = load i64, i64* %6, align 8
  %91 = add i64 %90, 1
  %92 = load i64, i64* %55, align 8
  %93 = icmp eq i64 %91, %92
  %94 = select i1 %93, i64 0, i64 %91
  store i64 %94, i64* %6, align 8
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz9SyncQueryENS1_14default_deleteIS4_EEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %5) #10
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz9SyncQueryENS1_14default_deleteIS4_EEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %54, i64 1) #10
  %95 = load i64, i64* %57, align 8
  %96 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %56, i64 %95) #10
  %97 = bitcast %"class.std::__1::unique_ptr"* %96 to i64*
  store i64 %84, i64* %97, align 8
  %98 = load i64, i64* %57, align 8
  %99 = load i64, i64* %58, align 8
  %100 = add i64 %99, -1
  %101 = icmp eq i64 %98, %100
  br i1 %101, label %102, label %103

102:                                              ; preds = %79
  store i64 0, i64* %57, align 8
  br label %106

103:                                              ; preds = %79
  %104 = add i64 %98, 1
  store i64 %104, i64* %57, align 8
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103, %102
  br label %107

107:                                              ; preds = %106, %103
  %108 = phi i64 [ %100, %106 ], [ %98, %103 ]
  %109 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %56, i64 %108) #10
  %110 = load i64, i64* %6, align 8
  %111 = load i64, i64* %8, align 8
  %112 = icmp eq i64 %110, %111
  br i1 %112, label %113, label %59

113:                                              ; preds = %67, %107, %47
  %114 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 1
  %115 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 1, i32 1
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 1, i32 2
  %118 = load i64, i64* %117, align 8
  %119 = icmp eq i64 %116, %118
  br i1 %119, label %120, label %140

120:                                              ; preds = %113
  %121 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 3
  %122 = call i8* @_Znwm(i64 40) #11
  %123 = bitcast %"class.gpu::gles2::GLES2Interface"** %121 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i8* %122 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3viz9SyncQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %125, align 8
  %126 = getelementptr inbounds i8, i8* %122, i64 8
  %127 = bitcast i8* %126 to %"class.gpu::gles2::GLES2Interface"**
  %128 = bitcast i8* %126 to i64*
  store i64 %124, i64* %128, align 8
  %129 = getelementptr inbounds i8, i8* %122, i64 16
  %130 = bitcast i8* %129 to i32*
  store i32 0, i32* %130, align 8
  %131 = getelementptr inbounds i8, i8* %122, i64 20
  store i8 0, i8* %131, align 4
  %132 = getelementptr inbounds i8, i8* %122, i64 24
  %133 = bitcast i8* %132 to %"class.base::internal::WeakPtrFactoryBase"*
  %134 = ptrtoint i8* %122 to i64
  call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %133, i64 %134) #10
  %135 = load %"class.gpu::gles2::GLES2Interface"*, %"class.gpu::gles2::GLES2Interface"** %127, align 8
  %136 = bitcast %"class.gpu::gles2::GLES2Interface"* %135 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)***
  %137 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %137, i64 243
  %139 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %138, align 8
  call void %139(%"class.gpu::gles2::GLES2Interface"* %135, i32 1, i32* %130) #10
  br label %157

140:                                              ; preds = %113
  %141 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %114, i64 0, i32 0
  %142 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %141, i64 %116) #10
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %142, i64 0, i32 0, i32 0, i32 0
  %144 = bitcast %"class.std::__1::unique_ptr"* %142 to i64*
  %145 = load i64, i64* %144, align 8
  store %"class.viz::SyncQuery"* null, %"class.viz::SyncQuery"** %143, align 8
  %146 = load i64, i64* %115, align 8
  %147 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %141, i64 %146) #10
  %148 = load i64, i64* %115, align 8
  %149 = add i64 %148, 1
  %150 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %141, i64 %149) #10
  call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %141, %"class.std::__1::unique_ptr"* %147, %"class.std::__1::unique_ptr"* %150) #10
  %151 = load i64, i64* %115, align 8
  %152 = add i64 %151, 1
  %153 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 1, i32 0, i32 1
  %154 = load i64, i64* %153, align 8
  %155 = icmp eq i64 %152, %154
  %156 = select i1 %155, i64 0, i64 %152
  store i64 %156, i64* %115, align 8
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz9SyncQueryENS1_14default_deleteIS4_EEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %114) #10
  br label %157

157:                                              ; preds = %140, %120
  %158 = phi i64 [ %134, %120 ], [ %145, %140 ]
  %159 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 2
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 0, i32 0, i32 0, i32 0
  %161 = load %"class.viz::SyncQuery"*, %"class.viz::SyncQuery"** %160, align 8
  %162 = bitcast %"class.std::__1::unique_ptr"* %159 to i64*
  store i64 %158, i64* %162, align 8
  %163 = icmp eq %"class.viz::SyncQuery"* %161, null
  %164 = inttoptr i64 %158 to %"class.viz::SyncQuery"*
  br i1 %163, label %171, label %165

165:                                              ; preds = %157
  %166 = bitcast %"class.viz::SyncQuery"* %161 to void (%"class.viz::SyncQuery"*)***
  %167 = load void (%"class.viz::SyncQuery"*)**, void (%"class.viz::SyncQuery"*)*** %166, align 8
  %168 = getelementptr inbounds void (%"class.viz::SyncQuery"*)*, void (%"class.viz::SyncQuery"*)** %167, i64 1
  %169 = load void (%"class.viz::SyncQuery"*)*, void (%"class.viz::SyncQuery"*)** %168, align 8
  call void %169(%"class.viz::SyncQuery"* nonnull %161) #10
  %170 = load %"class.viz::SyncQuery"*, %"class.viz::SyncQuery"** %160, align 8
  br label %171

171:                                              ; preds = %165, %157
  %172 = phi %"class.viz::SyncQuery"* [ %170, %165 ], [ %164, %157 ]
  %173 = call %"class.viz::ResourceFence"* @_ZN3viz9SyncQuery5BeginEv(%"class.viz::SyncQuery"* %172)
  ret %"class.viz::ResourceFence"* %173
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.viz::ResourceFence"* @_ZN3viz9SyncQuery5BeginEv(%"class.viz::SyncQuery"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.base::WeakPtr", align 8
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %5) #10
  %6 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10, !noalias !3
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %5) #10, !noalias !3
  %8 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load i64, i64* %8, align 8, !noalias !3
  %10 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %10, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %9) #10
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10, !noalias !3
  %11 = bitcast %"class.base::WeakPtr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11)
  %12 = call i8* @_Znwm(i64 32) #11
  %13 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %13, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %14) #10
  %15 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %15, align 8
  %18 = getelementptr inbounds i8, i8* %12, i64 8
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19, align 4
  %20 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3viz9SyncQuery5FenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %12, i64 16
  %22 = bitcast i8* %21 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %22, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %13) #10
  %23 = getelementptr inbounds i8, i8* %12, i64 24
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %15, align 8
  store i64 %25, i64* %24, align 8
  %26 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %26) #10
  %27 = atomicrmw add i32* %19, i32 1 monotonic
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11)
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  %28 = bitcast i8* %12 to %"class.viz::ResourceFence"*
  ret %"class.viz::ResourceFence"* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz19SyncQueryCollection15EndCurrentFrameEv(%"class.viz::SyncQueryCollection"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.viz::SyncQuery"*, %"class.viz::SyncQuery"** %3, align 8
  %5 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %4, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %4, i64 0, i32 1
  %10 = load %"class.gpu::gles2::GLES2Interface"*, %"class.gpu::gles2::GLES2Interface"** %9, align 8
  %11 = bitcast %"class.gpu::gles2::GLES2Interface"* %10 to void (%"class.gpu::gles2::GLES2Interface"*, i32)***
  %12 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %12, i64 249
  %14 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %13, align 8
  tail call void %14(%"class.gpu::gles2::GLES2Interface"* %10, i32 34039) #10
  br label %15

15:                                               ; preds = %1, %8
  %16 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 0
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz9SyncQueryENS1_14default_deleteIS4_EEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %16, i64 1) #10
  %17 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %17, i64 %19) #10
  %21 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  %22 = load i64, i64* %21, align 8
  store %"class.viz::SyncQuery"* null, %"class.viz::SyncQuery"** %3, align 8
  %23 = bitcast %"class.std::__1::unique_ptr"* %20 to i64*
  store i64 %22, i64* %23, align 8
  %24 = load i64, i64* %18, align 8
  %25 = getelementptr inbounds %"class.viz::SyncQueryCollection", %"class.viz::SyncQueryCollection"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, -1
  %28 = icmp eq i64 %24, %27
  br i1 %28, label %29, label %30

29:                                               ; preds = %15
  store i64 0, i64* %18, align 8
  br label %33

30:                                               ; preds = %15
  %31 = add i64 %24, 1
  store i64 %31, i64* %18, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30, %29
  br label %34

34:                                               ; preds = %30, %33
  %35 = phi i64 [ %27, %33 ], [ %24, %30 ]
  %36 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %17, i64 %35) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

declare void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz9SyncQuery5Fence3SetEv(%"class.viz::SyncQuery::Fence"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.viz::SyncQuery::Fence", %"class.viz::SyncQuery::Fence"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #10
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #10
  %7 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  br label %8

8:                                                ; preds = %5, %1
  %9 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #10
  br i1 %9, label %10, label %14

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.viz::SyncQuery::Fence", %"class.viz::SyncQuery::Fence"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast i64* %11 to %"class.viz::SyncQuery"**
  %13 = load %"class.viz::SyncQuery"*, %"class.viz::SyncQuery"** %12, align 8
  br label %14

14:                                               ; preds = %8, %10
  %15 = phi %"class.viz::SyncQuery"* [ %13, %10 ], [ null, %8 ]
  %16 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %15, i64 0, i32 3
  %17 = load i8, i8* %16, align 4, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %28

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %15, i64 0, i32 1
  %21 = load %"class.gpu::gles2::GLES2Interface"*, %"class.gpu::gles2::GLES2Interface"** %20, align 8
  %22 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %15, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = bitcast %"class.gpu::gles2::GLES2Interface"* %21 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)***
  %25 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %25, i64 247
  %27 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %26, align 8
  call void %27(%"class.gpu::gles2::GLES2Interface"* %21, i32 34039, i32 %23) #10
  store i8 1, i8* %16, align 4
  br label %28

28:                                               ; preds = %14, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3viz9SyncQuery5Fence9HasPassedEv(%"class.viz::SyncQuery::Fence"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.viz::SyncQuery::Fence", %"class.viz::SyncQuery::Fence"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %4) #10
  br i1 %5, label %6, label %39

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.viz::SyncQuery::Fence", %"class.viz::SyncQuery::Fence"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast i64* %7 to %"class.viz::SyncQuery"**
  %9 = load %"class.viz::SyncQuery"*, %"class.viz::SyncQuery"** %8, align 8
  %10 = icmp eq %"class.viz::SyncQuery"* %9, null
  br i1 %10, label %39, label %11

11:                                               ; preds = %6
  %12 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %4) #10
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #10
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  br label %16

16:                                               ; preds = %13, %11
  %17 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %4) #10
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = load %"class.viz::SyncQuery"*, %"class.viz::SyncQuery"** %8, align 8
  br label %20

20:                                               ; preds = %16, %18
  %21 = phi %"class.viz::SyncQuery"* [ %19, %18 ], [ null, %16 ]
  %22 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %21, i64 0, i32 3
  %23 = load i8, i8* %22, align 4, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %39, label %25

25:                                               ; preds = %20
  %26 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #10
  store i32 1, i32* %2, align 4
  %27 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %21, i64 0, i32 1
  %28 = load %"class.gpu::gles2::GLES2Interface"*, %"class.gpu::gles2::GLES2Interface"** %27, align 8
  %29 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %21, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = bitcast %"class.gpu::gles2::GLES2Interface"* %28 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)***
  %32 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)** %32, i64 253
  %34 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)** %33, align 8
  call void %34(%"class.gpu::gles2::GLES2Interface"* %28, i32 %30, i32 34919, i32* nonnull %2) #10
  %35 = load i32, i32* %2, align 4
  %36 = icmp eq i32 %35, 0
  %37 = zext i1 %36 to i8
  store i8 %37, i8* %22, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #10
  %38 = xor i1 %36, true
  br label %39

39:                                               ; preds = %25, %20, %6, %1
  %40 = phi i1 [ true, %6 ], [ true, %1 ], [ %38, %25 ], [ true, %20 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz9SyncQuery5FenceD2Ev(%"class.viz::SyncQuery::Fence"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.viz::SyncQuery::Fence", %"class.viz::SyncQuery::Fence"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3viz9SyncQuery5FenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.viz::SyncQuery::Fence", %"class.viz::SyncQuery::Fence"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz9SyncQuery5FenceD0Ev(%"class.viz::SyncQuery::Fence"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.viz::SyncQuery::Fence", %"class.viz::SyncQuery::Fence"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3viz9SyncQuery5FenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.viz::SyncQuery::Fence", %"class.viz::SyncQuery::Fence"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %3) #10
  %4 = bitcast %"class.viz::SyncQuery::Fence"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz9SyncQueryENS1_14default_deleteIS4_EEEEE13DestructRangeEmm(%"class.base::circular_deque"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %7, %"class.std::__1::unique_ptr"* %8, %"class.std::__1::unique_ptr"* %12)
  %13 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %"class.std::__1::unique_ptr"* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %7, %"class.std::__1::unique_ptr"* %15, %"class.std::__1::unique_ptr"* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.std::__1::unique_ptr"*, align 8
  %6 = alloca %"class.std::__1::unique_ptr"*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %"class.std::__1::unique_ptr"* %1, %"class.std::__1::unique_ptr"** %5, align 8
  store %"class.std::__1::unique_ptr"* %2, %"class.std::__1::unique_ptr"** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %"class.std::__1::unique_ptr"* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::unique_ptr"** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN3viz9SyncQueryENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #10
  %17 = bitcast %"class.std::__1::unique_ptr"** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN3viz9SyncQueryENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8* %16, i8* %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %26 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %28 = icmp eq %"class.std::__1::unique_ptr"* %26, %27
  br i1 %28, label %44, label %29

29:                                               ; preds = %25, %39
  %30 = phi %"class.std::__1::unique_ptr"* [ %41, %39 ], [ %26, %25 ]
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.viz::SyncQuery"*, %"class.viz::SyncQuery"** %31, align 8
  store %"class.viz::SyncQuery"* null, %"class.viz::SyncQuery"** %31, align 8
  %33 = icmp eq %"class.viz::SyncQuery"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.viz::SyncQuery"* %32 to void (%"class.viz::SyncQuery"*)***
  %36 = load void (%"class.viz::SyncQuery"*)**, void (%"class.viz::SyncQuery"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.viz::SyncQuery"*)*, void (%"class.viz::SyncQuery"*)** %36, i64 1
  %38 = load void (%"class.viz::SyncQuery"*)*, void (%"class.viz::SyncQuery"*)** %37, align 8
  call void %38(%"class.viz::SyncQuery"* nonnull %32) #10
  br label %39

39:                                               ; preds = %29, %34
  %40 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %40, i64 1
  store %"class.std::__1::unique_ptr"* %41, %"class.std::__1::unique_ptr"** %5, align 8
  %42 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %43 = icmp eq %"class.std::__1::unique_ptr"* %41, %42
  br i1 %43, label %44, label %29

44:                                               ; preds = %39, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %1
  ret %"class.std::__1::unique_ptr"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN3viz9SyncQueryENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #7 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #10
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz9SyncQueryENS1_14default_deleteIS4_EEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #10
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 8) #10
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #10
  br i1 %31, label %32, label %33, !prof !6

32:                                               ; preds = %27
  tail call void @llvm.trap() #10
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #10
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz9SyncQueryENS1_14default_deleteIS4_EEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #10
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #10
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #10
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz9SyncQueryENS1_14default_deleteIS4_EEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  store i64 0, i64* %4, align 8
  %12 = icmp ugt i64 %2, %1
  br i1 %12, label %13, label %58

13:                                               ; preds = %6
  %14 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %15 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %16 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %18 = ptrtoint %"class.std::__1::unique_ptr"* %14 to i64
  %19 = icmp ult %"class.std::__1::unique_ptr"* %17, %15
  br i1 %19, label %20, label %36

20:                                               ; preds = %13
  %21 = ptrtoint %"class.std::__1::unique_ptr"* %17 to i64
  %22 = ptrtoint %"class.std::__1::unique_ptr"* %15 to i64
  %23 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %22, i64 %18) #10
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %21, i64 %25) #10
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = or i1 %24, %27
  br i1 %28, label %29, label %30, !prof !6

29:                                               ; preds = %20
  tail call void @llvm.trap() #10
  unreachable

30:                                               ; preds = %20
  %31 = extractvalue { i64, i1 } %26, 0
  %32 = icmp ugt i64 %31, %18
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i64 0, i64 0)) #10
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  br label %36

36:                                               ; preds = %33, %30, %13
  %37 = icmp eq %"class.std::__1::unique_ptr"* %14, %15
  br i1 %37, label %56, label %38

38:                                               ; preds = %36, %52
  %39 = phi %"class.std::__1::unique_ptr"* [ %54, %52 ], [ %17, %36 ]
  %40 = phi %"class.std::__1::unique_ptr"* [ %53, %52 ], [ %14, %36 ]
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::unique_ptr"* %40 to i64*
  %43 = load i64, i64* %42, align 8
  store %"class.viz::SyncQuery"* null, %"class.viz::SyncQuery"** %41, align 8
  %44 = bitcast %"class.std::__1::unique_ptr"* %39 to i64*
  store i64 %43, i64* %44, align 8
  %45 = load %"class.viz::SyncQuery"*, %"class.viz::SyncQuery"** %41, align 8
  store %"class.viz::SyncQuery"* null, %"class.viz::SyncQuery"** %41, align 8
  %46 = icmp eq %"class.viz::SyncQuery"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %38
  %48 = bitcast %"class.viz::SyncQuery"* %45 to void (%"class.viz::SyncQuery"*)***
  %49 = load void (%"class.viz::SyncQuery"*)**, void (%"class.viz::SyncQuery"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.viz::SyncQuery"*)*, void (%"class.viz::SyncQuery"*)** %49, i64 1
  %51 = load void (%"class.viz::SyncQuery"*)*, void (%"class.viz::SyncQuery"*)** %50, align 8
  call void %51(%"class.viz::SyncQuery"* nonnull %45) #10
  br label %52

52:                                               ; preds = %47, %38
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %40, i64 1
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %39, i64 1
  %55 = icmp eq %"class.std::__1::unique_ptr"* %53, %15
  br i1 %55, label %56, label %38

56:                                               ; preds = %52, %36
  %57 = sub i64 %2, %1
  br label %148

58:                                               ; preds = %6
  %59 = icmp ult i64 %2, %1
  br i1 %59, label %60, label %148

60:                                               ; preds = %58
  %61 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %62 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %11)
  %63 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %64 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %63, align 8
  %65 = ptrtoint %"class.std::__1::unique_ptr"* %61 to i64
  %66 = icmp ult %"class.std::__1::unique_ptr"* %64, %62
  br i1 %66, label %67, label %83

67:                                               ; preds = %60
  %68 = ptrtoint %"class.std::__1::unique_ptr"* %64 to i64
  %69 = ptrtoint %"class.std::__1::unique_ptr"* %62 to i64
  %70 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %69, i64 %65) #10
  %71 = extractvalue { i64, i1 } %70, 1
  %72 = extractvalue { i64, i1 } %70, 0
  %73 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %68, i64 %72) #10
  %74 = extractvalue { i64, i1 } %73, 1
  %75 = or i1 %71, %74
  br i1 %75, label %76, label %77, !prof !6

76:                                               ; preds = %67
  tail call void @llvm.trap() #10
  unreachable

77:                                               ; preds = %67
  %78 = extractvalue { i64, i1 } %73, 0
  %79 = icmp ugt i64 %78, %65
  br i1 %79, label %80, label %83

80:                                               ; preds = %77
  %81 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i64 0, i64 0)) #10
  %82 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #10
  br label %83

83:                                               ; preds = %80, %77, %60
  %84 = icmp eq %"class.std::__1::unique_ptr"* %61, %62
  br i1 %84, label %103, label %85

85:                                               ; preds = %83, %99
  %86 = phi %"class.std::__1::unique_ptr"* [ %101, %99 ], [ %64, %83 ]
  %87 = phi %"class.std::__1::unique_ptr"* [ %100, %99 ], [ %61, %83 ]
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = bitcast %"class.std::__1::unique_ptr"* %87 to i64*
  %90 = load i64, i64* %89, align 8
  store %"class.viz::SyncQuery"* null, %"class.viz::SyncQuery"** %88, align 8
  %91 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  store i64 %90, i64* %91, align 8
  %92 = load %"class.viz::SyncQuery"*, %"class.viz::SyncQuery"** %88, align 8
  store %"class.viz::SyncQuery"* null, %"class.viz::SyncQuery"** %88, align 8
  %93 = icmp eq %"class.viz::SyncQuery"* %92, null
  br i1 %93, label %99, label %94

94:                                               ; preds = %85
  %95 = bitcast %"class.viz::SyncQuery"* %92 to void (%"class.viz::SyncQuery"*)***
  %96 = load void (%"class.viz::SyncQuery"*)**, void (%"class.viz::SyncQuery"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.viz::SyncQuery"*)*, void (%"class.viz::SyncQuery"*)** %96, i64 1
  %98 = load void (%"class.viz::SyncQuery"*)*, void (%"class.viz::SyncQuery"*)** %97, align 8
  call void %98(%"class.viz::SyncQuery"* nonnull %92) #10
  br label %99

99:                                               ; preds = %94, %85
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 1
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 1
  %102 = icmp eq %"class.std::__1::unique_ptr"* %100, %62
  br i1 %102, label %103, label %85

103:                                              ; preds = %99, %83
  %104 = sub i64 %11, %1
  %105 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %106 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %107 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %104)
  %108 = ptrtoint %"class.std::__1::unique_ptr"* %105 to i64
  %109 = icmp ult %"class.std::__1::unique_ptr"* %107, %106
  br i1 %109, label %110, label %126

110:                                              ; preds = %103
  %111 = ptrtoint %"class.std::__1::unique_ptr"* %107 to i64
  %112 = ptrtoint %"class.std::__1::unique_ptr"* %106 to i64
  %113 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %112, i64 %108) #10
  %114 = extractvalue { i64, i1 } %113, 1
  %115 = extractvalue { i64, i1 } %113, 0
  %116 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %111, i64 %115) #10
  %117 = extractvalue { i64, i1 } %116, 1
  %118 = or i1 %114, %117
  br i1 %118, label %119, label %120, !prof !6

119:                                              ; preds = %110
  call void @llvm.trap() #10
  unreachable

120:                                              ; preds = %110
  %121 = extractvalue { i64, i1 } %116, 0
  %122 = icmp ugt i64 %121, %108
  br i1 %122, label %123, label %126

123:                                              ; preds = %120
  %124 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i64 0, i64 0)) #10
  %125 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #10
  br label %126

126:                                              ; preds = %123, %120, %103
  %127 = icmp eq %"class.std::__1::unique_ptr"* %105, %106
  br i1 %127, label %146, label %128

128:                                              ; preds = %126, %142
  %129 = phi %"class.std::__1::unique_ptr"* [ %144, %142 ], [ %107, %126 ]
  %130 = phi %"class.std::__1::unique_ptr"* [ %143, %142 ], [ %105, %126 ]
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %130, i64 0, i32 0, i32 0, i32 0
  %132 = bitcast %"class.std::__1::unique_ptr"* %130 to i64*
  %133 = load i64, i64* %132, align 8
  store %"class.viz::SyncQuery"* null, %"class.viz::SyncQuery"** %131, align 8
  %134 = bitcast %"class.std::__1::unique_ptr"* %129 to i64*
  store i64 %133, i64* %134, align 8
  %135 = load %"class.viz::SyncQuery"*, %"class.viz::SyncQuery"** %131, align 8
  store %"class.viz::SyncQuery"* null, %"class.viz::SyncQuery"** %131, align 8
  %136 = icmp eq %"class.viz::SyncQuery"* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %128
  %138 = bitcast %"class.viz::SyncQuery"* %135 to void (%"class.viz::SyncQuery"*)***
  %139 = load void (%"class.viz::SyncQuery"*)**, void (%"class.viz::SyncQuery"*)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.viz::SyncQuery"*)*, void (%"class.viz::SyncQuery"*)** %139, i64 1
  %141 = load void (%"class.viz::SyncQuery"*)*, void (%"class.viz::SyncQuery"*)** %140, align 8
  call void %141(%"class.viz::SyncQuery"* nonnull %135) #10
  br label %142

142:                                              ; preds = %137, %128
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %130, i64 1
  %144 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %129, i64 1
  %145 = icmp eq %"class.std::__1::unique_ptr"* %143, %106
  br i1 %145, label %146, label %128

146:                                              ; preds = %142, %126
  %147 = add i64 %104, %2
  br label %148

148:                                              ; preds = %58, %146, %56
  %149 = phi i64 [ %147, %146 ], [ %57, %56 ], [ 0, %58 ]
  store i64 %149, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #9

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #9

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz9SyncQueryENS1_14default_deleteIS4_EEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #10
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 8) #10
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #10
  br i1 %37, label %38, label %39, !prof !6

38:                                               ; preds = %27
  tail call void @llvm.trap() #10
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #10
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz9SyncQueryENS1_14default_deleteIS4_EEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #10
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #10
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #10
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN3viz9SyncQueryENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %1
  ret %"class.std::__1::unique_ptr"* %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz9SyncQueryD2Ev(%"class.viz::SyncQuery"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3viz9SyncQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %0, i64 0, i32 1
  %4 = load %"class.gpu::gles2::GLES2Interface"*, %"class.gpu::gles2::GLES2Interface"** %3, align 8
  %5 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %0, i64 0, i32 2
  %6 = bitcast %"class.gpu::gles2::GLES2Interface"* %4 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)***
  %7 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %7, i64 244
  %9 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %8, align 8
  tail call void %9(%"class.gpu::gles2::GLES2Interface"* %4, i32 1, i32* %5) #10
  %10 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz9SyncQueryD0Ev(%"class.viz::SyncQuery"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3viz9SyncQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %0, i64 0, i32 1
  %4 = load %"class.gpu::gles2::GLES2Interface"*, %"class.gpu::gles2::GLES2Interface"** %3, align 8
  %5 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %0, i64 0, i32 2
  %6 = bitcast %"class.gpu::gles2::GLES2Interface"* %4 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)***
  %7 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %7, i64 244
  %9 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %8, align 8
  tail call void %9(%"class.gpu::gles2::GLES2Interface"* %4, i32 1, i32* %5) #10
  %10 = getelementptr inbounds %"class.viz::SyncQuery", %"class.viz::SyncQuery"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %10) #10
  %11 = bitcast %"class.viz::SyncQuery"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #11
  ret void
}

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base14WeakPtrFactoryIN3viz9SyncQueryEE10GetWeakPtrEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base14WeakPtrFactoryIN3viz9SyncQueryEE10GetWeakPtrEv"}
!6 = !{!"branch_weights", i32 1, i32 2000}
