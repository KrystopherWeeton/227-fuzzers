; ModuleID = '../../third_party/boringssl/src/crypto/thread_pthread.c'
source_filename = "../../third_party/boringssl/src/crypto/thread_pthread.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%union.crypto_mutex_st = type { double, [48 x i8] }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%union.pthread_rwlockattr_t = type { i64 }
%struct.CRYPTO_STATIC_MUTEX = type { %union.pthread_rwlock_t }

@g_thread_local_init_once = internal global i32 0, align 4
@g_thread_local_key_created = internal unnamed_addr global i32 0, align 4
@g_thread_local_key = internal global i32 0, align 4
@g_destructors_lock = internal global %union.pthread_mutex_t zeroinitializer, align 8
@g_destructors = internal unnamed_addr global [4 x void (i8*)*] zeroinitializer, align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @CRYPTO_MUTEX_init(%union.crypto_mutex_st*) local_unnamed_addr #0 {
  %2 = bitcast %union.crypto_mutex_st* %0 to %union.pthread_rwlock_t*
  %3 = tail call i32 @pthread_rwlock_init(%union.pthread_rwlock_t* %2, %union.pthread_rwlockattr_t* null) #5
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @abort() #6
  unreachable

6:                                                ; preds = %1
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_rwlock_init(%union.pthread_rwlock_t*, %union.pthread_rwlockattr_t*) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @CRYPTO_MUTEX_lock_read(%union.crypto_mutex_st*) local_unnamed_addr #0 {
  %2 = bitcast %union.crypto_mutex_st* %0 to %union.pthread_rwlock_t*
  %3 = tail call i32 @pthread_rwlock_rdlock(%union.pthread_rwlock_t* %2) #5
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @abort() #6
  unreachable

6:                                                ; preds = %1
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_rwlock_rdlock(%union.pthread_rwlock_t*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st*) local_unnamed_addr #0 {
  %2 = bitcast %union.crypto_mutex_st* %0 to %union.pthread_rwlock_t*
  %3 = tail call i32 @pthread_rwlock_wrlock(%union.pthread_rwlock_t* %2) #5
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @abort() #6
  unreachable

6:                                                ; preds = %1
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_rwlock_wrlock(%union.pthread_rwlock_t*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @CRYPTO_MUTEX_unlock_read(%union.crypto_mutex_st*) local_unnamed_addr #0 {
  %2 = bitcast %union.crypto_mutex_st* %0 to %union.pthread_rwlock_t*
  %3 = tail call i32 @pthread_rwlock_unlock(%union.pthread_rwlock_t* %2) #5
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @abort() #6
  unreachable

6:                                                ; preds = %1
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_rwlock_unlock(%union.pthread_rwlock_t*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st*) local_unnamed_addr #0 {
  %2 = bitcast %union.crypto_mutex_st* %0 to %union.pthread_rwlock_t*
  %3 = tail call i32 @pthread_rwlock_unlock(%union.pthread_rwlock_t* %2) #5
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @abort() #6
  unreachable

6:                                                ; preds = %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CRYPTO_MUTEX_cleanup(%union.crypto_mutex_st*) local_unnamed_addr #0 {
  %2 = bitcast %union.crypto_mutex_st* %0 to %union.pthread_rwlock_t*
  %3 = tail call i32 @pthread_rwlock_destroy(%union.pthread_rwlock_t* %2) #5
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_rwlock_destroy(%union.pthread_rwlock_t*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @CRYPTO_STATIC_MUTEX_lock_read(%struct.CRYPTO_STATIC_MUTEX*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.CRYPTO_STATIC_MUTEX, %struct.CRYPTO_STATIC_MUTEX* %0, i64 0, i32 0
  %3 = tail call i32 @pthread_rwlock_rdlock(%union.pthread_rwlock_t* %2) #5
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @abort() #6
  unreachable

6:                                                ; preds = %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CRYPTO_STATIC_MUTEX_lock_write(%struct.CRYPTO_STATIC_MUTEX*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.CRYPTO_STATIC_MUTEX, %struct.CRYPTO_STATIC_MUTEX* %0, i64 0, i32 0
  %3 = tail call i32 @pthread_rwlock_wrlock(%union.pthread_rwlock_t* %2) #5
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @abort() #6
  unreachable

6:                                                ; preds = %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CRYPTO_STATIC_MUTEX_unlock_read(%struct.CRYPTO_STATIC_MUTEX*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.CRYPTO_STATIC_MUTEX, %struct.CRYPTO_STATIC_MUTEX* %0, i64 0, i32 0
  %3 = tail call i32 @pthread_rwlock_unlock(%union.pthread_rwlock_t* %2) #5
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @abort() #6
  unreachable

6:                                                ; preds = %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CRYPTO_STATIC_MUTEX_unlock_write(%struct.CRYPTO_STATIC_MUTEX*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.CRYPTO_STATIC_MUTEX, %struct.CRYPTO_STATIC_MUTEX* %0, i64 0, i32 0
  %3 = tail call i32 @pthread_rwlock_unlock(%union.pthread_rwlock_t* %2) #5
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @abort() #6
  unreachable

6:                                                ; preds = %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @CRYPTO_once(i32*, void ()*) local_unnamed_addr #0 {
  %3 = tail call i32 @pthread_once(i32* %0, void ()* %1) #5
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %2
  tail call void @abort() #6
  unreachable

6:                                                ; preds = %2
  ret void
}

declare i32 @pthread_once(i32*, void ()*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @CRYPTO_get_thread_local(i32) local_unnamed_addr #0 {
  %2 = tail call i32 @pthread_once(i32* nonnull @g_thread_local_init_once, void ()* nonnull @thread_local_init) #5
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %5, label %4

4:                                                ; preds = %1
  tail call void @abort() #6
  unreachable

5:                                                ; preds = %1
  %6 = load i32, i32* @g_thread_local_key_created, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %5
  %9 = load i32, i32* @g_thread_local_key, align 4
  %10 = tail call i8* @pthread_getspecific(i32 %9) #5
  %11 = icmp eq i8* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = bitcast i8* %10 to i8**
  %14 = zext i32 %0 to i64
  %15 = getelementptr inbounds i8*, i8** %13, i64 %14
  %16 = load i8*, i8** %15, align 8
  br label %17

17:                                               ; preds = %12, %8, %5
  %18 = phi i8* [ null, %5 ], [ %16, %12 ], [ null, %8 ]
  ret i8* %18
}

; Function Attrs: nounwind ssp uwtable
define internal void @thread_local_init() #0 {
  %1 = tail call i32 @pthread_key_create(i32* nonnull @g_thread_local_key, void (i8*)* nonnull @thread_local_destructor) #5
  %2 = icmp eq i32 %1, 0
  %3 = zext i1 %2 to i32
  store i32 %3, i32* @g_thread_local_key_created, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind
declare i8* @pthread_getspecific(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CRYPTO_set_thread_local(i32, i8*, void (i8*)*) local_unnamed_addr #0 {
  %4 = tail call i32 @pthread_once(i32* nonnull @g_thread_local_init_once, void ()* nonnull @thread_local_init) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @abort() #6
  unreachable

7:                                                ; preds = %3
  %8 = load i32, i32* @g_thread_local_key_created, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %7
  tail call void %2(i8* %1) #5
  br label %35

11:                                               ; preds = %7
  %12 = load i32, i32* @g_thread_local_key, align 4
  %13 = tail call i8* @pthread_getspecific(i32 %12) #5
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %24

15:                                               ; preds = %11
  %16 = tail call i8* @OPENSSL_malloc(i64 32) #5
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void %2(i8* %1) #5
  br label %35

19:                                               ; preds = %15
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %16, i8 0, i64 32, i1 false) #5
  %20 = load i32, i32* @g_thread_local_key, align 4
  %21 = tail call i32 @pthread_setspecific(i32 %20, i8* nonnull %16) #5
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void @OPENSSL_free(i8* nonnull %16) #5
  tail call void %2(i8* %1) #5
  br label %35

24:                                               ; preds = %19, %11
  %25 = phi i8* [ %16, %19 ], [ %13, %11 ]
  %26 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @g_destructors_lock) #5
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  tail call void %2(i8* %1) #5
  br label %35

29:                                               ; preds = %24
  %30 = bitcast i8* %25 to i8**
  %31 = zext i32 %0 to i64
  %32 = getelementptr inbounds [4 x void (i8*)*], [4 x void (i8*)*]* @g_destructors, i64 0, i64 %31
  store void (i8*)* %2, void (i8*)** %32, align 8
  %33 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @g_destructors_lock) #5
  %34 = getelementptr inbounds i8*, i8** %30, i64 %31
  store i8* %1, i8** %34, align 8
  br label %35

35:                                               ; preds = %18, %23, %28, %29, %10
  %36 = phi i32 [ 0, %10 ], [ 0, %18 ], [ 0, %23 ], [ 0, %28 ], [ 1, %29 ]
  ret i32 %36
}

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_setspecific(i32, i8*) local_unnamed_addr #1

declare void @OPENSSL_free(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_key_create(i32*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @thread_local_destructor(i8*) #0 {
  %2 = alloca [4 x void (i8*)*], align 16
  %3 = icmp eq i8* %0, null
  br i1 %3, label %24, label %4

4:                                                ; preds = %1
  %5 = bitcast [4 x void (i8*)*]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #5
  %6 = getelementptr inbounds [4 x void (i8*)*], [4 x void (i8*)*]* %2, i64 0, i64 1
  %7 = getelementptr inbounds [4 x void (i8*)*], [4 x void (i8*)*]* %2, i64 0, i64 2
  %8 = getelementptr inbounds [4 x void (i8*)*], [4 x void (i8*)*]* %2, i64 0, i64 3
  %9 = bitcast [4 x void (i8*)*]* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 32, i1 false)
  %10 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @g_destructors_lock) #5
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %23

12:                                               ; preds = %4
  %13 = getelementptr inbounds [4 x void (i8*)*], [4 x void (i8*)*]* %2, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %5, i8* align 16 bitcast ([4 x void (i8*)*]* @g_destructors to i8*), i64 32, i1 false) #5
  %14 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @g_destructors_lock) #5
  %15 = load void (i8*)*, void (i8*)** %13, align 16
  %16 = icmp eq void (i8*)* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  %18 = bitcast i8* %0 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void %15(i8* %19) #5
  br label %20

20:                                               ; preds = %12, %17
  %21 = load void (i8*)*, void (i8*)** %6, align 8
  %22 = icmp eq void (i8*)* %21, null
  br i1 %22, label %29, label %25

23:                                               ; preds = %4, %43
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #5
  br label %24

24:                                               ; preds = %1, %23
  ret void

25:                                               ; preds = %20
  %26 = getelementptr inbounds i8, i8* %0, i64 8
  %27 = bitcast i8* %26 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void %21(i8* %28) #5
  br label %29

29:                                               ; preds = %25, %20
  %30 = load void (i8*)*, void (i8*)** %7, align 16
  %31 = icmp eq void (i8*)* %30, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds i8, i8* %0, i64 16
  %34 = bitcast i8* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  tail call void %30(i8* %35) #5
  br label %36

36:                                               ; preds = %32, %29
  %37 = load void (i8*)*, void (i8*)** %8, align 8
  %38 = icmp eq void (i8*)* %37, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds i8, i8* %0, i64 24
  %41 = bitcast i8* %40 to i8**
  %42 = load i8*, i8** %41, align 8
  tail call void %37(i8* %42) #5
  br label %43

43:                                               ; preds = %39, %36
  tail call void @OPENSSL_free(i8* nonnull %0) #5
  br label %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
