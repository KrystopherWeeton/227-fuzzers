; ModuleID = '../../third_party/lzma_sdk/7zDec.c'
source_filename = "../../third_party/lzma_sdk/7zDec.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.CSzAr = type { i32, i32, i64*, %struct.CSzBitUi32s, i64*, i32*, i32*, i8*, i64*, i8* }
%struct.CSzBitUi32s = type { i8*, i32* }
%struct.ILookInStream = type { i32 (i8*, i8**, i64*)*, i32 (i8*, i64)*, i32 (i8*, i8*, i64*)*, i32 (i8*, i64*, i32)* }
%struct.ISzAlloc = type { i8* (i8*, i64)*, void (i8*, i8*)* }
%struct.CLzma2Dec = type { %struct.CLzmaDec, i32, i32, i32, i8, i32, i32, i32 }
%struct.CLzmaDec = type { %struct._CLzmaProps, i32*, i8*, i8*, i32, i32, i64, i64, i32, i32, i32, [4 x i32], i32, i32, i32, i32, i32, [20 x i8] }
%struct._CLzmaProps = type { i32, i32, i32, i32 }
%struct.CBcj2Dec = type { [4 x i8*], [4 x i8*], i8*, i8*, i32, i32, [4 x i8], i32, i32, [258 x i16] }
%struct.CSzFolder = type { i32, i32, i32, i32, [4 x i32], [3 x %struct.CSzBond], [4 x %struct.CSzCoderInfo] }
%struct.CSzBond = type { i32, i32 }
%struct.CSzCoderInfo = type { i64, i32, i8, i8 }
%struct.CSzData = type { i8*, i64 }

@__const.SzFolder_Decode2.indices = private unnamed_addr constant [3 x i32] [i32 3, i32 2, i32 0], align 4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SzAr_DecodeFolder(%struct.CSzAr*, i32, %struct.ILookInStream*, i64, i8*, i64, %struct.ISzAlloc*) local_unnamed_addr #0 {
  %8 = alloca %struct.CLzma2Dec, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca %struct.CLzmaDec, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i64, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i64, align 8
  %22 = alloca [3 x i64], align 16
  %23 = alloca %struct.CBcj2Dec, align 8
  %24 = alloca %struct.CSzFolder, align 8
  %25 = alloca %struct.CSzData, align 8
  %26 = alloca [3 x i8*], align 16
  %27 = bitcast %struct.CSzFolder* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %27) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 120, i1 false)
  %28 = bitcast %struct.CSzData* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #3
  %29 = getelementptr inbounds %struct.CSzData, %struct.CSzData* %25, i64 0, i32 0
  %30 = getelementptr inbounds %struct.CSzData, %struct.CSzData* %25, i64 0, i32 1
  %31 = getelementptr inbounds %struct.CSzAr, %struct.CSzAr* %0, i64 0, i32 9
  %32 = bitcast %struct.CSzData* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 16, i1 false)
  %33 = load i8*, i8** %31, align 8
  %34 = getelementptr inbounds %struct.CSzAr, %struct.CSzAr* %0, i64 0, i32 4
  %35 = load i64*, i64** %34, align 8
  %36 = zext i32 %1 to i64
  %37 = getelementptr inbounds i64, i64* %35, i64 %36
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds i8, i8* %33, i64 %38
  store i8* %39, i8** %29, align 8
  %40 = add i32 %1, 1
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i64, i64* %35, i64 %41
  %43 = load i64, i64* %42, align 8
  %44 = load i64, i64* %37, align 8
  %45 = sub i64 %43, %44
  store i64 %45, i64* %30, align 8
  %46 = call i32 @SzGetNextFolderItem(%struct.CSzFolder* nonnull %24, %struct.CSzData* nonnull %25) #3
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %570

48:                                               ; preds = %7
  %49 = load i64, i64* %30, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %570

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %struct.CSzAr, %struct.CSzAr* %0, i64 0, i32 7
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %36
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = icmp eq i32 %53, %58
  br i1 %59, label %60, label %570

60:                                               ; preds = %51
  %61 = call i64 @SzAr_GetFolderUnpackSize(%struct.CSzAr* %0, i32 %1) #3
  %62 = icmp eq i64 %61, %5
  br i1 %62, label %63, label %570

63:                                               ; preds = %60
  %64 = bitcast [3 x i8*]* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %64, i8 0, i64 24, i1 false)
  %65 = getelementptr inbounds %struct.CSzAr, %struct.CSzAr* %0, i64 0, i32 8
  %66 = load i64*, i64** %65, align 8
  %67 = getelementptr inbounds %struct.CSzAr, %struct.CSzAr* %0, i64 0, i32 6
  %68 = load i32*, i32** %67, align 8
  %69 = getelementptr inbounds i32, i32* %68, i64 %36
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds i64, i64* %66, i64 %71
  %73 = getelementptr inbounds %struct.CSzAr, %struct.CSzAr* %0, i64 0, i32 2
  %74 = load i64*, i64** %73, align 8
  %75 = getelementptr inbounds %struct.CSzAr, %struct.CSzAr* %0, i64 0, i32 5
  %76 = load i32*, i32** %75, align 8
  %77 = getelementptr inbounds i32, i32* %76, i64 %36
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i64, i64* %74, i64 %79
  %81 = bitcast [3 x i64]* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %81, i8 0, i64 24, i1 false) #3
  %82 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = add i32 %83, -1
  %85 = icmp ugt i32 %84, 3
  br i1 %85, label %532, label %86

86:                                               ; preds = %63
  %87 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 6, i64 0, i32 2
  %88 = load i8, i8* %87, align 4
  %89 = icmp eq i8 %88, 1
  br i1 %89, label %90, label %532

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 6, i64 0, i32 1
  %92 = load i32, i32* %91, align 8
  switch i32 %92, label %532 [
    i32 0, label %93
    i32 196865, label %93
    i32 33, label %93
  ]

93:                                               ; preds = %90, %90, %90
  switch i32 %83, label %532 [
    i32 1, label %94
    i32 4, label %106
  ]

94:                                               ; preds = %93
  %95 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 2
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %532

98:                                               ; preds = %94
  %99 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 4, i64 0
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %532

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %176, label %532

106:                                              ; preds = %93
  %107 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 6, i64 1, i32 2
  %108 = load i8, i8* %107, align 4
  %109 = icmp eq i8 %108, 1
  br i1 %109, label %110, label %532

110:                                              ; preds = %106
  %111 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 6, i64 1, i32 1
  %112 = load i32, i32* %111, align 8
  switch i32 %112, label %532 [
    i32 0, label %113
    i32 196865, label %113
    i32 33, label %113
  ]

113:                                              ; preds = %110, %110, %110
  %114 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 6, i64 2, i32 2
  %115 = load i8, i8* %114, align 4
  %116 = icmp eq i8 %115, 1
  br i1 %116, label %117, label %532

117:                                              ; preds = %113
  %118 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 6, i64 2, i32 1
  %119 = load i32, i32* %118, align 8
  switch i32 %119, label %532 [
    i32 0, label %120
    i32 196865, label %120
    i32 33, label %120
  ]

120:                                              ; preds = %117, %117, %117
  %121 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 6, i64 3, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = icmp eq i32 %122, 50528539
  br i1 %123, label %124, label %532

124:                                              ; preds = %120
  %125 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 6, i64 3, i32 2
  %126 = load i8, i8* %125, align 4
  %127 = icmp eq i8 %126, 4
  br i1 %127, label %128, label %532

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 2
  %130 = load i32, i32* %129, align 8
  %131 = icmp eq i32 %130, 4
  br i1 %131, label %132, label %532

132:                                              ; preds = %128
  %133 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 4, i64 0
  %134 = load i32, i32* %133, align 8
  %135 = icmp eq i32 %134, 2
  br i1 %135, label %136, label %532

136:                                              ; preds = %132
  %137 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 4, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = icmp eq i32 %138, 6
  br i1 %139, label %140, label %532

140:                                              ; preds = %136
  %141 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 4, i64 2
  %142 = load i32, i32* %141, align 8
  %143 = icmp eq i32 %142, 1
  br i1 %143, label %144, label %532

144:                                              ; preds = %140
  %145 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 4, i64 3
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %532

148:                                              ; preds = %144
  %149 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %150, 3
  br i1 %151, label %152, label %532

152:                                              ; preds = %148
  %153 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 5, i64 0, i32 0
  %154 = load i32, i32* %153, align 8
  %155 = icmp eq i32 %154, 5
  br i1 %155, label %156, label %532

156:                                              ; preds = %152
  %157 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 5, i64 0, i32 1
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %532

160:                                              ; preds = %156
  %161 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 5, i64 1, i32 0
  %162 = load i32, i32* %161, align 8
  %163 = icmp eq i32 %162, 4
  br i1 %163, label %164, label %532

164:                                              ; preds = %160
  %165 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 5, i64 1, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = icmp eq i32 %166, 1
  br i1 %167, label %168, label %532

168:                                              ; preds = %164
  %169 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 5, i64 2, i32 0
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 3
  br i1 %171, label %172, label %532

172:                                              ; preds = %168
  %173 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 5, i64 2, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, 2
  br i1 %175, label %176, label %532

176:                                              ; preds = %172, %102
  %177 = getelementptr inbounds i64, i64* %80, i64 1
  %178 = getelementptr inbounds i64, i64* %80, i64 2
  %179 = getelementptr inbounds [3 x i64], [3 x i64]* %22, i64 0, i64 2
  %180 = getelementptr inbounds %struct.ISzAlloc, %struct.ISzAlloc* %6, i64 0, i32 0
  %181 = bitcast %struct.ISzAlloc* %6 to i8*
  %182 = getelementptr inbounds [3 x i8*], [3 x i8*]* %26, i64 0, i64 2
  %183 = bitcast i8** %20 to i8*
  %184 = bitcast i64* %21 to i8*
  %185 = getelementptr inbounds %struct.ILookInStream, %struct.ILookInStream* %2, i64 0, i32 0
  %186 = bitcast %struct.ILookInStream* %2 to i8*
  %187 = getelementptr inbounds %struct.ILookInStream, %struct.ILookInStream* %2, i64 0, i32 1
  %188 = getelementptr inbounds [3 x i64], [3 x i64]* %22, i64 0, i64 0
  %189 = getelementptr inbounds [3 x i64], [3 x i64]* %22, i64 0, i64 1
  %190 = bitcast %struct.CBcj2Dec* %23 to i8*
  %191 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %23, i64 0, i32 0, i64 0
  %192 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %23, i64 0, i32 1, i64 0
  %193 = bitcast [3 x i8*]* %26 to i64*
  %194 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %23, i64 0, i32 0, i64 1
  %195 = bitcast i8** %194 to i64*
  %196 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %23, i64 0, i32 1, i64 1
  %197 = getelementptr inbounds [3 x i8*], [3 x i8*]* %26, i64 0, i64 1
  %198 = bitcast i8** %197 to i64*
  %199 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %23, i64 0, i32 0, i64 2
  %200 = bitcast i8** %199 to i64*
  %201 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %23, i64 0, i32 1, i64 2
  %202 = bitcast i8** %182 to i64*
  %203 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %23, i64 0, i32 0, i64 3
  %204 = bitcast i8** %203 to i64*
  %205 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %23, i64 0, i32 1, i64 3
  %206 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %23, i64 0, i32 2
  %207 = getelementptr inbounds i8, i8* %4, i64 %5
  %208 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %23, i64 0, i32 3
  %209 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %23, i64 0, i32 8
  %210 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %23, i64 0, i32 4
  %211 = bitcast %struct.CLzma2Dec* %8 to i8*
  %212 = getelementptr inbounds %struct.CLzma2Dec, %struct.CLzma2Dec* %8, i64 0, i32 0
  %213 = getelementptr inbounds %struct.CLzma2Dec, %struct.CLzma2Dec* %8, i64 0, i32 0, i32 2
  %214 = getelementptr inbounds %struct.CLzma2Dec, %struct.CLzma2Dec* %8, i64 0, i32 0, i32 1
  %215 = bitcast i32** %214 to i8*
  %216 = getelementptr inbounds %struct.CLzma2Dec, %struct.CLzma2Dec* %8, i64 0, i32 0, i32 7
  %217 = bitcast i8** %9 to i8*
  %218 = bitcast i64* %10 to i8*
  %219 = bitcast i64* %11 to i8*
  %220 = getelementptr inbounds %struct.CLzma2Dec, %struct.CLzma2Dec* %8, i64 0, i32 0, i32 6
  %221 = bitcast i32* %12 to i8*
  %222 = bitcast %struct.CLzmaDec* %13 to i8*
  %223 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %13, i64 0, i32 1
  %224 = bitcast i32** %223 to i8*
  %225 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %13, i64 0, i32 2
  %226 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %13, i64 0, i32 7
  %227 = bitcast i8** %14 to i8*
  %228 = bitcast i64* %15 to i8*
  %229 = bitcast i64* %16 to i8*
  %230 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %13, i64 0, i32 6
  %231 = bitcast i32* %17 to i8*
  %232 = bitcast i8** %18 to i8*
  %233 = bitcast i64* %19 to i8*
  %234 = bitcast i32* %210 to i8*
  br label %235

235:                                              ; preds = %518, %176
  %236 = phi i32 [ %92, %176 ], [ %520, %518 ]
  %237 = phi i64 [ 0, %176 ], [ %514, %518 ]
  %238 = phi i32 [ %83, %176 ], [ %515, %518 ]
  %239 = phi i8* [ null, %176 ], [ %513, %518 ]
  %240 = phi i64 [ 0, %176 ], [ %512, %518 ]
  %241 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 6, i64 %237
  %242 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 6, i64 %237, i32 1
  switch i32 %236, label %532 [
    i32 0, label %243
    i32 196865, label %243
    i32 33, label %243
    i32 50528539, label %430
  ]

243:                                              ; preds = %235, %235, %235
  %244 = icmp eq i32 %238, 4
  br i1 %244, label %245, label %268

245:                                              ; preds = %243
  %246 = getelementptr inbounds i64, i64* %72, i64 %237
  %247 = load i64, i64* %246, align 8
  %248 = getelementptr inbounds [3 x i32], [3 x i32]* @__const.SzFolder_Decode2.indices, i64 0, i64 %237
  %249 = load i32, i32* %248, align 4
  %250 = icmp ult i64 %237, 2
  br i1 %250, label %251, label %261

251:                                              ; preds = %245
  %252 = load i8* (i8*, i64)*, i8* (i8*, i64)** %180, align 8
  %253 = call i8* %252(i8* %181, i64 %247) #3
  %254 = icmp eq i8* %253, null
  %255 = icmp ne i64 %247, 0
  %256 = and i1 %255, %254
  br i1 %256, label %532, label %257

257:                                              ; preds = %251
  %258 = sub nuw nsw i64 1, %237
  %259 = getelementptr inbounds [3 x i8*], [3 x i8*]* %26, i64 0, i64 %258
  store i8* %253, i8** %259, align 8
  %260 = getelementptr inbounds [3 x i64], [3 x i64]* %22, i64 0, i64 %258
  store i64 %247, i64* %260, align 8
  br label %268

261:                                              ; preds = %245
  %262 = icmp eq i64 %237, 2
  br i1 %262, label %263, label %532

263:                                              ; preds = %261
  %264 = icmp ugt i64 %247, %5
  br i1 %264, label %532, label %265

265:                                              ; preds = %263
  %266 = sub i64 %5, %247
  %267 = getelementptr inbounds i8, i8* %4, i64 %266
  br label %268

268:                                              ; preds = %265, %257, %243
  %269 = phi i64 [ %240, %243 ], [ %247, %265 ], [ %240, %257 ]
  %270 = phi i8* [ %239, %243 ], [ %267, %265 ], [ %239, %257 ]
  %271 = phi i32 [ 0, %243 ], [ %249, %265 ], [ %249, %257 ]
  %272 = phi i8* [ %4, %243 ], [ %267, %265 ], [ %253, %257 ]
  %273 = phi i64 [ %5, %243 ], [ %247, %265 ], [ %247, %257 ]
  %274 = zext i32 %271 to i64
  %275 = getelementptr inbounds i64, i64* %80, i64 %274
  %276 = load i64, i64* %275, align 8
  %277 = add i32 %271, 1
  %278 = zext i32 %277 to i64
  %279 = getelementptr inbounds i64, i64* %80, i64 %278
  %280 = load i64, i64* %279, align 8
  %281 = sub i64 %280, %276
  %282 = add i64 %276, %3
  %283 = call i32 @LookInStream_SeekTo(%struct.ILookInStream* %2, i64 %282) #3
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %532

285:                                              ; preds = %268
  %286 = load i32, i32* %242, align 8
  switch i32 %286, label %532 [
    i32 0, label %287
    i32 196865, label %312
    i32 33, label %372
  ]

287:                                              ; preds = %285
  %288 = icmp eq i64 %281, %273
  br i1 %288, label %289, label %532

289:                                              ; preds = %287, %304
  %290 = phi i64 [ %308, %304 ], [ %273, %287 ]
  %291 = phi i8* [ %307, %304 ], [ %272, %287 ]
  %292 = icmp eq i64 %290, 0
  br i1 %292, label %511, label %293

293:                                              ; preds = %289
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %232) #3
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233) #3
  %294 = icmp ult i64 %290, 262144
  %295 = select i1 %294, i64 %290, i64 262144
  store i64 %295, i64* %19, align 8
  %296 = load i32 (i8*, i8**, i64*)*, i32 (i8*, i8**, i64*)** %185, align 8
  %297 = call i32 %296(i8* %186, i8** nonnull %18, i64* nonnull %19) #3
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %300, label %299

299:                                              ; preds = %293
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %232) #3
  br label %532

300:                                              ; preds = %293
  %301 = load i64, i64* %19, align 8
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %304

303:                                              ; preds = %300
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %232) #3
  br label %532

304:                                              ; preds = %300
  %305 = load i8*, i8** %18, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %291, i8* align 1 %305, i64 %301, i1 false) #3
  %306 = load i64, i64* %19, align 8
  %307 = getelementptr inbounds i8, i8* %291, i64 %306
  %308 = sub i64 %290, %306
  %309 = load i32 (i8*, i64)*, i32 (i8*, i64)** %187, align 8
  %310 = call i32 %309(i8* %186, i64 %306) #3
  %311 = icmp eq i32 %310, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %232) #3
  br i1 %311, label %289, label %532

312:                                              ; preds = %285
  %313 = getelementptr inbounds %struct.CSzCoderInfo, %struct.CSzCoderInfo* %241, i64 0, i32 0
  %314 = load i64, i64* %313, align 8
  %315 = getelementptr inbounds i8, i8* %39, i64 %314
  %316 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 6, i64 %237, i32 3
  %317 = load i8, i8* %316, align 1
  %318 = zext i8 %317 to i32
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %222) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %222, i8 -86, i64 136, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %224, i8 0, i64 16, i1 false) #3
  %319 = call i32 @LzmaDec_AllocateProbs(%struct.CLzmaDec* nonnull %13, i8* %315, i32 %318, %struct.ISzAlloc* %6) #3
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %322, label %321

321:                                              ; preds = %312
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %222) #3
  br label %532

322:                                              ; preds = %312
  store i8* %272, i8** %225, align 8
  store i64 %273, i64* %226, align 8
  call void @LzmaDec_Init(%struct.CLzmaDec* nonnull %13) #3
  br label %323

323:                                              ; preds = %365, %322
  %324 = phi i64 [ %281, %322 ], [ %339, %365 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %227) #3
  store i8* null, i8** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %228) #3
  %325 = icmp ult i64 %324, 262144
  %326 = select i1 %325, i64 %324, i64 262144
  store i64 %326, i64* %15, align 8
  %327 = load i32 (i8*, i8**, i64*)*, i32 (i8*, i8**, i64*)** %185, align 8
  %328 = call i32 %327(i8* %186, i8** nonnull %14, i64* nonnull %15) #3
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %331, label %330

330:                                              ; preds = %323
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %228) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %227) #3
  br label %369

331:                                              ; preds = %323
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %229) #3
  %332 = load i64, i64* %15, align 8
  store i64 %332, i64* %16, align 8
  %333 = load i64, i64* %230, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %231) #3
  store i32 -1431655766, i32* %17, align 4
  %334 = load i8*, i8** %14, align 8
  %335 = call i32 @LzmaDec_DecodeToDic(%struct.CLzmaDec* nonnull %13, i64 %273, i8* %334, i64* nonnull %16, i32 1, i32* nonnull %17) #3
  %336 = load i64, i64* %16, align 8
  %337 = load i64, i64* %15, align 8
  %338 = sub i64 %337, %336
  store i64 %338, i64* %15, align 8
  %339 = sub i64 %324, %336
  %340 = icmp eq i32 %335, 0
  br i1 %340, label %341, label %365

341:                                              ; preds = %331
  %342 = load i32, i32* %17, align 4
  %343 = icmp eq i32 %342, 1
  %344 = load i64, i64* %230, align 8
  br i1 %343, label %345, label %350

345:                                              ; preds = %341
  %346 = icmp ne i64 %344, %273
  %347 = icmp ne i64 %339, 0
  %348 = or i1 %347, %346
  %349 = zext i1 %348 to i32
  br label %365

350:                                              ; preds = %341
  %351 = icmp eq i64 %344, %273
  %352 = icmp eq i64 %339, 0
  %353 = and i1 %352, %351
  %354 = icmp eq i32 %342, 4
  %355 = and i1 %354, %353
  br i1 %355, label %365, label %356

356:                                              ; preds = %350
  %357 = icmp eq i64 %336, 0
  %358 = icmp eq i64 %333, %344
  %359 = and i1 %357, %358
  br i1 %359, label %365, label %360

360:                                              ; preds = %356
  %361 = load i32 (i8*, i64)*, i32 (i8*, i64)** %187, align 8
  %362 = call i32 %361(i8* %186, i64 %336) #3
  %363 = icmp eq i32 %362, 0
  %364 = select i1 %363, i32 0, i32 2
  br label %365

365:                                              ; preds = %360, %356, %350, %345, %331
  %366 = phi i32 [ %349, %345 ], [ %335, %331 ], [ 0, %350 ], [ 1, %356 ], [ %362, %360 ]
  %367 = phi i32 [ 2, %345 ], [ 2, %331 ], [ 2, %350 ], [ 2, %356 ], [ %364, %360 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %231) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %229) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %228) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %227) #3
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %323, label %369

369:                                              ; preds = %365, %330
  %370 = phi i32 [ %328, %330 ], [ %366, %365 ]
  call void @LzmaDec_FreeProbs(%struct.CLzmaDec* nonnull %13, %struct.ISzAlloc* %6) #3
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %222) #3
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %511, label %532

372:                                              ; preds = %285
  %373 = getelementptr inbounds %struct.CSzCoderInfo, %struct.CSzCoderInfo* %241, i64 0, i32 0
  %374 = load i64, i64* %373, align 8
  %375 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 6, i64 %237, i32 3
  %376 = load i8, i8* %375, align 1
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %211) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %211, i8 -86, i64 168, i1 false) #3
  %377 = icmp eq i8 %376, 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %215, i8 0, i64 16, i1 false) #3
  br i1 %377, label %378, label %425

378:                                              ; preds = %372
  %379 = getelementptr inbounds i8, i8* %39, i64 %374
  %380 = load i8, i8* %379, align 1
  %381 = call i32 @Lzma2Dec_AllocateProbs(%struct.CLzma2Dec* nonnull %8, i8 zeroext %380, %struct.ISzAlloc* %6) #3
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %425

383:                                              ; preds = %378
  store i8* %272, i8** %213, align 8
  store i64 %273, i64* %216, align 8
  call void @Lzma2Dec_Init(%struct.CLzma2Dec* nonnull %8) #3
  br label %384

384:                                              ; preds = %421, %383
  %385 = phi i64 [ %281, %383 ], [ %400, %421 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %217) #3
  store i8* null, i8** %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %218) #3
  %386 = icmp ult i64 %385, 262144
  %387 = select i1 %386, i64 %385, i64 262144
  store i64 %387, i64* %10, align 8
  %388 = load i32 (i8*, i8**, i64*)*, i32 (i8*, i8**, i64*)** %185, align 8
  %389 = call i32 %388(i8* %186, i8** nonnull %9, i64* nonnull %10) #3
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %392, label %391

391:                                              ; preds = %384
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %218) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217) #3
  br label %427

392:                                              ; preds = %384
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %219) #3
  %393 = load i64, i64* %10, align 8
  store i64 %393, i64* %11, align 8
  %394 = load i64, i64* %220, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %221) #3
  store i32 -1431655766, i32* %12, align 4
  %395 = load i8*, i8** %9, align 8
  %396 = call i32 @Lzma2Dec_DecodeToDic(%struct.CLzma2Dec* nonnull %8, i64 %273, i8* %395, i64* nonnull %11, i32 1, i32* nonnull %12) #3
  %397 = load i64, i64* %11, align 8
  %398 = load i64, i64* %10, align 8
  %399 = sub i64 %398, %397
  store i64 %399, i64* %10, align 8
  %400 = sub i64 %385, %397
  %401 = icmp eq i32 %396, 0
  br i1 %401, label %402, label %421

402:                                              ; preds = %392
  %403 = load i32, i32* %12, align 4
  %404 = icmp eq i32 %403, 1
  br i1 %404, label %405, label %411

405:                                              ; preds = %402
  %406 = load i64, i64* %220, align 8
  %407 = icmp ne i64 %406, %273
  %408 = icmp ne i64 %400, 0
  %409 = or i1 %408, %407
  %410 = zext i1 %409 to i32
  br label %421

411:                                              ; preds = %402
  %412 = icmp eq i64 %397, 0
  %413 = load i64, i64* %220, align 8
  %414 = icmp eq i64 %394, %413
  %415 = and i1 %412, %414
  br i1 %415, label %421, label %416

416:                                              ; preds = %411
  %417 = load i32 (i8*, i64)*, i32 (i8*, i64)** %187, align 8
  %418 = call i32 %417(i8* %186, i64 %397) #3
  %419 = icmp eq i32 %418, 0
  %420 = select i1 %419, i32 0, i32 2
  br label %421

421:                                              ; preds = %416, %411, %405, %392
  %422 = phi i32 [ %410, %405 ], [ %396, %392 ], [ 1, %411 ], [ %418, %416 ]
  %423 = phi i32 [ 2, %405 ], [ 2, %392 ], [ 2, %411 ], [ %420, %416 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %221) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %219) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %218) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217) #3
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %384, label %427

425:                                              ; preds = %378, %372
  %426 = phi i32 [ 1, %372 ], [ %381, %378 ]
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %211) #3
  br label %532

427:                                              ; preds = %421, %391
  %428 = phi i32 [ %389, %391 ], [ %422, %421 ]
  call void @LzmaDec_FreeProbs(%struct.CLzmaDec* nonnull %212, %struct.ISzAlloc* %6) #3
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %211) #3
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %511, label %532

430:                                              ; preds = %235
  %431 = load i64, i64* %177, align 8
  %432 = load i64, i64* %178, align 8
  %433 = sub i64 %432, %431
  %434 = icmp eq i64 %237, 3
  br i1 %434, label %435, label %532

435:                                              ; preds = %430
  store i64 %433, i64* %179, align 16
  %436 = load i8* (i8*, i64)*, i8* (i8*, i64)** %180, align 8
  %437 = call i8* %436(i8* %181, i64 %433) #3
  store i8* %437, i8** %182, align 16
  %438 = icmp ne i8* %437, null
  %439 = icmp eq i64 %433, 0
  %440 = or i1 %439, %438
  br i1 %440, label %441, label %532

441:                                              ; preds = %435
  %442 = add i64 %431, %3
  %443 = call i32 @LookInStream_SeekTo(%struct.ILookInStream* %2, i64 %442) #3
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %532

445:                                              ; preds = %441, %460
  %446 = phi i64 [ %464, %460 ], [ %433, %441 ]
  %447 = phi i8* [ %463, %460 ], [ %437, %441 ]
  %448 = icmp eq i64 %446, 0
  br i1 %448, label %468, label %449

449:                                              ; preds = %445
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #3
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #3
  %450 = icmp ult i64 %446, 262144
  %451 = select i1 %450, i64 %446, i64 262144
  store i64 %451, i64* %21, align 8
  %452 = load i32 (i8*, i8**, i64*)*, i32 (i8*, i8**, i64*)** %185, align 8
  %453 = call i32 %452(i8* %186, i8** nonnull %20, i64* nonnull %21) #3
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %456, label %455

455:                                              ; preds = %449
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #3
  br label %532

456:                                              ; preds = %449
  %457 = load i64, i64* %21, align 8
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %459, label %460

459:                                              ; preds = %456
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #3
  br label %532

460:                                              ; preds = %456
  %461 = load i8*, i8** %20, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %447, i8* align 1 %461, i64 %457, i1 false) #3
  %462 = load i64, i64* %21, align 8
  %463 = getelementptr inbounds i8, i8* %447, i64 %462
  %464 = sub i64 %446, %462
  %465 = load i32 (i8*, i64)*, i32 (i8*, i64)** %187, align 8
  %466 = call i32 %465(i8* %186, i64 %462) #3
  %467 = icmp eq i32 %466, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #3
  br i1 %467, label %445, label %532

468:                                              ; preds = %445
  %469 = load i64, i64* %188, align 16
  %470 = and i64 %469, 3
  %471 = icmp eq i64 %470, 0
  br i1 %471, label %472, label %532

472:                                              ; preds = %468
  %473 = load i64, i64* %189, align 8
  %474 = and i64 %473, 3
  %475 = icmp eq i64 %474, 0
  br i1 %475, label %476, label %532

476:                                              ; preds = %472
  %477 = add i64 %469, %240
  %478 = add i64 %477, %473
  %479 = icmp eq i64 %478, %5
  br i1 %479, label %480, label %532

480:                                              ; preds = %476
  call void @llvm.lifetime.start.p0i8(i64 616, i8* nonnull %190) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %234, i8 -86, i64 536, i1 false) #3
  store i8* %239, i8** %191, align 8
  %481 = getelementptr inbounds i8, i8* %239, i64 %240
  store i8* %481, i8** %192, align 8
  %482 = load i64, i64* %193, align 16
  store i64 %482, i64* %195, align 8
  %483 = inttoptr i64 %482 to i8*
  %484 = getelementptr inbounds i8, i8* %483, i64 %469
  store i8* %484, i8** %196, align 8
  %485 = load i64, i64* %198, align 8
  store i64 %485, i64* %200, align 8
  %486 = inttoptr i64 %485 to i8*
  %487 = getelementptr inbounds i8, i8* %486, i64 %473
  store i8* %487, i8** %201, align 8
  %488 = load i64, i64* %202, align 16
  store i64 %488, i64* %204, align 8
  %489 = inttoptr i64 %488 to i8*
  %490 = load i64, i64* %179, align 16
  %491 = getelementptr inbounds i8, i8* %489, i64 %490
  store i8* %491, i8** %205, align 8
  store i8* %4, i8** %206, align 8
  store i8* %207, i8** %208, align 8
  call void @Bcj2Dec_Init(%struct.CBcj2Dec* nonnull %23) #3
  %492 = call i32 @Bcj2Dec_Decode(%struct.CBcj2Dec* nonnull %23) #3
  %493 = icmp eq i32 %492, 0
  br i1 %493, label %494, label %506

494:                                              ; preds = %480
  %495 = load i8*, i8** %191, align 8
  %496 = load i8*, i8** %192, align 8
  %497 = icmp eq i8* %495, %496
  br i1 %497, label %498, label %506

498:                                              ; preds = %494
  %499 = load i8*, i8** %194, align 8
  %500 = load i8*, i8** %196, align 8
  %501 = icmp eq i8* %499, %500
  br i1 %501, label %521, label %506

502:                                              ; preds = %525
  %503 = load i8*, i8** %206, align 8
  %504 = load i8*, i8** %208, align 8
  %505 = icmp eq i8* %503, %504
  br i1 %505, label %508, label %506

506:                                              ; preds = %525, %521, %502, %498, %494, %480
  %507 = phi i32 [ 1, %494 ], [ 1, %498 ], [ 1, %521 ], [ 1, %525 ], [ 1, %502 ], [ %492, %480 ]
  call void @llvm.lifetime.end.p0i8(i64 616, i8* nonnull %190) #3
  br label %532

508:                                              ; preds = %502
  %509 = load i32, i32* %210, align 8
  %510 = icmp eq i32 %509, 0
  call void @llvm.lifetime.end.p0i8(i64 616, i8* nonnull %190) #3
  br i1 %510, label %511, label %532

511:                                              ; preds = %289, %508, %427, %369
  %512 = phi i64 [ %240, %508 ], [ %269, %369 ], [ %269, %427 ], [ %269, %289 ]
  %513 = phi i8* [ %239, %508 ], [ %270, %369 ], [ %270, %427 ], [ %270, %289 ]
  %514 = add nuw nsw i64 %237, 1
  %515 = load i32, i32* %82, align 8
  %516 = zext i32 %515 to i64
  %517 = icmp ult i64 %514, %516
  br i1 %517, label %518, label %532

518:                                              ; preds = %511
  %519 = getelementptr inbounds %struct.CSzFolder, %struct.CSzFolder* %24, i64 0, i32 6, i64 %514, i32 1
  %520 = load i32, i32* %519, align 8
  br label %235

521:                                              ; preds = %498
  %522 = load i8*, i8** %199, align 8
  %523 = load i8*, i8** %201, align 8
  %524 = icmp eq i8* %522, %523
  br i1 %524, label %525, label %506

525:                                              ; preds = %521
  %526 = load i8*, i8** %203, align 8
  %527 = load i8*, i8** %205, align 8
  %528 = icmp eq i8* %526, %527
  %529 = load i32, i32* %209, align 8
  %530 = icmp eq i32 %529, 0
  %531 = and i1 %528, %530
  br i1 %531, label %502, label %506

532:                                              ; preds = %235, %251, %261, %263, %268, %285, %287, %369, %427, %430, %435, %441, %468, %472, %476, %508, %511, %460, %304, %63, %86, %90, %93, %94, %98, %102, %106, %110, %113, %117, %120, %124, %128, %132, %136, %140, %144, %148, %152, %156, %160, %164, %168, %172, %299, %303, %321, %425, %455, %459, %506
  %533 = phi i32 [ 4, %117 ], [ 4, %113 ], [ 4, %110 ], [ 4, %106 ], [ 4, %90 ], [ 4, %86 ], [ 4, %172 ], [ 4, %93 ], [ 4, %128 ], [ 4, %132 ], [ 4, %136 ], [ 4, %140 ], [ 4, %144 ], [ 4, %148 ], [ 4, %152 ], [ 4, %156 ], [ 4, %160 ], [ 4, %164 ], [ 4, %168 ], [ 4, %120 ], [ 4, %124 ], [ 4, %94 ], [ 4, %98 ], [ 4, %63 ], [ 4, %102 ], [ %426, %425 ], [ %319, %321 ], [ %297, %299 ], [ 6, %303 ], [ %453, %455 ], [ 6, %459 ], [ %507, %506 ], [ %310, %304 ], [ %466, %460 ], [ 4, %235 ], [ %283, %268 ], [ %428, %427 ], [ %370, %369 ], [ 1, %468 ], [ 1, %472 ], [ 1, %476 ], [ 2, %435 ], [ 4, %430 ], [ 2, %251 ], [ 4, %261 ], [ 5, %263 ], [ 4, %285 ], [ 1, %287 ], [ 1, %508 ], [ 0, %511 ], [ %443, %441 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #3
  %534 = getelementptr inbounds %struct.ISzAlloc, %struct.ISzAlloc* %6, i64 0, i32 1
  %535 = bitcast %struct.ISzAlloc* %6 to i8*
  %536 = load void (i8*, i8*)*, void (i8*, i8*)** %534, align 8
  %537 = getelementptr inbounds [3 x i8*], [3 x i8*]* %26, i64 0, i64 0
  %538 = load i8*, i8** %537, align 16
  call void %536(i8* %535, i8* %538) #3
  %539 = load void (i8*, i8*)*, void (i8*, i8*)** %534, align 8
  %540 = getelementptr inbounds [3 x i8*], [3 x i8*]* %26, i64 0, i64 1
  %541 = load i8*, i8** %540, align 8
  call void %539(i8* %535, i8* %541) #3
  %542 = load void (i8*, i8*)*, void (i8*, i8*)** %534, align 8
  %543 = getelementptr inbounds [3 x i8*], [3 x i8*]* %26, i64 0, i64 2
  %544 = load i8*, i8** %543, align 16
  call void %542(i8* %535, i8* %544) #3
  %545 = icmp eq i32 %533, 0
  br i1 %545, label %546, label %568

546:                                              ; preds = %532
  %547 = getelementptr inbounds %struct.CSzAr, %struct.CSzAr* %0, i64 0, i32 3, i32 0
  %548 = load i8*, i8** %547, align 8
  %549 = icmp eq i8* %548, null
  br i1 %549, label %568, label %550

550:                                              ; preds = %546
  %551 = lshr i32 %1, 3
  %552 = zext i32 %551 to i64
  %553 = getelementptr inbounds i8, i8* %548, i64 %552
  %554 = load i8, i8* %553, align 1
  %555 = zext i8 %554 to i32
  %556 = and i32 %1, 7
  %557 = lshr i32 128, %556
  %558 = and i32 %557, %555
  %559 = icmp eq i32 %558, 0
  br i1 %559, label %568, label %560

560:                                              ; preds = %550
  %561 = call i32 @CrcCalc(i8* %4, i64 %5) #3
  %562 = getelementptr inbounds %struct.CSzAr, %struct.CSzAr* %0, i64 0, i32 3, i32 1
  %563 = load i32*, i32** %562, align 8
  %564 = getelementptr inbounds i32, i32* %563, i64 %36
  %565 = load i32, i32* %564, align 4
  %566 = icmp eq i32 %561, %565
  %567 = select i1 %566, i32 0, i32 3
  br label %568

568:                                              ; preds = %560, %550, %546, %532
  %569 = phi i32 [ 0, %550 ], [ 0, %546 ], [ %533, %532 ], [ %567, %560 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #3
  br label %570

570:                                              ; preds = %48, %51, %60, %7, %568
  %571 = phi i32 [ %569, %568 ], [ %46, %7 ], [ 11, %60 ], [ 11, %51 ], [ 11, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #3
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %27) #3
  ret i32 %571
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @SzGetNextFolderItem(%struct.CSzFolder*, %struct.CSzData*) local_unnamed_addr #2

declare i64 @SzAr_GetFolderUnpackSize(%struct.CSzAr*, i32) local_unnamed_addr #2

declare i32 @CrcCalc(i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @LookInStream_SeekTo(%struct.ILookInStream*, i64) local_unnamed_addr #2

declare void @Bcj2Dec_Init(%struct.CBcj2Dec*) local_unnamed_addr #2

declare i32 @Bcj2Dec_Decode(%struct.CBcj2Dec*) local_unnamed_addr #2

declare i32 @LzmaDec_AllocateProbs(%struct.CLzmaDec*, i8*, i32, %struct.ISzAlloc*) local_unnamed_addr #2

declare void @LzmaDec_Init(%struct.CLzmaDec*) local_unnamed_addr #2

declare i32 @LzmaDec_DecodeToDic(%struct.CLzmaDec*, i64, i8*, i64*, i32, i32*) local_unnamed_addr #2

declare void @LzmaDec_FreeProbs(%struct.CLzmaDec*, %struct.ISzAlloc*) local_unnamed_addr #2

declare i32 @Lzma2Dec_AllocateProbs(%struct.CLzma2Dec*, i8 zeroext, %struct.ISzAlloc*) local_unnamed_addr #2

declare void @Lzma2Dec_Init(%struct.CLzma2Dec*) local_unnamed_addr #2

declare i32 @Lzma2Dec_DecodeToDic(%struct.CLzma2Dec*, i64, i8*, i64*, i32, i32*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
