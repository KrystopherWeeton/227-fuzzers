; ModuleID = '../../third_party/blink/renderer/core/trustedtypes/trusted_types_util.cc'
source_filename = "../../third_party/blink/renderer/core/trustedtypes/trusted_types_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.251", i32, [4 x i8], %"class.std::__1::unique_ptr.389", %"class.std::__1::unique_ptr.389", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.399", %"class.std::__1::unique_ptr.405", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.417", %"class.std::__1::unique_ptr.423", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.430", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.254", %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.266", %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.278", %"class.std::__1::unique_ptr.284", %"class.std::__1::unique_ptr.295", %"class.std::__1::unique_ptr.302", %"class.std::__1::unique_ptr.302", %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.330", %"class.std::__1::unique_ptr.337", %"class.std::__1::unique_ptr.344", %"class.std::__1::unique_ptr.369", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.287" = type { %"struct.std::__1::__atomic_base.288" }
%"struct.std::__1::__atomic_base.288" = type { %"struct.std::__1::__atomic_base.289" }
%"struct.std::__1::__atomic_base.289" = type { %"struct.std::__1::__cxx_atomic_impl.290" }
%"struct.std::__1::__cxx_atomic_impl.290" = type { %"struct.std::__1::__cxx_atomic_base_impl.291" }
%"struct.std::__1::__cxx_atomic_base_impl.291" = type { i64 }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.blink::Worklist.298"* }
%"class.blink::Worklist.298" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.blink::Worklist.305"* }
%"class.blink::Worklist.305" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.blink::Worklist.312"* }
%"class.blink::Worklist.312" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.blink::Worklist.319"* }
%"class.blink::Worklist.319" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.blink::Worklist.326"* }
%"class.blink::Worklist.326" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.blink::Worklist.333"* }
%"class.blink::Worklist.333" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.blink::Worklist.340"* }
%"class.blink::Worklist.340" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.347", %"class.std::__1::__compressed_pair.355", %"class.std::__1::__compressed_pair.360", %"class.std::__1::__compressed_pair.362", [4 x i8] }>
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349", %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i64 }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { float }
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.372", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.381" }
%"class.WTF::Vector.381" = type { %"class.WTF::VectorBuffer.382" }
%"class.WTF::VectorBuffer.382" = type { %"class.WTF::VectorBufferBase.383" }
%"class.WTF::VectorBufferBase.383" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.411" }
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.298"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.305"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.312"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.319"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.326"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.442" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.417" = type { %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.429 }
%class.scoped_refptr.429 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.430" = type { %"struct.std::__1::__atomic_base.431" }
%"struct.std::__1::__atomic_base.431" = type { %"struct.std::__1::__cxx_atomic_impl.432" }
%"struct.std::__1::__cxx_atomic_impl.432" = type { %"struct.std::__1::__cxx_atomic_base_impl.433" }
%"struct.std::__1::__cxx_atomic_base_impl.433" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.118" }
%"struct.std::__1::atomic.118" = type { %"struct.std::__1::__atomic_base.119" }
%"struct.std::__1::__atomic_base.119" = type { %"struct.std::__1::__atomic_base.120" }
%"struct.std::__1::__atomic_base.120" = type { %"struct.std::__1::__cxx_atomic_impl.121" }
%"struct.std::__1::__cxx_atomic_impl.121" = type { %"struct.std::__1::__cxx_atomic_base_impl.122" }
%"struct.std::__1::__cxx_atomic_base_impl.122" = type { i32 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.47", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.53", %"class.blink::Member.55", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.64", %"class.blink::Member.205", %"class.blink::Member.207", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.4" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.2" }
%"class.WTF::HashTable.2" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.4" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.5" }
%"class.blink::HeapHashMap.5" = type { %"class.WTF::HashMap.8" }
%"class.WTF::HashMap.8" = type { %"class.WTF::HashTable.9" }
%"class.WTF::HashTable.9" = type <{ %"struct.WTF::KeyValuePair.11"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.11" = type { i8*, %"class.blink::Member.1749" }
%"class.blink::Member.1749" = type { %"class.blink::MemberBase.1750" }
%"class.blink::MemberBase.1750" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1751" }
%"class.blink::Member.1751" = type { %"class.blink::MemberBase.1752" }
%"class.blink::MemberBase.1752" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.38", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.44", i32, i32 }
%class.scoped_refptr = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.14 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.14 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.27", %"class.std::__1::map.36"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.17 }
%union.anon.17 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::map.27" = type { %"class.std::__1::__tree.28" }
%"class.std::__1::__tree.28" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::map.36" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.44" = type { %"class.WTF::HashTable.45" }
%"class.WTF::HashTable.45" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.51"*, i32, i32 }
%"class.blink::Member.51" = type opaque
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.57", i32, i32 }
%"class.blink::HeapHashMap.57" = type { %"class.WTF::HashMap.60" }
%"class.WTF::HashMap.60" = type { %"class.WTF::HashTable.61" }
%"class.WTF::HashTable.61" = type <{ %"struct.WTF::KeyValuePair.63"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.63" = type opaque
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.67" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.70" }
%"class.WTF::Vector.70" = type { %"class.WTF::VectorBuffer.71" }
%"class.WTF::VectorBuffer.71" = type { %"class.WTF::VectorBufferBase.72" }
%"class.WTF::VectorBufferBase.72" = type { %"class.mojo::StructPtr.73"*, i32, i32 }
%"class.mojo::StructPtr.73" = type { %"class.std::__1::unique_ptr.74" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.77", %"class.WTF::HashMap.84", %"class.WTF::HashMap.89", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.94", i32, %"class.mojo::StructPtr.99", %"class.WTF::Vector.94" }
%"class.mojo::StructPtr.77" = type { %"class.std::__1::unique_ptr.78" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.84" = type { %"class.WTF::HashTable.85" }
%"class.WTF::HashTable.85" = type <{ %"struct.WTF::KeyValuePair.88"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.88" = type opaque
%"class.WTF::HashMap.89" = type { %"class.WTF::HashTable.90" }
%"class.WTF::HashTable.90" = type <{ %"struct.WTF::KeyValuePair.93"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.93" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.99" = type { %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.94", i8, i8, [6 x i8] }>
%"class.WTF::Vector.94" = type { %"class.WTF::VectorBuffer.95" }
%"class.WTF::VectorBuffer.95" = type { %"class.WTF::VectorBufferBase.96" }
%"class.WTF::VectorBufferBase.96" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.196" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.114", i32 }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.123", %"class.absl::optional.128", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.149", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.171", %"class.std::__1::map.182", i64, %"class.base::OnceCallback.142", %"class.base::OnceCallback.191", i8, %class.scoped_refptr.133, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.192" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.117 }
%class.scoped_refptr.117 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.118" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.123" = type { %"class.absl::optional_internal::optional_data.124" }
%"class.absl::optional_internal::optional_data.124" = type { %"class.absl::optional_internal::optional_data_base.125" }
%"class.absl::optional_internal::optional_data_base.125" = type { %"class.absl::optional_internal::optional_data_dtor_base.126" }
%"class.absl::optional_internal::optional_data_dtor_base.126" = type { i8, %union.anon.127 }
%union.anon.127 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.128" = type { %"class.absl::optional_internal::optional_data.129" }
%"class.absl::optional_internal::optional_data.129" = type { %"class.absl::optional_internal::optional_data_base.130" }
%"class.absl::optional_internal::optional_data_base.130" = type { %"class.absl::optional_internal::optional_data_dtor_base.131" }
%"class.absl::optional_internal::optional_data_dtor_base.131" = type { i8, %union.anon.132 }
%union.anon.132 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.142" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.133, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.135 }
%class.scoped_refptr.135 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.136", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.136" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.137" }
%"struct.std::__1::atomic.137" = type { %"struct.std::__1::__atomic_base.138" }
%"struct.std::__1::__atomic_base.138" = type { %"struct.std::__1::__atomic_base.139" }
%"struct.std::__1::__atomic_base.139" = type { %"struct.std::__1::__cxx_atomic_impl.140" }
%"struct.std::__1::__cxx_atomic_impl.140" = type { %"struct.std::__1::__cxx_atomic_base_impl.141" }
%"struct.std::__1::__cxx_atomic_base_impl.141" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.147 }
%class.scoped_refptr.147 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.219", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.133, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.219" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.148 }
%class.scoped_refptr.148 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.152", %class.scoped_refptr.153 }
%"class.base::RepeatingCallback.152" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.153 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.154", [4 x i8] }>
%"class.base::RefCountedThreadSafe.154" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.164", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.170" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.170" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.171" = type { %"class.std::__1::__tree.172" }
%"class.std::__1::__tree.172" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.173", %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::map.182" = type { %"class.std::__1::__tree.183" }
%"class.std::__1::__tree.183" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.184", %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.base::OnceCallback.142" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.191" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.133 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.134" }>
%"class.base::RefCountedThreadSafe.134" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.142" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.192" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.205" = type { %"class.blink::MemberBase.206" }
%"class.blink::MemberBase.206" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.207" = type { %"class.blink::MemberBase.208" }
%"class.blink::MemberBase.208" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.55", i8, [7 x i8], %"class.WTF::Vector.70", %"class.blink::HeapVector.211", i8, [7 x i8], %"class.WTF::HashSet.44", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.211" = type { %"class.WTF::Vector.214" }
%"class.WTF::Vector.214" = type { %"class.WTF::VectorBuffer.215" }
%"class.WTF::VectorBuffer.215" = type { %"class.WTF::VectorBufferBase.216" }
%"class.WTF::VectorBufferBase.216" = type { %"class.blink::Member.217"*, i32, i32 }
%"class.blink::Member.217" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::HeapVector.447" = type { %"class.WTF::Vector.450" }
%"class.WTF::Vector.450" = type { %"class.WTF::VectorBuffer.451" }
%"class.WTF::VectorBuffer.451" = type { %"class.WTF::VectorBufferBase.452" }
%"class.WTF::VectorBufferBase.452" = type { %"class.blink::ScriptValue"*, i32, i32 }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference", %class.scoped_refptr.453 }
%class.scoped_refptr.453 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.238", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.238" = type { %"class.base::RefCounted.239" }
%"class.base::RefCounted.239" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.242" }
%"class.blink::HeapHashMap.242" = type { %"class.WTF::HashMap.245" }
%"class.WTF::HashMap.245" = type { %"class.WTF::HashTable.246" }
%"class.WTF::HashTable.246" = type <{ %"struct.WTF::KeyValuePair.248"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.248" = type { %"class.blink::WeakMember.249", %"class.blink::TraceWrapperV8Reference.222" }
%"class.blink::WeakMember.249" = type { %"class.blink::MemberBase.250" }
%"class.blink::MemberBase.250" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.222" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.222" = type { %"class.v8::TracedReference.223" }
%"class.v8::TracedReference.223" = type { %"class.v8::BasicTracedReference.224" }
%"class.v8::BasicTracedReference.224" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::TrustedTypePolicyFactory" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContextClient", %"class.blink::Member.457", %"class.blink::Member.459", %"class.blink::HeapHashMap.1816", i8, [7 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.508" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.496" }
%"class.blink::HeapVector.496" = type { %"class.WTF::Vector.499" }
%"class.WTF::Vector.499" = type { %"class.WTF::VectorBuffer.500" }
%"class.WTF::VectorBuffer.500" = type { %"class.WTF::VectorBufferBase.501", [32 x i8] }
%"class.WTF::VectorBufferBase.501" = type { %"struct.std::__1::pair.502"*, i32, i32 }
%"struct.std::__1::pair.502" = type { %"class.WTF::AtomicString", %"class.blink::Member.503" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::HeapVector.505"* }
%"class.blink::HeapVector.505" = type opaque
%"class.std::__1::unique_ptr.508" = type { %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.WTF::Vector.511"* }
%"class.WTF::Vector.511" = type opaque
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1815" }
%"class.blink::WeakMember.1815" = type { %"class.blink::MemberBase" }
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::TrustedHTML"* }
%"class.blink::TrustedHTML" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::TrustedScript"* }
%"class.blink::TrustedScript" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.blink::HeapHashMap.1816" = type { %"class.WTF::HashMap.1819" }
%"class.WTF::HashMap.1819" = type { %"class.WTF::HashTable.1820" }
%"class.WTF::HashTable.1820" = type <{ %"struct.WTF::KeyValuePair.1822"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1822" = type opaque
%"class.blink::TrustedTypePolicy" = type { %"class.blink::ScriptWrappable", %"class.WTF::String", %"class.blink::Member.225" }
%"class.blink::Member.225" = type { %"class.blink::MemberBase.226" }
%"class.blink::MemberBase.226" = type { %"class.blink::TrustedTypePolicyOptions"* }
%"class.blink::TrustedTypePolicyOptions" = type { %"class.blink::IDLDictionaryBase", %"class.blink::Member.229", %"class.blink::Member.438", %"class.blink::Member.440" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::Member.229" = type { %"class.blink::MemberBase.230" }
%"class.blink::MemberBase.230" = type { %"class.blink::V8CreateHTMLCallback"* }
%"class.blink::V8CreateHTMLCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.222", %"class.blink::Member.233", %"class.blink::Member.233" }
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.237, %"class.blink::Member.434", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.237 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.436" }
%"class.blink::Persistent.436" = type { %"class.blink::PersistentBase.437" }
%"class.blink::PersistentBase.437" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::V8CreateScriptCallback"* }
%"class.blink::V8CreateScriptCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::V8CreateURLCallback"* }
%"class.blink::V8CreateURLCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.465", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.477", %"class.WTF::Vector.479" }
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.468", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.657", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.665", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.679", %"class.blink::FrameLoader", %"class.blink::Member.706", %"class.blink::Member.708", %"class.blink::Member.737", %"class.blink::Member.739", %"class.blink::Member.741", %"class.blink::Member.743", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.745", %class.scoped_refptr.965, %"class.blink::Member.966", %"class.blink::Member.968", %"class.blink::Member.984", %"class.blink::Member.986", %"class.blink::Member.988", %"class.blink::Member.990", %"class.blink::Member.992", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.996", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1017", %"class.std::__1::unique_ptr.1018", %"class.absl::optional.644", i32, [4 x i8], %"class.std::__1::unique_ptr.1024", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1032", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1037", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1042", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1045", %"class.blink::Member.1047", %"class.blink::Member.1049", %"class.blink::Member.1051", %"class.mojo::StructPtr.1054", %"class.blink::Member.1063", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1065", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.488", %"class.blink::Member.490", %"class.blink::Member.492", i8, i32, i8, i32, %"class.blink::Member.626", %"class.blink::Member.515", %"class.blink::FrameLifecycle", %"class.blink::Member.486", %"class.blink::Member.486", %"class.blink::Member.486", %"class.blink::Member.486", %"class.blink::Member.486", %"class.blink::Member.486", %"class.blink::Member.628", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.637", i8, %"class.base::UnguessableToken", %"class.absl::optional.639", %"class.absl::optional.644", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.486", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.486", %"class.blink::Member.515", %"class.blink::Member.517", %"class.blink::Member.519", i8, %"class.WTF::Vector.521" }
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.521" = type { %"class.WTF::VectorBuffer.522" }
%"class.WTF::VectorBuffer.522" = type { %"class.WTF::VectorBufferBase.523" }
%"class.WTF::VectorBufferBase.523" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.524", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType.524" = type { %"class.base::StrongAlias.525" }
%"class.base::StrongAlias.525" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.618" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.526, %"class.std::__1::unique_ptr.114", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.133, i32 }>
%class.scoped_refptr.526 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.133, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.584", %"class.absl::optional.589", %"class.absl::optional.543", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.609", i8, [7 x i8], %class.scoped_refptr.133, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.154" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.142", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.133, %"class.std::__1::unique_ptr.527", %"class.absl::optional.537", %"struct.std::__1::atomic.430", i8, i8, i8, i8, i32, i32, %"class.absl::optional.543", %"class.std::__1::unique_ptr.548", i8, i64, %class.scoped_refptr.581, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.583" }
%"class.std::__1::unique_ptr.527" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.133, i8, %"class.mojo::ScopedHandleBase.530", %class.scoped_refptr.531, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.532", i8*, %"class.base::WeakPtrFactory.533" }
%"class.mojo::ScopedHandleBase.530" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.531 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.532" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.533" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.537" = type { %"class.absl::optional_internal::optional_data.538" }
%"class.absl::optional_internal::optional_data.538" = type { %"class.absl::optional_internal::optional_data_base.539" }
%"class.absl::optional_internal::optional_data_base.539" = type { %"class.absl::optional_internal::optional_data_dtor_base.540" }
%"class.absl::optional_internal::optional_data_dtor_base.540" = type { i8, %union.anon.541 }
%union.anon.541 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.542", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.542" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.551", i8, i64, %class.scoped_refptr.552, %class.scoped_refptr.577 }
%"class.base::RepeatingCallback.551" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.552 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.553", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.555", %"class.std::__1::map.566", i8, [7 x i8] }>
%"class.base::RefCounted.553" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.554 }
%class.scoped_refptr.554 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.555" = type { %"class.std::__1::__tree.556" }
%"class.std::__1::__tree.556" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.557", %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::map.566" = type { %"class.std::__1::__tree.567" }
%"class.std::__1::__tree.567" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.568", %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%class.scoped_refptr.577 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.581 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.582 }
%class.scoped_refptr.582 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.583" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.584" = type { %"class.absl::optional_internal::optional_data.585" }
%"class.absl::optional_internal::optional_data.585" = type { %"class.absl::optional_internal::optional_data_base.586" }
%"class.absl::optional_internal::optional_data_base.586" = type { %"class.absl::optional_internal::optional_data_dtor_base.587" }
%"class.absl::optional_internal::optional_data_dtor_base.587" = type { i8, %union.anon.588 }
%union.anon.588 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.589" = type { %"class.absl::optional_internal::optional_data.590" }
%"class.absl::optional_internal::optional_data.590" = type { %"class.absl::optional_internal::optional_data_base.591" }
%"class.absl::optional_internal::optional_data_base.591" = type { %"class.absl::optional_internal::optional_data_dtor_base.592" }
%"class.absl::optional_internal::optional_data_dtor_base.592" = type { i8, [7 x i8], %union.anon.593 }
%union.anon.593 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.543" = type { %"class.absl::optional_internal::optional_data.544" }
%"class.absl::optional_internal::optional_data.544" = type { %"class.absl::optional_internal::optional_data_base.545" }
%"class.absl::optional_internal::optional_data_base.545" = type { %"class.absl::optional_internal::optional_data_dtor_base.546" }
%"class.absl::optional_internal::optional_data_dtor_base.546" = type { i8, %union.anon.547 }
%union.anon.547 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.594 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.594 = type { %"class.std::__1::map.597" }
%"class.std::__1::map.597" = type { %"class.std::__1::__tree.598" }
%"class.std::__1::__tree.598" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.599", %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.608"*, i64 }
%"class.std::__1::unique_ptr.608" = type opaque
%"class.std::__1::map.609" = type { %"class.std::__1::__tree.610" }
%"class.std::__1::__tree.610" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.611", %"class.std::__1::__compressed_pair.615" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.618" = type { %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.626" = type { %"class.blink::MemberBase.627" }
%"class.blink::MemberBase.627" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.515" = type { %"class.blink::MemberBase.516" }
%"class.blink::MemberBase.516" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::Frame"* }
%"class.blink::Member.628" = type { %"class.blink::MemberBase.478" }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.486", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.629" }
%"class.std::__1::vector.629" = type { %"class.std::__1::__vector_base.630" }
%"class.std::__1::__vector_base.630" = type { %"struct.std::__1::pair.631"*, %"struct.std::__1::pair.631"*, %"class.std::__1::__compressed_pair.632" }
%"struct.std::__1::pair.631" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.633" }
%"struct.std::__1::__compressed_pair_elem.633" = type { %"struct.std::__1::pair.631"* }
%"class.blink::Member.637" = type { %"class.blink::MemberBase.638" }
%"class.blink::MemberBase.638" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.639" = type { %"class.absl::optional_internal::optional_data.640" }
%"class.absl::optional_internal::optional_data.640" = type { %"class.absl::optional_internal::optional_data_base.641" }
%"class.absl::optional_internal::optional_data_base.641" = type { %"class.absl::optional_internal::optional_data_dtor_base.642" }
%"class.absl::optional_internal::optional_data_dtor_base.642" = type { i8, %union.anon.643 }
%union.anon.643 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.649 }
%class.scoped_refptr.649 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.650" }
%"class.blink::HeapHashSet.650" = type { %"class.WTF::HashSet.653" }
%"class.WTF::HashSet.653" = type { %"class.WTF::HashTable.654" }
%"class.WTF::HashTable.654" = type <{ %"class.blink::WeakMember.656"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.656" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.657" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.658" }
%"class.blink::HeapHashMap.658" = type { %"class.WTF::HashMap.661" }
%"class.WTF::HashMap.661" = type { %"class.WTF::HashTable.662" }
%"class.WTF::HashTable.662" = type <{ %"struct.WTF::KeyValuePair.664"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.664" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.667" }
%"struct.std::__1::__compressed_pair_elem.667" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.668", %"class.base::WeakPtrFactory.673" }
%"class.WTF::HashMap.668" = type { %"class.WTF::HashTable.669" }
%"class.WTF::HashTable.669" = type <{ %"struct.WTF::KeyValuePair.672"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.672" = type opaque
%"class.base::WeakPtrFactory.673" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.677" }
%"class.blink::Member.677" = type { %"class.blink::MemberBase.678" }
%"class.blink::MemberBase.678" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1755" }
%"class.blink::WeakMember.1755" = type { %"class.blink::MemberBase.1756" }
%"class.blink::MemberBase.1756" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.1757", i64, %"class.std::__1::map.1758", i8*, i64, %"class.base::WeakPtrFactory.1767" }
%"class.base::RepeatingCallback.1757" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1758" = type { %"class.std::__1::__tree.1759" }
%"class.std::__1::__tree.1759" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1760", %"class.std::__1::__compressed_pair.1764" }
%"class.std::__1::__compressed_pair.1760" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.1764" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.base::WeakPtrFactory.1767" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.679" = type { %"class.WTF::HashSet.682" }
%"class.WTF::HashSet.682" = type { %"class.WTF::HashTable.683" }
%"class.WTF::HashTable.683" = type <{ %"class.blink::WeakMember.685"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.685" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.628", %"class.blink::Member.686", %"class.blink::Member.688", %"class.std::__1::unique_ptr.690", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.702" }
%"class.blink::Member.686" = type { %"class.blink::MemberBase.687" }
%"class.blink::MemberBase.687" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.688" = type { %"class.blink::MemberBase.689" }
%"class.blink::MemberBase.689" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.690" = type { %"class.std::__1::__compressed_pair.691" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.693" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.blink::KURL"* }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.12 }
%"class.WTF::HashSet.702" = type { %"class.WTF::HashTable.703" }
%"class.WTF::HashTable.703" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.706" = type { %"class.blink::MemberBase.707" }
%"class.blink::MemberBase.707" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1480", %"class.blink::Member.628", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1485", i8, i32, %"class.blink::Color", %"class.absl::optional.1487", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1492", %"class.blink::Member.1494", %"class.blink::Member.1494", %"class.std::__1::unique_ptr.1497", i32, [4 x i8], %"class.WTF::HashSet.1500", %"class.blink::Member.1507", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1509", %"class.blink::HeapHashSet.1516", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1524", i8, %"class.blink::Member.1530", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1542", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1556", i8, %"class.std::__1::unique_ptr.1562", %"class.std::__1::unique_ptr.1678", %"class.WTF::Vector.1684", i32, %class.scoped_refptr.1689, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1690", %"class.blink::Member.1692", %"class.blink::Member.1694", %"class.blink::HeapHashSet.1696", %"class.blink::HeapHashSet.1703", %"class.std::__1::unique_ptr.1710", %"class.std::__1::unique_ptr.1717", %"class.WTF::Vector.1230" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1480" = type { %"class.WTF::HashTable.1481" }
%"class.WTF::HashTable.1481" = type <{ %class.scoped_refptr.1484*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1484 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1485" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1486", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1260, %"class.base::WeakPtrFactory.1261" }
%class.scoped_refptr.1260 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.1261" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1486" = type { %"class.blink::MemberBase.707" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1487" = type { %"class.absl::optional_internal::optional_data.1488" }
%"class.absl::optional_internal::optional_data.1488" = type { %"class.absl::optional_internal::optional_data_base.1489" }
%"class.absl::optional_internal::optional_data_base.1489" = type { %"class.absl::optional_internal::optional_data_dtor_base.1490" }
%"class.absl::optional_internal::optional_data_dtor_base.1490" = type { i8, %union.anon.1491 }
%union.anon.1491 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1492" = type { %"class.blink::MemberBase.1493" }
%"class.blink::MemberBase.1493" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1494" = type { %"class.blink::MemberBase.1495" }
%"class.blink::MemberBase.1495" = type { %"class.blink::HeapHashSet.1496"* }
%"class.blink::HeapHashSet.1496" = type opaque
%"class.std::__1::unique_ptr.1497" = type { %"class.std::__1::__compressed_pair.1498" }
%"class.std::__1::__compressed_pair.1498" = type { %"struct.std::__1::__compressed_pair_elem.1499" }
%"struct.std::__1::__compressed_pair_elem.1499" = type { %"class.WTF::HashSet.1500"* }
%"class.WTF::HashSet.1500" = type { %"class.WTF::HashTable.1501" }
%"class.WTF::HashTable.1501" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1507" = type { %"class.blink::MemberBase.1508" }
%"class.blink::MemberBase.1508" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1509" = type { %"class.WTF::HashSet.1512" }
%"class.WTF::HashSet.1512" = type { %"class.WTF::HashTable.1513" }
%"class.WTF::HashTable.1513" = type <{ %"class.blink::Member.1515"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1515" = type opaque
%"class.blink::HeapHashSet.1516" = type { %"class.WTF::HashSet.1519" }
%"class.WTF::HashSet.1519" = type { %"class.WTF::HashTable.1520" }
%"class.WTF::HashTable.1520" = type <{ %"class.blink::Member.1522"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1522" = type { %"class.blink::MemberBase.1523" }
%"class.blink::MemberBase.1523" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1524" = type { %"class.std::__1::__compressed_pair.1525" }
%"class.std::__1::__compressed_pair.1525" = type { %"struct.std::__1::__compressed_pair_elem.1526" }
%"struct.std::__1::__compressed_pair_elem.1526" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1530" = type { %"class.blink::MemberBase.1531" }
%"class.blink::MemberBase.1531" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1534", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"struct.WTF::KeyValuePair.1537"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1537" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1538", i32, i32 }
%"class.WTF::Vector.1538" = type { %"class.WTF::VectorBuffer.1539" }
%"class.WTF::VectorBuffer.1539" = type { %"class.WTF::VectorBufferBase.1540" }
%"class.WTF::VectorBufferBase.1540" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1542" = type { %"class.WTF::LinkedHashSet.1545" }
%"class.WTF::LinkedHashSet.1545" = type { %"class.WTF::HashMap.1546", %"class.WTF::VectorBackedLinkedList.1550" }
%"class.WTF::HashMap.1546" = type { %"class.WTF::HashTable.1547" }
%"class.WTF::HashTable.1547" = type <{ %"struct.WTF::KeyValuePair.1549"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1549" = type opaque
%"class.WTF::VectorBackedLinkedList.1550" = type { %"class.WTF::Vector.1551", i32, i32 }
%"class.WTF::Vector.1551" = type { %"class.WTF::VectorBuffer.1552" }
%"class.WTF::VectorBuffer.1552" = type { %"class.WTF::VectorBufferBase.1553" }
%"class.WTF::VectorBufferBase.1553" = type { %"class.WTF::VectorBackedLinkedListNode.1554"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1554" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1556" = type { %"class.std::__1::__compressed_pair.1557" }
%"class.std::__1::__compressed_pair.1557" = type { %"struct.std::__1::__compressed_pair_elem.1558" }
%"struct.std::__1::__compressed_pair_elem.1558" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1562" = type { %"class.std::__1::__compressed_pair.1563" }
%"class.std::__1::__compressed_pair.1563" = type { %"struct.std::__1::__compressed_pair_elem.1564" }
%"struct.std::__1::__compressed_pair_elem.1564" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1565, %class.scoped_refptr.1565, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1655", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1660", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1565 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1566", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1573" }
%"class.WTF::RefCounted.1566" = type { %"class.base::RefCounted.1567" }
%"class.base::RefCounted.1567" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1568", i32, [4 x i8] }>
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1573" = type { %"class.WTF::VectorBuffer.1574" }
%"class.WTF::VectorBuffer.1574" = type { %"class.WTF::VectorBufferBase.1575" }
%"class.WTF::VectorBufferBase.1575" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1579", %"class.std::__1::unique_ptr.1628", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1576, %class.scoped_refptr.1577, %class.scoped_refptr.1578 }
%class.scoped_refptr.1576 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1592", i8, i8, %class.scoped_refptr.1576, i32, i32 }
%"class.WTF::RefCounted.1592" = type { %"class.base::RefCounted.1593" }
%"class.base::RefCounted.1593" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1577 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1746" }
%"class.blink::PaintPropertyNode.1746" = type { %"class.WTF::RefCounted.1747", i8, i8, %class.scoped_refptr.1577, i32, i32 }
%"class.WTF::RefCounted.1747" = type { %"class.base::RefCounted.1748" }
%"class.base::RefCounted.1748" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1578 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1743" }
%"class.blink::PaintPropertyNode.1743" = type { %"class.WTF::RefCounted.1744", i8, i8, %class.scoped_refptr.1578, i32, i32 }
%"class.WTF::RefCounted.1744" = type { %"class.base::RefCounted.1745" }
%"class.base::RefCounted.1745" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1579" = type { %"class.std::__1::__compressed_pair.1580" }
%"class.std::__1::__compressed_pair.1580" = type { %"struct.std::__1::__compressed_pair_elem.1581" }
%"struct.std::__1::__compressed_pair_elem.1581" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1582", %"class.WTF::Vector.1587", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1582" = type { %"class.WTF::VectorBuffer.1583" }
%"class.WTF::VectorBuffer.1583" = type { %"class.WTF::VectorBufferBase.1584" }
%"class.WTF::VectorBufferBase.1584" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1587" = type { %"class.WTF::VectorBuffer.1588" }
%"class.WTF::VectorBuffer.1588" = type { %"class.WTF::VectorBufferBase.1589" }
%"class.WTF::VectorBufferBase.1589" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1607" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1600, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1601", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1594" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1594" = type { %"class.std::__1::__compressed_pair.1595" }
%"class.std::__1::__compressed_pair.1595" = type { %"struct.std::__1::__compressed_pair_elem.1596" }
%"struct.std::__1::__compressed_pair_elem.1596" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1600 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1728", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1728" = type { %"class.WTF::RefCounted.1729", i8, i8, %class.scoped_refptr.1600, i32, i32 }
%"class.WTF::RefCounted.1729" = type { %"class.base::RefCounted.1730" }
%"class.base::RefCounted.1730" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1731" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1731" = type { %"class.absl::optional_internal::optional_data.1732" }
%"class.absl::optional_internal::optional_data.1732" = type { %"class.absl::optional_internal::optional_data_base.1733" }
%"class.absl::optional_internal::optional_data_base.1733" = type { %"class.absl::optional_internal::optional_data_dtor_base.1734" }
%"class.absl::optional_internal::optional_data_dtor_base.1734" = type { i8, %union.anon.1735 }
%union.anon.1735 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1736", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1736" = type { %"class.std::__1::__vector_base.1737" }
%"class.std::__1::__vector_base.1737" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1738" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1738" = type { %"struct.std::__1::__compressed_pair_elem.1739" }
%"struct.std::__1::__compressed_pair_elem.1739" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1601" = type { %"class.std::__1::__compressed_pair.1602" }
%"class.std::__1::__compressed_pair.1602" = type { %"struct.std::__1::__compressed_pair_elem.1603" }
%"struct.std::__1::__compressed_pair_elem.1603" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1607" = type { %"class.std::__1::__compressed_pair.1608" }
%"class.std::__1::__compressed_pair.1608" = type { %"struct.std::__1::__compressed_pair_elem.1609" }
%"struct.std::__1::__compressed_pair_elem.1609" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1610", %"class.std::__1::unique_ptr.1616", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1610" = type { %"class.std::__1::__compressed_pair.1611" }
%"class.std::__1::__compressed_pair.1611" = type { %"struct.std::__1::__compressed_pair_elem.1612" }
%"struct.std::__1::__compressed_pair_elem.1612" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1616" = type { %"class.std::__1::__compressed_pair.1617" }
%"class.std::__1::__compressed_pair.1617" = type { %"struct.std::__1::__compressed_pair_elem.1618" }
%"struct.std::__1::__compressed_pair_elem.1618" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1628" = type { %"class.std::__1::__compressed_pair.1629" }
%"class.std::__1::__compressed_pair.1629" = type { %"struct.std::__1::__compressed_pair_elem.1630" }
%"struct.std::__1::__compressed_pair_elem.1630" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1631", %"class.absl::optional.1631" }
%"class.absl::optional.1631" = type { %"class.absl::optional_internal::optional_data.1632" }
%"class.absl::optional_internal::optional_data.1632" = type { %"class.absl::optional_internal::optional_data_base.1633" }
%"class.absl::optional_internal::optional_data_base.1633" = type { %"class.absl::optional_internal::optional_data_dtor_base.1634" }
%"class.absl::optional_internal::optional_data_dtor_base.1634" = type { i8, [3 x i8], %union.anon.1635 }
%union.anon.1635 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1573"*, %"class.absl::optional.1641", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1641" = type { %"class.absl::optional_internal::optional_data.1642" }
%"class.absl::optional_internal::optional_data.1642" = type { %"class.absl::optional_internal::optional_data_base.1643" }
%"class.absl::optional_internal::optional_data_base.1643" = type { %"class.absl::optional_internal::optional_data_dtor_base.1644" }
%"class.absl::optional_internal::optional_data_dtor_base.1644" = type { i8, %union.anon.1645 }
%union.anon.1645 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1646", %"class.WTF::Vector.1650" }
%"class.WTF::Vector.1646" = type { %"class.WTF::VectorBuffer.1647" }
%"class.WTF::VectorBuffer.1647" = type { %"class.WTF::VectorBufferBase.481", [128 x i8] }
%"class.WTF::VectorBufferBase.481" = type { i32*, i32, i32 }
%"class.WTF::Vector.1650" = type { %"class.WTF::VectorBuffer.1651" }
%"class.WTF::VectorBuffer.1651" = type { %"class.WTF::VectorBufferBase.1652", [128 x i8] }
%"class.WTF::VectorBufferBase.1652" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1655" = type { %"class.WTF::VectorBuffer.1656" }
%"class.WTF::VectorBuffer.1656" = type { %"class.WTF::VectorBufferBase.1657" }
%"class.WTF::VectorBufferBase.1657" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1660" = type { %"class.WTF::HashTable.1661" }
%"class.WTF::HashTable.1661" = type <{ %"struct.WTF::KeyValuePair.1664"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1664" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1665", %"class.WTF::Vector.1670" }
%"class.WTF::HashMap.1665" = type { %"class.WTF::HashTable.1666" }
%"class.WTF::HashTable.1666" = type <{ %"struct.WTF::KeyValuePair.1669"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1669" = type opaque
%"class.WTF::Vector.1670" = type { %"class.WTF::VectorBuffer.1671" }
%"class.WTF::VectorBuffer.1671" = type { %"class.WTF::VectorBufferBase.1672" }
%"class.WTF::VectorBufferBase.1672" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1678" = type { %"class.std::__1::__compressed_pair.1679" }
%"class.std::__1::__compressed_pair.1679" = type { %"struct.std::__1::__compressed_pair_elem.1680" }
%"struct.std::__1::__compressed_pair_elem.1680" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1684" = type { %"class.WTF::VectorBuffer.1685" }
%"class.WTF::VectorBuffer.1685" = type { %"class.WTF::VectorBufferBase.1686" }
%"class.WTF::VectorBufferBase.1686" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1689 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1690" = type { %"class.blink::MemberBase.1691" }
%"class.blink::MemberBase.1691" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1692" = type { %"class.blink::MemberBase.1693" }
%"class.blink::MemberBase.1693" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1694" = type { %"class.blink::MemberBase.1695" }
%"class.blink::MemberBase.1695" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1696" = type { %"class.WTF::HashSet.1699" }
%"class.WTF::HashSet.1699" = type { %"class.WTF::HashTable.1700" }
%"class.WTF::HashTable.1700" = type <{ %"class.blink::WeakMember.1702"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1702" = type opaque
%"class.blink::HeapHashSet.1703" = type { %"class.WTF::HashSet.1706" }
%"class.WTF::HashSet.1706" = type { %"class.WTF::HashTable.1707" }
%"class.WTF::HashTable.1707" = type <{ %"class.blink::WeakMember.1709"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1709" = type opaque
%"class.std::__1::unique_ptr.1710" = type { %"class.std::__1::__compressed_pair.1711" }
%"class.std::__1::__compressed_pair.1711" = type { %"struct.std::__1::__compressed_pair_elem.1712" }
%"struct.std::__1::__compressed_pair_elem.1712" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1713" }
%"class.base::time_internal::TimeBase.1713" = type { i64 }
%"class.std::__1::unique_ptr.1717" = type { %"class.std::__1::__compressed_pair.1718" }
%"class.std::__1::__compressed_pair.1718" = type { %"struct.std::__1::__compressed_pair_elem.1719" }
%"struct.std::__1::__compressed_pair_elem.1719" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1720", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1720" = type { %"class.absl::optional_internal::optional_data.1721" }
%"class.absl::optional_internal::optional_data.1721" = type { %"class.absl::optional_internal::optional_data_base.1722" }
%"class.absl::optional_internal::optional_data_base.1722" = type { %"class.absl::optional_internal::optional_data_dtor_base.1723" }
%"class.absl::optional_internal::optional_data_dtor_base.1723" = type { i8, %union.anon.1724 }
%union.anon.1724 = type { %"class.base::Time" }
%"class.WTF::Vector.1230" = type { %"class.WTF::VectorBuffer.1231" }
%"class.WTF::VectorBuffer.1231" = type { %"class.WTF::VectorBufferBase.1232" }
%"class.WTF::VectorBufferBase.1232" = type { %"class.base::OnceCallback.142"*, i32, i32 }
%"class.blink::Member.708" = type { %"class.blink::MemberBase.709" }
%"class.blink::MemberBase.709" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.721" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.710", %"class.blink::Member.710" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.710", %"class.blink::Member.712", %"class.blink::Member.710", %"class.blink::Member.710", %"class.blink::Member.714" }
%"class.blink::Member.712" = type { %"class.blink::MemberBase.713" }
%"class.blink::MemberBase.713" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1142", %"class.blink::Member.1144", %"class.blink::Member.712", %"class.blink::Member.1146", %"class.blink::Member.1146", %"class.blink::Member.1168", %"class.blink::Member.1170", %"class.blink::Member.1172", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1177", %"class.blink::HeapVector.1179" }
%"class.blink::Member.1142" = type { %"class.blink::MemberBase.1143" }
%"class.blink::MemberBase.1143" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.1144" = type { %"class.blink::MemberBase.1145" }
%"class.blink::MemberBase.1145" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1222", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1230", %"class.WTF::Vector.1230", i8, i32, %"class.blink::Member.1235", %"class.blink::Member", %"class.blink::Member.1237", %"class.blink::Member.1239", %"class.blink::Member.1241", %"class.blink::Member.1243", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1245", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1251", %"class.blink::Member.1253", %"class.blink::Member.1185", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1255", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.1161", %"class.blink::Member.708", %"class.blink::Member.1263", %"class.blink::Member.708", %"class.blink::Member.708", %"class.blink::Member.708", %"class.blink::UserActionElementSet", %"class.blink::Member.1272", double, double, i64, i64, %"class.blink::HeapHashSet.1274", %"class.blink::HeapHashSet.1281", i16, i8, %"class.blink::Member.1288", %"class.blink::Member.1290", %"class.blink::Member.1292", %"class.blink::Member.1294", %"class.blink::TextLinkColors", %"class.blink::Member.1296", i8, [7 x i8], %"class.blink::HeapHashMap.1298", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.708", %"class.WTF::Vector.1305", %"class.blink::Member.1310", %"class.blink::Member.1314", i8, %"class.blink::Member.708", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1316", %"class.blink::HeapVector.1318", %"class.std::__1::unique_ptr.1326", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1332", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1345", %"class.WTF::Vector.1347", i8, i8, %"class.std::__1::unique_ptr.1352", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.1161", %"class.blink::HeapVector.1358", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1366", i8, i32, %"class.blink::Member.1368", %"class.blink::Member.1370", %"class.blink::Member.1372", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1374", %"class.WTF::HashMap.1376", %"class.blink::Member.1381", %"class.blink::Member.1383", %"class.blink::Member.1385", %"class.blink::Member.1387", %"class.blink::Member.1144", %"class.blink::Member.1144", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1389", i8, i32, %"class.blink::Member.1396", %"class.blink::Member.1398", i32, %"class.blink::Member.1400", %"class.blink::Member.1402", %"class.blink::Member.1404", %"class.std::__1::unique_ptr.1406", i64, %"class.std::__1::unique_ptr.1412", i32, i32, %"class.blink::Member.1418", %"class.blink::Member.1420", %"class.blink::Member.1422", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1424", %"class.WTF::Vector.972", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1426", %"class.blink::Member.1433", %"class.std::__1::unique_ptr.1435", %"class.blink::Member.1441", i8, i8, %"class.WTF::String", %"class.blink::Member.1443", i8, [7 x i8], %"class.blink::HeapHashMap.1445", %"class.blink::HeapObserverSet.1452", %"class.blink::Member.1460", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1462", i32, i8, i8, %"class.blink::WeakMember.1464", %"class.blink::Member.1465" }
%"class.blink::Supplementable.1222" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1223" }
%"class.blink::HeapHashMap.1223" = type { %"class.WTF::HashMap.1226" }
%"class.WTF::HashMap.1226" = type { %"class.WTF::HashTable.1227" }
%"class.WTF::HashTable.1227" = type <{ %"struct.WTF::KeyValuePair.1229"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1229" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1235" = type { %"class.blink::MemberBase.1236" }
%"class.blink::MemberBase.1236" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1237" = type { %"class.blink::MemberBase.1238" }
%"class.blink::MemberBase.1238" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1239" = type { %"class.blink::MemberBase.1240" }
%"class.blink::MemberBase.1240" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1241" = type { %"class.blink::MemberBase.1242" }
%"class.blink::MemberBase.1242" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1243" = type { %"class.blink::MemberBase.1244" }
%"class.blink::MemberBase.1244" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1245" = type { %"class.std::__1::__compressed_pair.1246" }
%"class.std::__1::__compressed_pair.1246" = type { %"struct.std::__1::__compressed_pair_elem.1247" }
%"struct.std::__1::__compressed_pair_elem.1247" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1251" = type { %"class.blink::MemberBase.1252" }
%"class.blink::MemberBase.1252" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1253" = type { %"class.blink::MemberBase.1254" }
%"class.blink::MemberBase.1254" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.1185" = type { %"class.blink::MemberBase.1186" }
%"class.blink::MemberBase.1186" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.1187", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.1189, %"class.WTF::Vector.1190", %"class.WTF::Vector.1190", %"class.blink::Member.710", %"class.blink::Member.1195", %"class.blink::HeapHashSet.1199", %"class.blink::Member.1144", %"class.WTF::HashSet.1206", %"class.WTF::TextPosition", %"class.blink::Member.1210", %"class.blink::HeapVector.1212", %"class.blink::Member.1219" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.1187" = type { %"class.blink::MemberBase.1188" }
%"class.blink::MemberBase.1188" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.1189 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.1190" = type { %"class.WTF::VectorBuffer.1191" }
%"class.WTF::VectorBuffer.1191" = type { %"class.WTF::VectorBufferBase.1192" }
%"class.WTF::VectorBufferBase.1192" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.1195" = type { %"class.blink::MemberBase.1196" }
%"class.blink::MemberBase.1196" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.1197" }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1198" }
%"class.blink::MemberBase.1198" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.1199" = type { %"class.WTF::HashSet.1202" }
%"class.WTF::HashSet.1202" = type { %"class.WTF::HashTable.1203" }
%"class.WTF::HashTable.1203" = type <{ %"class.blink::WeakMember.1205"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1205" = type { %"class.blink::MemberBase.713" }
%"class.WTF::HashSet.1206" = type { %"class.WTF::HashTable.1207" }
%"class.WTF::HashTable.1207" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.1210" = type { %"class.blink::MemberBase.1211" }
%"class.blink::MemberBase.1211" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.1212" = type { %"class.WTF::Vector.1215" }
%"class.WTF::Vector.1215" = type { %"class.WTF::VectorBuffer.1216" }
%"class.WTF::VectorBuffer.1216" = type { %"class.WTF::VectorBufferBase.1217" }
%"class.WTF::VectorBufferBase.1217" = type { %"class.blink::Member.1195"*, i32, i32 }
%"class.blink::Member.1219" = type { %"class.blink::MemberBase.1220" }
%"class.blink::MemberBase.1220" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.1255" = type { %"class.WTF::VectorBuffer.1256" }
%"class.WTF::VectorBuffer.1256" = type { %"class.WTF::VectorBufferBase.1257" }
%"class.WTF::VectorBufferBase.1257" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.453 }
%"class.blink::Member.1263" = type { %"class.blink::MemberBase.1264" }
%"class.blink::MemberBase.1264" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.1144", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.710", %"class.blink::Member.710", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1265" }
%"class.blink::HeapHashMap.1265" = type { %"class.WTF::HashMap.1268" }
%"class.WTF::HashMap.1268" = type { %"class.WTF::HashTable.1269" }
%"class.WTF::HashTable.1269" = type <{ %"struct.WTF::KeyValuePair.1271"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1271" = type opaque
%"class.blink::Member.1272" = type { %"class.blink::MemberBase.1273" }
%"class.blink::MemberBase.1273" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1274" = type { %"class.WTF::HashSet.1277" }
%"class.WTF::HashSet.1277" = type { %"class.WTF::HashTable.1278" }
%"class.WTF::HashTable.1278" = type <{ %"class.blink::WeakMember.1280"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1280" = type opaque
%"class.blink::HeapHashSet.1281" = type { %"class.WTF::HashSet.1284" }
%"class.WTF::HashSet.1284" = type { %"class.WTF::HashTable.1285" }
%"class.WTF::HashTable.1285" = type <{ %"class.blink::WeakMember.1287"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1287" = type opaque
%"class.blink::Member.1288" = type { %"class.blink::MemberBase.1289" }
%"class.blink::MemberBase.1289" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1290" = type { %"class.blink::MemberBase.1291" }
%"class.blink::MemberBase.1291" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1292" = type { %"class.blink::MemberBase.1293" }
%"class.blink::MemberBase.1293" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.712", %"class.blink::HeapVector.1179" }
%"class.blink::Member.1294" = type { %"class.blink::MemberBase.1295" }
%"class.blink::MemberBase.1295" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1296" = type { %"class.blink::MemberBase.1297" }
%"class.blink::MemberBase.1297" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1298" = type { %"class.WTF::HashMap.1301" }
%"class.WTF::HashMap.1301" = type { %"class.WTF::HashTable.1302" }
%"class.WTF::HashTable.1302" = type <{ %"struct.WTF::KeyValuePair.1304"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1304" = type opaque
%"class.WTF::Vector.1305" = type { %"class.WTF::VectorBuffer.1306" }
%"class.WTF::VectorBuffer.1306" = type { %"class.WTF::VectorBufferBase.1307" }
%"class.WTF::VectorBufferBase.1307" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1310" = type { %"class.blink::MemberBase.1311" }
%"class.blink::MemberBase.1311" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1314" = type { %"class.blink::MemberBase.1315" }
%"class.blink::MemberBase.1315" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1316" = type { %"class.blink::MemberBase.1317" }
%"class.blink::MemberBase.1317" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1318" = type { %"class.WTF::Vector.1321" }
%"class.WTF::Vector.1321" = type { %"class.WTF::VectorBuffer.1322" }
%"class.WTF::VectorBuffer.1322" = type { %"class.WTF::VectorBufferBase.1323" }
%"class.WTF::VectorBufferBase.1323" = type { %"class.blink::Member.1324"*, i32, i32 }
%"class.blink::Member.1324" = type opaque
%"class.std::__1::unique_ptr.1326" = type { %"class.std::__1::__compressed_pair.1327" }
%"class.std::__1::__compressed_pair.1327" = type { %"struct.std::__1::__compressed_pair_elem.1328" }
%"struct.std::__1::__compressed_pair_elem.1328" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1332" = type { %"class.WTF::HashSet.1335" }
%"class.WTF::HashSet.1335" = type { %"class.WTF::HashTable.1336" }
%"class.WTF::HashTable.1336" = type <{ %"class.blink::WeakMember.1338"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1338" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1339", i32, [4 x i8] }>
%"class.WTF::Vector.1339" = type { %"class.WTF::VectorBuffer.1340" }
%"class.WTF::VectorBuffer.1340" = type { %"class.WTF::VectorBufferBase.1341" }
%"class.WTF::VectorBufferBase.1341" = type { %"struct.std::__1::pair.1342"*, i32, i32 }
%"struct.std::__1::pair.1342" = type opaque
%"class.blink::Member.1345" = type { %"class.blink::MemberBase.1346" }
%"class.blink::MemberBase.1346" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1347" = type { %"class.WTF::VectorBuffer.1348" }
%"class.WTF::VectorBuffer.1348" = type { %"class.WTF::VectorBufferBase.1349" }
%"class.WTF::VectorBufferBase.1349" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1352" = type { %"class.std::__1::__compressed_pair.1353" }
%"class.std::__1::__compressed_pair.1353" = type { %"struct.std::__1::__compressed_pair_elem.1354" }
%"struct.std::__1::__compressed_pair_elem.1354" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1161" = type { %"class.WTF::Vector.1164" }
%"class.WTF::Vector.1164" = type { %"class.WTF::VectorBuffer.1165" }
%"class.WTF::VectorBuffer.1165" = type { %"class.WTF::VectorBufferBase.1166" }
%"class.WTF::VectorBufferBase.1166" = type { %"class.blink::Member.708"*, i32, i32 }
%"class.blink::HeapVector.1358" = type { %"class.WTF::Vector.1361" }
%"class.WTF::Vector.1361" = type { %"class.WTF::VectorBuffer.1362" }
%"class.WTF::VectorBuffer.1362" = type { %"class.WTF::VectorBufferBase.1363" }
%"class.WTF::VectorBufferBase.1363" = type { %"class.blink::Member.1364"*, i32, i32 }
%"class.blink::Member.1364" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.1144" }
%"class.blink::Member.1366" = type { %"class.blink::MemberBase.1367" }
%"class.blink::MemberBase.1367" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1368" = type { %"class.blink::MemberBase.1369" }
%"class.blink::MemberBase.1369" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1370" = type { %"class.blink::MemberBase.1371" }
%"class.blink::MemberBase.1371" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1372" = type { %"class.blink::MemberBase.1373" }
%"class.blink::MemberBase.1373" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1374" = type { %"class.blink::MemberBase.1375" }
%"class.blink::MemberBase.1375" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1376" = type { %"class.WTF::HashTable.1377" }
%"class.WTF::HashTable.1377" = type <{ %"struct.WTF::KeyValuePair.1380"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1380" = type opaque
%"class.blink::Member.1381" = type { %"class.blink::MemberBase.1382" }
%"class.blink::MemberBase.1382" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1383" = type { %"class.blink::MemberBase.1384" }
%"class.blink::MemberBase.1384" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1385" = type { %"class.blink::MemberBase.1386" }
%"class.blink::MemberBase.1386" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1387" = type { %"class.blink::MemberBase.1388" }
%"class.blink::MemberBase.1388" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1262", { i64, i64 } }
%"class.blink::WeakMember.1262" = type { %"class.blink::MemberBase.1145" }
%"class.blink::HeapHashSet.1389" = type { %"class.WTF::HashSet.1392" }
%"class.WTF::HashSet.1392" = type { %"class.WTF::HashTable.1393" }
%"class.WTF::HashTable.1393" = type <{ %"class.blink::Member.1395"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1395" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1400" = type { %"class.blink::MemberBase.1401" }
%"class.blink::MemberBase.1401" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1402" = type { %"class.blink::MemberBase.1403" }
%"class.blink::MemberBase.1403" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1404" = type { %"class.blink::MemberBase.1405" }
%"class.blink::MemberBase.1405" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1406" = type { %"class.std::__1::__compressed_pair.1407" }
%"class.std::__1::__compressed_pair.1407" = type { %"struct.std::__1::__compressed_pair_elem.1408" }
%"struct.std::__1::__compressed_pair_elem.1408" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1412" = type { %"class.std::__1::__compressed_pair.1413" }
%"class.std::__1::__compressed_pair.1413" = type { %"struct.std::__1::__compressed_pair_elem.1414" }
%"struct.std::__1::__compressed_pair_elem.1414" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1418" = type { %"class.blink::MemberBase.1419" }
%"class.blink::MemberBase.1419" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.972" = type { %"class.WTF::VectorBuffer.973" }
%"class.WTF::VectorBuffer.973" = type { %"class.WTF::VectorBufferBase.974" }
%"class.WTF::VectorBufferBase.974" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1426" = type { %"class.WTF::HashMap.1429" }
%"class.WTF::HashMap.1429" = type { %"class.WTF::HashTable.1430" }
%"class.WTF::HashTable.1430" = type <{ %"struct.WTF::KeyValuePair.1432"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1432" = type opaque
%"class.blink::Member.1433" = type { %"class.blink::MemberBase.1434" }
%"class.blink::MemberBase.1434" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1435" = type { %"class.std::__1::__compressed_pair.1436" }
%"class.std::__1::__compressed_pair.1436" = type { %"struct.std::__1::__compressed_pair_elem.1437" }
%"struct.std::__1::__compressed_pair_elem.1437" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1441" = type { %"class.blink::MemberBase.1442" }
%"class.blink::MemberBase.1442" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1443" = type { %"class.blink::MemberBase.1444" }
%"class.blink::MemberBase.1444" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1445" = type { %"class.WTF::HashMap.1448" }
%"class.WTF::HashMap.1448" = type { %"class.WTF::HashTable.1449" }
%"class.WTF::HashTable.1449" = type <{ %"struct.WTF::KeyValuePair.1451"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1451" = type opaque
%"class.blink::HeapObserverSet.1452" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1453" }
%"class.blink::HeapHashSet.1453" = type { %"class.WTF::HashSet.1456" }
%"class.WTF::HashSet.1456" = type { %"class.WTF::HashTable.1457" }
%"class.WTF::HashTable.1457" = type <{ %"class.blink::WeakMember.1459"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1459" = type opaque
%"class.blink::Member.1460" = type { %"class.blink::MemberBase.1461" }
%"class.blink::MemberBase.1461" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1462" = type { %"class.blink::MemberBase.1463" }
%"class.blink::MemberBase.1463" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.1144", %"class.blink::HeapHashSet.1469", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1476", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1469" = type { %"class.WTF::HashSet.1472" }
%"class.WTF::HashSet.1472" = type { %"class.WTF::HashTable.1473" }
%"class.WTF::HashTable.1473" = type <{ %"class.blink::Member.1475"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1475" = type opaque
%"class.blink::HeapTaskRunnerTimer.1476" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1477", { i64, i64 } }
%"class.blink::WeakMember.1477" = type { %"class.blink::MemberBase.1463" }
%"class.blink::WeakMember.1464" = type { %"class.blink::MemberBase.711" }
%"class.blink::MemberBase.711" = type { %"class.blink::Node"* }
%"class.blink::Member.1465" = type { %"class.blink::MemberBase.1466" }
%"class.blink::MemberBase.1466" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.1146" = type { %"class.blink::MemberBase.1147" }
%"class.blink::MemberBase.1147" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1150" }
%"class.blink::HeapHashMap.1150" = type { %"class.WTF::HashMap.1153" }
%"class.WTF::HashMap.1153" = type { %"class.WTF::HashTable.1154" }
%"class.WTF::HashTable.1154" = type <{ %"struct.WTF::KeyValuePair.1156"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1156" = type { %"class.WTF::AtomicString", %"class.blink::Member.1157" }
%"class.blink::Member.1157" = type { %"class.blink::MemberBase.1158" }
%"class.blink::MemberBase.1158" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.708", i32, %"class.blink::HeapVector.1161" }
%"class.blink::Member.1168" = type { %"class.blink::MemberBase.1169" }
%"class.blink::MemberBase.1169" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1170" = type { %"class.blink::MemberBase.1171" }
%"class.blink::MemberBase.1171" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1173" }
%"class.blink::MemberBase.1173" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1174" }
%"class.blink::Member.1174" = type { %"class.blink::MemberBase.1175" }
%"class.blink::MemberBase.1175" = type { %"class.blink::HeapHashMap.1176"* }
%"class.blink::HeapHashMap.1176" = type opaque
%"class.blink::Member.1177" = type { %"class.blink::MemberBase.1178" }
%"class.blink::MemberBase.1178" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1179" = type { %"class.WTF::Vector.1182" }
%"class.WTF::Vector.1182" = type { %"class.WTF::VectorBuffer.1183" }
%"class.WTF::VectorBuffer.1183" = type { %"class.WTF::VectorBufferBase.1184" }
%"class.WTF::VectorBufferBase.1184" = type { %"class.blink::Member.1185"*, i32, i32 }
%"class.blink::Member.714" = type { %"class.blink::MemberBase.715" }
%"class.blink::MemberBase.715" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.710" = type { %"class.blink::MemberBase.711" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.718 }
%class.scoped_refptr.718 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.719", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.719" = type { %"class.base::RefCounted.720" }
%"class.base::RefCounted.720" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.721" = type { %"class.blink::MemberBase.722" }
%"class.blink::MemberBase.722" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.725", %"class.blink::Member.727", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.725" = type { %"class.WTF::SingleThreadedBitField.726" }
%"class.WTF::SingleThreadedBitField.726" = type { i32 }
%"class.blink::Member.727" = type { %"class.blink::MemberBase.728" }
%"class.blink::MemberBase.728" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.729 }
%class.scoped_refptr.729 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.730", %"class.WTF::AtomicString", %"class.WTF::Vector.732" }
%"class.WTF::RefCounted.730" = type { %"class.base::RefCounted.731" }
%"class.base::RefCounted.731" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.732" = type { %"class.WTF::VectorBuffer.733" }
%"class.WTF::VectorBuffer.733" = type { %"class.WTF::VectorBufferBase.734", [32 x i8] }
%"class.WTF::VectorBufferBase.734" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.737" = type { %"class.blink::MemberBase.738" }
%"class.blink::MemberBase.738" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.739" = type { %"class.blink::MemberBase.740" }
%"class.blink::MemberBase.740" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.741" = type { %"class.blink::MemberBase.742" }
%"class.blink::MemberBase.742" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.743" = type { %"class.blink::MemberBase.744" }
%"class.blink::MemberBase.744" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.745" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.756", %"class.blink::HeapListHashSet.767", %"class.blink::HeapListHashSet.778", %"class.blink::HeapListHashSet.789", %"class.blink::HeapListHashSet.800", %"class.blink::HeapListHashSet.811", %"class.blink::HeapListHashSet.822", %"class.blink::HeapListHashSet.833", %"class.blink::HeapListHashSet.844", %"class.blink::HeapListHashSet.855", %"class.blink::HeapListHashSet.866", %"class.blink::HeapListHashSet.877", %"class.blink::HeapListHashSet.888", %"class.blink::HeapListHashSet.899", %"class.blink::HeapListHashSet.910", %"class.blink::HeapListHashSet.921", %"class.blink::HeapListHashSet.932", %"class.blink::HeapListHashSet.943", %"class.blink::HeapListHashSet.954" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.752", %"class.blink::Member.754", %"class.blink::Member.754", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.752" = type <{ %"class.blink::Member.754"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.754" = type { %"class.blink::MemberBase.755" }
%"class.blink::MemberBase.755" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.968", %"class.blink::Member.754", %"class.blink::Member.754" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.756" = type { %"class.WTF::ListHashSet.base.766", [7 x i8] }
%"class.WTF::ListHashSet.base.766" = type <{ %"class.WTF::HashTable.761", %"class.blink::Member.763", %"class.blink::Member.763", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.761" = type <{ %"class.blink::Member.763"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.763" = type { %"class.blink::MemberBase.764" }
%"class.blink::MemberBase.764" = type { %"class.blink::HeapListHashSetNode.765"* }
%"class.blink::HeapListHashSetNode.765" = type { %"class.blink::Member.1138", %"class.blink::Member.763", %"class.blink::Member.763" }
%"class.blink::Member.1138" = type { %"class.blink::MemberBase.1139" }
%"class.blink::MemberBase.1139" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.767" = type { %"class.WTF::ListHashSet.base.777", [7 x i8] }
%"class.WTF::ListHashSet.base.777" = type <{ %"class.WTF::HashTable.772", %"class.blink::Member.774", %"class.blink::Member.774", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.772" = type <{ %"class.blink::Member.774"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.774" = type { %"class.blink::MemberBase.775" }
%"class.blink::MemberBase.775" = type { %"class.blink::HeapListHashSetNode.776"* }
%"class.blink::HeapListHashSetNode.776" = type { %"class.blink::Member.1134", %"class.blink::Member.774", %"class.blink::Member.774" }
%"class.blink::Member.1134" = type { %"class.blink::MemberBase.1135" }
%"class.blink::MemberBase.1135" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.778" = type { %"class.WTF::ListHashSet.base.788", [7 x i8] }
%"class.WTF::ListHashSet.base.788" = type <{ %"class.WTF::HashTable.783", %"class.blink::Member.785", %"class.blink::Member.785", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.783" = type <{ %"class.blink::Member.785"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.785" = type { %"class.blink::MemberBase.786" }
%"class.blink::MemberBase.786" = type { %"class.blink::HeapListHashSetNode.787"* }
%"class.blink::HeapListHashSetNode.787" = type { %"class.blink::Member.1130", %"class.blink::Member.785", %"class.blink::Member.785" }
%"class.blink::Member.1130" = type { %"class.blink::MemberBase.1131" }
%"class.blink::MemberBase.1131" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.789" = type { %"class.WTF::ListHashSet.base.799", [7 x i8] }
%"class.WTF::ListHashSet.base.799" = type <{ %"class.WTF::HashTable.794", %"class.blink::Member.796", %"class.blink::Member.796", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.794" = type <{ %"class.blink::Member.796"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.796" = type { %"class.blink::MemberBase.797" }
%"class.blink::MemberBase.797" = type { %"class.blink::HeapListHashSetNode.798"* }
%"class.blink::HeapListHashSetNode.798" = type { %"class.blink::Member.1126", %"class.blink::Member.796", %"class.blink::Member.796" }
%"class.blink::Member.1126" = type { %"class.blink::MemberBase.1127" }
%"class.blink::MemberBase.1127" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.800" = type { %"class.WTF::ListHashSet.base.810", [7 x i8] }
%"class.WTF::ListHashSet.base.810" = type <{ %"class.WTF::HashTable.805", %"class.blink::Member.807", %"class.blink::Member.807", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.805" = type <{ %"class.blink::Member.807"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.807" = type { %"class.blink::MemberBase.808" }
%"class.blink::MemberBase.808" = type { %"class.blink::HeapListHashSetNode.809"* }
%"class.blink::HeapListHashSetNode.809" = type { %"class.blink::Member.1122", %"class.blink::Member.807", %"class.blink::Member.807" }
%"class.blink::Member.1122" = type { %"class.blink::MemberBase.1123" }
%"class.blink::MemberBase.1123" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.811" = type { %"class.WTF::ListHashSet.base.821", [7 x i8] }
%"class.WTF::ListHashSet.base.821" = type <{ %"class.WTF::HashTable.816", %"class.blink::Member.818", %"class.blink::Member.818", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.816" = type <{ %"class.blink::Member.818"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.818" = type { %"class.blink::MemberBase.819" }
%"class.blink::MemberBase.819" = type { %"class.blink::HeapListHashSetNode.820"* }
%"class.blink::HeapListHashSetNode.820" = type { %"class.blink::Member.1118", %"class.blink::Member.818", %"class.blink::Member.818" }
%"class.blink::Member.1118" = type { %"class.blink::MemberBase.1119" }
%"class.blink::MemberBase.1119" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.822" = type { %"class.WTF::ListHashSet.base.832", [7 x i8] }
%"class.WTF::ListHashSet.base.832" = type <{ %"class.WTF::HashTable.827", %"class.blink::Member.829", %"class.blink::Member.829", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.827" = type <{ %"class.blink::Member.829"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.829" = type { %"class.blink::MemberBase.830" }
%"class.blink::MemberBase.830" = type { %"class.blink::HeapListHashSetNode.831"* }
%"class.blink::HeapListHashSetNode.831" = type { %"class.blink::Member.1114", %"class.blink::Member.829", %"class.blink::Member.829" }
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.833" = type { %"class.WTF::ListHashSet.base.843", [7 x i8] }
%"class.WTF::ListHashSet.base.843" = type <{ %"class.WTF::HashTable.838", %"class.blink::Member.840", %"class.blink::Member.840", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.838" = type <{ %"class.blink::Member.840"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.840" = type { %"class.blink::MemberBase.841" }
%"class.blink::MemberBase.841" = type { %"class.blink::HeapListHashSetNode.842"* }
%"class.blink::HeapListHashSetNode.842" = type { %"class.blink::Member.1110", %"class.blink::Member.840", %"class.blink::Member.840" }
%"class.blink::Member.1110" = type { %"class.blink::MemberBase.1111" }
%"class.blink::MemberBase.1111" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.844" = type { %"class.WTF::ListHashSet.base.854", [7 x i8] }
%"class.WTF::ListHashSet.base.854" = type <{ %"class.WTF::HashTable.849", %"class.blink::Member.851", %"class.blink::Member.851", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.849" = type <{ %"class.blink::Member.851"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.851" = type { %"class.blink::MemberBase.852" }
%"class.blink::MemberBase.852" = type { %"class.blink::HeapListHashSetNode.853"* }
%"class.blink::HeapListHashSetNode.853" = type { %"class.blink::Member.1106", %"class.blink::Member.851", %"class.blink::Member.851" }
%"class.blink::Member.1106" = type { %"class.blink::MemberBase.1107" }
%"class.blink::MemberBase.1107" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.855" = type { %"class.WTF::ListHashSet.base.865", [7 x i8] }
%"class.WTF::ListHashSet.base.865" = type <{ %"class.WTF::HashTable.860", %"class.blink::Member.862", %"class.blink::Member.862", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.860" = type <{ %"class.blink::Member.862"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.862" = type { %"class.blink::MemberBase.863" }
%"class.blink::MemberBase.863" = type { %"class.blink::HeapListHashSetNode.864"* }
%"class.blink::HeapListHashSetNode.864" = type { %"class.blink::Member.986", %"class.blink::Member.862", %"class.blink::Member.862" }
%"class.blink::HeapListHashSet.866" = type { %"class.WTF::ListHashSet.base.876", [7 x i8] }
%"class.WTF::ListHashSet.base.876" = type <{ %"class.WTF::HashTable.871", %"class.blink::Member.873", %"class.blink::Member.873", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.871" = type <{ %"class.blink::Member.873"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.873" = type { %"class.blink::MemberBase.874" }
%"class.blink::MemberBase.874" = type { %"class.blink::HeapListHashSetNode.875"* }
%"class.blink::HeapListHashSetNode.875" = type { %"class.blink::Member.1100", %"class.blink::Member.873", %"class.blink::Member.873" }
%"class.blink::Member.1100" = type { %"class.blink::MemberBase.1101" }
%"class.blink::MemberBase.1101" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.877" = type { %"class.WTF::ListHashSet.base.887", [7 x i8] }
%"class.WTF::ListHashSet.base.887" = type <{ %"class.WTF::HashTable.882", %"class.blink::Member.884", %"class.blink::Member.884", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.882" = type <{ %"class.blink::Member.884"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.884" = type { %"class.blink::MemberBase.885" }
%"class.blink::MemberBase.885" = type { %"class.blink::HeapListHashSetNode.886"* }
%"class.blink::HeapListHashSetNode.886" = type { %"class.blink::Member.1096", %"class.blink::Member.884", %"class.blink::Member.884" }
%"class.blink::Member.1096" = type { %"class.blink::MemberBase.1097" }
%"class.blink::MemberBase.1097" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.888" = type { %"class.WTF::ListHashSet.base.898", [7 x i8] }
%"class.WTF::ListHashSet.base.898" = type <{ %"class.WTF::HashTable.893", %"class.blink::Member.895", %"class.blink::Member.895", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.893" = type <{ %"class.blink::Member.895"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.895" = type { %"class.blink::MemberBase.896" }
%"class.blink::MemberBase.896" = type { %"class.blink::HeapListHashSetNode.897"* }
%"class.blink::HeapListHashSetNode.897" = type { %"class.blink::Member.1092", %"class.blink::Member.895", %"class.blink::Member.895" }
%"class.blink::Member.1092" = type { %"class.blink::MemberBase.1093" }
%"class.blink::MemberBase.1093" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.899" = type { %"class.WTF::ListHashSet.base.909", [7 x i8] }
%"class.WTF::ListHashSet.base.909" = type <{ %"class.WTF::HashTable.904", %"class.blink::Member.906", %"class.blink::Member.906", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.904" = type <{ %"class.blink::Member.906"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.906" = type { %"class.blink::MemberBase.907" }
%"class.blink::MemberBase.907" = type { %"class.blink::HeapListHashSetNode.908"* }
%"class.blink::HeapListHashSetNode.908" = type { %"class.blink::Member.1088", %"class.blink::Member.906", %"class.blink::Member.906" }
%"class.blink::Member.1088" = type { %"class.blink::MemberBase.1089" }
%"class.blink::MemberBase.1089" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.910" = type { %"class.WTF::ListHashSet.base.920", [7 x i8] }
%"class.WTF::ListHashSet.base.920" = type <{ %"class.WTF::HashTable.915", %"class.blink::Member.917", %"class.blink::Member.917", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.915" = type <{ %"class.blink::Member.917"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::HeapListHashSetNode.919"* }
%"class.blink::HeapListHashSetNode.919" = type { %"class.blink::Member.1084", %"class.blink::Member.917", %"class.blink::Member.917" }
%"class.blink::Member.1084" = type { %"class.blink::MemberBase.1085" }
%"class.blink::MemberBase.1085" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.921" = type { %"class.WTF::ListHashSet.base.931", [7 x i8] }
%"class.WTF::ListHashSet.base.931" = type <{ %"class.WTF::HashTable.926", %"class.blink::Member.928", %"class.blink::Member.928", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.926" = type <{ %"class.blink::Member.928"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.928" = type { %"class.blink::MemberBase.929" }
%"class.blink::MemberBase.929" = type { %"class.blink::HeapListHashSetNode.930"* }
%"class.blink::HeapListHashSetNode.930" = type { %"class.blink::Member.1080", %"class.blink::Member.928", %"class.blink::Member.928" }
%"class.blink::Member.1080" = type { %"class.blink::MemberBase.1081" }
%"class.blink::MemberBase.1081" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.932" = type { %"class.WTF::ListHashSet.base.942", [7 x i8] }
%"class.WTF::ListHashSet.base.942" = type <{ %"class.WTF::HashTable.937", %"class.blink::Member.939", %"class.blink::Member.939", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.937" = type <{ %"class.blink::Member.939"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::HeapListHashSetNode.941"* }
%"class.blink::HeapListHashSetNode.941" = type { %"class.blink::Member.1076", %"class.blink::Member.939", %"class.blink::Member.939" }
%"class.blink::Member.1076" = type { %"class.blink::MemberBase.1077" }
%"class.blink::MemberBase.1077" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.943" = type { %"class.WTF::ListHashSet.base.953", [7 x i8] }
%"class.WTF::ListHashSet.base.953" = type <{ %"class.WTF::HashTable.948", %"class.blink::Member.950", %"class.blink::Member.950", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.948" = type <{ %"class.blink::Member.950"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.950" = type { %"class.blink::MemberBase.951" }
%"class.blink::MemberBase.951" = type { %"class.blink::HeapListHashSetNode.952"* }
%"class.blink::HeapListHashSetNode.952" = type { %"class.blink::Member.988", %"class.blink::Member.950", %"class.blink::Member.950" }
%"class.blink::HeapListHashSet.954" = type { %"class.WTF::ListHashSet.base.964", [7 x i8] }
%"class.WTF::ListHashSet.base.964" = type <{ %"class.WTF::HashTable.959", %"class.blink::Member.961", %"class.blink::Member.961", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.959" = type <{ %"class.blink::Member.961"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.961" = type { %"class.blink::MemberBase.962" }
%"class.blink::MemberBase.962" = type { %"class.blink::HeapListHashSetNode.963"* }
%"class.blink::HeapListHashSetNode.963" = type { %"class.blink::Member.966", %"class.blink::Member.961", %"class.blink::Member.961" }
%class.scoped_refptr.965 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.966" = type { %"class.blink::MemberBase.967" }
%"class.blink::MemberBase.967" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.968" = type { %"class.blink::MemberBase.969" }
%"class.blink::MemberBase.969" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.628", %"class.WTF::Vector.972", i32, [4 x i8], %"class.blink::HeapHashMap.977", i32, i8, [3 x i8] }>
%"class.blink::HeapHashMap.977" = type { %"class.WTF::HashMap.980" }
%"class.WTF::HashMap.980" = type { %"class.WTF::HashTable.981" }
%"class.WTF::HashTable.981" = type <{ %"struct.WTF::KeyValuePair.983"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.983" = type opaque
%"class.blink::Member.984" = type { %"class.blink::MemberBase.985" }
%"class.blink::MemberBase.985" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.986" = type { %"class.blink::MemberBase.987" }
%"class.blink::MemberBase.987" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.988" = type { %"class.blink::MemberBase.989" }
%"class.blink::MemberBase.989" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.990" = type { %"class.blink::MemberBase.991" }
%"class.blink::MemberBase.991" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.994" }
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1770" }
%"class.mojo::Remote.1770" = type { %"class.mojo::internal::InterfacePtrState.1771" }
%"class.mojo::internal::InterfacePtrState.1771" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1772" }
%"class.std::__1::unique_ptr.1772" = type { %"class.std::__1::__compressed_pair.1773" }
%"class.std::__1::__compressed_pair.1773" = type { %"struct.std::__1::__compressed_pair_elem.1774" }
%"struct.std::__1::__compressed_pair_elem.1774" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.996" = type { %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.998" }
%"struct.std::__1::__compressed_pair_elem.998" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.999, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.999 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.1000", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.1000" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1001" }
%"class.std::__1::vector.1001" = type { %"class.std::__1::__vector_base.1002" }
%"class.std::__1::__vector_base.1002" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.1003" }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.1004" }
%"struct.std::__1::__compressed_pair_elem.1004" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.1008, i8, [7 x i8] }>
%class.scoped_refptr.1008 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.1009", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.1009" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1010" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1017" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1018" = type { %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.644" = type { %"class.absl::optional_internal::optional_data.645" }
%"class.absl::optional_internal::optional_data.645" = type { %"class.absl::optional_internal::optional_data_base.646" }
%"class.absl::optional_internal::optional_data_base.646" = type { %"class.absl::optional_internal::optional_data_dtor_base.647" }
%"class.absl::optional_internal::optional_data_dtor_base.647" = type { i8, %union.anon.648 }
%union.anon.648 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.1024" = type { %"class.std::__1::__compressed_pair.1025" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.1026" }
%"struct.std::__1::__compressed_pair_elem.1026" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1030" }
%"class.blink::Member.1030" = type { %"class.blink::MemberBase.1031" }
%"class.blink::MemberBase.1031" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1780" }
%"class.mojo::AssociatedRemote.1780" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1781" }
%"class.mojo::internal::AssociatedInterfacePtrState.1781" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1782" }
%"class.std::__1::unique_ptr.1782" = type { %"class.std::__1::__compressed_pair.1783" }
%"class.std::__1::__compressed_pair.1783" = type { %"struct.std::__1::__compressed_pair_elem.1784" }
%"struct.std::__1::__compressed_pair_elem.1784" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1032" = type { %"class.blink::Member.1033" }
%"class.blink::Member.1033" = type { %"class.blink::MemberBase.1034" }
%"class.blink::MemberBase.1034" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1790" }
%"class.mojo::AssociatedRemote.1790" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1791" }
%"class.mojo::internal::AssociatedInterfacePtrState.1791" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1792" }
%"class.std::__1::unique_ptr.1792" = type { %"class.std::__1::__compressed_pair.1793" }
%"class.std::__1::__compressed_pair.1793" = type { %"struct.std::__1::__compressed_pair_elem.1794" }
%"struct.std::__1::__compressed_pair_elem.1794" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1035" }
%"class.blink::Member.1035" = type { %"class.blink::MemberBase.1036" }
%"class.blink::MemberBase.1036" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.628", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1800" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.114" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1800" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1037" = type { %"class.blink::Member.1038" }
%"class.blink::Member.1038" = type { %"class.blink::MemberBase.1039" }
%"class.blink::MemberBase.1039" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1803", %"class.blink::Member.628", %"class.mojo::AssociatedReceiver.1804" }
%"class.blink::ThreadState::PrefinalizerRegistration.1803" = type { i8 }
%"class.mojo::AssociatedReceiver.1804" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1805" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1805" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1040" }
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1808", %"class.blink::Member.628", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1808" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.526, %"class.std::__1::unique_ptr.114", %"class.base::WeakPtrFactory.1809" }
%"class.base::WeakPtrFactory.1809" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1042" = type { %"class.blink::Member.1043" }
%"class.blink::Member.1043" = type { %"class.blink::MemberBase.1044" }
%"class.blink::MemberBase.1044" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1812", %"class.blink::Member.628", %"class.mojo::AssociatedReceiver.1813" }
%"class.blink::ThreadState::PrefinalizerRegistration.1812" = type { i8 }
%"class.mojo::AssociatedReceiver.1813" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1814" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1814" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1045" = type { %"class.blink::MemberBase.1046" }
%"class.blink::MemberBase.1046" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1047" = type { %"class.blink::MemberBase.1048" }
%"class.blink::MemberBase.1048" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1049" = type { %"class.blink::MemberBase.1050" }
%"class.blink::MemberBase.1050" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1051" = type { %"class.blink::MemberBase.1052" }
%"class.blink::MemberBase.1052" = type { %"class.blink::HeapHashMap.1053"* }
%"class.blink::HeapHashMap.1053" = type opaque
%"class.mojo::StructPtr.1054" = type { %"class.std::__1::unique_ptr.1055" }
%"class.std::__1::unique_ptr.1055" = type { %"class.std::__1::__compressed_pair.1056" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.1057" }
%"struct.std::__1::__compressed_pair_elem.1057" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1058", %"class.mojo::InlinedStructPtr.1059" }
%"class.mojo::InlinedStructPtr.1058" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1059" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1063" = type { %"class.blink::MemberBase.1064" }
%"class.blink::MemberBase.1064" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1065" = type { %"class.absl::optional_internal::optional_data.1066" }
%"class.absl::optional_internal::optional_data.1066" = type { %"class.absl::optional_internal::optional_data_base.1067" }
%"class.absl::optional_internal::optional_data_base.1067" = type { %"class.absl::optional_internal::optional_data_dtor_base.1068" }
%"class.absl::optional_internal::optional_data_dtor_base.1068" = type { i8, %union.anon.1069 }
%union.anon.1069 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.WTF::Vector.479" = type { %"class.WTF::VectorBuffer.480" }
%"class.WTF::VectorBuffer.480" = type { %"class.WTF::VectorBufferBase.481" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.blink::TrustedScriptURL" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.blink::V8UnionStringOrTrustedHTMLOrTrustedScriptOrTrustedScriptURL" = type { %"class.blink::bindings::UnionBase", i32, %"class.WTF::String", %"class.blink::Member.457", %"class.blink::Member.459", %"class.blink::Member.461" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::TrustedScriptURL"* }
%"class.blink::V8UnionStringOrTrustedScript" = type { %"class.blink::bindings::UnionBase", i32, %"class.WTF::String", %"class.blink::Member.459" }
%"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript" = type { %"class.blink::bindings::UnionBase", i32, %"class.WTF::String", %"class.blink::Member.459" }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.blink::ScriptState::Scope" = type { %"class.v8::HandleScope", %"class.v8::Local" }
%"class.v8::Local" = type { %"class.v8::Context"* }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.1823, i32, i8, i8, [2 x i8] }>
%union.anon.1823 = type { %"class.WTF::Vector.1824" }
%"class.WTF::Vector.1824" = type { %"class.WTF::VectorBuffer.1825" }
%"class.WTF::VectorBuffer.1825" = type { %"class.WTF::VectorBufferBase.1826", [16 x i8] }
%"class.WTF::VectorBufferBase.1826" = type { i8*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.1882", %"class.WTF::HashMap.1882", %"class.WTF::HashMap.1887", %"class.std::__1::unique_ptr.1892", %"class.std::__1::unique_ptr.1938", %"class.blink::Persistent.436", i8, i8, i8, %"class.WTF::Vector.1230", %"class.std::__1::unique_ptr.1944", %"class.blink::Persistent.1950", %"class.blink::Persistent.1954", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.1864", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.1870", %"class.std::__1::unique_ptr.1876", i32, i32 }
%"class.std::__1::unique_ptr.1864" = type { %"class.std::__1::__compressed_pair.1865" }
%"class.std::__1::__compressed_pair.1865" = type { %"struct.std::__1::__compressed_pair_elem.1866" }
%"struct.std::__1::__compressed_pair_elem.1866" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.1870" = type { %"class.std::__1::__compressed_pair.1871" }
%"class.std::__1::__compressed_pair.1871" = type { %"struct.std::__1::__compressed_pair_elem.1872" }
%"struct.std::__1::__compressed_pair_elem.1872" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.1876" = type { %"class.std::__1::__compressed_pair.1877" }
%"class.std::__1::__compressed_pair.1877" = type { %"struct.std::__1::__compressed_pair_elem.1878" }
%"struct.std::__1::__compressed_pair_elem.1878" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.1882" = type { %"class.WTF::HashTable.1883" }
%"class.WTF::HashTable.1883" = type <{ %"struct.WTF::KeyValuePair.1886"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1886" = type opaque
%"class.WTF::HashMap.1887" = type { %"class.WTF::HashTable.1888" }
%"class.WTF::HashTable.1888" = type <{ %"struct.WTF::KeyValuePair.1891"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1891" = type opaque
%"class.std::__1::unique_ptr.1892" = type { %"class.std::__1::__compressed_pair.1893" }
%"class.std::__1::__compressed_pair.1893" = type { %"struct.std::__1::__compressed_pair_elem.1894" }
%"struct.std::__1::__compressed_pair_elem.1894" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.1900", %class.scoped_refptr.12 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.1895", i8* }
%"class.WTF::HashMap.1895" = type { %"class.WTF::HashTable.1896" }
%"class.WTF::HashTable.1896" = type <{ %"struct.WTF::KeyValuePair.1899"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1899" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.1900" = type { %"class.v8::PersistentValueMapBase.1901" }
%"class.v8::PersistentValueMapBase.1901" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.1902", i8* }
%"class.WTF::HashMap.1902" = type { %"class.WTF::HashTable.1903" }
%"class.WTF::HashTable.1903" = type <{ %"struct.WTF::KeyValuePair.1906"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1906" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.1907", %"class.WTF::String", %"class.std::__1::unique_ptr.1909" }
%"class.WTF::RefCounted.1907" = type { %"class.base::RefCounted.1908" }
%"class.base::RefCounted.1908" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1909" = type { %"class.std::__1::__compressed_pair.1910" }
%"class.std::__1::__compressed_pair.1910" = type { %"struct.std::__1::__compressed_pair_elem.1911" }
%"struct.std::__1::__compressed_pair_elem.1911" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.1912", %"class.std::__1::unique_ptr.1922", %"class.WTF::Vector.1928", i8, i32 }
%"class.std::__1::unique_ptr.1912" = type { %"class.std::__1::__compressed_pair.1913" }
%"class.std::__1::__compressed_pair.1913" = type { %"struct.std::__1::__compressed_pair_elem.1914" }
%"struct.std::__1::__compressed_pair_elem.1914" = type { %"class.WTF::Vector.1915"* }
%"class.WTF::Vector.1915" = type { %"class.WTF::VectorBuffer.1916" }
%"class.WTF::VectorBuffer.1916" = type { %"class.WTF::VectorBufferBase.1826" }
%"class.std::__1::unique_ptr.1922" = type { %"class.std::__1::__compressed_pair.1923" }
%"class.std::__1::__compressed_pair.1923" = type { %"struct.std::__1::__compressed_pair_elem.1924" }
%"struct.std::__1::__compressed_pair_elem.1924" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.1928" = type { %"class.WTF::VectorBuffer.1929" }
%"class.WTF::VectorBuffer.1929" = type { %"class.WTF::VectorBufferBase.1826", [32 x i8] }
%"class.std::__1::unique_ptr.1938" = type { %"class.std::__1::__compressed_pair.1939" }
%"class.std::__1::__compressed_pair.1939" = type { %"struct.std::__1::__compressed_pair_elem.1940" }
%"struct.std::__1::__compressed_pair_elem.1940" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.std::__1::unique_ptr.1944" = type { %"class.std::__1::__compressed_pair.1945" }
%"class.std::__1::__compressed_pair.1945" = type { %"struct.std::__1::__compressed_pair_elem.1946" }
%"struct.std::__1::__compressed_pair_elem.1946" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.1950" = type { %"class.blink::PersistentBase.1951" }
%"class.blink::PersistentBase.1951" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.1954" = type { %"class.blink::PersistentBase.1955" }
%"class.blink::PersistentBase.1955" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.1958", i64 }
%"class.blink::HeapVector.1958" = type { %"class.WTF::Vector.1961" }
%"class.WTF::Vector.1961" = type { %"class.WTF::VectorBuffer.1962" }
%"class.WTF::VectorBuffer.1962" = type { %"class.WTF::VectorBufferBase.1963" }
%"class.WTF::VectorBufferBase.1963" = type { %"struct.std::__1::pair.1964"*, i32, i32 }
%"struct.std::__1::pair.1964" = type { %"class.blink::UntracedMember", %"class.blink::Member.1966" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1965" }
%"class.blink::MemberBase.1965" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1966" = type { %"class.blink::MemberBase.1967" }
%"class.blink::MemberBase.1967" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA194_KcEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_11ScriptValueEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF11VectorMoverILb0EN5blink11ScriptValueENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA120_KcEEEPS1_DpOT_ = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str = private unnamed_addr constant [12 x i8] c"TrustedHTML\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"TrustedScript\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"TrustedScriptURL\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@_ZN5blink12_GLOBAL__N_145kScriptExecutionTrustedTypeFailConsoleMessageE = internal constant [120 x i8] c"This document requires 'TrustedScript' assignment. An HTMLScriptElement was directly modified and will not be executed.\00", align 16
@.str.4 = private unnamed_addr constant [9 x i8] c"Location\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"href\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"Function\00", align 1
@_ZN5blink12_GLOBAL__N_141kFunctionConstructorFailureConsoleMessageE = internal constant [194 x i8] c"The JavaScript Function constructor does not accept TrustedString arguments. See https://github.com/w3c/webappsec-trusted-types/wiki/Trusted-Types-for-function-constructor for more information.\00", align 16
@.str.7 = private unnamed_addr constant [5 x i8] c"eval\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"Worker\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"SharedWorker\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c" constructor\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c" \00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.12 = private unnamed_addr constant [49 x i8] c"This document requires 'TrustedHTML' assignment.\00", align 1
@.str.13 = private unnamed_addr constant [51 x i8] c"This document requires 'TrustedScript' assignment.\00", align 1
@.str.14 = private unnamed_addr constant [54 x i8] c"This document requires 'TrustedScriptURL' assignment.\00", align 1
@.str.15 = private unnamed_addr constant [92 x i8] c"This document requires 'TrustedHTML' assignment and the 'default' policy failed to execute.\00", align 1
@.str.16 = private unnamed_addr constant [108 x i8] c"This document requires 'TrustedHTML' assignment and no 'default' policy for 'TrustedHTML' has been defined.\00", align 1
@.str.17 = private unnamed_addr constant [94 x i8] c"This document requires 'TrustedScript' assignment and the 'default' policy failed to execute.\00", align 1
@.str.18 = private unnamed_addr constant [112 x i8] c"This document requires 'TrustedScript' assignment and no 'default' policy for 'TrustedScript' has been defined.\00", align 1
@.str.19 = private unnamed_addr constant [97 x i8] c"This document requires 'TrustedScriptURL' assignment and the 'default' policy failed to execute.\00", align 1
@.str.20 = private unnamed_addr constant [118 x i8] c"This document requires 'TrustedScriptURL' assignment and no 'default' policy for 'TrustedScriptURL' has been defined.\00", align 1
@.str.21 = private unnamed_addr constant [130 x i8] c"This document requires 'TrustedScript' assignment. Navigating to a javascript:-URL is equivalent to a 'TrustedScript' assignment.\00", align 1
@.str.22 = private unnamed_addr constant [172 x i8] c"This document requires 'TrustedScript' assignment. Navigating to a javascript:-URL is equivalent to a 'TrustedScript' assignment and the 'default' policy failed toexecute.\00", align 1
@.str.23 = private unnamed_addr constant [125 x i8] c"This document requires 'TrustedScript' assignment. This script element was modified without use of TrustedScript assignment.\00", align 1
@.str.24 = private unnamed_addr constant [168 x i8] c"This document requires 'TrustedScript' assignment. This script element was modified without use of TrustedScript assignment and the 'default' policy failed to execute.\00", align 1
@.str.25 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.26 = private unnamed_addr constant [20 x i8] c"(function anonymous\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase39is_trusted_types_use_code_like_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ConsoleMessage]\00", align 1
@.str.27 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.28 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.29 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink13CoreProbeSink16s_existingAgentsE = external local_unnamed_addr global %"struct.std::__1::atomic", align 4
@.str.30 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.31 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.32 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.33 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.34 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.35 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.36 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.37 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.38 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_11ScriptValueENS_12VectorTraitsIS3_EEEEEEPKcv = private unnamed_addr constant [132 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::ScriptValue, WTF::VectorTraits<blink::ScriptValue> >]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase29is_trusted_dom_types_enabled_E = external local_unnamed_addr global i8, align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@.str.39 = private unnamed_addr constant [18 x i8] c"HTMLScriptElement\00", align 1
@.str.40 = private unnamed_addr constant [17 x i8] c"SVGScriptElement\00", align 1
@switch.table._ZN5blink12_GLOBAL__N_115TrustedTypeFailENS0_24TrustedTypeViolationKindEPKNS_16ExecutionContextERNS_14ExceptionStateERKN3WTF6StringE.41 = private unnamed_addr constant [13 x i8*] [i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([112 x i8], [112 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([130 x i8], [130 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([172 x i8], [172 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([168 x i8], [168 x i8]* @.str.24, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink24RequireTrustedTypesCheckEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #0 {
  %2 = icmp eq %"class.blink::ExecutionContext"* %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.blink::ExecutionContext"* %0 to i1 (%"class.blink::ExecutionContext"*)***
  %5 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %5, i64 38
  %7 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ExecutionContext"* nonnull %0) #10
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call zeroext i1 @_ZN5blink21ContentSecurityPolicy21ShouldBypassMainWorldEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* nonnull %0) #10
  %11 = xor i1 %10, true
  br label %12

12:                                               ; preds = %1, %9, %3
  %13 = phi i1 [ false, %3 ], [ false, %1 ], [ %11, %9 ]
  ret i1 %13
}

declare zeroext i1 @_ZN5blink21ContentSecurityPolicy21ShouldBypassMainWorldEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink24TrustedTypesCheckForHTMLEN3WTF6StringEPKNS_16ExecutionContextERNS_14ExceptionStateE(%"class.WTF::StringImpl"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::HeapVector.447", align 8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %0, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.blink::ExecutionContext"* %1, null
  %8 = ptrtoint %"class.WTF::StringImpl"* %0 to i64
  br i1 %7, label %17, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::ExecutionContext"* %1 to i1 (%"class.blink::ExecutionContext"*)***
  %11 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %11, i64 38
  %13 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::ExecutionContext"* nonnull %1) #10
  br i1 %14, label %15, label %17

15:                                               ; preds = %9
  %16 = tail call zeroext i1 @_ZN5blink21ContentSecurityPolicy21ShouldBypassMainWorldEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* nonnull %1) #10
  br i1 %16, label %17, label %18

17:                                               ; preds = %15, %3, %9
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  br label %193

18:                                               ; preds = %15
  %19 = bitcast %"class.blink::ExecutionContext"* %1 to %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)***
  %20 = load %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)**, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)** %20, i64 37
  %22 = load %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)** %21, align 8
  %23 = tail call %"class.blink::TrustedTypePolicyFactory"* %22(%"class.blink::ExecutionContext"* nonnull %1) #10
  %24 = icmp eq %"class.blink::TrustedTypePolicyFactory"* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %18
  %26 = load %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)**, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*** %19, align 8
  %27 = getelementptr inbounds %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)** %26, i64 37
  %28 = load %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)** %27, align 8
  %29 = tail call %"class.blink::TrustedTypePolicyFactory"* %28(%"class.blink::ExecutionContext"* nonnull %1) #10
  %30 = tail call %"class.blink::TrustedTypePolicy"* @_ZNK5blink24TrustedTypePolicyFactory13defaultPolicyEv(%"class.blink::TrustedTypePolicyFactory"* %29) #10
  %31 = icmp eq %"class.blink::TrustedTypePolicy"* %30, null
  br i1 %31, label %32, label %60

32:                                               ; preds = %18, %25
  %33 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115TrustedTypeFailENS0_24TrustedTypeViolationKindEPKNS_16ExecutionContextERNS_14ExceptionStateERKN3WTF6StringE(i32 0, %"class.blink::ExecutionContext"* nonnull %1, %"class.blink::ExceptionState"* dereferenceable(72) %2, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  br i1 %33, label %34, label %57

34:                                               ; preds = %32
  %35 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = ptrtoint %"class.WTF::StringImpl"* %37 to i64
  %39 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %39, label %176, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %176

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i33
  %49 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #10
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !2

54:                                               ; preds = %45
  call void @llvm.trap() #10
  unreachable

55:                                               ; preds = %45
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  br label %176

57:                                               ; preds = %32
  %58 = bitcast %"class.WTF::String"* %4 to i64*
  %59 = load i64, i64* %58, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  br label %193

60:                                               ; preds = %25
  %61 = tail call zeroext i1 @_ZN5blink17TrustedTypePolicy13HasCreateHTMLEv(%"class.blink::TrustedTypePolicy"* nonnull %30) #10
  br i1 %61, label %90, label %62

62:                                               ; preds = %60
  %63 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115TrustedTypeFailENS0_24TrustedTypeViolationKindEPKNS_16ExecutionContextERNS_14ExceptionStateERKN3WTF6StringE(i32 4, %"class.blink::ExecutionContext"* nonnull %1, %"class.blink::ExceptionState"* dereferenceable(72) %2, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  br i1 %63, label %64, label %87

64:                                               ; preds = %62
  %65 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %65, i64 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = ptrtoint %"class.WTF::StringImpl"* %67 to i64
  %69 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %69, label %176, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %176

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i33
  %79 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %78, i33 1) #10
  %80 = extractvalue { i33, i1 } %79, 1
  %81 = extractvalue { i33, i1 } %79, 0
  %82 = icmp slt i33 %81, 0
  %83 = or i1 %80, %82
  br i1 %83, label %84, label %85, !prof !2

84:                                               ; preds = %75
  call void @llvm.trap() #10
  unreachable

85:                                               ; preds = %75
  %86 = trunc i33 %81 to i32
  store i32 %86, i32* %76, align 4
  br label %176

87:                                               ; preds = %62
  %88 = bitcast %"class.WTF::String"* %4 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  br label %193

90:                                               ; preds = %60
  %91 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 0, i32 5
  %92 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %91, align 8
  %93 = bitcast %"class.blink::HeapVector.447"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #10
  %94 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_122GetDefaultCallbackArgsEPN2v87IsolateEPKcRKNS_14ExceptionStateERKN3WTF6StringE(%"class.blink::HeapVector.447"* nonnull sret %5, %"class.v8::Isolate"* %92, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), %"class.blink::ExceptionState"* dereferenceable(72) %2, %"class.WTF::String"* dereferenceable(8) %94)
  %95 = call %"class.blink::TrustedHTML"* @_ZN5blink17TrustedTypePolicy10CreateHTMLEPN2v87IsolateERKN3WTF6StringERKNS_10HeapVectorINS_11ScriptValueELj0EEERNS_14ExceptionStateE(%"class.blink::TrustedTypePolicy"* nonnull %30, %"class.v8::Isolate"* %92, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::HeapVector.447"* nonnull dereferenceable(16) %5, %"class.blink::ExceptionState"* dereferenceable(72) %2) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #10
  %96 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %121, label %99

99:                                               ; preds = %90
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %94, i64 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = ptrtoint %"class.WTF::StringImpl"* %101 to i64
  %103 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %103, label %176, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %176

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i33
  %113 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %112, i33 1) #10
  %114 = extractvalue { i33, i1 } %113, 1
  %115 = extractvalue { i33, i1 } %113, 0
  %116 = icmp slt i33 %115, 0
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %119, !prof !2

118:                                              ; preds = %109
  call void @llvm.trap() #10
  unreachable

119:                                              ; preds = %109
  %120 = trunc i33 %115 to i32
  store i32 %120, i32* %110, align 4
  br label %176

121:                                              ; preds = %90
  %122 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink11TrustedHTML8toStringEv(%"class.blink::TrustedHTML"* %95) #10
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %122, i64 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %126, label %153

126:                                              ; preds = %121
  %127 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115TrustedTypeFailENS0_24TrustedTypeViolationKindEPKNS_16ExecutionContextERNS_14ExceptionStateERKN3WTF6StringE(i32 3, %"class.blink::ExecutionContext"* nonnull %1, %"class.blink::ExceptionState"* dereferenceable(72) %2, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  br i1 %127, label %128, label %150

128:                                              ; preds = %126
  %129 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %94, i64 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = ptrtoint %"class.WTF::StringImpl"* %130 to i64
  %132 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %132, label %176, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %176

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = zext i32 %140 to i33
  %142 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %141, i33 1) #10
  %143 = extractvalue { i33, i1 } %142, 1
  %144 = extractvalue { i33, i1 } %142, 0
  %145 = icmp slt i33 %144, 0
  %146 = or i1 %143, %145
  br i1 %146, label %147, label %148, !prof !2

147:                                              ; preds = %138
  call void @llvm.trap() #10
  unreachable

148:                                              ; preds = %138
  %149 = trunc i33 %144 to i32
  store i32 %149, i32* %139, align 4
  br label %176

150:                                              ; preds = %126
  %151 = bitcast %"class.WTF::String"* %4 to i64*
  %152 = load i64, i64* %151, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  br label %193

153:                                              ; preds = %121
  %154 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink11TrustedHTML8toStringEv(%"class.blink::TrustedHTML"* %95) #10
  %155 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %154, i64 0, i32 0, i32 0
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  %157 = ptrtoint %"class.WTF::StringImpl"* %156 to i64
  %158 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %158, label %176, label %159

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %176

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  %167 = zext i32 %166 to i33
  %168 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %167, i33 1) #10
  %169 = extractvalue { i33, i1 } %168, 1
  %170 = extractvalue { i33, i1 } %168, 0
  %171 = icmp slt i33 %170, 0
  %172 = or i1 %169, %171
  br i1 %172, label %173, label %174, !prof !2

173:                                              ; preds = %164
  call void @llvm.trap() #10
  unreachable

174:                                              ; preds = %164
  %175 = trunc i33 %170 to i32
  store i32 %175, i32* %165, align 4
  br label %176

176:                                              ; preds = %174, %159, %153, %148, %133, %128, %119, %104, %99, %85, %70, %64, %55, %40, %34
  %177 = phi i64 [ %157, %174 ], [ %157, %159 ], [ %157, %153 ], [ %131, %148 ], [ %131, %133 ], [ %131, %128 ], [ %102, %119 ], [ %102, %104 ], [ %102, %99 ], [ %68, %85 ], [ %68, %70 ], [ %68, %64 ], [ %38, %55 ], [ %38, %40 ], [ %38, %34 ]
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %193, label %180

180:                                              ; preds = %176
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %189

187:                                              ; preds = %180
  %188 = add i32 %186, -1
  store i32 %188, i32* %185, align 4
  br label %189

189:                                              ; preds = %187, %180
  %190 = phi i32 [ %188, %187 ], [ %186, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #10
  br label %193

193:                                              ; preds = %17, %150, %87, %57, %176, %189, %192
  %194 = phi i64 [ %177, %176 ], [ %177, %189 ], [ %177, %192 ], [ %8, %17 ], [ %89, %87 ], [ %152, %150 ], [ %59, %57 ]
  %195 = inttoptr i64 %194 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %195
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115TrustedTypeFailENS0_24TrustedTypeViolationKindEPKNS_16ExecutionContextERNS_14ExceptionStateERKN3WTF6StringE(i32, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = icmp eq %"class.blink::ExecutionContext"* %1, null
  br i1 %14, label %193, label %15

15:                                               ; preds = %4
  %16 = bitcast %"class.blink::ExecutionContext"* %1 to %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)***
  %17 = load %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)**, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)** %17, i64 37
  %19 = load %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)** %18, align 8
  %20 = tail call %"class.blink::TrustedTypePolicyFactory"* %19(%"class.blink::ExecutionContext"* nonnull %1) #10
  %21 = icmp eq %"class.blink::TrustedTypePolicyFactory"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %15
  %23 = load %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)**, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*** %16, align 8
  %24 = getelementptr inbounds %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)** %23, i64 37
  %25 = load %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)** %24, align 8
  %26 = tail call %"class.blink::TrustedTypePolicyFactory"* %25(%"class.blink::ExecutionContext"* nonnull %1) #10
  tail call void @_ZN5blink24TrustedTypePolicyFactory31CountTrustedTypeAssignmentErrorEv(%"class.blink::TrustedTypePolicyFactory"* %26) #10
  br label %27

27:                                               ; preds = %15, %22
  %28 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %30 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_115GetSamplePrefixERKNS_14ExceptionStateERKN3WTF6StringE(%"class.blink::ExceptionState"* dereferenceable(72) %2, %"class.WTF::String"* dereferenceable(8) %3)
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %29, align 8
  %31 = tail call %"class.blink::ContentSecurityPolicy"* @_ZNK5blink16ExecutionContext24GetContentSecurityPolicyEv(%"class.blink::ExecutionContext"* nonnull %1) #10
  %32 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  %33 = icmp ult i32 %0, 13
  br i1 %33, label %34, label %38

34:                                               ; preds = %27
  %35 = sext i32 %0 to i64
  %36 = getelementptr inbounds [13 x i8*], [13 x i8*]* @switch.table._ZN5blink12_GLOBAL__N_115TrustedTypeFailENS0_24TrustedTypeViolationKindEPKNS_16ExecutionContextERNS_14ExceptionStateERKN3WTF6StringE.41, i64 0, i64 %35
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %27, %34
  %39 = phi i8* [ %37, %34 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.25, i64 0, i64 0), %27 ]
  %40 = tail call i64 @strlen(i8* nonnull %39) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* nonnull %39, i64 %40) #10
  %41 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #10
  %42 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #10
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %45, label %49

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %46, align 8
  %47 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %48 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %47, i64* %48, align 8
  br label %57

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 1
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %55 = bitcast i8** %54 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %55, align 8
  %56 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %57

57:                                               ; preds = %49, %45
  %58 = phi i64 [ %56, %49 ], [ %47, %45 ]
  %59 = phi i32 [ %52, %49 ], [ 0, %45 ]
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %59, i32* %60, align 8
  %61 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #10
  %62 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %58, i64* %62, align 8
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i8** %63, align 8
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 8, i32* %64, align 8
  %65 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #10
  br i1 %65, label %66, label %69

66:                                               ; preds = %57
  %67 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %3, i32 19, i32 -1) #10
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %68, align 8
  br label %91

69:                                               ; preds = %57
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %72, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %73, label %91, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %91

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i33
  %83 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 1) #10
  %84 = extractvalue { i33, i1 } %83, 1
  %85 = extractvalue { i33, i1 } %83, 0
  %86 = icmp slt i33 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %89, !prof !2

88:                                               ; preds = %79
  call void @llvm.trap() #10
  unreachable

89:                                               ; preds = %79
  %90 = trunc i33 %85 to i32
  store i32 %90, i32* %80, align 4
  br label %91

91:                                               ; preds = %89, %74, %69, %66
  %92 = call zeroext i1 @_ZN5blink21ContentSecurityPolicy33AllowTrustedTypeAssignmentFailureERKN3WTF6StringES4_S4_(%"class.blink::ContentSecurityPolicy"* %31, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.WTF::String"* nonnull dereferenceable(8) %9) #10
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #10
  br label %109

109:                                              ; preds = %91, %105, %108
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #10
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #10
  br label %126

126:                                              ; preds = %109, %122, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10
  %127 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #10
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %130, label %134

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %131, align 8
  %132 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %133 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %132, i64* %133, align 8
  br label %142

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %128, %"class.WTF::StringImpl"** %135, align 8
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 1
  %139 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %140 = bitcast i8** %139 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %138, %"class.WTF::StringImpl"** %140, align 8
  %141 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %142

142:                                              ; preds = %134, %130
  %143 = phi i64 [ %141, %134 ], [ %132, %130 ]
  %144 = phi i32 [ %137, %134 ], [ 0, %130 ]
  %145 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %144, i32* %145, align 8
  %146 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %146) #10
  %147 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %143, i64* %147, align 8
  %148 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i8** %148, align 8
  %149 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 8, i32* %149, align 8
  %150 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %146) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #10
  %151 = xor i1 %150, true
  %152 = or i1 %92, %151
  %153 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase39is_trusted_types_use_code_like_enabled_E, align 1
  %154 = icmp ne i8 %153, 0
  %155 = or i1 %152, %154
  br i1 %155, label %161, label %156

156:                                              ; preds = %142
  %157 = call %"class.blink::ContentSecurityPolicy"* @_ZNK5blink16ExecutionContext24GetContentSecurityPolicyEv(%"class.blink::ExecutionContext"* nonnull %1) #10
  %158 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158) #10
  store i32 13, i32* %12, align 4
  %159 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %159) #10
  store i32 1, i32* %13, align 4
  %160 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA194_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %12, i32* nonnull dereferenceable(4) %13, [194 x i8]* nonnull dereferenceable(194) @_ZN5blink12_GLOBAL__N_141kFunctionConstructorFailureConsoleMessageE) #10
  call void @_ZN5blink21ContentSecurityPolicy12LogToConsoleEPNS_14ConsoleMessageEPNS_10LocalFrameE(%"class.blink::ContentSecurityPolicy"* %157, %"class.blink::ConsoleMessage"* %160, %"class.blink::LocalFrame"* null) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %159) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158) #10
  br label %161

161:                                              ; preds = %142, %156
  %162 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %163 = trunc i32 %162 to i8
  %164 = icmp slt i8 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %161
  call void @_ZN5blink5probe36OnContentSecurityPolicyViolationImplEPNS_16ExecutionContextENS_21ContentSecurityPolicy34ContentSecurityPolicyViolationTypeE(%"class.blink::ExecutionContext"* nonnull %1, i32 3) #10
  br label %166

166:                                              ; preds = %161, %165
  br i1 %92, label %175, label %167

167:                                              ; preds = %166
  %168 = icmp ult i32 %0, 13
  br i1 %168, label %169, label %173

169:                                              ; preds = %167
  %170 = sext i32 %0 to i64
  %171 = getelementptr inbounds [13 x i8*], [13 x i8*]* @switch.table._ZN5blink12_GLOBAL__N_115TrustedTypeFailENS0_24TrustedTypeViolationKindEPKNS_16ExecutionContextERNS_14ExceptionStateERKN3WTF6StringE.41, i64 0, i64 %170
  %172 = load i8*, i8** %171, align 8
  br label %173

173:                                              ; preds = %167, %169
  %174 = phi i8* [ %172, %169 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.25, i64 0, i64 0), %167 ]
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* nonnull %174) #10
  br label %175

175:                                              ; preds = %173, %166
  %176 = xor i1 %92, true
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #10
  br label %192

192:                                              ; preds = %175, %188, %191
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %193

193:                                              ; preds = %4, %192
  %194 = phi i1 [ %176, %192 ], [ true, %4 ]
  ret i1 %194
}

declare zeroext i1 @_ZN5blink17TrustedTypePolicy13HasCreateHTMLEv(%"class.blink::TrustedTypePolicy"*) local_unnamed_addr #1

declare %"class.blink::TrustedHTML"* @_ZN5blink17TrustedTypePolicy10CreateHTMLEPN2v87IsolateERKN3WTF6StringERKNS_10HeapVectorINS_11ScriptValueELj0EEERNS_14ExceptionStateE(%"class.blink::TrustedTypePolicy"*, %"class.v8::Isolate"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::HeapVector.447"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_122GetDefaultCallbackArgsEPN2v87IsolateEPKcRKNS_14ExceptionStateERKN3WTF6StringE(%"class.blink::HeapVector.447"* noalias sret, %"class.v8::Isolate"*, i8*, %"class.blink::ExceptionState"* nocapture readonly dereferenceable(72), %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.blink::ScriptValue", align 8
  %8 = alloca %"class.blink::ScriptValue", align 8
  %9 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #10
  %10 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %9) #10
  %11 = getelementptr inbounds %"class.blink::HeapVector.447", %"class.blink::HeapVector.447"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::HeapVector.447", %"class.blink::HeapVector.447"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.blink::HeapVector.447", %"class.blink::HeapVector.447"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %14 = bitcast %"class.blink::HeapVector.447"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #10
  %15 = getelementptr inbounds %"class.blink::HeapVector.447", %"class.blink::HeapVector.447"* %0, i64 0, i32 0
  %16 = bitcast %"class.blink::ScriptValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.v8::Context"*, %"class.v8::Context"** %17, align 8, !noalias !3
  %19 = icmp eq %"class.v8::Context"* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %5
  %21 = bitcast %"class.blink::ScriptState"* %10 to %"class.v8::internal::Isolate"**
  %22 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %21, align 8, !noalias !3
  %23 = bitcast %"class.v8::Context"* %18 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %22, i64 %24) #10
  %26 = bitcast i64* %25 to %"class.v8::Context"*
  br label %27

27:                                               ; preds = %20, %5
  %28 = phi %"class.v8::Context"* [ %26, %20 ], [ null, %5 ]
  %29 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %28) #10, !noalias !3
  %30 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %10, i64 0, i32 0
  %31 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %30, align 8, !noalias !3
  %32 = icmp eq i8* %2, null
  br i1 %32, label %44, label %33

33:                                               ; preds = %27
  %34 = load i8, i8* %2, align 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %33
  %37 = tail call i64 @strlen(i8* nonnull %2) #11
  %38 = trunc i64 %37 to i32
  %39 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %31, i8* nonnull %2, i32 0, i32 %38) #10
  %40 = icmp eq %"class.v8::String"* %39, null
  br i1 %40, label %43, label %41, !prof !2

41:                                               ; preds = %36
  %42 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %30, align 8, !noalias !3
  br label %50

43:                                               ; preds = %36
  tail call void @_ZN2v82V812ToLocalEmptyEv() #10
  br label %49

44:                                               ; preds = %33, %27
  %45 = ptrtoint %"class.v8::Isolate"* %31 to i64
  %46 = add i64 %45, 200
  %47 = inttoptr i64 %46 to %"class.v8::String"*
  %48 = icmp eq i64 %46, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %44, %43
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #10, !alias.scope !3
  br label %56

50:                                               ; preds = %41, %44
  %51 = phi %"class.v8::Isolate"* [ %31, %44 ], [ %42, %41 ]
  %52 = phi %"class.v8::String"* [ %47, %44 ], [ %39, %41 ]
  %53 = bitcast %"class.v8::String"* %52 to %"class.v8::Value"*
  %54 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 0
  store %"class.v8::Isolate"* %51, %"class.v8::Isolate"** %54, align 8, !alias.scope !3
  %55 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %55, %"class.v8::Isolate"* %51, %"class.v8::Value"* nonnull %53) #10
  br label %56

56:                                               ; preds = %49, %50
  %57 = load i32, i32* %13, align 4
  %58 = load i32, i32* %12, align 8
  %59 = icmp eq i32 %57, %58
  br i1 %59, label %68, label %60, !prof !2

60:                                               ; preds = %56
  %61 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %11, align 8
  %62 = zext i32 %57 to i64
  %63 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %61, i64 %62
  %64 = bitcast %"class.blink::ScriptValue"* %63 to i8*
  %65 = call %"class.blink::ScriptValue"* @_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %64, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %7) #10
  %66 = load i32, i32* %13, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %13, align 4
  br label %69

68:                                               ; preds = %56
  call void @_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.450"* %15, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %7) #10
  br label %69

69:                                               ; preds = %60, %68
  %70 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 1, i32 1, i32 0
  %71 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %70, align 8
  %72 = icmp eq %"class.blink::DOMWrapperWorld"* %71, null
  br i1 %72, label %80, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %71, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %74) #10
  %75 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %73
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %71) #10
  %79 = bitcast %"class.blink::DOMWrapperWorld"* %71 to i8*
  call void @free(i8* %79) #10
  br label %80

80:                                               ; preds = %69, %73, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #10
  %81 = bitcast %"class.blink::ScriptValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #10
  %82 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_115GetSamplePrefixERKNS_14ExceptionStateERKN3WTF6StringE(%"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.WTF::String"* dereferenceable(8) %4)
  %83 = load %"class.v8::Context"*, %"class.v8::Context"** %17, align 8, !noalias !6
  %84 = icmp eq %"class.v8::Context"* %83, null
  br i1 %84, label %92, label %85

85:                                               ; preds = %80
  %86 = bitcast %"class.blink::ScriptState"* %10 to %"class.v8::internal::Isolate"**
  %87 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %86, align 8, !noalias !6
  %88 = bitcast %"class.v8::Context"* %83 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %87, i64 %89) #10
  %91 = bitcast i64* %90 to %"class.v8::Context"*
  br label %92

92:                                               ; preds = %85, %80
  %93 = phi %"class.v8::Context"* [ %91, %85 ], [ null, %80 ]
  %94 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %93) #10, !noalias !6
  %95 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %30, align 8, !noalias !6
  %96 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #10, !noalias !6
  %97 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %97, label %98, label %102

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %99, align 8, !noalias !6
  %100 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %101 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %100, i64* %101, align 8, !noalias !6
  br label %109

102:                                              ; preds = %92
  %103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %103, align 8, !noalias !6
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 1
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %108 = bitcast i8** %107 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %106, %"class.WTF::StringImpl"** %108, align 8, !noalias !6
  br label %109

109:                                              ; preds = %102, %98
  %110 = phi i32 [ %105, %102 ], [ 0, %98 ]
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %110, i32* %111, align 8, !noalias !6
  %112 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %95, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #10, !noalias !6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #10, !noalias !6
  %113 = icmp eq %"class.v8::String"* %112, null
  br i1 %113, label %114, label %115

114:                                              ; preds = %109
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 0, i64 24, i1 false) #10, !alias.scope !6
  br label %120

115:                                              ; preds = %109
  %116 = bitcast %"class.v8::String"* %112 to %"class.v8::Value"*
  %117 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %30, align 8, !noalias !6
  %118 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 0
  store %"class.v8::Isolate"* %117, %"class.v8::Isolate"** %118, align 8, !alias.scope !6
  %119 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %119, %"class.v8::Isolate"* %117, %"class.v8::Value"* nonnull %116) #10
  br label %120

120:                                              ; preds = %114, %115
  %121 = load i32, i32* %13, align 4
  %122 = load i32, i32* %12, align 8
  %123 = icmp eq i32 %121, %122
  br i1 %123, label %132, label %124, !prof !2

124:                                              ; preds = %120
  %125 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %11, align 8
  %126 = zext i32 %121 to i64
  %127 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %125, i64 %126
  %128 = bitcast %"class.blink::ScriptValue"* %127 to i8*
  %129 = call %"class.blink::ScriptValue"* @_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %128, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %8) #10
  %130 = load i32, i32* %13, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %13, align 4
  br label %133

132:                                              ; preds = %120
  call void @_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.450"* %15, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %8) #10
  br label %133

133:                                              ; preds = %124, %132
  %134 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1, i32 1, i32 0
  %135 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %134, align 8
  %136 = icmp eq %"class.blink::DOMWrapperWorld"* %135, null
  br i1 %136, label %144, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %135, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %138) #10
  %139 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %137
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %135) #10
  %143 = bitcast %"class.blink::DOMWrapperWorld"* %135 to i8*
  call void @free(i8* %143) #10
  br label %144

144:                                              ; preds = %133, %137, %142
  br i1 %97, label %158, label %145

145:                                              ; preds = %144
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #10
  br label %158

158:                                              ; preds = %144, %154, %157
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink11TrustedHTML8toStringEv(%"class.blink::TrustedHTML"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink26TrustedTypesCheckForScriptEN3WTF6StringEPKNS_16ExecutionContextERNS_14ExceptionStateE(%"class.WTF::StringImpl"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::HeapVector.447", align 8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %0, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.blink::ExecutionContext"* %1, null
  %8 = ptrtoint %"class.WTF::StringImpl"* %0 to i64
  br i1 %7, label %17, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::ExecutionContext"* %1 to i1 (%"class.blink::ExecutionContext"*)***
  %11 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %11, i64 38
  %13 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::ExecutionContext"* nonnull %1) #10
  br i1 %14, label %15, label %17

15:                                               ; preds = %9
  %16 = tail call zeroext i1 @_ZN5blink21ContentSecurityPolicy21ShouldBypassMainWorldEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* nonnull %1) #10
  br i1 %16, label %17, label %18

17:                                               ; preds = %15, %3, %9
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  br label %194

18:                                               ; preds = %15
  %19 = bitcast %"class.blink::ExecutionContext"* %1 to %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)***
  %20 = load %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)**, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)** %20, i64 37
  %22 = load %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)** %21, align 8
  %23 = tail call %"class.blink::TrustedTypePolicyFactory"* %22(%"class.blink::ExecutionContext"* nonnull %1) #10
  %24 = icmp eq %"class.blink::TrustedTypePolicyFactory"* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %18
  %26 = load %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)**, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*** %19, align 8
  %27 = getelementptr inbounds %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)** %26, i64 37
  %28 = load %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)** %27, align 8
  %29 = tail call %"class.blink::TrustedTypePolicyFactory"* %28(%"class.blink::ExecutionContext"* nonnull %1) #10
  %30 = tail call %"class.blink::TrustedTypePolicy"* @_ZNK5blink24TrustedTypePolicyFactory13defaultPolicyEv(%"class.blink::TrustedTypePolicyFactory"* %29) #10
  %31 = icmp eq %"class.blink::TrustedTypePolicy"* %30, null
  br i1 %31, label %32, label %60

32:                                               ; preds = %18, %25
  %33 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115TrustedTypeFailENS0_24TrustedTypeViolationKindEPKNS_16ExecutionContextERNS_14ExceptionStateERKN3WTF6StringE(i32 1, %"class.blink::ExecutionContext"* nonnull %1, %"class.blink::ExceptionState"* dereferenceable(72) %2, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  br i1 %33, label %34, label %57

34:                                               ; preds = %32
  %35 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = ptrtoint %"class.WTF::StringImpl"* %37 to i64
  %39 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %39, label %177, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %177

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i33
  %49 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #10
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !2

54:                                               ; preds = %45
  call void @llvm.trap() #10
  unreachable

55:                                               ; preds = %45
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  br label %177

57:                                               ; preds = %32
  %58 = bitcast %"class.WTF::String"* %4 to i64*
  %59 = load i64, i64* %58, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  br label %194

60:                                               ; preds = %25
  %61 = tail call zeroext i1 @_ZN5blink17TrustedTypePolicy15HasCreateScriptEv(%"class.blink::TrustedTypePolicy"* nonnull %30) #10
  br i1 %61, label %90, label %62

62:                                               ; preds = %60
  %63 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115TrustedTypeFailENS0_24TrustedTypeViolationKindEPKNS_16ExecutionContextERNS_14ExceptionStateERKN3WTF6StringE(i32 6, %"class.blink::ExecutionContext"* nonnull %1, %"class.blink::ExceptionState"* dereferenceable(72) %2, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  br i1 %63, label %64, label %87

64:                                               ; preds = %62
  %65 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %65, i64 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = ptrtoint %"class.WTF::StringImpl"* %67 to i64
  %69 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %69, label %177, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %177

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i33
  %79 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %78, i33 1) #10
  %80 = extractvalue { i33, i1 } %79, 1
  %81 = extractvalue { i33, i1 } %79, 0
  %82 = icmp slt i33 %81, 0
  %83 = or i1 %80, %82
  br i1 %83, label %84, label %85, !prof !2

84:                                               ; preds = %75
  call void @llvm.trap() #10
  unreachable

85:                                               ; preds = %75
  %86 = trunc i33 %81 to i32
  store i32 %86, i32* %76, align 4
  br label %177

87:                                               ; preds = %62
  %88 = bitcast %"class.WTF::String"* %4 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  br label %194

90:                                               ; preds = %60
  %91 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 0, i32 5
  %92 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %91, align 8
  %93 = bitcast %"class.blink::HeapVector.447"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #10
  call fastcc void @_ZN5blink12_GLOBAL__N_122GetDefaultCallbackArgsEPN2v87IsolateEPKcRKNS_14ExceptionStateERKN3WTF6StringE(%"class.blink::HeapVector.447"* nonnull sret %5, %"class.v8::Isolate"* %92, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), %"class.blink::ExceptionState"* dereferenceable(72) %2, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  %94 = call %"class.blink::TrustedScript"* @_ZN5blink17TrustedTypePolicy12CreateScriptEPN2v87IsolateERKN3WTF6StringERKNS_10HeapVectorINS_11ScriptValueELj0EEERNS_14ExceptionStateE(%"class.blink::TrustedTypePolicy"* nonnull %30, %"class.v8::Isolate"* %92, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::HeapVector.447"* nonnull dereferenceable(16) %5, %"class.blink::ExceptionState"* dereferenceable(72) %2) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #10
  %95 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %121, label %98

98:                                               ; preds = %90
  %99 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %99, i64 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = ptrtoint %"class.WTF::StringImpl"* %101 to i64
  %103 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %103, label %177, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %177

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i33
  %113 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %112, i33 1) #10
  %114 = extractvalue { i33, i1 } %113, 1
  %115 = extractvalue { i33, i1 } %113, 0
  %116 = icmp slt i33 %115, 0
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %119, !prof !2

118:                                              ; preds = %109
  call void @llvm.trap() #10
  unreachable

119:                                              ; preds = %109
  %120 = trunc i33 %115 to i32
  store i32 %120, i32* %110, align 4
  br label %177

121:                                              ; preds = %90
  %122 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink13TrustedScript8toStringEv(%"class.blink::TrustedScript"* %94) #10
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %122, i64 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %126, label %154

126:                                              ; preds = %121
  %127 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115TrustedTypeFailENS0_24TrustedTypeViolationKindEPKNS_16ExecutionContextERNS_14ExceptionStateERKN3WTF6StringE(i32 5, %"class.blink::ExecutionContext"* nonnull %1, %"class.blink::ExceptionState"* dereferenceable(72) %2, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  br i1 %127, label %128, label %151

128:                                              ; preds = %126
  %129 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %130 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = ptrtoint %"class.WTF::StringImpl"* %131 to i64
  %133 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %133, label %177, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %177

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  %142 = zext i32 %141 to i33
  %143 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %142, i33 1) #10
  %144 = extractvalue { i33, i1 } %143, 1
  %145 = extractvalue { i33, i1 } %143, 0
  %146 = icmp slt i33 %145, 0
  %147 = or i1 %144, %146
  br i1 %147, label %148, label %149, !prof !2

148:                                              ; preds = %139
  call void @llvm.trap() #10
  unreachable

149:                                              ; preds = %139
  %150 = trunc i33 %145 to i32
  store i32 %150, i32* %140, align 4
  br label %177

151:                                              ; preds = %126
  %152 = bitcast %"class.WTF::String"* %4 to i64*
  %153 = load i64, i64* %152, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  br label %194

154:                                              ; preds = %121
  %155 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink13TrustedScript8toStringEv(%"class.blink::TrustedScript"* %94) #10
  %156 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %155, i64 0, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %158 = ptrtoint %"class.WTF::StringImpl"* %157 to i64
  %159 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %159, label %177, label %160

160:                                              ; preds = %154
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %177

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  %168 = zext i32 %167 to i33
  %169 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %168, i33 1) #10
  %170 = extractvalue { i33, i1 } %169, 1
  %171 = extractvalue { i33, i1 } %169, 0
  %172 = icmp slt i33 %171, 0
  %173 = or i1 %170, %172
  br i1 %173, label %174, label %175, !prof !2

174:                                              ; preds = %165
  call void @llvm.trap() #10
  unreachable

175:                                              ; preds = %165
  %176 = trunc i33 %171 to i32
  store i32 %176, i32* %166, align 4
  br label %177

177:                                              ; preds = %175, %160, %154, %149, %134, %128, %119, %104, %98, %85, %70, %64, %55, %40, %34
  %178 = phi i64 [ %158, %175 ], [ %158, %160 ], [ %158, %154 ], [ %132, %149 ], [ %132, %134 ], [ %132, %128 ], [ %102, %119 ], [ %102, %104 ], [ %102, %98 ], [ %68, %85 ], [ %68, %70 ], [ %68, %64 ], [ %38, %55 ], [ %38, %40 ], [ %38, %34 ]
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %194, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %190

188:                                              ; preds = %181
  %189 = add i32 %187, -1
  store i32 %189, i32* %186, align 4
  br label %190

190:                                              ; preds = %188, %181
  %191 = phi i32 [ %189, %188 ], [ %187, %181 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #10
  br label %194

194:                                              ; preds = %17, %151, %87, %57, %177, %190, %193
  %195 = phi i64 [ %178, %177 ], [ %178, %190 ], [ %178, %193 ], [ %8, %17 ], [ %89, %87 ], [ %153, %151 ], [ %59, %57 ]
  %196 = inttoptr i64 %195 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %196
}

declare zeroext i1 @_ZN5blink17TrustedTypePolicy15HasCreateScriptEv(%"class.blink::TrustedTypePolicy"*) local_unnamed_addr #1

declare %"class.blink::TrustedScript"* @_ZN5blink17TrustedTypePolicy12CreateScriptEPN2v87IsolateERKN3WTF6StringERKNS_10HeapVectorINS_11ScriptValueELj0EEERNS_14ExceptionStateE(%"class.blink::TrustedTypePolicy"*, %"class.v8::Isolate"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::HeapVector.447"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink13TrustedScript8toStringEv(%"class.blink::TrustedScript"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink29TrustedTypesCheckForScriptURLEN3WTF6StringEPKNS_16ExecutionContextERNS_14ExceptionStateE(%"class.WTF::StringImpl"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::HeapVector.447", align 8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %0, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.blink::ExecutionContext"* %1, null
  %8 = ptrtoint %"class.WTF::StringImpl"* %0 to i64
  br i1 %7, label %20, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::ExecutionContext"* %1 to i1 (%"class.blink::ExecutionContext"*)***
  %11 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %11, i64 38
  %13 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::ExecutionContext"* nonnull %1) #10
  br i1 %14, label %15, label %20

15:                                               ; preds = %9
  %16 = tail call zeroext i1 @_ZN5blink21ContentSecurityPolicy21ShouldBypassMainWorldEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* nonnull %1) #10
  %17 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase29is_trusted_dom_types_enabled_E, align 1
  %18 = icmp eq i8 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21

20:                                               ; preds = %15, %3, %9
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  br label %196

21:                                               ; preds = %15
  %22 = bitcast %"class.blink::ExecutionContext"* %1 to %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)***
  %23 = load %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)**, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)** %23, i64 37
  %25 = load %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)** %24, align 8
  %26 = tail call %"class.blink::TrustedTypePolicyFactory"* %25(%"class.blink::ExecutionContext"* nonnull %1) #10
  %27 = icmp eq %"class.blink::TrustedTypePolicyFactory"* %26, null
  br i1 %27, label %35, label %28

28:                                               ; preds = %21
  %29 = load %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)**, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*** %22, align 8
  %30 = getelementptr inbounds %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)** %29, i64 37
  %31 = load %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)** %30, align 8
  %32 = tail call %"class.blink::TrustedTypePolicyFactory"* %31(%"class.blink::ExecutionContext"* nonnull %1) #10
  %33 = tail call %"class.blink::TrustedTypePolicy"* @_ZNK5blink24TrustedTypePolicyFactory13defaultPolicyEv(%"class.blink::TrustedTypePolicyFactory"* %32) #10
  %34 = icmp eq %"class.blink::TrustedTypePolicy"* %33, null
  br i1 %34, label %35, label %63

35:                                               ; preds = %21, %28
  %36 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115TrustedTypeFailENS0_24TrustedTypeViolationKindEPKNS_16ExecutionContextERNS_14ExceptionStateERKN3WTF6StringE(i32 2, %"class.blink::ExecutionContext"* nonnull %1, %"class.blink::ExceptionState"* dereferenceable(72) %2, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  br i1 %36, label %37, label %60

37:                                               ; preds = %35
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = ptrtoint %"class.WTF::StringImpl"* %40 to i64
  %42 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %42, label %179, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %179

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i33
  %52 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %51, i33 1) #10
  %53 = extractvalue { i33, i1 } %52, 1
  %54 = extractvalue { i33, i1 } %52, 0
  %55 = icmp slt i33 %54, 0
  %56 = or i1 %53, %55
  br i1 %56, label %57, label %58, !prof !2

57:                                               ; preds = %48
  call void @llvm.trap() #10
  unreachable

58:                                               ; preds = %48
  %59 = trunc i33 %54 to i32
  store i32 %59, i32* %49, align 4
  br label %179

60:                                               ; preds = %35
  %61 = bitcast %"class.WTF::String"* %4 to i64*
  %62 = load i64, i64* %61, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  br label %196

63:                                               ; preds = %28
  %64 = tail call zeroext i1 @_ZN5blink17TrustedTypePolicy18HasCreateScriptURLEv(%"class.blink::TrustedTypePolicy"* nonnull %33) #10
  br i1 %64, label %93, label %65

65:                                               ; preds = %63
  %66 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115TrustedTypeFailENS0_24TrustedTypeViolationKindEPKNS_16ExecutionContextERNS_14ExceptionStateERKN3WTF6StringE(i32 8, %"class.blink::ExecutionContext"* nonnull %1, %"class.blink::ExceptionState"* dereferenceable(72) %2, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  br i1 %66, label %67, label %90

67:                                               ; preds = %65
  %68 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %68, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = ptrtoint %"class.WTF::StringImpl"* %70 to i64
  %72 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %72, label %179, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %179

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #10
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !2

87:                                               ; preds = %78
  call void @llvm.trap() #10
  unreachable

88:                                               ; preds = %78
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %79, align 4
  br label %179

90:                                               ; preds = %65
  %91 = bitcast %"class.WTF::String"* %4 to i64*
  %92 = load i64, i64* %91, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  br label %196

93:                                               ; preds = %63
  %94 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 0, i32 5
  %95 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %94, align 8
  %96 = bitcast %"class.blink::HeapVector.447"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #10
  %97 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_122GetDefaultCallbackArgsEPN2v87IsolateEPKcRKNS_14ExceptionStateERKN3WTF6StringE(%"class.blink::HeapVector.447"* nonnull sret %5, %"class.v8::Isolate"* %95, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), %"class.blink::ExceptionState"* dereferenceable(72) %2, %"class.WTF::String"* dereferenceable(8) %97)
  %98 = call %"class.blink::TrustedScriptURL"* @_ZN5blink17TrustedTypePolicy15CreateScriptURLEPN2v87IsolateERKN3WTF6StringERKNS_10HeapVectorINS_11ScriptValueELj0EEERNS_14ExceptionStateE(%"class.blink::TrustedTypePolicy"* nonnull %33, %"class.v8::Isolate"* %95, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::HeapVector.447"* nonnull dereferenceable(16) %5, %"class.blink::ExceptionState"* dereferenceable(72) %2) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96) #10
  %99 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %124, label %102

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = ptrtoint %"class.WTF::StringImpl"* %104 to i64
  %106 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %106, label %179, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %179

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = zext i32 %114 to i33
  %116 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %115, i33 1) #10
  %117 = extractvalue { i33, i1 } %116, 1
  %118 = extractvalue { i33, i1 } %116, 0
  %119 = icmp slt i33 %118, 0
  %120 = or i1 %117, %119
  br i1 %120, label %121, label %122, !prof !2

121:                                              ; preds = %112
  call void @llvm.trap() #10
  unreachable

122:                                              ; preds = %112
  %123 = trunc i33 %118 to i32
  store i32 %123, i32* %113, align 4
  br label %179

124:                                              ; preds = %93
  %125 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink16TrustedScriptURL8toStringEv(%"class.blink::TrustedScriptURL"* %98) #10
  %126 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %125, i64 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %129, label %156

129:                                              ; preds = %124
  %130 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115TrustedTypeFailENS0_24TrustedTypeViolationKindEPKNS_16ExecutionContextERNS_14ExceptionStateERKN3WTF6StringE(i32 7, %"class.blink::ExecutionContext"* nonnull %1, %"class.blink::ExceptionState"* dereferenceable(72) %2, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  br i1 %130, label %131, label %153

131:                                              ; preds = %129
  %132 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = ptrtoint %"class.WTF::StringImpl"* %133 to i64
  %135 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %135, label %179, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %179

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i33
  %145 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %144, i33 1) #10
  %146 = extractvalue { i33, i1 } %145, 1
  %147 = extractvalue { i33, i1 } %145, 0
  %148 = icmp slt i33 %147, 0
  %149 = or i1 %146, %148
  br i1 %149, label %150, label %151, !prof !2

150:                                              ; preds = %141
  call void @llvm.trap() #10
  unreachable

151:                                              ; preds = %141
  %152 = trunc i33 %147 to i32
  store i32 %152, i32* %142, align 4
  br label %179

153:                                              ; preds = %129
  %154 = bitcast %"class.WTF::String"* %4 to i64*
  %155 = load i64, i64* %154, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  br label %196

156:                                              ; preds = %124
  %157 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink16TrustedScriptURL8toStringEv(%"class.blink::TrustedScriptURL"* %98) #10
  %158 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %157, i64 0, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %160 = ptrtoint %"class.WTF::StringImpl"* %159 to i64
  %161 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %161, label %179, label %162

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %179

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = zext i32 %169 to i33
  %171 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %170, i33 1) #10
  %172 = extractvalue { i33, i1 } %171, 1
  %173 = extractvalue { i33, i1 } %171, 0
  %174 = icmp slt i33 %173, 0
  %175 = or i1 %172, %174
  br i1 %175, label %176, label %177, !prof !2

176:                                              ; preds = %167
  call void @llvm.trap() #10
  unreachable

177:                                              ; preds = %167
  %178 = trunc i33 %173 to i32
  store i32 %178, i32* %168, align 4
  br label %179

179:                                              ; preds = %177, %162, %156, %151, %136, %131, %122, %107, %102, %88, %73, %67, %58, %43, %37
  %180 = phi i64 [ %160, %177 ], [ %160, %162 ], [ %160, %156 ], [ %134, %151 ], [ %134, %136 ], [ %134, %131 ], [ %105, %122 ], [ %105, %107 ], [ %105, %102 ], [ %71, %88 ], [ %71, %73 ], [ %71, %67 ], [ %41, %58 ], [ %41, %43 ], [ %41, %37 ]
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %182 = icmp eq %"class.WTF::StringImpl"* %181, null
  br i1 %182, label %196, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = and i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  br i1 %187, label %190, label %192

190:                                              ; preds = %183
  %191 = add i32 %189, -1
  store i32 %191, i32* %188, align 4
  br label %192

192:                                              ; preds = %190, %183
  %193 = phi i32 [ %191, %190 ], [ %189, %183 ]
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %192
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %181) #10
  br label %196

196:                                              ; preds = %20, %153, %90, %60, %179, %192, %195
  %197 = phi i64 [ %180, %179 ], [ %180, %192 ], [ %180, %195 ], [ %8, %20 ], [ %92, %90 ], [ %155, %153 ], [ %62, %60 ]
  %198 = inttoptr i64 %197 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %198
}

declare zeroext i1 @_ZN5blink17TrustedTypePolicy18HasCreateScriptURLEv(%"class.blink::TrustedTypePolicy"*) local_unnamed_addr #1

declare %"class.blink::TrustedScriptURL"* @_ZN5blink17TrustedTypePolicy15CreateScriptURLEPN2v87IsolateERKN3WTF6StringERKNS_10HeapVectorINS_11ScriptValueELj0EEERNS_14ExceptionStateE(%"class.blink::TrustedTypePolicy"*, %"class.v8::Isolate"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::HeapVector.447"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink16TrustedScriptURL8toStringEv(%"class.blink::TrustedScriptURL"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink20TrustedTypesCheckForENS_19SpecificTrustedTypeEPKNS_59V8UnionStringOrTrustedHTMLOrTrustedScriptOrTrustedScriptURLEPKNS_16ExecutionContextERNS_14ExceptionStateE(i32, %"class.blink::V8UnionStringOrTrustedHTMLOrTrustedScriptOrTrustedScriptURL"* nocapture readonly, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %"class.blink::V8UnionStringOrTrustedHTMLOrTrustedScriptOrTrustedScriptURL", %"class.blink::V8UnionStringOrTrustedHTMLOrTrustedScriptOrTrustedScriptURL"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %111 [
    i32 0, label %7
    i32 1, label %30
    i32 2, label %57
    i32 3, label %84
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::V8UnionStringOrTrustedHTMLOrTrustedScriptOrTrustedScriptURL", %"class.blink::V8UnionStringOrTrustedHTMLOrTrustedScriptOrTrustedScriptURL"* %1, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #10
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #10
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %7, %11, %26
  %29 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  br label %111

30:                                               ; preds = %4
  %31 = getelementptr inbounds %"class.blink::V8UnionStringOrTrustedHTMLOrTrustedScriptOrTrustedScriptURL", %"class.blink::V8UnionStringOrTrustedHTMLOrTrustedScriptOrTrustedScriptURL"* %1, i64 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::TrustedHTML"*, %"class.blink::TrustedHTML"** %31, align 8
  %33 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink11TrustedHTML8toStringEv(%"class.blink::TrustedHTML"* %32) #10
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #10
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !2

51:                                               ; preds = %42
  tail call void @llvm.trap() #10
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %30, %37, %52
  %55 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %56 = icmp eq i32 %0, 1
  br label %111

57:                                               ; preds = %4
  %58 = getelementptr inbounds %"class.blink::V8UnionStringOrTrustedHTMLOrTrustedScriptOrTrustedScriptURL", %"class.blink::V8UnionStringOrTrustedHTMLOrTrustedScriptOrTrustedScriptURL"* %1, i64 0, i32 4, i32 0, i32 0
  %59 = load %"class.blink::TrustedScript"*, %"class.blink::TrustedScript"** %58, align 8
  %60 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink13TrustedScript8toStringEv(%"class.blink::TrustedScript"* %59) #10
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i33
  %73 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #10
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !2

78:                                               ; preds = %69
  tail call void @llvm.trap() #10
  unreachable

79:                                               ; preds = %69
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %70, align 4
  br label %81

81:                                               ; preds = %57, %64, %79
  %82 = ptrtoint %"class.WTF::StringImpl"* %62 to i64
  %83 = icmp eq i32 %0, 2
  br label %111

84:                                               ; preds = %4
  %85 = getelementptr inbounds %"class.blink::V8UnionStringOrTrustedHTMLOrTrustedScriptOrTrustedScriptURL", %"class.blink::V8UnionStringOrTrustedHTMLOrTrustedScriptOrTrustedScriptURL"* %1, i64 0, i32 5, i32 0, i32 0
  %86 = load %"class.blink::TrustedScriptURL"*, %"class.blink::TrustedScriptURL"** %85, align 8
  %87 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink16TrustedScriptURL8toStringEv(%"class.blink::TrustedScriptURL"* %86) #10
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %87, i64 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %108, label %91

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %108

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = zext i32 %98 to i33
  %100 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %99, i33 1) #10
  %101 = extractvalue { i33, i1 } %100, 1
  %102 = extractvalue { i33, i1 } %100, 0
  %103 = icmp slt i33 %102, 0
  %104 = or i1 %101, %103
  br i1 %104, label %105, label %106, !prof !2

105:                                              ; preds = %96
  tail call void @llvm.trap() #10
  unreachable

106:                                              ; preds = %96
  %107 = trunc i33 %102 to i32
  store i32 %107, i32* %97, align 4
  br label %108

108:                                              ; preds = %84, %91, %106
  %109 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %110 = icmp eq i32 %0, 3
  br label %111

111:                                              ; preds = %4, %108, %81, %54, %28
  %112 = phi i64 [ 0, %4 ], [ %109, %108 ], [ %82, %81 ], [ %55, %54 ], [ %29, %28 ]
  %113 = phi i1 [ false, %4 ], [ %110, %108 ], [ %83, %81 ], [ %56, %54 ], [ false, %28 ]
  %114 = icmp eq i32 %0, 0
  %115 = or i1 %114, %113
  br i1 %115, label %120, label %116

116:                                              ; preds = %111
  %117 = inttoptr i64 %112 to %"class.WTF::StringImpl"*
  %118 = tail call %"class.WTF::StringImpl"* @_ZN5blink20TrustedTypesCheckForENS_19SpecificTrustedTypeEN3WTF6StringEPKNS_16ExecutionContextERNS_14ExceptionStateE(i32 %0, %"class.WTF::StringImpl"* %117, %"class.blink::ExecutionContext"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %119 = ptrtoint %"class.WTF::StringImpl"* %118 to i64
  br label %120

120:                                              ; preds = %116, %111
  %121 = phi i64 [ %119, %116 ], [ %112, %111 ]
  %122 = inttoptr i64 %121 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %122
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink20TrustedTypesCheckForENS_19SpecificTrustedTypeEN3WTF6StringEPKNS_16ExecutionContextERNS_14ExceptionStateE(i32, %"class.WTF::StringImpl"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %5 = ptrtoint %"class.WTF::StringImpl"* %1 to i64
  switch i32 %0, label %15 [
    i32 1, label %6
    i32 2, label %9
    i32 3, label %12
    i32 0, label %53
  ]

6:                                                ; preds = %4
  %7 = tail call %"class.WTF::StringImpl"* @_ZN5blink24TrustedTypesCheckForHTMLEN3WTF6StringEPKNS_16ExecutionContextERNS_14ExceptionStateE(%"class.WTF::StringImpl"* %1, %"class.blink::ExecutionContext"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %8 = ptrtoint %"class.WTF::StringImpl"* %7 to i64
  br label %53

9:                                                ; preds = %4
  %10 = tail call %"class.WTF::StringImpl"* @_ZN5blink26TrustedTypesCheckForScriptEN3WTF6StringEPKNS_16ExecutionContextERNS_14ExceptionStateE(%"class.WTF::StringImpl"* %1, %"class.blink::ExecutionContext"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %11 = ptrtoint %"class.WTF::StringImpl"* %10 to i64
  br label %53

12:                                               ; preds = %4
  %13 = tail call %"class.WTF::StringImpl"* @_ZN5blink29TrustedTypesCheckForScriptURLEN3WTF6StringEPKNS_16ExecutionContextERNS_14ExceptionStateE(%"class.WTF::StringImpl"* %1, %"class.blink::ExecutionContext"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %14 = ptrtoint %"class.WTF::StringImpl"* %13 to i64
  br label %53

15:                                               ; preds = %4
  %16 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = ptrtoint %"class.WTF::StringImpl"* %18 to i64
  %20 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #10
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %26
  tail call void @llvm.trap() #10
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %36, %21, %15
  %39 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #10
  br label %53

53:                                               ; preds = %4, %6, %9, %12, %38, %49, %52
  %54 = phi i64 [ %19, %38 ], [ %19, %49 ], [ %19, %52 ], [ %5, %4 ], [ %8, %6 ], [ %11, %9 ], [ %14, %12 ]
  %55 = inttoptr i64 %54 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %55
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink26TrustedTypesCheckForScriptEPKNS_28V8UnionStringOrTrustedScriptEPKNS_16ExecutionContextERNS_14ExceptionStateE(%"class.blink::V8UnionStringOrTrustedScript"* readonly, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %4 = icmp eq %"class.blink::V8UnionStringOrTrustedScript"* %0, null
  br i1 %4, label %5, label %30

5:                                                ; preds = %3
  %6 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #10
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #10
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %5, %10, %25
  %28 = tail call %"class.WTF::StringImpl"* @_ZN5blink26TrustedTypesCheckForScriptEN3WTF6StringEPKNS_16ExecutionContextERNS_14ExceptionStateE(%"class.WTF::StringImpl"* %8, %"class.blink::ExecutionContext"* %1, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  br label %82

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.blink::V8UnionStringOrTrustedScript", %"class.blink::V8UnionStringOrTrustedScript"* %0, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  switch i32 %32, label %82 [
    i32 0, label %33
    i32 1, label %57
  ]

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.blink::V8UnionStringOrTrustedScript", %"class.blink::V8UnionStringOrTrustedScript"* %0, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #10
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !2

51:                                               ; preds = %42
  tail call void @llvm.trap() #10
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %33, %37, %52
  %55 = tail call %"class.WTF::StringImpl"* @_ZN5blink26TrustedTypesCheckForScriptEN3WTF6StringEPKNS_16ExecutionContextERNS_14ExceptionStateE(%"class.WTF::StringImpl"* %35, %"class.blink::ExecutionContext"* %1, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %56 = ptrtoint %"class.WTF::StringImpl"* %55 to i64
  br label %82

57:                                               ; preds = %30
  %58 = getelementptr inbounds %"class.blink::V8UnionStringOrTrustedScript", %"class.blink::V8UnionStringOrTrustedScript"* %0, i64 0, i32 3, i32 0, i32 0
  %59 = load %"class.blink::TrustedScript"*, %"class.blink::TrustedScript"** %58, align 8
  %60 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink13TrustedScript8toStringEv(%"class.blink::TrustedScript"* %59) #10
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = ptrtoint %"class.WTF::StringImpl"* %62 to i64
  %64 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %82

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #10
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !2

79:                                               ; preds = %70
  tail call void @llvm.trap() #10
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  br label %82

82:                                               ; preds = %30, %80, %65, %57, %54, %27
  %83 = phi i64 [ %29, %27 ], [ %56, %54 ], [ %63, %57 ], [ %63, %65 ], [ %63, %80 ], [ 0, %30 ]
  %84 = inttoptr i64 %83 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %84
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink26TrustedTypesCheckForScriptEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptEPKNS_16ExecutionContextERNS_14ExceptionStateE(%"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"* readonly, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %4 = icmp eq %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"* %0, null
  br i1 %4, label %5, label %30

5:                                                ; preds = %3
  %6 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #10
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #10
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %5, %10, %25
  %28 = tail call %"class.WTF::StringImpl"* @_ZN5blink26TrustedTypesCheckForScriptEN3WTF6StringEPKNS_16ExecutionContextERNS_14ExceptionStateE(%"class.WTF::StringImpl"* %8, %"class.blink::ExecutionContext"* %1, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  br label %82

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript", %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"* %0, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  switch i32 %32, label %82 [
    i32 0, label %33
    i32 1, label %57
  ]

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript", %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"* %0, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #10
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !2

51:                                               ; preds = %42
  tail call void @llvm.trap() #10
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %33, %37, %52
  %55 = tail call %"class.WTF::StringImpl"* @_ZN5blink26TrustedTypesCheckForScriptEN3WTF6StringEPKNS_16ExecutionContextERNS_14ExceptionStateE(%"class.WTF::StringImpl"* %35, %"class.blink::ExecutionContext"* %1, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %56 = ptrtoint %"class.WTF::StringImpl"* %55 to i64
  br label %82

57:                                               ; preds = %30
  %58 = getelementptr inbounds %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript", %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"* %0, i64 0, i32 3, i32 0, i32 0
  %59 = load %"class.blink::TrustedScript"*, %"class.blink::TrustedScript"** %58, align 8
  %60 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink13TrustedScript8toStringEv(%"class.blink::TrustedScript"* %59) #10
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = ptrtoint %"class.WTF::StringImpl"* %62 to i64
  %64 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %82

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #10
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !2

79:                                               ; preds = %70
  tail call void @llvm.trap() #10
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  br label %82

82:                                               ; preds = %30, %80, %65, %57, %54, %27
  %83 = phi i64 [ %29, %27 ], [ %56, %54 ], [ %63, %57 ], [ %63, %65 ], [ %63, %80 ], [ 0, %30 ]
  %84 = inttoptr i64 %83 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %84
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink27GetStringForScriptExecutionEN3WTF6StringENS_17ScriptElementBase4TypeEPNS_16ExecutionContextE(%"class.WTF::StringImpl"*, i32, %"class.blink::ExecutionContext"*) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = icmp eq %"class.WTF::StringImpl"* %0, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #10
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #10
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = icmp eq i32 %1, 1
  %26 = select i1 %25, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.25, i64 0, i64 0)
  %27 = icmp eq i32 %1, 0
  %28 = select i1 %27, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.39, i64 0, i64 0), i8* %26
  %29 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_125GetStringFromScriptHelperEN3WTF6StringEPNS_16ExecutionContextEPKcS6_NS0_24TrustedTypeViolationKindES7_(%"class.WTF::StringImpl"* %0, %"class.blink::ExecutionContext"* %2, i8* %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i32 11, i32 12)
  br i1 %6, label %53, label %30

30:                                               ; preds = %24
  %31 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %31, label %32, label %40

32:                                               ; preds = %30
  %33 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #10
  store i32 7, i32* %4, align 4
  %34 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #10
  store i32 3, i32* %5, align 4
  %35 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA120_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %5, [120 x i8]* nonnull dereferenceable(120) @_ZN5blink12_GLOBAL__N_145kScriptExecutionTrustedTypeFailConsoleMessageE) #10
  %36 = bitcast %"class.blink::ExecutionContext"* %2 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %37 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %37, i64 52
  %39 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %38, align 8
  call void %39(%"class.blink::ExecutionContext"* %2, %"class.blink::ConsoleMessage"* %35, i1 zeroext false) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #10
  br label %40

40:                                               ; preds = %30, %32
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %0) #10
  br label %53

53:                                               ; preds = %24, %49, %52
  ret %"class.WTF::StringImpl"* %29
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_125GetStringFromScriptHelperEN3WTF6StringEPNS_16ExecutionContextEPKcS6_NS0_24TrustedTypeViolationKindES7_(%"class.WTF::StringImpl"*, %"class.blink::ExecutionContext"*, i8*, i8*, i32, i32) unnamed_addr #0 {
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.v8::HandleScope", align 8
  %9 = alloca %"class.blink::ScriptState::Scope", align 8
  %10 = alloca %"class.blink::ExceptionState", align 8
  %11 = alloca %"class.blink::HeapVector.447", align 8
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %0, %"class.WTF::StringImpl"** %12, align 8
  %13 = icmp eq %"class.blink::ExecutionContext"* %1, null
  %14 = ptrtoint %"class.WTF::StringImpl"* %0 to i64
  br i1 %13, label %15, label %16

15:                                               ; preds = %6
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  br label %171

16:                                               ; preds = %6
  %17 = bitcast %"class.blink::ExecutionContext"* %1 to i1 (%"class.blink::ExecutionContext"*)***
  %18 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %18, i64 38
  %20 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::ExecutionContext"* nonnull %1) #10
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  %23 = tail call zeroext i1 @_ZN5blink21ContentSecurityPolicy21ShouldBypassMainWorldEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* nonnull %1) #10
  br i1 %23, label %24, label %25

24:                                               ; preds = %22, %16
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  br label %171

25:                                               ; preds = %22
  %26 = bitcast %"class.v8::HandleScope"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #10
  %27 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 0, i32 5
  %28 = bitcast %"class.v8::HandleScope"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  %29 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %27, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %8, %"class.v8::Isolate"* %29) #10
  %30 = bitcast %"class.blink::ScriptState::Scope"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #10
  %31 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %9, i64 0, i32 1, i32 0
  %32 = bitcast %"class.blink::ScriptState::Scope"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %33 = call dereferenceable(32) %"class.blink::DOMWrapperWorld"* @_ZN5blink15DOMWrapperWorld9MainWorldEv() #10
  %34 = call %"class.blink::ScriptState"* @_ZN5blink13ToScriptStateEPNS_16ExecutionContextERNS_15DOMWrapperWorldE(%"class.blink::ExecutionContext"* nonnull %1, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %33) #10
  %35 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %9, i64 0, i32 0
  %36 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %34, i64 0, i32 0
  %37 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %36, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %35, %"class.v8::Isolate"* %37) #10
  %38 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %34, i64 0, i32 1, i32 0, i32 0, i32 0
  %39 = load %"class.v8::Context"*, %"class.v8::Context"** %38, align 8
  %40 = icmp eq %"class.v8::Context"* %39, null
  br i1 %40, label %48, label %41

41:                                               ; preds = %25
  %42 = bitcast %"class.blink::ScriptState"* %34 to %"class.v8::internal::Isolate"**
  %43 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %42, align 8
  %44 = bitcast %"class.v8::Context"* %39 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %43, i64 %45) #10
  %47 = bitcast i64* %46 to %"class.v8::Context"*
  br label %48

48:                                               ; preds = %25, %41
  %49 = phi %"class.v8::Context"* [ %47, %41 ], [ null, %25 ]
  store %"class.v8::Context"* %49, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %49) #10
  %50 = bitcast %"class.blink::ExceptionState"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %50) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 56, i1 false)
  %51 = bitcast %"class.v8::Isolate"** %27 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %54 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 1, i32 0
  store i16 1, i16* %54, align 8
  %55 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 1, i32 1
  store i16 0, i16* %55, align 2
  %56 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 1, i32 2
  store i8* %2, i8** %56, align 8
  %57 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 1, i32 3
  store i8* %3, i8** %57, align 8
  %58 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %58, align 8
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 3
  %60 = bitcast %"class.v8::Isolate"** %59 to i64*
  store i64 %52, i64* %60, align 8
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 4
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 5, i32 0, i32 0
  %63 = bitcast %"class.WTF::StringImpl"** %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #10
  %64 = bitcast %"class.blink::ExecutionContext"* %1 to %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)***
  %65 = load %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)**, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*** %64, align 8
  %66 = getelementptr inbounds %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)** %65, i64 37
  %67 = load %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)** %66, align 8
  %68 = call %"class.blink::TrustedTypePolicyFactory"* %67(%"class.blink::ExecutionContext"* nonnull %1) #10
  %69 = icmp eq %"class.blink::TrustedTypePolicyFactory"* %68, null
  br i1 %69, label %77, label %70

70:                                               ; preds = %48
  %71 = load %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)**, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*** %64, align 8
  %72 = getelementptr inbounds %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)** %71, i64 37
  %73 = load %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)*, %"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)** %72, align 8
  %74 = call %"class.blink::TrustedTypePolicyFactory"* %73(%"class.blink::ExecutionContext"* nonnull %1) #10
  %75 = call %"class.blink::TrustedTypePolicy"* @_ZNK5blink24TrustedTypePolicyFactory13defaultPolicyEv(%"class.blink::TrustedTypePolicyFactory"* %74) #10
  %76 = icmp eq %"class.blink::TrustedTypePolicy"* %75, null
  br i1 %76, label %77, label %83

77:                                               ; preds = %48, %70
  %78 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115TrustedTypeFailENS0_24TrustedTypeViolationKindEPKNS_16ExecutionContextERNS_14ExceptionStateERKN3WTF6StringE(i32 %4, %"class.blink::ExecutionContext"* nonnull %1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %10, %"class.WTF::String"* nonnull dereferenceable(8) %7)
  br i1 %78, label %79, label %80

79:                                               ; preds = %77
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %10) #10
  br label %124

80:                                               ; preds = %77
  %81 = bitcast %"class.WTF::String"* %7 to i64*
  %82 = load i64, i64* %81, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  br label %124

83:                                               ; preds = %70
  %84 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %27, align 8
  %85 = bitcast %"class.blink::HeapVector.447"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85) #10
  call fastcc void @_ZN5blink12_GLOBAL__N_122GetDefaultCallbackArgsEPN2v87IsolateEPKcRKNS_14ExceptionStateERKN3WTF6StringE(%"class.blink::HeapVector.447"* nonnull sret %11, %"class.v8::Isolate"* %84, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), %"class.blink::ExceptionState"* nonnull dereferenceable(72) %10, %"class.WTF::String"* nonnull dereferenceable(8) %7)
  %86 = call %"class.blink::TrustedScript"* @_ZN5blink17TrustedTypePolicy12CreateScriptEPN2v87IsolateERKN3WTF6StringERKNS_10HeapVectorINS_11ScriptValueELj0EEERNS_14ExceptionStateE(%"class.blink::TrustedTypePolicy"* nonnull %75, %"class.v8::Isolate"* %84, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.blink::HeapVector.447"* nonnull dereferenceable(16) %11, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %10) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #10
  %87 = load i32, i32* %61, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %90, label %89

89:                                               ; preds = %83
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %10) #10
  br label %124

90:                                               ; preds = %83
  %91 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink13TrustedScript8toStringEv(%"class.blink::TrustedScript"* %86) #10
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %91, i64 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %101

95:                                               ; preds = %90
  %96 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115TrustedTypeFailENS0_24TrustedTypeViolationKindEPKNS_16ExecutionContextERNS_14ExceptionStateERKN3WTF6StringE(i32 %5, %"class.blink::ExecutionContext"* nonnull %1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %10, %"class.WTF::String"* nonnull dereferenceable(8) %7)
  br i1 %96, label %97, label %98

97:                                               ; preds = %95
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %10) #10
  br label %124

98:                                               ; preds = %95
  %99 = bitcast %"class.WTF::String"* %7 to i64*
  %100 = load i64, i64* %99, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  br label %124

101:                                              ; preds = %90
  %102 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink13TrustedScript8toStringEv(%"class.blink::TrustedScript"* %86) #10
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %102, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = ptrtoint %"class.WTF::StringImpl"* %104 to i64
  %106 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %106, label %124, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %124

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = zext i32 %114 to i33
  %116 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %115, i33 1) #10
  %117 = extractvalue { i33, i1 } %116, 1
  %118 = extractvalue { i33, i1 } %116, 0
  %119 = icmp slt i33 %118, 0
  %120 = or i1 %117, %119
  br i1 %120, label %121, label %122, !prof !2

121:                                              ; preds = %112
  call void @llvm.trap() #10
  unreachable

122:                                              ; preds = %112
  %123 = trunc i33 %118 to i32
  store i32 %123, i32* %113, align 4
  br label %124

124:                                              ; preds = %122, %107, %101, %89, %97, %98, %80, %79
  %125 = phi i64 [ 0, %79 ], [ %82, %80 ], [ 0, %89 ], [ 0, %97 ], [ %100, %98 ], [ %105, %101 ], [ %105, %107 ], [ %105, %122 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %126 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %127 = load i64*, i64** %126, align 8
  %128 = icmp eq i64* %127, null
  br i1 %128, label %138, label %129

129:                                              ; preds = %124
  %130 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %59, align 8
  %131 = bitcast %"class.v8::Isolate"* %130 to %"class.v8::internal::Isolate"*
  %132 = load i64, i64* %127, align 8
  %133 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %131, i64 %132) #10
  %134 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %130) #10
  br i1 %134, label %138, label %135

135:                                              ; preds = %129
  %136 = bitcast i64* %133 to %"class.v8::Value"*
  %137 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %130, %"class.v8::Value"* %136) #10
  br label %138

138:                                              ; preds = %135, %129, %124
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #10
  br label %154

154:                                              ; preds = %153, %150, %138
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %50) #10
  %155 = load %"class.v8::Context"*, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %155) #10
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %35) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #10
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #10
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #10
  br label %171

171:                                              ; preds = %15, %24, %154, %167, %170
  %172 = phi i64 [ %125, %154 ], [ %125, %167 ], [ %125, %170 ], [ %14, %24 ], [ %14, %15 ]
  %173 = inttoptr i64 %172 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %173
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink45TrustedTypesCheckForJavascriptURLinNavigationEN3WTF6StringEPNS_16ExecutionContextE(%"class.WTF::StringImpl"*, %"class.blink::ExecutionContext"*) local_unnamed_addr #0 {
  %3 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_125GetStringFromScriptHelperEN3WTF6StringEPNS_16ExecutionContextEPKcS6_NS0_24TrustedTypeViolationKindES7_(%"class.WTF::StringImpl"* %0, %"class.blink::ExecutionContext"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i32 9, i32 10)
  ret %"class.WTF::StringImpl"* %3
}

declare %"class.blink::TrustedTypePolicy"* @_ZNK5blink24TrustedTypePolicyFactory13defaultPolicyEv(%"class.blink::TrustedTypePolicyFactory"*) local_unnamed_addr #1

declare void @_ZN5blink24TrustedTypePolicyFactory31CountTrustedTypeAssignmentErrorEv(%"class.blink::TrustedTypePolicyFactory"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_115GetSamplePrefixERKNS_14ExceptionStateERKN3WTF6StringE(%"class.blink::ExceptionState"* nocapture readonly dereferenceable(72), %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %3 = alloca %"class.WTF::StringBuilder", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 1, i32 2
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %0, i64 0, i32 1, i32 3
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast %"class.WTF::StringBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 48, i1 false)
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 1
  %18 = bitcast %union.anon.1823* %17 to i8*
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 2
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 3
  store i8 1, i8* %20, align 4
  %21 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 4
  store i8 0, i8* %21, align 1
  %22 = icmp eq i8* %12, null
  br i1 %22, label %101, label %23

23:                                               ; preds = %2
  %24 = tail call i32 @strcmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i8* nonnull %12) #11
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %48

26:                                               ; preds = %23
  %27 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  %28 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #10
  %29 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %30 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.26, i64 0, i64 0), i8** %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 19, i32* %32, align 8
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %26
  %37 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %34, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #10
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br i1 %37, label %41, label %39

39:                                               ; preds = %36, %26
  %40 = phi i64 [ %38, %36 ], [ %29, %26 ]
  br label %41

41:                                               ; preds = %36, %39
  %42 = phi i8* [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), %39 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), %36 ]
  %43 = phi i64 [ %40, %39 ], [ %38, %36 ]
  %44 = phi i32 [ 4, %39 ], [ 8, %36 ]
  %45 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* %42, i8** %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %44, i32* %47, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  br label %101

48:                                               ; preds = %23
  %49 = tail call i32 @strcmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i8* nonnull %12) #11
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %48
  %52 = tail call i32 @strcmp(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8* nonnull %12) #11
  %53 = icmp eq i32 %52, 0
  %54 = icmp eq i8* %14, null
  %55 = and i1 %54, %53
  br i1 %55, label %58, label %74

56:                                               ; preds = %48
  %57 = icmp eq i8* %14, null
  br i1 %57, label %58, label %75

58:                                               ; preds = %51, %56
  %59 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #10
  %60 = tail call i64 @strlen(i8* nonnull %12) #11
  %61 = icmp ult i64 %60, 4294967296
  br i1 %61, label %63, label %62, !prof !9

62:                                               ; preds = %58
  tail call void @llvm.trap() #10
  unreachable

63:                                               ; preds = %58
  %64 = trunc i64 %60 to i32
  %65 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %66 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* %12, i8** %67, align 8
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %64, i32* %68, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #10
  %69 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #10
  %70 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %71 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8** %72, align 8
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 12, i32* %73, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #10
  br label %101

74:                                               ; preds = %51
  br i1 %54, label %101, label %75

75:                                               ; preds = %74, %56
  %76 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #10
  %77 = tail call i64 @strlen(i8* nonnull %12) #11
  %78 = icmp ult i64 %77, 4294967296
  br i1 %78, label %80, label %79, !prof !9

79:                                               ; preds = %75
  tail call void @llvm.trap() #10
  unreachable

80:                                               ; preds = %75
  %81 = trunc i64 %77 to i32
  %82 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %83 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* %12, i8** %84, align 8
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %81, i32* %85, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #10
  %86 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #10
  %87 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %88 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i8** %89, align 8
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 1, i32* %90, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #10
  %91 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #10
  %92 = call i64 @strlen(i8* nonnull %14) #11
  %93 = icmp ult i64 %92, 4294967296
  br i1 %93, label %95, label %94, !prof !9

94:                                               ; preds = %80
  call void @llvm.trap() #10
  unreachable

95:                                               ; preds = %80
  %96 = trunc i64 %92 to i32
  %97 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %98 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* %14, i8** %99, align 8
  %100 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %96, i32* %100, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #10
  br label %101

101:                                              ; preds = %74, %2, %41, %95, %63
  %102 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %3) #10
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %3) #10
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #10
  br label %118

118:                                              ; preds = %101, %114, %117
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15) #10
  ret %"class.WTF::StringImpl"* %102
}

declare %"class.blink::ContentSecurityPolicy"* @_ZNK5blink16ExecutionContext24GetContentSecurityPolicyEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink21ContentSecurityPolicy33AllowTrustedTypeAssignmentFailureERKN3WTF6StringES4_S4_(%"class.blink::ContentSecurityPolicy"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

declare void @_ZN5blink21ContentSecurityPolicy12LogToConsoleEPNS_14ConsoleMessageEPNS_10LocalFrameE(%"class.blink::ContentSecurityPolicy"*, %"class.blink::ConsoleMessage"*, %"class.blink::LocalFrame"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !10
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #10
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #10
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #10
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #10
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #10
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA194_KcEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), [194 x i8]* dereferenceable(194)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #10
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds [194 x i8], [194 x i8]* %2, i64 0, i64 0
  %11 = icmp eq [194 x i8]* %2, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call i64 @strlen(i8* nonnull %10) #11
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i64 [ %13, %12 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %10, i64 %15) #10
  %16 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #10
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %16) #10
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #10
  br label %33

33:                                               ; preds = %14, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %34 = getelementptr inbounds i8, i8* %5, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #8

declare void @_ZN5blink5probe36OnContentSecurityPolicyViolationImplEPNS_16ExecutionContextENS_21ContentSecurityPolicy34ContentSecurityPolicyViolationTypeE(%"class.blink::ExecutionContext"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.30, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0)) #10
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.30, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i64 0, i64 0)) #10
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptValue"* @_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8*, %"class.blink::ScriptValue"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"class.blink::ScriptValue"*
  %4 = bitcast %"class.blink::ScriptValue"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast i8* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = bitcast i8* %7 to %"class.blink::TraceWrapperV8Reference"*
  %9 = bitcast i8* %7 to i64**
  store i64* null, i64** %9, align 8
  %10 = icmp eq %"class.blink::ScriptValue"* %3, %1
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %12, i64** %9) #10
  br label %16

16:                                               ; preds = %15, %11, %2
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %8) #10
  %17 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %1, i64 0, i32 1, i32 1, i32 0
  %18 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %17, align 8
  %19 = getelementptr inbounds i8, i8* %0, i64 16
  %20 = bitcast i8* %19 to %"class.blink::DOMWrapperWorld"**
  store %"class.blink::DOMWrapperWorld"* %18, %"class.blink::DOMWrapperWorld"** %20, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %18, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %18, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #10
  br label %24

24:                                               ; preds = %16, %22
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %54, label %27

27:                                               ; preds = %24
  %28 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %29 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %28, i64 0, i32 1
  %30 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %29) #10
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %34, !prof !2

32:                                               ; preds = %27
  %33 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %29, i8* %33) #10
  br label %34

34:                                               ; preds = %32, %27
  %35 = phi i8* [ %33, %32 ], [ %30, %27 ]
  %36 = bitcast i8* %35 to %"class.blink::ThreadState"**
  %37 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 9
  %39 = load i8, i8* %38, align 1, !range !10
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 13
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %42, align 8
  %45 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %46, i64 0, i32 0, i32 0
  %48 = bitcast %"class.blink::MarkingVisitor"* %46 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)***
  %49 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)** %49, i64 7
  %51 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)** %50, align 8
  tail call void %51(%"class.blink::Visitor"* %47, %"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %8) #10
  %52 = load i64, i64* %42, align 8
  %53 = add i64 %52, -1
  store i64 %53, i64* %42, align 8
  br label %54

54:                                               ; preds = %24, %34, %41
  ret %"class.blink::ScriptValue"* %3
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.450"*, %"class.blink::ScriptValue"* dereferenceable(24)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.450", %"class.WTF::Vector.450"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.450", %"class.WTF::Vector.450"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %6, align 8
  %8 = icmp ugt %"class.blink::ScriptValue"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 %10
  %12 = icmp ugt %"class.blink::ScriptValue"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.450", %"class.WTF::Vector.450"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.450"* %0, i32 %22) #10
  %23 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::ScriptValue"* %1 to i64
  %26 = ptrtoint %"class.blink::ScriptValue"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = sdiv exact i64 %27, 24
  %29 = getelementptr inbounds %"class.WTF::Vector.450", %"class.WTF::Vector.450"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.450"* %0, i32 %37) #10
  %38 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::ScriptValue"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::ScriptValue"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %41, i64 %44
  %46 = bitcast %"class.blink::ScriptValue"* %45 to i8*
  %47 = tail call %"class.blink::ScriptValue"* @_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %46, %"class.blink::ScriptValue"* dereferenceable(24) %42)
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %3, align 4
  ret void
}

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #1

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.450"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.450", %"class.WTF::Vector.450"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.450", %"class.WTF::Vector.450"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %8, align 8
  %10 = icmp eq %"class.blink::ScriptValue"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_11ScriptValueEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = udiv i64 %12, 24
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.450"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %8, align 8
  %26 = icmp eq %"class.blink::ScriptValue"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::ScriptValue"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = udiv i64 %12, 24
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !10
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.33, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.34, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.450"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.450"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %15

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.450", %"class.WTF::Vector.450"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.450", %"class.WTF::Vector.450"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.450"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.450", %"class.WTF::Vector.450"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink11ScriptValueENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::ScriptValue"* %6, %"class.blink::ScriptValue"* %10, %"class.blink::ScriptValue"* null, i1 zeroext true) #10
  %13 = bitcast %"class.blink::ScriptValue"* %6 to i8*
  %14 = mul nuw nsw i64 %9, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %13, i64 %14) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %13) #10
  br label %42

15:                                               ; preds = %2
  %16 = zext i32 %1 to i64
  %17 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_11ScriptValueEEEmm(i64 %16) #10
  %18 = udiv i64 %17, 24
  %19 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %18) #10
  %20 = bitcast %"class.blink::HeapVectorBacking"* %19 to %"class.blink::ScriptValue"*
  %21 = ptrtoint %"class.blink::HeapVectorBacking"* %19 to i64
  %22 = getelementptr inbounds %"class.WTF::Vector.450", %"class.WTF::Vector.450"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %22, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.450", %"class.WTF::Vector.450"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %23, i64 %26
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink11ScriptValueENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::ScriptValue"* %23, %"class.blink::ScriptValue"* %27, %"class.blink::ScriptValue"* %20, i1 zeroext false) #10
  %28 = bitcast %"class.WTF::Vector.450"* %0 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = load i32, i32* %24, align 4
  %31 = zext i32 %30 to i64
  %32 = mul nuw nsw i64 %31, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %29, i64 %32) #10
  %33 = load i8*, i8** %28, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %33) #10
  %34 = bitcast %"class.WTF::Vector.450"* %0 to i64*
  store atomic i64 %21, i64* %34 monotonic, align 8
  %35 = trunc i64 %18 to i32
  %36 = getelementptr inbounds %"class.WTF::Vector.450", %"class.WTF::Vector.450"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %35, i32* %36, align 8
  %37 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %15
  %40 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %19, i64 0, i32 0
  %41 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %40) #10
  br label %42

42:                                               ; preds = %39, %15, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_11ScriptValueEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 5592405
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 5592405) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.35, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.36, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = mul i64 %0, 24
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.37, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.38, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = mul i64 %0, 24
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([132 x i8], [132 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_11ScriptValueENS_12VectorTraitsIS3_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #10
  br i1 %28, label %62, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::ScriptValue"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !2

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = udiv i64 %49, 24
  %51 = icmp ugt i64 %49, 23
  br i1 %51, label %52, label %62

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)***
  br label %54

54:                                               ; preds = %54, %52
  %55 = phi i64 [ 0, %52 ], [ %60, %54 ]
  %56 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %30, i64 %55, i32 1, i32 0
  %57 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)*** %53, align 8
  %58 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)** %57, i64 7
  %59 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)** %58, align 8
  tail call void %59(%"class.blink::Visitor"* %0, %"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %56) #10
  %60 = add nuw nsw i64 %55, 1
  %61 = icmp ult i64 %60, %50
  br i1 %61, label %54, label %62

62:                                               ; preds = %54, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 24
  %22 = bitcast i8* %0 to %"class.blink::ScriptValue"*
  %23 = icmp ugt i64 %20, 23
  br i1 %23, label %24, label %41

24:                                               ; preds = %18, %37
  %25 = phi i64 [ %39, %37 ], [ 0, %18 ]
  %26 = phi i32 [ %38, %37 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %22, i64 %25, i32 1, i32 1, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = icmp eq %"class.blink::DOMWrapperWorld"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %31) #10
  %32 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %28) #10
  %36 = bitcast %"class.blink::DOMWrapperWorld"* %28 to i8*
  tail call void @free(i8* %36) #10
  br label %37

37:                                               ; preds = %35, %30, %24
  %38 = add i32 %26, 1
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %21, %39
  br i1 %40, label %24, label %41

41:                                               ; preds = %37, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11VectorMoverILb0EN5blink11ScriptValueENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::ScriptValue"*, %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq %"class.blink::ScriptValue"* %0, %1
  br i1 %5, label %74, label %6

6:                                                ; preds = %4, %70
  %7 = phi %"class.blink::ScriptValue"* [ %72, %70 ], [ %0, %4 ]
  %8 = phi %"class.blink::ScriptValue"* [ %71, %70 ], [ %2, %4 ]
  %9 = bitcast %"class.blink::ScriptValue"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.blink::ScriptValue"* %8 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %12, i64 0, i32 0
  %14 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %14, align 8
  %15 = icmp eq %"class.blink::ScriptValue"* %8, %7
  br i1 %15, label %21, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = icmp eq i64* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %17, i64** %14) #10
  br label %21

21:                                               ; preds = %20, %16, %6
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %13) #10
  %22 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 1, i32 1, i32 0
  %23 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %23, %"class.blink::DOMWrapperWorld"** %24, align 8
  %25 = icmp eq %"class.blink::DOMWrapperWorld"* %23, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %23, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %27) #10
  br label %28

28:                                               ; preds = %21, %26
  br i1 %3, label %29, label %60

29:                                               ; preds = %28
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %60, label %32

32:                                               ; preds = %29
  %33 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %34 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %33, i64 0, i32 1
  %35 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %34) #10
  %36 = icmp eq i8* %35, null
  br i1 %36, label %37, label %39, !prof !2

37:                                               ; preds = %32
  %38 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %34, i8* %38) #10
  br label %39

39:                                               ; preds = %37, %32
  %40 = phi i8* [ %38, %37 ], [ %35, %32 ]
  %41 = bitcast i8* %40 to %"class.blink::ThreadState"**
  %42 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %42, i64 0, i32 9
  %44 = load i8, i8* %43, align 1, !range !10
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %60, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %42, i64 0, i32 13
  %48 = load i64, i64* %47, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %47, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %42, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %51 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %51, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1, i32 0
  %54 = bitcast %"class.blink::MarkingVisitor"* %51 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)***
  %55 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)** %55, i64 7
  %57 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)** %56, align 8
  tail call void %57(%"class.blink::Visitor"* %52, %"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %53) #10
  %58 = load i64, i64* %47, align 8
  %59 = add i64 %58, -1
  store i64 %59, i64* %47, align 8
  br label %60

60:                                               ; preds = %46, %39, %29, %28
  %61 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %22, align 8
  %62 = icmp eq %"class.blink::DOMWrapperWorld"* %61, null
  br i1 %62, label %70, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %61, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %64) #10
  %65 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %63
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %61) #10
  %69 = bitcast %"class.blink::DOMWrapperWorld"* %61 to i8*
  tail call void @free(i8* %69) #10
  br label %70

70:                                               ; preds = %60, %63, %68
  %71 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 1
  %72 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 1
  %73 = icmp eq %"class.blink::ScriptValue"* %72, %1
  br i1 %73, label %74, label %6

74:                                               ; preds = %70, %4
  ret void
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr.453, %class.scoped_refptr.453* %4, i64 0, i32 0
  %6 = icmp eq %"class.v8::Value"* %2, null
  %7 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  br i1 %6, label %61, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::Value"* %2 to i64*
  %11 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  %13 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %11, i64* nonnull %10, i64* %12, i1 zeroext false) #10
  %14 = ptrtoint i64* %13 to i64
  store atomic i64 %14, i64* %12 monotonic, align 8
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %9) #10
  %15 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #10
  br i1 %15, label %16, label %38

16:                                               ; preds = %8
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #10
  %18 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %17) #10
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %18, i64 0, i32 2, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #10
  br label %24

24:                                               ; preds = %22, %16
  %25 = ptrtoint %"class.blink::DOMWrapperWorld"* %20 to i64
  %26 = bitcast %class.scoped_refptr.453* %4 to i64*
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %25, i64* %26, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #10
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #10
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #10
  br label %36

36:                                               ; preds = %24, %29, %34
  %37 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  tail call void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32) %37, %"class.v8::Value"* nonnull %2) #10
  br label %61

38:                                               ; preds = %8
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %2) #10
  br i1 %39, label %40, label %61

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %42 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* nonnull %41) #10
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %42)
  %44 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %43, i64 0, i32 2, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #10
  br label %49

49:                                               ; preds = %47, %40
  %50 = ptrtoint %"class.blink::DOMWrapperWorld"* %45 to i64
  %51 = bitcast %class.scoped_refptr.453* %4 to i64*
  %52 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %50, i64* %51, align 8
  %53 = icmp eq %"class.blink::DOMWrapperWorld"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #10
  %56 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %52) #10
  %60 = bitcast %"class.blink::DOMWrapperWorld"* %52 to i8*
  tail call void @free(i8* %60) #10
  br label %61

61:                                               ; preds = %59, %54, %49, %38, %3, %36
  ret void
}

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #1

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #7 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #10
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #10
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #10
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !2

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #10
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #10
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #10
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.blink::ScriptState"* @_ZN5blink13ToScriptStateEPNS_16ExecutionContextERNS_15DOMWrapperWorldE(%"class.blink::ExecutionContext"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #1

declare dereferenceable(32) %"class.blink::DOMWrapperWorld"* @_ZN5blink15DOMWrapperWorld9MainWorldEv() local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #8

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #1

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA120_KcEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), [120 x i8]* dereferenceable(120)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #10
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds [120 x i8], [120 x i8]* %2, i64 0, i64 0
  %11 = icmp eq [120 x i8]* %2, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call i64 @strlen(i8* nonnull %10) #11
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i64 [ %13, %12 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %10, i64 %15) #10
  %16 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #10
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %16) #10
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #10
  br label %33

33:                                               ; preds = %14, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %34 = getelementptr inbounds i8, i8* %5, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink11ScriptValue4FromIRPKcEES0_PNS_11ScriptStateEOT_: argument 0"}
!5 = distinct !{!5, !"_ZN5blink11ScriptValue4FromIRPKcEES0_PNS_11ScriptStateEOT_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink11ScriptValue4FromIN3WTF6StringEEES0_PNS_11ScriptStateEOT_: argument 0"}
!8 = distinct !{!8, !"_ZN5blink11ScriptValue4FromIN3WTF6StringEEES0_PNS_11ScriptStateEOT_"}
!9 = !{!"branch_weights", i32 2000, i32 1}
!10 = !{i8 0, i8 2}
