; ModuleID = '../../v8/src/execution/microtask-queue.cc'
source_filename = "../../v8/src/execution/microtask-queue.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.975" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.975" = type { %"class.std::__1::__vector_base.976" }
%"class.std::__1::__vector_base.976" = type { %"struct.std::__1::pair.956"*, %"struct.std::__1::pair.956"*, %"class.std::__1::__compressed_pair.977" }
%"struct.std::__1::pair.956" = type { void (%"class.v8::Isolate"*, i8*)*, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"struct.std::__1::pair.956"* }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.815", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.828", void (i32, %"class.v8::SharedArrayBuffer"*, i64, i64, double, %"class.v8::Isolate::AtomicsWaitWakeHandle"*, i8*)*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.838", void (%"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::Object"*)*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.849", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.924", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.967"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.979", i32, i8, i8, i32, i32, %"class.std::__1::vector.985", %"class.std::__1::vector.985", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.992", i64, %"class.std::__1::unordered_map.993", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1049", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1087", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Value"* (%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Array"*)*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1121", %"class.std::__1::vector.1125", %"class.std::__1::vector.1125", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1054", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1058", %"class.std::__1::unique_ptr.1064", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1070", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1054" = type { %"struct.std::__1::__atomic_base.1055" }
%"struct.std::__1::__atomic_base.1055" = type { %"struct.std::__1::__cxx_atomic_impl.1056" }
%"struct.std::__1::__cxx_atomic_impl.1056" = type { %"struct.std::__1::__cxx_atomic_base_impl.1057" }
%"struct.std::__1::__cxx_atomic_base_impl.1057" = type { i32 }
%"class.std::__1::unique_ptr.1058" = type { %"class.std::__1::__compressed_pair.1059" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.808" }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { i64**, i64**, %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { i64** }
%"class.std::__1::unique_ptr.1064" = type { %"class.std::__1::__compressed_pair.1065" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.1066" }
%"struct.std::__1::__compressed_pair_elem.1066" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.808", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1070" = type { %"class.std::__1::__vector_base.1071" }
%"class.std::__1::__vector_base.1071" = type { %"struct.std::__1::pair.1072"*, %"struct.std::__1::pair.1072"*, %"class.std::__1::__compressed_pair.1073" }
%"struct.std::__1::pair.1072" = type opaque
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.1074" }
%"struct.std::__1::__compressed_pair_elem.1074" = type { %"struct.std::__1::pair.1072"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1152" }
%"class.std::__1::__compressed_pair.1152" = type { %"struct.std::__1::__compressed_pair_elem.1153" }
%"struct.std::__1::__compressed_pair_elem.1153" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.744", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.750", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.750", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.750" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.752", %"class.std::__1::vector.758", %"class.std::__1::unique_ptr.765", %"class.std::__1::vector.772", %"class.std::__1::unique_ptr.779", i64, %"class.std::__1::vector.785", %"class.std::__1::vector.793", %"class.std::__1::vector.801", i8, i8, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.760" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandles::NodeSpace.768"* }
%"class.v8::internal::GlobalHandles::NodeSpace.768" = type opaque
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.774" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.std::__1::pair.787"*, %"struct.std::__1::pair.787"*, %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::pair.787" = type opaque
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::pair.787"* }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.808", %"class.std::__1::vector.815" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i32*, i32*, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.828" = type { %"struct.std::__1::__atomic_base.829" }
%"struct.std::__1::__atomic_base.829" = type { %"struct.std::__1::__cxx_atomic_impl.830" }
%"struct.std::__1::__cxx_atomic_impl.830" = type { %"struct.std::__1::__cxx_atomic_base_impl.831" }
%"struct.std::__1::__cxx_atomic_base_impl.831" = type { i32 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::Isolate::AtomicsWaitWakeHandle" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.v8::Context" = type { i8 }
%"class.v8::Module" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.845 }
%union.anon.845 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.875", %"class.v8::internal::Handle.881", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.882", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.881" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.883", %"class.std::__1::vector.889", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"struct.std::__1::pair.923" }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.std::__1::unique_ptr.891"*, %"class.std::__1::unique_ptr.891"*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::unique_ptr.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::unique_ptr.891"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"struct.std::__1::pair.917"*, %"struct.std::__1::pair.917"*, %"class.std::__1::__compressed_pair.918" }
%"struct.std::__1::pair.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::pair.917"* }
%"struct.std::__1::pair.923" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.927", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.962" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"class.std::__1::__compressed_pair.957" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"struct.std::__1::pair.956"** }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.967" = type { %"class.std::__1::__vector_base.968" }
%"class.std::__1::__vector_base.968" = type { %"class.v8::internal::Handle.969"*, %"class.v8::internal::Handle.969"*, %"class.std::__1::__compressed_pair.970" }
%"class.v8::internal::Handle.969" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.v8::internal::Handle.969"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.833", i32, %"class.v8::Local.0" }
%"class.v8::Local.833" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.979" = type { %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.985" = type { %"class.std::__1::__vector_base.986" }
%"class.std::__1::__vector_base.986" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.987" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.988" }
%"struct.std::__1::__compressed_pair_elem.988" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.992" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.993" = type { %"class.std::__1::__hash_table.994" }
%"class.std::__1::__hash_table.994" = type <{ %"class.std::__1::unique_ptr.995", %"class.std::__1::__compressed_pair.1005", %"class.std::__1::__compressed_pair.1010", %"class.std::__1::__compressed_pair.1013", [4 x i8] }>
%"class.std::__1::unique_ptr.995" = type { %"class.std::__1::__compressed_pair.996" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997", %"struct.std::__1::__compressed_pair_elem.999" }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"struct.std::__1::__hash_node_base.998"** }
%"struct.std::__1::__hash_node_base.998" = type { %"struct.std::__1::__hash_node_base.998"* }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"class.std::__1::__bucket_list_deallocator.1000" }
%"class.std::__1::__bucket_list_deallocator.1000" = type { %"class.std::__1::__compressed_pair.1001" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"struct.std::__1::__hash_node_base.998" }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1017", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1046", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1047", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1017" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1042, %union.anon.1044, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1042 = type { i64 }
%union.anon.1044 = type { i64 }
%"class.std::__1::weak_ptr.1046" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1047" = type { %"class.v8::PersistentBase.1048" }
%"class.v8::PersistentBase.1048" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1018", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1018" = type { %"class.std::__1::__hash_table.1019" }
%"class.std::__1::__hash_table.1019" = type <{ %"class.std::__1::unique_ptr.1020", %"class.std::__1::__compressed_pair.1030", %"class.std::__1::__compressed_pair.1035", %"class.std::__1::__compressed_pair.1038", [4 x i8] }>
%"class.std::__1::unique_ptr.1020" = type { %"class.std::__1::__compressed_pair.1021" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.1022", %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1022" = type { %"struct.std::__1::__hash_node_base.1023"** }
%"struct.std::__1::__hash_node_base.1023" = type { %"struct.std::__1::__hash_node_base.1023"* }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.std::__1::__bucket_list_deallocator.1025" }
%"class.std::__1::__bucket_list_deallocator.1025" = type { %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.1031" }
%"struct.std::__1::__compressed_pair_elem.1031" = type { %"struct.std::__1::__hash_node_base.1023" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1049" = type { %"class.std::__1::__compressed_pair.1050" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1078", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1078" = type { %"class.std::__1::__compressed_pair.1079" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1087" = type { %"class.std::__1::__compressed_pair.1088" }
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.1089" }
%"struct.std::__1::__compressed_pair_elem.1089" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.834", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.834" = type { %"class.v8::Context"* }
%"class.v8::Array" = type { i8 }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1095" }
%"class.std::__1::unordered_map.1095" = type { %"class.std::__1::__hash_table.1096" }
%"class.std::__1::__hash_table.1096" = type <{ %"class.std::__1::unique_ptr.1097", %"class.std::__1::__compressed_pair.1107", %"class.std::__1::__compressed_pair.1112", %"class.std::__1::__compressed_pair.1115", [4 x i8] }>
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099", %"struct.std::__1::__compressed_pair_elem.1101" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"struct.std::__1::__hash_node_base.1100"** }
%"struct.std::__1::__hash_node_base.1100" = type { %"struct.std::__1::__hash_node_base.1100"* }
%"struct.std::__1::__compressed_pair_elem.1101" = type { %"class.std::__1::__bucket_list_deallocator.1102" }
%"class.std::__1::__bucket_list_deallocator.1102" = type { %"class.std::__1::__compressed_pair.1103" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"struct.std::__1::__hash_node_base.1100" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1121" = type { %"struct.std::__1::__atomic_base.1122" }
%"struct.std::__1::__atomic_base.1122" = type { %"struct.std::__1::__cxx_atomic_impl.1123" }
%"struct.std::__1::__cxx_atomic_impl.1123" = type { %"struct.std::__1::__cxx_atomic_base_impl.1124" }
%"struct.std::__1::__cxx_atomic_base_impl.1124" = type { %"class.std::__1::vector.1125"* }
%"class.std::__1::vector.1125" = type { %"class.std::__1::__vector_base.1126" }
%"class.std::__1::__vector_base.1126" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1127" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"struct.v8::MemoryRange"* }
%"class.v8::Function" = type { i8 }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::MicrotasksScope" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::MicrotaskQueue"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1167" = type { %"class.std::__1::__compressed_pair.1168" }
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.1169" }
%"struct.std::__1::__compressed_pair_elem.1169" = type { %"class.v8::ConvertableToTraceFormat"* }
%"class.v8::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.v8::internal::MaybeHandle" = type { i64* }
%"class.v8::Isolate::SuppressMicrotaskExecutionScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::MicrotaskQueue"*, i64 }
%"class.v8::internal::tracing::CallStatsScopedTracer" = type { i8, %"struct.v8::internal::tracing::CallStatsScopedTracer::Data"*, %"struct.v8::internal::tracing::CallStatsScopedTracer::Data" }
%"struct.v8::internal::tracing::CallStatsScopedTracer::Data" = type { i8*, i8*, %"class.v8::internal::Isolate"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::TracingController" = type { i32 (...)** }
%"class.v8::internal::RootVisitor" = type { i32 (...)** }

$_ZNK2v88internal14MicrotaskQueue19IsRunningMicrotasksEv = comdat any

@_ZN2v88internal14MicrotaskQueue17kRingBufferOffsetE = hidden local_unnamed_addr constant i64 32, align 8
@_ZN2v88internal14MicrotaskQueue15kCapacityOffsetE = hidden local_unnamed_addr constant i64 16, align 8
@_ZN2v88internal14MicrotaskQueue11kSizeOffsetE = hidden local_unnamed_addr constant i64 8, align 8
@_ZN2v88internal14MicrotaskQueue12kStartOffsetE = hidden local_unnamed_addr constant i64 24, align 8
@_ZN2v88internal14MicrotaskQueue29kFinishedMicrotaskCountOffsetE = hidden local_unnamed_addr constant i64 40, align 8
@_ZN2v88internal14MicrotaskQueue16kMinimumCapacityE = hidden local_unnamed_addr constant i64 8, align 8
@_ZTVN2v88internal14MicrotaskQueueE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::MicrotaskQueue"*)* @_ZN2v88internal14MicrotaskQueueD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::MicrotaskQueue"*)* @_ZN2v88internal14MicrotaskQueueD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::MicrotaskQueue"*, %"class.v8::Isolate"*, %"class.v8::Function"*)* @_ZN2v88internal14MicrotaskQueue16EnqueueMicrotaskEPNS_7IsolateENS_5LocalINS_8FunctionEEE to i8*), i8* bitcast (void (%"class.v8::internal::MicrotaskQueue"*, %"class.v8::Isolate"*, void (i8*)*, i8*)* @_ZN2v88internal14MicrotaskQueue16EnqueueMicrotaskEPNS_7IsolateEPFvPvES4_ to i8*), i8* bitcast (void (%"class.v8::internal::MicrotaskQueue"*, void (%"class.v8::Isolate"*, i8*)*, i8*)* @_ZN2v88internal14MicrotaskQueue30AddMicrotasksCompletedCallbackEPFvPNS_7IsolateEPvES4_ to i8*), i8* bitcast (void (%"class.v8::internal::MicrotaskQueue"*, void (%"class.v8::Isolate"*, i8*)*, i8*)* @_ZN2v88internal14MicrotaskQueue33RemoveMicrotasksCompletedCallbackEPFvPNS_7IsolateEPvES4_ to i8*), i8* bitcast (void (%"class.v8::internal::MicrotaskQueue"*, %"class.v8::Isolate"*)* @_ZN2v88internal14MicrotaskQueue17PerformCheckpointEPNS_7IsolateE to i8*), i8* bitcast (i1 (%"class.v8::internal::MicrotaskQueue"*)* @_ZNK2v88internal14MicrotaskQueue19IsRunningMicrotasksEv to i8*), i8* bitcast (i32 (%"class.v8::internal::MicrotaskQueue"*)* @_ZNK2v88internal14MicrotaskQueue23GetMicrotasksScopeDepthEv to i8*)] }, align 8
@_ZZN2v88internal14MicrotaskQueue13RunMicrotasksEPNS0_7IsolateEE28trace_event_unique_atomic172 = internal global i64 0, align 8
@.str = private unnamed_addr constant [11 x i8] c"v8.execute\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"RunMicrotasks\00", align 1
@_ZZN2v88internal14MicrotaskQueue13RunMicrotasksEPNS0_7IsolateEE28trace_event_unique_atomic174 = internal global i64 0, align 8
@.str.2 = private unnamed_addr constant [3 x i8] c"v8\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"V8.RunMicrotasks\00", align 1
@_ZZN2v88internal14MicrotaskQueue13RunMicrotasksEPNS0_7IsolateEE28trace_event_unique_atomic181 = internal global i64 0, align 8
@.str.4 = private unnamed_addr constant [16 x i8] c"microtask_count\00", align 1

@_ZN2v88internal14MicrotaskQueueC1Ev = hidden unnamed_addr alias void (%"class.v8::internal::MicrotaskQueue"*), void (%"class.v8::internal::MicrotaskQueue"*)* @_ZN2v88internal14MicrotaskQueueC2Ev
@_ZN2v88internal14MicrotaskQueueD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::MicrotaskQueue"*), void (%"class.v8::internal::MicrotaskQueue"*)* @_ZN2v88internal14MicrotaskQueueD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MicrotaskQueue26SetUpDefaultMicrotaskQueueEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 104) #11
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2v88internal14MicrotaskQueueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = getelementptr inbounds i8, i8* %2, i64 72
  %6 = bitcast i8* %5 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 64, i1 false) #12
  store i32 2, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 76
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds i8, i8* %2, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #12
  %9 = getelementptr inbounds i8, i8* %2, i64 48
  %10 = bitcast i8* %9 to i8**
  store i8* %2, i8** %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 56
  %12 = bitcast i8* %11 to i8**
  store i8* %2, i8** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 97
  %14 = bitcast %"class.v8::internal::MicrotaskQueue"** %13 to i8**
  store i8* %2, i8** %14, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::MicrotaskQueue"* @_ZN2v88internal14MicrotaskQueue3NewEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 104) #11
  %3 = bitcast i8* %2 to %"class.v8::internal::MicrotaskQueue"*
  %4 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2v88internal14MicrotaskQueueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = getelementptr inbounds i8, i8* %2, i64 72
  %7 = bitcast i8* %6 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 64, i1 false) #12
  store i32 2, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 76
  store i8 0, i8* %8, align 4
  %9 = getelementptr inbounds i8, i8* %2, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #12
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 97
  %11 = load %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %11, i64 0, i32 7
  %13 = load %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %13, i64 0, i32 6
  %15 = bitcast %"class.v8::internal::MicrotaskQueue"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds i8, i8* %2, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %2, i64 56
  %20 = bitcast i8* %19 to %"class.v8::internal::MicrotaskQueue"**
  store %"class.v8::internal::MicrotaskQueue"* %13, %"class.v8::internal::MicrotaskQueue"** %20, align 8
  %21 = load %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"** %14, align 8
  %22 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %21, i64 0, i32 7
  %23 = bitcast %"class.v8::internal::MicrotaskQueue"** %22 to i8**
  store i8* %2, i8** %23, align 8
  %24 = bitcast %"class.v8::internal::MicrotaskQueue"** %14 to i8**
  store i8* %2, i8** %24, align 8
  ret %"class.v8::internal::MicrotaskQueue"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MicrotaskQueueC2Ev(%"class.v8::internal::MicrotaskQueue"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2v88internal14MicrotaskQueueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 10
  %5 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 64, i1 false)
  store i32 2, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 11
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 12
  %8 = bitcast %"class.std::__1::vector.975"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MicrotaskQueueD2Ev(%"class.v8::internal::MicrotaskQueue"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2v88internal14MicrotaskQueueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 6
  %4 = load %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"** %3, align 8
  %5 = icmp eq %"class.v8::internal::MicrotaskQueue"* %4, %0
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 7
  %8 = bitcast %"class.v8::internal::MicrotaskQueue"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %4, i64 0, i32 7
  %11 = bitcast %"class.v8::internal::MicrotaskQueue"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = bitcast %"class.v8::internal::MicrotaskQueue"** %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = load %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"** %7, align 8
  %15 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %14, i64 0, i32 6
  %16 = bitcast %"class.v8::internal::MicrotaskQueue"** %15 to i64*
  store i64 %13, i64* %16, align 8
  br label %17

17:                                               ; preds = %1, %6
  %18 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 4
  %19 = load i64*, i64** %18, align 8
  %20 = icmp eq i64* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = bitcast i64* %19 to i8*
  tail call void @_ZdaPv(i8* %22) #11
  br label %23

23:                                               ; preds = %21, %17
  %24 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 12, i32 0, i32 0
  %25 = load %"struct.std::__1::pair.956"*, %"struct.std::__1::pair.956"** %24, align 8
  %26 = icmp eq %"struct.std::__1::pair.956"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = ptrtoint %"struct.std::__1::pair.956"* %25 to i64
  %29 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 12, i32 0, i32 1
  %30 = bitcast %"struct.std::__1::pair.956"** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast %"struct.std::__1::pair.956"* %25 to i8*
  tail call void @_ZdlPv(i8* %31) #11
  br label %32

32:                                               ; preds = %23, %27
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MicrotaskQueueD0Ev(%"class.v8::internal::MicrotaskQueue"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2v88internal14MicrotaskQueueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 6
  %4 = load %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"** %3, align 8
  %5 = icmp eq %"class.v8::internal::MicrotaskQueue"* %4, %0
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 7
  %8 = bitcast %"class.v8::internal::MicrotaskQueue"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %4, i64 0, i32 7
  %11 = bitcast %"class.v8::internal::MicrotaskQueue"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = bitcast %"class.v8::internal::MicrotaskQueue"** %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = load %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"** %7, align 8
  %15 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %14, i64 0, i32 6
  %16 = bitcast %"class.v8::internal::MicrotaskQueue"** %15 to i64*
  store i64 %13, i64* %16, align 8
  br label %17

17:                                               ; preds = %6, %1
  %18 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 4
  %19 = load i64*, i64** %18, align 8
  %20 = icmp eq i64* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = bitcast i64* %19 to i8*
  tail call void @_ZdaPv(i8* %22) #11
  br label %23

23:                                               ; preds = %21, %17
  %24 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 12, i32 0, i32 0
  %25 = load %"struct.std::__1::pair.956"*, %"struct.std::__1::pair.956"** %24, align 8
  %26 = icmp eq %"struct.std::__1::pair.956"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = ptrtoint %"struct.std::__1::pair.956"* %25 to i64
  %29 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 12, i32 0, i32 1
  %30 = bitcast %"struct.std::__1::pair.956"** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast %"struct.std::__1::pair.956"* %25 to i8*
  tail call void @_ZdlPv(i8* %31) #11
  br label %32

32:                                               ; preds = %23, %27
  %33 = bitcast %"class.v8::internal::MicrotaskQueue"* %0 to i8*
  tail call void @_ZdlPv(i8* %33) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal14MicrotaskQueue20CallEnqueueMicrotaskEPNS0_7IsolateElm(%"class.v8::internal::Isolate"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = inttoptr i64 %1 to %"class.v8::internal::MicrotaskQueue"*
  %5 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %4, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %4, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %4, i64 0, i32 4
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  br label %70

15:                                               ; preds = %3
  %16 = shl i64 %6, 1
  %17 = icmp sgt i64 %16, 8
  %18 = select i1 %17, i64 %16, i64 8
  %19 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %18, i64 8) #12
  %20 = extractvalue { i64, i1 } %19, 1
  %21 = extractvalue { i64, i1 } %19, 0
  %22 = select i1 %20, i64 -1, i64 %21
  %23 = tail call i8* @_Znam(i64 %22) #11
  %24 = bitcast i8* %23 to i64*
  %25 = icmp sgt i64 %6, 0
  %26 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %4, i64 0, i32 4
  %27 = load i64*, i64** %26, align 8
  br i1 %25, label %28, label %44

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %4, i64 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %6, 1
  %32 = icmp eq i64 %6, 1
  br i1 %32, label %35, label %33

33:                                               ; preds = %28
  %34 = sub i64 %6, %31
  br label %46

35:                                               ; preds = %46, %28
  %36 = phi i64 [ 0, %28 ], [ %60, %46 ]
  %37 = icmp eq i64 %31, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %35
  %39 = add nsw i64 %36, %30
  %40 = srem i64 %39, %6
  %41 = getelementptr inbounds i64, i64* %27, i64 %40
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds i64, i64* %24, i64 %36
  store i64 %42, i64* %43, align 8
  br label %44

44:                                               ; preds = %38, %35, %15
  %45 = icmp eq i64* %27, null
  br i1 %45, label %66, label %63

46:                                               ; preds = %46, %33
  %47 = phi i64 [ 0, %33 ], [ %60, %46 ]
  %48 = phi i64 [ %34, %33 ], [ %61, %46 ]
  %49 = add nsw i64 %47, %30
  %50 = srem i64 %49, %6
  %51 = getelementptr inbounds i64, i64* %27, i64 %50
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds i64, i64* %24, i64 %47
  store i64 %52, i64* %53, align 8
  %54 = or i64 %47, 1
  %55 = add nsw i64 %54, %30
  %56 = srem i64 %55, %6
  %57 = getelementptr inbounds i64, i64* %27, i64 %56
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds i64, i64* %24, i64 %54
  store i64 %58, i64* %59, align 8
  %60 = add nuw nsw i64 %47, 2
  %61 = add i64 %48, -2
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %35, label %46

63:                                               ; preds = %44
  %64 = bitcast i64* %27 to i8*
  tail call void @_ZdaPv(i8* %64) #11
  %65 = load i64, i64* %5, align 8
  br label %66

66:                                               ; preds = %63, %44
  %67 = phi i64 [ %6, %44 ], [ %65, %63 ]
  %68 = bitcast i64** %26 to i8**
  store i8* %23, i8** %68, align 8
  store i64 %18, i64* %7, align 8
  %69 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %4, i64 0, i32 3
  store i64 0, i64* %69, align 8
  br label %70

70:                                               ; preds = %10, %66
  %71 = phi i64 [ %8, %10 ], [ %18, %66 ]
  %72 = phi i64 [ %6, %10 ], [ %67, %66 ]
  %73 = phi i64 [ %14, %10 ], [ 0, %66 ]
  %74 = phi i64* [ %12, %10 ], [ %24, %66 ]
  %75 = add nsw i64 %73, %72
  %76 = srem i64 %75, %71
  %77 = getelementptr inbounds i64, i64* %74, i64 %76
  store i64 %2, i64* %77, align 8
  %78 = load i64, i64* %5, align 8
  %79 = add nsw i64 %78, 1
  store i64 %79, i64* %5, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %81 = load i64, i64* %80, align 8
  ret i64 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MicrotaskQueue16EnqueueMicrotaskENS0_9MicrotaskE(%"class.v8::internal::MicrotaskQueue"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 4
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  br label %68

13:                                               ; preds = %2
  %14 = shl i64 %4, 1
  %15 = icmp sgt i64 %14, 8
  %16 = select i1 %15, i64 %14, i64 8
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %16, i64 8) #12
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #11
  %22 = bitcast i8* %21 to i64*
  %23 = icmp sgt i64 %4, 0
  %24 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 4
  %25 = load i64*, i64** %24, align 8
  br i1 %23, label %26, label %42

26:                                               ; preds = %13
  %27 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = and i64 %4, 1
  %30 = icmp eq i64 %4, 1
  br i1 %30, label %33, label %31

31:                                               ; preds = %26
  %32 = sub i64 %4, %29
  br label %44

33:                                               ; preds = %44, %26
  %34 = phi i64 [ 0, %26 ], [ %58, %44 ]
  %35 = icmp eq i64 %29, 0
  br i1 %35, label %42, label %36

36:                                               ; preds = %33
  %37 = add nsw i64 %34, %28
  %38 = srem i64 %37, %4
  %39 = getelementptr inbounds i64, i64* %25, i64 %38
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds i64, i64* %22, i64 %34
  store i64 %40, i64* %41, align 8
  br label %42

42:                                               ; preds = %36, %33, %13
  %43 = icmp eq i64* %25, null
  br i1 %43, label %64, label %61

44:                                               ; preds = %44, %31
  %45 = phi i64 [ 0, %31 ], [ %58, %44 ]
  %46 = phi i64 [ %32, %31 ], [ %59, %44 ]
  %47 = add nsw i64 %45, %28
  %48 = srem i64 %47, %4
  %49 = getelementptr inbounds i64, i64* %25, i64 %48
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds i64, i64* %22, i64 %45
  store i64 %50, i64* %51, align 8
  %52 = or i64 %45, 1
  %53 = add nsw i64 %52, %28
  %54 = srem i64 %53, %4
  %55 = getelementptr inbounds i64, i64* %25, i64 %54
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds i64, i64* %22, i64 %52
  store i64 %56, i64* %57, align 8
  %58 = add nuw nsw i64 %45, 2
  %59 = add i64 %46, -2
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %33, label %44

61:                                               ; preds = %42
  %62 = bitcast i64* %25 to i8*
  tail call void @_ZdaPv(i8* %62) #11
  %63 = load i64, i64* %3, align 8
  br label %64

64:                                               ; preds = %42, %61
  %65 = phi i64 [ %4, %42 ], [ %63, %61 ]
  %66 = bitcast i64** %24 to i8**
  store i8* %21, i8** %66, align 8
  store i64 %16, i64* %5, align 8
  %67 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 3
  store i64 0, i64* %67, align 8
  br label %68

68:                                               ; preds = %8, %64
  %69 = phi i64 [ %6, %8 ], [ %16, %64 ]
  %70 = phi i64 [ %4, %8 ], [ %65, %64 ]
  %71 = phi i64 [ %12, %8 ], [ 0, %64 ]
  %72 = phi i64* [ %10, %8 ], [ %22, %64 ]
  %73 = add nsw i64 %70, %71
  %74 = srem i64 %73, %69
  %75 = getelementptr inbounds i64, i64* %72, i64 %74
  store i64 %1, i64* %75, align 8
  %76 = load i64, i64* %3, align 8
  %77 = add nsw i64 %76, 1
  store i64 %77, i64* %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MicrotaskQueue16EnqueueMicrotaskEPNS_7IsolateENS_5LocalINS_8FunctionEEE(%"class.v8::internal::MicrotaskQueue"* nocapture, %"class.v8::Isolate"*, %"class.v8::Function"*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %5 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %1, i64 45584
  %6 = bitcast %"class.v8::Isolate"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %1, i64 45592
  %9 = bitcast %"class.v8::Isolate"* %8 to i64**
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %1, i64 45600
  %12 = bitcast %"class.v8::Isolate"* %11 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 8
  %15 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Factory"*
  %16 = bitcast %"class.v8::Function"* %2 to i64*
  %17 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %1, i64 13840
  %18 = bitcast %"class.v8::Isolate"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, -4294967296
  %21 = add i64 %19, -1
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %20, %24
  %26 = add i64 %25, 19
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %20, %29
  %31 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %1, i64 45608
  %32 = bitcast %"class.v8::Isolate"* %31 to %"class.v8::internal::CanonicalHandleScope"**
  %33 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %32, align 8
  %34 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %33, null
  %35 = inttoptr i64 %7 to i64*
  br i1 %34, label %38, label %36

36:                                               ; preds = %3
  %37 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %33, i64 %30) #12
  br label %48

38:                                               ; preds = %3
  %39 = bitcast %"class.v8::Isolate"* %5 to i64**
  %40 = icmp eq i64* %10, %35
  br i1 %40, label %41, label %43

41:                                               ; preds = %38
  %42 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %4) #12
  br label %43

43:                                               ; preds = %41, %38
  %44 = phi i64* [ %42, %41 ], [ %35, %38 ]
  %45 = ptrtoint i64* %44 to i64
  %46 = add i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  store i64* %47, i64** %39, align 8
  store i64 %30, i64* %44, align 8
  br label %48

48:                                               ; preds = %36, %43
  %49 = phi i64* [ %37, %36 ], [ %44, %43 ]
  %50 = tail call i64* @_ZN2v88internal7Factory15NewCallableTaskENS0_6HandleINS0_10JSReceiverEEENS2_INS0_7ContextEEE(%"class.v8::internal::Factory"* %15, i64* %16, i64* %49) #12
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 2
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %53, %55
  br i1 %56, label %62, label %57

57:                                               ; preds = %48
  %58 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 4
  %59 = load i64*, i64** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 3
  %61 = load i64, i64* %60, align 8
  br label %117

62:                                               ; preds = %48
  %63 = shl i64 %53, 1
  %64 = icmp sgt i64 %63, 8
  %65 = select i1 %64, i64 %63, i64 8
  %66 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %65, i64 8) #12
  %67 = extractvalue { i64, i1 } %66, 1
  %68 = extractvalue { i64, i1 } %66, 0
  %69 = select i1 %67, i64 -1, i64 %68
  %70 = tail call i8* @_Znam(i64 %69) #11
  %71 = bitcast i8* %70 to i64*
  %72 = icmp sgt i64 %53, 0
  %73 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 4
  %74 = load i64*, i64** %73, align 8
  br i1 %72, label %75, label %91

75:                                               ; preds = %62
  %76 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 3
  %77 = load i64, i64* %76, align 8
  %78 = and i64 %53, 1
  %79 = icmp eq i64 %53, 1
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = sub i64 %53, %78
  br label %93

82:                                               ; preds = %93, %75
  %83 = phi i64 [ 0, %75 ], [ %107, %93 ]
  %84 = icmp eq i64 %78, 0
  br i1 %84, label %91, label %85

85:                                               ; preds = %82
  %86 = add nsw i64 %83, %77
  %87 = srem i64 %86, %53
  %88 = getelementptr inbounds i64, i64* %74, i64 %87
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds i64, i64* %71, i64 %83
  store i64 %89, i64* %90, align 8
  br label %91

91:                                               ; preds = %85, %82, %62
  %92 = icmp eq i64* %74, null
  br i1 %92, label %113, label %110

93:                                               ; preds = %93, %80
  %94 = phi i64 [ 0, %80 ], [ %107, %93 ]
  %95 = phi i64 [ %81, %80 ], [ %108, %93 ]
  %96 = add nsw i64 %94, %77
  %97 = srem i64 %96, %53
  %98 = getelementptr inbounds i64, i64* %74, i64 %97
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds i64, i64* %71, i64 %94
  store i64 %99, i64* %100, align 8
  %101 = or i64 %94, 1
  %102 = add nsw i64 %101, %77
  %103 = srem i64 %102, %53
  %104 = getelementptr inbounds i64, i64* %74, i64 %103
  %105 = load i64, i64* %104, align 8
  %106 = getelementptr inbounds i64, i64* %71, i64 %101
  store i64 %105, i64* %106, align 8
  %107 = add nuw nsw i64 %94, 2
  %108 = add i64 %95, -2
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %82, label %93

110:                                              ; preds = %91
  %111 = bitcast i64* %74 to i8*
  tail call void @_ZdaPv(i8* %111) #11
  %112 = load i64, i64* %52, align 8
  br label %113

113:                                              ; preds = %110, %91
  %114 = phi i64 [ %53, %91 ], [ %112, %110 ]
  %115 = bitcast i64** %73 to i8**
  store i8* %70, i8** %115, align 8
  store i64 %65, i64* %54, align 8
  %116 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 3
  store i64 0, i64* %116, align 8
  br label %117

117:                                              ; preds = %57, %113
  %118 = phi i64 [ %55, %57 ], [ %65, %113 ]
  %119 = phi i64 [ %53, %57 ], [ %114, %113 ]
  %120 = phi i64 [ %61, %57 ], [ 0, %113 ]
  %121 = phi i64* [ %59, %57 ], [ %71, %113 ]
  %122 = add nsw i64 %120, %119
  %123 = srem i64 %122, %118
  %124 = getelementptr inbounds i64, i64* %121, i64 %123
  store i64 %51, i64* %124, align 8
  %125 = load i64, i64* %52, align 8
  %126 = add nsw i64 %125, 1
  store i64 %126, i64* %52, align 8
  %127 = icmp eq %"class.v8::Isolate"* %1, null
  br i1 %127, label %140, label %128

128:                                              ; preds = %117
  %129 = bitcast %"class.v8::Isolate"* %5 to i64**
  %130 = load i64*, i64** %129, align 8
  store i64 %7, i64* %6, align 8
  %131 = load i32, i32* %12, align 8
  %132 = add nsw i32 %131, -1
  store i32 %132, i32* %12, align 8
  %133 = load i64*, i64** %9, align 8
  %134 = icmp eq i64* %133, %10
  br i1 %134, label %137, label %135

135:                                              ; preds = %128
  store i64* %10, i64** %9, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %4) #12
  %136 = load i64*, i64** %129, align 8
  br label %137

137:                                              ; preds = %135, %128
  %138 = phi i64* [ %136, %135 ], [ %35, %128 ]
  %139 = phi i64* [ %10, %135 ], [ %130, %128 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %138, i64* %139) #12
  br label %140

140:                                              ; preds = %117, %137
  ret void
}

declare i64* @_ZN2v88internal7Factory15NewCallableTaskENS0_6HandleINS0_10JSReceiverEEENS2_INS0_7ContextEEE(%"class.v8::internal::Factory"*, i64*, i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MicrotaskQueue16EnqueueMicrotaskEPNS_7IsolateEPFvPvES4_(%"class.v8::internal::MicrotaskQueue"* nocapture, %"class.v8::Isolate"*, void (i8*)*, i8*) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %6 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %1, i64 45584
  %7 = bitcast %"class.v8::Isolate"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %1, i64 45592
  %10 = bitcast %"class.v8::Isolate"* %9 to i64**
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %1, i64 45600
  %13 = bitcast %"class.v8::Isolate"* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %13, align 8
  %16 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Factory"*
  %17 = ptrtoint void (i8*)* %2 to i64
  %18 = tail call i64* @_ZN2v88internal7Factory10NewForeignEm(%"class.v8::internal::Factory"* %16, i64 %17) #12
  %19 = ptrtoint i8* %3 to i64
  %20 = tail call i64* @_ZN2v88internal7Factory10NewForeignEm(%"class.v8::internal::Factory"* %16, i64 %19) #12
  %21 = tail call i64* @_ZN2v88internal7Factory15NewCallbackTaskENS0_6HandleINS0_7ForeignEEES4_(%"class.v8::internal::Factory"* %16, i64* %18, i64* %20) #12
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %24, %26
  br i1 %27, label %33, label %28

28:                                               ; preds = %4
  %29 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 4
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 3
  %32 = load i64, i64* %31, align 8
  br label %88

33:                                               ; preds = %4
  %34 = shl i64 %24, 1
  %35 = icmp sgt i64 %34, 8
  %36 = select i1 %35, i64 %34, i64 8
  %37 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %36, i64 8) #12
  %38 = extractvalue { i64, i1 } %37, 1
  %39 = extractvalue { i64, i1 } %37, 0
  %40 = select i1 %38, i64 -1, i64 %39
  %41 = tail call i8* @_Znam(i64 %40) #11
  %42 = bitcast i8* %41 to i64*
  %43 = icmp sgt i64 %24, 0
  %44 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 4
  %45 = load i64*, i64** %44, align 8
  br i1 %43, label %46, label %62

46:                                               ; preds = %33
  %47 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 3
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %24, 1
  %50 = icmp eq i64 %24, 1
  br i1 %50, label %53, label %51

51:                                               ; preds = %46
  %52 = sub i64 %24, %49
  br label %64

53:                                               ; preds = %64, %46
  %54 = phi i64 [ 0, %46 ], [ %78, %64 ]
  %55 = icmp eq i64 %49, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %53
  %57 = add nsw i64 %54, %48
  %58 = srem i64 %57, %24
  %59 = getelementptr inbounds i64, i64* %45, i64 %58
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds i64, i64* %42, i64 %54
  store i64 %60, i64* %61, align 8
  br label %62

62:                                               ; preds = %56, %53, %33
  %63 = icmp eq i64* %45, null
  br i1 %63, label %84, label %81

64:                                               ; preds = %64, %51
  %65 = phi i64 [ 0, %51 ], [ %78, %64 ]
  %66 = phi i64 [ %52, %51 ], [ %79, %64 ]
  %67 = add nsw i64 %65, %48
  %68 = srem i64 %67, %24
  %69 = getelementptr inbounds i64, i64* %45, i64 %68
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds i64, i64* %42, i64 %65
  store i64 %70, i64* %71, align 8
  %72 = or i64 %65, 1
  %73 = add nsw i64 %72, %48
  %74 = srem i64 %73, %24
  %75 = getelementptr inbounds i64, i64* %45, i64 %74
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds i64, i64* %42, i64 %72
  store i64 %76, i64* %77, align 8
  %78 = add nuw nsw i64 %65, 2
  %79 = add i64 %66, -2
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %53, label %64

81:                                               ; preds = %62
  %82 = bitcast i64* %45 to i8*
  tail call void @_ZdaPv(i8* %82) #11
  %83 = load i64, i64* %23, align 8
  br label %84

84:                                               ; preds = %81, %62
  %85 = phi i64 [ %24, %62 ], [ %83, %81 ]
  %86 = bitcast i64** %44 to i8**
  store i8* %41, i8** %86, align 8
  store i64 %36, i64* %25, align 8
  %87 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 3
  store i64 0, i64* %87, align 8
  br label %88

88:                                               ; preds = %28, %84
  %89 = phi i64 [ %26, %28 ], [ %36, %84 ]
  %90 = phi i64 [ %24, %28 ], [ %85, %84 ]
  %91 = phi i64 [ %32, %28 ], [ 0, %84 ]
  %92 = phi i64* [ %30, %28 ], [ %42, %84 ]
  %93 = add nsw i64 %91, %90
  %94 = srem i64 %93, %89
  %95 = getelementptr inbounds i64, i64* %92, i64 %94
  store i64 %22, i64* %95, align 8
  %96 = load i64, i64* %23, align 8
  %97 = add nsw i64 %96, 1
  store i64 %97, i64* %23, align 8
  %98 = icmp eq %"class.v8::Isolate"* %1, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %88
  %100 = inttoptr i64 %8 to i64*
  %101 = bitcast %"class.v8::Isolate"* %6 to i64**
  %102 = load i64*, i64** %101, align 8
  store i64 %8, i64* %7, align 8
  %103 = load i32, i32* %13, align 8
  %104 = add nsw i32 %103, -1
  store i32 %104, i32* %13, align 8
  %105 = load i64*, i64** %10, align 8
  %106 = icmp eq i64* %105, %11
  br i1 %106, label %109, label %107

107:                                              ; preds = %99
  store i64* %11, i64** %10, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %5) #12
  %108 = load i64*, i64** %101, align 8
  br label %109

109:                                              ; preds = %107, %99
  %110 = phi i64* [ %108, %107 ], [ %100, %99 ]
  %111 = phi i64* [ %11, %107 ], [ %102, %99 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %110, i64* %111) #12
  br label %112

112:                                              ; preds = %88, %109
  ret void
}

declare i64* @_ZN2v88internal7Factory15NewCallbackTaskENS0_6HandleINS0_7ForeignEEES4_(%"class.v8::internal::Factory"*, i64*, i64*) local_unnamed_addr #4

declare i64* @_ZN2v88internal7Factory10NewForeignEm(%"class.v8::internal::Factory"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MicrotaskQueue12ResizeBufferEl(%"class.v8::internal::MicrotaskQueue"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %1, i64 8)
  %4 = extractvalue { i64, i1 } %3, 1
  %5 = extractvalue { i64, i1 } %3, 0
  %6 = select i1 %4, i64 -1, i64 %5
  %7 = tail call i8* @_Znam(i64 %6) #11
  %8 = bitcast i8* %7 to i64*
  %9 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %10, 0
  %12 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 4
  %13 = load i64*, i64** %12, align 8
  br i1 %11, label %14, label %32

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 2
  %17 = load i64, i64* %15, align 8
  %18 = load i64, i64* %16, align 8
  %19 = and i64 %10, 1
  %20 = icmp eq i64 %10, 1
  br i1 %20, label %23, label %21

21:                                               ; preds = %14
  %22 = sub i64 %10, %19
  br label %34

23:                                               ; preds = %34, %14
  %24 = phi i64 [ 0, %14 ], [ %48, %34 ]
  %25 = icmp eq i64 %19, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %23
  %27 = add nsw i64 %17, %24
  %28 = srem i64 %27, %18
  %29 = getelementptr inbounds i64, i64* %13, i64 %28
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds i64, i64* %8, i64 %24
  store i64 %30, i64* %31, align 8
  br label %32

32:                                               ; preds = %26, %23, %2
  %33 = icmp eq i64* %13, null
  br i1 %33, label %53, label %51

34:                                               ; preds = %34, %21
  %35 = phi i64 [ 0, %21 ], [ %48, %34 ]
  %36 = phi i64 [ %22, %21 ], [ %49, %34 ]
  %37 = add nsw i64 %17, %35
  %38 = srem i64 %37, %18
  %39 = getelementptr inbounds i64, i64* %13, i64 %38
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds i64, i64* %8, i64 %35
  store i64 %40, i64* %41, align 8
  %42 = or i64 %35, 1
  %43 = add nsw i64 %17, %42
  %44 = srem i64 %43, %18
  %45 = getelementptr inbounds i64, i64* %13, i64 %44
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds i64, i64* %8, i64 %42
  store i64 %46, i64* %47, align 8
  %48 = add nuw nsw i64 %35, 2
  %49 = add i64 %36, -2
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %23, label %34

51:                                               ; preds = %32
  %52 = bitcast i64* %13 to i8*
  tail call void @_ZdaPv(i8* %52) #11
  br label %53

53:                                               ; preds = %51, %32
  %54 = bitcast i64** %12 to i8**
  store i8* %7, i8** %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 2
  store i64 %1, i64* %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 3
  store i64 0, i64* %56, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MicrotaskQueue17PerformCheckpointEPNS_7IsolateE(%"class.v8::internal::MicrotaskQueue"*, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 11
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %29

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %29

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 9
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %29

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 10
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %22

18:                                               ; preds = %14
  %19 = tail call i8* @_Znwm(i64 24) #11
  %20 = bitcast i8* %19 to %"class.v8::MicrotasksScope"*
  %21 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 0
  tail call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateEPNS_14MicrotaskQueueENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %20, %"class.v8::Isolate"* %1, %"class.v8::MicrotaskQueue"* %21, i32 1) #12
  br label %22

22:                                               ; preds = %18, %14
  %23 = phi i8* [ %19, %18 ], [ null, %14 ]
  %24 = phi %"class.v8::MicrotasksScope"* [ %20, %18 ], [ null, %14 ]
  %25 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %26 = tail call i32 @_ZN2v88internal14MicrotaskQueue13RunMicrotasksEPNS0_7IsolateE(%"class.v8::internal::MicrotaskQueue"* %0, %"class.v8::internal::Isolate"* %25)
  tail call void @_ZN2v88internal7Isolate16ClearKeptObjectsEv(%"class.v8::internal::Isolate"* %25) #12
  %27 = icmp eq %"class.v8::MicrotasksScope"* %24, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %22
  tail call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %24) #12
  tail call void @_ZdlPv(i8* %23) #11
  br label %29

29:                                               ; preds = %10, %2, %28, %22, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal14MicrotaskQueue19IsRunningMicrotasksEv(%"class.v8::internal::MicrotaskQueue"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 11
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal14MicrotaskQueue23GetMicrotasksScopeDepthEv(%"class.v8::internal::MicrotaskQueue"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

declare void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateEPNS_14MicrotaskQueueENS0_4TypeE(%"class.v8::MicrotasksScope"*, %"class.v8::Isolate"*, %"class.v8::MicrotaskQueue"*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal14MicrotaskQueue13RunMicrotasksEPNS0_7IsolateE(%"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i64, align 8
  %6 = alloca [2 x %"class.std::__1::unique_ptr.1167"], align 16
  %7 = alloca %"class.std::__1::vector.975", align 8
  %8 = alloca %"class.std::__1::vector.975", align 8
  %9 = alloca %"class.std::__1::vector.975", align 8
  %10 = alloca %"class.v8::internal::MaybeHandle", align 8
  %11 = alloca %"class.v8::Isolate::SuppressMicrotaskExecutionScope", align 8
  %12 = alloca %"class.v8::internal::tracing::CallStatsScopedTracer", align 8
  %13 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %63

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::vector.975"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #12
  %19 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 12, i32 0, i32 1
  %20 = bitcast %"struct.std::__1::pair.956"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.975"* %18 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = ashr exact i64 %24, 4
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %62, label %27

27:                                               ; preds = %16
  %28 = icmp ugt i64 %25, 1152921504606846975
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = bitcast %"class.std::__1::vector.975"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %30) #13
  unreachable

31:                                               ; preds = %27
  %32 = tail call i8* @_Znwm(i64 %24) #11
  %33 = bitcast i8* %32 to %"struct.std::__1::pair.956"*
  %34 = getelementptr inbounds %"class.std::__1::vector.975", %"class.std::__1::vector.975"* %9, i64 0, i32 0, i32 1
  %35 = bitcast %"struct.std::__1::pair.956"** %34 to i8**
  store i8* %32, i8** %35, align 8
  %36 = bitcast %"class.std::__1::vector.975"* %9 to i8**
  store i8* %32, i8** %36, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %33, i64 %25
  %38 = getelementptr inbounds %"class.std::__1::vector.975", %"class.std::__1::vector.975"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::pair.956"* %37, %"struct.std::__1::pair.956"** %38, align 8
  %39 = bitcast %"struct.std::__1::pair.956"** %34 to i64*
  %40 = ptrtoint i8* %32 to i64
  %41 = icmp sgt i64 %24, 0
  br i1 %41, label %42, label %47

42:                                               ; preds = %31
  %43 = lshr exact i64 %24, 4
  %44 = inttoptr i64 %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 %44, i64 %24, i1 false) #12
  %45 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %33, i64 %43
  %46 = ptrtoint %"struct.std::__1::pair.956"* %45 to i64
  br label %47

47:                                               ; preds = %42, %31
  %48 = phi i64 [ %46, %42 ], [ %40, %31 ]
  store i64 %48, i64* %39, align 8
  %49 = inttoptr i64 %48 to %"struct.std::__1::pair.956"*
  %50 = icmp eq %"struct.std::__1::pair.956"* %33, %49
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::Isolate"*
  br label %54

53:                                               ; preds = %54, %47
  store i64 %40, i64* %39, align 8
  tail call void @_ZdlPv(i8* nonnull %32) #11
  br label %62

54:                                               ; preds = %54, %51
  %55 = phi %"struct.std::__1::pair.956"* [ %33, %51 ], [ %60, %54 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %55, i64 0, i32 0
  %57 = load void (%"class.v8::Isolate"*, i8*)*, void (%"class.v8::Isolate"*, i8*)** %56, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %55, i64 0, i32 1
  %59 = load i8*, i8** %58, align 8
  tail call void %57(%"class.v8::Isolate"* %52, i8* %59) #12
  %60 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %55, i64 1
  %61 = icmp eq %"struct.std::__1::pair.956"* %60, %49
  br i1 %61, label %53, label %54

62:                                               ; preds = %16, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #12
  br label %332

63:                                               ; preds = %2
  %64 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 5
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31
  %67 = bitcast %"struct.v8::internal::HandleScopeData"* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %70 = load i64*, i64** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 2
  %72 = load i32, i32* %71, align 8
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %71, align 8
  %74 = bitcast %"class.v8::internal::MaybeHandle"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #12
  %75 = getelementptr inbounds %"class.v8::internal::MaybeHandle", %"class.v8::internal::MaybeHandle"* %10, i64 0, i32 0
  store i64* null, i64** %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 11
  store i8 1, i8* %76, align 1
  %77 = bitcast %"class.v8::Isolate::SuppressMicrotaskExecutionScope"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #12
  %78 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::Isolate"*
  call void @_ZN2v87Isolate31SuppressMicrotaskExecutionScopeC1EPS0_PNS_14MicrotaskQueueE(%"class.v8::Isolate::SuppressMicrotaskExecutionScope"* nonnull %11, %"class.v8::Isolate"* %78, %"class.v8::MicrotaskQueue"* null) #12
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 32
  %80 = load %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::HandleScopeImplementer"** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %80, i64 0, i32 2, i32 0, i32 2
  %82 = load i64, i64* %81, align 8
  %83 = load atomic i64, i64* @_ZZN2v88internal14MicrotaskQueue13RunMicrotasksEPNS0_7IsolateEE28trace_event_unique_atomic172 monotonic, align 8
  %84 = inttoptr i64 %83 to i8*
  %85 = icmp eq i64 %83, 0
  br i1 %85, label %86, label %94

86:                                               ; preds = %63
  %87 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %88 = bitcast %"class.v8::TracingController"* %87 to i8* (%"class.v8::TracingController"*, i8*)***
  %89 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %88, align 8
  %90 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %89, i64 2
  %91 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %90, align 8
  %92 = call i8* %91(%"class.v8::TracingController"* %87, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0)) #12
  %93 = ptrtoint i8* %92 to i64
  store atomic volatile i64 %93, i64* @_ZZN2v88internal14MicrotaskQueue13RunMicrotasksEPNS0_7IsolateEE28trace_event_unique_atomic172 monotonic, align 8
  br label %94

94:                                               ; preds = %63, %86
  %95 = phi i8* [ %84, %63 ], [ %92, %86 ]
  %96 = load atomic i8, i8* %95 monotonic, align 1
  %97 = and i8 %96, 5
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %126, label %99

99:                                               ; preds = %94
  %100 = bitcast [2 x %"class.std::__1::unique_ptr.1167"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %100) #12
  %101 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1167"], [2 x %"class.std::__1::unique_ptr.1167"]* %6, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %100, i8 0, i64 16, i1 false) #12
  %102 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %103 = bitcast %"class.v8::TracingController"* %102 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1167"*, i32)***
  %104 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1167"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1167"*, i32)*** %103, align 8
  %105 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1167"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1167"*, i32)** %104, i64 3
  %106 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1167"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1167"*, i32)** %105, align 8
  %107 = call i64 %106(%"class.v8::TracingController"* %102, i8 signext 66, i8* %95, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1167"* nonnull %101, i32 0) #12
  %108 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1167"], [2 x %"class.std::__1::unique_ptr.1167"]* %6, i64 0, i64 1, i32 0, i32 0, i32 0
  %109 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %108, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %108, align 8
  %110 = icmp eq %"class.v8::ConvertableToTraceFormat"* %109, null
  br i1 %110, label %116, label %111

111:                                              ; preds = %99
  %112 = bitcast %"class.v8::ConvertableToTraceFormat"* %109 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %113 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %113, i64 1
  %115 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %114, align 8
  call void %115(%"class.v8::ConvertableToTraceFormat"* nonnull %109) #12
  br label %116

116:                                              ; preds = %111, %99
  %117 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1167"], [2 x %"class.std::__1::unique_ptr.1167"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0
  %118 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %117, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %117, align 16
  %119 = icmp eq %"class.v8::ConvertableToTraceFormat"* %118, null
  br i1 %119, label %125, label %120

120:                                              ; preds = %116
  %121 = bitcast %"class.v8::ConvertableToTraceFormat"* %118 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %122 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %122, i64 1
  %124 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %123, align 8
  call void %124(%"class.v8::ConvertableToTraceFormat"* nonnull %118) #12
  br label %125

125:                                              ; preds = %116, %120
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %100) #12
  br label %126

126:                                              ; preds = %94, %125
  %127 = load atomic i64, i64* @_ZZN2v88internal14MicrotaskQueue13RunMicrotasksEPNS0_7IsolateEE28trace_event_unique_atomic174 monotonic, align 8
  %128 = inttoptr i64 %127 to i8*
  %129 = icmp eq i64 %127, 0
  br i1 %129, label %130, label %138

130:                                              ; preds = %126
  %131 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %132 = bitcast %"class.v8::TracingController"* %131 to i8* (%"class.v8::TracingController"*, i8*)***
  %133 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %132, align 8
  %134 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %133, i64 2
  %135 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %134, align 8
  %136 = call i8* %135(%"class.v8::TracingController"* %131, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #12
  %137 = ptrtoint i8* %136 to i64
  store atomic volatile i64 %137, i64* @_ZZN2v88internal14MicrotaskQueue13RunMicrotasksEPNS0_7IsolateEE28trace_event_unique_atomic174 monotonic, align 8
  br label %138

138:                                              ; preds = %126, %130
  %139 = phi i8* [ %128, %126 ], [ %136, %130 ]
  %140 = getelementptr inbounds %"class.v8::internal::tracing::CallStatsScopedTracer", %"class.v8::internal::tracing::CallStatsScopedTracer"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %140) #12
  %141 = getelementptr inbounds %"class.v8::internal::tracing::CallStatsScopedTracer", %"class.v8::internal::tracing::CallStatsScopedTracer"* %12, i64 0, i32 1
  store %"struct.v8::internal::tracing::CallStatsScopedTracer::Data"* null, %"struct.v8::internal::tracing::CallStatsScopedTracer::Data"** %141, align 8
  %142 = load atomic i8, i8* %139 monotonic, align 1
  %143 = and i8 %142, 5
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %146, label %145

145:                                              ; preds = %138
  call void @_ZN2v88internal7tracing21CallStatsScopedTracer10InitializeEPNS0_7IsolateEPKhPKc(%"class.v8::internal::tracing::CallStatsScopedTracer"* nonnull %12, %"class.v8::internal::Isolate"* %1, i8* %139, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #12
  br label %146

146:                                              ; preds = %138, %145
  %147 = call i64* @_ZN2v88internal9Execution16TryRunMicrotasksEPNS0_7IsolateEPNS0_14MicrotaskQueueEPNS0_11MaybeHandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"* %1, %"class.v8::internal::MicrotaskQueue"* %0, %"class.v8::internal::MaybeHandle"* nonnull %10) #12
  %148 = load i64, i64* %64, align 8
  %149 = sub nsw i64 %148, %65
  %150 = trunc i64 %149 to i32
  %151 = load %"struct.v8::internal::tracing::CallStatsScopedTracer::Data"*, %"struct.v8::internal::tracing::CallStatsScopedTracer::Data"** %141, align 8
  %152 = icmp eq %"struct.v8::internal::tracing::CallStatsScopedTracer::Data"* %151, null
  br i1 %152, label %159, label %153

153:                                              ; preds = %146
  %154 = getelementptr inbounds %"class.v8::internal::tracing::CallStatsScopedTracer", %"class.v8::internal::tracing::CallStatsScopedTracer"* %12, i64 0, i32 2, i32 0
  %155 = load i8*, i8** %154, align 8
  %156 = load i8, i8* %155, align 1
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %159, label %158, !prof !3

158:                                              ; preds = %153
  call void @_ZN2v88internal7tracing21CallStatsScopedTracer16AddEndTraceEventEv(%"class.v8::internal::tracing::CallStatsScopedTracer"* nonnull %12) #12
  br label %159

159:                                              ; preds = %146, %153, %158
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %140) #12
  %160 = load atomic i64, i64* @_ZZN2v88internal14MicrotaskQueue13RunMicrotasksEPNS0_7IsolateEE28trace_event_unique_atomic181 monotonic, align 8
  %161 = inttoptr i64 %160 to i8*
  %162 = icmp eq i64 %160, 0
  br i1 %162, label %163, label %171

163:                                              ; preds = %159
  %164 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %165 = bitcast %"class.v8::TracingController"* %164 to i8* (%"class.v8::TracingController"*, i8*)***
  %166 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %165, align 8
  %167 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %166, i64 2
  %168 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %167, align 8
  %169 = call i8* %168(%"class.v8::TracingController"* %164, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0)) #12
  %170 = ptrtoint i8* %169 to i64
  store atomic volatile i64 %170, i64* @_ZZN2v88internal14MicrotaskQueue13RunMicrotasksEPNS0_7IsolateEE28trace_event_unique_atomic181 monotonic, align 8
  br label %171

171:                                              ; preds = %159, %163
  %172 = phi i8* [ %161, %159 ], [ %169, %163 ]
  %173 = load atomic i8, i8* %172 monotonic, align 1
  %174 = and i8 %173, 5
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %207, label %176

176:                                              ; preds = %171
  %177 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177)
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i8** %3, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  %178 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178) #12
  store i8 3, i8* %4, align 1
  %179 = shl i64 %149, 32
  %180 = ashr exact i64 %179, 32
  store i64 %180, i64* %5, align 8
  %181 = bitcast [2 x %"class.std::__1::unique_ptr.1167"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %181) #12
  %182 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1167"], [2 x %"class.std::__1::unique_ptr.1167"]* %6, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %181, i8 0, i64 16, i1 false) #12
  %183 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %184 = bitcast %"class.v8::TracingController"* %183 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1167"*, i32)***
  %185 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1167"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1167"*, i32)*** %184, align 8
  %186 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1167"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1167"*, i32)** %185, i64 3
  %187 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1167"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1167"*, i32)** %186, align 8
  %188 = call i64 %187(%"class.v8::TracingController"* %183, i8 signext 69, i8* %172, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 1, i8** nonnull %3, i8* nonnull %4, i64* nonnull %5, %"class.std::__1::unique_ptr.1167"* nonnull %182, i32 0) #12
  %189 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1167"], [2 x %"class.std::__1::unique_ptr.1167"]* %6, i64 0, i64 1, i32 0, i32 0, i32 0
  %190 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %189, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %189, align 8
  %191 = icmp eq %"class.v8::ConvertableToTraceFormat"* %190, null
  br i1 %191, label %197, label %192

192:                                              ; preds = %176
  %193 = bitcast %"class.v8::ConvertableToTraceFormat"* %190 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %194 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %193, align 8
  %195 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %194, i64 1
  %196 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %195, align 8
  call void %196(%"class.v8::ConvertableToTraceFormat"* nonnull %190) #12
  br label %197

197:                                              ; preds = %192, %176
  %198 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1167"], [2 x %"class.std::__1::unique_ptr.1167"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0
  %199 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %198, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %198, align 16
  %200 = icmp eq %"class.v8::ConvertableToTraceFormat"* %199, null
  br i1 %200, label %206, label %201

201:                                              ; preds = %197
  %202 = bitcast %"class.v8::ConvertableToTraceFormat"* %199 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %203 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %202, align 8
  %204 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %203, i64 1
  %205 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %204, align 8
  call void %205(%"class.v8::ConvertableToTraceFormat"* nonnull %199) #12
  br label %206

206:                                              ; preds = %197, %201
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %181) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %177)
  br label %207

207:                                              ; preds = %171, %206
  %208 = load i64, i64* %81, align 8
  %209 = icmp ult i64 %82, %208
  br i1 %209, label %210, label %215

210:                                              ; preds = %207
  %211 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %80, i64 0, i32 3, i32 0, i32 2
  %212 = load i64, i64* %211, align 8
  %213 = add i64 %82, %212
  %214 = sub i64 %213, %208
  store i64 %82, i64* %81, align 8
  store i64 %214, i64* %211, align 8
  br label %215

215:                                              ; preds = %210, %207
  call void @_ZN2v87Isolate31SuppressMicrotaskExecutionScopeD1Ev(%"class.v8::Isolate::SuppressMicrotaskExecutionScope"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #12
  store i8 0, i8* %76, align 1
  %216 = icmp eq i64* %147, null
  %217 = load i64*, i64** %75, align 8
  %218 = icmp eq i64* %217, null
  %219 = and i1 %216, %218
  br i1 %219, label %220, label %271

220:                                              ; preds = %215
  %221 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 4
  %222 = load i64*, i64** %221, align 8
  %223 = icmp eq i64* %222, null
  br i1 %223, label %226, label %224

224:                                              ; preds = %220
  %225 = bitcast i64* %222 to i8*
  call void @_ZdaPv(i8* %225) #11
  br label %226

226:                                              ; preds = %224, %220
  %227 = bitcast i64* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %227, i8 0, i64 32, i1 false)
  call void @_ZN2v88internal7Isolate32SetTerminationOnExternalTryCatchEv(%"class.v8::internal::Isolate"* %1) #12
  %228 = bitcast %"class.std::__1::vector.975"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %228) #12
  %229 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %228, i8 0, i64 24, i1 false) #12
  %230 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 12, i32 0, i32 1
  %231 = bitcast %"struct.std::__1::pair.956"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = bitcast %"class.std::__1::vector.975"* %229 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = sub i64 %232, %234
  %236 = ashr exact i64 %235, 4
  %237 = icmp eq i64 %235, 0
  br i1 %237, label %315, label %238

238:                                              ; preds = %226
  %239 = icmp ugt i64 %236, 1152921504606846975
  br i1 %239, label %240, label %242

240:                                              ; preds = %238
  %241 = bitcast %"class.std::__1::vector.975"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %241) #13
  unreachable

242:                                              ; preds = %238
  %243 = call i8* @_Znwm(i64 %235) #11
  %244 = bitcast i8* %243 to %"struct.std::__1::pair.956"*
  %245 = getelementptr inbounds %"class.std::__1::vector.975", %"class.std::__1::vector.975"* %7, i64 0, i32 0, i32 1
  %246 = bitcast %"struct.std::__1::pair.956"** %245 to i8**
  store i8* %243, i8** %246, align 8
  %247 = bitcast %"class.std::__1::vector.975"* %7 to i8**
  store i8* %243, i8** %247, align 8
  %248 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %244, i64 %236
  %249 = getelementptr inbounds %"class.std::__1::vector.975", %"class.std::__1::vector.975"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::pair.956"* %248, %"struct.std::__1::pair.956"** %249, align 8
  %250 = bitcast %"struct.std::__1::pair.956"** %245 to i64*
  %251 = ptrtoint i8* %243 to i64
  %252 = icmp sgt i64 %235, 0
  br i1 %252, label %253, label %258

253:                                              ; preds = %242
  %254 = lshr exact i64 %235, 4
  %255 = inttoptr i64 %234 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %243, i8* align 8 %255, i64 %235, i1 false) #12
  %256 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %244, i64 %254
  %257 = ptrtoint %"struct.std::__1::pair.956"* %256 to i64
  br label %258

258:                                              ; preds = %253, %242
  %259 = phi i64 [ %257, %253 ], [ %251, %242 ]
  store i64 %259, i64* %250, align 8
  %260 = inttoptr i64 %259 to %"struct.std::__1::pair.956"*
  %261 = icmp eq %"struct.std::__1::pair.956"* %244, %260
  br i1 %261, label %262, label %263

262:                                              ; preds = %263, %258
  store i64 %251, i64* %250, align 8
  call void @_ZdlPv(i8* nonnull %243) #11
  br label %315

263:                                              ; preds = %258, %263
  %264 = phi %"struct.std::__1::pair.956"* [ %269, %263 ], [ %244, %258 ]
  %265 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %264, i64 0, i32 0
  %266 = load void (%"class.v8::Isolate"*, i8*)*, void (%"class.v8::Isolate"*, i8*)** %265, align 8
  %267 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %264, i64 0, i32 1
  %268 = load i8*, i8** %267, align 8
  call void %266(%"class.v8::Isolate"* %78, i8* %268) #12
  %269 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %264, i64 1
  %270 = icmp eq %"struct.std::__1::pair.956"* %269, %260
  br i1 %270, label %262, label %263

271:                                              ; preds = %215
  %272 = bitcast %"class.std::__1::vector.975"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %272) #12
  %273 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %272, i8 0, i64 24, i1 false) #12
  %274 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 12, i32 0, i32 1
  %275 = bitcast %"struct.std::__1::pair.956"** %274 to i64*
  %276 = load i64, i64* %275, align 8
  %277 = bitcast %"class.std::__1::vector.975"* %273 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = sub i64 %276, %278
  %280 = ashr exact i64 %279, 4
  %281 = icmp eq i64 %279, 0
  br i1 %281, label %315, label %282

282:                                              ; preds = %271
  %283 = icmp ugt i64 %280, 1152921504606846975
  br i1 %283, label %284, label %286

284:                                              ; preds = %282
  %285 = bitcast %"class.std::__1::vector.975"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %285) #13
  unreachable

286:                                              ; preds = %282
  %287 = call i8* @_Znwm(i64 %279) #11
  %288 = bitcast i8* %287 to %"struct.std::__1::pair.956"*
  %289 = getelementptr inbounds %"class.std::__1::vector.975", %"class.std::__1::vector.975"* %8, i64 0, i32 0, i32 1
  %290 = bitcast %"struct.std::__1::pair.956"** %289 to i8**
  store i8* %287, i8** %290, align 8
  %291 = bitcast %"class.std::__1::vector.975"* %8 to i8**
  store i8* %287, i8** %291, align 8
  %292 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %288, i64 %280
  %293 = getelementptr inbounds %"class.std::__1::vector.975", %"class.std::__1::vector.975"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::pair.956"* %292, %"struct.std::__1::pair.956"** %293, align 8
  %294 = bitcast %"struct.std::__1::pair.956"** %289 to i64*
  %295 = ptrtoint i8* %287 to i64
  %296 = icmp sgt i64 %279, 0
  br i1 %296, label %297, label %302

297:                                              ; preds = %286
  %298 = lshr exact i64 %279, 4
  %299 = inttoptr i64 %278 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %287, i8* align 8 %299, i64 %279, i1 false) #12
  %300 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %288, i64 %298
  %301 = ptrtoint %"struct.std::__1::pair.956"* %300 to i64
  br label %302

302:                                              ; preds = %297, %286
  %303 = phi i64 [ %301, %297 ], [ %295, %286 ]
  store i64 %303, i64* %294, align 8
  %304 = inttoptr i64 %303 to %"struct.std::__1::pair.956"*
  %305 = icmp eq %"struct.std::__1::pair.956"* %288, %304
  br i1 %305, label %306, label %307

306:                                              ; preds = %307, %302
  store i64 %295, i64* %294, align 8
  call void @_ZdlPv(i8* nonnull %287) #11
  br label %315

307:                                              ; preds = %302, %307
  %308 = phi %"struct.std::__1::pair.956"* [ %313, %307 ], [ %288, %302 ]
  %309 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %308, i64 0, i32 0
  %310 = load void (%"class.v8::Isolate"*, i8*)*, void (%"class.v8::Isolate"*, i8*)** %309, align 8
  %311 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %308, i64 0, i32 1
  %312 = load i8*, i8** %311, align 8
  call void %310(%"class.v8::Isolate"* %78, i8* %312) #12
  %313 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %308, i64 1
  %314 = icmp eq %"struct.std::__1::pair.956"* %313, %304
  br i1 %314, label %306, label %307

315:                                              ; preds = %306, %271, %262, %226
  %316 = phi i8* [ %228, %226 ], [ %228, %262 ], [ %272, %271 ], [ %272, %306 ]
  %317 = phi i32 [ -1, %226 ], [ -1, %262 ], [ %150, %271 ], [ %150, %306 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %316) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #12
  %318 = icmp eq %"class.v8::internal::Isolate"* %1, null
  br i1 %318, label %332, label %319

319:                                              ; preds = %315
  %320 = inttoptr i64 %68 to i64*
  %321 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %66, i64 0, i32 0
  %322 = load i64*, i64** %321, align 8
  store i64 %68, i64* %67, align 8
  %323 = load i32, i32* %71, align 8
  %324 = add nsw i32 %323, -1
  store i32 %324, i32* %71, align 8
  %325 = load i64*, i64** %69, align 8
  %326 = icmp eq i64* %325, %70
  br i1 %326, label %329, label %327

327:                                              ; preds = %319
  store i64* %70, i64** %69, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %1) #12
  %328 = load i64*, i64** %321, align 8
  br label %329

329:                                              ; preds = %327, %319
  %330 = phi i64* [ %328, %327 ], [ %320, %319 ]
  %331 = phi i64* [ %70, %327 ], [ %322, %319 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %330, i64* %331) #12
  br label %332

332:                                              ; preds = %329, %315, %62
  %333 = phi i32 [ 0, %62 ], [ %317, %315 ], [ %317, %329 ]
  ret i32 %333
}

declare void @_ZN2v88internal7Isolate16ClearKeptObjectsEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MicrotaskQueue11OnCompletedEPNS0_7IsolateE(%"class.v8::internal::MicrotaskQueue"* nocapture readonly, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.975", align 8
  %4 = bitcast %"class.std::__1::vector.975"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #12
  %6 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 12, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair.956"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.975"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 4
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %49, label %14

14:                                               ; preds = %2
  %15 = icmp ugt i64 %12, 1152921504606846975
  br i1 %15, label %16, label %18

16:                                               ; preds = %14
  %17 = bitcast %"class.std::__1::vector.975"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %17) #13
  unreachable

18:                                               ; preds = %14
  %19 = tail call i8* @_Znwm(i64 %11) #11
  %20 = bitcast i8* %19 to %"struct.std::__1::pair.956"*
  %21 = getelementptr inbounds %"class.std::__1::vector.975", %"class.std::__1::vector.975"* %3, i64 0, i32 0, i32 1
  %22 = bitcast %"struct.std::__1::pair.956"** %21 to i8**
  store i8* %19, i8** %22, align 8
  %23 = bitcast %"class.std::__1::vector.975"* %3 to i8**
  store i8* %19, i8** %23, align 8
  %24 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %20, i64 %12
  %25 = getelementptr inbounds %"class.std::__1::vector.975", %"class.std::__1::vector.975"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::pair.956"* %24, %"struct.std::__1::pair.956"** %25, align 8
  %26 = bitcast %"struct.std::__1::pair.956"** %21 to i64*
  %27 = ptrtoint i8* %19 to i64
  %28 = icmp sgt i64 %11, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %18
  %30 = lshr exact i64 %11, 4
  %31 = inttoptr i64 %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 %31, i64 %11, i1 false) #12
  %32 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %20, i64 %30
  %33 = ptrtoint %"struct.std::__1::pair.956"* %32 to i64
  br label %34

34:                                               ; preds = %29, %18
  %35 = phi i64 [ %33, %29 ], [ %27, %18 ]
  store i64 %35, i64* %26, align 8
  %36 = inttoptr i64 %35 to %"struct.std::__1::pair.956"*
  %37 = icmp eq %"struct.std::__1::pair.956"* %20, %36
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::Isolate"*
  br label %41

40:                                               ; preds = %41, %34
  store i64 %27, i64* %26, align 8
  tail call void @_ZdlPv(i8* nonnull %19) #11
  br label %49

41:                                               ; preds = %41, %38
  %42 = phi %"struct.std::__1::pair.956"* [ %20, %38 ], [ %47, %41 ]
  %43 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %42, i64 0, i32 0
  %44 = load void (%"class.v8::Isolate"*, i8*)*, void (%"class.v8::Isolate"*, i8*)** %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %42, i64 0, i32 1
  %46 = load i8*, i8** %45, align 8
  tail call void %44(%"class.v8::Isolate"* %39, i8* %46) #12
  %47 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %42, i64 1
  %48 = icmp eq %"struct.std::__1::pair.956"* %47, %36
  br i1 %48, label %40, label %41

49:                                               ; preds = %2, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  ret void
}

declare void @_ZN2v87Isolate31SuppressMicrotaskExecutionScopeC1EPS0_PNS_14MicrotaskQueueE(%"class.v8::Isolate::SuppressMicrotaskExecutionScope"*, %"class.v8::Isolate"*, %"class.v8::MicrotaskQueue"*) unnamed_addr #4

declare %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() local_unnamed_addr #4

declare void @_ZN2v88internal7tracing21CallStatsScopedTracer10InitializeEPNS0_7IsolateEPKhPKc(%"class.v8::internal::tracing::CallStatsScopedTracer"*, %"class.v8::internal::Isolate"*, i8*, i8*) local_unnamed_addr #4

declare i64* @_ZN2v88internal9Execution16TryRunMicrotasksEPNS0_7IsolateEPNS0_14MicrotaskQueueEPNS0_11MaybeHandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MaybeHandle"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v87Isolate31SuppressMicrotaskExecutionScopeD1Ev(%"class.v8::Isolate::SuppressMicrotaskExecutionScope"*) unnamed_addr #6

declare void @_ZN2v88internal7Isolate32SetTerminationOnExternalTryCatchEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MicrotaskQueue17IterateMicrotasksEPNS0_11RootVisitorE(%"class.v8::internal::MicrotaskQueue"* nocapture, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %38, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 4
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i64, i64* %8, i64 %10
  %12 = ptrtoint i64* %11 to i64
  %13 = add nsw i64 %10, %4
  %14 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp slt i64 %15, %13
  %17 = select i1 %16, i64 %15, i64 %13
  %18 = getelementptr inbounds i64, i64* %8, i64 %17
  %19 = ptrtoint i64* %18 to i64
  %20 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)***
  %21 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %21, i64 2
  %23 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %22, align 8
  tail call void %23(%"class.v8::internal::RootVisitor"* %1, i32 15, i8* null, i64 %12, i64 %19) #12
  %24 = load i64*, i64** %7, align 8
  %25 = ptrtoint i64* %24 to i64
  %26 = load i64, i64* %9, align 8
  %27 = load i64, i64* %3, align 8
  %28 = add nsw i64 %27, %26
  %29 = load i64, i64* %14, align 8
  %30 = sub i64 %28, %29
  %31 = icmp sgt i64 %30, 0
  %32 = select i1 %31, i64 %30, i64 0
  %33 = getelementptr inbounds i64, i64* %24, i64 %32
  %34 = ptrtoint i64* %33 to i64
  %35 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*** %20, align 8
  %36 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %35, i64 2
  %37 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %36, align 8
  tail call void %37(%"class.v8::internal::RootVisitor"* %1, i32 15, i8* null, i64 %25, i64 %34) #12
  br label %38

38:                                               ; preds = %2, %6
  %39 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 2
  %40 = load i64, i64* %39, align 8
  %41 = icmp slt i64 %40, 9
  br i1 %41, label %103, label %42

42:                                               ; preds = %38
  %43 = load i64, i64* %3, align 8
  %44 = shl nsw i64 %43, 1
  br label %45

45:                                               ; preds = %45, %42
  %46 = phi i64 [ %40, %42 ], [ %48, %45 ]
  %47 = icmp sgt i64 %46, %44
  %48 = ashr i64 %46, 1
  br i1 %47, label %45, label %49

49:                                               ; preds = %45
  %50 = icmp sgt i64 %46, 8
  %51 = select i1 %50, i64 %46, i64 8
  %52 = icmp slt i64 %51, %40
  br i1 %52, label %53, label %103

53:                                               ; preds = %49
  %54 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %51, i64 8) #12
  %55 = extractvalue { i64, i1 } %54, 1
  %56 = extractvalue { i64, i1 } %54, 0
  %57 = select i1 %55, i64 -1, i64 %56
  %58 = tail call i8* @_Znam(i64 %57) #11
  %59 = bitcast i8* %58 to i64*
  %60 = icmp sgt i64 %43, 0
  %61 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 4
  %62 = load i64*, i64** %61, align 8
  br i1 %60, label %63, label %79

63:                                               ; preds = %53
  %64 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = and i64 %43, 1
  %67 = icmp eq i64 %43, 1
  br i1 %67, label %70, label %68

68:                                               ; preds = %63
  %69 = sub i64 %43, %66
  br label %81

70:                                               ; preds = %81, %63
  %71 = phi i64 [ 0, %63 ], [ %95, %81 ]
  %72 = icmp eq i64 %66, 0
  br i1 %72, label %79, label %73

73:                                               ; preds = %70
  %74 = add nsw i64 %71, %65
  %75 = srem i64 %74, %40
  %76 = getelementptr inbounds i64, i64* %62, i64 %75
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds i64, i64* %59, i64 %71
  store i64 %77, i64* %78, align 8
  br label %79

79:                                               ; preds = %73, %70, %53
  %80 = icmp eq i64* %62, null
  br i1 %80, label %100, label %98

81:                                               ; preds = %81, %68
  %82 = phi i64 [ 0, %68 ], [ %95, %81 ]
  %83 = phi i64 [ %69, %68 ], [ %96, %81 ]
  %84 = add nsw i64 %82, %65
  %85 = srem i64 %84, %40
  %86 = getelementptr inbounds i64, i64* %62, i64 %85
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds i64, i64* %59, i64 %82
  store i64 %87, i64* %88, align 8
  %89 = or i64 %82, 1
  %90 = add nsw i64 %89, %65
  %91 = srem i64 %90, %40
  %92 = getelementptr inbounds i64, i64* %62, i64 %91
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds i64, i64* %59, i64 %89
  store i64 %93, i64* %94, align 8
  %95 = add nuw nsw i64 %82, 2
  %96 = add i64 %83, -2
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %70, label %81

98:                                               ; preds = %79
  %99 = bitcast i64* %62 to i8*
  tail call void @_ZdaPv(i8* %99) #11
  br label %100

100:                                              ; preds = %79, %98
  %101 = bitcast i64** %61 to i8**
  store i8* %58, i8** %101, align 8
  store i64 %51, i64* %39, align 8
  %102 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 3
  store i64 0, i64* %102, align 8
  br label %103

103:                                              ; preds = %49, %100, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MicrotaskQueue30AddMicrotasksCompletedCallbackEPFvPNS_7IsolateEPvES4_(%"class.v8::internal::MicrotaskQueue"*, void (%"class.v8::Isolate"*, i8*)*, i8*) unnamed_addr #0 align 2 {
  %4 = ptrtoint void (%"class.v8::Isolate"*, i8*)* %1 to i64
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 12
  %7 = getelementptr inbounds %"class.std::__1::vector.975", %"class.std::__1::vector.975"* %6, i64 0, i32 0, i32 0
  %8 = load %"struct.std::__1::pair.956"*, %"struct.std::__1::pair.956"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 12, i32 0, i32 1
  %10 = load %"struct.std::__1::pair.956"*, %"struct.std::__1::pair.956"** %9, align 8
  %11 = icmp eq %"struct.std::__1::pair.956"* %8, %10
  %12 = ptrtoint %"struct.std::__1::pair.956"* %8 to i64
  br i1 %11, label %25, label %13

13:                                               ; preds = %3, %22
  %14 = phi %"struct.std::__1::pair.956"* [ %23, %22 ], [ %8, %3 ]
  %15 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %14, i64 0, i32 0
  %16 = load void (%"class.v8::Isolate"*, i8*)*, void (%"class.v8::Isolate"*, i8*)** %15, align 8
  %17 = icmp eq void (%"class.v8::Isolate"*, i8*)* %16, %1
  br i1 %17, label %18, label %22

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %14, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, %2
  br i1 %21, label %25, label %22

22:                                               ; preds = %18, %13
  %23 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %14, i64 1
  %24 = icmp eq %"struct.std::__1::pair.956"* %23, %10
  br i1 %24, label %28, label %13

25:                                               ; preds = %18, %3
  %26 = phi %"struct.std::__1::pair.956"* [ %8, %3 ], [ %14, %18 ]
  %27 = icmp eq %"struct.std::__1::pair.956"* %26, %10
  br i1 %27, label %28, label %97

28:                                               ; preds = %22, %25
  %29 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %30 = load %"struct.std::__1::pair.956"*, %"struct.std::__1::pair.956"** %29, align 8
  %31 = icmp eq %"struct.std::__1::pair.956"* %10, %30
  %32 = ptrtoint %"struct.std::__1::pair.956"* %30 to i64
  br i1 %31, label %40, label %33

33:                                               ; preds = %28
  %34 = bitcast %"struct.std::__1::pair.956"* %10 to i64*
  store i64 %4, i64* %34, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %10, i64 0, i32 1
  %36 = bitcast i8** %35 to i64*
  store i64 %5, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %10, i64 1
  %38 = ptrtoint %"struct.std::__1::pair.956"* %37 to i64
  %39 = bitcast %"struct.std::__1::pair.956"** %9 to i64*
  store i64 %38, i64* %39, align 8
  br label %97

40:                                               ; preds = %28
  %41 = ptrtoint %"struct.std::__1::pair.956"* %10 to i64
  %42 = bitcast %"struct.std::__1::pair.956"** %9 to i64*
  %43 = bitcast %"class.std::__1::vector.975"* %6 to i64*
  %44 = sub i64 %41, %12
  %45 = ashr exact i64 %44, 4
  %46 = add nsw i64 %45, 1
  %47 = icmp ugt i64 %46, 1152921504606846975
  br i1 %47, label %48, label %50

48:                                               ; preds = %40
  %49 = bitcast %"class.std::__1::vector.975"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %49) #13
  unreachable

50:                                               ; preds = %40
  %51 = bitcast %"struct.std::__1::pair.956"** %29 to i64*
  %52 = sub i64 %32, %12
  %53 = ashr exact i64 %52, 4
  %54 = icmp ult i64 %53, 576460752303423487
  br i1 %54, label %55, label %63

55:                                               ; preds = %50
  %56 = ashr exact i64 %52, 3
  %57 = icmp ult i64 %56, %46
  %58 = select i1 %57, i64 %46, i64 %56
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %68, label %60

60:                                               ; preds = %55
  %61 = icmp ugt i64 %58, 1152921504606846975
  br i1 %61, label %62, label %63

62:                                               ; preds = %60
  tail call void @abort() #13
  unreachable

63:                                               ; preds = %60, %50
  %64 = phi i64 [ %58, %60 ], [ 1152921504606846975, %50 ]
  %65 = shl i64 %64, 4
  %66 = tail call i8* @_Znwm(i64 %65) #11
  %67 = bitcast i8* %66 to %"struct.std::__1::pair.956"*
  br label %68

68:                                               ; preds = %63, %55
  %69 = phi i64 [ %64, %63 ], [ 0, %55 ]
  %70 = phi %"struct.std::__1::pair.956"* [ %67, %63 ], [ null, %55 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %70, i64 %45
  %72 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %70, i64 %69
  %73 = ptrtoint %"struct.std::__1::pair.956"* %72 to i64
  %74 = bitcast %"struct.std::__1::pair.956"* %71 to i64*
  store i64 %4, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %70, i64 %45, i32 1
  %76 = bitcast i8** %75 to i64*
  store i64 %5, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %71, i64 1
  %78 = ptrtoint %"struct.std::__1::pair.956"* %77 to i64
  %79 = load %"struct.std::__1::pair.956"*, %"struct.std::__1::pair.956"** %7, align 8
  %80 = load i64, i64* %42, align 8
  %81 = ptrtoint %"struct.std::__1::pair.956"* %79 to i64
  %82 = sub i64 %80, %81
  %83 = ashr exact i64 %82, 4
  %84 = sub nsw i64 0, %83
  %85 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %71, i64 %84
  %86 = ptrtoint %"struct.std::__1::pair.956"* %85 to i64
  %87 = icmp sgt i64 %82, 0
  br i1 %87, label %88, label %92

88:                                               ; preds = %68
  %89 = bitcast %"struct.std::__1::pair.956"* %85 to i8*
  %90 = bitcast %"struct.std::__1::pair.956"* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 %82, i1 false) #12
  %91 = load %"struct.std::__1::pair.956"*, %"struct.std::__1::pair.956"** %7, align 8
  br label %92

92:                                               ; preds = %88, %68
  %93 = phi %"struct.std::__1::pair.956"* [ %79, %68 ], [ %91, %88 ]
  store i64 %86, i64* %43, align 8
  store i64 %78, i64* %42, align 8
  store i64 %73, i64* %51, align 8
  %94 = icmp eq %"struct.std::__1::pair.956"* %93, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %92
  %96 = bitcast %"struct.std::__1::pair.956"* %93 to i8*
  tail call void @_ZdlPv(i8* %96) #11
  br label %97

97:                                               ; preds = %25, %95, %92, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MicrotaskQueue33RemoveMicrotasksCompletedCallbackEPFvPNS_7IsolateEPvES4_(%"class.v8::internal::MicrotaskQueue"* nocapture, void (%"class.v8::Isolate"*, i8*)*, i8*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 12, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.956"*, %"struct.std::__1::pair.956"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 12, i32 0, i32 1
  %7 = load %"struct.std::__1::pair.956"*, %"struct.std::__1::pair.956"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.956"* %5, %7
  br i1 %8, label %21, label %9

9:                                                ; preds = %3, %18
  %10 = phi %"struct.std::__1::pair.956"* [ %19, %18 ], [ %5, %3 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %10, i64 0, i32 0
  %12 = load void (%"class.v8::Isolate"*, i8*)*, void (%"class.v8::Isolate"*, i8*)** %11, align 8
  %13 = icmp eq void (%"class.v8::Isolate"*, i8*)* %12, %1
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %10, i64 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, %2
  br i1 %17, label %21, label %18

18:                                               ; preds = %14, %9
  %19 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %10, i64 1
  %20 = icmp eq %"struct.std::__1::pair.956"* %19, %7
  br i1 %20, label %103, label %9

21:                                               ; preds = %14, %3
  %22 = phi %"struct.std::__1::pair.956"* [ %5, %3 ], [ %10, %14 ]
  %23 = ptrtoint %"struct.std::__1::pair.956"* %22 to i64
  %24 = icmp eq %"struct.std::__1::pair.956"* %22, %7
  br i1 %24, label %103, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %22, i64 1
  %27 = icmp eq %"struct.std::__1::pair.956"* %26, %7
  br i1 %27, label %101, label %28

28:                                               ; preds = %25
  %29 = getelementptr %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %7, i64 -2, i32 0
  %30 = ptrtoint void (%"class.v8::Isolate"*, i8*)** %29 to i64
  %31 = sub i64 %30, %23
  %32 = lshr i64 %31, 4
  %33 = add nuw nsw i64 %32, 1
  %34 = and i64 %33, 3
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %52, label %36

36:                                               ; preds = %28, %36
  %37 = phi %"struct.std::__1::pair.956"* [ %49, %36 ], [ %22, %28 ]
  %38 = phi %"struct.std::__1::pair.956"* [ %48, %36 ], [ %26, %28 ]
  %39 = phi i64 [ %50, %36 ], [ %34, %28 ]
  %40 = bitcast %"struct.std::__1::pair.956"* %38 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"struct.std::__1::pair.956"* %37 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %38, i64 0, i32 1
  %44 = bitcast i8** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %37, i64 0, i32 1
  %47 = bitcast i8** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %38, i64 1
  %49 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %37, i64 1
  %50 = add i64 %39, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %36, !llvm.loop !4

52:                                               ; preds = %36, %28
  %53 = phi %"struct.std::__1::pair.956"* [ undef, %28 ], [ %49, %36 ]
  %54 = phi %"struct.std::__1::pair.956"* [ %22, %28 ], [ %49, %36 ]
  %55 = phi %"struct.std::__1::pair.956"* [ %26, %28 ], [ %48, %36 ]
  %56 = icmp ult i64 %31, 48
  br i1 %56, label %101, label %57

57:                                               ; preds = %52, %57
  %58 = phi %"struct.std::__1::pair.956"* [ %99, %57 ], [ %54, %52 ]
  %59 = phi %"struct.std::__1::pair.956"* [ %98, %57 ], [ %55, %52 ]
  %60 = bitcast %"struct.std::__1::pair.956"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"struct.std::__1::pair.956"* %58 to i64*
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %59, i64 0, i32 1
  %64 = bitcast i8** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %58, i64 0, i32 1
  %67 = bitcast i8** %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %59, i64 1
  %69 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %58, i64 1
  %70 = bitcast %"struct.std::__1::pair.956"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"struct.std::__1::pair.956"* %69 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %59, i64 1, i32 1
  %74 = bitcast i8** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %58, i64 1, i32 1
  %77 = bitcast i8** %76 to i64*
  store i64 %75, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %59, i64 2
  %79 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %58, i64 2
  %80 = bitcast %"struct.std::__1::pair.956"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"struct.std::__1::pair.956"* %79 to i64*
  store i64 %81, i64* %82, align 8
  %83 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %59, i64 2, i32 1
  %84 = bitcast i8** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %58, i64 2, i32 1
  %87 = bitcast i8** %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %59, i64 3
  %89 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %58, i64 3
  %90 = bitcast %"struct.std::__1::pair.956"* %88 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"struct.std::__1::pair.956"* %89 to i64*
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %59, i64 3, i32 1
  %94 = bitcast i8** %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %58, i64 3, i32 1
  %97 = bitcast i8** %96 to i64*
  store i64 %95, i64* %97, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %59, i64 4
  %99 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %58, i64 4
  %100 = icmp eq %"struct.std::__1::pair.956"* %98, %7
  br i1 %100, label %101, label %57

101:                                              ; preds = %52, %57, %25
  %102 = phi %"struct.std::__1::pair.956"* [ %22, %25 ], [ %53, %52 ], [ %99, %57 ]
  store %"struct.std::__1::pair.956"* %102, %"struct.std::__1::pair.956"** %6, align 8
  br label %103

103:                                              ; preds = %18, %21, %101
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal14MicrotaskQueue31FireMicrotasksCompletedCallbackEPNS0_7IsolateE(%"class.v8::internal::MicrotaskQueue"* nocapture readonly, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.975", align 8
  %4 = bitcast %"class.std::__1::vector.975"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #12
  %6 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 12, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair.956"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.975"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 4
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %44, label %14

14:                                               ; preds = %2
  %15 = icmp ugt i64 %12, 1152921504606846975
  br i1 %15, label %16, label %18

16:                                               ; preds = %14
  %17 = bitcast %"class.std::__1::vector.975"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %17) #13
  unreachable

18:                                               ; preds = %14
  %19 = tail call i8* @_Znwm(i64 %11) #11
  %20 = bitcast i8* %19 to %"struct.std::__1::pair.956"*
  %21 = getelementptr inbounds %"class.std::__1::vector.975", %"class.std::__1::vector.975"* %3, i64 0, i32 0, i32 1
  %22 = bitcast %"struct.std::__1::pair.956"** %21 to i8**
  store i8* %19, i8** %22, align 8
  %23 = bitcast %"class.std::__1::vector.975"* %3 to i8**
  store i8* %19, i8** %23, align 8
  %24 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %20, i64 %12
  %25 = getelementptr inbounds %"class.std::__1::vector.975", %"class.std::__1::vector.975"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::pair.956"* %24, %"struct.std::__1::pair.956"** %25, align 8
  %26 = bitcast %"struct.std::__1::pair.956"** %21 to i64*
  %27 = ptrtoint i8* %19 to i64
  %28 = icmp sgt i64 %11, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %18
  %30 = lshr exact i64 %11, 4
  %31 = inttoptr i64 %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 %31, i64 %11, i1 false) #12
  %32 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %20, i64 %30
  %33 = ptrtoint %"struct.std::__1::pair.956"* %32 to i64
  br label %34

34:                                               ; preds = %18, %29
  %35 = phi i64 [ %33, %29 ], [ %27, %18 ]
  store i64 %35, i64* %26, align 8
  %36 = inttoptr i64 %35 to %"struct.std::__1::pair.956"*
  %37 = getelementptr inbounds %"class.std::__1::vector.975", %"class.std::__1::vector.975"* %3, i64 0, i32 0, i32 1
  %38 = icmp eq %"struct.std::__1::pair.956"* %20, %36
  br i1 %38, label %41, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::Isolate"*
  br label %45

41:                                               ; preds = %45, %34
  %42 = ptrtoint i8* %19 to i64
  %43 = bitcast %"struct.std::__1::pair.956"** %37 to i64*
  store i64 %42, i64* %43, align 8
  tail call void @_ZdlPv(i8* nonnull %19) #11
  br label %44

44:                                               ; preds = %2, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  ret void

45:                                               ; preds = %39, %45
  %46 = phi %"struct.std::__1::pair.956"* [ %20, %39 ], [ %51, %45 ]
  %47 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %46, i64 0, i32 0
  %48 = load void (%"class.v8::Isolate"*, i8*)*, void (%"class.v8::Isolate"*, i8*)** %47, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %46, i64 0, i32 1
  %50 = load i8*, i8** %49, align 8
  tail call void %48(%"class.v8::Isolate"* %40, i8* %50) #12
  %51 = getelementptr inbounds %"struct.std::__1::pair.956", %"struct.std::__1::pair.956"* %46, i64 1
  %52 = icmp eq %"struct.std::__1::pair.956"* %51, %36
  br i1 %52, label %41, label %45
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v88internal14MicrotaskQueue3getEl(%"class.v8::internal::MicrotaskQueue"* nocapture readonly, i64) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 4
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = add nsw i64 %6, %1
  %8 = getelementptr inbounds %"class.v8::internal::MicrotaskQueue", %"class.v8::internal::MicrotaskQueue"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = srem i64 %7, %9
  %11 = getelementptr inbounds i64, i64* %4, i64 %10
  %12 = load i64, i64* %11, align 8
  ret i64 %12
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #4

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #4

declare void @_ZN2v88internal7tracing21CallStatsScopedTracer16AddEndTraceEventEv(%"class.v8::internal::tracing::CallStatsScopedTracer"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"*) unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
