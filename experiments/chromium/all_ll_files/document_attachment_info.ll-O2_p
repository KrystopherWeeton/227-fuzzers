; ModuleID = '../../pdf/document_attachment_info.cc'
source_filename = "../../pdf/document_attachment_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.chrome_pdf::DocumentAttachmentInfo" = type <{ %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }

@_ZN10chrome_pdf22DocumentAttachmentInfoC1Ev = hidden unnamed_addr alias void (%"struct.chrome_pdf::DocumentAttachmentInfo"*), void (%"struct.chrome_pdf::DocumentAttachmentInfo"*)* @_ZN10chrome_pdf22DocumentAttachmentInfoC2Ev
@_ZN10chrome_pdf22DocumentAttachmentInfoC1ERKS0_ = hidden unnamed_addr alias void (%"struct.chrome_pdf::DocumentAttachmentInfo"*, %"struct.chrome_pdf::DocumentAttachmentInfo"*), void (%"struct.chrome_pdf::DocumentAttachmentInfo"*, %"struct.chrome_pdf::DocumentAttachmentInfo"*)* @_ZN10chrome_pdf22DocumentAttachmentInfoC2ERKS0_
@_ZN10chrome_pdf22DocumentAttachmentInfoD1Ev = hidden unnamed_addr alias void (%"struct.chrome_pdf::DocumentAttachmentInfo"*), void (%"struct.chrome_pdf::DocumentAttachmentInfo"*)* @_ZN10chrome_pdf22DocumentAttachmentInfoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf22DocumentAttachmentInfoC2Ev(%"struct.chrome_pdf::DocumentAttachmentInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.chrome_pdf::DocumentAttachmentInfo", %"struct.chrome_pdf::DocumentAttachmentInfo"* %0, i64 0, i32 3
  %3 = bitcast %"struct.chrome_pdf::DocumentAttachmentInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 28, i1 false)
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 49, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf22DocumentAttachmentInfoC2ERKS0_(%"struct.chrome_pdf::DocumentAttachmentInfo"*, %"struct.chrome_pdf::DocumentAttachmentInfo"* nocapture readonly dereferenceable(88)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.chrome_pdf::DocumentAttachmentInfo"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.chrome_pdf::DocumentAttachmentInfo"* %0 to i8*
  %9 = bitcast %"struct.chrome_pdf::DocumentAttachmentInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #6
  br label %185

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.chrome_pdf::DocumentAttachmentInfo", %"struct.chrome_pdf::DocumentAttachmentInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %"struct.chrome_pdf::DocumentAttachmentInfo", %"struct.chrome_pdf::DocumentAttachmentInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = bitcast %"struct.chrome_pdf::DocumentAttachmentInfo"* %0 to i16*
  %18 = trunc i64 %14 to i8
  %19 = bitcast %"struct.chrome_pdf::DocumentAttachmentInfo"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  store i8 %18, i8* %20, align 1
  br label %38

21:                                               ; preds = %10
  %22 = icmp ugt i64 %14, 9223372036854775791
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"struct.chrome_pdf::DocumentAttachmentInfo"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #7
  unreachable

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %14, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @abort() #7
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = tail call i8* @_Znwm(i64 %31) #8
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast %"struct.chrome_pdf::DocumentAttachmentInfo"* %0 to i8**
  store i8* %32, i8** %34, align 8
  %35 = or i64 %27, -9223372036854775808
  %36 = getelementptr inbounds %"struct.chrome_pdf::DocumentAttachmentInfo", %"struct.chrome_pdf::DocumentAttachmentInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.chrome_pdf::DocumentAttachmentInfo", %"struct.chrome_pdf::DocumentAttachmentInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %16
  %39 = phi i16* [ %17, %16 ], [ %33, %30 ]
  %40 = add nuw nsw i64 %14, 1
  %41 = add i64 %14, 1
  %42 = icmp ult i64 %41, 16
  br i1 %42, label %132, label %43

43:                                               ; preds = %38
  %44 = add i64 %14, 1
  %45 = getelementptr i16, i16* %39, i64 %44
  %46 = getelementptr i16, i16* %12, i64 %44
  %47 = icmp ult i16* %39, %46
  %48 = icmp ult i16* %12, %45
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %43
  %51 = and i64 %41, -16
  %52 = sub i64 %40, %51
  %53 = getelementptr i16, i16* %12, i64 %51
  %54 = getelementptr i16, i16* %39, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %12, i64 %63
  %66 = getelementptr i16, i16* %39, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !2
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !2
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !5, !noalias !2
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !5, !noalias !2
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %12, i64 %75
  %77 = getelementptr i16, i16* %39, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !2
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !2
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !5, !noalias !2
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !5, !noalias !2
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %12, i64 %86
  %88 = getelementptr i16, i16* %39, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !2
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !2
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !5, !noalias !2
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !5, !noalias !2
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %12, i64 %97
  %99 = getelementptr i16, i16* %39, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !2
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !2
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !5, !noalias !2
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !5, !noalias !2
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !7

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %12, i64 %115
  %118 = getelementptr i16, i16* %39, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !2
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !2
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !5, !noalias !2
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !5, !noalias !2
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !9

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %41, %51
  br i1 %131, label %185, label %132

132:                                              ; preds = %130, %43, %38
  %133 = phi i64 [ %40, %43 ], [ %40, %38 ], [ %52, %130 ]
  %134 = phi i16* [ %12, %43 ], [ %12, %38 ], [ %53, %130 ]
  %135 = phi i16* [ %39, %43 ], [ %39, %38 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !11

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %185, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %185, label %155, !llvm.loop !12

185:                                              ; preds = %150, %155, %130, %7
  %186 = getelementptr inbounds %"struct.chrome_pdf::DocumentAttachmentInfo", %"struct.chrome_pdf::DocumentAttachmentInfo"* %0, i64 0, i32 1
  %187 = getelementptr inbounds %"struct.chrome_pdf::DocumentAttachmentInfo", %"struct.chrome_pdf::DocumentAttachmentInfo"* %1, i64 0, i32 1
  %188 = load i32, i32* %187, align 8
  store i32 %188, i32* %186, align 8
  %189 = getelementptr inbounds %"struct.chrome_pdf::DocumentAttachmentInfo", %"struct.chrome_pdf::DocumentAttachmentInfo"* %0, i64 0, i32 3
  %190 = getelementptr inbounds %"struct.chrome_pdf::DocumentAttachmentInfo", %"struct.chrome_pdf::DocumentAttachmentInfo"* %1, i64 0, i32 3
  %191 = bitcast %"class.std::__1::basic_string"* %190 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %192 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %191, i64 0, i32 1, i32 1
  %193 = load i8, i8* %192, align 1
  %194 = icmp slt i8 %193, 0
  br i1 %194, label %198, label %195

195:                                              ; preds = %185
  %196 = bitcast %"class.std::__1::basic_string"* %189 to i8*
  %197 = bitcast %"class.std::__1::basic_string"* %190 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %196, i8* align 8 %197, i64 24, i1 false) #6
  br label %373

198:                                              ; preds = %185
  %199 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %190, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load i16*, i16** %199, align 8
  %201 = getelementptr inbounds %"struct.chrome_pdf::DocumentAttachmentInfo", %"struct.chrome_pdf::DocumentAttachmentInfo"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %202 = load i64, i64* %201, align 8
  %203 = icmp ult i64 %202, 11
  br i1 %203, label %204, label %209

204:                                              ; preds = %198
  %205 = bitcast %"class.std::__1::basic_string"* %189 to i16*
  %206 = trunc i64 %202 to i8
  %207 = bitcast %"class.std::__1::basic_string"* %189 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %208 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %207, i64 0, i32 1, i32 1
  store i8 %206, i8* %208, align 1
  br label %226

209:                                              ; preds = %198
  %210 = icmp ugt i64 %202, 9223372036854775791
  br i1 %210, label %211, label %213

211:                                              ; preds = %209
  %212 = bitcast %"class.std::__1::basic_string"* %189 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %212) #7
  unreachable

213:                                              ; preds = %209
  %214 = add nuw nsw i64 %202, 8
  %215 = and i64 %214, -8
  %216 = icmp slt i64 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %213
  tail call void @abort() #7
  unreachable

218:                                              ; preds = %213
  %219 = shl i64 %215, 1
  %220 = tail call i8* @_Znwm(i64 %219) #8
  %221 = bitcast i8* %220 to i16*
  %222 = bitcast %"class.std::__1::basic_string"* %189 to i8**
  store i8* %220, i8** %222, align 8
  %223 = or i64 %215, -9223372036854775808
  %224 = getelementptr inbounds %"struct.chrome_pdf::DocumentAttachmentInfo", %"struct.chrome_pdf::DocumentAttachmentInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %223, i64* %224, align 8
  %225 = getelementptr inbounds %"struct.chrome_pdf::DocumentAttachmentInfo", %"struct.chrome_pdf::DocumentAttachmentInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %202, i64* %225, align 8
  br label %226

226:                                              ; preds = %218, %204
  %227 = phi i16* [ %205, %204 ], [ %221, %218 ]
  %228 = add nuw nsw i64 %202, 1
  %229 = add i64 %202, 1
  %230 = icmp ult i64 %229, 16
  br i1 %230, label %320, label %231

231:                                              ; preds = %226
  %232 = add i64 %202, 1
  %233 = getelementptr i16, i16* %227, i64 %232
  %234 = getelementptr i16, i16* %200, i64 %232
  %235 = icmp ult i16* %227, %234
  %236 = icmp ult i16* %200, %233
  %237 = and i1 %235, %236
  br i1 %237, label %320, label %238

238:                                              ; preds = %231
  %239 = and i64 %229, -16
  %240 = sub i64 %228, %239
  %241 = getelementptr i16, i16* %200, i64 %239
  %242 = getelementptr i16, i16* %227, i64 %239
  %243 = add i64 %239, -16
  %244 = lshr exact i64 %243, 4
  %245 = add nuw nsw i64 %244, 1
  %246 = and i64 %245, 3
  %247 = icmp ult i64 %243, 48
  br i1 %247, label %299, label %248

248:                                              ; preds = %238
  %249 = sub nsw i64 %245, %246
  br label %250

250:                                              ; preds = %250, %248
  %251 = phi i64 [ 0, %248 ], [ %296, %250 ]
  %252 = phi i64 [ %249, %248 ], [ %297, %250 ]
  %253 = getelementptr i16, i16* %200, i64 %251
  %254 = getelementptr i16, i16* %227, i64 %251
  %255 = bitcast i16* %253 to <8 x i16>*
  %256 = load <8 x i16>, <8 x i16>* %255, align 2, !alias.scope !13
  %257 = getelementptr i16, i16* %253, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  %259 = load <8 x i16>, <8 x i16>* %258, align 2, !alias.scope !13
  %260 = bitcast i16* %254 to <8 x i16>*
  store <8 x i16> %256, <8 x i16>* %260, align 2, !alias.scope !16, !noalias !13
  %261 = getelementptr i16, i16* %254, i64 8
  %262 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %259, <8 x i16>* %262, align 2, !alias.scope !16, !noalias !13
  %263 = or i64 %251, 16
  %264 = getelementptr i16, i16* %200, i64 %263
  %265 = getelementptr i16, i16* %227, i64 %263
  %266 = bitcast i16* %264 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !13
  %268 = getelementptr i16, i16* %264, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !13
  %271 = bitcast i16* %265 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %271, align 2, !alias.scope !16, !noalias !13
  %272 = getelementptr i16, i16* %265, i64 8
  %273 = bitcast i16* %272 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %273, align 2, !alias.scope !16, !noalias !13
  %274 = or i64 %251, 32
  %275 = getelementptr i16, i16* %200, i64 %274
  %276 = getelementptr i16, i16* %227, i64 %274
  %277 = bitcast i16* %275 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !13
  %279 = getelementptr i16, i16* %275, i64 8
  %280 = bitcast i16* %279 to <8 x i16>*
  %281 = load <8 x i16>, <8 x i16>* %280, align 2, !alias.scope !13
  %282 = bitcast i16* %276 to <8 x i16>*
  store <8 x i16> %278, <8 x i16>* %282, align 2, !alias.scope !16, !noalias !13
  %283 = getelementptr i16, i16* %276, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  store <8 x i16> %281, <8 x i16>* %284, align 2, !alias.scope !16, !noalias !13
  %285 = or i64 %251, 48
  %286 = getelementptr i16, i16* %200, i64 %285
  %287 = getelementptr i16, i16* %227, i64 %285
  %288 = bitcast i16* %286 to <8 x i16>*
  %289 = load <8 x i16>, <8 x i16>* %288, align 2, !alias.scope !13
  %290 = getelementptr i16, i16* %286, i64 8
  %291 = bitcast i16* %290 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !13
  %293 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %289, <8 x i16>* %293, align 2, !alias.scope !16, !noalias !13
  %294 = getelementptr i16, i16* %287, i64 8
  %295 = bitcast i16* %294 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %295, align 2, !alias.scope !16, !noalias !13
  %296 = add i64 %251, 64
  %297 = add i64 %252, -4
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %299, label %250, !llvm.loop !18

299:                                              ; preds = %250, %238
  %300 = phi i64 [ 0, %238 ], [ %296, %250 ]
  %301 = icmp eq i64 %246, 0
  br i1 %301, label %318, label %302

302:                                              ; preds = %299, %302
  %303 = phi i64 [ %315, %302 ], [ %300, %299 ]
  %304 = phi i64 [ %316, %302 ], [ %246, %299 ]
  %305 = getelementptr i16, i16* %200, i64 %303
  %306 = getelementptr i16, i16* %227, i64 %303
  %307 = bitcast i16* %305 to <8 x i16>*
  %308 = load <8 x i16>, <8 x i16>* %307, align 2, !alias.scope !13
  %309 = getelementptr i16, i16* %305, i64 8
  %310 = bitcast i16* %309 to <8 x i16>*
  %311 = load <8 x i16>, <8 x i16>* %310, align 2, !alias.scope !13
  %312 = bitcast i16* %306 to <8 x i16>*
  store <8 x i16> %308, <8 x i16>* %312, align 2, !alias.scope !16, !noalias !13
  %313 = getelementptr i16, i16* %306, i64 8
  %314 = bitcast i16* %313 to <8 x i16>*
  store <8 x i16> %311, <8 x i16>* %314, align 2, !alias.scope !16, !noalias !13
  %315 = add i64 %303, 16
  %316 = add i64 %304, -1
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %318, label %302, !llvm.loop !19

318:                                              ; preds = %302, %299
  %319 = icmp eq i64 %229, %239
  br i1 %319, label %373, label %320

320:                                              ; preds = %318, %231, %226
  %321 = phi i64 [ %228, %231 ], [ %228, %226 ], [ %240, %318 ]
  %322 = phi i16* [ %200, %231 ], [ %200, %226 ], [ %241, %318 ]
  %323 = phi i16* [ %227, %231 ], [ %227, %226 ], [ %242, %318 ]
  %324 = add i64 %321, -1
  %325 = and i64 %321, 7
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %338, label %327

327:                                              ; preds = %320, %327
  %328 = phi i64 [ %333, %327 ], [ %321, %320 ]
  %329 = phi i16* [ %335, %327 ], [ %322, %320 ]
  %330 = phi i16* [ %334, %327 ], [ %323, %320 ]
  %331 = phi i64 [ %336, %327 ], [ %325, %320 ]
  %332 = load i16, i16* %329, align 2
  store i16 %332, i16* %330, align 2
  %333 = add i64 %328, -1
  %334 = getelementptr inbounds i16, i16* %330, i64 1
  %335 = getelementptr inbounds i16, i16* %329, i64 1
  %336 = add i64 %331, -1
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %338, label %327, !llvm.loop !20

338:                                              ; preds = %327, %320
  %339 = phi i64 [ %321, %320 ], [ %333, %327 ]
  %340 = phi i16* [ %322, %320 ], [ %335, %327 ]
  %341 = phi i16* [ %323, %320 ], [ %334, %327 ]
  %342 = icmp ult i64 %324, 7
  br i1 %342, label %373, label %343

343:                                              ; preds = %338, %343
  %344 = phi i64 [ %369, %343 ], [ %339, %338 ]
  %345 = phi i16* [ %371, %343 ], [ %340, %338 ]
  %346 = phi i16* [ %370, %343 ], [ %341, %338 ]
  %347 = load i16, i16* %345, align 2
  store i16 %347, i16* %346, align 2
  %348 = getelementptr inbounds i16, i16* %346, i64 1
  %349 = getelementptr inbounds i16, i16* %345, i64 1
  %350 = load i16, i16* %349, align 2
  store i16 %350, i16* %348, align 2
  %351 = getelementptr inbounds i16, i16* %346, i64 2
  %352 = getelementptr inbounds i16, i16* %345, i64 2
  %353 = load i16, i16* %352, align 2
  store i16 %353, i16* %351, align 2
  %354 = getelementptr inbounds i16, i16* %346, i64 3
  %355 = getelementptr inbounds i16, i16* %345, i64 3
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %346, i64 4
  %358 = getelementptr inbounds i16, i16* %345, i64 4
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %346, i64 5
  %361 = getelementptr inbounds i16, i16* %345, i64 5
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %346, i64 6
  %364 = getelementptr inbounds i16, i16* %345, i64 6
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = getelementptr inbounds i16, i16* %346, i64 7
  %367 = getelementptr inbounds i16, i16* %345, i64 7
  %368 = load i16, i16* %367, align 2
  store i16 %368, i16* %366, align 2
  %369 = add i64 %344, -8
  %370 = getelementptr inbounds i16, i16* %346, i64 8
  %371 = getelementptr inbounds i16, i16* %345, i64 8
  %372 = icmp eq i64 %369, 0
  br i1 %372, label %373, label %343, !llvm.loop !21

373:                                              ; preds = %338, %343, %318, %195
  %374 = getelementptr inbounds %"struct.chrome_pdf::DocumentAttachmentInfo", %"struct.chrome_pdf::DocumentAttachmentInfo"* %0, i64 0, i32 4
  %375 = getelementptr inbounds %"struct.chrome_pdf::DocumentAttachmentInfo", %"struct.chrome_pdf::DocumentAttachmentInfo"* %1, i64 0, i32 4
  %376 = bitcast %"class.std::__1::basic_string"* %375 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %377 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %376, i64 0, i32 1, i32 1
  %378 = load i8, i8* %377, align 1
  %379 = icmp slt i8 %378, 0
  br i1 %379, label %383, label %380

380:                                              ; preds = %373
  %381 = bitcast %"class.std::__1::basic_string"* %374 to i8*
  %382 = bitcast %"class.std::__1::basic_string"* %375 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %381, i8* align 8 %382, i64 24, i1 false) #6
  br label %558

383:                                              ; preds = %373
  %384 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %375, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %385 = load i16*, i16** %384, align 8
  %386 = getelementptr inbounds %"struct.chrome_pdf::DocumentAttachmentInfo", %"struct.chrome_pdf::DocumentAttachmentInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %387 = load i64, i64* %386, align 8
  %388 = icmp ult i64 %387, 11
  br i1 %388, label %389, label %394

389:                                              ; preds = %383
  %390 = bitcast %"class.std::__1::basic_string"* %374 to i16*
  %391 = trunc i64 %387 to i8
  %392 = bitcast %"class.std::__1::basic_string"* %374 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %393 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %392, i64 0, i32 1, i32 1
  store i8 %391, i8* %393, align 1
  br label %411

394:                                              ; preds = %383
  %395 = icmp ugt i64 %387, 9223372036854775791
  br i1 %395, label %396, label %398

396:                                              ; preds = %394
  %397 = bitcast %"class.std::__1::basic_string"* %374 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %397) #7
  unreachable

398:                                              ; preds = %394
  %399 = add nuw nsw i64 %387, 8
  %400 = and i64 %399, -8
  %401 = icmp slt i64 %400, 0
  br i1 %401, label %402, label %403

402:                                              ; preds = %398
  tail call void @abort() #7
  unreachable

403:                                              ; preds = %398
  %404 = shl i64 %400, 1
  %405 = tail call i8* @_Znwm(i64 %404) #8
  %406 = bitcast i8* %405 to i16*
  %407 = bitcast %"class.std::__1::basic_string"* %374 to i8**
  store i8* %405, i8** %407, align 8
  %408 = or i64 %400, -9223372036854775808
  %409 = getelementptr inbounds %"struct.chrome_pdf::DocumentAttachmentInfo", %"struct.chrome_pdf::DocumentAttachmentInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %408, i64* %409, align 8
  %410 = getelementptr inbounds %"struct.chrome_pdf::DocumentAttachmentInfo", %"struct.chrome_pdf::DocumentAttachmentInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %387, i64* %410, align 8
  br label %411

411:                                              ; preds = %403, %389
  %412 = phi i16* [ %390, %389 ], [ %406, %403 ]
  %413 = add nuw nsw i64 %387, 1
  %414 = add i64 %387, 1
  %415 = icmp ult i64 %414, 16
  br i1 %415, label %505, label %416

416:                                              ; preds = %411
  %417 = add i64 %387, 1
  %418 = getelementptr i16, i16* %412, i64 %417
  %419 = getelementptr i16, i16* %385, i64 %417
  %420 = icmp ult i16* %412, %419
  %421 = icmp ult i16* %385, %418
  %422 = and i1 %420, %421
  br i1 %422, label %505, label %423

423:                                              ; preds = %416
  %424 = and i64 %414, -16
  %425 = sub i64 %413, %424
  %426 = getelementptr i16, i16* %385, i64 %424
  %427 = getelementptr i16, i16* %412, i64 %424
  %428 = add i64 %424, -16
  %429 = lshr exact i64 %428, 4
  %430 = add nuw nsw i64 %429, 1
  %431 = and i64 %430, 3
  %432 = icmp ult i64 %428, 48
  br i1 %432, label %484, label %433

433:                                              ; preds = %423
  %434 = sub nsw i64 %430, %431
  br label %435

435:                                              ; preds = %435, %433
  %436 = phi i64 [ 0, %433 ], [ %481, %435 ]
  %437 = phi i64 [ %434, %433 ], [ %482, %435 ]
  %438 = getelementptr i16, i16* %385, i64 %436
  %439 = getelementptr i16, i16* %412, i64 %436
  %440 = bitcast i16* %438 to <8 x i16>*
  %441 = load <8 x i16>, <8 x i16>* %440, align 2, !alias.scope !22
  %442 = getelementptr i16, i16* %438, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  %444 = load <8 x i16>, <8 x i16>* %443, align 2, !alias.scope !22
  %445 = bitcast i16* %439 to <8 x i16>*
  store <8 x i16> %441, <8 x i16>* %445, align 2, !alias.scope !25, !noalias !22
  %446 = getelementptr i16, i16* %439, i64 8
  %447 = bitcast i16* %446 to <8 x i16>*
  store <8 x i16> %444, <8 x i16>* %447, align 2, !alias.scope !25, !noalias !22
  %448 = or i64 %436, 16
  %449 = getelementptr i16, i16* %385, i64 %448
  %450 = getelementptr i16, i16* %412, i64 %448
  %451 = bitcast i16* %449 to <8 x i16>*
  %452 = load <8 x i16>, <8 x i16>* %451, align 2, !alias.scope !22
  %453 = getelementptr i16, i16* %449, i64 8
  %454 = bitcast i16* %453 to <8 x i16>*
  %455 = load <8 x i16>, <8 x i16>* %454, align 2, !alias.scope !22
  %456 = bitcast i16* %450 to <8 x i16>*
  store <8 x i16> %452, <8 x i16>* %456, align 2, !alias.scope !25, !noalias !22
  %457 = getelementptr i16, i16* %450, i64 8
  %458 = bitcast i16* %457 to <8 x i16>*
  store <8 x i16> %455, <8 x i16>* %458, align 2, !alias.scope !25, !noalias !22
  %459 = or i64 %436, 32
  %460 = getelementptr i16, i16* %385, i64 %459
  %461 = getelementptr i16, i16* %412, i64 %459
  %462 = bitcast i16* %460 to <8 x i16>*
  %463 = load <8 x i16>, <8 x i16>* %462, align 2, !alias.scope !22
  %464 = getelementptr i16, i16* %460, i64 8
  %465 = bitcast i16* %464 to <8 x i16>*
  %466 = load <8 x i16>, <8 x i16>* %465, align 2, !alias.scope !22
  %467 = bitcast i16* %461 to <8 x i16>*
  store <8 x i16> %463, <8 x i16>* %467, align 2, !alias.scope !25, !noalias !22
  %468 = getelementptr i16, i16* %461, i64 8
  %469 = bitcast i16* %468 to <8 x i16>*
  store <8 x i16> %466, <8 x i16>* %469, align 2, !alias.scope !25, !noalias !22
  %470 = or i64 %436, 48
  %471 = getelementptr i16, i16* %385, i64 %470
  %472 = getelementptr i16, i16* %412, i64 %470
  %473 = bitcast i16* %471 to <8 x i16>*
  %474 = load <8 x i16>, <8 x i16>* %473, align 2, !alias.scope !22
  %475 = getelementptr i16, i16* %471, i64 8
  %476 = bitcast i16* %475 to <8 x i16>*
  %477 = load <8 x i16>, <8 x i16>* %476, align 2, !alias.scope !22
  %478 = bitcast i16* %472 to <8 x i16>*
  store <8 x i16> %474, <8 x i16>* %478, align 2, !alias.scope !25, !noalias !22
  %479 = getelementptr i16, i16* %472, i64 8
  %480 = bitcast i16* %479 to <8 x i16>*
  store <8 x i16> %477, <8 x i16>* %480, align 2, !alias.scope !25, !noalias !22
  %481 = add i64 %436, 64
  %482 = add i64 %437, -4
  %483 = icmp eq i64 %482, 0
  br i1 %483, label %484, label %435, !llvm.loop !27

484:                                              ; preds = %435, %423
  %485 = phi i64 [ 0, %423 ], [ %481, %435 ]
  %486 = icmp eq i64 %431, 0
  br i1 %486, label %503, label %487

487:                                              ; preds = %484, %487
  %488 = phi i64 [ %500, %487 ], [ %485, %484 ]
  %489 = phi i64 [ %501, %487 ], [ %431, %484 ]
  %490 = getelementptr i16, i16* %385, i64 %488
  %491 = getelementptr i16, i16* %412, i64 %488
  %492 = bitcast i16* %490 to <8 x i16>*
  %493 = load <8 x i16>, <8 x i16>* %492, align 2, !alias.scope !22
  %494 = getelementptr i16, i16* %490, i64 8
  %495 = bitcast i16* %494 to <8 x i16>*
  %496 = load <8 x i16>, <8 x i16>* %495, align 2, !alias.scope !22
  %497 = bitcast i16* %491 to <8 x i16>*
  store <8 x i16> %493, <8 x i16>* %497, align 2, !alias.scope !25, !noalias !22
  %498 = getelementptr i16, i16* %491, i64 8
  %499 = bitcast i16* %498 to <8 x i16>*
  store <8 x i16> %496, <8 x i16>* %499, align 2, !alias.scope !25, !noalias !22
  %500 = add i64 %488, 16
  %501 = add i64 %489, -1
  %502 = icmp eq i64 %501, 0
  br i1 %502, label %503, label %487, !llvm.loop !28

503:                                              ; preds = %487, %484
  %504 = icmp eq i64 %414, %424
  br i1 %504, label %558, label %505

505:                                              ; preds = %503, %416, %411
  %506 = phi i64 [ %413, %416 ], [ %413, %411 ], [ %425, %503 ]
  %507 = phi i16* [ %385, %416 ], [ %385, %411 ], [ %426, %503 ]
  %508 = phi i16* [ %412, %416 ], [ %412, %411 ], [ %427, %503 ]
  %509 = add i64 %506, -1
  %510 = and i64 %506, 7
  %511 = icmp eq i64 %510, 0
  br i1 %511, label %523, label %512

512:                                              ; preds = %505, %512
  %513 = phi i64 [ %518, %512 ], [ %506, %505 ]
  %514 = phi i16* [ %520, %512 ], [ %507, %505 ]
  %515 = phi i16* [ %519, %512 ], [ %508, %505 ]
  %516 = phi i64 [ %521, %512 ], [ %510, %505 ]
  %517 = load i16, i16* %514, align 2
  store i16 %517, i16* %515, align 2
  %518 = add i64 %513, -1
  %519 = getelementptr inbounds i16, i16* %515, i64 1
  %520 = getelementptr inbounds i16, i16* %514, i64 1
  %521 = add i64 %516, -1
  %522 = icmp eq i64 %521, 0
  br i1 %522, label %523, label %512, !llvm.loop !29

523:                                              ; preds = %512, %505
  %524 = phi i64 [ %506, %505 ], [ %518, %512 ]
  %525 = phi i16* [ %507, %505 ], [ %520, %512 ]
  %526 = phi i16* [ %508, %505 ], [ %519, %512 ]
  %527 = icmp ult i64 %509, 7
  br i1 %527, label %558, label %528

528:                                              ; preds = %523, %528
  %529 = phi i64 [ %554, %528 ], [ %524, %523 ]
  %530 = phi i16* [ %556, %528 ], [ %525, %523 ]
  %531 = phi i16* [ %555, %528 ], [ %526, %523 ]
  %532 = load i16, i16* %530, align 2
  store i16 %532, i16* %531, align 2
  %533 = getelementptr inbounds i16, i16* %531, i64 1
  %534 = getelementptr inbounds i16, i16* %530, i64 1
  %535 = load i16, i16* %534, align 2
  store i16 %535, i16* %533, align 2
  %536 = getelementptr inbounds i16, i16* %531, i64 2
  %537 = getelementptr inbounds i16, i16* %530, i64 2
  %538 = load i16, i16* %537, align 2
  store i16 %538, i16* %536, align 2
  %539 = getelementptr inbounds i16, i16* %531, i64 3
  %540 = getelementptr inbounds i16, i16* %530, i64 3
  %541 = load i16, i16* %540, align 2
  store i16 %541, i16* %539, align 2
  %542 = getelementptr inbounds i16, i16* %531, i64 4
  %543 = getelementptr inbounds i16, i16* %530, i64 4
  %544 = load i16, i16* %543, align 2
  store i16 %544, i16* %542, align 2
  %545 = getelementptr inbounds i16, i16* %531, i64 5
  %546 = getelementptr inbounds i16, i16* %530, i64 5
  %547 = load i16, i16* %546, align 2
  store i16 %547, i16* %545, align 2
  %548 = getelementptr inbounds i16, i16* %531, i64 6
  %549 = getelementptr inbounds i16, i16* %530, i64 6
  %550 = load i16, i16* %549, align 2
  store i16 %550, i16* %548, align 2
  %551 = getelementptr inbounds i16, i16* %531, i64 7
  %552 = getelementptr inbounds i16, i16* %530, i64 7
  %553 = load i16, i16* %552, align 2
  store i16 %553, i16* %551, align 2
  %554 = add i64 %529, -8
  %555 = getelementptr inbounds i16, i16* %531, i64 8
  %556 = getelementptr inbounds i16, i16* %530, i64 8
  %557 = icmp eq i64 %554, 0
  br i1 %557, label %558, label %528, !llvm.loop !30

558:                                              ; preds = %523, %528, %503, %380
  %559 = getelementptr inbounds %"struct.chrome_pdf::DocumentAttachmentInfo", %"struct.chrome_pdf::DocumentAttachmentInfo"* %0, i64 0, i32 5
  %560 = getelementptr inbounds %"struct.chrome_pdf::DocumentAttachmentInfo", %"struct.chrome_pdf::DocumentAttachmentInfo"* %1, i64 0, i32 5
  %561 = load i8, i8* %560, align 8, !range !31
  store i8 %561, i8* %559, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf22DocumentAttachmentInfoD2Ev(%"struct.chrome_pdf::DocumentAttachmentInfo"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.chrome_pdf::DocumentAttachmentInfo", %"struct.chrome_pdf::DocumentAttachmentInfo"* %0, i64 0, i32 4
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #8
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.chrome_pdf::DocumentAttachmentInfo", %"struct.chrome_pdf::DocumentAttachmentInfo"* %0, i64 0, i32 3
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = bitcast %"class.std::__1::basic_string"* %11 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #8
  br label %19

19:                                               ; preds = %10, %16
  %20 = bitcast %"struct.chrome_pdf::DocumentAttachmentInfo"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %20, i64 0, i32 1, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = bitcast %"struct.chrome_pdf::DocumentAttachmentInfo"* %0 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #8
  br label %27

27:                                               ; preds = %19, %24
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !8}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !8}
!31 = !{i8 0, i8 2}
