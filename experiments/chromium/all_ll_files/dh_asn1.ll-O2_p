; ModuleID = '../../third_party/boringssl/src/crypto/dh_extra/dh_asn1.c'
source_filename = "../../third_party/boringssl/src/crypto/dh_extra/dh_asn1.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.dh_st = type { %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, i32, %union.crypto_mutex_st, %struct.bn_mont_ctx_st*, %struct.bignum_st*, %struct.bignum_st*, i8*, i32, %struct.bignum_st*, i32, i32 }
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.bn_mont_ctx_st = type { %struct.bignum_st, %struct.bignum_st, [2 x i64] }
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
%struct.cbs_st = type { i8*, i64 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }

@.str = private unnamed_addr constant [58 x i8] c"../../third_party/boringssl/src/crypto/dh_extra/dh_asn1.c\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.dh_st* @DH_parse_parameters(%struct.cbs_st*) local_unnamed_addr #0 {
  %2 = alloca %struct.cbs_st, align 8
  %3 = alloca i64, align 8
  %4 = tail call %struct.dh_st* @DH_new() #3
  %5 = icmp eq %struct.dh_st* %4, null
  br i1 %5, label %43, label %6

6:                                                ; preds = %1
  %7 = bitcast %struct.cbs_st* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #3
  %8 = bitcast %struct.cbs_st* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = call i32 @CBS_get_asn1(%struct.cbs_st* %0, %struct.cbs_st* nonnull %2, i32 536870928) #3
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %40, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %4, i64 0, i32 0
  %13 = call %struct.bignum_st* @BN_new() #3
  store %struct.bignum_st* %13, %struct.bignum_st** %12, align 8
  %14 = icmp eq %struct.bignum_st* %13, null
  br i1 %14, label %40, label %15

15:                                               ; preds = %11
  %16 = call i32 @BN_parse_asn1_unsigned(%struct.cbs_st* nonnull %2, %struct.bignum_st* nonnull %13) #3
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %40, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %4, i64 0, i32 1
  %20 = call %struct.bignum_st* @BN_new() #3
  store %struct.bignum_st* %20, %struct.bignum_st** %19, align 8
  %21 = icmp eq %struct.bignum_st* %20, null
  br i1 %21, label %40, label %22

22:                                               ; preds = %18
  %23 = call i32 @BN_parse_asn1_unsigned(%struct.cbs_st* nonnull %2, %struct.bignum_st* nonnull %20) #3
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %40, label %25

25:                                               ; preds = %22
  store i64 -6148914691236517206, i64* %3, align 8
  %26 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #3
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %37, label %28

28:                                               ; preds = %25
  %29 = call i32 @CBS_get_asn1_uint64(%struct.cbs_st* nonnull %2, i64* nonnull %3) #3
  %30 = icmp eq i32 %29, 0
  %31 = load i64, i64* %3, align 8
  %32 = icmp ugt i64 %31, 4294967295
  %33 = or i1 %30, %32
  br i1 %33, label %40, label %34

34:                                               ; preds = %28
  %35 = trunc i64 %31 to i32
  %36 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %4, i64 0, i32 4
  store i32 %35, i32* %36, align 8
  br label %37

37:                                               ; preds = %25, %34
  %38 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #3
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %41, label %40

40:                                               ; preds = %18, %11, %37, %22, %15, %6, %28
  call void @ERR_put_error(i32 5, i32 0, i32 104, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 115) #3
  call void @DH_free(%struct.dh_st* nonnull %4) #3
  br label %41

41:                                               ; preds = %37, %40
  %42 = phi %struct.dh_st* [ null, %40 ], [ %4, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #3
  br label %43

43:                                               ; preds = %1, %41
  %44 = phi %struct.dh_st* [ %42, %41 ], [ null, %1 ]
  ret %struct.dh_st* %44
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.dh_st* @DH_new() local_unnamed_addr #2

declare i32 @CBS_get_asn1(%struct.cbs_st*, %struct.cbs_st*, i32) local_unnamed_addr #2

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

declare i32 @CBS_get_asn1_uint64(%struct.cbs_st*, i64*) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare void @DH_free(%struct.dh_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @DH_marshal_parameters(%struct.cbb_st*, %struct.dh_st* nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 32, i1 false)
  %5 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %3, i32 536870928) #3
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %34, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %1, i64 0, i32 0
  %9 = load %struct.bignum_st*, %struct.bignum_st** %8, align 8
  %10 = icmp eq %struct.bignum_st* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %7
  call void @ERR_put_error(i32 5, i32 0, i32 67, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 80) #3
  br label %34

12:                                               ; preds = %7
  %13 = call i32 @BN_marshal_asn1(%struct.cbb_st* nonnull %3, %struct.bignum_st* nonnull %9) #3
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %34, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %1, i64 0, i32 1
  %17 = load %struct.bignum_st*, %struct.bignum_st** %16, align 8
  %18 = icmp eq %struct.bignum_st* %17, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %15
  call void @ERR_put_error(i32 5, i32 0, i32 67, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 80) #3
  br label %34

20:                                               ; preds = %15
  %21 = call i32 @BN_marshal_asn1(%struct.cbb_st* nonnull %3, %struct.bignum_st* nonnull %17) #3
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %34, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %1, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = zext i32 %25 to i64
  %29 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %3, i64 %28) #3
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %27, %23
  %32 = call i32 @CBB_flush(%struct.cbb_st* %0) #3
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %19, %11, %27, %31, %20, %12, %2
  call void @ERR_put_error(i32 5, i32 0, i32 105, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 128) #3
  br label %35

35:                                               ; preds = %31, %34
  %36 = phi i32 [ 0, %34 ], [ 1, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #3
  ret i32 %36
}

declare i32 @CBB_add_asn1(%struct.cbb_st*, %struct.cbb_st*, i32) local_unnamed_addr #2

declare i32 @CBB_add_asn1_uint64(%struct.cbb_st*, i64) local_unnamed_addr #2

declare i32 @CBB_flush(%struct.cbb_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.dh_st* @d2i_DHparams(%struct.dh_st**, i8** nocapture, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = icmp slt i64 %2, 0
  br i1 %5, label %19, label %6

6:                                                ; preds = %3
  %7 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #3
  %8 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %1, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %4, i8* %9, i64 %2) #3
  %10 = call %struct.dh_st* @DH_parse_parameters(%struct.cbs_st* nonnull %4)
  %11 = icmp eq %struct.dh_st* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %6
  %13 = icmp eq %struct.dh_st** %0, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %12
  %15 = load %struct.dh_st*, %struct.dh_st** %0, align 8
  call void @DH_free(%struct.dh_st* %15) #3
  store %struct.dh_st* %10, %struct.dh_st** %0, align 8
  br label %16

16:                                               ; preds = %12, %14
  %17 = call i8* @CBS_data(%struct.cbs_st* nonnull %4) #3
  store i8* %17, i8** %1, align 8
  br label %18

18:                                               ; preds = %6, %16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #3
  br label %19

19:                                               ; preds = %3, %18
  %20 = phi %struct.dh_st* [ %10, %18 ], [ null, %3 ]
  ret %struct.dh_st* %20
}

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

declare i8* @CBS_data(%struct.cbs_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_DHparams(%struct.dh_st* nocapture readonly, i8**) local_unnamed_addr #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 32, i1 false)
  %5 = call i32 @CBB_init(%struct.cbb_st* nonnull %3, i64 0) #3
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = call i32 @DH_marshal_parameters(%struct.cbb_st* nonnull %3, %struct.dh_st* %0)
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %7, %2
  call void @CBB_cleanup(%struct.cbb_st* nonnull %3) #3
  br label %13

11:                                               ; preds = %7
  %12 = call i32 @CBB_finish_i2d(%struct.cbb_st* nonnull %3, i8** %1) #3
  br label %13

13:                                               ; preds = %11, %10
  %14 = phi i32 [ %12, %11 ], [ -1, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #3
  ret i32 %14
}

declare i32 @CBB_init(%struct.cbb_st*, i64) local_unnamed_addr #2

declare void @CBB_cleanup(%struct.cbb_st*) local_unnamed_addr #2

declare i32 @CBB_finish_i2d(%struct.cbb_st*, i8**) local_unnamed_addr #2

declare %struct.bignum_st* @BN_new() local_unnamed_addr #2

declare i32 @BN_parse_asn1_unsigned(%struct.cbs_st*, %struct.bignum_st*) local_unnamed_addr #2

declare i32 @BN_marshal_asn1(%struct.cbb_st*, %struct.bignum_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
