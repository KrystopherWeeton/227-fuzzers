; ModuleID = '../../ui/ozone/platform/wayland/host/wayland_window_observer.cc'
source_filename = "../../ui/ozone/platform/wayland/host/wayland_window_observer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::WaylandWindowObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.ui::WaylandWindow" = type opaque
%"class.ui::WaylandSubsurface" = type opaque

@_ZTVN2ui21WaylandWindowObserverE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::WaylandWindowObserver"*)* @_ZN2ui21WaylandWindowObserverD2Ev to i8*), i8* bitcast (void (%"class.ui::WaylandWindowObserver"*)* @_ZN2ui21WaylandWindowObserverD0Ev to i8*), i8* bitcast (void (%"class.ui::WaylandWindowObserver"*, %"class.ui::WaylandWindow"*)* @_ZN2ui21WaylandWindowObserver13OnWindowAddedEPNS_13WaylandWindowE to i8*), i8* bitcast (void (%"class.ui::WaylandWindowObserver"*, %"class.ui::WaylandWindow"*)* @_ZN2ui21WaylandWindowObserver15OnWindowRemovedEPNS_13WaylandWindowE to i8*), i8* bitcast (void (%"class.ui::WaylandWindowObserver"*, %"class.ui::WaylandWindow"*)* @_ZN2ui21WaylandWindowObserver18OnWindowConfiguredEPNS_13WaylandWindowE to i8*), i8* bitcast (void (%"class.ui::WaylandWindowObserver"*, %"class.ui::WaylandWindow"*, %"class.ui::WaylandSubsurface"*)* @_ZN2ui21WaylandWindowObserver17OnSubsurfaceAddedEPNS_13WaylandWindowEPNS_17WaylandSubsurfaceE to i8*), i8* bitcast (void (%"class.ui::WaylandWindowObserver"*, %"class.ui::WaylandWindow"*, %"class.ui::WaylandSubsurface"*)* @_ZN2ui21WaylandWindowObserver19OnSubsurfaceRemovedEPNS_13WaylandWindowEPNS_17WaylandSubsurfaceE to i8*)] }, align 8

@_ZN2ui21WaylandWindowObserverD1Ev = hidden unnamed_addr alias void (%"class.ui::WaylandWindowObserver"*), void (%"class.ui::WaylandWindowObserver"*)* @_ZN2ui21WaylandWindowObserverD2Ev

; Function Attrs: nounwind
declare void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"*) unnamed_addr #0

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui21WaylandWindowObserverD2Ev(%"class.ui::WaylandWindowObserver"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::WaylandWindowObserver", %"class.ui::WaylandWindowObserver"* %0, i64 0, i32 0
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui21WaylandWindowObserverD0Ev(%"class.ui::WaylandWindowObserver"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::WaylandWindowObserver", %"class.ui::WaylandWindowObserver"* %0, i64 0, i32 0
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %2) #4
  %3 = bitcast %"class.ui::WaylandWindowObserver"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui21WaylandWindowObserver13OnWindowAddedEPNS_13WaylandWindowE(%"class.ui::WaylandWindowObserver"* nocapture, %"class.ui::WaylandWindow"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui21WaylandWindowObserver15OnWindowRemovedEPNS_13WaylandWindowE(%"class.ui::WaylandWindowObserver"* nocapture, %"class.ui::WaylandWindow"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui21WaylandWindowObserver18OnWindowConfiguredEPNS_13WaylandWindowE(%"class.ui::WaylandWindowObserver"* nocapture, %"class.ui::WaylandWindow"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui21WaylandWindowObserver17OnSubsurfaceAddedEPNS_13WaylandWindowEPNS_17WaylandSubsurfaceE(%"class.ui::WaylandWindowObserver"* nocapture, %"class.ui::WaylandWindow"* nocapture, %"class.ui::WaylandSubsurface"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui21WaylandWindowObserver19OnSubsurfaceRemovedEPNS_13WaylandWindowEPNS_17WaylandSubsurfaceE(%"class.ui::WaylandWindowObserver"* nocapture, %"class.ui::WaylandWindow"* nocapture, %"class.ui::WaylandSubsurface"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
