; ModuleID = '../../third_party/blink/renderer/core/html/parser/html_element_stack.cc'
source_filename = "../../third_party/blink/renderer/core/html/parser/html_element_stack.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::MathMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.15 }
%class.scoped_refptr.15 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.86" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__cxx_atomic_impl.89" }
%"struct.std::__1::__cxx_atomic_impl.89" = type { %"struct.std::__1::__cxx_atomic_base_impl.90" }
%"struct.std::__1::__cxx_atomic_base_impl.90" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.133", i32, [4 x i8], %"class.std::__1::unique_ptr.269", %"class.std::__1::unique_ptr.269", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.279", %"class.std::__1::unique_ptr.285", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.297", %"class.std::__1::unique_ptr.303", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.310", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.249", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.169" = type { %"struct.std::__1::__atomic_base.170" }
%"struct.std::__1::__atomic_base.170" = type { %"struct.std::__1::__atomic_base.171" }
%"struct.std::__1::__atomic_base.171" = type { %"struct.std::__1::__cxx_atomic_impl.172" }
%"struct.std::__1::__cxx_atomic_impl.172" = type { %"struct.std::__1::__cxx_atomic_base_impl.173" }
%"struct.std::__1::__cxx_atomic_base_impl.173" = type { i64 }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::Worklist.180"* }
%"class.blink::Worklist.180" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::Worklist.187"* }
%"class.blink::Worklist.187" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::Worklist.194"* }
%"class.blink::Worklist.194" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::Worklist.201"* }
%"class.blink::Worklist.201" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::Worklist.208"* }
%"class.blink::Worklist.208" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::Worklist.215"* }
%"class.blink::Worklist.215" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::Worklist.222"* }
%"class.blink::Worklist.222" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.229", %"class.std::__1::__compressed_pair.236", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.243", [4 x i8] }>
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231", %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { i64 }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { float }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.252", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.261" }
%"class.WTF::Vector.261" = type { %"class.WTF::VectorBuffer.262" }
%"class.WTF::VectorBuffer.262" = type { %"class.WTF::VectorBufferBase.263" }
%"class.WTF::VectorBufferBase.263" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.277" }
%"class.WTF::VectorBuffer.277" = type { %"class.WTF::VectorBufferBase.278" }
%"class.WTF::VectorBufferBase.278" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.291" }
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.180"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.187"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.194"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.201"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.208"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.541" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.309 }
%class.scoped_refptr.309 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.310" = type { %"struct.std::__1::__atomic_base.311" }
%"struct.std::__1::__atomic_base.311" = type { %"struct.std::__1::__cxx_atomic_impl.312" }
%"struct.std::__1::__cxx_atomic_impl.312" = type { %"struct.std::__1::__cxx_atomic_base_impl.313" }
%"struct.std::__1::__cxx_atomic_base_impl.313" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::HTMLStackItem" = type <{ %"class.blink::Member.2", %"class.WTF::AtomicString", %"class.WTF::Vector", %"class.WTF::AtomicString", i8, [7 x i8] }>
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.6", %"class.blink::Member.6" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.6", %"class.blink::Member.8", %"class.blink::Member.6", %"class.blink::Member.6", %"class.blink::Member.10" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2", %"class.blink::Member.18", %"class.blink::Member.8", %"class.blink::Member.20", %"class.blink::Member.20", %"class.blink::Member.55", %"class.blink::Member.57", %"class.blink::Member.59", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.64", %"class.blink::HeapVector.66" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.82", %"class.WTF::Vector.82", i8, i32, %"class.blink::Member.93", %"class.blink::Member.95", %"class.blink::Member.97", %"class.blink::Member.99", %"class.blink::Member.101", %"class.blink::Member.103", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.106", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.112", %"class.blink::Member.114", %"class.blink::Member.72", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.117", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.31", %"class.blink::Member.326", %"class.blink::Member.31", %"class.blink::Member.31", %"class.blink::Member.31", %"class.blink::UserActionElementSet", %"class.blink::Member.335", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.342", i16, i8, %"class.blink::Member.349", %"class.blink::Member.351", %"class.blink::Member.353", %"class.blink::Member.355", %"class.blink::TextLinkColors", %"class.blink::Member.357", i8, [7 x i8], %"class.blink::HeapHashMap.359", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.31", %"class.WTF::Vector.366", %"class.blink::Member.371", %"class.blink::Member.373", i8, %"class.blink::Member.31", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.375", %"class.blink::HeapVector.377", %"class.std::__1::unique_ptr.385", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.391", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.404", %"class.WTF::Vector.406", i8, i8, %"class.std::__1::unique_ptr.411", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.417", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.425", i8, i32, %"class.blink::Member.427", %"class.blink::Member.429", %"class.blink::Member.431", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.433", %"class.WTF::HashMap.435", %"class.blink::Member.440", %"class.blink::Member.442", %"class.blink::Member.444", %"class.blink::Member.446", %"class.blink::Member.18", %"class.blink::Member.18", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.448", i8, i32, %"class.blink::Member.455", %"class.blink::Member.457", i32, %"class.blink::Member.459", %"class.blink::Member.461", %"class.blink::Member.463", %"class.std::__1::unique_ptr.465", i64, %"class.std::__1::unique_ptr.471", i32, i32, %"class.blink::Member.477", %"class.blink::Member.479", %"class.blink::Member.481", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.483", %"class.WTF::Vector.485", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.490", %"class.blink::Member.497", %"class.std::__1::unique_ptr.499", %"class.blink::Member.505", i8, i8, %"class.WTF::String", %"class.blink::Member.507", i8, [7 x i8], %"class.blink::HeapHashMap.509", %"class.blink::HeapObserverSet", %"class.blink::Member.523", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.525", i32, i8, i8, %"class.blink::WeakMember.527", %"class.blink::Member.528" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.75" }
%"class.blink::HeapHashMap.75" = type { %"class.WTF::HashMap.78" }
%"class.WTF::HashMap.78" = type { %"class.WTF::HashTable.79" }
%"class.WTF::HashTable.79" = type <{ %"struct.WTF::KeyValuePair.81"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.81" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.82" = type { %"class.WTF::VectorBuffer.83" }
%"class.WTF::VectorBuffer.83" = type { %"class.WTF::VectorBufferBase.84" }
%"class.WTF::VectorBufferBase.84" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.85 }
%class.scoped_refptr.85 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.86" }
%"class.blink::Member.93" = type { %"class.blink::MemberBase.94" }
%"class.blink::MemberBase.94" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.95" = type { %"class.blink::MemberBase.96" }
%"class.blink::MemberBase.96" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.97" = type { %"class.blink::MemberBase.98" }
%"class.blink::MemberBase.98" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.99" = type { %"class.blink::MemberBase.100" }
%"class.blink::MemberBase.100" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.112" = type { %"class.blink::MemberBase.113" }
%"class.blink::MemberBase.113" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.114" = type { %"class.blink::MemberBase.115" }
%"class.blink::MemberBase.115" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.72" = type { %"class.blink::MemberBase.73" }
%"class.blink::MemberBase.73" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.116 }
%class.scoped_refptr.116 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.117" = type { %"class.WTF::VectorBuffer.118" }
%"class.WTF::VectorBuffer.118" = type { %"class.WTF::VectorBufferBase.119" }
%"class.WTF::VectorBufferBase.119" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.120 }
%class.scoped_refptr.120 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.121", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.121" = type { %"class.base::RefCounted.122" }
%"class.base::RefCounted.122" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.125" }
%"class.blink::HeapHashMap.125" = type { %"class.WTF::HashMap.128" }
%"class.WTF::HashMap.128" = type { %"class.WTF::HashTable.129" }
%"class.WTF::HashTable.129" = type <{ %"struct.WTF::KeyValuePair.131"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.131" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.132" }
%"class.blink::MemberBase.132" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.328" }
%"class.blink::HeapHashMap.328" = type { %"class.WTF::HashMap.331" }
%"class.WTF::HashMap.331" = type { %"class.WTF::HashTable.332" }
%"class.WTF::HashTable.332" = type <{ %"struct.WTF::KeyValuePair.334"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.334" = type opaque
%"class.blink::Member.335" = type { %"class.blink::MemberBase.336" }
%"class.blink::MemberBase.336" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.339" }
%"class.WTF::HashTable.339" = type <{ %"class.blink::WeakMember.341"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.341" = type opaque
%"class.blink::HeapHashSet.342" = type { %"class.WTF::HashSet.345" }
%"class.WTF::HashSet.345" = type { %"class.WTF::HashTable.346" }
%"class.WTF::HashTable.346" = type <{ %"class.blink::WeakMember.348"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.348" = type opaque
%"class.blink::Member.349" = type { %"class.blink::MemberBase.350" }
%"class.blink::MemberBase.350" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.351" = type { %"class.blink::MemberBase.352" }
%"class.blink::MemberBase.352" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.353" = type { %"class.blink::MemberBase.354" }
%"class.blink::MemberBase.354" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.355" = type { %"class.blink::MemberBase.356" }
%"class.blink::MemberBase.356" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.357" = type { %"class.blink::MemberBase.358" }
%"class.blink::MemberBase.358" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.359" = type { %"class.WTF::HashMap.362" }
%"class.WTF::HashMap.362" = type { %"class.WTF::HashTable.363" }
%"class.WTF::HashTable.363" = type <{ %"struct.WTF::KeyValuePair.365"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.365" = type opaque
%"class.WTF::Vector.366" = type { %"class.WTF::VectorBuffer.367" }
%"class.WTF::VectorBuffer.367" = type { %"class.WTF::VectorBufferBase.368" }
%"class.WTF::VectorBufferBase.368" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.371" = type { %"class.blink::MemberBase.372" }
%"class.blink::MemberBase.372" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.373" = type { %"class.blink::MemberBase.374" }
%"class.blink::MemberBase.374" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.33" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.37", %"class.blink::Member.39", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.37" = type { %"class.WTF::SingleThreadedBitField.38" }
%"class.WTF::SingleThreadedBitField.38" = type { i32 }
%"class.blink::Member.39" = type { %"class.blink::MemberBase.40" }
%"class.blink::MemberBase.40" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.41 }
%class.scoped_refptr.41 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.42", %"class.WTF::AtomicString", %"class.WTF::Vector.44" }
%"class.WTF::RefCounted.42" = type { %"class.base::RefCounted.43" }
%"class.base::RefCounted.43" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.44" = type { %"class.WTF::VectorBuffer.45" }
%"class.WTF::VectorBuffer.45" = type { %"class.WTF::VectorBufferBase.46", [32 x i8] }
%"class.WTF::VectorBufferBase.46" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.377" = type { %"class.WTF::Vector.380" }
%"class.WTF::Vector.380" = type { %"class.WTF::VectorBuffer.381" }
%"class.WTF::VectorBuffer.381" = type { %"class.WTF::VectorBufferBase.382" }
%"class.WTF::VectorBufferBase.382" = type { %"class.blink::Member.383"*, i32, i32 }
%"class.blink::Member.383" = type opaque
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.391" = type { %"class.WTF::HashSet.394" }
%"class.WTF::HashSet.394" = type { %"class.WTF::HashTable.395" }
%"class.WTF::HashTable.395" = type <{ %"class.blink::WeakMember.397"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.397" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.398", i32, [4 x i8] }>
%"class.WTF::Vector.398" = type { %"class.WTF::VectorBuffer.399" }
%"class.WTF::VectorBuffer.399" = type { %"class.WTF::VectorBufferBase.400" }
%"class.WTF::VectorBufferBase.400" = type { %"struct.std::__1::pair.401"*, i32, i32 }
%"struct.std::__1::pair.401" = type opaque
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.406" = type { %"class.WTF::VectorBuffer.407" }
%"class.WTF::VectorBuffer.407" = type { %"class.WTF::VectorBufferBase.408" }
%"class.WTF::VectorBufferBase.408" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.51" }
%"class.WTF::Vector.51" = type { %"class.WTF::VectorBuffer.52" }
%"class.WTF::VectorBuffer.52" = type { %"class.WTF::VectorBufferBase.53" }
%"class.WTF::VectorBufferBase.53" = type { %"class.blink::Member.31"*, i32, i32 }
%"class.blink::HeapVector.417" = type { %"class.WTF::Vector.420" }
%"class.WTF::Vector.420" = type { %"class.WTF::VectorBuffer.421" }
%"class.WTF::VectorBuffer.421" = type { %"class.WTF::VectorBufferBase.422" }
%"class.WTF::VectorBufferBase.422" = type { %"class.blink::Member.423"*, i32, i32 }
%"class.blink::Member.423" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.18" }
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.435" = type { %"class.WTF::HashTable.436" }
%"class.WTF::HashTable.436" = type <{ %"struct.WTF::KeyValuePair.439"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.439" = type opaque
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.325", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.316, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.316 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.317" }>
%"class.base::RefCountedThreadSafe.317" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.318 }
%class.scoped_refptr.318 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.319", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.319" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.320" }
%"struct.std::__1::atomic.320" = type { %"struct.std::__1::__atomic_base.321" }
%"struct.std::__1::__atomic_base.321" = type { %"struct.std::__1::__atomic_base.322" }
%"struct.std::__1::__atomic_base.322" = type { %"struct.std::__1::__cxx_atomic_impl.323" }
%"struct.std::__1::__cxx_atomic_impl.323" = type { %"struct.std::__1::__cxx_atomic_base_impl.324" }
%"struct.std::__1::__cxx_atomic_base_impl.324" = type { i8 }
%"class.blink::WeakMember.325" = type { %"class.blink::MemberBase.19" }
%"class.blink::HeapHashSet.448" = type { %"class.WTF::HashSet.451" }
%"class.WTF::HashSet.451" = type { %"class.WTF::HashTable.452" }
%"class.WTF::HashTable.452" = type <{ %"class.blink::Member.454"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.454" = type opaque
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.485" = type { %"class.WTF::VectorBuffer.486" }
%"class.WTF::VectorBuffer.486" = type { %"class.WTF::VectorBufferBase.487" }
%"class.WTF::VectorBufferBase.487" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.490" = type { %"class.WTF::HashMap.493" }
%"class.WTF::HashMap.493" = type { %"class.WTF::HashTable.494" }
%"class.WTF::HashTable.494" = type <{ %"struct.WTF::KeyValuePair.496"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.496" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.509" = type { %"class.WTF::HashMap.512" }
%"class.WTF::HashMap.512" = type { %"class.WTF::HashTable.513" }
%"class.WTF::HashTable.513" = type <{ %"struct.WTF::KeyValuePair.515"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.515" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.516" }
%"class.blink::HeapHashSet.516" = type { %"class.WTF::HashSet.519" }
%"class.WTF::HashSet.519" = type { %"class.WTF::HashTable.520" }
%"class.WTF::HashTable.520" = type <{ %"class.blink::WeakMember.522"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.522" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.18", %"class.blink::HeapHashSet.532", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.539", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.532" = type { %"class.WTF::HashSet.535" }
%"class.WTF::HashSet.535" = type { %"class.WTF::HashTable.536" }
%"class.WTF::HashTable.536" = type <{ %"class.blink::Member.538"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.538" = type opaque
%"class.blink::HeapTaskRunnerTimer.539" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.540", { i64, i64 } }
%"class.blink::WeakMember.540" = type { %"class.blink::MemberBase.526" }
%"class.blink::WeakMember.527" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::Node"* }
%"class.blink::Member.528" = type { %"class.blink::MemberBase.529" }
%"class.blink::MemberBase.529" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.27" }
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.31", i32, %"class.blink::HeapVector" }
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.61" }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::HeapHashMap.63"* }
%"class.blink::HeapHashMap.63" = type opaque
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.66" = type { %"class.WTF::Vector.69" }
%"class.WTF::Vector.69" = type { %"class.WTF::VectorBuffer.70" }
%"class.WTF::VectorBuffer.70" = type { %"class.WTF::VectorBufferBase.71" }
%"class.WTF::VectorBufferBase.71" = type { %"class.blink::Member.72"*, i32, i32 }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::HTMLElementStack::ElementRecord" = type { %"class.blink::Member", %"class.blink::Member.16" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HTMLStackItem"* }
%"class.blink::Member.16" = type { %"class.blink::MemberBase.17" }
%"class.blink::MemberBase.17" = type { %"class.blink::HTMLElementStack::ElementRecord"* }
%"class.blink::HTMLElementStack" = type <{ %"class.blink::Member.16", %"class.blink::Member.2", %"class.blink::Member.31", %"class.blink::Member.31", i32, [4 x i8] }>
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.546", %"class.blink::Member.548", %"class.blink::Member.550", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.546" = type { %"class.blink::MemberBase.547" }
%"class.blink::MemberBase.547" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.548" = type { %"class.blink::MemberBase.549" }
%"class.blink::MemberBase.549" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.579 }
%union.anon.579 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZNK5blink13HTMLStackItem23IsNumberedHeaderElementEv = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZNK5blink13HTMLStackItem13IsSpecialNodeEv = comdat any

$_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13HTMLStackItemEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_16HTMLElementStack13ElementRecordEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16HTMLElementStack13ElementRecordEEEPhm = comdat any

$_ZN5blink9NameTraitINS_16HTMLElementStack13ElementRecordEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_16HTMLElementStack13ElementRecordEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16HTMLElementStack13ElementRecordEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink12mathml_names6kMiTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names6kMoTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names6kMnTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names6kMsTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names9kMtextTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names17kAnnotationXmlTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names13kEncodingAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str = private unnamed_addr constant [10 x i8] c"text/html\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"application/xhtml+xml\00", align 1
@_ZN5blink9svg_names17kForeignObjectTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names8kDescTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names9kTitleTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink10html_names12kTemplateTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names17xhtmlNamespaceURIE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names6kH1TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH2TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH3TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH4TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH5TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH6TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTableTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kHTMLTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTbodyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTfootTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTheadTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kTrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.2 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink10html_names10kAppletTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kCaptionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kMarqueeTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kObjectTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kTdTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kThTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kAddressTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kAreaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kArticleTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kAsideTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kBaseTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kBasefontTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kBgsoundTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names14kBlockquoteTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kBodyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kBrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kButtonTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kCenterTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kColTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kColgroupTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kCommandTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kDdTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kDetailsTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kDirTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kDivTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kDlTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kDtTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kEmbedTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kFieldsetTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names14kFigcaptionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kFigureTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kFooterTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kFormTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kFrameTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kFramesetTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kHeadTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kHeaderTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kHgroupTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kHrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kIFrameTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kImgTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kInputTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kLiTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kLinkTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kListingTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kMainTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kMenuTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kMetaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kNavTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kNoembedTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kNoframesTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kNoscriptTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kOlTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names5kPTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kParamTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names13kPlaintextTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kPreTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kScriptTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kSectionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kSelectTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kStyleTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kSummaryTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kTextareaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTitleTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kUlTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kWbrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kXmpTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_16HTMLElementStack13ElementRecordEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16HTMLElementStack13ElementRecordEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16HTMLElementStack13ElementRecordEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16HTMLElementStack13ElementRecordEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.6 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink10html_names12kOptgroupTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kOptionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8

@_ZN5blink16HTMLElementStack13ElementRecordC1EPNS_13HTMLStackItemEPS1_ = hidden unnamed_addr alias void (%"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLStackItem"*, %"class.blink::HTMLElementStack::ElementRecord"*), void (%"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLStackItem"*, %"class.blink::HTMLElementStack::ElementRecord"*)* @_ZN5blink16HTMLElementStack13ElementRecordC2EPNS_13HTMLStackItemEPS1_
@_ZN5blink16HTMLElementStackC1Ev = hidden unnamed_addr alias void (%"class.blink::HTMLElementStack"*), void (%"class.blink::HTMLElementStack"*)* @_ZN5blink16HTMLElementStackC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink16HTMLElementStack13ElementRecordC2EPNS_13HTMLStackItemEPS1_(%"class.blink::HTMLElementStack::ElementRecord"* nocapture, %"class.blink::HTMLStackItem"*, %"class.blink::HTMLElementStack::ElementRecord"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::HTMLStackItem"* %1, %"class.blink::HTMLStackItem"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::HTMLElementStack::ElementRecord"* %2, %"class.blink::HTMLElementStack::ElementRecord"** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack13ElementRecord14ReplaceElementEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack::ElementRecord"* nocapture, %"class.blink::HTMLStackItem"*) local_unnamed_addr #1 align 2 {
  %3 = ptrtoint %"class.blink::HTMLStackItem"* %1 to i64
  %4 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %0 to i64*
  store atomic i64 %3, i64* %4 monotonic, align 8
  %5 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::HTMLStackItem"* %1 to i8*
  %9 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %8) #8
  br label %10

10:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLElementStack13ElementRecord7IsAboveEPS1_(%"class.blink::HTMLElementStack::ElementRecord"* nocapture readonly, %"class.blink::HTMLElementStack::ElementRecord"* readnone) local_unnamed_addr #2 align 2 {
  br label %3

3:                                                ; preds = %8, %2
  %4 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %0, %2 ], [ %6, %8 ]
  %5 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %4, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %5, align 8
  %7 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %6, %1
  br i1 %9, label %10, label %3

10:                                               ; preds = %3, %8
  %11 = phi i1 [ true, %8 ], [ false, %3 ]
  ret i1 %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16HTMLElementStack13ElementRecord5TraceEPNS_7VisitorE(%"class.blink::HTMLElementStack::ElementRecord"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13HTMLStackItemEE5TraceEPNS_7VisitorEPKv) #8
  br label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %0, i64 0, i32 1
  %14 = bitcast %"class.blink::Member.16"* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = inttoptr i64 %15 to i8*
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, i8* nonnull %18, i8* nonnull %18, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16HTMLElementStack13ElementRecordEE5TraceEPNS_7VisitorEPKv) #8
  br label %23

23:                                               ; preds = %12, %17
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink16HTMLElementStackC2Ev(%"class.blink::HTMLElementStack"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLElementStack"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 36, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLElementStack17HasOnlyOneElementEv(%"class.blink::HTMLElementStack"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %3, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %4, align 8
  %6 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %5, null
  ret i1 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::HTMLElementStack::ElementRecord"* @_ZNK5blink16HTMLElementStack9TopRecordEv(%"class.blink::HTMLElementStack"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %2, align 8
  ret %"class.blink::HTMLElementStack::ElementRecord"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLElementStack30SecondElementIsHTMLBodyElementEv(%"class.blink::HTMLElementStack"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp ne %"class.blink::Element"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack18PopHTMLHeadElementEv(%"class.blink::HTMLElementStack"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::Member.31"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  %4 = bitcast %"class.blink::HTMLElementStack"* %0 to %"class.blink::Element"****
  %5 = load %"class.blink::Element"***, %"class.blink::Element"**** %4, align 8
  %6 = load %"class.blink::Element"**, %"class.blink::Element"*** %5, align 8
  %7 = load %"class.blink::Element"*, %"class.blink::Element"** %6, align 8
  %8 = bitcast %"class.blink::Element"* %7 to void (%"class.blink::Element"*)***
  %9 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %9, i64 111
  %11 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %10, align 8
  tail call void %11(%"class.blink::Element"* %7) #8
  %12 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %13, i64 0, i32 1, i32 0
  %15 = getelementptr inbounds %"class.blink::MemberBase.17", %"class.blink::MemberBase.17"* %14, i64 0, i32 0
  %16 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %15, align 8
  %17 = bitcast %"class.blink::MemberBase.17"* %14 to i64*
  store atomic i64 0, i64* %17 monotonic, align 8
  %18 = ptrtoint %"class.blink::HTMLElementStack::ElementRecord"* %16 to i64
  %19 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %1
  %23 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %16 to i8*
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %23) #8
  br label %25

25:                                               ; preds = %1, %22
  %26 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, -1
  store i32 %28, i32* %26, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack9PopCommonEv(%"class.blink::HTMLElementStack"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.blink::HTMLElementStack"* %0 to %"class.blink::Element"****
  %3 = load %"class.blink::Element"***, %"class.blink::Element"**** %2, align 8
  %4 = load %"class.blink::Element"**, %"class.blink::Element"*** %3, align 8
  %5 = load %"class.blink::Element"*, %"class.blink::Element"** %4, align 8
  %6 = bitcast %"class.blink::Element"* %5 to void (%"class.blink::Element"*)***
  %7 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %7, i64 111
  %9 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %8, align 8
  tail call void %9(%"class.blink::Element"* %5) #8
  %10 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %11, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.blink::MemberBase.17", %"class.blink::MemberBase.17"* %12, i64 0, i32 0
  %14 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %13, align 8
  %15 = bitcast %"class.blink::MemberBase.17"* %12 to i64*
  store atomic i64 0, i64* %15 monotonic, align 8
  %16 = ptrtoint %"class.blink::HTMLElementStack::ElementRecord"* %14 to i64
  %17 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %1
  %21 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %14 to i8*
  %22 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %21) #8
  br label %23

23:                                               ; preds = %1, %20
  %24 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = add i32 %25, -1
  store i32 %26, i32* %24, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack18PopHTMLBodyElementEv(%"class.blink::HTMLElementStack"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 3
  %3 = bitcast %"class.blink::Member.31"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  %4 = bitcast %"class.blink::HTMLElementStack"* %0 to %"class.blink::Element"****
  %5 = load %"class.blink::Element"***, %"class.blink::Element"**** %4, align 8
  %6 = load %"class.blink::Element"**, %"class.blink::Element"*** %5, align 8
  %7 = load %"class.blink::Element"*, %"class.blink::Element"** %6, align 8
  %8 = bitcast %"class.blink::Element"* %7 to void (%"class.blink::Element"*)***
  %9 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %9, i64 111
  %11 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %10, align 8
  tail call void %11(%"class.blink::Element"* %7) #8
  %12 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %13, i64 0, i32 1, i32 0
  %15 = getelementptr inbounds %"class.blink::MemberBase.17", %"class.blink::MemberBase.17"* %14, i64 0, i32 0
  %16 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %15, align 8
  %17 = bitcast %"class.blink::MemberBase.17"* %14 to i64*
  store atomic i64 0, i64* %17 monotonic, align 8
  %18 = ptrtoint %"class.blink::HTMLElementStack::ElementRecord"* %16 to i64
  %19 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %1
  %23 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %16 to i8*
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %23) #8
  br label %25

25:                                               ; preds = %1, %22
  %26 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, -1
  store i32 %28, i32* %26, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack6PopAllEv(%"class.blink::HTMLElementStack"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::Member.2"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 2
  %5 = bitcast %"class.blink::Member.31"* %4 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 3
  %7 = bitcast %"class.blink::Member.31"* %6 to i64*
  store atomic i64 0, i64* %7 monotonic, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %9, align 8
  %11 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %10, null
  br i1 %11, label %69, label %12

12:                                               ; preds = %1
  %13 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  br label %16

16:                                               ; preds = %12, %66
  %17 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %10, %12 ], [ %67, %66 ]
  %18 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %21, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %21, i64 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 12
  %26 = icmp ne i32 %25, 0
  %27 = icmp eq %"class.blink::ContainerNode"* %21, null
  %28 = or i1 %27, %26
  br i1 %28, label %53, label %29

29:                                               ; preds = %16
  %30 = bitcast %"class.blink::ContainerNode"* %21 to %"class.blink::Element"*
  %31 = bitcast %"class.blink::ContainerNode"* %21 to void (%"class.blink::Element"*)***
  %32 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %32, i64 111
  %34 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %33, align 8
  tail call void %34(%"class.blink::Element"* nonnull %30) #8
  %35 = load i32, i32* %23, align 8
  %36 = and i32 %35, 48
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %53

38:                                               ; preds = %29
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %22, i64 1, i32 2
  %41 = bitcast %"class.blink::Member.6"* %40 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %44, %46
  br i1 %47, label %48, label %53

48:                                               ; preds = %38
  %49 = bitcast %"class.blink::ContainerNode"* %21 to %"class.blink::HTMLFormControlElement"*
  %50 = getelementptr inbounds %"class.blink::HTMLFormControlElement", %"class.blink::HTMLFormControlElement"* %49, i64 0, i32 8
  %51 = load i8, i8* %50, align 4
  %52 = or i8 %51, 1
  store i8 %52, i8* %50, align 4
  br label %53

53:                                               ; preds = %38, %29, %48, %16
  %54 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %9, align 8
  %55 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %54, i64 0, i32 1, i32 0
  %56 = getelementptr inbounds %"class.blink::MemberBase.17", %"class.blink::MemberBase.17"* %55, i64 0, i32 0
  %57 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %56, align 8
  %58 = bitcast %"class.blink::MemberBase.17"* %55 to i64*
  store atomic i64 0, i64* %58 monotonic, align 8
  %59 = ptrtoint %"class.blink::HTMLElementStack::ElementRecord"* %57 to i64
  store atomic i64 %59, i64* %15 monotonic, align 8
  %60 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %53
  %63 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %57 to i8*
  %64 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %63) #8
  %65 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %9, align 8
  br label %66

66:                                               ; preds = %53, %62
  %67 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %57, %53 ], [ %65, %62 ]
  %68 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %67, null
  br i1 %68, label %69, label %16

69:                                               ; preds = %66, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.blink::HTMLElementStack"* %0 to %"class.blink::Element"****
  %3 = load %"class.blink::Element"***, %"class.blink::Element"**** %2, align 8
  %4 = load %"class.blink::Element"**, %"class.blink::Element"*** %3, align 8
  %5 = load %"class.blink::Element"*, %"class.blink::Element"** %4, align 8
  %6 = bitcast %"class.blink::Element"* %5 to void (%"class.blink::Element"*)***
  %7 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %7, i64 111
  %9 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %8, align 8
  tail call void %9(%"class.blink::Element"* %5) #8
  %10 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %11, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.blink::MemberBase.17", %"class.blink::MemberBase.17"* %12, i64 0, i32 0
  %14 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %13, align 8
  %15 = bitcast %"class.blink::MemberBase.17"* %12 to i64*
  store atomic i64 0, i64* %15 monotonic, align 8
  %16 = ptrtoint %"class.blink::HTMLElementStack::ElementRecord"* %14 to i64
  %17 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %1
  %21 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %14 to i8*
  %22 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %21) #8
  br label %23

23:                                               ; preds = %1, %20
  %24 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = add i32 %25, -1
  store i32 %26, i32* %24, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack8PopUntilERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* nocapture, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  %8 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  br label %9

9:                                                ; preds = %40, %2
  %10 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %14, %15
  %17 = bitcast %"class.blink::HTMLStackItem"* %12 to %"class.blink::Element"**
  br i1 %16, label %18, label %23

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %12, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %20, %21
  br i1 %22, label %43, label %23

23:                                               ; preds = %9, %18
  %24 = load %"class.blink::Element"*, %"class.blink::Element"** %17, align 8
  %25 = bitcast %"class.blink::Element"* %24 to void (%"class.blink::Element"*)***
  %26 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %26, i64 111
  %28 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %27, align 8
  tail call void %28(%"class.blink::Element"* %24) #8
  %29 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %29, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.blink::MemberBase.17", %"class.blink::MemberBase.17"* %30, i64 0, i32 0
  %32 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %31, align 8
  %33 = bitcast %"class.blink::MemberBase.17"* %30 to i64*
  store atomic i64 0, i64* %33 monotonic, align 8
  %34 = ptrtoint %"class.blink::HTMLElementStack::ElementRecord"* %32 to i64
  store atomic i64 %34, i64* %7 monotonic, align 8
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %23
  %38 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %32 to i8*
  %39 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %38) #8
  br label %40

40:                                               ; preds = %23, %37
  %41 = load i32, i32* %8, align 8
  %42 = add i32 %41, -1
  store i32 %42, i32* %8, align 8
  br label %9

43:                                               ; preds = %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack14PopUntilPoppedERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* nocapture, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  %8 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  br label %9

9:                                                ; preds = %40, %2
  %10 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %14, %15
  %17 = bitcast %"class.blink::HTMLStackItem"* %12 to %"class.blink::Element"**
  br i1 %16, label %18, label %23

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %12, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %20, %21
  br i1 %22, label %43, label %23

23:                                               ; preds = %18, %9
  %24 = load %"class.blink::Element"*, %"class.blink::Element"** %17, align 8
  %25 = bitcast %"class.blink::Element"* %24 to void (%"class.blink::Element"*)***
  %26 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %26, i64 111
  %28 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %27, align 8
  tail call void %28(%"class.blink::Element"* %24) #8
  %29 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %29, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.blink::MemberBase.17", %"class.blink::MemberBase.17"* %30, i64 0, i32 0
  %32 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %31, align 8
  %33 = bitcast %"class.blink::MemberBase.17"* %30 to i64*
  store atomic i64 0, i64* %33 monotonic, align 8
  %34 = ptrtoint %"class.blink::HTMLElementStack::ElementRecord"* %32 to i64
  store atomic i64 %34, i64* %7 monotonic, align 8
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %23
  %38 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %32 to i8*
  %39 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %38) #8
  br label %40

40:                                               ; preds = %37, %23
  %41 = load i32, i32* %8, align 8
  %42 = add i32 %41, -1
  store i32 %42, i32* %8, align 8
  br label %9

43:                                               ; preds = %18
  %44 = bitcast %"class.blink::HTMLStackItem"* %12 to %"class.blink::Element"**
  %45 = load %"class.blink::Element"*, %"class.blink::Element"** %44, align 8
  %46 = bitcast %"class.blink::Element"* %45 to void (%"class.blink::Element"*)***
  %47 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %47, i64 111
  %49 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %48, align 8
  tail call void %49(%"class.blink::Element"* %45) #8
  %50 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %51 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %50, i64 0, i32 1, i32 0
  %52 = getelementptr inbounds %"class.blink::MemberBase.17", %"class.blink::MemberBase.17"* %51, i64 0, i32 0
  %53 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %52, align 8
  %54 = bitcast %"class.blink::MemberBase.17"* %51 to i64*
  store atomic i64 0, i64* %54 monotonic, align 8
  %55 = ptrtoint %"class.blink::HTMLElementStack::ElementRecord"* %53 to i64
  store atomic i64 %55, i64* %7 monotonic, align 8
  %56 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %43
  %59 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %53 to i8*
  %60 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %59) #8
  br label %61

61:                                               ; preds = %43, %58
  %62 = load i32, i32* %8, align 8
  %63 = add i32 %62, -1
  store i32 %63, i32* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack35PopUntilNumberedHeaderElementPoppedEv(%"class.blink::HTMLElementStack"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = bitcast %"class.blink::HTMLElementStack"* %0 to %"class.blink::Element"****
  %4 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  %5 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  br label %6

6:                                                ; preds = %29, %1
  %7 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %2, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %8, align 8
  %10 = tail call zeroext i1 @_ZNK5blink13HTMLStackItem23IsNumberedHeaderElementEv(%"class.blink::HTMLStackItem"* %9)
  %11 = load %"class.blink::Element"***, %"class.blink::Element"**** %3, align 8
  %12 = load %"class.blink::Element"**, %"class.blink::Element"*** %11, align 8
  %13 = load %"class.blink::Element"*, %"class.blink::Element"** %12, align 8
  %14 = bitcast %"class.blink::Element"* %13 to void (%"class.blink::Element"*)***
  %15 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %15, i64 111
  %17 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %16, align 8
  tail call void %17(%"class.blink::Element"* %13) #8
  %18 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %18, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.blink::MemberBase.17", %"class.blink::MemberBase.17"* %19, i64 0, i32 0
  %21 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %20, align 8
  %22 = bitcast %"class.blink::MemberBase.17"* %19 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  %23 = ptrtoint %"class.blink::HTMLElementStack::ElementRecord"* %21 to i64
  store atomic i64 %23, i64* %4 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %6
  %27 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %21 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #8
  br label %29

29:                                               ; preds = %6, %26
  %30 = load i32, i32* %5, align 8
  %31 = add i32 %30, -1
  store i32 %31, i32* %5, align 8
  br i1 %10, label %32, label %6

32:                                               ; preds = %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13HTMLStackItem23IsNumberedHeaderElementEv(%"class.blink::HTMLStackItem"*) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH1TagE to %"class.blink::QualifiedName"**), align 8
  %3 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %4, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %6, %8
  br i1 %9, label %10, label %16

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %12, %14
  br i1 %15, label %81, label %16

16:                                               ; preds = %1, %10
  %17 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH2TagE to %"class.blink::QualifiedName"**), align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %6, %21
  br i1 %22, label %23, label %29

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %25, %27
  br i1 %28, label %81, label %29

29:                                               ; preds = %16, %23
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH3TagE to %"class.blink::QualifiedName"**), align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %6, %34
  br i1 %35, label %36, label %42

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 4, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %38, %40
  br i1 %41, label %81, label %42

42:                                               ; preds = %29, %36
  %43 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH4TagE to %"class.blink::QualifiedName"**), align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %6, %47
  br i1 %48, label %49, label %55

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 4, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %51, %53
  br i1 %54, label %81, label %55

55:                                               ; preds = %42, %49
  %56 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH5TagE to %"class.blink::QualifiedName"**), align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %6, %60
  br i1 %61, label %62, label %68

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 4, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %64, %66
  br i1 %67, label %81, label %68

68:                                               ; preds = %55, %62
  %69 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH6TagE to %"class.blink::QualifiedName"**), align 8
  %70 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %71, i64 0, i32 3, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %6, %73
  br i1 %74, label %75, label %81

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %71, i64 0, i32 4, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %77, %79
  br label %81

81:                                               ; preds = %75, %68, %62, %49, %36, %23, %10
  %82 = phi i1 [ true, %62 ], [ true, %49 ], [ true, %36 ], [ true, %23 ], [ true, %10 ], [ false, %68 ], [ %80, %75 ]
  ret i1 %82
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack8PopUntilEPNS_7ElementE(%"class.blink::HTMLElementStack"* nocapture, %"class.blink::Element"* readnone) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.blink::HTMLElementStack"* %0 to %"class.blink::Element"****
  %4 = load %"class.blink::Element"***, %"class.blink::Element"**** %3, align 8
  %5 = load %"class.blink::Element"**, %"class.blink::Element"*** %4, align 8
  %6 = load %"class.blink::Element"*, %"class.blink::Element"** %5, align 8
  %7 = icmp eq %"class.blink::Element"* %6, %1
  br i1 %7, label %38, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  %11 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  br label %12

12:                                               ; preds = %8, %31
  %13 = phi %"class.blink::Element"* [ %6, %8 ], [ %36, %31 ]
  %14 = bitcast %"class.blink::Element"* %13 to void (%"class.blink::Element"*)***
  %15 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %15, i64 111
  %17 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %16, align 8
  tail call void %17(%"class.blink::Element"* %13) #8
  %18 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %9, align 8
  %19 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %18, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.blink::MemberBase.17", %"class.blink::MemberBase.17"* %19, i64 0, i32 0
  %21 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %20, align 8
  %22 = bitcast %"class.blink::MemberBase.17"* %19 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  %23 = ptrtoint %"class.blink::HTMLElementStack::ElementRecord"* %21 to i64
  store atomic i64 %23, i64* %10 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  %26 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %21 to %"class.blink::Element"***
  br i1 %25, label %31, label %27

27:                                               ; preds = %12
  %28 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %21 to i8*
  %29 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %28) #8
  %30 = load %"class.blink::Element"***, %"class.blink::Element"**** %3, align 8
  br label %31

31:                                               ; preds = %12, %27
  %32 = phi %"class.blink::Element"*** [ %26, %12 ], [ %30, %27 ]
  %33 = load i32, i32* %11, align 8
  %34 = add i32 %33, -1
  store i32 %34, i32* %11, align 8
  %35 = load %"class.blink::Element"**, %"class.blink::Element"*** %32, align 8
  %36 = load %"class.blink::Element"*, %"class.blink::Element"** %35, align 8
  %37 = icmp eq %"class.blink::Element"* %36, %1
  br i1 %37, label %38, label %12

38:                                               ; preds = %31, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack14PopUntilPoppedEPNS_7ElementE(%"class.blink::HTMLElementStack"* nocapture, %"class.blink::Element"* readnone) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.blink::HTMLElementStack"* %0 to %"class.blink::Element"****
  %4 = load %"class.blink::Element"***, %"class.blink::Element"**** %3, align 8
  %5 = load %"class.blink::Element"**, %"class.blink::Element"*** %4, align 8
  %6 = load %"class.blink::Element"*, %"class.blink::Element"** %5, align 8
  %7 = icmp eq %"class.blink::Element"* %6, %1
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  br label %45

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  %13 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  br label %14

14:                                               ; preds = %34, %10
  %15 = phi %"class.blink::Element"* [ %6, %10 ], [ %40, %34 ]
  %16 = bitcast %"class.blink::Element"* %15 to void (%"class.blink::Element"*)***
  %17 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %17, i64 111
  %19 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %18, align 8
  tail call void %19(%"class.blink::Element"* %15) #8
  %20 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %11, align 8
  %21 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %20, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.blink::MemberBase.17", %"class.blink::MemberBase.17"* %21, i64 0, i32 0
  %23 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %22, align 8
  %24 = bitcast %"class.blink::MemberBase.17"* %21 to i64*
  store atomic i64 0, i64* %24 monotonic, align 8
  %25 = ptrtoint %"class.blink::HTMLElementStack::ElementRecord"* %23 to i64
  store atomic i64 %25, i64* %12 monotonic, align 8
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  %28 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %23 to %"class.blink::Element"***
  %29 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %23 to %"class.blink::Element"***
  br i1 %27, label %34, label %30

30:                                               ; preds = %14
  %31 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %23 to i8*
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %31) #8
  %33 = load %"class.blink::Element"***, %"class.blink::Element"**** %3, align 8
  br label %34

34:                                               ; preds = %30, %14
  %35 = phi %"class.blink::Element"*** [ %29, %14 ], [ %33, %30 ]
  %36 = phi %"class.blink::Element"*** [ %28, %14 ], [ %33, %30 ]
  %37 = load i32, i32* %13, align 8
  %38 = add i32 %37, -1
  store i32 %38, i32* %13, align 8
  %39 = load %"class.blink::Element"**, %"class.blink::Element"*** %36, align 8
  %40 = load %"class.blink::Element"*, %"class.blink::Element"** %39, align 8
  %41 = icmp eq %"class.blink::Element"* %40, %1
  br i1 %41, label %42, label %14

42:                                               ; preds = %34
  %43 = load %"class.blink::Element"**, %"class.blink::Element"*** %35, align 8
  %44 = load %"class.blink::Element"*, %"class.blink::Element"** %43, align 8
  br label %45

45:                                               ; preds = %8, %42
  %46 = phi i64* [ %9, %8 ], [ %12, %42 ]
  %47 = phi %"class.blink::Element"* [ %1, %8 ], [ %44, %42 ]
  %48 = bitcast %"class.blink::Element"* %47 to void (%"class.blink::Element"*)***
  %49 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %49, i64 111
  %51 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %50, align 8
  tail call void %51(%"class.blink::Element"* %47) #8
  %52 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %53, i64 0, i32 1, i32 0
  %55 = getelementptr inbounds %"class.blink::MemberBase.17", %"class.blink::MemberBase.17"* %54, i64 0, i32 0
  %56 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %55, align 8
  %57 = bitcast %"class.blink::MemberBase.17"* %54 to i64*
  store atomic i64 0, i64* %57 monotonic, align 8
  %58 = ptrtoint %"class.blink::HTMLElementStack::ElementRecord"* %56 to i64
  store atomic i64 %58, i64* %46 monotonic, align 8
  %59 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %45
  %62 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %56 to i8*
  %63 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %62) #8
  br label %64

64:                                               ; preds = %45, %61
  %65 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  %66 = load i32, i32* %65, align 8
  %67 = add i32 %66, -1
  store i32 %67, i32* %65, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack24PopUntilTableScopeMarkerEv(%"class.blink::HTMLElementStack"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE to %"class.blink::QualifiedName"**), align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  %10 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  br label %11

11:                                               ; preds = %71, %1
  %12 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %2, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %13, align 8
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %17, %19
  %21 = bitcast %"class.blink::HTMLStackItem"* %14 to %"class.blink::Element"**
  br i1 %20, label %22, label %28

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 4, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %24, %26
  br i1 %27, label %74, label %28

28:                                               ; preds = %22, %11
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 3, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %17, %31
  br i1 %32, label %33, label %39

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 4, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %35, %37
  br i1 %38, label %74, label %39

39:                                               ; preds = %33, %28
  %40 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %14, i64 0, i32 4
  %41 = load i8, i8* %40, align 8, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %74

43:                                               ; preds = %39
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %17, %46
  br i1 %47, label %48, label %54

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 4, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %50, %52
  br i1 %53, label %74, label %54

54:                                               ; preds = %43, %48
  %55 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %56 = bitcast %"class.blink::Element"* %55 to void (%"class.blink::Element"*)***
  %57 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %57, i64 111
  %59 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %58, align 8
  tail call void %59(%"class.blink::Element"* %55) #8
  %60 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %2, align 8
  %61 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %60, i64 0, i32 1, i32 0
  %62 = getelementptr inbounds %"class.blink::MemberBase.17", %"class.blink::MemberBase.17"* %61, i64 0, i32 0
  %63 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %62, align 8
  %64 = bitcast %"class.blink::MemberBase.17"* %61 to i64*
  store atomic i64 0, i64* %64 monotonic, align 8
  %65 = ptrtoint %"class.blink::HTMLElementStack::ElementRecord"* %63 to i64
  store atomic i64 %65, i64* %9 monotonic, align 8
  %66 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %54
  %69 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %63 to i8*
  %70 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %69) #8
  br label %71

71:                                               ; preds = %54, %68
  %72 = load i32, i32* %10, align 8
  %73 = add i32 %72, -1
  store i32 %73, i32* %10, align 8
  br label %11

74:                                               ; preds = %39, %22, %33, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack28PopUntilTableBodyScopeMarkerEv(%"class.blink::HTMLElementStack"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE to %"class.blink::QualifiedName"**), align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE to %"class.blink::QualifiedName"**), align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE to %"class.blink::QualifiedName"**), align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %10 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %12 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 0, i32 0, i32 0
  %13 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  %14 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  br label %15

15:                                               ; preds = %97, %1
  %16 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %2, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %17, align 8
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %20 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %18, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  %25 = bitcast %"class.blink::HTMLStackItem"* %18 to %"class.blink::Element"**
  br i1 %24, label %26, label %32

26:                                               ; preds = %15
  %27 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 4, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %28, %30
  br i1 %31, label %100, label %32

32:                                               ; preds = %26, %15
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %21, %35
  br i1 %36, label %37, label %43

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %39, %41
  br i1 %42, label %100, label %43

43:                                               ; preds = %37, %32
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %21, %46
  br i1 %47, label %48, label %54

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 4, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %50, %52
  br i1 %53, label %100, label %54

54:                                               ; preds = %48, %43
  %55 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %55, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %21, %57
  br i1 %58, label %59, label %65

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %55, i64 0, i32 4, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %61, %63
  br i1 %64, label %100, label %65

65:                                               ; preds = %59, %54
  %66 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %18, i64 0, i32 4
  %67 = load i8, i8* %66, align 8, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %100

69:                                               ; preds = %65
  %70 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %71 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %70, i64 0, i32 3, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %21, %72
  br i1 %73, label %74, label %80

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %70, i64 0, i32 4, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %76, %78
  br i1 %79, label %100, label %80

80:                                               ; preds = %69, %74
  %81 = load %"class.blink::Element"*, %"class.blink::Element"** %25, align 8
  %82 = bitcast %"class.blink::Element"* %81 to void (%"class.blink::Element"*)***
  %83 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %83, i64 111
  %85 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %84, align 8
  tail call void %85(%"class.blink::Element"* %81) #8
  %86 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %2, align 8
  %87 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %86, i64 0, i32 1, i32 0
  %88 = getelementptr inbounds %"class.blink::MemberBase.17", %"class.blink::MemberBase.17"* %87, i64 0, i32 0
  %89 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %88, align 8
  %90 = bitcast %"class.blink::MemberBase.17"* %87 to i64*
  store atomic i64 0, i64* %90 monotonic, align 8
  %91 = ptrtoint %"class.blink::HTMLElementStack::ElementRecord"* %89 to i64
  store atomic i64 %91, i64* %13 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %80
  %95 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %89 to i8*
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #8
  br label %97

97:                                               ; preds = %80, %94
  %98 = load i32, i32* %14, align 8
  %99 = add i32 %98, -1
  store i32 %99, i32* %14, align 8
  br label %15

100:                                              ; preds = %65, %26, %37, %48, %59, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack27PopUntilTableRowScopeMarkerEv(%"class.blink::HTMLElementStack"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE to %"class.blink::QualifiedName"**), align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  %10 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  br label %11

11:                                               ; preds = %71, %1
  %12 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %2, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %13, align 8
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %17, %19
  %21 = bitcast %"class.blink::HTMLStackItem"* %14 to %"class.blink::Element"**
  br i1 %20, label %22, label %28

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 4, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %24, %26
  br i1 %27, label %74, label %28

28:                                               ; preds = %22, %11
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 3, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %17, %31
  br i1 %32, label %33, label %39

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 4, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %35, %37
  br i1 %38, label %74, label %39

39:                                               ; preds = %33, %28
  %40 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %14, i64 0, i32 4
  %41 = load i8, i8* %40, align 8, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %74

43:                                               ; preds = %39
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %17, %46
  br i1 %47, label %48, label %54

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 4, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %50, %52
  br i1 %53, label %74, label %54

54:                                               ; preds = %43, %48
  %55 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %56 = bitcast %"class.blink::Element"* %55 to void (%"class.blink::Element"*)***
  %57 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %57, i64 111
  %59 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %58, align 8
  tail call void %59(%"class.blink::Element"* %55) #8
  %60 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %2, align 8
  %61 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %60, i64 0, i32 1, i32 0
  %62 = getelementptr inbounds %"class.blink::MemberBase.17", %"class.blink::MemberBase.17"* %61, i64 0, i32 0
  %63 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %62, align 8
  %64 = bitcast %"class.blink::MemberBase.17"* %61 to i64*
  store atomic i64 0, i64* %64 monotonic, align 8
  %65 = ptrtoint %"class.blink::HTMLElementStack::ElementRecord"* %63 to i64
  store atomic i64 %65, i64* %9 monotonic, align 8
  %66 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %54
  %69 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %63 to i8*
  %70 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %69) #8
  br label %71

71:                                               ; preds = %54, %68
  %72 = load i32, i32* %10, align 8
  %73 = add i32 %72, -1
  store i32 %73, i32* %10, align 8
  br label %11

74:                                               ; preds = %39, %22, %33, %48
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink16HTMLElementStack28IsMathMLTextIntegrationPointEPNS_13HTMLStackItemE(%"class.blink::HTMLStackItem"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %72

5:                                                ; preds = %1
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMiTagE to %"class.blink::QualifiedName"**), align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %8, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %10, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %16, %18
  br i1 %19, label %72, label %20

20:                                               ; preds = %5, %14
  %21 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMoTagE to %"class.blink::QualifiedName"**), align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %10, %25
  br i1 %26, label %27, label %33

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 4, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %29, %31
  br i1 %32, label %72, label %33

33:                                               ; preds = %20, %27
  %34 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMnTagE to %"class.blink::QualifiedName"**), align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %10, %38
  br i1 %39, label %40, label %46

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %42, %44
  br i1 %45, label %72, label %46

46:                                               ; preds = %33, %40
  %47 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMsTagE to %"class.blink::QualifiedName"**), align 8
  %48 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %10, %51
  br i1 %52, label %53, label %59

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 4, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %55, %57
  br i1 %58, label %72, label %59

59:                                               ; preds = %46, %53
  %60 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names9kMtextTagE to %"class.blink::QualifiedName"**), align 8
  %61 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %10, %64
  br i1 %65, label %66, label %72

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 4, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %68, %70
  br label %72

72:                                               ; preds = %66, %59, %14, %27, %40, %53, %1
  %73 = phi i1 [ false, %1 ], [ true, %53 ], [ true, %40 ], [ true, %27 ], [ true, %14 ], [ false, %59 ], [ %71, %66 ]
  ret i1 %73
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16HTMLElementStack22IsHTMLIntegrationPointEPNS_13HTMLStackItemE(%"class.blink::HTMLStackItem"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 4
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %170

6:                                                ; preds = %1
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names17kAnnotationXmlTagE to %"class.blink::QualifiedName"**), align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %9, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %11, %13
  br i1 %14, label %15, label %131

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %17, %19
  br i1 %20, label %21, label %131

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 2
  %23 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %170, label %26

26:                                               ; preds = %21
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink12mathml_names13kEncodingAttrE, align 8
  %28 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %48, %26
  %30 = phi i32 [ 0, %26 ], [ %49, %48 ]
  %31 = tail call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %22, i32 %30) #8
  %32 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %35 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %33, %34
  br i1 %35, label %52, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %38, %40
  br i1 %41, label %42, label %48

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %44, %46
  br i1 %47, label %52, label %48

48:                                               ; preds = %42, %36
  %49 = add nuw i32 %30, 1
  %50 = load i32, i32* %23, align 4
  %51 = icmp ult i32 %49, %50
  br i1 %51, label %29, label %170

52:                                               ; preds = %29, %42
  %53 = tail call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %22, i32 %30) #8
  %54 = icmp eq %"class.blink::Attribute"* %53, null
  br i1 %54, label %170, label %55

55:                                               ; preds = %52
  %56 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #8
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %53, i64 0, i32 1, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %60, label %64

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %61, align 8
  %62 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %63 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %62, i64* %63, align 8
  br label %71

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %65, align 8
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 1
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %70 = bitcast i8** %69 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %70, align 8
  br label %71

71:                                               ; preds = %60, %64
  %72 = phi i32 [ %67, %64 ], [ 0, %60 ]
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %72, i32* %73, align 8
  %74 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [10 x i8]* nonnull dereferenceable(10) @.str)
  br i1 %74, label %129, label %75

75:                                               ; preds = %71
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %129, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 1
  %82 = bitcast %"class.WTF::StringImpl"* %81 to i8*
  %83 = icmp eq i32 %80, 21
  br i1 %83, label %84, label %129

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %107, label %91

89:                                               ; preds = %91
  %90 = icmp eq i64 %106, 21
  br i1 %90, label %129, label %190

91:                                               ; preds = %84, %204
  %92 = phi i64 [ %205, %204 ], [ 0, %84 ]
  %93 = getelementptr inbounds i8, i8* %82, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i64
  %96 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.1, i64 0, i64 %92
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i64
  %102 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %101
  %103 = load i8, i8* %102, align 1
  %104 = sext i8 %103 to i32
  %105 = icmp eq i32 %98, %104
  %106 = or i64 %92, 1
  br i1 %105, label %89, label %129

107:                                              ; preds = %84
  %108 = bitcast %"class.WTF::StringImpl"* %81 to i16*
  br label %111

109:                                              ; preds = %111
  %110 = icmp eq i64 %128, 21
  br i1 %110, label %129, label %172

111:                                              ; preds = %188, %107
  %112 = phi i64 [ 0, %107 ], [ %189, %188 ]
  %113 = getelementptr inbounds i16, i16* %108, i64 %112
  %114 = load i16, i16* %113, align 2
  %115 = add i16 %114, -65
  %116 = icmp ult i16 %115, 26
  %117 = zext i1 %116 to i16
  %118 = shl nuw nsw i16 %117, 5
  %119 = or i16 %118, %114
  %120 = zext i16 %119 to i32
  %121 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.1, i64 0, i64 %112
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i64
  %124 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %123
  %125 = load i8, i8* %124, align 1
  %126 = sext i8 %125 to i32
  %127 = icmp eq i32 %120, %126
  %128 = or i64 %112, 1
  br i1 %127, label %109, label %129

129:                                              ; preds = %91, %89, %190, %111, %109, %172, %75, %78, %71
  %130 = phi i1 [ true, %71 ], [ false, %78 ], [ false, %75 ], [ true, %109 ], [ false, %111 ], [ false, %172 ], [ true, %89 ], [ false, %91 ], [ false, %190 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #8
  br label %170

131:                                              ; preds = %6, %15
  %132 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names17kForeignObjectTagE to %"class.blink::QualifiedName"**), align 8
  %133 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %132, i64 0, i32 0, i32 0
  %134 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %134, i64 0, i32 3, i32 0, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %11, %136
  br i1 %137, label %138, label %144

138:                                              ; preds = %131
  %139 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %134, i64 0, i32 4, i32 0, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %140, %142
  br i1 %143, label %170, label %144

144:                                              ; preds = %131, %138
  %145 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names8kDescTagE to %"class.blink::QualifiedName"**), align 8
  %146 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %145, i64 0, i32 0, i32 0
  %147 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %147, i64 0, i32 3, i32 0, i32 0, i32 0
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %11, %149
  br i1 %150, label %151, label %157

151:                                              ; preds = %144
  %152 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %154 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %147, i64 0, i32 4, i32 0, i32 0, i32 0
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %156 = icmp eq %"class.WTF::StringImpl"* %153, %155
  br i1 %156, label %170, label %157

157:                                              ; preds = %144, %151
  %158 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kTitleTagE to %"class.blink::QualifiedName"**), align 8
  %159 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %158, i64 0, i32 0, i32 0
  %160 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %159, align 8
  %161 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %160, i64 0, i32 3, i32 0, i32 0, i32 0
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %11, %162
  br i1 %163, label %164, label %170

164:                                              ; preds = %157
  %165 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %167 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %160, i64 0, i32 4, i32 0, i32 0, i32 0
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %166, %168
  br label %170

170:                                              ; preds = %48, %21, %164, %157, %138, %151, %129, %52, %1
  %171 = phi i1 [ false, %1 ], [ %130, %129 ], [ false, %52 ], [ true, %151 ], [ true, %138 ], [ false, %157 ], [ %169, %164 ], [ false, %21 ], [ false, %48 ]
  ret i1 %171

172:                                              ; preds = %109
  %173 = getelementptr inbounds i16, i16* %108, i64 %128
  %174 = load i16, i16* %173, align 2
  %175 = add i16 %174, -65
  %176 = icmp ult i16 %175, 26
  %177 = zext i1 %176 to i16
  %178 = shl nuw nsw i16 %177, 5
  %179 = or i16 %178, %174
  %180 = zext i16 %179 to i32
  %181 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.1, i64 0, i64 %128
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i64
  %184 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = sext i8 %185 to i32
  %187 = icmp eq i32 %180, %186
  br i1 %187, label %188, label %129

188:                                              ; preds = %172
  %189 = add nuw nsw i64 %112, 2
  br label %111

190:                                              ; preds = %89
  %191 = getelementptr inbounds i8, i8* %82, i64 %106
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i64
  %194 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %193
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i32
  %197 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.1, i64 0, i64 %106
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i64
  %200 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %199
  %201 = load i8, i8* %200, align 1
  %202 = sext i8 %201 to i32
  %203 = icmp eq i32 %196, %202
  br i1 %203, label %204, label %129

204:                                              ; preds = %190
  %205 = add nuw nsw i64 %92, 2
  br label %91
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [10 x i8]* dereferenceable(10)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 9
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %189, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %273, %14, %28, %189, %203, %217, %231, %245, %259, %42, %59, %77, %93, %109, %125, %141, %157, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %157 ], [ false, %14 ], [ false, %28 ], [ false, %189 ], [ false, %203 ], [ false, %217 ], [ false, %231 ], [ false, %245 ], [ false, %259 ], [ %286, %273 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  br i1 %172, label %173, label %75

173:                                              ; preds = %157
  %174 = getelementptr inbounds i16, i16* %44, i64 8
  %175 = load i16, i16* %174, align 2
  %176 = add i16 %175, -65
  %177 = icmp ult i16 %176, 26
  %178 = zext i1 %177 to i16
  %179 = shl nuw nsw i16 %178, 5
  %180 = or i16 %179, %175
  %181 = zext i16 %180 to i32
  %182 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %181, %187
  ret i1 %188

189:                                              ; preds = %28
  %190 = getelementptr inbounds i8, i8* %15, i64 2
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i32
  %196 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i64
  %199 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %198
  %200 = load i8, i8* %199, align 1
  %201 = sext i8 %200 to i32
  %202 = icmp eq i32 %195, %201
  br i1 %202, label %203, label %75

203:                                              ; preds = %189
  %204 = getelementptr inbounds i8, i8* %15, i64 3
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i64
  %207 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %206
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i64
  %213 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %212
  %214 = load i8, i8* %213, align 1
  %215 = sext i8 %214 to i32
  %216 = icmp eq i32 %209, %215
  br i1 %216, label %217, label %75

217:                                              ; preds = %203
  %218 = getelementptr inbounds i8, i8* %15, i64 4
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i64
  %221 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %220
  %222 = load i8, i8* %221, align 1
  %223 = zext i8 %222 to i32
  %224 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i64
  %227 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %226
  %228 = load i8, i8* %227, align 1
  %229 = sext i8 %228 to i32
  %230 = icmp eq i32 %223, %229
  br i1 %230, label %231, label %75

231:                                              ; preds = %217
  %232 = getelementptr inbounds i8, i8* %15, i64 5
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i64
  %235 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %234
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i64
  %241 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = sext i8 %242 to i32
  %244 = icmp eq i32 %237, %243
  br i1 %244, label %245, label %75

245:                                              ; preds = %231
  %246 = getelementptr inbounds i8, i8* %15, i64 6
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i64
  %249 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %248
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i32
  %252 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %253 = load i8, i8* %252, align 1
  %254 = zext i8 %253 to i64
  %255 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %254
  %256 = load i8, i8* %255, align 1
  %257 = sext i8 %256 to i32
  %258 = icmp eq i32 %251, %257
  br i1 %258, label %259, label %75

259:                                              ; preds = %245
  %260 = getelementptr inbounds i8, i8* %15, i64 7
  %261 = load i8, i8* %260, align 1
  %262 = zext i8 %261 to i64
  %263 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i32
  %266 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %267 to i64
  %269 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %268
  %270 = load i8, i8* %269, align 1
  %271 = sext i8 %270 to i32
  %272 = icmp eq i32 %265, %271
  br i1 %272, label %273, label %75

273:                                              ; preds = %259
  %274 = getelementptr inbounds i8, i8* %15, i64 8
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i64
  %277 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %276
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i32
  %280 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i64
  %283 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %282
  %284 = load i8, i8* %283, align 1
  %285 = sext i8 %284 to i32
  %286 = icmp eq i32 %279, %285
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack33PopUntilForeignContentScopeMarkerEv(%"class.blink::HTMLElementStack"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMiTagE to %"class.blink::QualifiedName"**), align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMoTagE to %"class.blink::QualifiedName"**), align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMnTagE to %"class.blink::QualifiedName"**), align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMsTagE to %"class.blink::QualifiedName"**), align 8
  %10 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names9kMtextTagE to %"class.blink::QualifiedName"**), align 8
  %12 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.blink::HTMLElementStack"* %0 to %"class.blink::Element"****
  %16 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  %17 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  br label %18

18:                                               ; preds = %111, %1
  %19 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %2, align 8
  %20 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %21, i64 0, i32 4
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %82

25:                                               ; preds = %18
  %26 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %27 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %21, i64 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %28, %30
  br i1 %31, label %32, label %38

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %26, i64 0, i32 4, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %34, %36
  br i1 %37, label %114, label %38

38:                                               ; preds = %32, %25
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %28, %41
  br i1 %42, label %43, label %49

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %45, %47
  br i1 %48, label %114, label %49

49:                                               ; preds = %43, %38
  %50 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %28, %52
  br i1 %53, label %54, label %60

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 4, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %56, %58
  br i1 %59, label %114, label %60

60:                                               ; preds = %54, %49
  %61 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %61, i64 0, i32 3, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %28, %63
  br i1 %64, label %65, label %71

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %61, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %67, %69
  br i1 %70, label %114, label %71

71:                                               ; preds = %65, %60
  %72 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %73 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %72, i64 0, i32 3, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %28, %74
  br i1 %75, label %76, label %82

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %72, i64 0, i32 4, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %78, %80
  br i1 %81, label %114, label %82

82:                                               ; preds = %76, %71, %18
  %83 = tail call zeroext i1 @_ZN5blink16HTMLElementStack22IsHTMLIntegrationPointEPNS_13HTMLStackItemE(%"class.blink::HTMLStackItem"* %21) #8
  br i1 %83, label %114, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %86, %87
  br i1 %88, label %114, label %89

89:                                               ; preds = %84
  %90 = load i8, i8* %22, align 8, !range !2
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %114

92:                                               ; preds = %89
  %93 = load %"class.blink::Element"***, %"class.blink::Element"**** %15, align 8
  %94 = load %"class.blink::Element"**, %"class.blink::Element"*** %93, align 8
  %95 = load %"class.blink::Element"*, %"class.blink::Element"** %94, align 8
  %96 = bitcast %"class.blink::Element"* %95 to void (%"class.blink::Element"*)***
  %97 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %97, i64 111
  %99 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %98, align 8
  tail call void %99(%"class.blink::Element"* %95) #8
  %100 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %2, align 8
  %101 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %100, i64 0, i32 1, i32 0
  %102 = getelementptr inbounds %"class.blink::MemberBase.17", %"class.blink::MemberBase.17"* %101, i64 0, i32 0
  %103 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %102, align 8
  %104 = bitcast %"class.blink::MemberBase.17"* %101 to i64*
  store atomic i64 0, i64* %104 monotonic, align 8
  %105 = ptrtoint %"class.blink::HTMLElementStack::ElementRecord"* %103 to i64
  store atomic i64 %105, i64* %16 monotonic, align 8
  %106 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %103 to i8*
  %110 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %109) #8
  br label %111

111:                                              ; preds = %92, %108
  %112 = load i32, i32* %17, align 8
  %113 = add i32 %112, -1
  store i32 %113, i32* %17, align 8
  br label %18

114:                                              ; preds = %89, %32, %43, %54, %65, %84, %76, %82
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack12PushRootNodeEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"* nocapture, %"class.blink::HTMLStackItem"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 1
  %6 = ptrtoint %"class.blink::ContainerNode"* %4 to i64
  %7 = bitcast %"class.blink::Member.2"* %5 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::ContainerNode"* %4 to i8*
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #8
  br label %13

13:                                               ; preds = %10, %2
  %14 = ptrtoint %"class.blink::HTMLStackItem"* %1 to i64
  %15 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  store atomic i64 0, i64* %18 monotonic, align 8
  %20 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16HTMLElementStack13ElementRecordEEEPhm(i64 16) #8
  %21 = bitcast i8* %20 to i64*
  store i64 %14, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %20, i64 8
  %23 = bitcast i8* %22 to i64*
  store i64 %19, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %20, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  %28 = ptrtoint i8* %20 to i64
  store atomic i64 %28, i64* %18 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %13
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #8
  br label %33

33:                                               ; preds = %13, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack18PushRootNodeCommonEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"* nocapture, %"class.blink::HTMLStackItem"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 1
  %6 = ptrtoint %"class.blink::ContainerNode"* %4 to i64
  %7 = bitcast %"class.blink::Member.2"* %5 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::ContainerNode"* %4 to i8*
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #8
  br label %13

13:                                               ; preds = %2, %10
  %14 = ptrtoint %"class.blink::HTMLStackItem"* %1 to i64
  %15 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  store atomic i64 0, i64* %18 monotonic, align 8
  %20 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16HTMLElementStack13ElementRecordEEEPhm(i64 16) #8
  %21 = bitcast i8* %20 to i64*
  store i64 %14, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %20, i64 8
  %23 = bitcast i8* %22 to i64*
  store i64 %19, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %20, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  %28 = ptrtoint i8* %20 to i64
  store atomic i64 %28, i64* %18 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %13
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #8
  br label %33

33:                                               ; preds = %13, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack19PushHTMLHtmlElementEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"* nocapture, %"class.blink::HTMLStackItem"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 1
  %6 = ptrtoint %"class.blink::ContainerNode"* %4 to i64
  %7 = bitcast %"class.blink::Member.2"* %5 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::ContainerNode"* %4 to i8*
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #8
  br label %13

13:                                               ; preds = %10, %2
  %14 = ptrtoint %"class.blink::HTMLStackItem"* %1 to i64
  %15 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  store atomic i64 0, i64* %18 monotonic, align 8
  %20 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16HTMLElementStack13ElementRecordEEEPhm(i64 16) #8
  %21 = bitcast i8* %20 to i64*
  store i64 %14, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %20, i64 8
  %23 = bitcast i8* %22 to i64*
  store i64 %19, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %20, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  %28 = ptrtoint i8* %20 to i64
  store atomic i64 %28, i64* %18 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %13
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #8
  br label %33

33:                                               ; preds = %13, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack10PushCommonEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"* nocapture, %"class.blink::HTMLStackItem"*) local_unnamed_addr #1 align 2 {
  %3 = ptrtoint %"class.blink::HTMLStackItem"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, 1
  store i32 %6, i32* %4, align 8
  %7 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  store atomic i64 0, i64* %7 monotonic, align 8
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16HTMLElementStack13ElementRecordEEEPhm(i64 16) #8
  %10 = bitcast i8* %9 to i64*
  store i64 %3, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to i64*
  store i64 %8, i64* %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  %17 = ptrtoint i8* %9 to i64
  store atomic i64 %17, i64* %7 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %2
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #8
  br label %22

22:                                               ; preds = %2, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack19PushHTMLHeadElementEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"* nocapture, %"class.blink::HTMLStackItem"*) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.blink::HTMLStackItem"* %1 to %"class.blink::Element"**
  %4 = load %"class.blink::Element"*, %"class.blink::Element"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 2
  %6 = ptrtoint %"class.blink::Element"* %4 to i64
  %7 = bitcast %"class.blink::Member.31"* %5 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::Element"* %4 to i8*
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #8
  br label %13

13:                                               ; preds = %2, %10
  %14 = ptrtoint %"class.blink::HTMLStackItem"* %1 to i64
  %15 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  store atomic i64 0, i64* %18 monotonic, align 8
  %20 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16HTMLElementStack13ElementRecordEEEPhm(i64 16) #8
  %21 = bitcast i8* %20 to i64*
  store i64 %14, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %20, i64 8
  %23 = bitcast i8* %22 to i64*
  store i64 %19, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %20, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  %28 = ptrtoint i8* %20 to i64
  store atomic i64 %28, i64* %18 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %13
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #8
  br label %33

33:                                               ; preds = %13, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack19PushHTMLBodyElementEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"* nocapture, %"class.blink::HTMLStackItem"*) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.blink::HTMLStackItem"* %1 to %"class.blink::Element"**
  %4 = load %"class.blink::Element"*, %"class.blink::Element"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 3
  %6 = ptrtoint %"class.blink::Element"* %4 to i64
  %7 = bitcast %"class.blink::Member.31"* %5 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::Element"* %4 to i8*
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #8
  br label %13

13:                                               ; preds = %2, %10
  %14 = ptrtoint %"class.blink::HTMLStackItem"* %1 to i64
  %15 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  store atomic i64 0, i64* %18 monotonic, align 8
  %20 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16HTMLElementStack13ElementRecordEEEPhm(i64 16) #8
  %21 = bitcast i8* %20 to i64*
  store i64 %14, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %20, i64 8
  %23 = bitcast i8* %22 to i64*
  store i64 %19, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %20, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  %28 = ptrtoint i8* %20 to i64
  store atomic i64 %28, i64* %18 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %13
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #8
  br label %33

33:                                               ; preds = %13, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack4PushEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"* nocapture, %"class.blink::HTMLStackItem"*) local_unnamed_addr #1 align 2 {
  %3 = ptrtoint %"class.blink::HTMLStackItem"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, 1
  store i32 %6, i32* %4, align 8
  %7 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  store atomic i64 0, i64* %7 monotonic, align 8
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16HTMLElementStack13ElementRecordEEEPhm(i64 16) #8
  %10 = bitcast i8* %9 to i64*
  store i64 %3, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to i64*
  store i64 %8, i64* %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  %17 = ptrtoint i8* %9 to i64
  store atomic i64 %17, i64* %7 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %2
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #8
  br label %22

22:                                               ; preds = %2, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack11InsertAboveEPNS_13HTMLStackItemEPNS0_13ElementRecordE(%"class.blink::HTMLElementStack"* nocapture, %"class.blink::HTMLStackItem"*, %"class.blink::HTMLElementStack::ElementRecord"* readnone) local_unnamed_addr #1 align 2 {
  %4 = ptrtoint %"class.blink::HTMLStackItem"* %1 to i64
  %5 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %5, align 8
  %7 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %6, %2
  br i1 %7, label %8, label %27

8:                                                ; preds = %3
  %9 = ptrtoint %"class.blink::HTMLElementStack::ElementRecord"* %6 to i64
  %10 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, 1
  store i32 %12, i32* %10, align 8
  %13 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  store atomic i64 0, i64* %13 monotonic, align 8
  %14 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16HTMLElementStack13ElementRecordEEEPhm(i64 16) #8
  %15 = bitcast i8* %14 to i64*
  store i64 %4, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %14, i64 8
  %17 = bitcast i8* %16 to i64*
  store i64 %9, i64* %17, align 8
  %18 = getelementptr inbounds i8, i8* %14, i64 -4
  %19 = bitcast i8* %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = or i16 %20, 1
  store atomic i16 %21, i16* %19 release, align 2
  %22 = ptrtoint i8* %14 to i64
  store atomic i64 %22, i64* %13 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %69, label %25

25:                                               ; preds = %8
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %14) #8
  br label %69

27:                                               ; preds = %3, %30
  %28 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %32, %30 ], [ %6, %3 ]
  %29 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %28, null
  br i1 %29, label %69, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %28, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %31, align 8
  %33 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %32, %2
  br i1 %33, label %34, label %27

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  %36 = load i32, i32* %35, align 8
  %37 = add i32 %36, 1
  store i32 %37, i32* %35, align 8
  %38 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %28, i64 0, i32 1, i32 0
  %39 = bitcast %"class.blink::MemberBase.17"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  store atomic i64 0, i64* %39 monotonic, align 8
  %41 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16HTMLElementStack13ElementRecordEEEPhm(i64 16) #8
  %42 = bitcast i8* %41 to i64*
  store i64 %4, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %41, i64 8
  %44 = bitcast i8* %43 to i64*
  store i64 %40, i64* %44, align 8
  %45 = getelementptr inbounds i8, i8* %41, i64 -4
  %46 = bitcast i8* %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = or i16 %47, 1
  store atomic i16 %48, i16* %46 release, align 2
  %49 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %28, i64 0, i32 1
  %50 = ptrtoint i8* %41 to i64
  %51 = bitcast %"class.blink::Member.16"* %49 to i64*
  store atomic i64 %50, i64* %51 monotonic, align 8
  %52 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %34
  %55 = bitcast i8* %41 to %"class.blink::Element"***
  br label %61

56:                                               ; preds = %34
  %57 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %28, i64 0, i32 1, i32 0, i32 0
  %58 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %41) #8
  %59 = bitcast %"class.blink::HTMLElementStack::ElementRecord"** %57 to %"class.blink::Element"****
  %60 = load %"class.blink::Element"***, %"class.blink::Element"**** %59, align 8
  br label %61

61:                                               ; preds = %54, %56
  %62 = phi %"class.blink::Element"*** [ %55, %54 ], [ %60, %56 ]
  %63 = load %"class.blink::Element"**, %"class.blink::Element"*** %62, align 8
  %64 = load %"class.blink::Element"*, %"class.blink::Element"** %63, align 8
  %65 = bitcast %"class.blink::Element"* %64 to void (%"class.blink::Element"*)***
  %66 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %66, i64 112
  %68 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %67, align 8
  tail call void %68(%"class.blink::Element"* %64) #8
  br label %69

69:                                               ; preds = %27, %25, %8, %61
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::HTMLStackItem"* @_ZNK5blink16HTMLElementStack11OneBelowTopEv(%"class.blink::HTMLElementStack"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %3, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %7, i64 0, i32 4
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = select i1 %10, %"class.blink::HTMLStackItem"* %7, %"class.blink::HTMLStackItem"* null
  ret %"class.blink::HTMLStackItem"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack21RemoveHTMLHeadElementEPNS_7ElementE(%"class.blink::HTMLElementStack"* nocapture, %"class.blink::Element"*) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.blink::HTMLElementStack"* %0 to %"class.blink::Element"****
  %4 = load %"class.blink::Element"***, %"class.blink::Element"**** %3, align 8
  %5 = load %"class.blink::Element"**, %"class.blink::Element"*** %4, align 8
  %6 = load %"class.blink::Element"*, %"class.blink::Element"** %5, align 8
  %7 = icmp eq %"class.blink::Element"* %6, %1
  %8 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 2
  %9 = bitcast %"class.blink::Member.31"* %8 to i64*
  store atomic i64 0, i64* %9 monotonic, align 8
  br i1 %7, label %10, label %30

10:                                               ; preds = %2
  %11 = load %"class.blink::Element"**, %"class.blink::Element"*** %4, align 8
  %12 = load %"class.blink::Element"*, %"class.blink::Element"** %11, align 8
  %13 = bitcast %"class.blink::Element"* %12 to void (%"class.blink::Element"*)***
  %14 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %14, i64 111
  %16 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %15, align 8
  tail call void %16(%"class.blink::Element"* %12) #8
  %17 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %18, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.blink::MemberBase.17", %"class.blink::MemberBase.17"* %19, i64 0, i32 0
  %21 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %20, align 8
  %22 = bitcast %"class.blink::MemberBase.17"* %19 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  %23 = ptrtoint %"class.blink::HTMLElementStack::ElementRecord"* %21 to i64
  %24 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %61, label %27

27:                                               ; preds = %10
  %28 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %21 to i8*
  %29 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %28) #8
  br label %61

30:                                               ; preds = %2
  %31 = bitcast %"class.blink::Element"*** %4 to %"class.blink::HTMLElementStack::ElementRecord"*
  br label %32

32:                                               ; preds = %35, %30
  %33 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %31, %30 ], [ %37, %35 ]
  %34 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %33, null
  br i1 %34, label %65, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %33, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %36, align 8
  %38 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %37 to %"class.blink::Element"***
  %39 = load %"class.blink::Element"**, %"class.blink::Element"*** %38, align 8
  %40 = load %"class.blink::Element"*, %"class.blink::Element"** %39, align 8
  %41 = icmp eq %"class.blink::Element"* %40, %1
  br i1 %41, label %42, label %32

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %33, i64 0, i32 1, i32 0, i32 0
  %44 = bitcast %"class.blink::Element"* %1 to void (%"class.blink::Element"*)***
  %45 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %45, i64 111
  %47 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %46, align 8
  tail call void %47(%"class.blink::Element"* %1) #8
  %48 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %43, align 8
  %49 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %48, i64 0, i32 1, i32 0
  %50 = getelementptr inbounds %"class.blink::MemberBase.17", %"class.blink::MemberBase.17"* %49, i64 0, i32 0
  %51 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %50, align 8
  %52 = bitcast %"class.blink::MemberBase.17"* %49 to i64*
  store atomic i64 0, i64* %52 monotonic, align 8
  %53 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %33, i64 0, i32 1
  %54 = ptrtoint %"class.blink::HTMLElementStack::ElementRecord"* %51 to i64
  %55 = bitcast %"class.blink::Member.16"* %53 to i64*
  store atomic i64 %54, i64* %55 monotonic, align 8
  %56 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %42
  %59 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %51 to i8*
  %60 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %59) #8
  br label %61

61:                                               ; preds = %42, %58, %27, %10
  %62 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  %63 = load i32, i32* %62, align 8
  %64 = add i32 %63, -1
  store i32 %64, i32* %62, align 8
  br label %65

65:                                               ; preds = %32, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack18RemoveNonTopCommonEPNS_7ElementE(%"class.blink::HTMLElementStack"* nocapture, %"class.blink::Element"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  br label %5

5:                                                ; preds = %8, %2
  %6 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %4, %2 ], [ %10, %8 ]
  %7 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %6, null
  br i1 %7, label %38, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %6, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %9, align 8
  %11 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %10 to %"class.blink::Element"***
  %12 = load %"class.blink::Element"**, %"class.blink::Element"*** %11, align 8
  %13 = load %"class.blink::Element"*, %"class.blink::Element"** %12, align 8
  %14 = icmp eq %"class.blink::Element"* %13, %1
  br i1 %14, label %15, label %5

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %6, i64 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.blink::Element"* %1 to void (%"class.blink::Element"*)***
  %18 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %18, i64 111
  %20 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %19, align 8
  tail call void %20(%"class.blink::Element"* %1) #8
  %21 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %16, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %21, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.blink::MemberBase.17", %"class.blink::MemberBase.17"* %22, i64 0, i32 0
  %24 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %23, align 8
  %25 = bitcast %"class.blink::MemberBase.17"* %22 to i64*
  store atomic i64 0, i64* %25 monotonic, align 8
  %26 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %6, i64 0, i32 1
  %27 = ptrtoint %"class.blink::HTMLElementStack::ElementRecord"* %24 to i64
  %28 = bitcast %"class.blink::Member.16"* %26 to i64*
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %15
  %32 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %24 to i8*
  %33 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %32) #8
  br label %34

34:                                               ; preds = %15, %31
  %35 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  %36 = load i32, i32* %35, align 8
  %37 = add i32 %36, -1
  store i32 %37, i32* %35, align 8
  br label %38

38:                                               ; preds = %5, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLElementStack6RemoveEPNS_7ElementE(%"class.blink::HTMLElementStack"* nocapture, %"class.blink::Element"*) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.blink::HTMLElementStack"* %0 to %"class.blink::Element"****
  %4 = load %"class.blink::Element"***, %"class.blink::Element"**** %3, align 8
  %5 = load %"class.blink::Element"**, %"class.blink::Element"*** %4, align 8
  %6 = load %"class.blink::Element"*, %"class.blink::Element"** %5, align 8
  %7 = icmp eq %"class.blink::Element"* %6, %1
  br i1 %7, label %8, label %26

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::Element"* %1 to void (%"class.blink::Element"*)***
  %10 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %10, i64 111
  %12 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %11, align 8
  tail call void %12(%"class.blink::Element"* %1) #8
  %13 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %14, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.blink::MemberBase.17", %"class.blink::MemberBase.17"* %15, i64 0, i32 0
  %17 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %16, align 8
  %18 = bitcast %"class.blink::MemberBase.17"* %15 to i64*
  store atomic i64 0, i64* %18 monotonic, align 8
  %19 = ptrtoint %"class.blink::HTMLElementStack::ElementRecord"* %17 to i64
  %20 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %57, label %23

23:                                               ; preds = %8
  %24 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %17 to i8*
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #8
  br label %57

26:                                               ; preds = %2
  %27 = bitcast %"class.blink::Element"*** %4 to %"class.blink::HTMLElementStack::ElementRecord"*
  br label %28

28:                                               ; preds = %31, %26
  %29 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %27, %26 ], [ %33, %31 ]
  %30 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %29, null
  br i1 %30, label %61, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %29, i64 0, i32 1, i32 0, i32 0
  %33 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %32, align 8
  %34 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %33 to %"class.blink::Element"***
  %35 = load %"class.blink::Element"**, %"class.blink::Element"*** %34, align 8
  %36 = load %"class.blink::Element"*, %"class.blink::Element"** %35, align 8
  %37 = icmp eq %"class.blink::Element"* %36, %1
  br i1 %37, label %38, label %28

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %29, i64 0, i32 1, i32 0, i32 0
  %40 = bitcast %"class.blink::Element"* %1 to void (%"class.blink::Element"*)***
  %41 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %41, i64 111
  %43 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %42, align 8
  tail call void %43(%"class.blink::Element"* %1) #8
  %44 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %39, align 8
  %45 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %44, i64 0, i32 1, i32 0
  %46 = getelementptr inbounds %"class.blink::MemberBase.17", %"class.blink::MemberBase.17"* %45, i64 0, i32 0
  %47 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %46, align 8
  %48 = bitcast %"class.blink::MemberBase.17"* %45 to i64*
  store atomic i64 0, i64* %48 monotonic, align 8
  %49 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %29, i64 0, i32 1
  %50 = ptrtoint %"class.blink::HTMLElementStack::ElementRecord"* %47 to i64
  %51 = bitcast %"class.blink::Member.16"* %49 to i64*
  store atomic i64 %50, i64* %51 monotonic, align 8
  %52 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %38
  %55 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %47 to i8*
  %56 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %55) #8
  br label %57

57:                                               ; preds = %38, %54, %23, %8
  %58 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 4
  %59 = load i32, i32* %58, align 8
  %60 = add i32 %59, -1
  store i32 %60, i32* %58, align 8
  br label %61

61:                                               ; preds = %28, %57
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::HTMLElementStack::ElementRecord"* @_ZNK5blink16HTMLElementStack4FindEPNS_7ElementE(%"class.blink::HTMLElementStack"* nocapture readonly, %"class.blink::Element"* readnone) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0
  br label %8

8:                                                ; preds = %6, %15
  %9 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %4, %6 ], [ %17, %15 ]
  %10 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %12, align 8
  %14 = icmp eq %"class.blink::ContainerNode"* %13, %7
  br i1 %14, label %19, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %9, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %16, align 8
  %18 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %17, null
  br i1 %18, label %19, label %8

19:                                               ; preds = %8, %15, %2
  %20 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ null, %2 ], [ null, %15 ], [ %9, %8 ]
  ret %"class.blink::HTMLElementStack::ElementRecord"* %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::HTMLElementStack::ElementRecord"* @_ZNK5blink16HTMLElementStack7TopmostERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* nocapture readonly, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %4, null
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %6, %23
  %12 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %4, %6 ], [ %25, %23 ]
  %13 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, %8
  br i1 %17, label %18, label %23

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %20, %21
  br i1 %22, label %27, label %23

23:                                               ; preds = %11, %18
  %24 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %12, i64 0, i32 1, i32 0, i32 0
  %25 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %24, align 8
  %26 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %25, null
  br i1 %26, label %27, label %11

27:                                               ; preds = %18, %23, %2
  %28 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ null, %2 ], [ null, %23 ], [ %12, %18 ]
  ret %"class.blink::HTMLElementStack::ElementRecord"* %28
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLElementStack8ContainsEPNS_7ElementE(%"class.blink::HTMLElementStack"* nocapture readonly, %"class.blink::Element"* readnone) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0
  br label %8

8:                                                ; preds = %15, %6
  %9 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %4, %6 ], [ %17, %15 ]
  %10 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %12, align 8
  %14 = icmp eq %"class.blink::ContainerNode"* %13, %7
  br i1 %14, label %19, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %9, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %16, align 8
  %18 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %17, null
  br i1 %18, label %19, label %8

19:                                               ; preds = %8, %15, %2
  %20 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ null, %2 ], [ %9, %8 ], [ null, %15 ]
  %21 = icmp ne %"class.blink::HTMLElementStack::ElementRecord"* %20, null
  ret i1 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLElementStack8ContainsERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* nocapture readonly, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %4, null
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %23, %6
  %12 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %4, %6 ], [ %25, %23 ]
  %13 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, %8
  br i1 %17, label %18, label %23

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %20, %21
  br i1 %22, label %27, label %23

23:                                               ; preds = %18, %11
  %24 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %12, i64 0, i32 1, i32 0, i32 0
  %25 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %24, align 8
  %26 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %25, null
  br i1 %26, label %27, label %11

27:                                               ; preds = %18, %23, %2
  %28 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ null, %2 ], [ %12, %18 ], [ null, %23 ]
  %29 = icmp ne %"class.blink::HTMLElementStack::ElementRecord"* %28, null
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLElementStack31HasNumberedHeaderElementInScopeEv(%"class.blink::HTMLElementStack"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %2, align 8
  %4 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %3, null
  br i1 %4, label %16, label %9

5:                                                ; preds = %14
  %6 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %10, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %6, align 8
  %8 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %1, %5
  %10 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %7, %5 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %11, align 8
  %13 = tail call zeroext i1 @_ZNK5blink13HTMLStackItem23IsNumberedHeaderElementEv(%"class.blink::HTMLStackItem"* %12)
  br i1 %13, label %16, label %14

14:                                               ; preds = %9
  %15 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_113IsScopeMarkerEPNS_13HTMLStackItemE(%"class.blink::HTMLStackItem"* %12)
  br i1 %15, label %16, label %5

16:                                               ; preds = %9, %5, %14, %1
  %17 = phi i1 [ false, %1 ], [ false, %14 ], [ false, %5 ], [ true, %9 ]
  ret i1 %17
}

; Function Attrs: inlinehint norecurse nounwind readonly ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_113IsScopeMarkerEPNS_13HTMLStackItemE(%"class.blink::HTMLStackItem"* readonly) unnamed_addr #5 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kAppletTagE to %"class.blink::QualifiedName"**), align 8
  %3 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %4, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %6, %8
  br i1 %9, label %10, label %16

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %12, %14
  br i1 %15, label %241, label %16

16:                                               ; preds = %1, %10
  %17 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCaptionTagE to %"class.blink::QualifiedName"**), align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %6, %21
  br i1 %22, label %23, label %29

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %25, %27
  br i1 %28, label %241, label %29

29:                                               ; preds = %16, %23
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kMarqueeTagE to %"class.blink::QualifiedName"**), align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %6, %34
  br i1 %35, label %36, label %42

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 4, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %38, %40
  br i1 %41, label %241, label %42

42:                                               ; preds = %29, %36
  %43 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE to %"class.blink::QualifiedName"**), align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %6, %47
  br i1 %48, label %49, label %55

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 4, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %51, %53
  br i1 %54, label %241, label %55

55:                                               ; preds = %42, %49
  %56 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE to %"class.blink::QualifiedName"**), align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %6, %60
  br i1 %61, label %62, label %68

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 4, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %64, %66
  br i1 %67, label %241, label %68

68:                                               ; preds = %55, %62
  %69 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE to %"class.blink::QualifiedName"**), align 8
  %70 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %71, i64 0, i32 3, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %6, %73
  br i1 %74, label %75, label %81

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %71, i64 0, i32 4, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %77, %79
  br i1 %80, label %241, label %81

81:                                               ; preds = %68, %75
  %82 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE to %"class.blink::QualifiedName"**), align 8
  %83 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %84, i64 0, i32 3, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %6, %86
  br i1 %87, label %88, label %94

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %84, i64 0, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %90, %92
  br i1 %93, label %241, label %94

94:                                               ; preds = %81, %88
  %95 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMiTagE to %"class.blink::QualifiedName"**), align 8
  %96 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 3, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %6, %99
  br i1 %100, label %101, label %107

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 4, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %103, %105
  br i1 %106, label %241, label %107

107:                                              ; preds = %94, %101
  %108 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMoTagE to %"class.blink::QualifiedName"**), align 8
  %109 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %108, i64 0, i32 0, i32 0
  %110 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 3, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %6, %112
  br i1 %113, label %114, label %120

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 4, i32 0, i32 0, i32 0
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %116, %118
  br i1 %119, label %241, label %120

120:                                              ; preds = %107, %114
  %121 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMnTagE to %"class.blink::QualifiedName"**), align 8
  %122 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %121, i64 0, i32 0, i32 0
  %123 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %123, i64 0, i32 3, i32 0, i32 0, i32 0
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %6, %125
  br i1 %126, label %127, label %133

127:                                              ; preds = %120
  %128 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %123, i64 0, i32 4, i32 0, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %129, %131
  br i1 %132, label %241, label %133

133:                                              ; preds = %120, %127
  %134 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMsTagE to %"class.blink::QualifiedName"**), align 8
  %135 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %134, i64 0, i32 0, i32 0
  %136 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %136, i64 0, i32 3, i32 0, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %6, %138
  br i1 %139, label %140, label %146

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %136, i64 0, i32 4, i32 0, i32 0, i32 0
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %142, %144
  br i1 %145, label %241, label %146

146:                                              ; preds = %133, %140
  %147 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names9kMtextTagE to %"class.blink::QualifiedName"**), align 8
  %148 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %147, i64 0, i32 0, i32 0
  %149 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %149, i64 0, i32 3, i32 0, i32 0, i32 0
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %6, %151
  br i1 %152, label %153, label %159

153:                                              ; preds = %146
  %154 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %156 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %149, i64 0, i32 4, i32 0, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %155, %157
  br i1 %158, label %241, label %159

159:                                              ; preds = %146, %153
  %160 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names17kAnnotationXmlTagE to %"class.blink::QualifiedName"**), align 8
  %161 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %160, i64 0, i32 0, i32 0
  %162 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %162, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %6, %164
  br i1 %165, label %166, label %172

166:                                              ; preds = %159
  %167 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %169 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %162, i64 0, i32 4, i32 0, i32 0, i32 0
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %169, align 8
  %171 = icmp eq %"class.WTF::StringImpl"* %168, %170
  br i1 %171, label %241, label %172

172:                                              ; preds = %159, %166
  %173 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names17kForeignObjectTagE to %"class.blink::QualifiedName"**), align 8
  %174 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %173, i64 0, i32 0, i32 0
  %175 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %174, align 8
  %176 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %175, i64 0, i32 3, i32 0, i32 0, i32 0
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %6, %177
  br i1 %178, label %179, label %185

179:                                              ; preds = %172
  %180 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %180, align 8
  %182 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %175, i64 0, i32 4, i32 0, i32 0, i32 0
  %183 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %182, align 8
  %184 = icmp eq %"class.WTF::StringImpl"* %181, %183
  br i1 %184, label %241, label %185

185:                                              ; preds = %172, %179
  %186 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names8kDescTagE to %"class.blink::QualifiedName"**), align 8
  %187 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %186, i64 0, i32 0, i32 0
  %188 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %188, i64 0, i32 3, i32 0, i32 0, i32 0
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %6, %190
  br i1 %191, label %192, label %198

192:                                              ; preds = %185
  %193 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %193, align 8
  %195 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %188, i64 0, i32 4, i32 0, i32 0, i32 0
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %194, %196
  br i1 %197, label %241, label %198

198:                                              ; preds = %185, %192
  %199 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kTitleTagE to %"class.blink::QualifiedName"**), align 8
  %200 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %199, i64 0, i32 0, i32 0
  %201 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %200, align 8
  %202 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %201, i64 0, i32 3, i32 0, i32 0, i32 0
  %203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %202, align 8
  %204 = icmp eq %"class.WTF::StringImpl"* %6, %203
  br i1 %204, label %205, label %211

205:                                              ; preds = %198
  %206 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %206, align 8
  %208 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %201, i64 0, i32 4, i32 0, i32 0, i32 0
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %207, %209
  br i1 %210, label %241, label %211

211:                                              ; preds = %198, %205
  %212 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %213 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %212, i64 0, i32 0, i32 0
  %214 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %213, align 8
  %215 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %214, i64 0, i32 3, i32 0, i32 0, i32 0
  %216 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %215, align 8
  %217 = icmp eq %"class.WTF::StringImpl"* %6, %216
  br i1 %217, label %218, label %224

218:                                              ; preds = %211
  %219 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %221 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %214, i64 0, i32 4, i32 0, i32 0, i32 0
  %222 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %221, align 8
  %223 = icmp eq %"class.WTF::StringImpl"* %220, %222
  br i1 %223, label %241, label %224

224:                                              ; preds = %211, %218
  %225 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 4
  %226 = load i8, i8* %225, align 8, !range !2
  %227 = icmp eq i8 %226, 0
  br i1 %227, label %228, label %241

228:                                              ; preds = %224
  %229 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %230 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %229, i64 0, i32 0, i32 0
  %231 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %230, align 8
  %232 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %231, i64 0, i32 3, i32 0, i32 0, i32 0
  %233 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %232, align 8
  %234 = icmp eq %"class.WTF::StringImpl"* %6, %233
  br i1 %234, label %235, label %241

235:                                              ; preds = %228
  %236 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %236, align 8
  %238 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %231, i64 0, i32 4, i32 0, i32 0, i32 0
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %238, align 8
  %240 = icmp eq %"class.WTF::StringImpl"* %237, %239
  br label %241

241:                                              ; preds = %235, %228, %224, %218, %205, %192, %179, %166, %153, %140, %127, %114, %101, %88, %75, %62, %49, %36, %23, %10
  %242 = phi i1 [ true, %218 ], [ true, %205 ], [ true, %192 ], [ true, %179 ], [ true, %166 ], [ true, %153 ], [ true, %140 ], [ true, %127 ], [ true, %114 ], [ true, %101 ], [ true, %88 ], [ true, %75 ], [ true, %62 ], [ true, %49 ], [ true, %36 ], [ true, %23 ], [ true, %10 ], [ true, %224 ], [ false, %228 ], [ %240, %235 ]
  ret i1 %242
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLElementStack7InScopeEPNS_7ElementE(%"class.blink::HTMLElementStack"* nocapture readonly, %"class.blink::Element"* readnone) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0
  br label %12

8:                                                ; preds = %19
  %9 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %13, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %9, align 8
  %11 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %10, null
  br i1 %11, label %21, label %12

12:                                               ; preds = %6, %8
  %13 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %4, %6 ], [ %10, %8 ]
  %14 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %16, align 8
  %18 = icmp eq %"class.blink::ContainerNode"* %17, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %12
  %20 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_113IsScopeMarkerEPNS_13HTMLStackItemE(%"class.blink::HTMLStackItem"* %15)
  br i1 %20, label %21, label %8

21:                                               ; preds = %12, %8, %19, %2
  %22 = phi i1 [ false, %2 ], [ false, %19 ], [ false, %8 ], [ true, %12 ]
  ret i1 %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLElementStack7InScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* nocapture readonly, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %25, %6
  %12 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %4, %6 ], [ %27, %25 ]
  %13 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, %8
  br i1 %17, label %18, label %23

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %20, %21
  br i1 %22, label %29, label %23

23:                                               ; preds = %18, %11
  %24 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_113IsScopeMarkerEPNS_13HTMLStackItemE(%"class.blink::HTMLStackItem"* %14) #8
  br i1 %24, label %29, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %12, i64 0, i32 1, i32 0, i32 0
  %27 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %26, align 8
  %28 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %27, null
  br i1 %28, label %29, label %11

29:                                               ; preds = %18, %23, %25, %2
  %30 = phi i1 [ false, %2 ], [ true, %18 ], [ false, %25 ], [ false, %23 ]
  ret i1 %30
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLElementStack7InScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* nocapture readonly, %"class.blink::QualifiedName"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %8, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  br label %13

13:                                               ; preds = %27, %6
  %14 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %4, %6 ], [ %29, %27 ]
  %15 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %16, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, %10
  br i1 %19, label %20, label %25

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %22, %23
  br i1 %24, label %31, label %25

25:                                               ; preds = %20, %13
  %26 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_113IsScopeMarkerEPNS_13HTMLStackItemE(%"class.blink::HTMLStackItem"* %16) #8
  br i1 %26, label %31, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %14, i64 0, i32 1, i32 0, i32 0
  %29 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %28, align 8
  %30 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %29, null
  br i1 %30, label %31, label %13

31:                                               ; preds = %20, %25, %27, %2
  %32 = phi i1 [ false, %2 ], [ false, %25 ], [ false, %27 ], [ true, %20 ]
  ret i1 %32
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLElementStack15InListItemScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* nocapture readonly, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %4, null
  br i1 %5, label %55, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kOlTagE to %"class.blink::QualifiedName"**), align 8
  %12 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kUlTagE to %"class.blink::QualifiedName"**), align 8
  %14 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %13, i64 0, i32 0, i32 0
  br label %15

15:                                               ; preds = %51, %6
  %16 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %4, %6 ], [ %53, %51 ]
  %17 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %18, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, %8
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %24, %25
  br i1 %26, label %55, label %27

27:                                               ; preds = %22, %15
  %28 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_113IsScopeMarkerEPNS_13HTMLStackItemE(%"class.blink::HTMLStackItem"* %18) #8
  br i1 %28, label %55, label %29

29:                                               ; preds = %27
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %20, %32
  br i1 %33, label %34, label %40

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 4, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %36, %38
  br i1 %39, label %55, label %40

40:                                               ; preds = %34, %29
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %20, %43
  br i1 %44, label %45, label %51

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 4, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %47, %49
  br i1 %50, label %55, label %51

51:                                               ; preds = %45, %40
  %52 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %16, i64 0, i32 1, i32 0, i32 0
  %53 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %52, align 8
  %54 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %53, null
  br i1 %54, label %55, label %15

55:                                               ; preds = %22, %27, %34, %45, %51, %2
  %56 = phi i1 [ false, %2 ], [ true, %22 ], [ false, %45 ], [ false, %51 ], [ false, %34 ], [ false, %27 ]
  ret i1 %56
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLElementStack15InListItemScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* nocapture readonly, %"class.blink::QualifiedName"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %4, null
  br i1 %5, label %57, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %8, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kOlTagE to %"class.blink::QualifiedName"**), align 8
  %14 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kUlTagE to %"class.blink::QualifiedName"**), align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %15, i64 0, i32 0, i32 0
  br label %17

17:                                               ; preds = %53, %6
  %18 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %4, %6 ], [ %55, %53 ]
  %19 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %20, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, %10
  br i1 %23, label %24, label %29

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %26, %27
  br i1 %28, label %57, label %29

29:                                               ; preds = %24, %17
  %30 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_113IsScopeMarkerEPNS_13HTMLStackItemE(%"class.blink::HTMLStackItem"* %20) #8
  br i1 %30, label %57, label %31

31:                                               ; preds = %29
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %22, %34
  br i1 %35, label %36, label %42

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 4, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %38, %40
  br i1 %41, label %57, label %42

42:                                               ; preds = %36, %31
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %22, %45
  br i1 %46, label %47, label %53

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 4, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %49, %51
  br i1 %52, label %57, label %53

53:                                               ; preds = %47, %42
  %54 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %18, i64 0, i32 1, i32 0, i32 0
  %55 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %54, align 8
  %56 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %55, null
  br i1 %56, label %57, label %17

57:                                               ; preds = %24, %29, %36, %47, %53, %2
  %58 = phi i1 [ false, %2 ], [ false, %29 ], [ false, %36 ], [ false, %53 ], [ false, %47 ], [ true, %24 ]
  ret i1 %58
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* nocapture readonly, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %4, null
  br i1 %5, label %70, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE to %"class.blink::QualifiedName"**), align 8
  %12 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %14 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %15, i64 0, i32 0, i32 0
  br label %17

17:                                               ; preds = %66, %6
  %18 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %4, %6 ], [ %68, %66 ]
  %19 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %20, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, %8
  br i1 %23, label %24, label %29

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %26, %27
  br i1 %28, label %70, label %29

29:                                               ; preds = %24, %17
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %22, %32
  br i1 %33, label %34, label %40

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 4, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %36, %38
  br i1 %39, label %70, label %40

40:                                               ; preds = %34, %29
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %22, %43
  br i1 %44, label %45, label %51

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 4, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %47, %49
  br i1 %50, label %70, label %51

51:                                               ; preds = %45, %40
  %52 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %20, i64 0, i32 4
  %53 = load i8, i8* %52, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %70

55:                                               ; preds = %51
  %56 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %22, %58
  br i1 %59, label %60, label %66

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %56, i64 0, i32 4, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %62, %64
  br i1 %65, label %70, label %66

66:                                               ; preds = %60, %55
  %67 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %18, i64 0, i32 1, i32 0, i32 0
  %68 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %67, align 8
  %69 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %68, null
  br i1 %69, label %70, label %17

70:                                               ; preds = %24, %34, %45, %51, %60, %66, %2
  %71 = phi i1 [ false, %2 ], [ true, %24 ], [ false, %60 ], [ false, %66 ], [ false, %45 ], [ false, %34 ], [ false, %51 ]
  ret i1 %71
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* nocapture readonly, %"class.blink::QualifiedName"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %4, null
  br i1 %5, label %72, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %8, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE to %"class.blink::QualifiedName"**), align 8
  %14 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %17, i64 0, i32 0, i32 0
  br label %19

19:                                               ; preds = %68, %6
  %20 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %4, %6 ], [ %70, %68 ]
  %21 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %22, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, %10
  br i1 %25, label %26, label %31

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %28, %29
  br i1 %30, label %72, label %31

31:                                               ; preds = %26, %19
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %24, %34
  br i1 %35, label %36, label %42

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 4, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %38, %40
  br i1 %41, label %72, label %42

42:                                               ; preds = %36, %31
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %24, %45
  br i1 %46, label %47, label %53

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 4, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %49, %51
  br i1 %52, label %72, label %53

53:                                               ; preds = %47, %42
  %54 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %22, i64 0, i32 4
  %55 = load i8, i8* %54, align 8, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %72

57:                                               ; preds = %53
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %24, %60
  br i1 %61, label %62, label %68

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 4, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %64, %66
  br i1 %67, label %72, label %68

68:                                               ; preds = %62, %57
  %69 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %20, i64 0, i32 1, i32 0, i32 0
  %70 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %69, align 8
  %71 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %70, null
  br i1 %71, label %72, label %19

72:                                               ; preds = %26, %36, %47, %53, %62, %68, %2
  %73 = phi i1 [ false, %2 ], [ false, %53 ], [ false, %36 ], [ false, %47 ], [ false, %68 ], [ false, %62 ], [ true, %26 ]
  ret i1 %73
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLElementStack13InButtonScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* nocapture readonly, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %4, null
  br i1 %5, label %42, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kButtonTagE to %"class.blink::QualifiedName"**), align 8
  %12 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 0, i32 0, i32 0
  br label %13

13:                                               ; preds = %38, %6
  %14 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %4, %6 ], [ %40, %38 ]
  %15 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %16, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, %8
  br i1 %19, label %20, label %25

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %22, %23
  br i1 %24, label %42, label %25

25:                                               ; preds = %20, %13
  %26 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_113IsScopeMarkerEPNS_13HTMLStackItemE(%"class.blink::HTMLStackItem"* %16) #8
  br i1 %26, label %42, label %27

27:                                               ; preds = %25
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %18, %30
  br i1 %31, label %32, label %38

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 4, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %34, %36
  br i1 %37, label %42, label %38

38:                                               ; preds = %32, %27
  %39 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %14, i64 0, i32 1, i32 0, i32 0
  %40 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %39, align 8
  %41 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %40, null
  br i1 %41, label %42, label %13

42:                                               ; preds = %20, %25, %32, %38, %2
  %43 = phi i1 [ false, %2 ], [ true, %20 ], [ false, %32 ], [ false, %38 ], [ false, %25 ]
  ret i1 %43
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLElementStack13InButtonScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* nocapture readonly, %"class.blink::QualifiedName"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %4, null
  br i1 %5, label %44, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %8, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kButtonTagE to %"class.blink::QualifiedName"**), align 8
  %14 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %13, i64 0, i32 0, i32 0
  br label %15

15:                                               ; preds = %40, %6
  %16 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %4, %6 ], [ %42, %40 ]
  %17 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %18, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, %10
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %24, %25
  br i1 %26, label %44, label %27

27:                                               ; preds = %22, %15
  %28 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_113IsScopeMarkerEPNS_13HTMLStackItemE(%"class.blink::HTMLStackItem"* %18) #8
  br i1 %28, label %44, label %29

29:                                               ; preds = %27
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %20, %32
  br i1 %33, label %34, label %40

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 4, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %36, %38
  br i1 %39, label %44, label %40

40:                                               ; preds = %34, %29
  %41 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %16, i64 0, i32 1, i32 0, i32 0
  %42 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %41, align 8
  %43 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %42, null
  br i1 %43, label %44, label %15

44:                                               ; preds = %22, %27, %34, %40, %2
  %45 = phi i1 [ false, %2 ], [ false, %27 ], [ false, %40 ], [ false, %34 ], [ true, %22 ]
  ret i1 %45
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLElementStack13InSelectScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* nocapture readonly, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %4, null
  br i1 %5, label %53, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kOptgroupTagE to %"class.blink::QualifiedName"**), align 8
  %12 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE to %"class.blink::QualifiedName"**), align 8
  %14 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %13, i64 0, i32 0, i32 0
  br label %15

15:                                               ; preds = %49, %6
  %16 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %4, %6 ], [ %51, %49 ]
  %17 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %18, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, %8
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %24, %25
  br i1 %26, label %53, label %27

27:                                               ; preds = %22, %15
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %20, %30
  br i1 %31, label %32, label %38

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 4, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %34, %36
  br i1 %37, label %49, label %38

38:                                               ; preds = %32, %27
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %20, %41
  br i1 %42, label %43, label %53

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %45, %47
  br i1 %48, label %49, label %53

49:                                               ; preds = %43, %32
  %50 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %16, i64 0, i32 1, i32 0, i32 0
  %51 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %50, align 8
  %52 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %51, null
  br i1 %52, label %53, label %15

53:                                               ; preds = %22, %38, %43, %49, %2
  %54 = phi i1 [ false, %2 ], [ true, %22 ], [ false, %49 ], [ false, %38 ], [ false, %43 ]
  ret i1 %54
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLElementStack13InSelectScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* nocapture readonly, %"class.blink::QualifiedName"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %4, null
  br i1 %5, label %55, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %8, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kOptgroupTagE to %"class.blink::QualifiedName"**), align 8
  %14 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE to %"class.blink::QualifiedName"**), align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %15, i64 0, i32 0, i32 0
  br label %17

17:                                               ; preds = %51, %6
  %18 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %4, %6 ], [ %53, %51 ]
  %19 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %20, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, %10
  br i1 %23, label %24, label %29

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %26, %27
  br i1 %28, label %55, label %29

29:                                               ; preds = %24, %17
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %22, %32
  br i1 %33, label %34, label %40

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 4, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %36, %38
  br i1 %39, label %51, label %40

40:                                               ; preds = %34, %29
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %22, %43
  br i1 %44, label %45, label %55

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 4, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %47, %49
  br i1 %50, label %51, label %55

51:                                               ; preds = %45, %34
  %52 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %18, i64 0, i32 1, i32 0, i32 0
  %53 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %52, align 8
  %54 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %53, null
  br i1 %54, label %55, label %17

55:                                               ; preds = %24, %40, %45, %51, %2
  %56 = phi i1 [ false, %2 ], [ false, %45 ], [ false, %40 ], [ false, %51 ], [ true, %24 ]
  ret i1 %56
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLElementStack22HasTemplateInHTMLScopeEv(%"class.blink::HTMLElementStack"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %2, align 8
  %4 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %3, null
  br i1 %4, label %46, label %5

5:                                                ; preds = %1
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %8, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %14 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %13, i64 0, i32 0, i32 0
  br label %15

15:                                               ; preds = %42, %5
  %16 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %3, %5 ], [ %44, %42 ]
  %17 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %18, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, %10
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %24, %25
  br i1 %26, label %46, label %27

27:                                               ; preds = %22, %15
  %28 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %18, i64 0, i32 4
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %46

31:                                               ; preds = %27
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %20, %34
  br i1 %35, label %36, label %42

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 4, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %38, %40
  br i1 %41, label %46, label %42

42:                                               ; preds = %36, %31
  %43 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %16, i64 0, i32 1, i32 0, i32 0
  %44 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %43, align 8
  %45 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %44, null
  br i1 %45, label %46, label %15

46:                                               ; preds = %22, %27, %36, %42, %1
  %47 = phi i1 [ false, %1 ], [ true, %22 ], [ false, %36 ], [ false, %42 ], [ false, %27 ]
  ret i1 %47
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink16HTMLElementStack11HtmlElementEv(%"class.blink::HTMLElementStack"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = bitcast %"class.blink::ContainerNode"** %2 to %"class.blink::Element"**
  %4 = load %"class.blink::Element"*, %"class.blink::Element"** %3, align 8
  ret %"class.blink::Element"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink16HTMLElementStack11HeadElementEv(%"class.blink::HTMLElementStack"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  ret %"class.blink::Element"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink16HTMLElementStack11BodyElementEv(%"class.blink::HTMLElementStack"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  ret %"class.blink::Element"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::ContainerNode"* @_ZNK5blink16HTMLElementStack8RootNodeEv(%"class.blink::HTMLElementStack"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %2, align 8
  ret %"class.blink::ContainerNode"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLElementStack::ElementRecord"* @_ZNK5blink16HTMLElementStack33FurthestBlockForFormattingElementEPNS_7ElementE(%"class.blink::HTMLElementStack"* nocapture readonly, %"class.blink::Element"* readnone) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %2, %13
  %7 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %18, %13 ], [ %4, %2 ]
  %8 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %16, %13 ], [ null, %2 ]
  %9 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %7 to %"class.blink::Element"***
  %10 = load %"class.blink::Element"**, %"class.blink::Element"*** %9, align 8
  %11 = load %"class.blink::Element"*, %"class.blink::Element"** %10, align 8
  %12 = icmp eq %"class.blink::Element"* %11, %1
  br i1 %12, label %20, label %13

13:                                               ; preds = %6
  %14 = bitcast %"class.blink::Element"** %10 to %"class.blink::HTMLStackItem"*
  %15 = tail call zeroext i1 @_ZNK5blink13HTMLStackItem13IsSpecialNodeEv(%"class.blink::HTMLStackItem"* %14)
  %16 = select i1 %15, %"class.blink::HTMLElementStack::ElementRecord"* %7, %"class.blink::HTMLElementStack::ElementRecord"* %8
  %17 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %7, i64 0, i32 1, i32 0, i32 0
  %18 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %17, align 8
  %19 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %18, null
  br i1 %19, label %20, label %6

20:                                               ; preds = %6, %13, %2
  %21 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ null, %2 ], [ null, %13 ], [ %8, %6 ]
  ret %"class.blink::HTMLElementStack::ElementRecord"* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13HTMLStackItem13IsSpecialNodeEv(%"class.blink::HTMLStackItem"*) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMiTagE to %"class.blink::QualifiedName"**), align 8
  %3 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %4, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %6, %8
  br i1 %9, label %10, label %16

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %12, %14
  br i1 %15, label %667, label %16

16:                                               ; preds = %1, %10
  %17 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMoTagE to %"class.blink::QualifiedName"**), align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %6, %21
  br i1 %22, label %23, label %29

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %25, %27
  br i1 %28, label %667, label %29

29:                                               ; preds = %16, %23
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMnTagE to %"class.blink::QualifiedName"**), align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %6, %34
  br i1 %35, label %36, label %42

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 4, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %38, %40
  br i1 %41, label %667, label %42

42:                                               ; preds = %29, %36
  %43 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMsTagE to %"class.blink::QualifiedName"**), align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %6, %47
  br i1 %48, label %49, label %55

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 4, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %51, %53
  br i1 %54, label %667, label %55

55:                                               ; preds = %42, %49
  %56 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names9kMtextTagE to %"class.blink::QualifiedName"**), align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %6, %60
  br i1 %61, label %62, label %68

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 4, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %64, %66
  br i1 %67, label %667, label %68

68:                                               ; preds = %55, %62
  %69 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names17kAnnotationXmlTagE to %"class.blink::QualifiedName"**), align 8
  %70 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %71, i64 0, i32 3, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %6, %73
  br i1 %74, label %75, label %81

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %71, i64 0, i32 4, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %77, %79
  br i1 %80, label %667, label %81

81:                                               ; preds = %68, %75
  %82 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names17kForeignObjectTagE to %"class.blink::QualifiedName"**), align 8
  %83 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %84, i64 0, i32 3, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %6, %86
  br i1 %87, label %88, label %94

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %84, i64 0, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %90, %92
  br i1 %93, label %667, label %94

94:                                               ; preds = %81, %88
  %95 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names8kDescTagE to %"class.blink::QualifiedName"**), align 8
  %96 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 3, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %6, %99
  br i1 %100, label %101, label %107

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 4, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %103, %105
  br i1 %106, label %667, label %107

107:                                              ; preds = %94, %101
  %108 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kTitleTagE to %"class.blink::QualifiedName"**), align 8
  %109 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %108, i64 0, i32 0, i32 0
  %110 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 3, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %6, %112
  br i1 %113, label %114, label %120

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 4, i32 0, i32 0, i32 0
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %116, %118
  br i1 %119, label %667, label %120

120:                                              ; preds = %107, %114
  %121 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 4
  %122 = load i8, i8* %121, align 8, !range !2
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %667

124:                                              ; preds = %120
  %125 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %126 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %125, i64 0, i32 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %127, %129
  br i1 %130, label %131, label %667

131:                                              ; preds = %124
  %132 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kAddressTagE to %"class.blink::QualifiedName"**), align 8
  %133 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %132, i64 0, i32 0, i32 0
  %134 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %134, i64 0, i32 3, i32 0, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %6, %136
  br i1 %137, label %667, label %138

138:                                              ; preds = %131
  %139 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kAreaTagE to %"class.blink::QualifiedName"**), align 8
  %140 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %139, i64 0, i32 0, i32 0
  %141 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %141, i64 0, i32 3, i32 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %6, %143
  br i1 %144, label %667, label %145

145:                                              ; preds = %138
  %146 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kAppletTagE to %"class.blink::QualifiedName"**), align 8
  %147 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %146, i64 0, i32 0, i32 0
  %148 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %147, align 8
  %149 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %148, i64 0, i32 3, i32 0, i32 0, i32 0
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %6, %150
  br i1 %151, label %667, label %152

152:                                              ; preds = %145
  %153 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kArticleTagE to %"class.blink::QualifiedName"**), align 8
  %154 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %153, i64 0, i32 0, i32 0
  %155 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %154, align 8
  %156 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %155, i64 0, i32 3, i32 0, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %6, %157
  br i1 %158, label %667, label %159

159:                                              ; preds = %152
  %160 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kAsideTagE to %"class.blink::QualifiedName"**), align 8
  %161 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %160, i64 0, i32 0, i32 0
  %162 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %162, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %6, %164
  br i1 %165, label %667, label %166

166:                                              ; preds = %159
  %167 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBaseTagE to %"class.blink::QualifiedName"**), align 8
  %168 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %167, i64 0, i32 0, i32 0
  %169 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %168, align 8
  %170 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %169, i64 0, i32 3, i32 0, i32 0, i32 0
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %170, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %6, %171
  br i1 %172, label %667, label %173

173:                                              ; preds = %166
  %174 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kBasefontTagE to %"class.blink::QualifiedName"**), align 8
  %175 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %174, i64 0, i32 0, i32 0
  %176 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %176, i64 0, i32 3, i32 0, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %6, %178
  br i1 %179, label %667, label %180

180:                                              ; preds = %173
  %181 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kBgsoundTagE to %"class.blink::QualifiedName"**), align 8
  %182 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %181, i64 0, i32 0, i32 0
  %183 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %182, align 8
  %184 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %183, i64 0, i32 3, i32 0, i32 0, i32 0
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %6, %185
  br i1 %186, label %667, label %187

187:                                              ; preds = %180
  %188 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names14kBlockquoteTagE to %"class.blink::QualifiedName"**), align 8
  %189 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %188, i64 0, i32 0, i32 0
  %190 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %189, align 8
  %191 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %190, i64 0, i32 3, i32 0, i32 0, i32 0
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %6, %192
  br i1 %193, label %667, label %194

194:                                              ; preds = %187
  %195 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE to %"class.blink::QualifiedName"**), align 8
  %196 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %195, i64 0, i32 0, i32 0
  %197 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %196, align 8
  %198 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %197, i64 0, i32 3, i32 0, i32 0, i32 0
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  %200 = icmp eq %"class.WTF::StringImpl"* %6, %199
  br i1 %200, label %667, label %201

201:                                              ; preds = %194
  %202 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE to %"class.blink::QualifiedName"**), align 8
  %203 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %202, i64 0, i32 0, i32 0
  %204 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %203, align 8
  %205 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %204, i64 0, i32 3, i32 0, i32 0, i32 0
  %206 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8
  %207 = icmp eq %"class.WTF::StringImpl"* %6, %206
  br i1 %207, label %667, label %208

208:                                              ; preds = %201
  %209 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kButtonTagE to %"class.blink::QualifiedName"**), align 8
  %210 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %209, i64 0, i32 0, i32 0
  %211 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %210, align 8
  %212 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %211, i64 0, i32 3, i32 0, i32 0, i32 0
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %212, align 8
  %214 = icmp eq %"class.WTF::StringImpl"* %6, %213
  br i1 %214, label %667, label %215

215:                                              ; preds = %208
  %216 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCaptionTagE to %"class.blink::QualifiedName"**), align 8
  %217 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %216, i64 0, i32 0, i32 0
  %218 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %217, align 8
  %219 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %218, i64 0, i32 3, i32 0, i32 0, i32 0
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %221 = icmp eq %"class.WTF::StringImpl"* %6, %220
  br i1 %221, label %667, label %222

222:                                              ; preds = %215
  %223 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kCenterTagE to %"class.blink::QualifiedName"**), align 8
  %224 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %223, i64 0, i32 0, i32 0
  %225 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %224, align 8
  %226 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %225, i64 0, i32 3, i32 0, i32 0, i32 0
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8
  %228 = icmp eq %"class.WTF::StringImpl"* %6, %227
  br i1 %228, label %667, label %229

229:                                              ; preds = %222
  %230 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kColTagE to %"class.blink::QualifiedName"**), align 8
  %231 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %230, i64 0, i32 0, i32 0
  %232 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %231, align 8
  %233 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %232, i64 0, i32 3, i32 0, i32 0, i32 0
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %6, %234
  br i1 %235, label %667, label %236

236:                                              ; preds = %229
  %237 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kColgroupTagE to %"class.blink::QualifiedName"**), align 8
  %238 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %237, i64 0, i32 0, i32 0
  %239 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %238, align 8
  %240 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %239, i64 0, i32 3, i32 0, i32 0, i32 0
  %241 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %240, align 8
  %242 = icmp eq %"class.WTF::StringImpl"* %6, %241
  br i1 %242, label %667, label %243

243:                                              ; preds = %236
  %244 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCommandTagE to %"class.blink::QualifiedName"**), align 8
  %245 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %244, i64 0, i32 0, i32 0
  %246 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %245, align 8
  %247 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %246, i64 0, i32 3, i32 0, i32 0, i32 0
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %247, align 8
  %249 = icmp eq %"class.WTF::StringImpl"* %6, %248
  br i1 %249, label %667, label %250

250:                                              ; preds = %243
  %251 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDdTagE to %"class.blink::QualifiedName"**), align 8
  %252 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %251, i64 0, i32 0, i32 0
  %253 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %252, align 8
  %254 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %253, i64 0, i32 3, i32 0, i32 0, i32 0
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %254, align 8
  %256 = icmp eq %"class.WTF::StringImpl"* %6, %255
  br i1 %256, label %667, label %257

257:                                              ; preds = %250
  %258 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kDetailsTagE to %"class.blink::QualifiedName"**), align 8
  %259 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %258, i64 0, i32 0, i32 0
  %260 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %259, align 8
  %261 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %260, i64 0, i32 3, i32 0, i32 0, i32 0
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %261, align 8
  %263 = icmp eq %"class.WTF::StringImpl"* %6, %262
  br i1 %263, label %667, label %264

264:                                              ; preds = %257
  %265 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kDirTagE to %"class.blink::QualifiedName"**), align 8
  %266 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %265, i64 0, i32 0, i32 0
  %267 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %266, align 8
  %268 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %267, i64 0, i32 3, i32 0, i32 0, i32 0
  %269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %268, align 8
  %270 = icmp eq %"class.WTF::StringImpl"* %6, %269
  br i1 %270, label %667, label %271

271:                                              ; preds = %264
  %272 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kDivTagE to %"class.blink::QualifiedName"**), align 8
  %273 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %272, i64 0, i32 0, i32 0
  %274 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %273, align 8
  %275 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %274, i64 0, i32 3, i32 0, i32 0, i32 0
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  %277 = icmp eq %"class.WTF::StringImpl"* %6, %276
  br i1 %277, label %667, label %278

278:                                              ; preds = %271
  %279 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDlTagE to %"class.blink::QualifiedName"**), align 8
  %280 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %279, i64 0, i32 0, i32 0
  %281 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %280, align 8
  %282 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %281, i64 0, i32 3, i32 0, i32 0, i32 0
  %283 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %282, align 8
  %284 = icmp eq %"class.WTF::StringImpl"* %6, %283
  br i1 %284, label %667, label %285

285:                                              ; preds = %278
  %286 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDtTagE to %"class.blink::QualifiedName"**), align 8
  %287 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %286, i64 0, i32 0, i32 0
  %288 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %287, align 8
  %289 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %288, i64 0, i32 3, i32 0, i32 0, i32 0
  %290 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %291 = icmp eq %"class.WTF::StringImpl"* %6, %290
  br i1 %291, label %667, label %292

292:                                              ; preds = %285
  %293 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kEmbedTagE to %"class.blink::QualifiedName"**), align 8
  %294 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %293, i64 0, i32 0, i32 0
  %295 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %294, align 8
  %296 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %295, i64 0, i32 3, i32 0, i32 0, i32 0
  %297 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %296, align 8
  %298 = icmp eq %"class.WTF::StringImpl"* %6, %297
  br i1 %298, label %667, label %299

299:                                              ; preds = %292
  %300 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFieldsetTagE to %"class.blink::QualifiedName"**), align 8
  %301 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %300, i64 0, i32 0, i32 0
  %302 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %301, align 8
  %303 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %302, i64 0, i32 3, i32 0, i32 0, i32 0
  %304 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %303, align 8
  %305 = icmp eq %"class.WTF::StringImpl"* %6, %304
  br i1 %305, label %667, label %306

306:                                              ; preds = %299
  %307 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names14kFigcaptionTagE to %"class.blink::QualifiedName"**), align 8
  %308 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %307, i64 0, i32 0, i32 0
  %309 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %308, align 8
  %310 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %309, i64 0, i32 3, i32 0, i32 0, i32 0
  %311 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %310, align 8
  %312 = icmp eq %"class.WTF::StringImpl"* %6, %311
  br i1 %312, label %667, label %313

313:                                              ; preds = %306
  %314 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kFigureTagE to %"class.blink::QualifiedName"**), align 8
  %315 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %314, i64 0, i32 0, i32 0
  %316 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %315, align 8
  %317 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %316, i64 0, i32 3, i32 0, i32 0, i32 0
  %318 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %317, align 8
  %319 = icmp eq %"class.WTF::StringImpl"* %6, %318
  br i1 %319, label %667, label %320

320:                                              ; preds = %313
  %321 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kFooterTagE to %"class.blink::QualifiedName"**), align 8
  %322 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %321, i64 0, i32 0, i32 0
  %323 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %322, align 8
  %324 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %323, i64 0, i32 3, i32 0, i32 0, i32 0
  %325 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %324, align 8
  %326 = icmp eq %"class.WTF::StringImpl"* %6, %325
  br i1 %326, label %667, label %327

327:                                              ; preds = %320
  %328 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kFormTagE to %"class.blink::QualifiedName"**), align 8
  %329 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %328, i64 0, i32 0, i32 0
  %330 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %329, align 8
  %331 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %330, i64 0, i32 3, i32 0, i32 0, i32 0
  %332 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %331, align 8
  %333 = icmp eq %"class.WTF::StringImpl"* %6, %332
  br i1 %333, label %667, label %334

334:                                              ; preds = %327
  %335 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kFrameTagE to %"class.blink::QualifiedName"**), align 8
  %336 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %335, i64 0, i32 0, i32 0
  %337 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %336, align 8
  %338 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %337, i64 0, i32 3, i32 0, i32 0, i32 0
  %339 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %338, align 8
  %340 = icmp eq %"class.WTF::StringImpl"* %6, %339
  br i1 %340, label %667, label %341

341:                                              ; preds = %334
  %342 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFramesetTagE to %"class.blink::QualifiedName"**), align 8
  %343 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %342, i64 0, i32 0, i32 0
  %344 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %343, align 8
  %345 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %344, i64 0, i32 3, i32 0, i32 0, i32 0
  %346 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %345, align 8
  %347 = icmp eq %"class.WTF::StringImpl"* %6, %346
  br i1 %347, label %667, label %348

348:                                              ; preds = %341
  %349 = tail call zeroext i1 @_ZNK5blink13HTMLStackItem23IsNumberedHeaderElementEv(%"class.blink::HTMLStackItem"* %0)
  br i1 %349, label %667, label %350

350:                                              ; preds = %348
  %351 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHeadTagE to %"class.blink::QualifiedName"**), align 8
  %352 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %351, i64 0, i32 0, i32 0
  %353 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %352, align 8
  %354 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %355 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %353, i64 0, i32 3, i32 0, i32 0, i32 0
  %356 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %355, align 8
  %357 = icmp eq %"class.WTF::StringImpl"* %354, %356
  br i1 %357, label %667, label %358

358:                                              ; preds = %350
  %359 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kHeaderTagE to %"class.blink::QualifiedName"**), align 8
  %360 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %359, i64 0, i32 0, i32 0
  %361 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %360, align 8
  %362 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %361, i64 0, i32 3, i32 0, i32 0, i32 0
  %363 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %362, align 8
  %364 = icmp eq %"class.WTF::StringImpl"* %354, %363
  br i1 %364, label %667, label %365

365:                                              ; preds = %358
  %366 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kHgroupTagE to %"class.blink::QualifiedName"**), align 8
  %367 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %366, i64 0, i32 0, i32 0
  %368 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %367, align 8
  %369 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %368, i64 0, i32 3, i32 0, i32 0, i32 0
  %370 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %369, align 8
  %371 = icmp eq %"class.WTF::StringImpl"* %354, %370
  br i1 %371, label %667, label %372

372:                                              ; preds = %365
  %373 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kHrTagE to %"class.blink::QualifiedName"**), align 8
  %374 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %373, i64 0, i32 0, i32 0
  %375 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %374, align 8
  %376 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %375, i64 0, i32 3, i32 0, i32 0, i32 0
  %377 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %376, align 8
  %378 = icmp eq %"class.WTF::StringImpl"* %354, %377
  br i1 %378, label %667, label %379

379:                                              ; preds = %372
  %380 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %381 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %380, i64 0, i32 0, i32 0
  %382 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %381, align 8
  %383 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %382, i64 0, i32 3, i32 0, i32 0, i32 0
  %384 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %383, align 8
  %385 = icmp eq %"class.WTF::StringImpl"* %354, %384
  br i1 %385, label %667, label %386

386:                                              ; preds = %379
  %387 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kIFrameTagE to %"class.blink::QualifiedName"**), align 8
  %388 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %387, i64 0, i32 0, i32 0
  %389 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %388, align 8
  %390 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %389, i64 0, i32 3, i32 0, i32 0, i32 0
  %391 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %390, align 8
  %392 = icmp eq %"class.WTF::StringImpl"* %354, %391
  br i1 %392, label %667, label %393

393:                                              ; preds = %386
  %394 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE to %"class.blink::QualifiedName"**), align 8
  %395 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %394, i64 0, i32 0, i32 0
  %396 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %395, align 8
  %397 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %396, i64 0, i32 3, i32 0, i32 0, i32 0
  %398 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %397, align 8
  %399 = icmp eq %"class.WTF::StringImpl"* %354, %398
  br i1 %399, label %667, label %400

400:                                              ; preds = %393
  %401 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE to %"class.blink::QualifiedName"**), align 8
  %402 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %401, i64 0, i32 0, i32 0
  %403 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %402, align 8
  %404 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %403, i64 0, i32 3, i32 0, i32 0, i32 0
  %405 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %404, align 8
  %406 = icmp eq %"class.WTF::StringImpl"* %354, %405
  br i1 %406, label %667, label %407

407:                                              ; preds = %400
  %408 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kLiTagE to %"class.blink::QualifiedName"**), align 8
  %409 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %408, i64 0, i32 0, i32 0
  %410 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %409, align 8
  %411 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %410, i64 0, i32 3, i32 0, i32 0, i32 0
  %412 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %411, align 8
  %413 = icmp eq %"class.WTF::StringImpl"* %354, %412
  br i1 %413, label %667, label %414

414:                                              ; preds = %407
  %415 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kLinkTagE to %"class.blink::QualifiedName"**), align 8
  %416 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %415, i64 0, i32 0, i32 0
  %417 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %416, align 8
  %418 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %417, i64 0, i32 3, i32 0, i32 0, i32 0
  %419 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %418, align 8
  %420 = icmp eq %"class.WTF::StringImpl"* %354, %419
  br i1 %420, label %667, label %421

421:                                              ; preds = %414
  %422 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kListingTagE to %"class.blink::QualifiedName"**), align 8
  %423 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %422, i64 0, i32 0, i32 0
  %424 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %423, align 8
  %425 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %424, i64 0, i32 3, i32 0, i32 0, i32 0
  %426 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %425, align 8
  %427 = icmp eq %"class.WTF::StringImpl"* %354, %426
  br i1 %427, label %667, label %428

428:                                              ; preds = %421
  %429 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMainTagE to %"class.blink::QualifiedName"**), align 8
  %430 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %429, i64 0, i32 0, i32 0
  %431 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %430, align 8
  %432 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %431, i64 0, i32 3, i32 0, i32 0, i32 0
  %433 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %432, align 8
  %434 = icmp eq %"class.WTF::StringImpl"* %354, %433
  br i1 %434, label %667, label %435

435:                                              ; preds = %428
  %436 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kMarqueeTagE to %"class.blink::QualifiedName"**), align 8
  %437 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %436, i64 0, i32 0, i32 0
  %438 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %437, align 8
  %439 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %438, i64 0, i32 3, i32 0, i32 0, i32 0
  %440 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %439, align 8
  %441 = icmp eq %"class.WTF::StringImpl"* %354, %440
  br i1 %441, label %667, label %442

442:                                              ; preds = %435
  %443 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMenuTagE to %"class.blink::QualifiedName"**), align 8
  %444 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %443, i64 0, i32 0, i32 0
  %445 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %444, align 8
  %446 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %445, i64 0, i32 3, i32 0, i32 0, i32 0
  %447 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %446, align 8
  %448 = icmp eq %"class.WTF::StringImpl"* %354, %447
  br i1 %448, label %667, label %449

449:                                              ; preds = %442
  %450 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMetaTagE to %"class.blink::QualifiedName"**), align 8
  %451 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %450, i64 0, i32 0, i32 0
  %452 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %451, align 8
  %453 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %452, i64 0, i32 3, i32 0, i32 0, i32 0
  %454 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %453, align 8
  %455 = icmp eq %"class.WTF::StringImpl"* %354, %454
  br i1 %455, label %667, label %456

456:                                              ; preds = %449
  %457 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kNavTagE to %"class.blink::QualifiedName"**), align 8
  %458 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %457, i64 0, i32 0, i32 0
  %459 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %458, align 8
  %460 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %459, i64 0, i32 3, i32 0, i32 0, i32 0
  %461 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %460, align 8
  %462 = icmp eq %"class.WTF::StringImpl"* %354, %461
  br i1 %462, label %667, label %463

463:                                              ; preds = %456
  %464 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kNoembedTagE to %"class.blink::QualifiedName"**), align 8
  %465 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %464, i64 0, i32 0, i32 0
  %466 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %465, align 8
  %467 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %466, i64 0, i32 3, i32 0, i32 0, i32 0
  %468 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %467, align 8
  %469 = icmp eq %"class.WTF::StringImpl"* %354, %468
  br i1 %469, label %667, label %470

470:                                              ; preds = %463
  %471 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kNoframesTagE to %"class.blink::QualifiedName"**), align 8
  %472 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %471, i64 0, i32 0, i32 0
  %473 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %472, align 8
  %474 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %473, i64 0, i32 3, i32 0, i32 0, i32 0
  %475 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %474, align 8
  %476 = icmp eq %"class.WTF::StringImpl"* %354, %475
  br i1 %476, label %667, label %477

477:                                              ; preds = %470
  %478 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kNoscriptTagE to %"class.blink::QualifiedName"**), align 8
  %479 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %478, i64 0, i32 0, i32 0
  %480 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %479, align 8
  %481 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %480, i64 0, i32 3, i32 0, i32 0, i32 0
  %482 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %481, align 8
  %483 = icmp eq %"class.WTF::StringImpl"* %354, %482
  br i1 %483, label %667, label %484

484:                                              ; preds = %477
  %485 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE to %"class.blink::QualifiedName"**), align 8
  %486 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %485, i64 0, i32 0, i32 0
  %487 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %486, align 8
  %488 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %487, i64 0, i32 3, i32 0, i32 0, i32 0
  %489 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %488, align 8
  %490 = icmp eq %"class.WTF::StringImpl"* %354, %489
  br i1 %490, label %667, label %491

491:                                              ; preds = %484
  %492 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kOlTagE to %"class.blink::QualifiedName"**), align 8
  %493 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %492, i64 0, i32 0, i32 0
  %494 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %493, align 8
  %495 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %494, i64 0, i32 3, i32 0, i32 0, i32 0
  %496 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %495, align 8
  %497 = icmp eq %"class.WTF::StringImpl"* %354, %496
  br i1 %497, label %667, label %498

498:                                              ; preds = %491
  %499 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kPTagE to %"class.blink::QualifiedName"**), align 8
  %500 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %499, i64 0, i32 0, i32 0
  %501 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %500, align 8
  %502 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %501, i64 0, i32 3, i32 0, i32 0, i32 0
  %503 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %502, align 8
  %504 = icmp eq %"class.WTF::StringImpl"* %354, %503
  br i1 %504, label %667, label %505

505:                                              ; preds = %498
  %506 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kParamTagE to %"class.blink::QualifiedName"**), align 8
  %507 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %506, i64 0, i32 0, i32 0
  %508 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %507, align 8
  %509 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %508, i64 0, i32 3, i32 0, i32 0, i32 0
  %510 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %509, align 8
  %511 = icmp eq %"class.WTF::StringImpl"* %354, %510
  br i1 %511, label %667, label %512

512:                                              ; preds = %505
  %513 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names13kPlaintextTagE to %"class.blink::QualifiedName"**), align 8
  %514 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %513, i64 0, i32 0, i32 0
  %515 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %514, align 8
  %516 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %515, i64 0, i32 3, i32 0, i32 0, i32 0
  %517 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %516, align 8
  %518 = icmp eq %"class.WTF::StringImpl"* %354, %517
  br i1 %518, label %667, label %519

519:                                              ; preds = %512
  %520 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kPreTagE to %"class.blink::QualifiedName"**), align 8
  %521 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %520, i64 0, i32 0, i32 0
  %522 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %521, align 8
  %523 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %522, i64 0, i32 3, i32 0, i32 0, i32 0
  %524 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %523, align 8
  %525 = icmp eq %"class.WTF::StringImpl"* %354, %524
  br i1 %525, label %667, label %526

526:                                              ; preds = %519
  %527 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %528 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %527, i64 0, i32 0, i32 0
  %529 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %528, align 8
  %530 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %529, i64 0, i32 3, i32 0, i32 0, i32 0
  %531 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %530, align 8
  %532 = icmp eq %"class.WTF::StringImpl"* %354, %531
  br i1 %532, label %667, label %533

533:                                              ; preds = %526
  %534 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kSectionTagE to %"class.blink::QualifiedName"**), align 8
  %535 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %534, i64 0, i32 0, i32 0
  %536 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %535, align 8
  %537 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %536, i64 0, i32 3, i32 0, i32 0, i32 0
  %538 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %537, align 8
  %539 = icmp eq %"class.WTF::StringImpl"* %354, %538
  br i1 %539, label %667, label %540

540:                                              ; preds = %533
  %541 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE to %"class.blink::QualifiedName"**), align 8
  %542 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %541, i64 0, i32 0, i32 0
  %543 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %542, align 8
  %544 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %543, i64 0, i32 3, i32 0, i32 0, i32 0
  %545 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %544, align 8
  %546 = icmp eq %"class.WTF::StringImpl"* %354, %545
  br i1 %546, label %667, label %547

547:                                              ; preds = %540
  %548 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE to %"class.blink::QualifiedName"**), align 8
  %549 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %548, i64 0, i32 0, i32 0
  %550 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %549, align 8
  %551 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %550, i64 0, i32 3, i32 0, i32 0, i32 0
  %552 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %551, align 8
  %553 = icmp eq %"class.WTF::StringImpl"* %354, %552
  br i1 %553, label %667, label %554

554:                                              ; preds = %547
  %555 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kSummaryTagE to %"class.blink::QualifiedName"**), align 8
  %556 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %555, i64 0, i32 0, i32 0
  %557 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %556, align 8
  %558 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %557, i64 0, i32 3, i32 0, i32 0, i32 0
  %559 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %558, align 8
  %560 = icmp eq %"class.WTF::StringImpl"* %354, %559
  br i1 %560, label %667, label %561

561:                                              ; preds = %554
  %562 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE to %"class.blink::QualifiedName"**), align 8
  %563 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %562, i64 0, i32 0, i32 0
  %564 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %563, align 8
  %565 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %564, i64 0, i32 3, i32 0, i32 0, i32 0
  %566 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %565, align 8
  %567 = icmp eq %"class.WTF::StringImpl"* %354, %566
  br i1 %567, label %667, label %568

568:                                              ; preds = %561
  %569 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE to %"class.blink::QualifiedName"**), align 8
  %570 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %569, i64 0, i32 0, i32 0
  %571 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %570, align 8
  %572 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %571, i64 0, i32 3, i32 0, i32 0, i32 0
  %573 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %572, align 8
  %574 = icmp eq %"class.WTF::StringImpl"* %354, %573
  br i1 %574, label %575, label %580

575:                                              ; preds = %568
  %576 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %577 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %571, i64 0, i32 4, i32 0, i32 0, i32 0
  %578 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %577, align 8
  %579 = icmp eq %"class.WTF::StringImpl"* %576, %578
  br i1 %579, label %667, label %580

580:                                              ; preds = %575, %568
  %581 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE to %"class.blink::QualifiedName"**), align 8
  %582 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %581, i64 0, i32 0, i32 0
  %583 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %582, align 8
  %584 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %583, i64 0, i32 3, i32 0, i32 0, i32 0
  %585 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %584, align 8
  %586 = icmp eq %"class.WTF::StringImpl"* %354, %585
  br i1 %586, label %587, label %592

587:                                              ; preds = %580
  %588 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %589 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %583, i64 0, i32 4, i32 0, i32 0, i32 0
  %590 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %589, align 8
  %591 = icmp eq %"class.WTF::StringImpl"* %588, %590
  br i1 %591, label %667, label %592

592:                                              ; preds = %587, %580
  %593 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE to %"class.blink::QualifiedName"**), align 8
  %594 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %593, i64 0, i32 0, i32 0
  %595 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %594, align 8
  %596 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %595, i64 0, i32 3, i32 0, i32 0, i32 0
  %597 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %596, align 8
  %598 = icmp eq %"class.WTF::StringImpl"* %354, %597
  br i1 %598, label %599, label %604

599:                                              ; preds = %592
  %600 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %601 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %595, i64 0, i32 4, i32 0, i32 0, i32 0
  %602 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %601, align 8
  %603 = icmp eq %"class.WTF::StringImpl"* %600, %602
  br i1 %603, label %667, label %604

604:                                              ; preds = %592, %599
  %605 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE to %"class.blink::QualifiedName"**), align 8
  %606 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %605, i64 0, i32 0, i32 0
  %607 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %606, align 8
  %608 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %607, i64 0, i32 3, i32 0, i32 0, i32 0
  %609 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %608, align 8
  %610 = icmp eq %"class.WTF::StringImpl"* %354, %609
  br i1 %610, label %667, label %611

611:                                              ; preds = %604
  %612 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %613 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %612, i64 0, i32 0, i32 0
  %614 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %613, align 8
  %615 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %614, i64 0, i32 3, i32 0, i32 0, i32 0
  %616 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %615, align 8
  %617 = icmp eq %"class.WTF::StringImpl"* %354, %616
  br i1 %617, label %667, label %618

618:                                              ; preds = %611
  %619 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTextareaTagE to %"class.blink::QualifiedName"**), align 8
  %620 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %619, i64 0, i32 0, i32 0
  %621 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %620, align 8
  %622 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %621, i64 0, i32 3, i32 0, i32 0, i32 0
  %623 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %622, align 8
  %624 = icmp eq %"class.WTF::StringImpl"* %354, %623
  br i1 %624, label %667, label %625

625:                                              ; preds = %618
  %626 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE to %"class.blink::QualifiedName"**), align 8
  %627 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %626, i64 0, i32 0, i32 0
  %628 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %627, align 8
  %629 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %628, i64 0, i32 3, i32 0, i32 0, i32 0
  %630 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %629, align 8
  %631 = icmp eq %"class.WTF::StringImpl"* %354, %630
  br i1 %631, label %667, label %632

632:                                              ; preds = %625
  %633 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTitleTagE to %"class.blink::QualifiedName"**), align 8
  %634 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %633, i64 0, i32 0, i32 0
  %635 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %634, align 8
  %636 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %635, i64 0, i32 3, i32 0, i32 0, i32 0
  %637 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %636, align 8
  %638 = icmp eq %"class.WTF::StringImpl"* %354, %637
  br i1 %638, label %667, label %639

639:                                              ; preds = %632
  %640 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE to %"class.blink::QualifiedName"**), align 8
  %641 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %640, i64 0, i32 0, i32 0
  %642 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %641, align 8
  %643 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %642, i64 0, i32 3, i32 0, i32 0, i32 0
  %644 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %643, align 8
  %645 = icmp eq %"class.WTF::StringImpl"* %354, %644
  br i1 %645, label %667, label %646

646:                                              ; preds = %639
  %647 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kUlTagE to %"class.blink::QualifiedName"**), align 8
  %648 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %647, i64 0, i32 0, i32 0
  %649 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %648, align 8
  %650 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %649, i64 0, i32 3, i32 0, i32 0, i32 0
  %651 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %650, align 8
  %652 = icmp eq %"class.WTF::StringImpl"* %354, %651
  br i1 %652, label %667, label %653

653:                                              ; preds = %646
  %654 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kWbrTagE to %"class.blink::QualifiedName"**), align 8
  %655 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %654, i64 0, i32 0, i32 0
  %656 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %655, align 8
  %657 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %656, i64 0, i32 3, i32 0, i32 0, i32 0
  %658 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %657, align 8
  %659 = icmp eq %"class.WTF::StringImpl"* %354, %658
  br i1 %659, label %667, label %660

660:                                              ; preds = %653
  %661 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kXmpTagE to %"class.blink::QualifiedName"**), align 8
  %662 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %661, i64 0, i32 0, i32 0
  %663 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %662, align 8
  %664 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %663, i64 0, i32 3, i32 0, i32 0, i32 0
  %665 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %664, align 8
  %666 = icmp eq %"class.WTF::StringImpl"* %354, %665
  br label %667

667:                                              ; preds = %120, %575, %587, %124, %131, %138, %145, %152, %159, %166, %173, %180, %187, %194, %201, %208, %215, %222, %229, %236, %243, %250, %257, %264, %271, %278, %285, %292, %299, %306, %313, %320, %327, %334, %341, %348, %350, %358, %365, %372, %379, %386, %393, %400, %407, %414, %421, %428, %435, %442, %449, %456, %463, %470, %477, %484, %491, %498, %505, %512, %519, %526, %533, %540, %547, %554, %561, %599, %604, %611, %618, %625, %632, %639, %646, %653, %660, %10, %23, %36, %49, %62, %75, %88, %101, %114
  %668 = phi i1 [ true, %114 ], [ true, %101 ], [ true, %88 ], [ true, %75 ], [ true, %62 ], [ true, %49 ], [ true, %36 ], [ true, %23 ], [ true, %10 ], [ true, %120 ], [ true, %653 ], [ true, %646 ], [ true, %639 ], [ true, %632 ], [ true, %625 ], [ true, %618 ], [ true, %611 ], [ true, %604 ], [ true, %599 ], [ true, %561 ], [ true, %554 ], [ true, %547 ], [ true, %540 ], [ true, %533 ], [ true, %526 ], [ true, %519 ], [ true, %512 ], [ true, %505 ], [ true, %498 ], [ true, %491 ], [ true, %484 ], [ true, %477 ], [ true, %470 ], [ true, %463 ], [ true, %456 ], [ true, %449 ], [ true, %442 ], [ true, %435 ], [ true, %428 ], [ true, %421 ], [ true, %414 ], [ true, %407 ], [ true, %400 ], [ true, %393 ], [ true, %386 ], [ true, %379 ], [ true, %372 ], [ true, %365 ], [ true, %358 ], [ true, %350 ], [ true, %348 ], [ true, %341 ], [ true, %334 ], [ true, %327 ], [ true, %320 ], [ true, %313 ], [ true, %306 ], [ true, %299 ], [ true, %292 ], [ true, %285 ], [ true, %278 ], [ true, %271 ], [ true, %264 ], [ true, %257 ], [ true, %250 ], [ true, %243 ], [ true, %236 ], [ true, %229 ], [ true, %222 ], [ true, %215 ], [ true, %208 ], [ true, %201 ], [ true, %194 ], [ true, %187 ], [ true, %180 ], [ true, %173 ], [ true, %166 ], [ true, %159 ], [ true, %152 ], [ true, %145 ], [ true, %138 ], [ true, %131 ], [ %666, %660 ], [ false, %124 ], [ true, %587 ], [ true, %575 ]
  ret i1 %668
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16HTMLElementStack5TraceEPNS_7VisitorE(%"class.blink::HTMLElementStack"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.blink::HTMLElementStack"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16HTMLElementStack13ElementRecordEE5TraceEPNS_7VisitorEPKv) #8
  br label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 1
  %14 = bitcast %"class.blink::Member.2"* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = inttoptr i64 %15 to i8*
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, i8* nonnull %18, i8* nonnull %18, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv) #8
  br label %23

23:                                               ; preds = %12, %17
  %24 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 2
  %25 = bitcast %"class.blink::Member.31"* %24 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %23
  %29 = inttoptr i64 %26 to i8*
  %30 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %1, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #8
  br label %34

34:                                               ; preds = %23, %28
  %35 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %0, i64 0, i32 3
  %36 = bitcast %"class.blink::Member.31"* %35 to i64*
  %37 = load atomic i64, i64* %36 monotonic, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = inttoptr i64 %37 to i8*
  %41 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, i64 5
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, align 8
  tail call void %44(%"class.blink::Visitor"* %1, i8* nonnull %40, i8* nonnull %40, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #8
  br label %45

45:                                               ; preds = %34, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %25
  ret %"class.blink::Attribute"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #6

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ContainerNode"*
  %4 = bitcast i8* %1 to void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)**, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ContainerNode"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13HTMLStackItemEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv) #8
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16HTMLElementStack13ElementRecordEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13HTMLStackItemEE5TraceEPNS_7VisitorEPKv) #8
  br label %12

12:                                               ; preds = %6, %2
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = inttoptr i64 %15 to i8*
  %19 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %0, i8* nonnull %18, i8* nonnull %18, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16HTMLElementStack13ElementRecordEE5TraceEPNS_7VisitorEPKv) #8
  br label %23

23:                                               ; preds = %12, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16HTMLElementStack13ElementRecordEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16HTMLElementStack13ElementRecordEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16HTMLElementStack13ElementRecordEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16HTMLElementStack13ElementRecordEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #8
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %40, i8* %41) #8
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #8
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #8
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #6

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #6

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #6

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16HTMLElementStack13ElementRecordEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
