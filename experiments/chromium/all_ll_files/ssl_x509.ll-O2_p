; ModuleID = '../../third_party/boringssl/src/ssl/ssl_x509.cc'
source_filename = "../../third_party/boringssl/src/ssl/ssl_x509.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.stack_st_CRYPTO_BUFFER = type opaque
%"struct.bssl::CERT" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %struct.stack_st_X509*, %struct.x509_st*, %struct.x509_st*, %struct.ssl_private_key_method_st*, %"struct.bssl::SSL_X509_METHOD"*, %"class.bssl::Array.37", i32 (%struct.ssl_st*, i8*)*, i8*, %struct.x509_store_st*, %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.87", i8, [32 x i8], %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr", %struct.ssl_private_key_method_st* }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %struct.stack_st_CRYPTO_BUFFER* }
%struct.stack_st_X509 = type opaque
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon.6 }
%union.anon.6 = type { i8* }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type { %struct.asn1_string_st*, %struct.stack_st_GENERAL_NAME*, %struct.asn1_string_st* }
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type { %struct.stack_st_GENERAL_SUBTREE*, %struct.stack_st_GENERAL_SUBTREE* }
%struct.stack_st_GENERAL_SUBTREE = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%"struct.bssl::SSL_X509_METHOD" = type { i1 (%struct.stack_st_CRYPTO_BUFFER*)*, {}*, {}*, void (%"struct.bssl::CERT"*, %"struct.bssl::CERT"*)*, {}*, {}*, i1 (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %struct.ssl_session_st*)*, void (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %"struct.bssl::SSL_HANDSHAKE"*, i8*)*, void (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)* }
%"class.bssl::Array.37" = type { i16*, i64 }
%struct.ssl_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"class.std::__1::unique_ptr.13", i16, i16, [4 x i8], %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", i32 (%"struct.bssl::SSL_HANDSHAKE"*)*, %"struct.bssl::SSL3_STATE"*, %"struct.bssl::DTLS1_STATE"*, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], %"class.std::__1::unique_ptr.69", void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %struct.crypto_ex_data_st, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.32", %struct.ssl_quic_method_st*, i32, i8, [3 x i8] }>
%"struct.bssl::SSL_PROTOCOL_METHOD" = type { i8, i1 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, %"class.bssl::Span"*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)* }
%"struct.bssl::SSLMessage" = type { i8, i8, %struct.cbs_st, %struct.cbs_st }
%struct.cbs_st = type { i8*, i64 }
%"class.bssl::Span" = type { i8*, i64 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%"class.bssl::Array" = type { i8*, i64 }
%"class.bssl::SSLAEADContext" = type <{ %struct.ssl_cipher_st*, %"class.bssl::internal::StackAllocated", [12 x i8], i8, i8, i16, i8, i8, [6 x i8] }>
%struct.ssl_cipher_st = type { i8*, i8*, i32, i32, i32, i32, i32, i32 }
%"class.bssl::internal::StackAllocated" = type { %struct.evp_aead_ctx_st }
%struct.evp_aead_ctx_st = type { %struct.evp_aead_st*, %union.evp_aead_ctx_st_state, i8 }
%struct.evp_aead_st = type opaque
%union.evp_aead_ctx_st_state = type { i64, [576 x i8] }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.bssl::SSL_CONFIG"* }
%"struct.bssl::SSL_CONFIG" = type <{ %struct.ssl_st*, i16, i16, [4 x i8], %struct.X509_VERIFY_PARAM_st*, %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.26", i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.ssl_st*, i8*)*, %"class.std::__1::unique_ptr.32", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, %"class.std::__1::unique_ptr.1", %struct.stack_st_X509_NAME*, %"class.bssl::Array.37", %"class.std::__1::unique_ptr", %"class.bssl::Array", %"class.bssl::GrowableArray", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.37", %"class.std::__1::unique_ptr.39", i8, i16, [5 x i8] }>
%struct.X509_VERIFY_PARAM_st = type { i8*, i64, i64, i64, i32, i32, i32, %struct.stack_st_ASN1_OBJECT*, %struct.X509_VERIFY_PARAM_ID_st* }
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.X509_VERIFY_PARAM_ID_st = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.bssl::SSLCipherPreferenceList"* }
%"struct.bssl::SSLCipherPreferenceList" = type { %"class.std::__1::unique_ptr.19", i8* }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %struct.stack_st_SSL_CIPHER* }
%struct.stack_st_SSL_CIPHER = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.bssl::CERT"* }
%struct.x509_store_ctx_st = type { %struct.x509_store_st*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509_CRL*, %struct.X509_VERIFY_PARAM_st*, i8*, i32 (%struct.x509_store_ctx_st*)*, {}*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*)*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32, i32, %struct.stack_st_X509*, %struct.X509_POLICY_TREE_st*, i32, i32, i32, %struct.x509_st*, %struct.x509_st*, %struct.X509_crl_st*, i32, i32, %struct.x509_store_ctx_st*, %struct.crypto_ex_data_st }
%struct.stack_st_X509_CRL = type opaque
%struct.X509_POLICY_TREE_st = type opaque
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.stack_st_X509_REVOKED = type opaque
%struct.ISSUING_DIST_POINT_st = type { %struct.DIST_POINT_NAME_st*, i32, i32, %struct.asn1_string_st*, i32, i32 }
%struct.DIST_POINT_NAME_st = type { i32, %union.anon.31, %struct.X509_name_st* }
%union.anon.31 = type { %struct.stack_st_GENERAL_NAME* }
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.stack_st_X509_NAME = type opaque
%"class.bssl::GrowableArray" = type { i64, %"class.bssl::Array.38" }
%"class.bssl::Array.38" = type { %"struct.bssl::ALPSConfig"*, i64 }
%"struct.bssl::ALPSConfig" = type { %"class.bssl::Array", %"class.bssl::Array" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %struct.stack_st_SRTP_PROTECTION_PROFILE* }
%struct.stack_st_SRTP_PROTECTION_PROFILE = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %struct.bio_st* }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%"struct.bssl::SSL_HANDSHAKE" = type <{ %struct.ssl_st*, %"struct.bssl::SSL_CONFIG"*, i32, i32, i32, i16, i16, i64, [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], %union.anon.51, i16, [2 x i8], %"class.std::__1::unique_ptr.52", [2 x %"class.std::__1::unique_ptr.57"], %"class.bssl::SSLTranscript", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.37", %"class.bssl::Array.37", %"class.bssl::Array.37", %"class.bssl::Array", i16, [6 x i8], %"class.bssl::internal::StackAllocated.68", %"class.bssl::Array", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.1", %struct.stack_st_X509_NAME*, %"class.bssl::Array", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.79", %struct.ssl_cipher_st*, %"class.bssl::Array", %"class.std::__1::unique_ptr.94", i32, i16, i16, i16, i8, [32 x i8], i8, [6 x i8], [6 x i8] }>
%union.anon.51 = type { i32 }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %struct.err_save_state_st* }
%struct.err_save_state_st = type opaque
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.bssl::SSLKeyShare"* }
%"class.bssl::SSLKeyShare" = type { i32 (...)** }
%"class.bssl::SSLTranscript" = type { %"class.std::__1::unique_ptr.62", %"class.bssl::internal::StackAllocated.67" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %struct.buf_mem_st* }
%"class.bssl::internal::StackAllocated.67" = type { %struct.env_md_ctx_st }
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.env_md_st = type opaque
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%"class.bssl::internal::StackAllocated.68" = type { %struct.evp_hpke_ctx_st }
%struct.evp_hpke_ctx_st = type { %struct.evp_hpke_aead_st*, %struct.evp_hpke_kdf_st*, %struct.evp_aead_ctx_st, [24 x i8], [64 x i8], i64, i32 }
%struct.evp_hpke_aead_st = type opaque
%struct.evp_hpke_kdf_st = type opaque
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %struct.ssl_ech_server_config_list_st* }
%struct.ssl_ech_server_config_list_st = type <{ %"class.bssl::GrowableArray.82", i32, [4 x i8] }>
%"class.bssl::GrowableArray.82" = type { i64, %"class.bssl::Array.83" }
%"class.bssl::Array.83" = type { %"class.std::__1::unique_ptr.84"*, i64 }
%"class.std::__1::unique_ptr.84" = type opaque
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.bssl::SSL_HANDSHAKE_HINTS"* }
%"struct.bssl::SSL_HANDSHAKE_HINTS" = type <{ %"class.bssl::Array", i16, [6 x i8], %"class.bssl::Array", %"class.bssl::Array", i16, [6 x i8], %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", i8, [7 x i8] }>
%"struct.bssl::SSL3_STATE" = type <{ [8 x i8], [8 x i8], [32 x i8], [32 x i8], %"class.bssl::SSLBuffer", %"class.bssl::SSLBuffer", %"class.bssl::Span", i32, i32, i32, i32, i8*, i32, i32, %"class.std::__1::unique_ptr.52", i32, i32, i32, i32, i16, i8, i8, i8, i16, i8, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62", i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.99", [48 x i8], [48 x i8], [48 x i8], i8, i8, i8, [12 x i8], i8, i8, [12 x i8], [2 x i8], i8, %"class.std::__1::unique_ptr.69", %"class.bssl::Array", %"class.bssl::Array", %"class.std::__1::unique_ptr.32", [64 x i8], %"class.bssl::Array", %struct.srtp_protection_profile_st* }>
%"class.bssl::SSLBuffer" = type <{ i8*, i16, i16, i16, [5 x i8], i8, [4 x i8] }>
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.bssl::SSLAEADContext"* }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.bssl::SSL_HANDSHAKE"* }
%struct.srtp_protection_profile_st = type { i8*, i64 }
%"struct.bssl::DTLS1_STATE" = type <{ i8, [256 x i8], [7 x i8], i64, i16, i16, [4 x i8], %"struct.bssl::DTLS1_BITMAP", i16, i16, [8 x i8], [4 x i8], %"class.std::__1::unique_ptr.7", [7 x %"class.std::__1::unique_ptr.104"], [7 x %"struct.bssl::DTLS_OUTGOING_MESSAGE"], i8, i8, [2 x i8], i32, i32, i32, %"struct.bssl::OPENSSL_timeval", i32, [4 x i8] }>
%"struct.bssl::DTLS1_BITMAP" = type { i64, i64 }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.bssl::hm_fragment"* }
%"struct.bssl::hm_fragment" = type { i8, i16, i32, i8*, i8* }
%"struct.bssl::DTLS_OUTGOING_MESSAGE" = type <{ i8*, i32, i16, i8, i8 }>
%"struct.bssl::OPENSSL_timeval" = type { i64, i32 }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %struct.ssl_session_st* }
%struct.ssl_session_st = type { i32, i16, i16, i16, i32, [48 x i8], i32, [32 x i8], i8, [32 x i8], %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.1", %"struct.bssl::SSL_X509_METHOD"*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509*, i64, i32, i32, i64, %struct.ssl_cipher_st*, %struct.crypto_ex_data_st, %struct.ssl_session_st*, %struct.ssl_session_st*, %"class.bssl::Array", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.87", [32 x i8], [64 x i8], i8, i32, i32, i32, %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", i8, %"class.bssl::Array" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %struct.ssl_ctx_st* }
%struct.ssl_ctx_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_X509_METHOD"*, %union.crypto_mutex_st, i16, i16, [4 x i8], %struct.ssl_quic_method_st*, %"class.std::__1::unique_ptr.16", %struct.x509_store_st*, %struct.lhash_st_SSL_SESSION*, i64, %struct.ssl_session_st*, %struct.ssl_session_st*, i32, i32, i32, i32, i32 (%struct.ssl_st*, %struct.ssl_session_st*)*, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)*, %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)*, i32, [4 x i8], i32 (%struct.x509_store_ctx_st*, i8*)*, i8*, i32 (%struct.ssl_st*, i8*)*, i32 (i8*, i32, i32, i8*)*, i8*, i32 (%struct.ssl_st*, %struct.x509_st**, %struct.evp_pkey_st**)*, void (%struct.ssl_st*, %struct.evp_pkey_st**)*, %struct.crypto_ex_data_st, void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.1", %struct.stack_st_X509_NAME*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.26", void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], i32 (i32, %struct.x509_store_ctx_st*)*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.ssl_early_callback_ctx*)*, i32 (%struct.ssl_early_callback_ctx*)*, i8, i8, i16, [4 x i8], i32 (%struct.ssl_st*, i32*, i8*)*, i8*, %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72", i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)*, %"class.std::__1::unique_ptr.32", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*, i8**, i32*, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, %"class.bssl::Array", %"class.std::__1::unique_ptr.39", %"class.bssl::GrowableArray.77", %"class.bssl::Array.37", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.79", void (%struct.ssl_st*, i8*)*, void (%struct.ssl_st*, %struct.timeval*)*, %struct.crypto_buffer_pool_st*, %struct.ssl_ticket_aead_method_st*, i32 (%struct.ssl_st*, i8*)*, i8*, %"class.bssl::Array.37", i16, [6 x i8] }>
%struct.lhash_st_SSL_SESSION = type opaque
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%struct.ssl_early_callback_ctx = type { %struct.ssl_st*, i8*, i64, i16, i8*, i64, i8*, i64, i8*, i64, i8*, i64, i8*, i64 }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.bssl::TicketKey"* }
%"struct.bssl::TicketKey" = type { [16 x i8], [16 x i8], [16 x i8], i64 }
%struct.evp_cipher_ctx_st = type { %struct.evp_cipher_st*, i8*, i8*, i32, i32, i32, [16 x i8], [16 x i8], [32 x i8], i32, i32, i32, [32 x i8] }
%struct.evp_cipher_st = type { i32, i32, i32, i32, i32, i32, i8*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i32)*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i64)*, void (%struct.evp_cipher_ctx_st*)*, i32 (%struct.evp_cipher_ctx_st*, i32, i32, i8*)* }
%struct.hmac_ctx_st = type { %struct.env_md_st*, %struct.env_md_ctx_st, %struct.env_md_ctx_st, %struct.env_md_ctx_st }
%"class.bssl::GrowableArray.77" = type { i64, %"class.bssl::Array.78" }
%"class.bssl::Array.78" = type { %"struct.bssl::CertCompressionAlg"*, i64 }
%"struct.bssl::CertCompressionAlg" = type <{ i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)*, i32 (%struct.ssl_st*, %struct.crypto_buffer_st**, i64, i8*, i64)*, i16, [6 x i8] }>
%struct.timeval = type { i64, i64 }
%struct.crypto_buffer_pool_st = type opaque
%struct.ssl_ticket_aead_method_st = type { i64 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)* }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i8* }
%struct.ssl_quic_method_st = type { i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, i8*, i64)*, i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i32, i8)* }
%struct.x509_store_st = type { i32, %struct.stack_st_X509_OBJECT*, %union.crypto_mutex_st, %struct.stack_st_X509*, %struct.stack_st_X509_LOOKUP*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.x509_store_ctx_st*)*, {}*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 }
%struct.stack_st_X509_OBJECT = type opaque
%struct.stack_st_X509_LOOKUP = type opaque
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %struct.crypto_buffer_st* }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.bssl::DC"* }
%"struct.bssl::DC" = type { %"class.std::__1::unique_ptr.87", i16, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.evp_pkey_st* }
%struct.ssl_private_key_method_st = type { i32 (%struct.ssl_st*, i8*, i64*, i64, i16, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64)* }
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%"class.bssl::internal::StackAllocated.139" = type { %struct.x509_store_ctx_st }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

$sk_X509_call_free_func = comdat any

$_ZZN4bssl8internal11DeleterImplI13stack_st_X509vE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_ = comdat any

$_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_ = comdat any

$sk_X509_NAME_call_copy_func = comdat any

$sk_X509_NAME_call_free_func = comdat any

$_ZZN4bssl8internal11DeleterImplI18stack_st_X509_NAMEvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_ = comdat any

@_ZN4bssl22ssl_crypto_x509_methodE = hidden constant { i1 (%struct.stack_st_CRYPTO_BUFFER*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*, %"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, i1 (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %struct.ssl_session_st*)*, void (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %"struct.bssl::SSL_HANDSHAKE"*, i8*)*, void (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)* } { i1 (%struct.stack_st_CRYPTO_BUFFER*)* @_ZN4bsslL36ssl_crypto_x509_check_client_CA_listEP22stack_st_CRYPTO_BUFFER, void (%"struct.bssl::CERT"*)* @_ZN4bsslL26ssl_crypto_x509_cert_clearEPNS_4CERTE, void (%"struct.bssl::CERT"*)* @_ZN4bsslL25ssl_crypto_x509_cert_freeEPNS_4CERTE, void (%"struct.bssl::CERT"*, %"struct.bssl::CERT"*)* @_ZN4bsslL24ssl_crypto_x509_cert_dupEPNS_4CERTEPKS0_, void (%"struct.bssl::CERT"*)* @_ZN4bsslL39ssl_crypto_x509_cert_flush_cached_chainEPNS_4CERTE, void (%"struct.bssl::CERT"*)* @_ZN4bsslL38ssl_crypto_x509_cert_flush_cached_leafEPNS_4CERTE, i1 (%struct.ssl_session_st*)* @_ZN4bsslL37ssl_crypto_x509_session_cache_objectsEP14ssl_session_st, i1 (%struct.ssl_session_st*, %struct.ssl_session_st*)* @_ZN4bsslL27ssl_crypto_x509_session_dupEP14ssl_session_stPKS0_, void (%struct.ssl_session_st*)* @_ZN4bsslL29ssl_crypto_x509_session_clearEP14ssl_session_st, i1 (%struct.ssl_session_st*, %"struct.bssl::SSL_HANDSHAKE"*, i8*)* @_ZN4bsslL41ssl_crypto_x509_session_verify_cert_chainEP14ssl_session_stPNS_13SSL_HANDSHAKEEPh, void (%"struct.bssl::SSL_HANDSHAKE"*)* @_ZN4bsslL40ssl_crypto_x509_hs_flush_cached_ca_namesEPNS_13SSL_HANDSHAKEE, i1 (%"struct.bssl::SSL_HANDSHAKE"*)* @_ZN4bsslL23ssl_crypto_x509_ssl_newEPNS_13SSL_HANDSHAKEE, void (%"struct.bssl::SSL_CONFIG"*)* @_ZN4bsslL31ssl_crypto_x509_ssl_config_freeEPNS_10SSL_CONFIGE, void (%"struct.bssl::SSL_CONFIG"*)* @_ZN4bsslL42ssl_crypto_x509_ssl_flush_cached_client_CAEPNS_10SSL_CONFIGE, i1 (%"struct.bssl::SSL_HANDSHAKE"*)* @_ZN4bsslL40ssl_crypto_x509_ssl_auto_chain_if_neededEPNS_13SSL_HANDSHAKEE, i1 (%struct.ssl_ctx_st*)* @_ZN4bsslL27ssl_crypto_x509_ssl_ctx_newEP10ssl_ctx_st, void (%struct.ssl_ctx_st*)* @_ZN4bsslL28ssl_crypto_x509_ssl_ctx_freeEP10ssl_ctx_st, void (%struct.ssl_ctx_st*)* @_ZN4bsslL46ssl_crypto_x509_ssl_ctx_flush_cached_client_CAEP10ssl_ctx_st }, align 8
@.str = private unnamed_addr constant [23 x i8] c"SSL SESSION PARAMETERS\00", align 1
@.str.1 = private unnamed_addr constant [48 x i8] c"../../third_party/boringssl/src/ssl/ssl_x509.cc\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"ssl_client\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"ssl_server\00", align 1
@switch.table.SSL_alert_from_verify_result = private unnamed_addr constant [66 x i32] [i32 80, i32 48, i32 48, i32 42, i32 42, i32 42, i32 51, i32 51, i32 45, i32 45, i32 45, i32 45, i32 42, i32 42, i32 42, i32 42, i32 80, i32 48, i32 48, i32 48, i32 48, i32 48, i32 44, i32 48, i32 48, i32 43, i32 42, i32 42, i32 46, i32 46, i32 46, i32 46, i32 48, i32 46, i32 46, i32 46, i32 46, i32 46, i32 46, i32 46, i32 46, i32 46, i32 46, i32 46, i32 46, i32 46, i32 46, i32 46, i32 46, i32 40, i32 46, i32 46, i32 46, i32 46, i32 46, i32 46, i32 46, i32 46, i32 46, i32 46, i32 46, i32 42, i32 42, i32 42, i32 80, i32 80], align 4

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL36ssl_crypto_x509_check_client_CA_listEP22stack_st_CRYPTO_BUFFER(%struct.stack_st_CRYPTO_BUFFER*) #0 {
  %2 = alloca i8*, align 8
  %3 = bitcast %struct.stack_st_CRYPTO_BUFFER* %0 to %struct.stack_st*
  %4 = tail call i64 @sk_num(%struct.stack_st* %3) #9
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = bitcast i8** %2 to i8*
  br label %8

8:                                                ; preds = %6, %22
  %9 = phi i64 [ 0, %6 ], [ %23, %22 ]
  %10 = call i8* @sk_value(%struct.stack_st* %3, i64 %9) #9
  %11 = bitcast i8* %10 to %struct.crypto_buffer_st*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %2, align 8
  %12 = call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %11) #9
  store i8* %12, i8** %2, align 8
  %13 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %11) #9
  %14 = call %struct.X509_name_st* @d2i_X509_NAME(%struct.X509_name_st** null, i8** nonnull %2, i64 %13) #9
  %15 = icmp eq %struct.X509_name_st* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %8
  %17 = load i8*, i8** %2, align 8
  %18 = call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %11) #9
  %19 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %11) #9
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = icmp eq i8* %17, %20
  call void @X509_NAME_free(%struct.X509_name_st* nonnull %14) #9
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  %23 = add nuw i64 %9, 1
  %24 = icmp eq i64 %23, %4
  br i1 %24, label %26, label %8

25:                                               ; preds = %8, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  br label %26

26:                                               ; preds = %22, %1, %25
  %27 = phi i1 [ false, %25 ], [ true, %1 ], [ true, %22 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4bsslL26ssl_crypto_x509_cert_clearEPNS_4CERTE(%"struct.bssl::CERT"* nocapture) #0 {
  %2 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %0, i64 0, i32 3
  %3 = load %struct.x509_st*, %struct.x509_st** %2, align 8
  tail call void @X509_free(%struct.x509_st* %3) #9
  store %struct.x509_st* null, %struct.x509_st** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %0, i64 0, i32 2
  %5 = bitcast %struct.stack_st_X509** %4 to %struct.stack_st**
  %6 = load %struct.stack_st*, %struct.stack_st** %5, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %6, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  store %struct.stack_st_X509* null, %struct.stack_st_X509** %4, align 8
  %7 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %0, i64 0, i32 4
  %8 = load %struct.x509_st*, %struct.x509_st** %7, align 8
  tail call void @X509_free(%struct.x509_st* %8) #9
  store %struct.x509_st* null, %struct.x509_st** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4bsslL25ssl_crypto_x509_cert_freeEPNS_4CERTE(%"struct.bssl::CERT"* nocapture) #0 {
  %2 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %0, i64 0, i32 3
  %3 = load %struct.x509_st*, %struct.x509_st** %2, align 8
  tail call void @X509_free(%struct.x509_st* %3) #9
  store %struct.x509_st* null, %struct.x509_st** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %0, i64 0, i32 2
  %5 = bitcast %struct.stack_st_X509** %4 to %struct.stack_st**
  %6 = load %struct.stack_st*, %struct.stack_st** %5, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %6, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  store %struct.stack_st_X509* null, %struct.stack_st_X509** %4, align 8
  %7 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %0, i64 0, i32 4
  %8 = load %struct.x509_st*, %struct.x509_st** %7, align 8
  tail call void @X509_free(%struct.x509_st* %8) #9
  store %struct.x509_st* null, %struct.x509_st** %7, align 8
  %9 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %0, i64 0, i32 10
  %10 = load %struct.x509_store_st*, %struct.x509_store_st** %9, align 8
  tail call void @X509_STORE_free(%struct.x509_store_st* %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4bsslL24ssl_crypto_x509_cert_dupEPNS_4CERTEPKS0_(%"struct.bssl::CERT"* nocapture, %"struct.bssl::CERT"* nocapture readonly) #0 {
  %3 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %1, i64 0, i32 10
  %4 = load %struct.x509_store_st*, %struct.x509_store_st** %3, align 8
  %5 = icmp eq %struct.x509_store_st* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = tail call i32 @X509_STORE_up_ref(%struct.x509_store_st* nonnull %4) #9
  %8 = bitcast %struct.x509_store_st** %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %0, i64 0, i32 10
  %11 = bitcast %struct.x509_store_st** %10 to i64*
  store i64 %9, i64* %11, align 8
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4bsslL39ssl_crypto_x509_cert_flush_cached_chainEPNS_4CERTE(%"struct.bssl::CERT"* nocapture) #0 {
  %2 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %0, i64 0, i32 2
  %3 = bitcast %struct.stack_st_X509** %2 to %struct.stack_st**
  %4 = load %struct.stack_st*, %struct.stack_st** %3, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %4, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  store %struct.stack_st_X509* null, %struct.stack_st_X509** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4bsslL38ssl_crypto_x509_cert_flush_cached_leafEPNS_4CERTE(%"struct.bssl::CERT"* nocapture) #0 {
  %2 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %0, i64 0, i32 3
  %3 = load %struct.x509_st*, %struct.x509_st** %2, align 8
  tail call void @X509_free(%struct.x509_st* %3) #9
  store %struct.x509_st* null, %struct.x509_st** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL37ssl_crypto_x509_session_cache_objectsEP14ssl_session_st(%struct.ssl_session_st* nocapture) #0 {
  %2 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = bitcast %struct.stack_st_CRYPTO_BUFFER** %2 to %struct.stack_st**
  %4 = load %struct.stack_st*, %struct.stack_st** %3, align 8
  %5 = tail call i64 @sk_num(%struct.stack_st* %4) #9
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %22, label %7

7:                                                ; preds = %1
  %8 = tail call %struct.stack_st* @sk_new_null() #9
  %9 = ptrtoint %struct.stack_st* %8 to i64
  %10 = icmp eq %struct.stack_st* %8, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %7
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 288) #9
  br label %92

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 36
  %14 = load i8, i8* %13, align 8
  %15 = and i8 %14, 16
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = tail call %struct.stack_st* @sk_new_null() #9
  %19 = ptrtoint %struct.stack_st* %18 to i64
  %20 = icmp eq %struct.stack_st* %18, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 296) #9
  br label %85

22:                                               ; preds = %17, %12, %1
  %23 = phi i64 [ 0, %1 ], [ 0, %12 ], [ %19, %17 ]
  %24 = phi i64 [ 0, %1 ], [ %9, %12 ], [ %9, %17 ]
  %25 = load %struct.stack_st*, %struct.stack_st** %3, align 8
  %26 = tail call i64 @sk_num(%struct.stack_st* %25) #9
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = inttoptr i64 %24 to %struct.stack_st_X509*
  %30 = inttoptr i64 %23 to %struct.stack_st_X509*
  br label %66

31:                                               ; preds = %22
  %32 = icmp eq i64 %23, 0
  %33 = inttoptr i64 %23 to %struct.stack_st_X509*
  %34 = bitcast %struct.stack_st_X509* %33 to %struct.stack_st*
  %35 = inttoptr i64 %24 to %struct.stack_st_X509*
  %36 = bitcast %struct.stack_st_X509* %35 to %struct.stack_st*
  br label %39

37:                                               ; preds = %58
  %38 = icmp eq i64 %63, %26
  br i1 %38, label %66, label %39

39:                                               ; preds = %31, %37
  %40 = phi i64 [ 0, %31 ], [ %63, %37 ]
  %41 = phi i64 [ 0, %31 ], [ %59, %37 ]
  %42 = tail call i8* @sk_value(%struct.stack_st* %25, i64 %40) #9
  %43 = bitcast i8* %42 to %struct.crypto_buffer_st*
  %44 = tail call %struct.x509_st* @X509_parse_from_buffer(%struct.crypto_buffer_st* %43) #9
  %45 = ptrtoint %struct.x509_st* %44 to i64
  %46 = icmp eq %struct.x509_st* %44, null
  br i1 %46, label %47, label %48

47:                                               ; preds = %39
  tail call void @ERR_put_error(i32 16, i32 0, i32 137, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 306) #9
  br label %79

48:                                               ; preds = %39
  %49 = icmp eq i64 %41, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %48
  %51 = tail call i32 @X509_up_ref(%struct.x509_st* nonnull %44) #9
  br label %58

52:                                               ; preds = %48
  br i1 %32, label %58, label %53

53:                                               ; preds = %52
  %54 = tail call i32 @X509_up_ref(%struct.x509_st* nonnull %44) #9
  %55 = bitcast %struct.x509_st* %44 to i8*
  %56 = tail call i64 @sk_push(%struct.stack_st* %34, i8* nonnull %55) #9
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %64, label %58

58:                                               ; preds = %52, %53, %50
  %59 = phi i64 [ %45, %50 ], [ %41, %52 ], [ %41, %53 ]
  %60 = bitcast %struct.x509_st* %44 to i8*
  %61 = tail call i64 @sk_push(%struct.stack_st* %36, i8* nonnull %60) #9
  %62 = icmp eq i64 %61, 0
  %63 = add nuw i64 %40, 1
  br i1 %62, label %65, label %37

64:                                               ; preds = %53
  tail call void @X509_free(%struct.x509_st* nonnull %44) #9
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 313) #9
  tail call void @X509_free(%struct.x509_st* nonnull %44) #9
  br label %82

65:                                               ; preds = %58
  tail call void @X509_free(%struct.x509_st* nonnull %44) #9
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 317) #9
  br label %79

66:                                               ; preds = %37, %28
  %67 = phi %struct.stack_st_X509* [ %30, %28 ], [ %33, %37 ]
  %68 = phi %struct.stack_st_X509* [ %29, %28 ], [ %35, %37 ]
  %69 = phi i64 [ 0, %28 ], [ %59, %37 ]
  %70 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 14
  %71 = bitcast %struct.stack_st_X509** %70 to %struct.stack_st**
  %72 = load %struct.stack_st*, %struct.stack_st** %71, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %72, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  store %struct.stack_st_X509* %68, %struct.stack_st_X509** %70, align 8
  %73 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 15
  %74 = bitcast %struct.stack_st_X509** %73 to %struct.stack_st**
  %75 = load %struct.stack_st*, %struct.stack_st** %74, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %75, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  store %struct.stack_st_X509* %67, %struct.stack_st_X509** %73, align 8
  %76 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 13
  %77 = load %struct.x509_st*, %struct.x509_st** %76, align 8
  tail call void @X509_free(%struct.x509_st* %77) #9
  %78 = inttoptr i64 %69 to %struct.x509_st*
  store %struct.x509_st* %78, %struct.x509_st** %76, align 8
  br label %98

79:                                               ; preds = %47, %65
  %80 = phi i64 [ %59, %65 ], [ %41, %47 ]
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %64, %79
  %83 = phi i64 [ %41, %64 ], [ %80, %79 ]
  %84 = inttoptr i64 %83 to %struct.x509_st*
  tail call void @X509_free(%struct.x509_st* nonnull %84) #9
  br label %85

85:                                               ; preds = %82, %79, %21
  %86 = phi i64 [ %19, %21 ], [ %23, %79 ], [ %23, %82 ]
  %87 = phi i64 [ %9, %21 ], [ %24, %79 ], [ %24, %82 ]
  %88 = icmp eq i64 %86, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %85
  %90 = inttoptr i64 %86 to %struct.stack_st_X509*
  %91 = bitcast %struct.stack_st_X509* %90 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %91, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI13stack_st_X509vE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #9
  br label %92

92:                                               ; preds = %11, %85, %89
  %93 = phi i64 [ %87, %85 ], [ %87, %89 ], [ %9, %11 ]
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %92
  %96 = inttoptr i64 %93 to %struct.stack_st_X509*
  %97 = bitcast %struct.stack_st_X509* %96 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %97, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI13stack_st_X509vE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #9
  br label %98

98:                                               ; preds = %66, %92, %95
  %99 = phi i1 [ true, %66 ], [ false, %92 ], [ false, %95 ]
  ret i1 %99
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL27ssl_crypto_x509_session_dupEP14ssl_session_stPKS0_(%struct.ssl_session_st* nocapture, %struct.ssl_session_st* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 13
  %4 = load %struct.x509_st*, %struct.x509_st** %3, align 8
  %5 = icmp eq %struct.x509_st* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call i32 @X509_up_ref(%struct.x509_st* nonnull %4) #9
  br label %8

8:                                                ; preds = %6, %2
  %9 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 13
  store %struct.x509_st* %4, %struct.x509_st** %9, align 8
  %10 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 14
  %11 = load %struct.stack_st_X509*, %struct.stack_st_X509** %10, align 8
  %12 = icmp eq %struct.stack_st_X509* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %8
  %14 = tail call %struct.stack_st_X509* @X509_chain_up_ref(%struct.stack_st_X509* nonnull %11) #9
  %15 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 14
  store %struct.stack_st_X509* %14, %struct.stack_st_X509** %15, align 8
  %16 = icmp eq %struct.stack_st_X509* %14, null
  br i1 %16, label %26, label %17

17:                                               ; preds = %8, %13
  %18 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 15
  %19 = load %struct.stack_st_X509*, %struct.stack_st_X509** %18, align 8
  %20 = icmp eq %struct.stack_st_X509* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  %22 = tail call %struct.stack_st_X509* @X509_chain_up_ref(%struct.stack_st_X509* nonnull %19) #9
  %23 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 15
  store %struct.stack_st_X509* %22, %struct.stack_st_X509** %23, align 8
  %24 = icmp eq %struct.stack_st_X509* %22, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %17, %21
  br label %26

26:                                               ; preds = %21, %13, %25
  %27 = phi i1 [ true, %25 ], [ false, %13 ], [ false, %21 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4bsslL29ssl_crypto_x509_session_clearEP14ssl_session_st(%struct.ssl_session_st* nocapture) #0 {
  %2 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 13
  %3 = load %struct.x509_st*, %struct.x509_st** %2, align 8
  tail call void @X509_free(%struct.x509_st* %3) #9
  store %struct.x509_st* null, %struct.x509_st** %2, align 8
  %4 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 14
  %5 = bitcast %struct.stack_st_X509** %4 to %struct.stack_st**
  %6 = load %struct.stack_st*, %struct.stack_st** %5, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %6, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  store %struct.stack_st_X509* null, %struct.stack_st_X509** %4, align 8
  %7 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 15
  %8 = bitcast %struct.stack_st_X509** %7 to %struct.stack_st**
  %9 = load %struct.stack_st*, %struct.stack_st** %8, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %9, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  store %struct.stack_st_X509* null, %struct.stack_st_X509** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL41ssl_crypto_x509_session_verify_cert_chainEP14ssl_session_stPNS_13SSL_HANDSHAKEEPh(%struct.ssl_session_st* nocapture, %"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i8* nocapture) #0 {
  %4 = alloca %"class.bssl::internal::StackAllocated.139", align 8
  store i8 80, i8* %2, align 1
  %5 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 14
  %6 = load %struct.stack_st_X509*, %struct.stack_st_X509** %5, align 8
  %7 = icmp eq %struct.stack_st_X509* %6, null
  br i1 %7, label %90, label %8

8:                                                ; preds = %3
  %9 = bitcast %struct.stack_st_X509* %6 to %struct.stack_st*
  %10 = tail call i64 @sk_num(%struct.stack_st* nonnull %9) #9
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %90, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %1, i64 0, i32 0
  %14 = load %struct.ssl_st*, %struct.ssl_st** %13, align 8
  %15 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %14, i64 0, i32 16, i32 0, i32 0, i32 0
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %15, align 8
  %17 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %16, i64 0, i32 8
  %18 = load %struct.x509_store_st*, %struct.x509_store_st** %17, align 8
  %19 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %1, i64 0, i32 1
  %20 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %19, align 8
  %21 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %20, i64 0, i32 6, i32 0, i32 0, i32 0
  %22 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %21, align 8
  %23 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %22, i64 0, i32 10
  %24 = load %struct.x509_store_st*, %struct.x509_store_st** %23, align 8
  %25 = icmp eq %struct.x509_store_st* %24, null
  %26 = select i1 %25, %struct.x509_store_st* %18, %struct.x509_store_st* %24
  %27 = tail call i8* @sk_value(%struct.stack_st* nonnull %9, i64 0) #9
  %28 = bitcast i8* %27 to %struct.x509_st*
  %29 = bitcast %"class.bssl::internal::StackAllocated.139"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %29) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 232, i1 false)
  %30 = getelementptr inbounds %"class.bssl::internal::StackAllocated.139", %"class.bssl::internal::StackAllocated.139"* %4, i64 0, i32 0
  call void @X509_STORE_CTX_zero(%struct.x509_store_ctx_st* nonnull %30) #9
  %31 = call i32 @X509_STORE_CTX_init(%struct.x509_store_ctx_st* nonnull %30, %struct.x509_store_st* %26, %struct.x509_st* %28, %struct.stack_st_X509* nonnull %6) #9
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %55, label %33

33:                                               ; preds = %12
  %34 = bitcast %"struct.bssl::SSL_HANDSHAKE"* %1 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = call i32 @X509_STORE_CTX_set_ex_data(%struct.x509_store_ctx_st* nonnull %30, i32 0, i8* %35) #9
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %55, label %38

38:                                               ; preds = %33
  %39 = load %struct.ssl_st*, %struct.ssl_st** %13, align 8
  %40 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %39, i64 0, i32 26
  %41 = load i8, i8* %40, align 4
  %42 = and i8 %41, 1
  %43 = icmp eq i8 %42, 0
  %44 = select i1 %43, [11 x i8]* @.str.3, [11 x i8]* @.str.2
  %45 = getelementptr inbounds [11 x i8], [11 x i8]* %44, i64 0, i64 0
  %46 = call i32 @X509_STORE_CTX_set_default(%struct.x509_store_ctx_st* nonnull %30, i8* nonnull %45) #9
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %55, label %48

48:                                               ; preds = %38
  %49 = call %struct.X509_VERIFY_PARAM_st* @X509_STORE_CTX_get0_param(%struct.x509_store_ctx_st* nonnull %30) #9
  %50 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %19, align 8
  %51 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %50, i64 0, i32 4
  %52 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %51, align 8
  %53 = call i32 @X509_VERIFY_PARAM_set1(%struct.X509_VERIFY_PARAM_st* %49, %struct.X509_VERIFY_PARAM_st* %52) #9
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %48, %38, %33, %12
  call void @ERR_put_error(i32 16, i32 0, i32 11, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 390) #9
  br label %88

56:                                               ; preds = %48
  %57 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %19, align 8
  %58 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %57, i64 0, i32 7
  %59 = load i32 (i32, %struct.x509_store_ctx_st*)*, i32 (i32, %struct.x509_store_ctx_st*)** %58, align 8
  %60 = icmp eq i32 (i32, %struct.x509_store_ctx_st*)* %59, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %56
  call void @X509_STORE_CTX_set_verify_cb(%struct.x509_store_ctx_st* nonnull %30, i32 (i32, %struct.x509_store_ctx_st*)* nonnull %59) #9
  br label %62

62:                                               ; preds = %56, %61
  %63 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %16, i64 0, i32 22
  %64 = load i32 (%struct.x509_store_ctx_st*, i8*)*, i32 (%struct.x509_store_ctx_st*, i8*)** %63, align 8
  %65 = icmp eq i32 (%struct.x509_store_ctx_st*, i8*)* %64, null
  br i1 %65, label %70, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %16, i64 0, i32 23
  %68 = load i8*, i8** %67, align 8
  %69 = call i32 %64(%struct.x509_store_ctx_st* nonnull %30, i8* %68) #9
  br label %72

70:                                               ; preds = %62
  %71 = call i32 @X509_verify_cert(%struct.x509_store_ctx_st* nonnull %30) #9
  br label %72

72:                                               ; preds = %70, %66
  %73 = phi i32 [ %69, %66 ], [ %71, %70 ]
  %74 = getelementptr inbounds %"class.bssl::internal::StackAllocated.139", %"class.bssl::internal::StackAllocated.139"* %4, i64 0, i32 0, i32 24
  %75 = load i32, i32* %74, align 8
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 16
  store i64 %76, i64* %77, align 8
  %78 = icmp slt i32 %73, 1
  br i1 %78, label %79, label %87

79:                                               ; preds = %72
  %80 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %19, align 8
  %81 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %80, i64 0, i32 22
  %82 = load i8, i8* %81, align 8
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %79
  %85 = call i32 @SSL_alert_from_verify_result(i64 %76)
  %86 = trunc i32 %85 to i8
  store i8 %86, i8* %2, align 1
  br label %88

87:                                               ; preds = %79, %72
  call void @ERR_clear_error() #9
  br label %88

88:                                               ; preds = %84, %87, %55
  %89 = phi i1 [ false, %55 ], [ false, %84 ], [ true, %87 ]
  call void @X509_STORE_CTX_cleanup(%struct.x509_store_ctx_st* nonnull %30) #9
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %29) #9
  br label %90

90:                                               ; preds = %3, %8, %88
  %91 = phi i1 [ %89, %88 ], [ false, %8 ], [ false, %3 ]
  ret i1 %91
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4bsslL40ssl_crypto_x509_hs_flush_cached_ca_namesEPNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"* nocapture) #0 {
  %2 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 36
  %3 = bitcast %struct.stack_st_X509_NAME** %2 to %struct.stack_st**
  %4 = load %struct.stack_st*, %struct.stack_st** %3, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %4, void (void (i8*)*, i8*)* nonnull @sk_X509_NAME_call_free_func, void (i8*)* bitcast (void (%struct.X509_name_st*)* @X509_NAME_free to void (i8*)*)) #9
  store %struct.stack_st_X509_NAME* null, %struct.stack_st_X509_NAME** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL23ssl_crypto_x509_ssl_newEPNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly) #0 {
  %2 = tail call %struct.X509_VERIFY_PARAM_st* @X509_VERIFY_PARAM_new() #9
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 4
  store %struct.X509_VERIFY_PARAM_st* %2, %struct.X509_VERIFY_PARAM_st** %5, align 8
  %6 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %6, i64 0, i32 4
  %8 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %7, align 8
  %9 = icmp eq %struct.X509_VERIFY_PARAM_st* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %12 = load %struct.ssl_st*, %struct.ssl_st** %11, align 8
  %13 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %12, i64 0, i32 16, i32 0, i32 0, i32 0
  %14 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %13, align 8
  %15 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %14, i64 0, i32 43
  %16 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %15, align 8
  %17 = tail call i32 @X509_VERIFY_PARAM_inherit(%struct.X509_VERIFY_PARAM_st* nonnull %8, %struct.X509_VERIFY_PARAM_st* %16) #9
  br label %18

18:                                               ; preds = %1, %10
  %19 = phi i1 [ true, %10 ], [ false, %1 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4bsslL31ssl_crypto_x509_ssl_config_freeEPNS_10SSL_CONFIGE(%"struct.bssl::SSL_CONFIG"* nocapture) #0 {
  %2 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %0, i64 0, i32 13
  %3 = bitcast %struct.stack_st_X509_NAME** %2 to %struct.stack_st**
  %4 = load %struct.stack_st*, %struct.stack_st** %3, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %4, void (void (i8*)*, i8*)* nonnull @sk_X509_NAME_call_free_func, void (i8*)* bitcast (void (%struct.X509_name_st*)* @X509_NAME_free to void (i8*)*)) #9
  store %struct.stack_st_X509_NAME* null, %struct.stack_st_X509_NAME** %2, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %0, i64 0, i32 4
  %6 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %5, align 8
  tail call void @X509_VERIFY_PARAM_free(%struct.X509_VERIFY_PARAM_st* %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4bsslL42ssl_crypto_x509_ssl_flush_cached_client_CAEPNS_10SSL_CONFIGE(%"struct.bssl::SSL_CONFIG"* nocapture) #0 {
  %2 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %0, i64 0, i32 13
  %3 = bitcast %struct.stack_st_X509_NAME** %2 to %struct.stack_st**
  %4 = load %struct.stack_st*, %struct.stack_st** %3, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %4, void (void (i8*)*, i8*)* nonnull @sk_X509_NAME_call_free_func, void (i8*)* bitcast (void (%struct.X509_name_st*)* @X509_NAME_free to void (i8*)*)) #9
  store %struct.stack_st_X509_NAME* null, %struct.stack_st_X509_NAME** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL40ssl_crypto_x509_ssl_auto_chain_if_neededEPNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"*) #0 {
  %2 = alloca %"class.bssl::internal::StackAllocated.139", align 8
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %4 = load %struct.ssl_st*, %struct.ssl_st** %3, align 8
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %4, i64 0, i32 20
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %67

9:                                                ; preds = %1
  %10 = tail call zeroext i1 @_ZN4bssl19ssl_has_certificateEPKNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"* %0) #9
  br i1 %10, label %11, label %67

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %13 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %12, align 8
  %14 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %13, i64 0, i32 6, i32 0, i32 0, i32 0
  %15 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %14, align 8
  %16 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %16, align 8
  %18 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %17, null
  br i1 %18, label %67, label %19

19:                                               ; preds = %11
  %20 = bitcast %struct.stack_st_CRYPTO_BUFFER* %17 to %struct.stack_st*
  %21 = tail call i64 @sk_num(%struct.stack_st* nonnull %20) #9
  %22 = icmp ugt i64 %21, 1
  br i1 %22, label %67, label %23

23:                                               ; preds = %19
  %24 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %12, align 8
  %25 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %24, i64 0, i32 6, i32 0, i32 0, i32 0
  %26 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %25, align 8
  %27 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %26, i64 0, i32 1, i32 0, i32 0, i32 0
  %28 = bitcast %struct.stack_st_CRYPTO_BUFFER** %27 to %struct.stack_st**
  %29 = load %struct.stack_st*, %struct.stack_st** %28, align 8
  %30 = tail call i8* @sk_value(%struct.stack_st* %29, i64 0) #9
  %31 = bitcast i8* %30 to %struct.crypto_buffer_st*
  %32 = tail call %struct.x509_st* @X509_parse_from_buffer(%struct.crypto_buffer_st* %31) #9
  %33 = icmp eq %struct.x509_st* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %23
  tail call void @ERR_put_error(i32 16, i32 0, i32 11, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 455) #9
  br label %67

35:                                               ; preds = %23
  %36 = bitcast %"class.bssl::internal::StackAllocated.139"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %36) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 232, i1 false)
  %37 = getelementptr inbounds %"class.bssl::internal::StackAllocated.139", %"class.bssl::internal::StackAllocated.139"* %2, i64 0, i32 0
  call void @X509_STORE_CTX_zero(%struct.x509_store_ctx_st* nonnull %37) #9
  %38 = load %struct.ssl_st*, %struct.ssl_st** %3, align 8
  %39 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %38, i64 0, i32 16, i32 0, i32 0, i32 0
  %40 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %39, align 8
  %41 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %40, i64 0, i32 8
  %42 = load %struct.x509_store_st*, %struct.x509_store_st** %41, align 8
  %43 = call i32 @X509_STORE_CTX_init(%struct.x509_store_ctx_st* nonnull %37, %struct.x509_store_st* %42, %struct.x509_st* nonnull %32, %struct.stack_st_X509* null) #9
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %35
  call void @ERR_put_error(i32 16, i32 0, i32 11, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 462) #9
  br label %65

46:                                               ; preds = %35
  %47 = call i32 @X509_verify_cert(%struct.x509_store_ctx_st* nonnull %37) #9
  call void @ERR_clear_error() #9
  %48 = getelementptr inbounds %"class.bssl::internal::StackAllocated.139", %"class.bssl::internal::StackAllocated.139"* %2, i64 0, i32 0, i32 20
  %49 = bitcast %struct.stack_st_X509** %48 to %struct.stack_st**
  %50 = load %struct.stack_st*, %struct.stack_st** %49, align 8
  %51 = call i8* @sk_shift(%struct.stack_st* %50) #9
  %52 = bitcast i8* %51 to %struct.x509_st*
  call void @X509_free(%struct.x509_st* %52) #9
  %53 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %12, align 8
  %54 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %53, i64 0, i32 6, i32 0, i32 0, i32 0
  %55 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %54, align 8
  %56 = load %struct.stack_st_X509*, %struct.stack_st_X509** %48, align 8
  %57 = call fastcc zeroext i1 @_ZN4bsslL18ssl_cert_set_chainEPNS_4CERTEP13stack_st_X509(%"struct.bssl::CERT"* %55, %struct.stack_st_X509* %56)
  br i1 %57, label %58, label %65

58:                                               ; preds = %46
  %59 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %12, align 8
  %60 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %59, i64 0, i32 6, i32 0, i32 0, i32 0
  %61 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %60, align 8
  %62 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %61, i64 0, i32 2
  %63 = bitcast %struct.stack_st_X509** %62 to %struct.stack_st**
  %64 = load %struct.stack_st*, %struct.stack_st** %63, align 8
  call void @sk_pop_free_ex(%struct.stack_st* %64, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  store %struct.stack_st_X509* null, %struct.stack_st_X509** %62, align 8
  br label %65

65:                                               ; preds = %46, %58, %45
  %66 = phi i1 [ true, %58 ], [ false, %45 ], [ false, %46 ]
  call void @X509_STORE_CTX_cleanup(%struct.x509_store_ctx_st* nonnull %37) #9
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %36) #9
  call void @X509_free(%struct.x509_st* nonnull %32) #9
  br label %67

67:                                               ; preds = %65, %34, %9, %11, %19, %1
  %68 = phi i1 [ true, %1 ], [ true, %19 ], [ true, %11 ], [ true, %9 ], [ false, %34 ], [ %66, %65 ]
  ret i1 %68
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL27ssl_crypto_x509_ssl_ctx_newEP10ssl_ctx_st(%struct.ssl_ctx_st* nocapture) #0 {
  %2 = tail call %struct.x509_store_st* @X509_STORE_new() #9
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 8
  store %struct.x509_store_st* %2, %struct.x509_store_st** %3, align 8
  %4 = tail call %struct.X509_VERIFY_PARAM_st* @X509_VERIFY_PARAM_new() #9
  %5 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 43
  store %struct.X509_VERIFY_PARAM_st* %4, %struct.X509_VERIFY_PARAM_st** %5, align 8
  %6 = load %struct.x509_store_st*, %struct.x509_store_st** %3, align 8
  %7 = icmp ne %struct.x509_store_st* %6, null
  %8 = icmp ne %struct.X509_VERIFY_PARAM_st* %4, null
  %9 = and i1 %8, %7
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4bsslL28ssl_crypto_x509_ssl_ctx_freeEP10ssl_ctx_st(%struct.ssl_ctx_st* nocapture) #0 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 32
  %3 = bitcast %struct.stack_st_X509_NAME** %2 to %struct.stack_st**
  %4 = load %struct.stack_st*, %struct.stack_st** %3, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %4, void (void (i8*)*, i8*)* nonnull @sk_X509_NAME_call_free_func, void (i8*)* bitcast (void (%struct.X509_name_st*)* @X509_NAME_free to void (i8*)*)) #9
  store %struct.stack_st_X509_NAME* null, %struct.stack_st_X509_NAME** %2, align 8
  %5 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 43
  %6 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %5, align 8
  tail call void @X509_VERIFY_PARAM_free(%struct.X509_VERIFY_PARAM_st* %6) #9
  %7 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 8
  %8 = load %struct.x509_store_st*, %struct.x509_store_st** %7, align 8
  tail call void @X509_STORE_free(%struct.x509_store_st* %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4bsslL46ssl_crypto_x509_ssl_ctx_flush_cached_client_CAEP10ssl_ctx_st(%struct.ssl_ctx_st* nocapture) #0 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 32
  %3 = bitcast %struct.stack_st_X509_NAME** %2 to %struct.stack_st**
  %4 = load %struct.stack_st*, %struct.stack_st** %3, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %4, void (void (i8*)*, i8*)* nonnull @sk_X509_NAME_call_free_func, void (i8*)* bitcast (void (%struct.X509_name_st*)* @X509_NAME_free to void (i8*)*)) #9
  store %struct.stack_st_X509_NAME* null, %struct.stack_st_X509_NAME** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.x509_st* @SSL_get_peer_certificate(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.ssl_st* %0, null
  br i1 %2, label %13, label %3

3:                                                ; preds = %1
  %4 = tail call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* nonnull %0) #9
  %5 = icmp eq %struct.ssl_session_st* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %4, i64 0, i32 13
  %8 = load %struct.x509_st*, %struct.x509_st** %7, align 8
  %9 = icmp eq %struct.x509_st* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = tail call i32 @X509_up_ref(%struct.x509_st* nonnull %8) #9
  %12 = load %struct.x509_st*, %struct.x509_st** %7, align 8
  br label %13

13:                                               ; preds = %10, %6, %3, %1
  %14 = phi %struct.x509_st* [ null, %1 ], [ %12, %10 ], [ null, %6 ], [ null, %3 ]
  ret %struct.x509_st* %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st*) local_unnamed_addr #2

declare i32 @X509_up_ref(%struct.x509_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_X509* @SSL_get_peer_cert_chain(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.ssl_st* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = tail call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* nonnull %0) #9
  %5 = icmp eq %struct.ssl_session_st* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %8 = load i8, i8* %7, align 4
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %4, i64 0, i32 15
  %12 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %4, i64 0, i32 14
  %13 = select i1 %10, %struct.stack_st_X509** %12, %struct.stack_st_X509** %11
  %14 = load %struct.stack_st_X509*, %struct.stack_st_X509** %13, align 8
  br label %15

15:                                               ; preds = %6, %3, %1
  %16 = phi %struct.stack_st_X509* [ null, %1 ], [ %14, %6 ], [ null, %3 ]
  ret %struct.stack_st_X509* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_X509* @SSL_get_peer_full_cert_chain(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = tail call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* %0) #9
  %3 = icmp eq %struct.ssl_session_st* %2, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %2, i64 0, i32 14
  %6 = load %struct.stack_st_X509*, %struct.stack_st_X509** %5, align 8
  br label %7

7:                                                ; preds = %1, %4
  %8 = phi %struct.stack_st_X509* [ %6, %4 ], [ null, %1 ]
  ret %struct.stack_st_X509* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_set_purpose(%struct.ssl_ctx_st* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 43
  %4 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %3, align 8
  %5 = tail call i32 @X509_VERIFY_PARAM_set_purpose(%struct.X509_VERIFY_PARAM_st* %4, i32 %1) #9
  ret i32 %5
}

declare i32 @X509_VERIFY_PARAM_set_purpose(%struct.X509_VERIFY_PARAM_st*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set_purpose(%struct.ssl_st* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 4
  %8 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %7, align 8
  %9 = tail call i32 @X509_VERIFY_PARAM_set_purpose(%struct.X509_VERIFY_PARAM_st* %8, i32 %1) #9
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i32 [ %9, %6 ], [ 0, %2 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_set_trust(%struct.ssl_ctx_st* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 43
  %4 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %3, align 8
  %5 = tail call i32 @X509_VERIFY_PARAM_set_trust(%struct.X509_VERIFY_PARAM_st* %4, i32 %1) #9
  ret i32 %5
}

declare i32 @X509_VERIFY_PARAM_set_trust(%struct.X509_VERIFY_PARAM_st*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set_trust(%struct.ssl_st* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 4
  %8 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %7, align 8
  %9 = tail call i32 @X509_VERIFY_PARAM_set_trust(%struct.X509_VERIFY_PARAM_st* %8, i32 %1) #9
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i32 [ %9, %6 ], [ 0, %2 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_set1_param(%struct.ssl_ctx_st* nocapture readonly, %struct.X509_VERIFY_PARAM_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 43
  %4 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %3, align 8
  %5 = tail call i32 @X509_VERIFY_PARAM_set1(%struct.X509_VERIFY_PARAM_st* %4, %struct.X509_VERIFY_PARAM_st* %1) #9
  ret i32 %5
}

declare i32 @X509_VERIFY_PARAM_set1(%struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set1_param(%struct.ssl_st* nocapture readonly, %struct.X509_VERIFY_PARAM_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 4
  %8 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %7, align 8
  %9 = tail call i32 @X509_VERIFY_PARAM_set1(%struct.X509_VERIFY_PARAM_st* %8, %struct.X509_VERIFY_PARAM_st* %1) #9
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i32 [ %9, %6 ], [ 0, %2 ]
  ret i32 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.X509_VERIFY_PARAM_st* @SSL_CTX_get0_param(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 43
  %3 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %2, align 8
  ret %struct.X509_VERIFY_PARAM_st* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.X509_VERIFY_PARAM_st* @SSL_get0_param(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %2, align 8
  %4 = icmp eq %"struct.bssl::SSL_CONFIG"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %3, i64 0, i32 4
  %7 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %struct.X509_VERIFY_PARAM_st* [ %7, %5 ], [ null, %1 ]
  ret %struct.X509_VERIFY_PARAM_st* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_get_verify_depth(%struct.ssl_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %2, align 8
  %4 = icmp eq %"struct.bssl::SSL_CONFIG"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %3, i64 0, i32 4
  %7 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %6, align 8
  %8 = tail call i32 @X509_VERIFY_PARAM_get_depth(%struct.X509_VERIFY_PARAM_st* %7) #9
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i32 [ %8, %5 ], [ 0, %1 ]
  ret i32 %10
}

declare i32 @X509_VERIFY_PARAM_get_depth(%struct.X509_VERIFY_PARAM_st*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 (i32, %struct.x509_store_ctx_st*)* @SSL_get_verify_callback(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %2, align 8
  %4 = icmp eq %"struct.bssl::SSL_CONFIG"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %3, i64 0, i32 7
  %7 = load i32 (i32, %struct.x509_store_ctx_st*)*, i32 (i32, %struct.x509_store_ctx_st*)** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 (i32, %struct.x509_store_ctx_st*)* [ %7, %5 ], [ null, %1 ]
  ret i32 (i32, %struct.x509_store_ctx_st*)* %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_CTX_get_verify_mode(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 40
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_get_verify_depth(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 43
  %3 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %2, align 8
  %4 = tail call i32 @X509_VERIFY_PARAM_get_depth(%struct.X509_VERIFY_PARAM_st* %3) #9
  ret i32 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 (i32, %struct.x509_store_ctx_st*)* @SSL_CTX_get_verify_callback(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 42
  %3 = load i32 (i32, %struct.x509_store_ctx_st*)*, i32 (i32, %struct.x509_store_ctx_st*)** %2, align 8
  ret i32 (i32, %struct.x509_store_ctx_st*)* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_set_verify(%struct.ssl_st* nocapture readonly, i32, i32 (i32, %struct.x509_store_ctx_st*)*) local_unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_CONFIG"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %3
  %8 = trunc i32 %1 to i8
  %9 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %5, i64 0, i32 22
  store i8 %8, i8* %9, align 8
  %10 = icmp eq i32 (i32, %struct.x509_store_ctx_st*)* %2, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %4, align 8
  %13 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %12, i64 0, i32 7
  store i32 (i32, %struct.x509_store_ctx_st*)* %2, i32 (i32, %struct.x509_store_ctx_st*)** %13, align 8
  br label %14

14:                                               ; preds = %3, %7, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_set_verify_depth(%struct.ssl_st* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 4
  %8 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %7, align 8
  tail call void @X509_VERIFY_PARAM_set_depth(%struct.X509_VERIFY_PARAM_st* %8, i32 %1) #9
  br label %9

9:                                                ; preds = %2, %6
  ret void
}

declare void @X509_VERIFY_PARAM_set_depth(%struct.X509_VERIFY_PARAM_st*, i32) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_set_cert_verify_callback(%struct.ssl_ctx_st* nocapture, i32 (%struct.x509_store_ctx_st*, i8*)*, i8*) local_unnamed_addr #5 {
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 22
  store i32 (%struct.x509_store_ctx_st*, i8*)* %1, i32 (%struct.x509_store_ctx_st*, i8*)** %4, align 8
  %5 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 23
  store i8* %2, i8** %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_set_verify(%struct.ssl_ctx_st* nocapture, i32, i32 (i32, %struct.x509_store_ctx_st*)*) local_unnamed_addr #5 {
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 40
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 42
  store i32 (i32, %struct.x509_store_ctx_st*)* %2, i32 (i32, %struct.x509_store_ctx_st*)** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_CTX_set_verify_depth(%struct.ssl_ctx_st* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 43
  %4 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %3, align 8
  tail call void @X509_VERIFY_PARAM_set_depth(%struct.X509_VERIFY_PARAM_st* %4, i32 %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_set_default_verify_paths(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 8
  %3 = load %struct.x509_store_st*, %struct.x509_store_st** %2, align 8
  %4 = tail call i32 @X509_STORE_set_default_paths(%struct.x509_store_st* %3) #9
  ret i32 %4
}

declare i32 @X509_STORE_set_default_paths(%struct.x509_store_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_load_verify_locations(%struct.ssl_ctx_st* nocapture readonly, i8*, i8*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 8
  %5 = load %struct.x509_store_st*, %struct.x509_store_st** %4, align 8
  %6 = tail call i32 @X509_STORE_load_locations(%struct.x509_store_st* %5, i8* %1, i8* %2) #9
  ret i32 %6
}

declare i32 @X509_STORE_load_locations(%struct.x509_store_st*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_set_verify_result(%struct.ssl_st* nocapture readnone, i64) local_unnamed_addr #0 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @abort() #10
  unreachable

5:                                                ; preds = %2
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i64 @SSL_get_verify_result(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = tail call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* %0) #9
  %3 = icmp eq %struct.ssl_session_st* %2, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %2, i64 0, i32 16
  %6 = load i64, i64* %5, align 8
  br label %7

7:                                                ; preds = %1, %4
  %8 = phi i64 [ %6, %4 ], [ 65, %1 ]
  ret i64 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.x509_store_st* @SSL_CTX_get_cert_store(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 8
  %3 = load %struct.x509_store_st*, %struct.x509_store_st** %2, align 8
  ret %struct.x509_store_st* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_CTX_set_cert_store(%struct.ssl_ctx_st* nocapture, %struct.x509_store_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 8
  %4 = load %struct.x509_store_st*, %struct.x509_store_st** %3, align 8
  tail call void @X509_STORE_free(%struct.x509_store_st* %4) #9
  store %struct.x509_store_st* %1, %struct.x509_store_st** %3, align 8
  ret void
}

declare void @X509_STORE_free(%struct.x509_store_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_use_certificate(%struct.ssl_st* nocapture readonly, %struct.x509_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 6, i32 0, i32 0, i32 0
  %8 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %7, align 8
  %9 = tail call fastcc i32 @_ZL19ssl_use_certificatePN4bssl4CERTEP7x509_st(%"struct.bssl::CERT"* %8, %struct.x509_st* %1)
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i32 [ %9, %6 ], [ 0, %2 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL19ssl_use_certificatePN4bssl4CERTEP7x509_st(%"struct.bssl::CERT"*, %struct.x509_st*) unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = icmp eq %struct.x509_st* %1, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @ERR_put_error(i32 16, i32 0, i32 67, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 730) #9
  br label %20

6:                                                ; preds = %2
  %7 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  store i8* null, i8** %3, align 8
  %8 = call i32 @i2d_X509(%struct.x509_st* nonnull %1, i8** nonnull %3) #9
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  br label %20

11:                                               ; preds = %6
  %12 = load i8*, i8** %3, align 8
  %13 = sext i32 %8 to i64
  %14 = call %struct.crypto_buffer_st* @CRYPTO_BUFFER_new(i8* %12, i64 %13, %struct.crypto_buffer_pool_st* null) #9
  %15 = load i8*, i8** %3, align 8
  call void @OPENSSL_free(i8* %15) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  %16 = icmp eq %struct.crypto_buffer_st* %14, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = call zeroext i1 @_ZN4bssl12ssl_set_certEPNS_4CERTENSt3__110unique_ptrI16crypto_buffer_stNS_8internal7DeleterIS4_EEEE(%"struct.bssl::CERT"* %0, %struct.crypto_buffer_st* nonnull %14) #9
  %19 = zext i1 %18 to i32
  br label %20

20:                                               ; preds = %11, %10, %17, %5
  %21 = phi i32 [ 0, %5 ], [ 0, %10 ], [ %19, %17 ], [ 0, %11 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_use_certificate(%struct.ssl_ctx_st* nocapture readonly, %struct.x509_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %3, align 8
  %5 = tail call fastcc i32 @_ZL19ssl_use_certificatePN4bssl4CERTEP7x509_st(%"struct.bssl::CERT"* %4, %struct.x509_st* %1)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.x509_st* @SSL_get_certificate(%struct.ssl_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %2, align 8
  %4 = icmp eq %"struct.bssl::SSL_CONFIG"* %3, null
  br i1 %4, label %27, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %3, i64 0, i32 6, i32 0, i32 0, i32 0
  %7 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %6, align 8
  %8 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %7, i64 0, i32 3
  %9 = load %struct.x509_st*, %struct.x509_st** %8, align 8
  %10 = icmp eq %struct.x509_st* %9, null
  br i1 %10, label %11, label %25

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %12, align 8
  %14 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = bitcast %struct.stack_st_CRYPTO_BUFFER* %13 to %struct.stack_st*
  %17 = tail call i8* @sk_value(%struct.stack_st* nonnull %16, i64 0) #9
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = load %struct.x509_st*, %struct.x509_st** %8, align 8
  br label %25

21:                                               ; preds = %15
  %22 = bitcast i8* %17 to %struct.crypto_buffer_st*
  %23 = tail call %struct.x509_st* @X509_parse_from_buffer(%struct.crypto_buffer_st* nonnull %22) #9
  store %struct.x509_st* %23, %struct.x509_st** %8, align 8
  %24 = icmp eq %struct.x509_st* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21, %19, %11, %5
  %26 = phi %struct.x509_st* [ %20, %19 ], [ null, %11 ], [ %23, %21 ], [ %9, %5 ]
  br label %27

27:                                               ; preds = %1, %25, %21
  %28 = phi %struct.x509_st* [ null, %1 ], [ %26, %25 ], [ null, %21 ]
  ret %struct.x509_st* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.x509_st* @SSL_CTX_get0_certificate(%struct.ssl_ctx_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 2
  tail call void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st* %2) #9
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %4, i64 0, i32 3
  %6 = load %struct.x509_st*, %struct.x509_st** %5, align 8
  %7 = icmp eq %struct.x509_st* %6, null
  br i1 %7, label %8, label %22

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %9, align 8
  %11 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = bitcast %struct.stack_st_CRYPTO_BUFFER* %10 to %struct.stack_st*
  %14 = tail call i8* @sk_value(%struct.stack_st* nonnull %13, i64 0) #9
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  %17 = load %struct.x509_st*, %struct.x509_st** %5, align 8
  br label %22

18:                                               ; preds = %12
  %19 = bitcast i8* %14 to %struct.crypto_buffer_st*
  %20 = tail call %struct.x509_st* @X509_parse_from_buffer(%struct.crypto_buffer_st* nonnull %19) #9
  store %struct.x509_st* %20, %struct.x509_st** %5, align 8
  %21 = icmp eq %struct.x509_st* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18, %16, %8, %1
  %23 = phi %struct.x509_st* [ %17, %16 ], [ null, %8 ], [ %20, %18 ], [ %6, %1 ]
  br label %24

24:                                               ; preds = %18, %22
  %25 = phi %struct.x509_st* [ %23, %22 ], [ null, %18 ]
  tail call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %2) #9
  ret %struct.x509_st* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_set0_chain(%struct.ssl_ctx_st* nocapture readonly, %struct.stack_st_X509*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %3, align 8
  %5 = tail call fastcc zeroext i1 @_ZN4bsslL18ssl_cert_set_chainEPNS_4CERTEP13stack_st_X509(%"struct.bssl::CERT"* %4, %struct.stack_st_X509* %1) #9
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = bitcast %struct.stack_st_X509* %1 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* %7, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  %8 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %4, i64 0, i32 2
  %9 = bitcast %struct.stack_st_X509** %8 to %struct.stack_st**
  %10 = load %struct.stack_st*, %struct.stack_st** %9, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %10, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  store %struct.stack_st_X509* null, %struct.stack_st_X509** %8, align 8
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi i32 [ 1, %6 ], [ 0, %2 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_set1_chain(%struct.ssl_ctx_st* nocapture readonly, %struct.stack_st_X509*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %3, align 8
  %5 = tail call fastcc zeroext i1 @_ZN4bsslL18ssl_cert_set_chainEPNS_4CERTEP13stack_st_X509(%"struct.bssl::CERT"* %4, %struct.stack_st_X509* %1) #9
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %4, i64 0, i32 2
  %8 = bitcast %struct.stack_st_X509** %7 to %struct.stack_st**
  %9 = load %struct.stack_st*, %struct.stack_st** %8, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %9, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  store %struct.stack_st_X509* null, %struct.stack_st_X509** %7, align 8
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 1, %6 ], [ 0, %2 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set0_chain(%struct.ssl_st* nocapture readonly, %struct.stack_st_X509*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 6, i32 0, i32 0, i32 0
  %8 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %7, align 8
  %9 = tail call fastcc zeroext i1 @_ZN4bsslL18ssl_cert_set_chainEPNS_4CERTEP13stack_st_X509(%"struct.bssl::CERT"* %8, %struct.stack_st_X509* %1) #9
  br i1 %9, label %10, label %15

10:                                               ; preds = %6
  %11 = bitcast %struct.stack_st_X509* %1 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* %11, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  %12 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %8, i64 0, i32 2
  %13 = bitcast %struct.stack_st_X509** %12 to %struct.stack_st**
  %14 = load %struct.stack_st*, %struct.stack_st** %13, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %14, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  store %struct.stack_st_X509* null, %struct.stack_st_X509** %12, align 8
  br label %15

15:                                               ; preds = %2, %10, %6
  %16 = phi i32 [ 0, %2 ], [ 1, %10 ], [ 0, %6 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set1_chain(%struct.ssl_st* nocapture readonly, %struct.stack_st_X509*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 6, i32 0, i32 0, i32 0
  %8 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %7, align 8
  %9 = tail call fastcc zeroext i1 @_ZN4bsslL18ssl_cert_set_chainEPNS_4CERTEP13stack_st_X509(%"struct.bssl::CERT"* %8, %struct.stack_st_X509* %1) #9
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %8, i64 0, i32 2
  %12 = bitcast %struct.stack_st_X509** %11 to %struct.stack_st**
  %13 = load %struct.stack_st*, %struct.stack_st** %12, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %13, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  store %struct.stack_st_X509* null, %struct.stack_st_X509** %11, align 8
  br label %14

14:                                               ; preds = %2, %10, %6
  %15 = phi i32 [ 0, %2 ], [ 1, %10 ], [ 0, %6 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_add0_chain_cert(%struct.ssl_ctx_st* nocapture readonly, %struct.x509_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %3, align 8
  %5 = tail call fastcc i32 @_ZL20ssl_cert_append_certPN4bssl4CERTEP7x509_st(%"struct.bssl::CERT"* %4, %struct.x509_st* %1) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %4, i64 0, i32 4
  %9 = load %struct.x509_st*, %struct.x509_st** %8, align 8
  tail call void @X509_free(%struct.x509_st* %9) #9
  store %struct.x509_st* %1, %struct.x509_st** %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %4, i64 0, i32 2
  %11 = bitcast %struct.stack_st_X509** %10 to %struct.stack_st**
  %12 = load %struct.stack_st*, %struct.stack_st** %11, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %12, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  store %struct.stack_st_X509* null, %struct.stack_st_X509** %10, align 8
  br label %13

13:                                               ; preds = %2, %7
  %14 = phi i32 [ 1, %7 ], [ 0, %2 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_add1_chain_cert(%struct.ssl_ctx_st* nocapture readonly, %struct.x509_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %3, align 8
  %5 = tail call fastcc i32 @_ZL20ssl_cert_append_certPN4bssl4CERTEP7x509_st(%"struct.bssl::CERT"* %4, %struct.x509_st* %1) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %4, i64 0, i32 2
  %9 = bitcast %struct.stack_st_X509** %8 to %struct.stack_st**
  %10 = load %struct.stack_st*, %struct.stack_st** %9, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %10, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  store %struct.stack_st_X509* null, %struct.stack_st_X509** %8, align 8
  br label %11

11:                                               ; preds = %2, %7
  %12 = phi i32 [ 1, %7 ], [ 0, %2 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_add_extra_chain_cert(%struct.ssl_ctx_st* nocapture readonly, %struct.x509_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %3, align 8
  %5 = tail call fastcc i32 @_ZL20ssl_cert_append_certPN4bssl4CERTEP7x509_st(%"struct.bssl::CERT"* %4, %struct.x509_st* %1) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %4, i64 0, i32 4
  %9 = load %struct.x509_st*, %struct.x509_st** %8, align 8
  tail call void @X509_free(%struct.x509_st* %9) #9
  store %struct.x509_st* %1, %struct.x509_st** %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %4, i64 0, i32 2
  %11 = bitcast %struct.stack_st_X509** %10 to %struct.stack_st**
  %12 = load %struct.stack_st*, %struct.stack_st** %11, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %12, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  store %struct.stack_st_X509* null, %struct.stack_st_X509** %10, align 8
  br label %13

13:                                               ; preds = %2, %7
  %14 = phi i32 [ 1, %7 ], [ 0, %2 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_add0_chain_cert(%struct.ssl_st* nocapture readonly, %struct.x509_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 6, i32 0, i32 0, i32 0
  %8 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %7, align 8
  %9 = tail call fastcc i32 @_ZL20ssl_cert_append_certPN4bssl4CERTEP7x509_st(%"struct.bssl::CERT"* %8, %struct.x509_st* %1) #9
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %8, i64 0, i32 4
  %13 = load %struct.x509_st*, %struct.x509_st** %12, align 8
  tail call void @X509_free(%struct.x509_st* %13) #9
  store %struct.x509_st* %1, %struct.x509_st** %12, align 8
  %14 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %8, i64 0, i32 2
  %15 = bitcast %struct.stack_st_X509** %14 to %struct.stack_st**
  %16 = load %struct.stack_st*, %struct.stack_st** %15, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %16, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  store %struct.stack_st_X509* null, %struct.stack_st_X509** %14, align 8
  br label %17

17:                                               ; preds = %2, %11, %6
  %18 = phi i32 [ 0, %2 ], [ 1, %11 ], [ 0, %6 ]
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_add1_chain_cert(%struct.ssl_st* nocapture readonly, %struct.x509_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 6, i32 0, i32 0, i32 0
  %8 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %7, align 8
  %9 = tail call fastcc i32 @_ZL20ssl_cert_append_certPN4bssl4CERTEP7x509_st(%"struct.bssl::CERT"* %8, %struct.x509_st* %1) #9
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %8, i64 0, i32 2
  %13 = bitcast %struct.stack_st_X509** %12 to %struct.stack_st**
  %14 = load %struct.stack_st*, %struct.stack_st** %13, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %14, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  store %struct.stack_st_X509* null, %struct.stack_st_X509** %12, align 8
  br label %15

15:                                               ; preds = %2, %11, %6
  %16 = phi i32 [ 0, %2 ], [ 1, %11 ], [ 0, %6 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_clear_chain_certs(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %3 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %2, align 8
  %4 = tail call fastcc zeroext i1 @_ZN4bsslL18ssl_cert_set_chainEPNS_4CERTEP13stack_st_X509(%"struct.bssl::CERT"* %3, %struct.stack_st_X509* null) #9
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  tail call void @sk_pop_free_ex(%struct.stack_st* null, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  %6 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %3, i64 0, i32 2
  %7 = bitcast %struct.stack_st_X509** %6 to %struct.stack_st**
  %8 = load %struct.stack_st*, %struct.stack_st** %7, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %8, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  store %struct.stack_st_X509* null, %struct.stack_st_X509** %6, align 8
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i32 [ 1, %5 ], [ 0, %1 ]
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_clear_extra_chain_certs(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %3 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %2, align 8
  %4 = tail call fastcc zeroext i1 @_ZN4bsslL18ssl_cert_set_chainEPNS_4CERTEP13stack_st_X509(%"struct.bssl::CERT"* %3, %struct.stack_st_X509* null) #9
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  tail call void @sk_pop_free_ex(%struct.stack_st* null, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  %6 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %3, i64 0, i32 2
  %7 = bitcast %struct.stack_st_X509** %6 to %struct.stack_st**
  %8 = load %struct.stack_st*, %struct.stack_st** %7, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %8, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  store %struct.stack_st_X509* null, %struct.stack_st_X509** %6, align 8
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i32 [ 1, %5 ], [ 0, %1 ]
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_clear_chain_certs(%struct.ssl_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %2, align 8
  %4 = icmp eq %"struct.bssl::SSL_CONFIG"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %3, i64 0, i32 6, i32 0, i32 0, i32 0
  %7 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %6, align 8
  %8 = tail call fastcc zeroext i1 @_ZN4bsslL18ssl_cert_set_chainEPNS_4CERTEP13stack_st_X509(%"struct.bssl::CERT"* %7, %struct.stack_st_X509* null) #9
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  tail call void @sk_pop_free_ex(%struct.stack_st* null, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  %10 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %7, i64 0, i32 2
  %11 = bitcast %struct.stack_st_X509** %10 to %struct.stack_st**
  %12 = load %struct.stack_st*, %struct.stack_st** %11, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %12, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #9
  store %struct.stack_st_X509* null, %struct.stack_st_X509** %10, align 8
  br label %13

13:                                               ; preds = %1, %5, %9
  %14 = phi i32 [ 0, %1 ], [ 1, %9 ], [ 0, %5 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_get0_chain_certs(%struct.ssl_ctx_st*, %struct.stack_st_X509** nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 2
  tail call void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st* %3) #9
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %4, align 8
  %6 = tail call fastcc i32 @_ZL26ssl_cert_cache_chain_certsPN4bssl4CERTE(%"struct.bssl::CERT"* %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %4, align 8
  %10 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %9, i64 0, i32 2
  %11 = load %struct.stack_st_X509*, %struct.stack_st_X509** %10, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi %struct.stack_st_X509* [ %11, %8 ], [ null, %2 ]
  %14 = phi i32 [ 1, %8 ], [ 0, %2 ]
  store %struct.stack_st_X509* %13, %struct.stack_st_X509** %1, align 8
  tail call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %3) #9
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL26ssl_cert_cache_chain_certsPN4bssl4CERTE(%"struct.bssl::CERT"* nocapture) unnamed_addr #0 {
  %2 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %0, i64 0, i32 2
  %3 = load %struct.stack_st_X509*, %struct.stack_st_X509** %2, align 8
  %4 = icmp eq %struct.stack_st_X509* %3, null
  br i1 %4, label %5, label %41

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %6, align 8
  %8 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %7, null
  br i1 %8, label %41, label %9

9:                                                ; preds = %5
  %10 = bitcast %struct.stack_st_CRYPTO_BUFFER* %7 to %struct.stack_st*
  %11 = tail call i64 @sk_num(%struct.stack_st* nonnull %10) #9
  %12 = icmp ult i64 %11, 2
  br i1 %12, label %41, label %13

13:                                               ; preds = %9
  %14 = tail call %struct.stack_st* @sk_new_null() #9
  %15 = icmp eq %struct.stack_st* %14, null
  br i1 %15, label %41, label %16

16:                                               ; preds = %13
  %17 = bitcast %struct.stack_st_CRYPTO_BUFFER** %6 to %struct.stack_st**
  %18 = load %struct.stack_st*, %struct.stack_st** %17, align 8
  %19 = tail call i64 @sk_num(%struct.stack_st* %18) #9
  %20 = icmp ugt i64 %19, 1
  br i1 %20, label %25, label %38

21:                                               ; preds = %32
  %22 = load %struct.stack_st*, %struct.stack_st** %17, align 8
  %23 = tail call i64 @sk_num(%struct.stack_st* %22) #9
  %24 = icmp ult i64 %36, %23
  br i1 %24, label %25, label %38

25:                                               ; preds = %16, %21
  %26 = phi i64 [ %36, %21 ], [ 1, %16 ]
  %27 = load %struct.stack_st*, %struct.stack_st** %17, align 8
  %28 = tail call i8* @sk_value(%struct.stack_st* %27, i64 %26) #9
  %29 = bitcast i8* %28 to %struct.crypto_buffer_st*
  %30 = tail call %struct.x509_st* @X509_parse_from_buffer(%struct.crypto_buffer_st* %29) #9
  %31 = icmp eq %struct.x509_st* %30, null
  br i1 %31, label %40, label %32

32:                                               ; preds = %25
  %33 = bitcast %struct.x509_st* %30 to i8*
  %34 = tail call i64 @sk_push(%struct.stack_st* nonnull %14, i8* nonnull %33) #9
  %35 = icmp eq i64 %34, 0
  %36 = add nuw i64 %26, 1
  br i1 %35, label %37, label %21

37:                                               ; preds = %32
  tail call void @X509_free(%struct.x509_st* nonnull %30) #9
  br label %40

38:                                               ; preds = %21, %16
  %39 = bitcast %struct.stack_st_X509** %2 to %struct.stack_st**
  store %struct.stack_st* %14, %struct.stack_st** %39, align 8
  br label %41

40:                                               ; preds = %25, %37
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %14, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI13stack_st_X509vE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #9
  br label %41

41:                                               ; preds = %13, %40, %38, %5, %9, %1
  %42 = phi i32 [ 1, %1 ], [ 1, %9 ], [ 1, %5 ], [ 1, %38 ], [ 0, %40 ], [ 0, %13 ]
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_get_extra_chain_certs(%struct.ssl_ctx_st*, %struct.stack_st_X509** nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 2
  tail call void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st* %3) #9
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %4, align 8
  %6 = tail call fastcc i32 @_ZL26ssl_cert_cache_chain_certsPN4bssl4CERTE(%"struct.bssl::CERT"* %5) #9
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %4, align 8
  %10 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %9, i64 0, i32 2
  %11 = load %struct.stack_st_X509*, %struct.stack_st_X509** %10, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi %struct.stack_st_X509* [ %11, %8 ], [ null, %2 ]
  %14 = phi i32 [ 1, %8 ], [ 0, %2 ]
  store %struct.stack_st_X509* %13, %struct.stack_st_X509** %1, align 8
  tail call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %3) #9
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_get0_chain_certs(%struct.ssl_st* nocapture readonly, %struct.stack_st_X509** nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 6, i32 0, i32 0, i32 0
  %8 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %7, align 8
  %9 = tail call fastcc i32 @_ZL26ssl_cert_cache_chain_certsPN4bssl4CERTE(%"struct.bssl::CERT"* %8)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %6
  store %struct.stack_st_X509* null, %struct.stack_st_X509** %1, align 8
  br label %20

12:                                               ; preds = %6
  %13 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %14 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %13, i64 0, i32 6, i32 0, i32 0, i32 0
  %15 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %14, align 8
  %16 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %15, i64 0, i32 2
  %17 = bitcast %struct.stack_st_X509** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %struct.stack_st_X509** %1 to i64*
  store i64 %18, i64* %19, align 8
  br label %20

20:                                               ; preds = %2, %12, %11
  %21 = phi i32 [ 1, %12 ], [ 0, %11 ], [ 0, %2 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ssl_session_st* @d2i_SSL_SESSION_bio(%struct.bio_st*, %struct.ssl_session_st**) local_unnamed_addr #0 {
  %3 = alloca %struct.cbs_st, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %7 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  store i64 -6148914691236517206, i64* %5, align 8
  %8 = call i32 @BIO_read_asn1(%struct.bio_st* %0, i8** nonnull %4, i64* nonnull %5, i64 1048576) #9
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %30, label %10

10:                                               ; preds = %2
  %11 = load i8*, i8** %4, align 8
  %12 = load i64, i64* %5, align 8
  %13 = icmp slt i64 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 1017) #9
  br label %26

15:                                               ; preds = %10
  %16 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #9
  call void @CBS_init(%struct.cbs_st* nonnull %3, i8* %11, i64 %12) #9
  %17 = call %struct.ssl_session_st* @_ZN4bssl17SSL_SESSION_parseEP6cbs_stPKNS_15SSL_X509_METHODEP21crypto_buffer_pool_st(%struct.cbs_st* nonnull %3, %"struct.bssl::SSL_X509_METHOD"* bitcast ({ i1 (%struct.stack_st_CRYPTO_BUFFER*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*, %"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, i1 (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %struct.ssl_session_st*)*, void (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %"struct.bssl::SSL_HANDSHAKE"*, i8*)*, void (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)* }* @_ZN4bssl22ssl_crypto_x509_methodE to %"struct.bssl::SSL_X509_METHOD"*), %struct.crypto_buffer_pool_st* null) #9
  %18 = icmp eq %struct.ssl_session_st* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %15
  %20 = icmp eq %struct.ssl_session_st** %1, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %19
  %22 = load %struct.ssl_session_st*, %struct.ssl_session_st** %1, align 8
  call void @SSL_SESSION_free(%struct.ssl_session_st* %22) #9
  store %struct.ssl_session_st* %17, %struct.ssl_session_st** %1, align 8
  br label %23

23:                                               ; preds = %21, %19
  %24 = call i8* @CBS_data(%struct.cbs_st* nonnull %3) #9
  br label %25

25:                                               ; preds = %23, %15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  br label %26

26:                                               ; preds = %14, %25
  %27 = phi %struct.ssl_session_st* [ null, %14 ], [ %17, %25 ]
  %28 = icmp eq i8* %11, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %26
  call void @OPENSSL_free(i8* nonnull %11) #9
  br label %30

30:                                               ; preds = %29, %26, %2
  %31 = phi %struct.ssl_session_st* [ null, %2 ], [ %27, %26 ], [ %27, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret %struct.ssl_session_st* %31
}

declare i32 @BIO_read_asn1(%struct.bio_st*, i8**, i64*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ssl_session_st* @d2i_SSL_SESSION(%struct.ssl_session_st**, i8** nocapture, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = icmp slt i64 %2, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 1017) #9
  br label %20

7:                                                ; preds = %3
  %8 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  %9 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %1, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %4, i8* %10, i64 %2) #9
  %11 = call %struct.ssl_session_st* @_ZN4bssl17SSL_SESSION_parseEP6cbs_stPKNS_15SSL_X509_METHODEP21crypto_buffer_pool_st(%struct.cbs_st* nonnull %4, %"struct.bssl::SSL_X509_METHOD"* bitcast ({ i1 (%struct.stack_st_CRYPTO_BUFFER*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*, %"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, i1 (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %struct.ssl_session_st*)*, void (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %"struct.bssl::SSL_HANDSHAKE"*, i8*)*, void (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)* }* @_ZN4bssl22ssl_crypto_x509_methodE to %"struct.bssl::SSL_X509_METHOD"*), %struct.crypto_buffer_pool_st* null) #9
  %12 = icmp eq %struct.ssl_session_st* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %7
  %14 = icmp eq %struct.ssl_session_st** %0, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = load %struct.ssl_session_st*, %struct.ssl_session_st** %0, align 8
  call void @SSL_SESSION_free(%struct.ssl_session_st* %16) #9
  store %struct.ssl_session_st* %11, %struct.ssl_session_st** %0, align 8
  br label %17

17:                                               ; preds = %13, %15
  %18 = call i8* @CBS_data(%struct.cbs_st* nonnull %4) #9
  store i8* %18, i8** %1, align 8
  br label %19

19:                                               ; preds = %7, %17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  br label %20

20:                                               ; preds = %19, %6
  %21 = phi %struct.ssl_session_st* [ null, %6 ], [ %11, %19 ]
  ret %struct.ssl_session_st* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_SSL_SESSION_bio(%struct.bio_st*, %struct.ssl_session_st*) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  store i64 -6148914691236517206, i64* %4, align 8
  %7 = call i32 @SSL_SESSION_to_bytes(%struct.ssl_session_st* %1, i8** nonnull %3, i64* nonnull %4) #9
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = load i8*, i8** %3, align 8
  %11 = load i64, i64* %4, align 8
  %12 = call i32 @BIO_write_all(%struct.bio_st* %0, i8* %10, i64 %11) #9
  %13 = icmp eq i8* %10, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %9
  call void @OPENSSL_free(i8* nonnull %10) #9
  br label %15

15:                                               ; preds = %14, %9, %2
  %16 = phi i32 [ 0, %2 ], [ %12, %9 ], [ %12, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret i32 %16
}

declare i32 @SSL_SESSION_to_bytes(%struct.ssl_session_st*, i8**, i64*) local_unnamed_addr #2

declare i32 @BIO_write_all(%struct.bio_st*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ssl_session_st* @PEM_read_bio_SSL_SESSION(%struct.bio_st*, %struct.ssl_session_st**, i32 (i8*, i32, i32, i8*)*, i8*) local_unnamed_addr #0 {
  %5 = bitcast %struct.ssl_session_st** %1 to i8**
  %6 = tail call i8* @PEM_ASN1_read_bio(i8* (i8**, i8**, i64)* nonnull @_ZL28pem_read_bio_SSL_SESSION_d2iPPvPPKhl, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), %struct.bio_st* %0, i8** %5, i32 (i8*, i32, i32, i8*)* %2, i8* %3) #9
  %7 = bitcast i8* %6 to %struct.ssl_session_st*
  ret %struct.ssl_session_st* %7
}

declare i8* @PEM_ASN1_read_bio(i8* (i8**, i8**, i64)*, i8*, %struct.bio_st*, i8**, i32 (i8*, i32, i32, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i8* @_ZL28pem_read_bio_SSL_SESSION_d2iPPvPPKhl(i8**, i8** nocapture, i64) #0 {
  %4 = bitcast i8** %0 to %struct.ssl_session_st**
  %5 = tail call %struct.ssl_session_st* @d2i_SSL_SESSION(%struct.ssl_session_st** %4, i8** %1, i64 %2)
  %6 = bitcast %struct.ssl_session_st* %5 to i8*
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ssl_session_st* @PEM_read_SSL_SESSION(%struct._IO_FILE*, %struct.ssl_session_st**, i32 (i8*, i32, i32, i8*)*, i8*) local_unnamed_addr #0 {
  %5 = bitcast %struct.ssl_session_st** %1 to i8**
  %6 = tail call i8* @PEM_ASN1_read(i8* (i8**, i8**, i64)* nonnull @_ZL24pem_read_SSL_SESSION_d2iPPvPPKhl, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), %struct._IO_FILE* %0, i8** %5, i32 (i8*, i32, i32, i8*)* %2, i8* %3) #9
  %7 = bitcast i8* %6 to %struct.ssl_session_st*
  ret %struct.ssl_session_st* %7
}

declare i8* @PEM_ASN1_read(i8* (i8**, i8**, i64)*, i8*, %struct._IO_FILE*, i8**, i32 (i8*, i32, i32, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i8* @_ZL24pem_read_SSL_SESSION_d2iPPvPPKhl(i8**, i8** nocapture, i64) #0 {
  %4 = bitcast i8** %0 to %struct.ssl_session_st**
  %5 = tail call %struct.ssl_session_st* @d2i_SSL_SESSION(%struct.ssl_session_st** %4, i8** %1, i64 %2)
  %6 = bitcast %struct.ssl_session_st* %5 to i8*
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @PEM_write_bio_SSL_SESSION(%struct.bio_st*, %struct.ssl_session_st*) local_unnamed_addr #0 {
  %3 = bitcast %struct.ssl_session_st* %1 to i8*
  %4 = tail call i32 @PEM_ASN1_write_bio(i32 (i8*, i8**)* nonnull @_ZL29pem_write_bio_SSL_SESSION_i2dPKvPPh, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), %struct.bio_st* %0, i8* %3, %struct.evp_cipher_st* null, i8* null, i32 0, i32 (i8*, i32, i32, i8*)* null, i8* null) #9
  ret i32 %4
}

declare i32 @PEM_ASN1_write_bio(i32 (i8*, i8**)*, i8*, %struct.bio_st*, i8*, %struct.evp_cipher_st*, i8*, i32, i32 (i8*, i32, i32, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL29pem_write_bio_SSL_SESSION_i2dPKvPPh(i8*, i8**) #0 {
  %3 = bitcast i8* %0 to %struct.ssl_session_st*
  %4 = tail call i32 @i2d_SSL_SESSION(%struct.ssl_session_st* %3, i8** %1) #9
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @PEM_write_SSL_SESSION(%struct._IO_FILE*, %struct.ssl_session_st*) local_unnamed_addr #0 {
  %3 = bitcast %struct.ssl_session_st* %1 to i8*
  %4 = tail call i32 @PEM_ASN1_write(i32 (i8*, i8**)* nonnull @_ZL25pem_write_SSL_SESSION_i2dPKvPPh, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), %struct._IO_FILE* %0, i8* %3, %struct.evp_cipher_st* null, i8* null, i32 0, i32 (i8*, i32, i32, i8*)* null, i8* null) #9
  ret i32 %4
}

declare i32 @PEM_ASN1_write(i32 (i8*, i8**)*, i8*, %struct._IO_FILE*, i8*, %struct.evp_cipher_st*, i8*, i32, i32 (i8*, i32, i32, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL25pem_write_SSL_SESSION_i2dPKvPPh(i8*, i8**) #0 {
  %3 = bitcast i8* %0 to %struct.ssl_session_st*
  %4 = tail call i32 @i2d_SSL_SESSION(%struct.ssl_session_st* %3, i8** %1) #9
  ret i32 %4
}

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

declare %struct.ssl_session_st* @_ZN4bssl17SSL_SESSION_parseEP6cbs_stPKNS_15SSL_X509_METHODEP21crypto_buffer_pool_st(%struct.cbs_st*, %"struct.bssl::SSL_X509_METHOD"*, %struct.crypto_buffer_pool_st*) local_unnamed_addr #2

declare void @SSL_SESSION_free(%struct.ssl_session_st*) local_unnamed_addr #2

declare i8* @CBS_data(%struct.cbs_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_X509_NAME* @SSL_dup_CA_list(%struct.stack_st_X509_NAME*) local_unnamed_addr #0 {
  %2 = bitcast %struct.stack_st_X509_NAME* %0 to %struct.stack_st*
  %3 = tail call %struct.stack_st* @sk_deep_copy(%struct.stack_st* %2, i8* (i8* (i8*)*, i8*)* nonnull @sk_X509_NAME_call_copy_func, i8* (i8*)* bitcast (%struct.X509_name_st* (%struct.X509_name_st*)* @X509_NAME_dup to i8* (i8*)*), void (void (i8*)*, i8*)* nonnull @sk_X509_NAME_call_free_func, void (i8*)* bitcast (void (%struct.X509_name_st*)* @X509_NAME_free to void (i8*)*)) #9
  %4 = bitcast %struct.stack_st* %3 to %struct.stack_st_X509_NAME*
  ret %struct.stack_st_X509_NAME* %4
}

declare %struct.X509_name_st* @X509_NAME_dup(%struct.X509_name_st*) #2

declare void @X509_NAME_free(%struct.X509_name_st*) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_set_client_CA_list(%struct.ssl_st* nocapture readonly, %struct.stack_st_X509_NAME*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %7, align 8
  %9 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %8, i64 0, i32 1
  %10 = load %"struct.bssl::SSL_X509_METHOD"*, %"struct.bssl::SSL_X509_METHOD"** %9, align 8
  %11 = getelementptr inbounds %"struct.bssl::SSL_X509_METHOD", %"struct.bssl::SSL_X509_METHOD"* %10, i64 0, i32 13
  %12 = load void (%"struct.bssl::SSL_CONFIG"*)*, void (%"struct.bssl::SSL_CONFIG"*)** %11, align 8
  tail call void %12(%"struct.bssl::SSL_CONFIG"* nonnull %4) #9
  %13 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %14 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %13, i64 0, i32 12
  %15 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %7, align 8
  %16 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %15, i64 0, i32 72
  %17 = load %struct.crypto_buffer_pool_st*, %struct.crypto_buffer_pool_st** %16, align 8
  tail call fastcc void @_ZL18set_client_CA_listPNSt3__110unique_ptrI22stack_st_CRYPTO_BUFFERN4bssl8internal7DeleterIS1_EEEEPK18stack_st_X509_NAMEP21crypto_buffer_pool_st(%"class.std::__1::unique_ptr.1"* %14, %struct.stack_st_X509_NAME* %1, %struct.crypto_buffer_pool_st* %17)
  %18 = bitcast %struct.stack_st_X509_NAME* %1 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* %18, void (void (i8*)*, i8*)* nonnull @sk_X509_NAME_call_free_func, void (i8*)* bitcast (void (%struct.X509_name_st*)* @X509_NAME_free to void (i8*)*)) #9
  br label %19

19:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL18set_client_CA_listPNSt3__110unique_ptrI22stack_st_CRYPTO_BUFFERN4bssl8internal7DeleterIS1_EEEEPK18stack_st_X509_NAMEP21crypto_buffer_pool_st(%"class.std::__1::unique_ptr.1"* nocapture, %struct.stack_st_X509_NAME*, %struct.crypto_buffer_pool_st*) unnamed_addr #0 {
  %4 = alloca i8*, align 8
  %5 = tail call %struct.stack_st* @sk_new_null() #9
  %6 = ptrtoint %struct.stack_st* %5 to i64
  %7 = icmp eq %struct.stack_st* %5, null
  br i1 %7, label %42, label %8

8:                                                ; preds = %3
  %9 = bitcast %struct.stack_st_X509_NAME* %1 to %struct.stack_st*
  %10 = tail call i64 @sk_num(%struct.stack_st* %9) #9
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %34, label %12

12:                                               ; preds = %8
  %13 = bitcast i8** %4 to i8*
  br label %14

14:                                               ; preds = %12, %31
  %15 = phi i64 [ 0, %12 ], [ %32, %31 ]
  %16 = call i8* @sk_value(%struct.stack_st* %9, i64 %15) #9
  %17 = bitcast i8* %16 to %struct.X509_name_st*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  store i8* null, i8** %4, align 8
  %18 = call i32 @i2d_X509_NAME(%struct.X509_name_st* %17, i8** nonnull %4) #9
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %41, label %20

20:                                               ; preds = %14
  %21 = load i8*, i8** %4, align 8
  %22 = sext i32 %18 to i64
  %23 = call %struct.crypto_buffer_st* @CRYPTO_BUFFER_new(i8* %21, i64 %22, %struct.crypto_buffer_pool_st* %2) #9
  %24 = load i8*, i8** %4, align 8
  call void @OPENSSL_free(i8* %24) #9
  %25 = icmp eq %struct.crypto_buffer_st* %23, null
  br i1 %25, label %41, label %26

26:                                               ; preds = %20
  %27 = bitcast %struct.crypto_buffer_st* %23 to i8*
  %28 = call i64 @sk_push(%struct.stack_st* nonnull %5, i8* nonnull %27) #9
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %23) #9
  br label %41

31:                                               ; preds = %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %32 = add nuw i64 %15, 1
  %33 = icmp eq i64 %32, %10
  br i1 %33, label %34, label %14

34:                                               ; preds = %31, %8
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %35, align 8
  %37 = bitcast %"class.std::__1::unique_ptr.1"* %0 to i64*
  store i64 %6, i64* %37, align 8
  %38 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %36, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = bitcast %struct.stack_st_CRYPTO_BUFFER* %36 to %struct.stack_st*
  call void @sk_pop_free_ex(%struct.stack_st* nonnull %40, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #9
  br label %42

41:                                               ; preds = %14, %20, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  call void @sk_pop_free_ex(%struct.stack_st* nonnull %5, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #9
  br label %42

42:                                               ; preds = %3, %39, %34, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_CTX_set_client_CA_list(%struct.ssl_ctx_st*, %struct.stack_st_X509_NAME*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 1
  %4 = load %"struct.bssl::SSL_X509_METHOD"*, %"struct.bssl::SSL_X509_METHOD"** %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_X509_METHOD", %"struct.bssl::SSL_X509_METHOD"* %4, i64 0, i32 17
  %6 = load void (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)** %5, align 8
  tail call void %6(%struct.ssl_ctx_st* %0) #9
  %7 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 31
  %8 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 72
  %9 = load %struct.crypto_buffer_pool_st*, %struct.crypto_buffer_pool_st** %8, align 8
  tail call fastcc void @_ZL18set_client_CA_listPNSt3__110unique_ptrI22stack_st_CRYPTO_BUFFERN4bssl8internal7DeleterIS1_EEEEPK18stack_st_X509_NAMEP21crypto_buffer_pool_st(%"class.std::__1::unique_ptr.1"* %7, %struct.stack_st_X509_NAME* %1, %struct.crypto_buffer_pool_st* %9)
  %10 = bitcast %struct.stack_st_X509_NAME* %1 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* %10, void (void (i8*)*, i8*)* nonnull @sk_X509_NAME_call_free_func, void (i8*)* bitcast (void (%struct.X509_name_st*)* @X509_NAME_free to void (i8*)*)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_X509_NAME* @SSL_get_client_CA_list(%struct.ssl_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %2, align 8
  %4 = icmp eq %"struct.bssl::SSL_CONFIG"* %3, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 7
  %7 = load i32 (%"struct.bssl::SSL_HANDSHAKE"*)*, i32 (%"struct.bssl::SSL_HANDSHAKE"*)** %6, align 8
  %8 = icmp eq i32 (%"struct.bssl::SSL_HANDSHAKE"*)* %7, null
  br i1 %8, label %25, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %11 = load i8, i8* %10, align 4
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %25

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %16 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %15, align 8
  %17 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %16, i64 0, i32 34, i32 0, i32 0, i32 0
  %18 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %17, align 8
  %19 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %18, null
  br i1 %19, label %40, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %18, i64 0, i32 35, i32 0, i32 0, i32 0
  %22 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %21, align 8
  %23 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %18, i64 0, i32 36
  %24 = tail call fastcc %struct.stack_st_X509_NAME* @_ZL20buffer_names_to_x509PK22stack_st_CRYPTO_BUFFERPP18stack_st_X509_NAME(%struct.stack_st_CRYPTO_BUFFER* %22, %struct.stack_st_X509_NAME** %23)
  br label %40

25:                                               ; preds = %9, %5
  %26 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %3, i64 0, i32 12, i32 0, i32 0, i32 0
  %27 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %26, align 8
  %28 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %3, i64 0, i32 13
  %31 = tail call fastcc %struct.stack_st_X509_NAME* @_ZL20buffer_names_to_x509PK22stack_st_CRYPTO_BUFFERPP18stack_st_X509_NAME(%struct.stack_st_CRYPTO_BUFFER* nonnull %27, %struct.stack_st_X509_NAME** %30)
  br label %40

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %34 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %33, align 8
  %35 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %34, i64 0, i32 2
  tail call void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st* %35) #9
  %36 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %34, i64 0, i32 31, i32 0, i32 0, i32 0
  %37 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %36, align 8
  %38 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %34, i64 0, i32 32
  %39 = tail call fastcc %struct.stack_st_X509_NAME* @_ZL20buffer_names_to_x509PK22stack_st_CRYPTO_BUFFERPP18stack_st_X509_NAME(%struct.stack_st_CRYPTO_BUFFER* %37, %struct.stack_st_X509_NAME** %38) #9
  tail call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %35) #9
  br label %40

40:                                               ; preds = %14, %1, %32, %29, %20
  %41 = phi %struct.stack_st_X509_NAME* [ %31, %29 ], [ %39, %32 ], [ %24, %20 ], [ null, %1 ], [ null, %14 ]
  ret %struct.stack_st_X509_NAME* %41
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.stack_st_X509_NAME* @_ZL20buffer_names_to_x509PK22stack_st_CRYPTO_BUFFERPP18stack_st_X509_NAME(%struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_X509_NAME** nocapture) unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %0, null
  br i1 %4, label %45, label %5

5:                                                ; preds = %2
  %6 = load %struct.stack_st_X509_NAME*, %struct.stack_st_X509_NAME** %1, align 8
  %7 = icmp eq %struct.stack_st_X509_NAME* %6, null
  br i1 %7, label %8, label %45

8:                                                ; preds = %5
  %9 = tail call %struct.stack_st* @sk_new_null() #9
  %10 = bitcast %struct.stack_st* %9 to %struct.stack_st_X509_NAME*
  %11 = icmp eq %struct.stack_st* %9, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 1098) #9
  br label %45

13:                                               ; preds = %8
  %14 = bitcast %struct.stack_st_CRYPTO_BUFFER* %0 to %struct.stack_st*
  %15 = tail call i64 @sk_num(%struct.stack_st* nonnull %14) #9
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %40, label %17

17:                                               ; preds = %13
  %18 = bitcast i8** %3 to i8*
  br label %19

19:                                               ; preds = %17, %37
  %20 = phi i64 [ 0, %17 ], [ %38, %37 ]
  %21 = call i8* @sk_value(%struct.stack_st* nonnull %14, i64 %20) #9
  %22 = bitcast i8* %21 to %struct.crypto_buffer_st*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %23 = call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %22) #9
  store i8* %23, i8** %3, align 8
  %24 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %22) #9
  %25 = call %struct.X509_name_st* @d2i_X509_NAME(%struct.X509_name_st** null, i8** nonnull %3, i64 %24) #9
  %26 = icmp eq %struct.X509_name_st* %25, null
  br i1 %26, label %43, label %27

27:                                               ; preds = %19
  %28 = load i8*, i8** %3, align 8
  %29 = call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %22) #9
  %30 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %22) #9
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  %32 = icmp eq i8* %28, %31
  br i1 %32, label %33, label %42

33:                                               ; preds = %27
  %34 = bitcast %struct.X509_name_st* %25 to i8*
  %35 = call i64 @sk_push(%struct.stack_st* nonnull %9, i8* nonnull %34) #9
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %38 = add nuw i64 %20, 1
  %39 = icmp eq i64 %38, %15
  br i1 %39, label %40, label %19

40:                                               ; preds = %37, %13
  %41 = bitcast %struct.stack_st_X509_NAME** %1 to %struct.stack_st**
  store %struct.stack_st* %9, %struct.stack_st** %41, align 8
  br label %45

42:                                               ; preds = %33, %27
  call void @X509_NAME_free(%struct.X509_name_st* nonnull %25) #9
  br label %43

43:                                               ; preds = %19, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  br i1 %11, label %45, label %44

44:                                               ; preds = %43
  call void @sk_pop_free_ex(%struct.stack_st* nonnull %9, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI18stack_st_X509_NAMEvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #9
  br label %45

45:                                               ; preds = %12, %44, %43, %40, %5, %2
  %46 = phi %struct.stack_st_X509_NAME* [ null, %2 ], [ %6, %5 ], [ %10, %40 ], [ null, %43 ], [ null, %44 ], [ null, %12 ]
  ret %struct.stack_st_X509_NAME* %46
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_X509_NAME* @SSL_CTX_get_client_CA_list(%struct.ssl_ctx_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 2
  tail call void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st* %2) #9
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 31, i32 0, i32 0, i32 0
  %4 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %3, align 8
  %5 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 32
  %6 = tail call fastcc %struct.stack_st_X509_NAME* @_ZL20buffer_names_to_x509PK22stack_st_CRYPTO_BUFFERPP18stack_st_X509_NAME(%struct.stack_st_CRYPTO_BUFFER* %4, %struct.stack_st_X509_NAME** %5)
  tail call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %2) #9
  ret %struct.stack_st_X509_NAME* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_add_client_CA(%struct.ssl_st* nocapture readonly, %struct.x509_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 12
  %8 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %8, align 8
  %10 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %9, i64 0, i32 72
  %11 = load %struct.crypto_buffer_pool_st*, %struct.crypto_buffer_pool_st** %10, align 8
  %12 = tail call fastcc i32 @_ZL13add_client_CAPNSt3__110unique_ptrI22stack_st_CRYPTO_BUFFERN4bssl8internal7DeleterIS1_EEEEP7x509_stP21crypto_buffer_pool_st(%"class.std::__1::unique_ptr.1"* %7, %struct.x509_st* %1, %struct.crypto_buffer_pool_st* %11)
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %6
  %15 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %16 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %15, i64 0, i32 13
  %17 = bitcast %struct.stack_st_X509_NAME** %16 to %struct.stack_st**
  %18 = load %struct.stack_st*, %struct.stack_st** %17, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %18, void (void (i8*)*, i8*)* nonnull @sk_X509_NAME_call_free_func, void (i8*)* bitcast (void (%struct.X509_name_st*)* @X509_NAME_free to void (i8*)*)) #9
  store %struct.stack_st_X509_NAME* null, %struct.stack_st_X509_NAME** %16, align 8
  br label %19

19:                                               ; preds = %2, %6, %14
  %20 = phi i32 [ 1, %14 ], [ 0, %2 ], [ 0, %6 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL13add_client_CAPNSt3__110unique_ptrI22stack_st_CRYPTO_BUFFERN4bssl8internal7DeleterIS1_EEEEP7x509_stP21crypto_buffer_pool_st(%"class.std::__1::unique_ptr.1"* nocapture, %struct.x509_st*, %struct.crypto_buffer_pool_st*) unnamed_addr #0 {
  %4 = alloca i8*, align 8
  %5 = icmp eq %struct.x509_st* %1, null
  br i1 %5, label %53, label %6

6:                                                ; preds = %3
  %7 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  store i8* null, i8** %4, align 8
  %8 = tail call %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st* nonnull %1) #9
  %9 = call i32 @i2d_X509_NAME(%struct.X509_name_st* %8, i8** nonnull %4) #9
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %51, label %11

11:                                               ; preds = %6
  %12 = load i8*, i8** %4, align 8
  %13 = sext i32 %9 to i64
  %14 = call %struct.crypto_buffer_st* @CRYPTO_BUFFER_new(i8* %12, i64 %13, %struct.crypto_buffer_pool_st* %2) #9
  %15 = load i8*, i8** %4, align 8
  call void @OPENSSL_free(i8* %15) #9
  %16 = icmp eq %struct.crypto_buffer_st* %14, null
  br i1 %16, label %51, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %0, i64 0, i32 0, i32 0, i32 0
  %19 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %18, align 8
  %20 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = bitcast %struct.stack_st_CRYPTO_BUFFER* %19 to %struct.stack_st*
  br label %37

23:                                               ; preds = %17
  %24 = call %struct.stack_st* @sk_new_null() #9
  %25 = bitcast %struct.stack_st* %24 to %struct.stack_st_CRYPTO_BUFFER*
  %26 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %18, align 8
  %27 = bitcast %"class.std::__1::unique_ptr.1"* %0 to %struct.stack_st**
  store %struct.stack_st* %24, %struct.stack_st** %27, align 8
  %28 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %26, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %23
  %30 = bitcast %struct.stack_st_CRYPTO_BUFFER* %26 to %struct.stack_st*
  call void @sk_pop_free_ex(%struct.stack_st* nonnull %30, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #9
  %31 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %18, align 8
  %32 = bitcast %struct.stack_st_CRYPTO_BUFFER* %31 to %struct.stack_st*
  br label %33

33:                                               ; preds = %23, %29
  %34 = phi %struct.stack_st* [ %24, %23 ], [ %32, %29 ]
  %35 = phi %struct.stack_st_CRYPTO_BUFFER* [ %25, %23 ], [ %31, %29 ]
  %36 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %21, %33
  %38 = phi %struct.stack_st* [ %34, %33 ], [ %22, %21 ]
  %39 = phi i32 [ 1, %33 ], [ 0, %21 ]
  %40 = bitcast %struct.crypto_buffer_st* %14 to i8*
  %41 = call i64 @sk_push(%struct.stack_st* %38, i8* nonnull %40) #9
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %51

43:                                               ; preds = %37
  call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %14) #9
  %44 = icmp eq i32 %39, 0
  br i1 %44, label %51, label %45

45:                                               ; preds = %43
  %46 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %18, align 8
  store %struct.stack_st_CRYPTO_BUFFER* null, %struct.stack_st_CRYPTO_BUFFER** %18, align 8
  %47 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %45
  %49 = bitcast %struct.stack_st_CRYPTO_BUFFER* %46 to %struct.stack_st*
  call void @sk_pop_free_ex(%struct.stack_st* nonnull %49, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #9
  br label %51

50:                                               ; preds = %33
  call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %14) #9
  br label %51

51:                                               ; preds = %11, %37, %48, %45, %43, %50, %6
  %52 = phi i32 [ 0, %6 ], [ 0, %50 ], [ 0, %48 ], [ 0, %45 ], [ 0, %43 ], [ 1, %37 ], [ 0, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  br label %53

53:                                               ; preds = %3, %51
  %54 = phi i32 [ %52, %51 ], [ 0, %3 ]
  ret i32 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_add_client_CA(%struct.ssl_ctx_st* nocapture, %struct.x509_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 31
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 72
  %5 = load %struct.crypto_buffer_pool_st*, %struct.crypto_buffer_pool_st** %4, align 8
  %6 = tail call fastcc i32 @_ZL13add_client_CAPNSt3__110unique_ptrI22stack_st_CRYPTO_BUFFERN4bssl8internal7DeleterIS1_EEEEP7x509_stP21crypto_buffer_pool_st(%"class.std::__1::unique_ptr.1"* %3, %struct.x509_st* %1, %struct.crypto_buffer_pool_st* %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 32
  %10 = bitcast %struct.stack_st_X509_NAME** %9 to %struct.stack_st**
  %11 = load %struct.stack_st*, %struct.stack_st** %10, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %11, void (void (i8*)*, i8*)* nonnull @sk_X509_NAME_call_free_func, void (i8*)* bitcast (void (%struct.X509_name_st*)* @X509_NAME_free to void (i8*)*)) #9
  store %struct.stack_st_X509_NAME* null, %struct.stack_st_X509_NAME** %9, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i32 [ 1, %8 ], [ 0, %2 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_CTX_set_client_cert_cb(%struct.ssl_ctx_st*, i32 (%struct.ssl_st*, %struct.x509_st**, %struct.evp_pkey_st**)*) local_unnamed_addr #0 {
  tail call void @SSL_CTX_set_cert_cb(%struct.ssl_ctx_st* %0, i32 (%struct.ssl_st*, i8*)* nonnull @_ZL17do_client_cert_cbP6ssl_stPv, i8* null) #9
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 27
  store i32 (%struct.ssl_st*, %struct.x509_st**, %struct.evp_pkey_st**)* %1, i32 (%struct.ssl_st*, %struct.x509_st**, %struct.evp_pkey_st**)** %3, align 8
  ret void
}

declare void @SSL_CTX_set_cert_cb(%struct.ssl_ctx_st*, i32 (%struct.ssl_st*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL17do_client_cert_cbP6ssl_stPv(%struct.ssl_st*, i8* nocapture readnone) #0 {
  %3 = alloca %struct.x509_st*, align 8
  %4 = alloca %struct.evp_pkey_st*, align 8
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %5, align 8
  %7 = icmp eq %"struct.bssl::SSL_CONFIG"* %6, null
  br i1 %7, label %51, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %10 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %9, align 8
  %11 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %10, i64 0, i32 34, i32 0, i32 0, i32 0
  %12 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %11, align 8
  %13 = tail call zeroext i1 @_ZN4bssl19ssl_has_certificateEPKNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"* %12) #9
  br i1 %13, label %51, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %15, align 8
  %17 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %16, i64 0, i32 27
  %18 = load i32 (%struct.ssl_st*, %struct.x509_st**, %struct.evp_pkey_st**)*, i32 (%struct.ssl_st*, %struct.x509_st**, %struct.evp_pkey_st**)** %17, align 8
  %19 = icmp eq i32 (%struct.ssl_st*, %struct.x509_st**, %struct.evp_pkey_st**)* %18, null
  br i1 %19, label %51, label %20

20:                                               ; preds = %14
  %21 = bitcast %struct.x509_st** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  store %struct.x509_st* null, %struct.x509_st** %3, align 8
  %22 = bitcast %struct.evp_pkey_st** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %4, align 8
  %23 = call i32 %18(%struct.ssl_st* %0, %struct.x509_st** nonnull %3, %struct.evp_pkey_st** nonnull %4) #9
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %49, label %25

25:                                               ; preds = %20
  %26 = load %struct.x509_st*, %struct.x509_st** %3, align 8
  %27 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %4, align 8
  %28 = icmp eq i32 %23, 0
  br i1 %28, label %41, label %29

29:                                               ; preds = %25
  %30 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %5, align 8
  %31 = icmp eq %"struct.bssl::SSL_CONFIG"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %30, i64 0, i32 6, i32 0, i32 0, i32 0
  %34 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %33, align 8
  %35 = call fastcc i32 @_ZL19ssl_use_certificatePN4bssl4CERTEP7x509_st(%"struct.bssl::CERT"* %34, %struct.x509_st* %26) #9
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %32
  %38 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %4, align 8
  %39 = call i32 @SSL_use_PrivateKey(%struct.ssl_st* %0, %struct.evp_pkey_st* %38) #9
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %37, %25
  br label %42

42:                                               ; preds = %29, %32, %37, %41
  %43 = phi i32 [ 1, %41 ], [ 0, %37 ], [ 0, %32 ], [ 0, %29 ]
  %44 = icmp eq %struct.evp_pkey_st* %27, null
  br i1 %44, label %46, label %45

45:                                               ; preds = %42
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %27) #9
  br label %46

46:                                               ; preds = %42, %45
  %47 = icmp eq %struct.x509_st* %26, null
  br i1 %47, label %49, label %48

48:                                               ; preds = %46
  call void @X509_free(%struct.x509_st* nonnull %26) #9
  br label %49

49:                                               ; preds = %48, %46, %20
  %50 = phi i32 [ -1, %20 ], [ %43, %46 ], [ %43, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %51

51:                                               ; preds = %2, %8, %14, %49
  %52 = phi i32 [ %50, %49 ], [ -1, %2 ], [ 1, %14 ], [ 1, %8 ]
  ret i32 %52
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_get_ex_data_X509_STORE_CTX_idx() local_unnamed_addr #7 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_set0_verify_cert_store(%struct.ssl_ctx_st* nocapture readonly, %struct.x509_store_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %4, i64 0, i32 10
  %6 = load %struct.x509_store_st*, %struct.x509_store_st** %5, align 8
  tail call void @X509_STORE_free(%struct.x509_store_st* %6) #9
  store %struct.x509_store_st* %1, %struct.x509_store_st** %5, align 8
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_set1_verify_cert_store(%struct.ssl_ctx_st* nocapture readonly, %struct.x509_store_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %4, i64 0, i32 10
  %6 = load %struct.x509_store_st*, %struct.x509_store_st** %5, align 8
  tail call void @X509_STORE_free(%struct.x509_store_st* %6) #9
  store %struct.x509_store_st* %1, %struct.x509_store_st** %5, align 8
  %7 = icmp eq %struct.x509_store_st* %1, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = tail call i32 @X509_STORE_up_ref(%struct.x509_store_st* nonnull %1) #9
  br label %10

10:                                               ; preds = %2, %8
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set0_verify_cert_store(%struct.ssl_st* nocapture readonly, %struct.x509_store_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 6, i32 0, i32 0, i32 0
  %8 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %7, align 8
  %9 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %8, i64 0, i32 10
  %10 = load %struct.x509_store_st*, %struct.x509_store_st** %9, align 8
  tail call void @X509_STORE_free(%struct.x509_store_st* %10) #9
  store %struct.x509_store_st* %1, %struct.x509_store_st** %9, align 8
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi i32 [ 1, %6 ], [ 0, %2 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set1_verify_cert_store(%struct.ssl_st* nocapture readonly, %struct.x509_store_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 6, i32 0, i32 0, i32 0
  %8 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %7, align 8
  %9 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %8, i64 0, i32 10
  %10 = load %struct.x509_store_st*, %struct.x509_store_st** %9, align 8
  tail call void @X509_STORE_free(%struct.x509_store_st* %10) #9
  store %struct.x509_store_st* %1, %struct.x509_store_st** %9, align 8
  %11 = icmp eq %struct.x509_store_st* %1, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %6
  %13 = tail call i32 @X509_STORE_up_ref(%struct.x509_store_st* nonnull %1) #9
  br label %14

14:                                               ; preds = %6, %2, %12
  %15 = phi i32 [ 0, %2 ], [ 1, %6 ], [ 1, %12 ]
  ret i32 %15
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_alert_from_verify_result(i64) local_unnamed_addr #7 {
  %2 = add i64 %0, -1
  %3 = icmp ult i64 %2, 66
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = getelementptr inbounds [66 x i32], [66 x i32]* @switch.table.SSL_alert_from_verify_result, i64 0, i64 %2
  %6 = load i32, i32* %5, align 4
  ret i32 %6

7:                                                ; preds = %1
  ret i32 46
}

declare i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st*) local_unnamed_addr #2

declare %struct.X509_name_st* @d2i_X509_NAME(%struct.X509_name_st**, i8**, i64) local_unnamed_addr #2

declare i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st*) local_unnamed_addr #2

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #2

declare void @X509_free(%struct.x509_st*) #2

declare i32 @X509_STORE_up_ref(%struct.x509_store_st*) local_unnamed_addr #2

declare void @sk_pop_free_ex(%struct.stack_st*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @sk_X509_call_free_func(void (i8*)*, i8*) #8 comdat {
  %3 = bitcast void (i8*)* %0 to void (%struct.x509_st*)*
  %4 = bitcast i8* %1 to %struct.x509_st*
  tail call void %3(%struct.x509_st* %4) #9
  ret void
}

declare %struct.x509_st* @X509_parse_from_buffer(%struct.crypto_buffer_st*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN4bssl8internal11DeleterImplI13stack_st_X509vE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_(void (i8*)*, i8*) #8 comdat align 2 {
  %3 = bitcast i8* %1 to %struct.x509_st*
  tail call void @X509_free(%struct.x509_st* %3) #9
  ret void
}

declare %struct.stack_st* @sk_new_null() local_unnamed_addr #2

declare i64 @sk_push(%struct.stack_st*, i8*) local_unnamed_addr #2

declare %struct.stack_st_X509* @X509_chain_up_ref(%struct.stack_st_X509*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @X509_STORE_CTX_init(%struct.x509_store_ctx_st*, %struct.x509_store_st*, %struct.x509_st*, %struct.stack_st_X509*) local_unnamed_addr #2

declare i32 @X509_STORE_CTX_set_ex_data(%struct.x509_store_ctx_st*, i32, i8*) local_unnamed_addr #2

declare i32 @X509_STORE_CTX_set_default(%struct.x509_store_ctx_st*, i8*) local_unnamed_addr #2

declare %struct.X509_VERIFY_PARAM_st* @X509_STORE_CTX_get0_param(%struct.x509_store_ctx_st*) local_unnamed_addr #2

declare void @X509_STORE_CTX_set_verify_cb(%struct.x509_store_ctx_st*, i32 (i32, %struct.x509_store_ctx_st*)*) local_unnamed_addr #2

declare i32 @X509_verify_cert(%struct.x509_store_ctx_st*) local_unnamed_addr #2

declare void @ERR_clear_error() local_unnamed_addr #2

declare void @X509_STORE_CTX_zero(%struct.x509_store_ctx_st*) local_unnamed_addr #2

declare void @X509_STORE_CTX_cleanup(%struct.x509_store_ctx_st*) local_unnamed_addr #2

declare %struct.X509_VERIFY_PARAM_st* @X509_VERIFY_PARAM_new() local_unnamed_addr #2

declare i32 @X509_VERIFY_PARAM_inherit(%struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st*) local_unnamed_addr #2

declare void @X509_VERIFY_PARAM_free(%struct.X509_VERIFY_PARAM_st*) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl19ssl_has_certificateEPKNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4bsslL18ssl_cert_set_chainEPNS_4CERTEP13stack_st_X509(%"struct.bssl::CERT"* nocapture, %struct.stack_st_X509*) unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %5, align 8
  %7 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %6, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = tail call %struct.stack_st* @sk_new_null() #9
  %10 = ptrtoint %struct.stack_st* %9 to i64
  %11 = icmp eq %struct.stack_st* %9, null
  br i1 %11, label %74, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.std::__1::unique_ptr.1"* %4 to %struct.stack_st**
  %14 = load %struct.stack_st*, %struct.stack_st** %13, align 8
  %15 = tail call i8* @sk_value(%struct.stack_st* %14, i64 0) #9
  %16 = bitcast i8* %15 to %struct.crypto_buffer_st*
  %17 = icmp eq i8* %15, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %12
  %19 = tail call i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st* nonnull %16) #9
  br label %20

20:                                               ; preds = %12, %18
  %21 = tail call i64 @sk_push(%struct.stack_st* nonnull %9, i8* %15) #9
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %20
  br i1 %17, label %74, label %24

24:                                               ; preds = %23
  tail call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %16) #9
  br label %74

25:                                               ; preds = %2, %20
  %26 = phi i64 [ 0, %2 ], [ %10, %20 ]
  %27 = bitcast %struct.stack_st_X509* %1 to %struct.stack_st*
  %28 = tail call i64 @sk_num(%struct.stack_st* %27) #9
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %67, label %30

30:                                               ; preds = %25
  %31 = bitcast i8** %3 to i8*
  br label %34

32:                                               ; preds = %59
  %33 = icmp eq i64 %65, %28
  br i1 %33, label %67, label %34

34:                                               ; preds = %30, %32
  %35 = phi i64 [ %26, %30 ], [ %49, %32 ]
  %36 = phi i64 [ 0, %30 ], [ %65, %32 ]
  %37 = call i8* @sk_value(%struct.stack_st* %27, i64 %36) #9
  %38 = bitcast i8* %37 to %struct.x509_st*
  %39 = icmp eq i64 %35, 0
  br i1 %39, label %40, label %48

40:                                               ; preds = %34
  %41 = call %struct.stack_st* @sk_new_null() #9
  %42 = icmp eq %struct.stack_st* %41, null
  br i1 %42, label %80, label %43

43:                                               ; preds = %40
  %44 = ptrtoint %struct.stack_st* %41 to i64
  %45 = call i64 @sk_push(%struct.stack_st* nonnull %41, i8* null) #9
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %43
  call void @sk_pop_free_ex(%struct.stack_st* nonnull %41, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #9
  br label %80

48:                                               ; preds = %43, %34
  %49 = phi i64 [ %35, %34 ], [ %44, %43 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  store i8* null, i8** %3, align 8
  %50 = call i32 @i2d_X509(%struct.x509_st* %38, i8** nonnull %3) #9
  %51 = icmp slt i32 %50, 1
  br i1 %51, label %52, label %53

52:                                               ; preds = %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br label %74

53:                                               ; preds = %48
  %54 = load i8*, i8** %3, align 8
  %55 = sext i32 %50 to i64
  %56 = call %struct.crypto_buffer_st* @CRYPTO_BUFFER_new(i8* %54, i64 %55, %struct.crypto_buffer_pool_st* null) #9
  %57 = load i8*, i8** %3, align 8
  call void @OPENSSL_free(i8* %57) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  %58 = icmp eq %struct.crypto_buffer_st* %56, null
  br i1 %58, label %74, label %59

59:                                               ; preds = %53
  %60 = inttoptr i64 %49 to %struct.stack_st_CRYPTO_BUFFER*
  %61 = bitcast %struct.stack_st_CRYPTO_BUFFER* %60 to %struct.stack_st*
  %62 = bitcast %struct.crypto_buffer_st* %56 to i8*
  %63 = call i64 @sk_push(%struct.stack_st* %61, i8* nonnull %62) #9
  %64 = icmp eq i64 %63, 0
  %65 = add nuw i64 %36, 1
  br i1 %64, label %66, label %32

66:                                               ; preds = %59
  call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %56) #9
  br label %74

67:                                               ; preds = %32, %25
  %68 = phi i64 [ %26, %25 ], [ %49, %32 ]
  %69 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %5, align 8
  %70 = bitcast %"class.std::__1::unique_ptr.1"* %4 to i64*
  store i64 %68, i64* %70, align 8
  %71 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %69, null
  br i1 %71, label %80, label %72

72:                                               ; preds = %67
  %73 = bitcast %struct.stack_st_CRYPTO_BUFFER* %69 to %struct.stack_st*
  call void @sk_pop_free_ex(%struct.stack_st* nonnull %73, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #9
  br label %80

74:                                               ; preds = %53, %8, %52, %66, %24, %23
  %75 = phi i64 [ %10, %8 ], [ %10, %23 ], [ %10, %24 ], [ %49, %66 ], [ %49, %52 ], [ %49, %53 ]
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %74
  %78 = inttoptr i64 %75 to %struct.stack_st_CRYPTO_BUFFER*
  %79 = bitcast %struct.stack_st_CRYPTO_BUFFER* %78 to %struct.stack_st*
  call void @sk_pop_free_ex(%struct.stack_st* nonnull %79, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #9
  br label %80

80:                                               ; preds = %40, %47, %72, %67, %74, %77
  %81 = phi i1 [ false, %74 ], [ false, %77 ], [ true, %67 ], [ true, %72 ], [ false, %47 ], [ false, %40 ]
  ret i1 %81
}

declare i8* @sk_shift(%struct.stack_st*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_(void (i8*)*, i8*) #8 comdat align 2 {
  %3 = bitcast i8* %1 to %struct.crypto_buffer_st*
  tail call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* %3) #9
  ret void
}

declare void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st*) local_unnamed_addr #2

declare i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st*) local_unnamed_addr #2

declare i32 @i2d_X509(%struct.x509_st*, i8**) local_unnamed_addr #2

declare %struct.crypto_buffer_st* @CRYPTO_BUFFER_new(i8*, i64, %struct.crypto_buffer_pool_st*) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

declare %struct.x509_store_st* @X509_STORE_new() local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl12ssl_set_certEPNS_4CERTENSt3__110unique_ptrI16crypto_buffer_stNS_8internal7DeleterIS4_EEEE(%"struct.bssl::CERT"*, %struct.crypto_buffer_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL20ssl_cert_append_certPN4bssl4CERTEP7x509_st(%"struct.bssl::CERT"* nocapture, %struct.x509_st*) unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  store i8* null, i8** %3, align 8
  %5 = call i32 @i2d_X509(%struct.x509_st* %1, i8** nonnull %3) #9
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  br label %64

8:                                                ; preds = %2
  %9 = load i8*, i8** %3, align 8
  %10 = sext i32 %5 to i64
  %11 = call %struct.crypto_buffer_st* @CRYPTO_BUFFER_new(i8* %9, i64 %10, %struct.crypto_buffer_pool_st* null) #9
  %12 = load i8*, i8** %3, align 8
  call void @OPENSSL_free(i8* %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  %13 = ptrtoint %struct.crypto_buffer_st* %11 to i64
  %14 = icmp eq %struct.crypto_buffer_st* %11, null
  br i1 %14, label %59, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %17, align 8
  %19 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %15
  %21 = bitcast %struct.stack_st_CRYPTO_BUFFER* %18 to %struct.stack_st*
  %22 = bitcast %struct.crypto_buffer_st* %11 to i8*
  %23 = call i64 @sk_push(%struct.stack_st* nonnull %21, i8* nonnull %22) #9
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %64

25:                                               ; preds = %20
  call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %11) #9
  br label %64

26:                                               ; preds = %15
  %27 = call %struct.stack_st* @sk_new_null() #9
  %28 = icmp eq %struct.stack_st* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %26
  %30 = ptrtoint %struct.stack_st* %27 to i64
  %31 = call i64 @sk_push(%struct.stack_st* nonnull %27, i8* null) #9
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  call void @sk_pop_free_ex(%struct.stack_st* nonnull %27, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #9
  br label %34

34:                                               ; preds = %26, %29, %33
  %35 = phi i64 [ 0, %33 ], [ %30, %29 ], [ 0, %26 ]
  %36 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %17, align 8
  %37 = bitcast %"class.std::__1::unique_ptr.1"* %16 to i64*
  store i64 %35, i64* %37, align 8
  %38 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %36, null
  %39 = inttoptr i64 %35 to %struct.stack_st_CRYPTO_BUFFER*
  br i1 %38, label %43, label %40

40:                                               ; preds = %34
  %41 = bitcast %struct.stack_st_CRYPTO_BUFFER* %36 to %struct.stack_st*
  call void @sk_pop_free_ex(%struct.stack_st* nonnull %41, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #9
  %42 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %17, align 8
  br label %43

43:                                               ; preds = %40, %34
  %44 = phi %struct.stack_st_CRYPTO_BUFFER* [ %42, %40 ], [ %39, %34 ]
  %45 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %44, null
  br i1 %45, label %53, label %46

46:                                               ; preds = %43
  %47 = bitcast %struct.stack_st_CRYPTO_BUFFER* %44 to %struct.stack_st*
  %48 = bitcast %struct.crypto_buffer_st* %11 to i8*
  %49 = call i64 @sk_push(%struct.stack_st* nonnull %47, i8* nonnull %48) #9
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %64

51:                                               ; preds = %46
  call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %11) #9
  %52 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %17, align 8
  br label %53

53:                                               ; preds = %43, %51
  %54 = phi %struct.stack_st_CRYPTO_BUFFER* [ %52, %51 ], [ %44, %43 ]
  %55 = phi i64 [ 0, %51 ], [ %13, %43 ]
  store %struct.stack_st_CRYPTO_BUFFER* null, %struct.stack_st_CRYPTO_BUFFER** %17, align 8
  %56 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %54, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %53
  %58 = bitcast %struct.stack_st_CRYPTO_BUFFER* %54 to %struct.stack_st*
  call void @sk_pop_free_ex(%struct.stack_st* nonnull %58, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #9
  br label %59

59:                                               ; preds = %8, %57, %53
  %60 = phi i64 [ %13, %8 ], [ %55, %53 ], [ %55, %57 ]
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %59
  %63 = inttoptr i64 %60 to %struct.crypto_buffer_st*
  call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %63) #9
  br label %64

64:                                               ; preds = %25, %20, %46, %7, %59, %62
  %65 = phi i32 [ 0, %59 ], [ 0, %62 ], [ 0, %7 ], [ 1, %46 ], [ 0, %25 ], [ 1, %20 ]
  ret i32 %65
}

declare i32 @i2d_SSL_SESSION(%struct.ssl_session_st*, i8**) local_unnamed_addr #2

declare %struct.stack_st* @sk_deep_copy(%struct.stack_st*, i8* (i8* (i8*)*, i8*)*, i8* (i8*)*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @sk_X509_NAME_call_copy_func(i8* (i8*)*, i8*) #8 comdat {
  %3 = bitcast i8* (i8*)* %0 to %struct.X509_name_st* (%struct.X509_name_st*)*
  %4 = bitcast i8* %1 to %struct.X509_name_st*
  %5 = tail call %struct.X509_name_st* %3(%struct.X509_name_st* %4) #9
  %6 = bitcast %struct.X509_name_st* %5 to i8*
  ret i8* %6
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @sk_X509_NAME_call_free_func(void (i8*)*, i8*) #8 comdat {
  %3 = bitcast void (i8*)* %0 to void (%struct.X509_name_st*)*
  %4 = bitcast i8* %1 to %struct.X509_name_st*
  tail call void %3(%struct.X509_name_st* %4) #9
  ret void
}

declare i32 @i2d_X509_NAME(%struct.X509_name_st*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN4bssl8internal11DeleterImplI18stack_st_X509_NAMEvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_(void (i8*)*, i8*) #8 comdat align 2 {
  %3 = bitcast i8* %1 to %struct.X509_name_st*
  tail call void @X509_NAME_free(%struct.X509_name_st* %3) #9
  ret void
}

declare %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st*) local_unnamed_addr #2

declare i32 @SSL_use_PrivateKey(%struct.ssl_st*, %struct.evp_pkey_st*) local_unnamed_addr #2

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #2

declare void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st*) local_unnamed_addr #2

declare void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
