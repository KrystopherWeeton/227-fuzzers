; ModuleID = '../../ui/accessibility/ax_tree_serializer.cc'
source_filename = "../../ui/accessibility/ax_tree_serializer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.ui::ClientTreeNode" = type <{ i32 (...)**, i32, [4 x i8], %"struct.ui::ClientTreeNode"*, %"class.std::__1::vector", i8, i8, [6 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::ClientTreeNode"**, %"struct.ui::ClientTreeNode"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.ui::ClientTreeNode"** }

@_ZTVN2ui14ClientTreeNodeE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.ui::ClientTreeNode"*)* @_ZN2ui14ClientTreeNodeD2Ev to i8*), i8* bitcast (void (%"struct.ui::ClientTreeNode"*)* @_ZN2ui14ClientTreeNodeD0Ev to i8*)] }, align 8

@_ZN2ui14ClientTreeNodeC1Ev = hidden unnamed_addr alias void (%"struct.ui::ClientTreeNode"*), void (%"struct.ui::ClientTreeNode"*)* @_ZN2ui14ClientTreeNodeC2Ev
@_ZN2ui14ClientTreeNodeD1Ev = hidden unnamed_addr alias void (%"struct.ui::ClientTreeNode"*), void (%"struct.ui::ClientTreeNode"*)* @_ZN2ui14ClientTreeNodeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14ClientTreeNodeC2Ev(%"struct.ui::ClientTreeNode"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::ClientTreeNode", %"struct.ui::ClientTreeNode"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2ui14ClientTreeNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.ui::ClientTreeNode", %"struct.ui::ClientTreeNode"* %0, i64 0, i32 4
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14ClientTreeNodeD2Ev(%"struct.ui::ClientTreeNode"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::ClientTreeNode", %"struct.ui::ClientTreeNode"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2ui14ClientTreeNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.ui::ClientTreeNode", %"struct.ui::ClientTreeNode"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"struct.ui::ClientTreeNode"**, %"struct.ui::ClientTreeNode"*** %3, align 8
  %5 = icmp eq %"struct.ui::ClientTreeNode"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.ui::ClientTreeNode"** %4 to i64
  %8 = getelementptr inbounds %"struct.ui::ClientTreeNode", %"struct.ui::ClientTreeNode"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = bitcast %"struct.ui::ClientTreeNode"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.ui::ClientTreeNode"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #4
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14ClientTreeNodeD0Ev(%"struct.ui::ClientTreeNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::ClientTreeNode", %"struct.ui::ClientTreeNode"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2ui14ClientTreeNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.ui::ClientTreeNode", %"struct.ui::ClientTreeNode"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"struct.ui::ClientTreeNode"**, %"struct.ui::ClientTreeNode"*** %3, align 8
  %5 = icmp eq %"struct.ui::ClientTreeNode"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.ui::ClientTreeNode"** %4 to i64
  %8 = getelementptr inbounds %"struct.ui::ClientTreeNode", %"struct.ui::ClientTreeNode"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = bitcast %"struct.ui::ClientTreeNode"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.ui::ClientTreeNode"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #4
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"struct.ui::ClientTreeNode"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #4
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }
attributes #4 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
