; ModuleID = '../../components/openscreen_platform/network_util.cc'
source_filename = "../../components/openscreen_platform/network_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.openscreen::IPAddress" = type { i32, %"struct.std::__1::array" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"struct.openscreen::IPEndpoint" = type <{ %"class.openscreen::IPAddress", i16, [2 x i8] }>

@switch.table._ZN19openscreen_platform20ToOpenScreenEndPointERKN3net10IPEndPointE = private unnamed_addr constant [3 x i32] [i32 0, i32 0, i32 1], align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19openscreen_platform12ToNetAddressERKN10openscreen9IPAddressE(%"class.net::IPAddress"* noalias sret, %"class.openscreen::IPAddress"* dereferenceable(20)) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca %"struct.std::__1::array", align 1
  %5 = getelementptr inbounds %"class.openscreen::IPAddress", %"class.openscreen::IPAddress"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  store i32 -1431655766, i32* %3, align 4
  call void @_ZNK10openscreen9IPAddress8CopyToV4EPh(%"class.openscreen::IPAddress"* %1, i8* nonnull %9) #5
  call void @_ZN3net9IPAddressC1EPKhm(%"class.net::IPAddress"* %0, i8* nonnull %9, i64 4) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  br label %12

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %11, i8 -86, i64 16, i1 false)
  call void @_ZNK10openscreen9IPAddress8CopyToV6EPh(%"class.openscreen::IPAddress"* %1, i8* nonnull %11) #5
  call void @_ZN3net9IPAddressC1EPKhm(%"class.net::IPAddress"* %0, i8* nonnull %11, i64 16) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #5
  br label %12

12:                                               ; preds = %10, %8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK10openscreen9IPAddress8CopyToV4EPh(%"class.openscreen::IPAddress"*, i8*) local_unnamed_addr #2

declare void @_ZN3net9IPAddressC1EPKhm(%"class.net::IPAddress"*, i8*, i64) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK10openscreen9IPAddress8CopyToV6EPh(%"class.openscreen::IPAddress"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19openscreen_platform13ToNetEndPointERKN10openscreen10IPEndpointE(%"class.net::IPEndPoint"* noalias sret, %"struct.openscreen::IPEndpoint"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca %"struct.std::__1::array", align 1
  %5 = alloca %"class.net::IPAddress", align 1
  %6 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %5, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"struct.openscreen::IPEndpoint", %"struct.openscreen::IPEndpoint"* %1, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.openscreen::IPEndpoint", %"struct.openscreen::IPEndpoint"* %1, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4, !noalias !2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5, !noalias !2
  store i32 -1431655766, i32* %3, align 4, !noalias !2
  call void @_ZNK10openscreen9IPAddress8CopyToV4EPh(%"class.openscreen::IPAddress"* %7, i8* nonnull %12) #5
  call void @_ZN3net9IPAddressC1EPKhm(%"class.net::IPAddress"* nonnull %5, i8* nonnull %12, i64 4) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5, !noalias !2
  br label %15

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #5, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -86, i64 16, i1 false) #5, !noalias !2
  call void @_ZNK10openscreen9IPAddress8CopyToV6EPh(%"class.openscreen::IPAddress"* %7, i8* nonnull %14) #5
  call void @_ZN3net9IPAddressC1EPKhm(%"class.net::IPAddress"* nonnull %5, i8* nonnull %14, i64 16) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #5, !noalias !2
  br label %15

15:                                               ; preds = %11, %13
  %16 = getelementptr inbounds %"struct.openscreen::IPEndpoint", %"struct.openscreen::IPEndpoint"* %1, i64 0, i32 1
  %17 = load i16, i16* %16, align 4
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* %0, %"class.net::IPAddress"* nonnull dereferenceable(17) %5, i16 zeroext %17) #5
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %6) #5
  ret void
}

declare void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"*, %"class.net::IPAddress"* dereferenceable(17), i16 zeroext) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN19openscreen_platform19ToOpenScreenVersionEN3net13AddressFamilyE(i32) local_unnamed_addr #4 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN19openscreen_platform20ToOpenScreenEndPointERKN3net10IPEndPointE, i64 0, i64 %2
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19openscreen_platform20ToOpenScreenEndPointERKN3net10IPEndPointE(%"struct.openscreen::IPEndpoint"* noalias sret, %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #0 {
  %3 = tail call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %1) #5
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN19openscreen_platform20ToOpenScreenEndPointERKN3net10IPEndPointE, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"struct.openscreen::IPEndpoint", %"struct.openscreen::IPEndpoint"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZN10openscreen9IPAddressC1ENS0_7VersionEPKh(%"class.openscreen::IPAddress"* %7, i32 %6, i8* %8) #5
  %9 = getelementptr inbounds %"struct.openscreen::IPEndpoint", %"struct.openscreen::IPEndpoint"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 0, i32 1
  %11 = load i16, i16* %10, align 2
  store i16 %11, i16* %9, align 4
  ret void
}

declare i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"*) local_unnamed_addr #2

declare void @_ZN10openscreen9IPAddressC1ENS0_7VersionEPKh(%"class.openscreen::IPAddress"*, i32, i8*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN19openscreen_platform12ToNetAddressERKN10openscreen9IPAddressE: argument 0"}
!4 = distinct !{!4, !"_ZN19openscreen_platform12ToNetAddressERKN10openscreen9IPAddressE"}
