; ModuleID = '../../third_party/ffmpeg/libavcodec/autorename_libavcodec_hpeldsp.c'
source_filename = "../../third_party/ffmpeg/libavcodec/autorename_libavcodec_hpeldsp.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.HpelDSPContext = type { [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x void (i8*, i8*, i64, i32)*] }

; Function Attrs: cold nounwind optsize ssp uwtable
define hidden void @ff_hpeldsp_init(%struct.HpelDSPContext*, i32) local_unnamed_addr #0 {
  %3 = bitcast %struct.HpelDSPContext* %0 to <2 x void (i8*, i8*, i64, i32)*>*
  store <2 x void (i8*, i8*, i64, i32)*> <void (i8*, i8*, i64, i32)* @put_pixels16_8_c, void (i8*, i8*, i64, i32)* @put_pixels16_x2_8_c>, <2 x void (i8*, i8*, i64, i32)*>* %3, align 8
  %4 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %0, i64 0, i32 0, i64 0, i64 2
  %5 = bitcast void (i8*, i8*, i64, i32)** %4 to <2 x void (i8*, i8*, i64, i32)*>*
  store <2 x void (i8*, i8*, i64, i32)*> <void (i8*, i8*, i64, i32)* @put_pixels16_y2_8_c, void (i8*, i8*, i64, i32)* @put_pixels16_xy2_8_c>, <2 x void (i8*, i8*, i64, i32)*>* %5, align 8
  %6 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %0, i64 0, i32 0, i64 1, i64 0
  %7 = bitcast void (i8*, i8*, i64, i32)** %6 to <2 x void (i8*, i8*, i64, i32)*>*
  store <2 x void (i8*, i8*, i64, i32)*> <void (i8*, i8*, i64, i32)* @put_pixels8_8_c, void (i8*, i8*, i64, i32)* @put_pixels8_x2_8_c>, <2 x void (i8*, i8*, i64, i32)*>* %7, align 8
  %8 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %0, i64 0, i32 0, i64 1, i64 2
  %9 = bitcast void (i8*, i8*, i64, i32)** %8 to <2 x void (i8*, i8*, i64, i32)*>*
  store <2 x void (i8*, i8*, i64, i32)*> <void (i8*, i8*, i64, i32)* @put_pixels8_y2_8_c, void (i8*, i8*, i64, i32)* @put_pixels8_xy2_8_c>, <2 x void (i8*, i8*, i64, i32)*>* %9, align 8
  %10 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %0, i64 0, i32 0, i64 2, i64 0
  %11 = bitcast void (i8*, i8*, i64, i32)** %10 to <2 x void (i8*, i8*, i64, i32)*>*
  store <2 x void (i8*, i8*, i64, i32)*> <void (i8*, i8*, i64, i32)* @put_pixels4_8_c, void (i8*, i8*, i64, i32)* @put_pixels4_x2_8_c>, <2 x void (i8*, i8*, i64, i32)*>* %11, align 8
  %12 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %0, i64 0, i32 0, i64 2, i64 2
  %13 = bitcast void (i8*, i8*, i64, i32)** %12 to <2 x void (i8*, i8*, i64, i32)*>*
  store <2 x void (i8*, i8*, i64, i32)*> <void (i8*, i8*, i64, i32)* @put_pixels4_y2_8_c, void (i8*, i8*, i64, i32)* @put_pixels4_xy2_8_c>, <2 x void (i8*, i8*, i64, i32)*>* %13, align 8
  %14 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %0, i64 0, i32 0, i64 3, i64 0
  %15 = bitcast void (i8*, i8*, i64, i32)** %14 to <2 x void (i8*, i8*, i64, i32)*>*
  store <2 x void (i8*, i8*, i64, i32)*> <void (i8*, i8*, i64, i32)* @put_pixels2_8_c, void (i8*, i8*, i64, i32)* @put_pixels2_x2_8_c>, <2 x void (i8*, i8*, i64, i32)*>* %15, align 8
  %16 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %0, i64 0, i32 0, i64 3, i64 2
  %17 = bitcast void (i8*, i8*, i64, i32)** %16 to <2 x void (i8*, i8*, i64, i32)*>*
  store <2 x void (i8*, i8*, i64, i32)*> <void (i8*, i8*, i64, i32)* @put_pixels2_y2_8_c, void (i8*, i8*, i64, i32)* @put_pixels2_xy2_8_c>, <2 x void (i8*, i8*, i64, i32)*>* %17, align 8
  %18 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %0, i64 0, i32 2, i64 0, i64 0
  %19 = bitcast void (i8*, i8*, i64, i32)** %18 to <2 x void (i8*, i8*, i64, i32)*>*
  store <2 x void (i8*, i8*, i64, i32)*> <void (i8*, i8*, i64, i32)* @put_no_rnd_pixels16_8_c, void (i8*, i8*, i64, i32)* @put_no_rnd_pixels16_x2_8_c>, <2 x void (i8*, i8*, i64, i32)*>* %19, align 8
  %20 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %0, i64 0, i32 2, i64 0, i64 2
  %21 = bitcast void (i8*, i8*, i64, i32)** %20 to <2 x void (i8*, i8*, i64, i32)*>*
  store <2 x void (i8*, i8*, i64, i32)*> <void (i8*, i8*, i64, i32)* @put_no_rnd_pixels16_y2_8_c, void (i8*, i8*, i64, i32)* @put_no_rnd_pixels16_xy2_8_c>, <2 x void (i8*, i8*, i64, i32)*>* %21, align 8
  %22 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %0, i64 0, i32 2, i64 1, i64 0
  %23 = bitcast void (i8*, i8*, i64, i32)** %22 to <2 x void (i8*, i8*, i64, i32)*>*
  store <2 x void (i8*, i8*, i64, i32)*> <void (i8*, i8*, i64, i32)* @put_pixels8_8_c, void (i8*, i8*, i64, i32)* @put_no_rnd_pixels8_x2_8_c>, <2 x void (i8*, i8*, i64, i32)*>* %23, align 8
  %24 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %0, i64 0, i32 2, i64 1, i64 2
  %25 = bitcast void (i8*, i8*, i64, i32)** %24 to <2 x void (i8*, i8*, i64, i32)*>*
  store <2 x void (i8*, i8*, i64, i32)*> <void (i8*, i8*, i64, i32)* @put_no_rnd_pixels8_y2_8_c, void (i8*, i8*, i64, i32)* @put_no_rnd_pixels8_xy2_8_c>, <2 x void (i8*, i8*, i64, i32)*>* %25, align 8
  %26 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %0, i64 0, i32 1, i64 0, i64 0
  %27 = bitcast void (i8*, i8*, i64, i32)** %26 to <2 x void (i8*, i8*, i64, i32)*>*
  store <2 x void (i8*, i8*, i64, i32)*> <void (i8*, i8*, i64, i32)* @avg_pixels16_8_c, void (i8*, i8*, i64, i32)* @avg_pixels16_x2_8_c>, <2 x void (i8*, i8*, i64, i32)*>* %27, align 8
  %28 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %0, i64 0, i32 1, i64 0, i64 2
  %29 = bitcast void (i8*, i8*, i64, i32)** %28 to <2 x void (i8*, i8*, i64, i32)*>*
  store <2 x void (i8*, i8*, i64, i32)*> <void (i8*, i8*, i64, i32)* @avg_pixels16_y2_8_c, void (i8*, i8*, i64, i32)* @avg_pixels16_xy2_8_c>, <2 x void (i8*, i8*, i64, i32)*>* %29, align 8
  %30 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %0, i64 0, i32 1, i64 1, i64 0
  %31 = bitcast void (i8*, i8*, i64, i32)** %30 to <2 x void (i8*, i8*, i64, i32)*>*
  store <2 x void (i8*, i8*, i64, i32)*> <void (i8*, i8*, i64, i32)* @avg_pixels8_8_c, void (i8*, i8*, i64, i32)* @avg_pixels8_x2_8_c>, <2 x void (i8*, i8*, i64, i32)*>* %31, align 8
  %32 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %0, i64 0, i32 1, i64 1, i64 2
  %33 = bitcast void (i8*, i8*, i64, i32)** %32 to <2 x void (i8*, i8*, i64, i32)*>*
  store <2 x void (i8*, i8*, i64, i32)*> <void (i8*, i8*, i64, i32)* @avg_pixels8_y2_8_c, void (i8*, i8*, i64, i32)* @avg_pixels8_xy2_8_c>, <2 x void (i8*, i8*, i64, i32)*>* %33, align 8
  %34 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %0, i64 0, i32 1, i64 2, i64 0
  %35 = bitcast void (i8*, i8*, i64, i32)** %34 to <2 x void (i8*, i8*, i64, i32)*>*
  store <2 x void (i8*, i8*, i64, i32)*> <void (i8*, i8*, i64, i32)* @avg_pixels4_8_c, void (i8*, i8*, i64, i32)* @avg_pixels4_x2_8_c>, <2 x void (i8*, i8*, i64, i32)*>* %35, align 8
  %36 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %0, i64 0, i32 1, i64 2, i64 2
  %37 = bitcast void (i8*, i8*, i64, i32)** %36 to <2 x void (i8*, i8*, i64, i32)*>*
  store <2 x void (i8*, i8*, i64, i32)*> <void (i8*, i8*, i64, i32)* @avg_pixels4_y2_8_c, void (i8*, i8*, i64, i32)* @avg_pixels4_xy2_8_c>, <2 x void (i8*, i8*, i64, i32)*>* %37, align 8
  %38 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %0, i64 0, i32 1, i64 3, i64 0
  %39 = bitcast void (i8*, i8*, i64, i32)** %38 to <2 x void (i8*, i8*, i64, i32)*>*
  store <2 x void (i8*, i8*, i64, i32)*> <void (i8*, i8*, i64, i32)* @avg_pixels2_8_c, void (i8*, i8*, i64, i32)* @avg_pixels2_x2_8_c>, <2 x void (i8*, i8*, i64, i32)*>* %39, align 8
  %40 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %0, i64 0, i32 1, i64 3, i64 2
  %41 = bitcast void (i8*, i8*, i64, i32)** %40 to <2 x void (i8*, i8*, i64, i32)*>*
  store <2 x void (i8*, i8*, i64, i32)*> <void (i8*, i8*, i64, i32)* @avg_pixels2_y2_8_c, void (i8*, i8*, i64, i32)* @avg_pixels2_xy2_8_c>, <2 x void (i8*, i8*, i64, i32)*>* %41, align 8
  %42 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %0, i64 0, i32 3, i64 0
  %43 = bitcast void (i8*, i8*, i64, i32)** %42 to <2 x void (i8*, i8*, i64, i32)*>*
  store <2 x void (i8*, i8*, i64, i32)*> <void (i8*, i8*, i64, i32)* @avg_no_rnd_pixels16_8_c, void (i8*, i8*, i64, i32)* @avg_no_rnd_pixels16_x2_8_c>, <2 x void (i8*, i8*, i64, i32)*>* %43, align 8
  %44 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %0, i64 0, i32 3, i64 2
  %45 = bitcast void (i8*, i8*, i64, i32)** %44 to <2 x void (i8*, i8*, i64, i32)*>*
  store <2 x void (i8*, i8*, i64, i32)*> <void (i8*, i8*, i64, i32)* @avg_no_rnd_pixels16_y2_8_c, void (i8*, i8*, i64, i32)* @avg_no_rnd_pixels16_xy2_8_c>, <2 x void (i8*, i8*, i64, i32)*>* %45, align 8
  tail call void @ff_hpeldsp_init_x86(%struct.HpelDSPContext* %0, i32 %1) #4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_pixels16_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #1 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %152

6:                                                ; preds = %4
  %7 = add i32 %3, -1
  %8 = and i32 %3, 3
  %9 = icmp ult i32 %7, 3
  br i1 %9, label %58, label %10

10:                                               ; preds = %6
  %11 = sub i32 %3, %8
  br label %12

12:                                               ; preds = %12, %10
  %13 = phi i8* [ %0, %10 ], [ %55, %12 ]
  %14 = phi i8* [ %1, %10 ], [ %54, %12 ]
  %15 = phi i32 [ %11, %10 ], [ %56, %12 ]
  %16 = bitcast i8* %14 to i32*
  %17 = load i32, i32* %16, align 1
  %18 = bitcast i8* %13 to i32*
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %14, i64 4
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 1
  %22 = getelementptr inbounds i8, i8* %13, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %14, i64 %2
  %25 = getelementptr inbounds i8, i8* %13, i64 %2
  %26 = bitcast i8* %24 to i32*
  %27 = load i32, i32* %26, align 1
  %28 = bitcast i8* %25 to i32*
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %24, i64 4
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 1
  %32 = getelementptr inbounds i8, i8* %25, i64 4
  %33 = bitcast i8* %32 to i32*
  store i32 %31, i32* %33, align 4
  %34 = getelementptr inbounds i8, i8* %24, i64 %2
  %35 = getelementptr inbounds i8, i8* %25, i64 %2
  %36 = bitcast i8* %34 to i32*
  %37 = load i32, i32* %36, align 1
  %38 = bitcast i8* %35 to i32*
  store i32 %37, i32* %38, align 4
  %39 = getelementptr inbounds i8, i8* %34, i64 4
  %40 = bitcast i8* %39 to i32*
  %41 = load i32, i32* %40, align 1
  %42 = getelementptr inbounds i8, i8* %35, i64 4
  %43 = bitcast i8* %42 to i32*
  store i32 %41, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %34, i64 %2
  %45 = getelementptr inbounds i8, i8* %35, i64 %2
  %46 = bitcast i8* %44 to i32*
  %47 = load i32, i32* %46, align 1
  %48 = bitcast i8* %45 to i32*
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds i8, i8* %44, i64 4
  %50 = bitcast i8* %49 to i32*
  %51 = load i32, i32* %50, align 1
  %52 = getelementptr inbounds i8, i8* %45, i64 4
  %53 = bitcast i8* %52 to i32*
  store i32 %51, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %44, i64 %2
  %55 = getelementptr inbounds i8, i8* %45, i64 %2
  %56 = add i32 %15, -4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %12

58:                                               ; preds = %12, %6
  %59 = phi i8* [ %0, %6 ], [ %55, %12 ]
  %60 = phi i8* [ %1, %6 ], [ %54, %12 ]
  %61 = icmp eq i32 %8, 0
  br i1 %61, label %78, label %62

62:                                               ; preds = %58, %62
  %63 = phi i8* [ %75, %62 ], [ %59, %58 ]
  %64 = phi i8* [ %74, %62 ], [ %60, %58 ]
  %65 = phi i32 [ %76, %62 ], [ %8, %58 ]
  %66 = bitcast i8* %64 to i32*
  %67 = load i32, i32* %66, align 1
  %68 = bitcast i8* %63 to i32*
  store i32 %67, i32* %68, align 4
  %69 = getelementptr inbounds i8, i8* %64, i64 4
  %70 = bitcast i8* %69 to i32*
  %71 = load i32, i32* %70, align 1
  %72 = getelementptr inbounds i8, i8* %63, i64 4
  %73 = bitcast i8* %72 to i32*
  store i32 %71, i32* %73, align 4
  %74 = getelementptr inbounds i8, i8* %64, i64 %2
  %75 = getelementptr inbounds i8, i8* %63, i64 %2
  %76 = add i32 %65, -1
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %62, !llvm.loop !2

78:                                               ; preds = %62, %58
  %79 = getelementptr inbounds i8, i8* %1, i64 8
  %80 = getelementptr inbounds i8, i8* %0, i64 8
  %81 = add i32 %3, -1
  %82 = and i32 %3, 3
  %83 = icmp ult i32 %81, 3
  br i1 %83, label %132, label %84

84:                                               ; preds = %78
  %85 = sub i32 %3, %82
  br label %86

86:                                               ; preds = %86, %84
  %87 = phi i8* [ %80, %84 ], [ %129, %86 ]
  %88 = phi i8* [ %79, %84 ], [ %128, %86 ]
  %89 = phi i32 [ %85, %84 ], [ %130, %86 ]
  %90 = bitcast i8* %88 to i32*
  %91 = load i32, i32* %90, align 1
  %92 = bitcast i8* %87 to i32*
  store i32 %91, i32* %92, align 4
  %93 = getelementptr inbounds i8, i8* %88, i64 4
  %94 = bitcast i8* %93 to i32*
  %95 = load i32, i32* %94, align 1
  %96 = getelementptr inbounds i8, i8* %87, i64 4
  %97 = bitcast i8* %96 to i32*
  store i32 %95, i32* %97, align 4
  %98 = getelementptr inbounds i8, i8* %88, i64 %2
  %99 = getelementptr inbounds i8, i8* %87, i64 %2
  %100 = bitcast i8* %98 to i32*
  %101 = load i32, i32* %100, align 1
  %102 = bitcast i8* %99 to i32*
  store i32 %101, i32* %102, align 4
  %103 = getelementptr inbounds i8, i8* %98, i64 4
  %104 = bitcast i8* %103 to i32*
  %105 = load i32, i32* %104, align 1
  %106 = getelementptr inbounds i8, i8* %99, i64 4
  %107 = bitcast i8* %106 to i32*
  store i32 %105, i32* %107, align 4
  %108 = getelementptr inbounds i8, i8* %98, i64 %2
  %109 = getelementptr inbounds i8, i8* %99, i64 %2
  %110 = bitcast i8* %108 to i32*
  %111 = load i32, i32* %110, align 1
  %112 = bitcast i8* %109 to i32*
  store i32 %111, i32* %112, align 4
  %113 = getelementptr inbounds i8, i8* %108, i64 4
  %114 = bitcast i8* %113 to i32*
  %115 = load i32, i32* %114, align 1
  %116 = getelementptr inbounds i8, i8* %109, i64 4
  %117 = bitcast i8* %116 to i32*
  store i32 %115, i32* %117, align 4
  %118 = getelementptr inbounds i8, i8* %108, i64 %2
  %119 = getelementptr inbounds i8, i8* %109, i64 %2
  %120 = bitcast i8* %118 to i32*
  %121 = load i32, i32* %120, align 1
  %122 = bitcast i8* %119 to i32*
  store i32 %121, i32* %122, align 4
  %123 = getelementptr inbounds i8, i8* %118, i64 4
  %124 = bitcast i8* %123 to i32*
  %125 = load i32, i32* %124, align 1
  %126 = getelementptr inbounds i8, i8* %119, i64 4
  %127 = bitcast i8* %126 to i32*
  store i32 %125, i32* %127, align 4
  %128 = getelementptr inbounds i8, i8* %118, i64 %2
  %129 = getelementptr inbounds i8, i8* %119, i64 %2
  %130 = add i32 %89, -4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %86

132:                                              ; preds = %86, %78
  %133 = phi i8* [ %80, %78 ], [ %129, %86 ]
  %134 = phi i8* [ %79, %78 ], [ %128, %86 ]
  %135 = icmp eq i32 %82, 0
  br i1 %135, label %152, label %136

136:                                              ; preds = %132, %136
  %137 = phi i8* [ %149, %136 ], [ %133, %132 ]
  %138 = phi i8* [ %148, %136 ], [ %134, %132 ]
  %139 = phi i32 [ %150, %136 ], [ %82, %132 ]
  %140 = bitcast i8* %138 to i32*
  %141 = load i32, i32* %140, align 1
  %142 = bitcast i8* %137 to i32*
  store i32 %141, i32* %142, align 4
  %143 = getelementptr inbounds i8, i8* %138, i64 4
  %144 = bitcast i8* %143 to i32*
  %145 = load i32, i32* %144, align 1
  %146 = getelementptr inbounds i8, i8* %137, i64 4
  %147 = bitcast i8* %146 to i32*
  store i32 %145, i32* %147, align 4
  %148 = getelementptr inbounds i8, i8* %138, i64 %2
  %149 = getelementptr inbounds i8, i8* %137, i64 %2
  %150 = add i32 %139, -1
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %136, !llvm.loop !4

152:                                              ; preds = %132, %136, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_pixels16_x2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #1 {
  %5 = getelementptr inbounds i8, i8* %1, i64 1
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %79

7:                                                ; preds = %4
  %8 = shl i64 %2, 32
  %9 = ashr exact i64 %8, 32
  %10 = zext i32 %3 to i64
  br label %11

11:                                               ; preds = %11, %7
  %12 = phi i64 [ 0, %7 ], [ %41, %11 ]
  %13 = mul nsw i64 %12, %9
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 1
  %17 = getelementptr inbounds i8, i8* %5, i64 %13
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = or i32 %19, %16
  %21 = xor i32 %19, %16
  %22 = lshr i32 %21, 1
  %23 = and i32 %22, 2139062143
  %24 = sub i32 %20, %23
  %25 = getelementptr inbounds i8, i8* %0, i64 %13
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 4
  %27 = add nsw i64 %13, 4
  %28 = getelementptr inbounds i8, i8* %1, i64 %27
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 1
  %31 = getelementptr inbounds i8, i8* %5, i64 %27
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 1
  %34 = or i32 %33, %30
  %35 = xor i32 %33, %30
  %36 = lshr i32 %35, 1
  %37 = and i32 %36, 2139062143
  %38 = sub i32 %34, %37
  %39 = getelementptr inbounds i8, i8* %0, i64 %27
  %40 = bitcast i8* %39 to i32*
  store i32 %38, i32* %40, align 4
  %41 = add nuw nsw i64 %12, 1
  %42 = icmp eq i64 %41, %10
  br i1 %42, label %43, label %11

43:                                               ; preds = %11
  %44 = getelementptr inbounds i8, i8* %0, i64 8
  %45 = getelementptr inbounds i8, i8* %1, i64 8
  %46 = getelementptr inbounds i8, i8* %1, i64 9
  br label %47

47:                                               ; preds = %47, %43
  %48 = phi i64 [ 0, %43 ], [ %77, %47 ]
  %49 = mul nsw i64 %48, %9
  %50 = getelementptr inbounds i8, i8* %45, i64 %49
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %51, align 1
  %53 = getelementptr inbounds i8, i8* %46, i64 %49
  %54 = bitcast i8* %53 to i32*
  %55 = load i32, i32* %54, align 1
  %56 = or i32 %55, %52
  %57 = xor i32 %55, %52
  %58 = lshr i32 %57, 1
  %59 = and i32 %58, 2139062143
  %60 = sub i32 %56, %59
  %61 = getelementptr inbounds i8, i8* %44, i64 %49
  %62 = bitcast i8* %61 to i32*
  store i32 %60, i32* %62, align 4
  %63 = add nsw i64 %49, 4
  %64 = getelementptr inbounds i8, i8* %45, i64 %63
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 1
  %67 = getelementptr inbounds i8, i8* %46, i64 %63
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %68, align 1
  %70 = or i32 %69, %66
  %71 = xor i32 %69, %66
  %72 = lshr i32 %71, 1
  %73 = and i32 %72, 2139062143
  %74 = sub i32 %70, %73
  %75 = getelementptr inbounds i8, i8* %44, i64 %63
  %76 = bitcast i8* %75 to i32*
  store i32 %74, i32* %76, align 4
  %77 = add nuw nsw i64 %48, 1
  %78 = icmp eq i64 %77, %10
  br i1 %78, label %79, label %47

79:                                               ; preds = %47, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_pixels16_y2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #1 {
  %5 = getelementptr inbounds i8, i8* %1, i64 %2
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %79

7:                                                ; preds = %4
  %8 = shl i64 %2, 32
  %9 = ashr exact i64 %8, 32
  %10 = zext i32 %3 to i64
  br label %11

11:                                               ; preds = %11, %7
  %12 = phi i64 [ 0, %7 ], [ %41, %11 ]
  %13 = mul nsw i64 %12, %9
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 1
  %17 = getelementptr inbounds i8, i8* %5, i64 %13
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = or i32 %19, %16
  %21 = xor i32 %19, %16
  %22 = lshr i32 %21, 1
  %23 = and i32 %22, 2139062143
  %24 = sub i32 %20, %23
  %25 = getelementptr inbounds i8, i8* %0, i64 %13
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 4
  %27 = add nsw i64 %13, 4
  %28 = getelementptr inbounds i8, i8* %1, i64 %27
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 1
  %31 = getelementptr inbounds i8, i8* %5, i64 %27
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 1
  %34 = or i32 %33, %30
  %35 = xor i32 %33, %30
  %36 = lshr i32 %35, 1
  %37 = and i32 %36, 2139062143
  %38 = sub i32 %34, %37
  %39 = getelementptr inbounds i8, i8* %0, i64 %27
  %40 = bitcast i8* %39 to i32*
  store i32 %38, i32* %40, align 4
  %41 = add nuw nsw i64 %12, 1
  %42 = icmp eq i64 %41, %10
  br i1 %42, label %43, label %11

43:                                               ; preds = %11
  %44 = getelementptr inbounds i8, i8* %0, i64 8
  %45 = getelementptr inbounds i8, i8* %1, i64 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %2
  br label %47

47:                                               ; preds = %47, %43
  %48 = phi i64 [ 0, %43 ], [ %77, %47 ]
  %49 = mul nsw i64 %48, %9
  %50 = getelementptr inbounds i8, i8* %45, i64 %49
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %51, align 1
  %53 = getelementptr inbounds i8, i8* %46, i64 %49
  %54 = bitcast i8* %53 to i32*
  %55 = load i32, i32* %54, align 1
  %56 = or i32 %55, %52
  %57 = xor i32 %55, %52
  %58 = lshr i32 %57, 1
  %59 = and i32 %58, 2139062143
  %60 = sub i32 %56, %59
  %61 = getelementptr inbounds i8, i8* %44, i64 %49
  %62 = bitcast i8* %61 to i32*
  store i32 %60, i32* %62, align 4
  %63 = add nsw i64 %49, 4
  %64 = getelementptr inbounds i8, i8* %45, i64 %63
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 1
  %67 = getelementptr inbounds i8, i8* %46, i64 %63
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %68, align 1
  %70 = or i32 %69, %66
  %71 = xor i32 %69, %66
  %72 = lshr i32 %71, 1
  %73 = and i32 %72, 2139062143
  %74 = sub i32 %70, %73
  %75 = getelementptr inbounds i8, i8* %44, i64 %63
  %76 = bitcast i8* %75 to i32*
  store i32 %74, i32* %76, align 4
  %77 = add nuw nsw i64 %48, 1
  %78 = icmp eq i64 %77, %10
  br i1 %78, label %79, label %47

79:                                               ; preds = %47, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_pixels16_xy2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #1 {
  tail call void @put_pixels8_xy2_8_c(i8* %0, i8* %1, i64 %2, i32 %3)
  %5 = getelementptr inbounds i8, i8* %0, i64 8
  %6 = getelementptr inbounds i8, i8* %1, i64 8
  tail call void @put_pixels8_xy2_8_c(i8* %5, i8* %6, i64 %2, i32 %3)
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @put_pixels8_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %78

6:                                                ; preds = %4
  %7 = add i32 %3, -1
  %8 = and i32 %3, 3
  %9 = icmp ult i32 %7, 3
  br i1 %9, label %58, label %10

10:                                               ; preds = %6
  %11 = sub i32 %3, %8
  br label %12

12:                                               ; preds = %12, %10
  %13 = phi i8* [ %0, %10 ], [ %55, %12 ]
  %14 = phi i8* [ %1, %10 ], [ %54, %12 ]
  %15 = phi i32 [ %11, %10 ], [ %56, %12 ]
  %16 = bitcast i8* %14 to i32*
  %17 = load i32, i32* %16, align 1
  %18 = bitcast i8* %13 to i32*
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %14, i64 4
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 1
  %22 = getelementptr inbounds i8, i8* %13, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %14, i64 %2
  %25 = getelementptr inbounds i8, i8* %13, i64 %2
  %26 = bitcast i8* %24 to i32*
  %27 = load i32, i32* %26, align 1
  %28 = bitcast i8* %25 to i32*
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %24, i64 4
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 1
  %32 = getelementptr inbounds i8, i8* %25, i64 4
  %33 = bitcast i8* %32 to i32*
  store i32 %31, i32* %33, align 4
  %34 = getelementptr inbounds i8, i8* %24, i64 %2
  %35 = getelementptr inbounds i8, i8* %25, i64 %2
  %36 = bitcast i8* %34 to i32*
  %37 = load i32, i32* %36, align 1
  %38 = bitcast i8* %35 to i32*
  store i32 %37, i32* %38, align 4
  %39 = getelementptr inbounds i8, i8* %34, i64 4
  %40 = bitcast i8* %39 to i32*
  %41 = load i32, i32* %40, align 1
  %42 = getelementptr inbounds i8, i8* %35, i64 4
  %43 = bitcast i8* %42 to i32*
  store i32 %41, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %34, i64 %2
  %45 = getelementptr inbounds i8, i8* %35, i64 %2
  %46 = bitcast i8* %44 to i32*
  %47 = load i32, i32* %46, align 1
  %48 = bitcast i8* %45 to i32*
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds i8, i8* %44, i64 4
  %50 = bitcast i8* %49 to i32*
  %51 = load i32, i32* %50, align 1
  %52 = getelementptr inbounds i8, i8* %45, i64 4
  %53 = bitcast i8* %52 to i32*
  store i32 %51, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %44, i64 %2
  %55 = getelementptr inbounds i8, i8* %45, i64 %2
  %56 = add i32 %15, -4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %12

58:                                               ; preds = %12, %6
  %59 = phi i8* [ %0, %6 ], [ %55, %12 ]
  %60 = phi i8* [ %1, %6 ], [ %54, %12 ]
  %61 = icmp eq i32 %8, 0
  br i1 %61, label %78, label %62

62:                                               ; preds = %58, %62
  %63 = phi i8* [ %75, %62 ], [ %59, %58 ]
  %64 = phi i8* [ %74, %62 ], [ %60, %58 ]
  %65 = phi i32 [ %76, %62 ], [ %8, %58 ]
  %66 = bitcast i8* %64 to i32*
  %67 = load i32, i32* %66, align 1
  %68 = bitcast i8* %63 to i32*
  store i32 %67, i32* %68, align 4
  %69 = getelementptr inbounds i8, i8* %64, i64 4
  %70 = bitcast i8* %69 to i32*
  %71 = load i32, i32* %70, align 1
  %72 = getelementptr inbounds i8, i8* %63, i64 4
  %73 = bitcast i8* %72 to i32*
  store i32 %71, i32* %73, align 4
  %74 = getelementptr inbounds i8, i8* %64, i64 %2
  %75 = getelementptr inbounds i8, i8* %63, i64 %2
  %76 = add i32 %65, -1
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %62, !llvm.loop !5

78:                                               ; preds = %58, %62, %4
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @put_pixels8_x2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = getelementptr inbounds i8, i8* %1, i64 1
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %43

7:                                                ; preds = %4
  %8 = shl i64 %2, 32
  %9 = ashr exact i64 %8, 32
  %10 = zext i32 %3 to i64
  br label %11

11:                                               ; preds = %11, %7
  %12 = phi i64 [ 0, %7 ], [ %41, %11 ]
  %13 = mul nsw i64 %12, %9
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 1
  %17 = getelementptr inbounds i8, i8* %5, i64 %13
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = or i32 %19, %16
  %21 = xor i32 %19, %16
  %22 = lshr i32 %21, 1
  %23 = and i32 %22, 2139062143
  %24 = sub i32 %20, %23
  %25 = getelementptr inbounds i8, i8* %0, i64 %13
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 4
  %27 = add nsw i64 %13, 4
  %28 = getelementptr inbounds i8, i8* %1, i64 %27
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 1
  %31 = getelementptr inbounds i8, i8* %5, i64 %27
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 1
  %34 = or i32 %33, %30
  %35 = xor i32 %33, %30
  %36 = lshr i32 %35, 1
  %37 = and i32 %36, 2139062143
  %38 = sub i32 %34, %37
  %39 = getelementptr inbounds i8, i8* %0, i64 %27
  %40 = bitcast i8* %39 to i32*
  store i32 %38, i32* %40, align 4
  %41 = add nuw nsw i64 %12, 1
  %42 = icmp eq i64 %41, %10
  br i1 %42, label %43, label %11

43:                                               ; preds = %11, %4
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @put_pixels8_y2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = getelementptr inbounds i8, i8* %1, i64 %2
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %43

7:                                                ; preds = %4
  %8 = shl i64 %2, 32
  %9 = ashr exact i64 %8, 32
  %10 = zext i32 %3 to i64
  br label %11

11:                                               ; preds = %11, %7
  %12 = phi i64 [ 0, %7 ], [ %41, %11 ]
  %13 = mul nsw i64 %12, %9
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 1
  %17 = getelementptr inbounds i8, i8* %5, i64 %13
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = or i32 %19, %16
  %21 = xor i32 %19, %16
  %22 = lshr i32 %21, 1
  %23 = and i32 %22, 2139062143
  %24 = sub i32 %20, %23
  %25 = getelementptr inbounds i8, i8* %0, i64 %13
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 4
  %27 = add nsw i64 %13, 4
  %28 = getelementptr inbounds i8, i8* %1, i64 %27
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 1
  %31 = getelementptr inbounds i8, i8* %5, i64 %27
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 1
  %34 = or i32 %33, %30
  %35 = xor i32 %33, %30
  %36 = lshr i32 %35, 1
  %37 = and i32 %36, 2139062143
  %38 = sub i32 %34, %37
  %39 = getelementptr inbounds i8, i8* %0, i64 %27
  %40 = bitcast i8* %39 to i32*
  store i32 %38, i32* %40, align 4
  %41 = add nuw nsw i64 %12, 1
  %42 = icmp eq i64 %41, %10
  br i1 %42, label %43, label %11

43:                                               ; preds = %11, %4
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @put_pixels8_xy2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = icmp sgt i32 %3, 0
  %6 = add nsw i32 %3, 1
  %7 = sext i32 %6 to i64
  %8 = mul nsw i64 %7, %2
  %9 = sub nsw i64 4, %8
  %10 = sext i32 %3 to i64
  %11 = mul nsw i64 %10, %2
  %12 = sub nsw i64 4, %11
  %13 = bitcast i8* %1 to i32*
  %14 = load i32, i32* %13, align 1
  %15 = getelementptr inbounds i8, i8* %1, i64 1
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 1
  br i1 %5, label %18, label %149

18:                                               ; preds = %4
  %19 = lshr i32 %17, 2
  %20 = and i32 %19, 1061109567
  %21 = lshr i32 %14, 2
  %22 = and i32 %21, 1061109567
  %23 = add nuw nsw i32 %20, %22
  %24 = and i32 %14, 50529027
  %25 = add nuw nsw i32 %24, 33686018
  %26 = and i32 %17, 50529027
  %27 = add nuw nsw i32 %25, %26
  br label %28

28:                                               ; preds = %18, %28
  %29 = phi i8* [ %54, %28 ], [ %1, %18 ]
  %30 = phi i8* [ %76, %28 ], [ %0, %18 ]
  %31 = phi i32 [ %69, %28 ], [ %23, %18 ]
  %32 = phi i32 [ %64, %28 ], [ %27, %18 ]
  %33 = phi i32 [ %77, %28 ], [ 0, %18 ]
  %34 = getelementptr inbounds i8, i8* %29, i64 %2
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = getelementptr inbounds i8, i8* %34, i64 1
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 1
  %40 = and i32 %36, 50529027
  %41 = and i32 %39, 50529027
  %42 = add nuw nsw i32 %41, %40
  %43 = lshr i32 %36, 2
  %44 = and i32 %43, 1061109567
  %45 = lshr i32 %39, 2
  %46 = and i32 %45, 1061109567
  %47 = add nuw nsw i32 %46, %44
  %48 = add nuw i32 %47, %31
  %49 = add nuw nsw i32 %42, %32
  %50 = lshr i32 %49, 2
  %51 = and i32 %50, 252645135
  %52 = add i32 %48, %51
  %53 = bitcast i8* %30 to i32*
  store i32 %52, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %34, i64 %2
  %55 = getelementptr inbounds i8, i8* %30, i64 %2
  %56 = bitcast i8* %54 to i32*
  %57 = load i32, i32* %56, align 1
  %58 = getelementptr inbounds i8, i8* %54, i64 1
  %59 = bitcast i8* %58 to i32*
  %60 = load i32, i32* %59, align 1
  %61 = and i32 %57, 50529027
  %62 = and i32 %60, 50529027
  %63 = add nuw nsw i32 %61, 33686018
  %64 = add nuw nsw i32 %63, %62
  %65 = lshr i32 %57, 2
  %66 = and i32 %65, 1061109567
  %67 = lshr i32 %60, 2
  %68 = and i32 %67, 1061109567
  %69 = add nuw nsw i32 %68, %66
  %70 = add nuw i32 %69, %47
  %71 = add nuw nsw i32 %64, %42
  %72 = lshr i32 %71, 2
  %73 = and i32 %72, 117901063
  %74 = add i32 %70, %73
  %75 = bitcast i8* %55 to i32*
  store i32 %74, i32* %75, align 4
  %76 = getelementptr inbounds i8, i8* %55, i64 %2
  %77 = add nuw nsw i32 %33, 2
  %78 = icmp slt i32 %77, %3
  br i1 %78, label %28, label %79

79:                                               ; preds = %28
  %80 = getelementptr inbounds i8, i8* %54, i64 %2
  %81 = getelementptr inbounds i8, i8* %80, i64 %9
  %82 = bitcast i8* %81 to i32*
  %83 = load i32, i32* %82, align 1
  %84 = getelementptr inbounds i8, i8* %81, i64 1
  %85 = bitcast i8* %84 to i32*
  %86 = load i32, i32* %85, align 1
  br i1 %5, label %87, label %149

87:                                               ; preds = %79
  %88 = lshr i32 %86, 2
  %89 = and i32 %88, 1061109567
  %90 = lshr i32 %83, 2
  %91 = and i32 %90, 1061109567
  %92 = add nuw nsw i32 %89, %91
  %93 = and i32 %83, 50529027
  %94 = add nuw nsw i32 %93, 33686018
  %95 = and i32 %86, 50529027
  %96 = add nuw nsw i32 %94, %95
  %97 = getelementptr inbounds i8, i8* %76, i64 %12
  br label %98

98:                                               ; preds = %98, %87
  %99 = phi i8* [ %124, %98 ], [ %81, %87 ]
  %100 = phi i8* [ %146, %98 ], [ %97, %87 ]
  %101 = phi i32 [ %139, %98 ], [ %92, %87 ]
  %102 = phi i32 [ %134, %98 ], [ %96, %87 ]
  %103 = phi i32 [ %147, %98 ], [ 0, %87 ]
  %104 = getelementptr inbounds i8, i8* %99, i64 %2
  %105 = bitcast i8* %104 to i32*
  %106 = load i32, i32* %105, align 1
  %107 = getelementptr inbounds i8, i8* %104, i64 1
  %108 = bitcast i8* %107 to i32*
  %109 = load i32, i32* %108, align 1
  %110 = and i32 %106, 50529027
  %111 = and i32 %109, 50529027
  %112 = add nuw nsw i32 %111, %110
  %113 = lshr i32 %106, 2
  %114 = and i32 %113, 1061109567
  %115 = lshr i32 %109, 2
  %116 = and i32 %115, 1061109567
  %117 = add nuw nsw i32 %116, %114
  %118 = add nuw i32 %117, %101
  %119 = add nuw nsw i32 %112, %102
  %120 = lshr i32 %119, 2
  %121 = and i32 %120, 252645135
  %122 = add i32 %118, %121
  %123 = bitcast i8* %100 to i32*
  store i32 %122, i32* %123, align 4
  %124 = getelementptr inbounds i8, i8* %104, i64 %2
  %125 = getelementptr inbounds i8, i8* %100, i64 %2
  %126 = bitcast i8* %124 to i32*
  %127 = load i32, i32* %126, align 1
  %128 = getelementptr inbounds i8, i8* %124, i64 1
  %129 = bitcast i8* %128 to i32*
  %130 = load i32, i32* %129, align 1
  %131 = and i32 %127, 50529027
  %132 = and i32 %130, 50529027
  %133 = add nuw nsw i32 %131, 33686018
  %134 = add nuw nsw i32 %133, %132
  %135 = lshr i32 %127, 2
  %136 = and i32 %135, 1061109567
  %137 = lshr i32 %130, 2
  %138 = and i32 %137, 1061109567
  %139 = add nuw nsw i32 %138, %136
  %140 = add nuw i32 %139, %117
  %141 = add nuw nsw i32 %134, %112
  %142 = lshr i32 %141, 2
  %143 = and i32 %142, 117901063
  %144 = add i32 %140, %143
  %145 = bitcast i8* %125 to i32*
  store i32 %144, i32* %145, align 4
  %146 = getelementptr inbounds i8, i8* %125, i64 %2
  %147 = add nuw nsw i32 %103, 2
  %148 = icmp slt i32 %147, %3
  br i1 %148, label %98, label %149

149:                                              ; preds = %98, %4, %79
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @put_pixels4_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %73

6:                                                ; preds = %4
  %7 = add i32 %3, -1
  %8 = and i32 %3, 7
  %9 = icmp ult i32 %7, 7
  br i1 %9, label %58, label %10

10:                                               ; preds = %6
  %11 = sub i32 %3, %8
  br label %12

12:                                               ; preds = %12, %10
  %13 = phi i8* [ %0, %10 ], [ %55, %12 ]
  %14 = phi i8* [ %1, %10 ], [ %54, %12 ]
  %15 = phi i32 [ %11, %10 ], [ %56, %12 ]
  %16 = bitcast i8* %14 to i32*
  %17 = load i32, i32* %16, align 1
  %18 = bitcast i8* %13 to i32*
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %14, i64 %2
  %20 = getelementptr inbounds i8, i8* %13, i64 %2
  %21 = bitcast i8* %19 to i32*
  %22 = load i32, i32* %21, align 1
  %23 = bitcast i8* %20 to i32*
  store i32 %22, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %19, i64 %2
  %25 = getelementptr inbounds i8, i8* %20, i64 %2
  %26 = bitcast i8* %24 to i32*
  %27 = load i32, i32* %26, align 1
  %28 = bitcast i8* %25 to i32*
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %24, i64 %2
  %30 = getelementptr inbounds i8, i8* %25, i64 %2
  %31 = bitcast i8* %29 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = bitcast i8* %30 to i32*
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds i8, i8* %29, i64 %2
  %35 = getelementptr inbounds i8, i8* %30, i64 %2
  %36 = bitcast i8* %34 to i32*
  %37 = load i32, i32* %36, align 1
  %38 = bitcast i8* %35 to i32*
  store i32 %37, i32* %38, align 4
  %39 = getelementptr inbounds i8, i8* %34, i64 %2
  %40 = getelementptr inbounds i8, i8* %35, i64 %2
  %41 = bitcast i8* %39 to i32*
  %42 = load i32, i32* %41, align 1
  %43 = bitcast i8* %40 to i32*
  store i32 %42, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %39, i64 %2
  %45 = getelementptr inbounds i8, i8* %40, i64 %2
  %46 = bitcast i8* %44 to i32*
  %47 = load i32, i32* %46, align 1
  %48 = bitcast i8* %45 to i32*
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds i8, i8* %44, i64 %2
  %50 = getelementptr inbounds i8, i8* %45, i64 %2
  %51 = bitcast i8* %49 to i32*
  %52 = load i32, i32* %51, align 1
  %53 = bitcast i8* %50 to i32*
  store i32 %52, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %49, i64 %2
  %55 = getelementptr inbounds i8, i8* %50, i64 %2
  %56 = add i32 %15, -8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %12

58:                                               ; preds = %12, %6
  %59 = phi i8* [ %0, %6 ], [ %55, %12 ]
  %60 = phi i8* [ %1, %6 ], [ %54, %12 ]
  %61 = icmp eq i32 %8, 0
  br i1 %61, label %73, label %62

62:                                               ; preds = %58, %62
  %63 = phi i8* [ %70, %62 ], [ %59, %58 ]
  %64 = phi i8* [ %69, %62 ], [ %60, %58 ]
  %65 = phi i32 [ %71, %62 ], [ %8, %58 ]
  %66 = bitcast i8* %64 to i32*
  %67 = load i32, i32* %66, align 1
  %68 = bitcast i8* %63 to i32*
  store i32 %67, i32* %68, align 4
  %69 = getelementptr inbounds i8, i8* %64, i64 %2
  %70 = getelementptr inbounds i8, i8* %63, i64 %2
  %71 = add i32 %65, -1
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %62, !llvm.loop !6

73:                                               ; preds = %58, %62, %4
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @put_pixels4_x2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = getelementptr inbounds i8, i8* %1, i64 1
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %68

7:                                                ; preds = %4
  %8 = shl i64 %2, 32
  %9 = ashr exact i64 %8, 32
  %10 = zext i32 %3 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %3, 1
  br i1 %12, label %50, label %13

13:                                               ; preds = %7
  %14 = sub nsw i64 %10, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %47, %15 ]
  %17 = phi i64 [ %14, %13 ], [ %48, %15 ]
  %18 = mul nsw i64 %16, %9
  %19 = getelementptr inbounds i8, i8* %1, i64 %18
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 1
  %22 = getelementptr inbounds i8, i8* %5, i64 %18
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 1
  %25 = or i32 %24, %21
  %26 = xor i32 %24, %21
  %27 = lshr i32 %26, 1
  %28 = and i32 %27, 2139062143
  %29 = sub i32 %25, %28
  %30 = getelementptr inbounds i8, i8* %0, i64 %18
  %31 = bitcast i8* %30 to i32*
  store i32 %29, i32* %31, align 4
  %32 = or i64 %16, 1
  %33 = mul nsw i64 %32, %9
  %34 = getelementptr inbounds i8, i8* %1, i64 %33
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = getelementptr inbounds i8, i8* %5, i64 %33
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 1
  %40 = or i32 %39, %36
  %41 = xor i32 %39, %36
  %42 = lshr i32 %41, 1
  %43 = and i32 %42, 2139062143
  %44 = sub i32 %40, %43
  %45 = getelementptr inbounds i8, i8* %0, i64 %33
  %46 = bitcast i8* %45 to i32*
  store i32 %44, i32* %46, align 4
  %47 = add nuw nsw i64 %16, 2
  %48 = add i64 %17, -2
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %15

50:                                               ; preds = %15, %7
  %51 = phi i64 [ 0, %7 ], [ %47, %15 ]
  %52 = icmp eq i64 %11, 0
  br i1 %52, label %68, label %53

53:                                               ; preds = %50
  %54 = mul nsw i64 %51, %9
  %55 = getelementptr inbounds i8, i8* %1, i64 %54
  %56 = bitcast i8* %55 to i32*
  %57 = load i32, i32* %56, align 1
  %58 = getelementptr inbounds i8, i8* %5, i64 %54
  %59 = bitcast i8* %58 to i32*
  %60 = load i32, i32* %59, align 1
  %61 = or i32 %60, %57
  %62 = xor i32 %60, %57
  %63 = lshr i32 %62, 1
  %64 = and i32 %63, 2139062143
  %65 = sub i32 %61, %64
  %66 = getelementptr inbounds i8, i8* %0, i64 %54
  %67 = bitcast i8* %66 to i32*
  store i32 %65, i32* %67, align 4
  br label %68

68:                                               ; preds = %53, %50, %4
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @put_pixels4_y2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = getelementptr inbounds i8, i8* %1, i64 %2
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %68

7:                                                ; preds = %4
  %8 = shl i64 %2, 32
  %9 = ashr exact i64 %8, 32
  %10 = zext i32 %3 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %3, 1
  br i1 %12, label %50, label %13

13:                                               ; preds = %7
  %14 = sub nsw i64 %10, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %47, %15 ]
  %17 = phi i64 [ %14, %13 ], [ %48, %15 ]
  %18 = mul nsw i64 %16, %9
  %19 = getelementptr inbounds i8, i8* %1, i64 %18
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 1
  %22 = getelementptr inbounds i8, i8* %5, i64 %18
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 1
  %25 = or i32 %24, %21
  %26 = xor i32 %24, %21
  %27 = lshr i32 %26, 1
  %28 = and i32 %27, 2139062143
  %29 = sub i32 %25, %28
  %30 = getelementptr inbounds i8, i8* %0, i64 %18
  %31 = bitcast i8* %30 to i32*
  store i32 %29, i32* %31, align 4
  %32 = or i64 %16, 1
  %33 = mul nsw i64 %32, %9
  %34 = getelementptr inbounds i8, i8* %1, i64 %33
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = getelementptr inbounds i8, i8* %5, i64 %33
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 1
  %40 = or i32 %39, %36
  %41 = xor i32 %39, %36
  %42 = lshr i32 %41, 1
  %43 = and i32 %42, 2139062143
  %44 = sub i32 %40, %43
  %45 = getelementptr inbounds i8, i8* %0, i64 %33
  %46 = bitcast i8* %45 to i32*
  store i32 %44, i32* %46, align 4
  %47 = add nuw nsw i64 %16, 2
  %48 = add i64 %17, -2
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %15

50:                                               ; preds = %15, %7
  %51 = phi i64 [ 0, %7 ], [ %47, %15 ]
  %52 = icmp eq i64 %11, 0
  br i1 %52, label %68, label %53

53:                                               ; preds = %50
  %54 = mul nsw i64 %51, %9
  %55 = getelementptr inbounds i8, i8* %1, i64 %54
  %56 = bitcast i8* %55 to i32*
  %57 = load i32, i32* %56, align 1
  %58 = getelementptr inbounds i8, i8* %5, i64 %54
  %59 = bitcast i8* %58 to i32*
  %60 = load i32, i32* %59, align 1
  %61 = or i32 %60, %57
  %62 = xor i32 %60, %57
  %63 = lshr i32 %62, 1
  %64 = and i32 %63, 2139062143
  %65 = sub i32 %61, %64
  %66 = getelementptr inbounds i8, i8* %0, i64 %54
  %67 = bitcast i8* %66 to i32*
  store i32 %65, i32* %67, align 4
  br label %68

68:                                               ; preds = %53, %50, %4
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @put_pixels4_xy2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = bitcast i8* %1 to i32*
  %6 = load i32, i32* %5, align 1
  %7 = getelementptr inbounds i8, i8* %1, i64 1
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 1
  %10 = icmp sgt i32 %3, 0
  br i1 %10, label %11, label %72

11:                                               ; preds = %4
  %12 = lshr i32 %9, 2
  %13 = and i32 %12, 1061109567
  %14 = lshr i32 %6, 2
  %15 = and i32 %14, 1061109567
  %16 = add nuw nsw i32 %13, %15
  %17 = and i32 %6, 50529027
  %18 = add nuw nsw i32 %17, 33686018
  %19 = and i32 %9, 50529027
  %20 = add nuw nsw i32 %18, %19
  br label %21

21:                                               ; preds = %11, %21
  %22 = phi i8* [ %47, %21 ], [ %1, %11 ]
  %23 = phi i8* [ %69, %21 ], [ %0, %11 ]
  %24 = phi i32 [ %62, %21 ], [ %16, %11 ]
  %25 = phi i32 [ %57, %21 ], [ %20, %11 ]
  %26 = phi i32 [ %70, %21 ], [ 0, %11 ]
  %27 = getelementptr inbounds i8, i8* %22, i64 %2
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 1
  %30 = getelementptr inbounds i8, i8* %27, i64 1
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = and i32 %29, 50529027
  %34 = and i32 %32, 50529027
  %35 = add nuw nsw i32 %34, %33
  %36 = lshr i32 %29, 2
  %37 = and i32 %36, 1061109567
  %38 = lshr i32 %32, 2
  %39 = and i32 %38, 1061109567
  %40 = add nuw nsw i32 %39, %37
  %41 = add nuw i32 %40, %24
  %42 = add nuw nsw i32 %35, %25
  %43 = lshr i32 %42, 2
  %44 = and i32 %43, 252645135
  %45 = add i32 %41, %44
  %46 = bitcast i8* %23 to i32*
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds i8, i8* %27, i64 %2
  %48 = getelementptr inbounds i8, i8* %23, i64 %2
  %49 = bitcast i8* %47 to i32*
  %50 = load i32, i32* %49, align 1
  %51 = getelementptr inbounds i8, i8* %47, i64 1
  %52 = bitcast i8* %51 to i32*
  %53 = load i32, i32* %52, align 1
  %54 = and i32 %50, 50529027
  %55 = and i32 %53, 50529027
  %56 = add nuw nsw i32 %54, 33686018
  %57 = add nuw nsw i32 %56, %55
  %58 = lshr i32 %50, 2
  %59 = and i32 %58, 1061109567
  %60 = lshr i32 %53, 2
  %61 = and i32 %60, 1061109567
  %62 = add nuw nsw i32 %61, %59
  %63 = add nuw i32 %62, %40
  %64 = add nuw nsw i32 %57, %35
  %65 = lshr i32 %64, 2
  %66 = and i32 %65, 117901063
  %67 = add i32 %63, %66
  %68 = bitcast i8* %48 to i32*
  store i32 %67, i32* %68, align 4
  %69 = getelementptr inbounds i8, i8* %48, i64 %2
  %70 = add nuw nsw i32 %26, 2
  %71 = icmp slt i32 %70, %3
  br i1 %71, label %21, label %72

72:                                               ; preds = %21, %4
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @put_pixels2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %73

6:                                                ; preds = %4
  %7 = add i32 %3, -1
  %8 = and i32 %3, 7
  %9 = icmp ult i32 %7, 7
  br i1 %9, label %58, label %10

10:                                               ; preds = %6
  %11 = sub i32 %3, %8
  br label %12

12:                                               ; preds = %12, %10
  %13 = phi i8* [ %0, %10 ], [ %55, %12 ]
  %14 = phi i8* [ %1, %10 ], [ %54, %12 ]
  %15 = phi i32 [ %11, %10 ], [ %56, %12 ]
  %16 = bitcast i8* %14 to i16*
  %17 = load i16, i16* %16, align 1
  %18 = bitcast i8* %13 to i16*
  store i16 %17, i16* %18, align 2
  %19 = getelementptr inbounds i8, i8* %14, i64 %2
  %20 = getelementptr inbounds i8, i8* %13, i64 %2
  %21 = bitcast i8* %19 to i16*
  %22 = load i16, i16* %21, align 1
  %23 = bitcast i8* %20 to i16*
  store i16 %22, i16* %23, align 2
  %24 = getelementptr inbounds i8, i8* %19, i64 %2
  %25 = getelementptr inbounds i8, i8* %20, i64 %2
  %26 = bitcast i8* %24 to i16*
  %27 = load i16, i16* %26, align 1
  %28 = bitcast i8* %25 to i16*
  store i16 %27, i16* %28, align 2
  %29 = getelementptr inbounds i8, i8* %24, i64 %2
  %30 = getelementptr inbounds i8, i8* %25, i64 %2
  %31 = bitcast i8* %29 to i16*
  %32 = load i16, i16* %31, align 1
  %33 = bitcast i8* %30 to i16*
  store i16 %32, i16* %33, align 2
  %34 = getelementptr inbounds i8, i8* %29, i64 %2
  %35 = getelementptr inbounds i8, i8* %30, i64 %2
  %36 = bitcast i8* %34 to i16*
  %37 = load i16, i16* %36, align 1
  %38 = bitcast i8* %35 to i16*
  store i16 %37, i16* %38, align 2
  %39 = getelementptr inbounds i8, i8* %34, i64 %2
  %40 = getelementptr inbounds i8, i8* %35, i64 %2
  %41 = bitcast i8* %39 to i16*
  %42 = load i16, i16* %41, align 1
  %43 = bitcast i8* %40 to i16*
  store i16 %42, i16* %43, align 2
  %44 = getelementptr inbounds i8, i8* %39, i64 %2
  %45 = getelementptr inbounds i8, i8* %40, i64 %2
  %46 = bitcast i8* %44 to i16*
  %47 = load i16, i16* %46, align 1
  %48 = bitcast i8* %45 to i16*
  store i16 %47, i16* %48, align 2
  %49 = getelementptr inbounds i8, i8* %44, i64 %2
  %50 = getelementptr inbounds i8, i8* %45, i64 %2
  %51 = bitcast i8* %49 to i16*
  %52 = load i16, i16* %51, align 1
  %53 = bitcast i8* %50 to i16*
  store i16 %52, i16* %53, align 2
  %54 = getelementptr inbounds i8, i8* %49, i64 %2
  %55 = getelementptr inbounds i8, i8* %50, i64 %2
  %56 = add i32 %15, -8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %12

58:                                               ; preds = %12, %6
  %59 = phi i8* [ %0, %6 ], [ %55, %12 ]
  %60 = phi i8* [ %1, %6 ], [ %54, %12 ]
  %61 = icmp eq i32 %8, 0
  br i1 %61, label %73, label %62

62:                                               ; preds = %58, %62
  %63 = phi i8* [ %70, %62 ], [ %59, %58 ]
  %64 = phi i8* [ %69, %62 ], [ %60, %58 ]
  %65 = phi i32 [ %71, %62 ], [ %8, %58 ]
  %66 = bitcast i8* %64 to i16*
  %67 = load i16, i16* %66, align 1
  %68 = bitcast i8* %63 to i16*
  store i16 %67, i16* %68, align 2
  %69 = getelementptr inbounds i8, i8* %64, i64 %2
  %70 = getelementptr inbounds i8, i8* %63, i64 %2
  %71 = add i32 %65, -1
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %62, !llvm.loop !7

73:                                               ; preds = %58, %62, %4
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @put_pixels2_x2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = getelementptr inbounds i8, i8* %1, i64 1
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %68

7:                                                ; preds = %4
  %8 = shl i64 %2, 32
  %9 = ashr exact i64 %8, 32
  %10 = zext i32 %3 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %3, 1
  br i1 %12, label %50, label %13

13:                                               ; preds = %7
  %14 = sub nsw i64 %10, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %47, %15 ]
  %17 = phi i64 [ %14, %13 ], [ %48, %15 ]
  %18 = mul nsw i64 %16, %9
  %19 = getelementptr inbounds i8, i8* %1, i64 %18
  %20 = bitcast i8* %19 to i16*
  %21 = load i16, i16* %20, align 1
  %22 = getelementptr inbounds i8, i8* %5, i64 %18
  %23 = bitcast i8* %22 to i16*
  %24 = load i16, i16* %23, align 1
  %25 = or i16 %24, %21
  %26 = xor i16 %24, %21
  %27 = lshr i16 %26, 1
  %28 = and i16 %27, 32639
  %29 = sub i16 %25, %28
  %30 = getelementptr inbounds i8, i8* %0, i64 %18
  %31 = bitcast i8* %30 to i16*
  store i16 %29, i16* %31, align 2
  %32 = or i64 %16, 1
  %33 = mul nsw i64 %32, %9
  %34 = getelementptr inbounds i8, i8* %1, i64 %33
  %35 = bitcast i8* %34 to i16*
  %36 = load i16, i16* %35, align 1
  %37 = getelementptr inbounds i8, i8* %5, i64 %33
  %38 = bitcast i8* %37 to i16*
  %39 = load i16, i16* %38, align 1
  %40 = or i16 %39, %36
  %41 = xor i16 %39, %36
  %42 = lshr i16 %41, 1
  %43 = and i16 %42, 32639
  %44 = sub i16 %40, %43
  %45 = getelementptr inbounds i8, i8* %0, i64 %33
  %46 = bitcast i8* %45 to i16*
  store i16 %44, i16* %46, align 2
  %47 = add nuw nsw i64 %16, 2
  %48 = add i64 %17, -2
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %15

50:                                               ; preds = %15, %7
  %51 = phi i64 [ 0, %7 ], [ %47, %15 ]
  %52 = icmp eq i64 %11, 0
  br i1 %52, label %68, label %53

53:                                               ; preds = %50
  %54 = mul nsw i64 %51, %9
  %55 = getelementptr inbounds i8, i8* %1, i64 %54
  %56 = bitcast i8* %55 to i16*
  %57 = load i16, i16* %56, align 1
  %58 = getelementptr inbounds i8, i8* %5, i64 %54
  %59 = bitcast i8* %58 to i16*
  %60 = load i16, i16* %59, align 1
  %61 = or i16 %60, %57
  %62 = xor i16 %60, %57
  %63 = lshr i16 %62, 1
  %64 = and i16 %63, 32639
  %65 = sub i16 %61, %64
  %66 = getelementptr inbounds i8, i8* %0, i64 %54
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  br label %68

68:                                               ; preds = %53, %50, %4
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @put_pixels2_y2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = getelementptr inbounds i8, i8* %1, i64 %2
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %68

7:                                                ; preds = %4
  %8 = shl i64 %2, 32
  %9 = ashr exact i64 %8, 32
  %10 = zext i32 %3 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %3, 1
  br i1 %12, label %50, label %13

13:                                               ; preds = %7
  %14 = sub nsw i64 %10, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %47, %15 ]
  %17 = phi i64 [ %14, %13 ], [ %48, %15 ]
  %18 = mul nsw i64 %16, %9
  %19 = getelementptr inbounds i8, i8* %1, i64 %18
  %20 = bitcast i8* %19 to i16*
  %21 = load i16, i16* %20, align 1
  %22 = getelementptr inbounds i8, i8* %5, i64 %18
  %23 = bitcast i8* %22 to i16*
  %24 = load i16, i16* %23, align 1
  %25 = or i16 %24, %21
  %26 = xor i16 %24, %21
  %27 = lshr i16 %26, 1
  %28 = and i16 %27, 32639
  %29 = sub i16 %25, %28
  %30 = getelementptr inbounds i8, i8* %0, i64 %18
  %31 = bitcast i8* %30 to i16*
  store i16 %29, i16* %31, align 2
  %32 = or i64 %16, 1
  %33 = mul nsw i64 %32, %9
  %34 = getelementptr inbounds i8, i8* %1, i64 %33
  %35 = bitcast i8* %34 to i16*
  %36 = load i16, i16* %35, align 1
  %37 = getelementptr inbounds i8, i8* %5, i64 %33
  %38 = bitcast i8* %37 to i16*
  %39 = load i16, i16* %38, align 1
  %40 = or i16 %39, %36
  %41 = xor i16 %39, %36
  %42 = lshr i16 %41, 1
  %43 = and i16 %42, 32639
  %44 = sub i16 %40, %43
  %45 = getelementptr inbounds i8, i8* %0, i64 %33
  %46 = bitcast i8* %45 to i16*
  store i16 %44, i16* %46, align 2
  %47 = add nuw nsw i64 %16, 2
  %48 = add i64 %17, -2
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %15

50:                                               ; preds = %15, %7
  %51 = phi i64 [ 0, %7 ], [ %47, %15 ]
  %52 = icmp eq i64 %11, 0
  br i1 %52, label %68, label %53

53:                                               ; preds = %50
  %54 = mul nsw i64 %51, %9
  %55 = getelementptr inbounds i8, i8* %1, i64 %54
  %56 = bitcast i8* %55 to i16*
  %57 = load i16, i16* %56, align 1
  %58 = getelementptr inbounds i8, i8* %5, i64 %54
  %59 = bitcast i8* %58 to i16*
  %60 = load i16, i16* %59, align 1
  %61 = or i16 %60, %57
  %62 = xor i16 %60, %57
  %63 = lshr i16 %62, 1
  %64 = and i16 %63, 32639
  %65 = sub i16 %61, %64
  %66 = getelementptr inbounds i8, i8* %0, i64 %54
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  br label %68

68:                                               ; preds = %53, %50, %4
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @put_pixels2_xy2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = getelementptr inbounds i8, i8* %1, i64 1
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = add nuw nsw i32 %7, 2
  %9 = icmp sgt i32 %3, 0
  br i1 %9, label %10, label %65

10:                                               ; preds = %4
  %11 = getelementptr inbounds i8, i8* %1, i64 2
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = add nuw nsw i32 %8, %13
  %15 = load i8, i8* %1, align 1
  %16 = zext i8 %15 to i32
  %17 = add nuw nsw i32 %8, %16
  br label %18

18:                                               ; preds = %10, %18
  %19 = phi i8* [ %42, %18 ], [ %1, %10 ]
  %20 = phi i32 [ %54, %18 ], [ %14, %10 ]
  %21 = phi i32 [ %50, %18 ], [ %17, %10 ]
  %22 = phi i32 [ %63, %18 ], [ 0, %10 ]
  %23 = phi i8* [ %62, %18 ], [ %0, %10 ]
  %24 = getelementptr inbounds i8, i8* %19, i64 %2
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds i8, i8* %24, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = add nuw nsw i32 %29, %26
  %31 = getelementptr inbounds i8, i8* %24, i64 2
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = add nuw nsw i32 %33, %29
  %35 = add nuw nsw i32 %30, %21
  %36 = lshr i32 %35, 2
  %37 = trunc i32 %36 to i8
  store i8 %37, i8* %23, align 1
  %38 = add nuw nsw i32 %34, %20
  %39 = lshr i32 %38, 2
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds i8, i8* %23, i64 1
  store i8 %40, i8* %41, align 1
  %42 = getelementptr inbounds i8, i8* %24, i64 %2
  %43 = getelementptr inbounds i8, i8* %23, i64 %2
  %44 = load i8, i8* %42, align 1
  %45 = zext i8 %44 to i32
  %46 = getelementptr inbounds i8, i8* %42, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = add nuw nsw i32 %48, 2
  %50 = add nuw nsw i32 %49, %45
  %51 = getelementptr inbounds i8, i8* %42, i64 2
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = add nuw nsw i32 %49, %53
  %55 = add nuw nsw i32 %50, %30
  %56 = lshr i32 %55, 2
  %57 = trunc i32 %56 to i8
  store i8 %57, i8* %43, align 1
  %58 = add nuw nsw i32 %54, %34
  %59 = lshr i32 %58, 2
  %60 = trunc i32 %59 to i8
  %61 = getelementptr inbounds i8, i8* %43, i64 1
  store i8 %60, i8* %61, align 1
  %62 = getelementptr inbounds i8, i8* %43, i64 %2
  %63 = add nuw nsw i32 %22, 2
  %64 = icmp slt i32 %63, %3
  br i1 %64, label %18, label %65

65:                                               ; preds = %18, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_no_rnd_pixels16_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #1 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %152

6:                                                ; preds = %4
  %7 = add i32 %3, -1
  %8 = and i32 %3, 3
  %9 = icmp ult i32 %7, 3
  br i1 %9, label %58, label %10

10:                                               ; preds = %6
  %11 = sub i32 %3, %8
  br label %12

12:                                               ; preds = %12, %10
  %13 = phi i8* [ %0, %10 ], [ %55, %12 ]
  %14 = phi i8* [ %1, %10 ], [ %54, %12 ]
  %15 = phi i32 [ %11, %10 ], [ %56, %12 ]
  %16 = bitcast i8* %14 to i32*
  %17 = load i32, i32* %16, align 1
  %18 = bitcast i8* %13 to i32*
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %14, i64 4
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 1
  %22 = getelementptr inbounds i8, i8* %13, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %14, i64 %2
  %25 = getelementptr inbounds i8, i8* %13, i64 %2
  %26 = bitcast i8* %24 to i32*
  %27 = load i32, i32* %26, align 1
  %28 = bitcast i8* %25 to i32*
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %24, i64 4
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 1
  %32 = getelementptr inbounds i8, i8* %25, i64 4
  %33 = bitcast i8* %32 to i32*
  store i32 %31, i32* %33, align 4
  %34 = getelementptr inbounds i8, i8* %24, i64 %2
  %35 = getelementptr inbounds i8, i8* %25, i64 %2
  %36 = bitcast i8* %34 to i32*
  %37 = load i32, i32* %36, align 1
  %38 = bitcast i8* %35 to i32*
  store i32 %37, i32* %38, align 4
  %39 = getelementptr inbounds i8, i8* %34, i64 4
  %40 = bitcast i8* %39 to i32*
  %41 = load i32, i32* %40, align 1
  %42 = getelementptr inbounds i8, i8* %35, i64 4
  %43 = bitcast i8* %42 to i32*
  store i32 %41, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %34, i64 %2
  %45 = getelementptr inbounds i8, i8* %35, i64 %2
  %46 = bitcast i8* %44 to i32*
  %47 = load i32, i32* %46, align 1
  %48 = bitcast i8* %45 to i32*
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds i8, i8* %44, i64 4
  %50 = bitcast i8* %49 to i32*
  %51 = load i32, i32* %50, align 1
  %52 = getelementptr inbounds i8, i8* %45, i64 4
  %53 = bitcast i8* %52 to i32*
  store i32 %51, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %44, i64 %2
  %55 = getelementptr inbounds i8, i8* %45, i64 %2
  %56 = add i32 %15, -4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %12

58:                                               ; preds = %12, %6
  %59 = phi i8* [ %0, %6 ], [ %55, %12 ]
  %60 = phi i8* [ %1, %6 ], [ %54, %12 ]
  %61 = icmp eq i32 %8, 0
  br i1 %61, label %78, label %62

62:                                               ; preds = %58, %62
  %63 = phi i8* [ %75, %62 ], [ %59, %58 ]
  %64 = phi i8* [ %74, %62 ], [ %60, %58 ]
  %65 = phi i32 [ %76, %62 ], [ %8, %58 ]
  %66 = bitcast i8* %64 to i32*
  %67 = load i32, i32* %66, align 1
  %68 = bitcast i8* %63 to i32*
  store i32 %67, i32* %68, align 4
  %69 = getelementptr inbounds i8, i8* %64, i64 4
  %70 = bitcast i8* %69 to i32*
  %71 = load i32, i32* %70, align 1
  %72 = getelementptr inbounds i8, i8* %63, i64 4
  %73 = bitcast i8* %72 to i32*
  store i32 %71, i32* %73, align 4
  %74 = getelementptr inbounds i8, i8* %64, i64 %2
  %75 = getelementptr inbounds i8, i8* %63, i64 %2
  %76 = add i32 %65, -1
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %62, !llvm.loop !8

78:                                               ; preds = %62, %58
  %79 = getelementptr inbounds i8, i8* %1, i64 8
  %80 = getelementptr inbounds i8, i8* %0, i64 8
  %81 = add i32 %3, -1
  %82 = and i32 %3, 3
  %83 = icmp ult i32 %81, 3
  br i1 %83, label %132, label %84

84:                                               ; preds = %78
  %85 = sub i32 %3, %82
  br label %86

86:                                               ; preds = %86, %84
  %87 = phi i8* [ %80, %84 ], [ %129, %86 ]
  %88 = phi i8* [ %79, %84 ], [ %128, %86 ]
  %89 = phi i32 [ %85, %84 ], [ %130, %86 ]
  %90 = bitcast i8* %88 to i32*
  %91 = load i32, i32* %90, align 1
  %92 = bitcast i8* %87 to i32*
  store i32 %91, i32* %92, align 4
  %93 = getelementptr inbounds i8, i8* %88, i64 4
  %94 = bitcast i8* %93 to i32*
  %95 = load i32, i32* %94, align 1
  %96 = getelementptr inbounds i8, i8* %87, i64 4
  %97 = bitcast i8* %96 to i32*
  store i32 %95, i32* %97, align 4
  %98 = getelementptr inbounds i8, i8* %88, i64 %2
  %99 = getelementptr inbounds i8, i8* %87, i64 %2
  %100 = bitcast i8* %98 to i32*
  %101 = load i32, i32* %100, align 1
  %102 = bitcast i8* %99 to i32*
  store i32 %101, i32* %102, align 4
  %103 = getelementptr inbounds i8, i8* %98, i64 4
  %104 = bitcast i8* %103 to i32*
  %105 = load i32, i32* %104, align 1
  %106 = getelementptr inbounds i8, i8* %99, i64 4
  %107 = bitcast i8* %106 to i32*
  store i32 %105, i32* %107, align 4
  %108 = getelementptr inbounds i8, i8* %98, i64 %2
  %109 = getelementptr inbounds i8, i8* %99, i64 %2
  %110 = bitcast i8* %108 to i32*
  %111 = load i32, i32* %110, align 1
  %112 = bitcast i8* %109 to i32*
  store i32 %111, i32* %112, align 4
  %113 = getelementptr inbounds i8, i8* %108, i64 4
  %114 = bitcast i8* %113 to i32*
  %115 = load i32, i32* %114, align 1
  %116 = getelementptr inbounds i8, i8* %109, i64 4
  %117 = bitcast i8* %116 to i32*
  store i32 %115, i32* %117, align 4
  %118 = getelementptr inbounds i8, i8* %108, i64 %2
  %119 = getelementptr inbounds i8, i8* %109, i64 %2
  %120 = bitcast i8* %118 to i32*
  %121 = load i32, i32* %120, align 1
  %122 = bitcast i8* %119 to i32*
  store i32 %121, i32* %122, align 4
  %123 = getelementptr inbounds i8, i8* %118, i64 4
  %124 = bitcast i8* %123 to i32*
  %125 = load i32, i32* %124, align 1
  %126 = getelementptr inbounds i8, i8* %119, i64 4
  %127 = bitcast i8* %126 to i32*
  store i32 %125, i32* %127, align 4
  %128 = getelementptr inbounds i8, i8* %118, i64 %2
  %129 = getelementptr inbounds i8, i8* %119, i64 %2
  %130 = add i32 %89, -4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %86

132:                                              ; preds = %86, %78
  %133 = phi i8* [ %80, %78 ], [ %129, %86 ]
  %134 = phi i8* [ %79, %78 ], [ %128, %86 ]
  %135 = icmp eq i32 %82, 0
  br i1 %135, label %152, label %136

136:                                              ; preds = %132, %136
  %137 = phi i8* [ %149, %136 ], [ %133, %132 ]
  %138 = phi i8* [ %148, %136 ], [ %134, %132 ]
  %139 = phi i32 [ %150, %136 ], [ %82, %132 ]
  %140 = bitcast i8* %138 to i32*
  %141 = load i32, i32* %140, align 1
  %142 = bitcast i8* %137 to i32*
  store i32 %141, i32* %142, align 4
  %143 = getelementptr inbounds i8, i8* %138, i64 4
  %144 = bitcast i8* %143 to i32*
  %145 = load i32, i32* %144, align 1
  %146 = getelementptr inbounds i8, i8* %137, i64 4
  %147 = bitcast i8* %146 to i32*
  store i32 %145, i32* %147, align 4
  %148 = getelementptr inbounds i8, i8* %138, i64 %2
  %149 = getelementptr inbounds i8, i8* %137, i64 %2
  %150 = add i32 %139, -1
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %136, !llvm.loop !9

152:                                              ; preds = %132, %136, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_no_rnd_pixels16_x2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #1 {
  %5 = getelementptr inbounds i8, i8* %1, i64 1
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %79

7:                                                ; preds = %4
  %8 = shl i64 %2, 32
  %9 = ashr exact i64 %8, 32
  %10 = zext i32 %3 to i64
  br label %11

11:                                               ; preds = %11, %7
  %12 = phi i64 [ 0, %7 ], [ %41, %11 ]
  %13 = mul nsw i64 %12, %9
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 1
  %17 = getelementptr inbounds i8, i8* %5, i64 %13
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = and i32 %19, %16
  %21 = xor i32 %19, %16
  %22 = lshr i32 %21, 1
  %23 = and i32 %22, 2139062143
  %24 = add i32 %23, %20
  %25 = getelementptr inbounds i8, i8* %0, i64 %13
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 4
  %27 = add nsw i64 %13, 4
  %28 = getelementptr inbounds i8, i8* %1, i64 %27
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 1
  %31 = getelementptr inbounds i8, i8* %5, i64 %27
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 1
  %34 = and i32 %33, %30
  %35 = xor i32 %33, %30
  %36 = lshr i32 %35, 1
  %37 = and i32 %36, 2139062143
  %38 = add i32 %37, %34
  %39 = getelementptr inbounds i8, i8* %0, i64 %27
  %40 = bitcast i8* %39 to i32*
  store i32 %38, i32* %40, align 4
  %41 = add nuw nsw i64 %12, 1
  %42 = icmp eq i64 %41, %10
  br i1 %42, label %43, label %11

43:                                               ; preds = %11
  %44 = getelementptr inbounds i8, i8* %0, i64 8
  %45 = getelementptr inbounds i8, i8* %1, i64 8
  %46 = getelementptr inbounds i8, i8* %1, i64 9
  br label %47

47:                                               ; preds = %47, %43
  %48 = phi i64 [ 0, %43 ], [ %77, %47 ]
  %49 = mul nsw i64 %48, %9
  %50 = getelementptr inbounds i8, i8* %45, i64 %49
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %51, align 1
  %53 = getelementptr inbounds i8, i8* %46, i64 %49
  %54 = bitcast i8* %53 to i32*
  %55 = load i32, i32* %54, align 1
  %56 = and i32 %55, %52
  %57 = xor i32 %55, %52
  %58 = lshr i32 %57, 1
  %59 = and i32 %58, 2139062143
  %60 = add i32 %59, %56
  %61 = getelementptr inbounds i8, i8* %44, i64 %49
  %62 = bitcast i8* %61 to i32*
  store i32 %60, i32* %62, align 4
  %63 = add nsw i64 %49, 4
  %64 = getelementptr inbounds i8, i8* %45, i64 %63
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 1
  %67 = getelementptr inbounds i8, i8* %46, i64 %63
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %68, align 1
  %70 = and i32 %69, %66
  %71 = xor i32 %69, %66
  %72 = lshr i32 %71, 1
  %73 = and i32 %72, 2139062143
  %74 = add i32 %73, %70
  %75 = getelementptr inbounds i8, i8* %44, i64 %63
  %76 = bitcast i8* %75 to i32*
  store i32 %74, i32* %76, align 4
  %77 = add nuw nsw i64 %48, 1
  %78 = icmp eq i64 %77, %10
  br i1 %78, label %79, label %47

79:                                               ; preds = %47, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_no_rnd_pixels16_y2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #1 {
  %5 = getelementptr inbounds i8, i8* %1, i64 %2
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %79

7:                                                ; preds = %4
  %8 = shl i64 %2, 32
  %9 = ashr exact i64 %8, 32
  %10 = zext i32 %3 to i64
  br label %11

11:                                               ; preds = %11, %7
  %12 = phi i64 [ 0, %7 ], [ %41, %11 ]
  %13 = mul nsw i64 %12, %9
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 1
  %17 = getelementptr inbounds i8, i8* %5, i64 %13
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = and i32 %19, %16
  %21 = xor i32 %19, %16
  %22 = lshr i32 %21, 1
  %23 = and i32 %22, 2139062143
  %24 = add i32 %23, %20
  %25 = getelementptr inbounds i8, i8* %0, i64 %13
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 4
  %27 = add nsw i64 %13, 4
  %28 = getelementptr inbounds i8, i8* %1, i64 %27
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 1
  %31 = getelementptr inbounds i8, i8* %5, i64 %27
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 1
  %34 = and i32 %33, %30
  %35 = xor i32 %33, %30
  %36 = lshr i32 %35, 1
  %37 = and i32 %36, 2139062143
  %38 = add i32 %37, %34
  %39 = getelementptr inbounds i8, i8* %0, i64 %27
  %40 = bitcast i8* %39 to i32*
  store i32 %38, i32* %40, align 4
  %41 = add nuw nsw i64 %12, 1
  %42 = icmp eq i64 %41, %10
  br i1 %42, label %43, label %11

43:                                               ; preds = %11
  %44 = getelementptr inbounds i8, i8* %0, i64 8
  %45 = getelementptr inbounds i8, i8* %1, i64 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %2
  br label %47

47:                                               ; preds = %47, %43
  %48 = phi i64 [ 0, %43 ], [ %77, %47 ]
  %49 = mul nsw i64 %48, %9
  %50 = getelementptr inbounds i8, i8* %45, i64 %49
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %51, align 1
  %53 = getelementptr inbounds i8, i8* %46, i64 %49
  %54 = bitcast i8* %53 to i32*
  %55 = load i32, i32* %54, align 1
  %56 = and i32 %55, %52
  %57 = xor i32 %55, %52
  %58 = lshr i32 %57, 1
  %59 = and i32 %58, 2139062143
  %60 = add i32 %59, %56
  %61 = getelementptr inbounds i8, i8* %44, i64 %49
  %62 = bitcast i8* %61 to i32*
  store i32 %60, i32* %62, align 4
  %63 = add nsw i64 %49, 4
  %64 = getelementptr inbounds i8, i8* %45, i64 %63
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 1
  %67 = getelementptr inbounds i8, i8* %46, i64 %63
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %68, align 1
  %70 = and i32 %69, %66
  %71 = xor i32 %69, %66
  %72 = lshr i32 %71, 1
  %73 = and i32 %72, 2139062143
  %74 = add i32 %73, %70
  %75 = getelementptr inbounds i8, i8* %44, i64 %63
  %76 = bitcast i8* %75 to i32*
  store i32 %74, i32* %76, align 4
  %77 = add nuw nsw i64 %48, 1
  %78 = icmp eq i64 %77, %10
  br i1 %78, label %79, label %47

79:                                               ; preds = %47, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_no_rnd_pixels16_xy2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #1 {
  tail call void @put_no_rnd_pixels8_xy2_8_c(i8* %0, i8* %1, i64 %2, i32 %3)
  %5 = getelementptr inbounds i8, i8* %0, i64 8
  %6 = getelementptr inbounds i8, i8* %1, i64 8
  tail call void @put_no_rnd_pixels8_xy2_8_c(i8* %5, i8* %6, i64 %2, i32 %3)
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @put_no_rnd_pixels8_x2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = getelementptr inbounds i8, i8* %1, i64 1
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %43

7:                                                ; preds = %4
  %8 = shl i64 %2, 32
  %9 = ashr exact i64 %8, 32
  %10 = zext i32 %3 to i64
  br label %11

11:                                               ; preds = %11, %7
  %12 = phi i64 [ 0, %7 ], [ %41, %11 ]
  %13 = mul nsw i64 %12, %9
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 1
  %17 = getelementptr inbounds i8, i8* %5, i64 %13
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = and i32 %19, %16
  %21 = xor i32 %19, %16
  %22 = lshr i32 %21, 1
  %23 = and i32 %22, 2139062143
  %24 = add i32 %23, %20
  %25 = getelementptr inbounds i8, i8* %0, i64 %13
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 4
  %27 = add nsw i64 %13, 4
  %28 = getelementptr inbounds i8, i8* %1, i64 %27
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 1
  %31 = getelementptr inbounds i8, i8* %5, i64 %27
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 1
  %34 = and i32 %33, %30
  %35 = xor i32 %33, %30
  %36 = lshr i32 %35, 1
  %37 = and i32 %36, 2139062143
  %38 = add i32 %37, %34
  %39 = getelementptr inbounds i8, i8* %0, i64 %27
  %40 = bitcast i8* %39 to i32*
  store i32 %38, i32* %40, align 4
  %41 = add nuw nsw i64 %12, 1
  %42 = icmp eq i64 %41, %10
  br i1 %42, label %43, label %11

43:                                               ; preds = %11, %4
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @put_no_rnd_pixels8_y2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = getelementptr inbounds i8, i8* %1, i64 %2
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %43

7:                                                ; preds = %4
  %8 = shl i64 %2, 32
  %9 = ashr exact i64 %8, 32
  %10 = zext i32 %3 to i64
  br label %11

11:                                               ; preds = %11, %7
  %12 = phi i64 [ 0, %7 ], [ %41, %11 ]
  %13 = mul nsw i64 %12, %9
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 1
  %17 = getelementptr inbounds i8, i8* %5, i64 %13
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = and i32 %19, %16
  %21 = xor i32 %19, %16
  %22 = lshr i32 %21, 1
  %23 = and i32 %22, 2139062143
  %24 = add i32 %23, %20
  %25 = getelementptr inbounds i8, i8* %0, i64 %13
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 4
  %27 = add nsw i64 %13, 4
  %28 = getelementptr inbounds i8, i8* %1, i64 %27
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 1
  %31 = getelementptr inbounds i8, i8* %5, i64 %27
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 1
  %34 = and i32 %33, %30
  %35 = xor i32 %33, %30
  %36 = lshr i32 %35, 1
  %37 = and i32 %36, 2139062143
  %38 = add i32 %37, %34
  %39 = getelementptr inbounds i8, i8* %0, i64 %27
  %40 = bitcast i8* %39 to i32*
  store i32 %38, i32* %40, align 4
  %41 = add nuw nsw i64 %12, 1
  %42 = icmp eq i64 %41, %10
  br i1 %42, label %43, label %11

43:                                               ; preds = %11, %4
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @put_no_rnd_pixels8_xy2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = icmp sgt i32 %3, 0
  %6 = add nsw i32 %3, 1
  %7 = sext i32 %6 to i64
  %8 = mul nsw i64 %7, %2
  %9 = sub nsw i64 4, %8
  %10 = sext i32 %3 to i64
  %11 = mul nsw i64 %10, %2
  %12 = sub nsw i64 4, %11
  %13 = bitcast i8* %1 to i32*
  %14 = load i32, i32* %13, align 1
  %15 = getelementptr inbounds i8, i8* %1, i64 1
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 1
  br i1 %5, label %18, label %149

18:                                               ; preds = %4
  %19 = lshr i32 %17, 2
  %20 = and i32 %19, 1061109567
  %21 = lshr i32 %14, 2
  %22 = and i32 %21, 1061109567
  %23 = add nuw nsw i32 %20, %22
  %24 = and i32 %14, 50529027
  %25 = add nuw nsw i32 %24, 16843009
  %26 = and i32 %17, 50529027
  %27 = add nuw nsw i32 %25, %26
  br label %28

28:                                               ; preds = %18, %28
  %29 = phi i8* [ %54, %28 ], [ %1, %18 ]
  %30 = phi i8* [ %76, %28 ], [ %0, %18 ]
  %31 = phi i32 [ %69, %28 ], [ %23, %18 ]
  %32 = phi i32 [ %64, %28 ], [ %27, %18 ]
  %33 = phi i32 [ %77, %28 ], [ 0, %18 ]
  %34 = getelementptr inbounds i8, i8* %29, i64 %2
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = getelementptr inbounds i8, i8* %34, i64 1
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 1
  %40 = and i32 %36, 50529027
  %41 = and i32 %39, 50529027
  %42 = add nuw nsw i32 %41, %40
  %43 = lshr i32 %36, 2
  %44 = and i32 %43, 1061109567
  %45 = lshr i32 %39, 2
  %46 = and i32 %45, 1061109567
  %47 = add nuw nsw i32 %46, %44
  %48 = add nuw i32 %47, %31
  %49 = add nuw nsw i32 %42, %32
  %50 = lshr i32 %49, 2
  %51 = and i32 %50, 252645135
  %52 = add i32 %48, %51
  %53 = bitcast i8* %30 to i32*
  store i32 %52, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %34, i64 %2
  %55 = getelementptr inbounds i8, i8* %30, i64 %2
  %56 = bitcast i8* %54 to i32*
  %57 = load i32, i32* %56, align 1
  %58 = getelementptr inbounds i8, i8* %54, i64 1
  %59 = bitcast i8* %58 to i32*
  %60 = load i32, i32* %59, align 1
  %61 = and i32 %57, 50529027
  %62 = and i32 %60, 50529027
  %63 = add nuw nsw i32 %61, 16843009
  %64 = add nuw nsw i32 %63, %62
  %65 = lshr i32 %57, 2
  %66 = and i32 %65, 1061109567
  %67 = lshr i32 %60, 2
  %68 = and i32 %67, 1061109567
  %69 = add nuw nsw i32 %68, %66
  %70 = add nuw i32 %69, %47
  %71 = add nuw nsw i32 %64, %42
  %72 = lshr i32 %71, 2
  %73 = and i32 %72, 117901063
  %74 = add i32 %70, %73
  %75 = bitcast i8* %55 to i32*
  store i32 %74, i32* %75, align 4
  %76 = getelementptr inbounds i8, i8* %55, i64 %2
  %77 = add nuw nsw i32 %33, 2
  %78 = icmp slt i32 %77, %3
  br i1 %78, label %28, label %79

79:                                               ; preds = %28
  %80 = getelementptr inbounds i8, i8* %54, i64 %2
  %81 = getelementptr inbounds i8, i8* %80, i64 %9
  %82 = bitcast i8* %81 to i32*
  %83 = load i32, i32* %82, align 1
  %84 = getelementptr inbounds i8, i8* %81, i64 1
  %85 = bitcast i8* %84 to i32*
  %86 = load i32, i32* %85, align 1
  br i1 %5, label %87, label %149

87:                                               ; preds = %79
  %88 = lshr i32 %86, 2
  %89 = and i32 %88, 1061109567
  %90 = lshr i32 %83, 2
  %91 = and i32 %90, 1061109567
  %92 = add nuw nsw i32 %89, %91
  %93 = and i32 %83, 50529027
  %94 = add nuw nsw i32 %93, 16843009
  %95 = and i32 %86, 50529027
  %96 = add nuw nsw i32 %94, %95
  %97 = getelementptr inbounds i8, i8* %76, i64 %12
  br label %98

98:                                               ; preds = %98, %87
  %99 = phi i8* [ %124, %98 ], [ %81, %87 ]
  %100 = phi i8* [ %146, %98 ], [ %97, %87 ]
  %101 = phi i32 [ %139, %98 ], [ %92, %87 ]
  %102 = phi i32 [ %134, %98 ], [ %96, %87 ]
  %103 = phi i32 [ %147, %98 ], [ 0, %87 ]
  %104 = getelementptr inbounds i8, i8* %99, i64 %2
  %105 = bitcast i8* %104 to i32*
  %106 = load i32, i32* %105, align 1
  %107 = getelementptr inbounds i8, i8* %104, i64 1
  %108 = bitcast i8* %107 to i32*
  %109 = load i32, i32* %108, align 1
  %110 = and i32 %106, 50529027
  %111 = and i32 %109, 50529027
  %112 = add nuw nsw i32 %111, %110
  %113 = lshr i32 %106, 2
  %114 = and i32 %113, 1061109567
  %115 = lshr i32 %109, 2
  %116 = and i32 %115, 1061109567
  %117 = add nuw nsw i32 %116, %114
  %118 = add nuw i32 %117, %101
  %119 = add nuw nsw i32 %112, %102
  %120 = lshr i32 %119, 2
  %121 = and i32 %120, 252645135
  %122 = add i32 %118, %121
  %123 = bitcast i8* %100 to i32*
  store i32 %122, i32* %123, align 4
  %124 = getelementptr inbounds i8, i8* %104, i64 %2
  %125 = getelementptr inbounds i8, i8* %100, i64 %2
  %126 = bitcast i8* %124 to i32*
  %127 = load i32, i32* %126, align 1
  %128 = getelementptr inbounds i8, i8* %124, i64 1
  %129 = bitcast i8* %128 to i32*
  %130 = load i32, i32* %129, align 1
  %131 = and i32 %127, 50529027
  %132 = and i32 %130, 50529027
  %133 = add nuw nsw i32 %131, 16843009
  %134 = add nuw nsw i32 %133, %132
  %135 = lshr i32 %127, 2
  %136 = and i32 %135, 1061109567
  %137 = lshr i32 %130, 2
  %138 = and i32 %137, 1061109567
  %139 = add nuw nsw i32 %138, %136
  %140 = add nuw i32 %139, %117
  %141 = add nuw nsw i32 %134, %112
  %142 = lshr i32 %141, 2
  %143 = and i32 %142, 117901063
  %144 = add i32 %140, %143
  %145 = bitcast i8* %125 to i32*
  store i32 %144, i32* %145, align 4
  %146 = getelementptr inbounds i8, i8* %125, i64 %2
  %147 = add nuw nsw i32 %103, 2
  %148 = icmp slt i32 %147, %3
  br i1 %148, label %98, label %149

149:                                              ; preds = %98, %4, %79
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @avg_pixels16_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #1 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %65

6:                                                ; preds = %4, %6
  %7 = phi i32 [ %32, %6 ], [ 0, %4 ]
  %8 = phi i8* [ %31, %6 ], [ %0, %4 ]
  %9 = phi i8* [ %30, %6 ], [ %1, %4 ]
  %10 = bitcast i8* %8 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = bitcast i8* %9 to i32*
  %13 = load i32, i32* %12, align 1
  %14 = or i32 %13, %11
  %15 = xor i32 %13, %11
  %16 = lshr i32 %15, 1
  %17 = and i32 %16, 2139062143
  %18 = sub i32 %14, %17
  store i32 %18, i32* %10, align 4
  %19 = getelementptr inbounds i8, i8* %8, i64 4
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds i8, i8* %9, i64 4
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 1
  %25 = or i32 %24, %21
  %26 = xor i32 %24, %21
  %27 = lshr i32 %26, 1
  %28 = and i32 %27, 2139062143
  %29 = sub i32 %25, %28
  store i32 %29, i32* %20, align 4
  %30 = getelementptr inbounds i8, i8* %9, i64 %2
  %31 = getelementptr inbounds i8, i8* %8, i64 %2
  %32 = add nuw nsw i32 %7, 1
  %33 = icmp eq i32 %32, %3
  br i1 %33, label %34, label %6

34:                                               ; preds = %6
  %35 = getelementptr inbounds i8, i8* %1, i64 8
  %36 = getelementptr inbounds i8, i8* %0, i64 8
  br label %37

37:                                               ; preds = %34, %37
  %38 = phi i32 [ %63, %37 ], [ 0, %34 ]
  %39 = phi i8* [ %62, %37 ], [ %36, %34 ]
  %40 = phi i8* [ %61, %37 ], [ %35, %34 ]
  %41 = bitcast i8* %39 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = bitcast i8* %40 to i32*
  %44 = load i32, i32* %43, align 1
  %45 = or i32 %44, %42
  %46 = xor i32 %44, %42
  %47 = lshr i32 %46, 1
  %48 = and i32 %47, 2139062143
  %49 = sub i32 %45, %48
  store i32 %49, i32* %41, align 4
  %50 = getelementptr inbounds i8, i8* %39, i64 4
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds i8, i8* %40, i64 4
  %54 = bitcast i8* %53 to i32*
  %55 = load i32, i32* %54, align 1
  %56 = or i32 %55, %52
  %57 = xor i32 %55, %52
  %58 = lshr i32 %57, 1
  %59 = and i32 %58, 2139062143
  %60 = sub i32 %56, %59
  store i32 %60, i32* %51, align 4
  %61 = getelementptr inbounds i8, i8* %40, i64 %2
  %62 = getelementptr inbounds i8, i8* %39, i64 %2
  %63 = add nuw nsw i32 %38, 1
  %64 = icmp eq i32 %63, %3
  br i1 %64, label %65, label %37

65:                                               ; preds = %37, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @avg_pixels16_x2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #1 {
  %5 = getelementptr inbounds i8, i8* %1, i64 1
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %103

7:                                                ; preds = %4
  %8 = shl i64 %2, 32
  %9 = ashr exact i64 %8, 32
  %10 = zext i32 %3 to i64
  br label %11

11:                                               ; preds = %11, %7
  %12 = phi i64 [ 0, %7 ], [ %53, %11 ]
  %13 = mul nsw i64 %12, %9
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 1
  %17 = getelementptr inbounds i8, i8* %5, i64 %13
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = getelementptr inbounds i8, i8* %0, i64 %13
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = or i32 %19, %16
  %24 = xor i32 %19, %16
  %25 = lshr i32 %24, 1
  %26 = and i32 %25, 2139062143
  %27 = sub i32 %23, %26
  %28 = or i32 %27, %22
  %29 = xor i32 %27, %22
  %30 = lshr i32 %29, 1
  %31 = and i32 %30, 2139062143
  %32 = sub i32 %28, %31
  store i32 %32, i32* %21, align 4
  %33 = add nsw i64 %13, 4
  %34 = getelementptr inbounds i8, i8* %1, i64 %33
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = getelementptr inbounds i8, i8* %5, i64 %33
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 1
  %40 = getelementptr inbounds i8, i8* %0, i64 %33
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = or i32 %39, %36
  %44 = xor i32 %39, %36
  %45 = lshr i32 %44, 1
  %46 = and i32 %45, 2139062143
  %47 = sub i32 %43, %46
  %48 = or i32 %47, %42
  %49 = xor i32 %47, %42
  %50 = lshr i32 %49, 1
  %51 = and i32 %50, 2139062143
  %52 = sub i32 %48, %51
  store i32 %52, i32* %41, align 4
  %53 = add nuw nsw i64 %12, 1
  %54 = icmp eq i64 %53, %10
  br i1 %54, label %55, label %11

55:                                               ; preds = %11
  %56 = getelementptr inbounds i8, i8* %0, i64 8
  %57 = getelementptr inbounds i8, i8* %1, i64 8
  %58 = getelementptr inbounds i8, i8* %1, i64 9
  br label %59

59:                                               ; preds = %59, %55
  %60 = phi i64 [ 0, %55 ], [ %101, %59 ]
  %61 = mul nsw i64 %60, %9
  %62 = getelementptr inbounds i8, i8* %57, i64 %61
  %63 = bitcast i8* %62 to i32*
  %64 = load i32, i32* %63, align 1
  %65 = getelementptr inbounds i8, i8* %58, i64 %61
  %66 = bitcast i8* %65 to i32*
  %67 = load i32, i32* %66, align 1
  %68 = getelementptr inbounds i8, i8* %56, i64 %61
  %69 = bitcast i8* %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = or i32 %67, %64
  %72 = xor i32 %67, %64
  %73 = lshr i32 %72, 1
  %74 = and i32 %73, 2139062143
  %75 = sub i32 %71, %74
  %76 = or i32 %75, %70
  %77 = xor i32 %75, %70
  %78 = lshr i32 %77, 1
  %79 = and i32 %78, 2139062143
  %80 = sub i32 %76, %79
  store i32 %80, i32* %69, align 4
  %81 = add nsw i64 %61, 4
  %82 = getelementptr inbounds i8, i8* %57, i64 %81
  %83 = bitcast i8* %82 to i32*
  %84 = load i32, i32* %83, align 1
  %85 = getelementptr inbounds i8, i8* %58, i64 %81
  %86 = bitcast i8* %85 to i32*
  %87 = load i32, i32* %86, align 1
  %88 = getelementptr inbounds i8, i8* %56, i64 %81
  %89 = bitcast i8* %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = or i32 %87, %84
  %92 = xor i32 %87, %84
  %93 = lshr i32 %92, 1
  %94 = and i32 %93, 2139062143
  %95 = sub i32 %91, %94
  %96 = or i32 %95, %90
  %97 = xor i32 %95, %90
  %98 = lshr i32 %97, 1
  %99 = and i32 %98, 2139062143
  %100 = sub i32 %96, %99
  store i32 %100, i32* %89, align 4
  %101 = add nuw nsw i64 %60, 1
  %102 = icmp eq i64 %101, %10
  br i1 %102, label %103, label %59

103:                                              ; preds = %59, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @avg_pixels16_y2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #1 {
  %5 = getelementptr inbounds i8, i8* %1, i64 %2
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %103

7:                                                ; preds = %4
  %8 = shl i64 %2, 32
  %9 = ashr exact i64 %8, 32
  %10 = zext i32 %3 to i64
  br label %11

11:                                               ; preds = %11, %7
  %12 = phi i64 [ 0, %7 ], [ %53, %11 ]
  %13 = mul nsw i64 %12, %9
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 1
  %17 = getelementptr inbounds i8, i8* %5, i64 %13
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = getelementptr inbounds i8, i8* %0, i64 %13
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = or i32 %19, %16
  %24 = xor i32 %19, %16
  %25 = lshr i32 %24, 1
  %26 = and i32 %25, 2139062143
  %27 = sub i32 %23, %26
  %28 = or i32 %27, %22
  %29 = xor i32 %27, %22
  %30 = lshr i32 %29, 1
  %31 = and i32 %30, 2139062143
  %32 = sub i32 %28, %31
  store i32 %32, i32* %21, align 4
  %33 = add nsw i64 %13, 4
  %34 = getelementptr inbounds i8, i8* %1, i64 %33
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = getelementptr inbounds i8, i8* %5, i64 %33
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 1
  %40 = getelementptr inbounds i8, i8* %0, i64 %33
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = or i32 %39, %36
  %44 = xor i32 %39, %36
  %45 = lshr i32 %44, 1
  %46 = and i32 %45, 2139062143
  %47 = sub i32 %43, %46
  %48 = or i32 %47, %42
  %49 = xor i32 %47, %42
  %50 = lshr i32 %49, 1
  %51 = and i32 %50, 2139062143
  %52 = sub i32 %48, %51
  store i32 %52, i32* %41, align 4
  %53 = add nuw nsw i64 %12, 1
  %54 = icmp eq i64 %53, %10
  br i1 %54, label %55, label %11

55:                                               ; preds = %11
  %56 = getelementptr inbounds i8, i8* %0, i64 8
  %57 = getelementptr inbounds i8, i8* %1, i64 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %2
  br label %59

59:                                               ; preds = %59, %55
  %60 = phi i64 [ 0, %55 ], [ %101, %59 ]
  %61 = mul nsw i64 %60, %9
  %62 = getelementptr inbounds i8, i8* %57, i64 %61
  %63 = bitcast i8* %62 to i32*
  %64 = load i32, i32* %63, align 1
  %65 = getelementptr inbounds i8, i8* %58, i64 %61
  %66 = bitcast i8* %65 to i32*
  %67 = load i32, i32* %66, align 1
  %68 = getelementptr inbounds i8, i8* %56, i64 %61
  %69 = bitcast i8* %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = or i32 %67, %64
  %72 = xor i32 %67, %64
  %73 = lshr i32 %72, 1
  %74 = and i32 %73, 2139062143
  %75 = sub i32 %71, %74
  %76 = or i32 %75, %70
  %77 = xor i32 %75, %70
  %78 = lshr i32 %77, 1
  %79 = and i32 %78, 2139062143
  %80 = sub i32 %76, %79
  store i32 %80, i32* %69, align 4
  %81 = add nsw i64 %61, 4
  %82 = getelementptr inbounds i8, i8* %57, i64 %81
  %83 = bitcast i8* %82 to i32*
  %84 = load i32, i32* %83, align 1
  %85 = getelementptr inbounds i8, i8* %58, i64 %81
  %86 = bitcast i8* %85 to i32*
  %87 = load i32, i32* %86, align 1
  %88 = getelementptr inbounds i8, i8* %56, i64 %81
  %89 = bitcast i8* %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = or i32 %87, %84
  %92 = xor i32 %87, %84
  %93 = lshr i32 %92, 1
  %94 = and i32 %93, 2139062143
  %95 = sub i32 %91, %94
  %96 = or i32 %95, %90
  %97 = xor i32 %95, %90
  %98 = lshr i32 %97, 1
  %99 = and i32 %98, 2139062143
  %100 = sub i32 %96, %99
  store i32 %100, i32* %89, align 4
  %101 = add nuw nsw i64 %60, 1
  %102 = icmp eq i64 %101, %10
  br i1 %102, label %103, label %59

103:                                              ; preds = %59, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @avg_pixels16_xy2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #1 {
  tail call void @avg_pixels8_xy2_8_c(i8* %0, i8* %1, i64 %2, i32 %3)
  %5 = getelementptr inbounds i8, i8* %0, i64 8
  %6 = getelementptr inbounds i8, i8* %1, i64 8
  tail call void @avg_pixels8_xy2_8_c(i8* %5, i8* %6, i64 %2, i32 %3)
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @avg_pixels8_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %34

6:                                                ; preds = %4, %6
  %7 = phi i32 [ %32, %6 ], [ 0, %4 ]
  %8 = phi i8* [ %31, %6 ], [ %0, %4 ]
  %9 = phi i8* [ %30, %6 ], [ %1, %4 ]
  %10 = bitcast i8* %8 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = bitcast i8* %9 to i32*
  %13 = load i32, i32* %12, align 1
  %14 = or i32 %13, %11
  %15 = xor i32 %13, %11
  %16 = lshr i32 %15, 1
  %17 = and i32 %16, 2139062143
  %18 = sub i32 %14, %17
  store i32 %18, i32* %10, align 4
  %19 = getelementptr inbounds i8, i8* %8, i64 4
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds i8, i8* %9, i64 4
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 1
  %25 = or i32 %24, %21
  %26 = xor i32 %24, %21
  %27 = lshr i32 %26, 1
  %28 = and i32 %27, 2139062143
  %29 = sub i32 %25, %28
  store i32 %29, i32* %20, align 4
  %30 = getelementptr inbounds i8, i8* %9, i64 %2
  %31 = getelementptr inbounds i8, i8* %8, i64 %2
  %32 = add nuw nsw i32 %7, 1
  %33 = icmp eq i32 %32, %3
  br i1 %33, label %34, label %6

34:                                               ; preds = %6, %4
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @avg_pixels8_x2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = getelementptr inbounds i8, i8* %1, i64 1
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %55

7:                                                ; preds = %4
  %8 = shl i64 %2, 32
  %9 = ashr exact i64 %8, 32
  %10 = zext i32 %3 to i64
  br label %11

11:                                               ; preds = %11, %7
  %12 = phi i64 [ 0, %7 ], [ %53, %11 ]
  %13 = mul nsw i64 %12, %9
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 1
  %17 = getelementptr inbounds i8, i8* %5, i64 %13
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = getelementptr inbounds i8, i8* %0, i64 %13
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = or i32 %19, %16
  %24 = xor i32 %19, %16
  %25 = lshr i32 %24, 1
  %26 = and i32 %25, 2139062143
  %27 = sub i32 %23, %26
  %28 = or i32 %27, %22
  %29 = xor i32 %27, %22
  %30 = lshr i32 %29, 1
  %31 = and i32 %30, 2139062143
  %32 = sub i32 %28, %31
  store i32 %32, i32* %21, align 4
  %33 = add nsw i64 %13, 4
  %34 = getelementptr inbounds i8, i8* %1, i64 %33
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = getelementptr inbounds i8, i8* %5, i64 %33
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 1
  %40 = getelementptr inbounds i8, i8* %0, i64 %33
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = or i32 %39, %36
  %44 = xor i32 %39, %36
  %45 = lshr i32 %44, 1
  %46 = and i32 %45, 2139062143
  %47 = sub i32 %43, %46
  %48 = or i32 %47, %42
  %49 = xor i32 %47, %42
  %50 = lshr i32 %49, 1
  %51 = and i32 %50, 2139062143
  %52 = sub i32 %48, %51
  store i32 %52, i32* %41, align 4
  %53 = add nuw nsw i64 %12, 1
  %54 = icmp eq i64 %53, %10
  br i1 %54, label %55, label %11

55:                                               ; preds = %11, %4
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @avg_pixels8_y2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = getelementptr inbounds i8, i8* %1, i64 %2
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %55

7:                                                ; preds = %4
  %8 = shl i64 %2, 32
  %9 = ashr exact i64 %8, 32
  %10 = zext i32 %3 to i64
  br label %11

11:                                               ; preds = %11, %7
  %12 = phi i64 [ 0, %7 ], [ %53, %11 ]
  %13 = mul nsw i64 %12, %9
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 1
  %17 = getelementptr inbounds i8, i8* %5, i64 %13
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = getelementptr inbounds i8, i8* %0, i64 %13
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = or i32 %19, %16
  %24 = xor i32 %19, %16
  %25 = lshr i32 %24, 1
  %26 = and i32 %25, 2139062143
  %27 = sub i32 %23, %26
  %28 = or i32 %27, %22
  %29 = xor i32 %27, %22
  %30 = lshr i32 %29, 1
  %31 = and i32 %30, 2139062143
  %32 = sub i32 %28, %31
  store i32 %32, i32* %21, align 4
  %33 = add nsw i64 %13, 4
  %34 = getelementptr inbounds i8, i8* %1, i64 %33
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = getelementptr inbounds i8, i8* %5, i64 %33
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 1
  %40 = getelementptr inbounds i8, i8* %0, i64 %33
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = or i32 %39, %36
  %44 = xor i32 %39, %36
  %45 = lshr i32 %44, 1
  %46 = and i32 %45, 2139062143
  %47 = sub i32 %43, %46
  %48 = or i32 %47, %42
  %49 = xor i32 %47, %42
  %50 = lshr i32 %49, 1
  %51 = and i32 %50, 2139062143
  %52 = sub i32 %48, %51
  store i32 %52, i32* %41, align 4
  %53 = add nuw nsw i64 %12, 1
  %54 = icmp eq i64 %53, %10
  br i1 %54, label %55, label %11

55:                                               ; preds = %11, %4
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @avg_pixels8_xy2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = icmp sgt i32 %3, 0
  %6 = add nsw i32 %3, 1
  %7 = sext i32 %6 to i64
  %8 = mul nsw i64 %7, %2
  %9 = sub nsw i64 4, %8
  %10 = sext i32 %3 to i64
  %11 = mul nsw i64 %10, %2
  %12 = sub nsw i64 4, %11
  %13 = bitcast i8* %1 to i32*
  %14 = load i32, i32* %13, align 1
  %15 = getelementptr inbounds i8, i8* %1, i64 1
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 1
  br i1 %5, label %18, label %173

18:                                               ; preds = %4
  %19 = lshr i32 %17, 2
  %20 = and i32 %19, 1061109567
  %21 = lshr i32 %14, 2
  %22 = and i32 %21, 1061109567
  %23 = add nuw nsw i32 %20, %22
  %24 = and i32 %14, 50529027
  %25 = add nuw nsw i32 %24, 33686018
  %26 = and i32 %17, 50529027
  %27 = add nuw nsw i32 %25, %26
  br label %28

28:                                               ; preds = %18, %28
  %29 = phi i8* [ %60, %28 ], [ %1, %18 ]
  %30 = phi i8* [ %88, %28 ], [ %0, %18 ]
  %31 = phi i32 [ %75, %28 ], [ %23, %18 ]
  %32 = phi i32 [ %70, %28 ], [ %27, %18 ]
  %33 = phi i32 [ %89, %28 ], [ 0, %18 ]
  %34 = getelementptr inbounds i8, i8* %29, i64 %2
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = getelementptr inbounds i8, i8* %34, i64 1
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 1
  %40 = and i32 %36, 50529027
  %41 = and i32 %39, 50529027
  %42 = add nuw nsw i32 %41, %40
  %43 = lshr i32 %36, 2
  %44 = and i32 %43, 1061109567
  %45 = lshr i32 %39, 2
  %46 = and i32 %45, 1061109567
  %47 = add nuw nsw i32 %46, %44
  %48 = bitcast i8* %30 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = add nuw i32 %47, %31
  %51 = add nuw nsw i32 %42, %32
  %52 = lshr i32 %51, 2
  %53 = and i32 %52, 252645135
  %54 = add i32 %50, %53
  %55 = or i32 %54, %49
  %56 = xor i32 %54, %49
  %57 = lshr i32 %56, 1
  %58 = and i32 %57, 2139062143
  %59 = sub i32 %55, %58
  store i32 %59, i32* %48, align 4
  %60 = getelementptr inbounds i8, i8* %34, i64 %2
  %61 = getelementptr inbounds i8, i8* %30, i64 %2
  %62 = bitcast i8* %60 to i32*
  %63 = load i32, i32* %62, align 1
  %64 = getelementptr inbounds i8, i8* %60, i64 1
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 1
  %67 = and i32 %63, 50529027
  %68 = and i32 %66, 50529027
  %69 = add nuw nsw i32 %67, 33686018
  %70 = add nuw nsw i32 %69, %68
  %71 = lshr i32 %63, 2
  %72 = and i32 %71, 1061109567
  %73 = lshr i32 %66, 2
  %74 = and i32 %73, 1061109567
  %75 = add nuw nsw i32 %74, %72
  %76 = bitcast i8* %61 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = add nuw i32 %75, %47
  %79 = add nuw nsw i32 %70, %42
  %80 = lshr i32 %79, 2
  %81 = and i32 %80, 117901063
  %82 = add i32 %78, %81
  %83 = or i32 %82, %77
  %84 = xor i32 %82, %77
  %85 = lshr i32 %84, 1
  %86 = and i32 %85, 2139062143
  %87 = sub i32 %83, %86
  store i32 %87, i32* %76, align 4
  %88 = getelementptr inbounds i8, i8* %61, i64 %2
  %89 = add nuw nsw i32 %33, 2
  %90 = icmp slt i32 %89, %3
  br i1 %90, label %28, label %91

91:                                               ; preds = %28
  %92 = getelementptr inbounds i8, i8* %60, i64 %2
  %93 = getelementptr inbounds i8, i8* %92, i64 %9
  %94 = bitcast i8* %93 to i32*
  %95 = load i32, i32* %94, align 1
  %96 = getelementptr inbounds i8, i8* %93, i64 1
  %97 = bitcast i8* %96 to i32*
  %98 = load i32, i32* %97, align 1
  br i1 %5, label %99, label %173

99:                                               ; preds = %91
  %100 = lshr i32 %98, 2
  %101 = and i32 %100, 1061109567
  %102 = lshr i32 %95, 2
  %103 = and i32 %102, 1061109567
  %104 = add nuw nsw i32 %101, %103
  %105 = and i32 %95, 50529027
  %106 = add nuw nsw i32 %105, 33686018
  %107 = and i32 %98, 50529027
  %108 = add nuw nsw i32 %106, %107
  %109 = getelementptr inbounds i8, i8* %88, i64 %12
  br label %110

110:                                              ; preds = %110, %99
  %111 = phi i8* [ %142, %110 ], [ %93, %99 ]
  %112 = phi i8* [ %170, %110 ], [ %109, %99 ]
  %113 = phi i32 [ %157, %110 ], [ %104, %99 ]
  %114 = phi i32 [ %152, %110 ], [ %108, %99 ]
  %115 = phi i32 [ %171, %110 ], [ 0, %99 ]
  %116 = getelementptr inbounds i8, i8* %111, i64 %2
  %117 = bitcast i8* %116 to i32*
  %118 = load i32, i32* %117, align 1
  %119 = getelementptr inbounds i8, i8* %116, i64 1
  %120 = bitcast i8* %119 to i32*
  %121 = load i32, i32* %120, align 1
  %122 = and i32 %118, 50529027
  %123 = and i32 %121, 50529027
  %124 = add nuw nsw i32 %123, %122
  %125 = lshr i32 %118, 2
  %126 = and i32 %125, 1061109567
  %127 = lshr i32 %121, 2
  %128 = and i32 %127, 1061109567
  %129 = add nuw nsw i32 %128, %126
  %130 = bitcast i8* %112 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = add nuw i32 %129, %113
  %133 = add nuw nsw i32 %124, %114
  %134 = lshr i32 %133, 2
  %135 = and i32 %134, 252645135
  %136 = add i32 %132, %135
  %137 = or i32 %136, %131
  %138 = xor i32 %136, %131
  %139 = lshr i32 %138, 1
  %140 = and i32 %139, 2139062143
  %141 = sub i32 %137, %140
  store i32 %141, i32* %130, align 4
  %142 = getelementptr inbounds i8, i8* %116, i64 %2
  %143 = getelementptr inbounds i8, i8* %112, i64 %2
  %144 = bitcast i8* %142 to i32*
  %145 = load i32, i32* %144, align 1
  %146 = getelementptr inbounds i8, i8* %142, i64 1
  %147 = bitcast i8* %146 to i32*
  %148 = load i32, i32* %147, align 1
  %149 = and i32 %145, 50529027
  %150 = and i32 %148, 50529027
  %151 = add nuw nsw i32 %149, 33686018
  %152 = add nuw nsw i32 %151, %150
  %153 = lshr i32 %145, 2
  %154 = and i32 %153, 1061109567
  %155 = lshr i32 %148, 2
  %156 = and i32 %155, 1061109567
  %157 = add nuw nsw i32 %156, %154
  %158 = bitcast i8* %143 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = add nuw i32 %157, %129
  %161 = add nuw nsw i32 %152, %124
  %162 = lshr i32 %161, 2
  %163 = and i32 %162, 117901063
  %164 = add i32 %160, %163
  %165 = or i32 %164, %159
  %166 = xor i32 %164, %159
  %167 = lshr i32 %166, 1
  %168 = and i32 %167, 2139062143
  %169 = sub i32 %165, %168
  store i32 %169, i32* %158, align 4
  %170 = getelementptr inbounds i8, i8* %143, i64 %2
  %171 = add nuw nsw i32 %115, 2
  %172 = icmp slt i32 %171, %3
  br i1 %172, label %110, label %173

173:                                              ; preds = %110, %4, %91
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @avg_pixels4_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %53

6:                                                ; preds = %4
  %7 = and i32 %3, 1
  %8 = icmp eq i32 %3, 1
  br i1 %8, label %39, label %9

9:                                                ; preds = %6
  %10 = sub i32 %3, %7
  br label %11

11:                                               ; preds = %11, %9
  %12 = phi i8* [ %0, %9 ], [ %36, %11 ]
  %13 = phi i8* [ %1, %9 ], [ %35, %11 ]
  %14 = phi i32 [ %10, %9 ], [ %37, %11 ]
  %15 = bitcast i8* %12 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = bitcast i8* %13 to i32*
  %18 = load i32, i32* %17, align 1
  %19 = or i32 %18, %16
  %20 = xor i32 %18, %16
  %21 = lshr i32 %20, 1
  %22 = and i32 %21, 2139062143
  %23 = sub i32 %19, %22
  store i32 %23, i32* %15, align 4
  %24 = getelementptr inbounds i8, i8* %13, i64 %2
  %25 = getelementptr inbounds i8, i8* %12, i64 %2
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = bitcast i8* %24 to i32*
  %29 = load i32, i32* %28, align 1
  %30 = or i32 %29, %27
  %31 = xor i32 %29, %27
  %32 = lshr i32 %31, 1
  %33 = and i32 %32, 2139062143
  %34 = sub i32 %30, %33
  store i32 %34, i32* %26, align 4
  %35 = getelementptr inbounds i8, i8* %24, i64 %2
  %36 = getelementptr inbounds i8, i8* %25, i64 %2
  %37 = add i32 %14, -2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %11

39:                                               ; preds = %11, %6
  %40 = phi i8* [ %0, %6 ], [ %36, %11 ]
  %41 = phi i8* [ %1, %6 ], [ %35, %11 ]
  %42 = icmp eq i32 %7, 0
  br i1 %42, label %53, label %43

43:                                               ; preds = %39
  %44 = bitcast i8* %40 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = bitcast i8* %41 to i32*
  %47 = load i32, i32* %46, align 1
  %48 = or i32 %47, %45
  %49 = xor i32 %47, %45
  %50 = lshr i32 %49, 1
  %51 = and i32 %50, 2139062143
  %52 = sub i32 %48, %51
  store i32 %52, i32* %44, align 4
  br label %53

53:                                               ; preds = %43, %39, %4
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @avg_pixels4_x2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = getelementptr inbounds i8, i8* %1, i64 1
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %35

7:                                                ; preds = %4
  %8 = shl i64 %2, 32
  %9 = ashr exact i64 %8, 32
  %10 = zext i32 %3 to i64
  br label %11

11:                                               ; preds = %11, %7
  %12 = phi i64 [ 0, %7 ], [ %33, %11 ]
  %13 = mul nsw i64 %12, %9
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 1
  %17 = getelementptr inbounds i8, i8* %5, i64 %13
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = getelementptr inbounds i8, i8* %0, i64 %13
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = or i32 %19, %16
  %24 = xor i32 %19, %16
  %25 = lshr i32 %24, 1
  %26 = and i32 %25, 2139062143
  %27 = sub i32 %23, %26
  %28 = or i32 %27, %22
  %29 = xor i32 %27, %22
  %30 = lshr i32 %29, 1
  %31 = and i32 %30, 2139062143
  %32 = sub i32 %28, %31
  store i32 %32, i32* %21, align 4
  %33 = add nuw nsw i64 %12, 1
  %34 = icmp eq i64 %33, %10
  br i1 %34, label %35, label %11

35:                                               ; preds = %11, %4
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @avg_pixels4_y2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = getelementptr inbounds i8, i8* %1, i64 %2
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %35

7:                                                ; preds = %4
  %8 = shl i64 %2, 32
  %9 = ashr exact i64 %8, 32
  %10 = zext i32 %3 to i64
  br label %11

11:                                               ; preds = %11, %7
  %12 = phi i64 [ 0, %7 ], [ %33, %11 ]
  %13 = mul nsw i64 %12, %9
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 1
  %17 = getelementptr inbounds i8, i8* %5, i64 %13
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = getelementptr inbounds i8, i8* %0, i64 %13
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = or i32 %19, %16
  %24 = xor i32 %19, %16
  %25 = lshr i32 %24, 1
  %26 = and i32 %25, 2139062143
  %27 = sub i32 %23, %26
  %28 = or i32 %27, %22
  %29 = xor i32 %27, %22
  %30 = lshr i32 %29, 1
  %31 = and i32 %30, 2139062143
  %32 = sub i32 %28, %31
  store i32 %32, i32* %21, align 4
  %33 = add nuw nsw i64 %12, 1
  %34 = icmp eq i64 %33, %10
  br i1 %34, label %35, label %11

35:                                               ; preds = %11, %4
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @avg_pixels4_xy2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = bitcast i8* %1 to i32*
  %6 = load i32, i32* %5, align 1
  %7 = getelementptr inbounds i8, i8* %1, i64 1
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 1
  %10 = icmp sgt i32 %3, 0
  br i1 %10, label %11, label %84

11:                                               ; preds = %4
  %12 = lshr i32 %9, 2
  %13 = and i32 %12, 1061109567
  %14 = lshr i32 %6, 2
  %15 = and i32 %14, 1061109567
  %16 = add nuw nsw i32 %13, %15
  %17 = and i32 %6, 50529027
  %18 = add nuw nsw i32 %17, 33686018
  %19 = and i32 %9, 50529027
  %20 = add nuw nsw i32 %18, %19
  br label %21

21:                                               ; preds = %11, %21
  %22 = phi i8* [ %53, %21 ], [ %1, %11 ]
  %23 = phi i8* [ %81, %21 ], [ %0, %11 ]
  %24 = phi i32 [ %68, %21 ], [ %16, %11 ]
  %25 = phi i32 [ %63, %21 ], [ %20, %11 ]
  %26 = phi i32 [ %82, %21 ], [ 0, %11 ]
  %27 = getelementptr inbounds i8, i8* %22, i64 %2
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 1
  %30 = getelementptr inbounds i8, i8* %27, i64 1
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = and i32 %29, 50529027
  %34 = and i32 %32, 50529027
  %35 = add nuw nsw i32 %34, %33
  %36 = lshr i32 %29, 2
  %37 = and i32 %36, 1061109567
  %38 = lshr i32 %32, 2
  %39 = and i32 %38, 1061109567
  %40 = add nuw nsw i32 %39, %37
  %41 = bitcast i8* %23 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = add nuw i32 %40, %24
  %44 = add nuw nsw i32 %35, %25
  %45 = lshr i32 %44, 2
  %46 = and i32 %45, 252645135
  %47 = add i32 %43, %46
  %48 = or i32 %47, %42
  %49 = xor i32 %47, %42
  %50 = lshr i32 %49, 1
  %51 = and i32 %50, 2139062143
  %52 = sub i32 %48, %51
  store i32 %52, i32* %41, align 4
  %53 = getelementptr inbounds i8, i8* %27, i64 %2
  %54 = getelementptr inbounds i8, i8* %23, i64 %2
  %55 = bitcast i8* %53 to i32*
  %56 = load i32, i32* %55, align 1
  %57 = getelementptr inbounds i8, i8* %53, i64 1
  %58 = bitcast i8* %57 to i32*
  %59 = load i32, i32* %58, align 1
  %60 = and i32 %56, 50529027
  %61 = and i32 %59, 50529027
  %62 = add nuw nsw i32 %60, 33686018
  %63 = add nuw nsw i32 %62, %61
  %64 = lshr i32 %56, 2
  %65 = and i32 %64, 1061109567
  %66 = lshr i32 %59, 2
  %67 = and i32 %66, 1061109567
  %68 = add nuw nsw i32 %67, %65
  %69 = bitcast i8* %54 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = add nuw i32 %68, %40
  %72 = add nuw nsw i32 %63, %35
  %73 = lshr i32 %72, 2
  %74 = and i32 %73, 117901063
  %75 = add i32 %71, %74
  %76 = or i32 %75, %70
  %77 = xor i32 %75, %70
  %78 = lshr i32 %77, 1
  %79 = and i32 %78, 2139062143
  %80 = sub i32 %76, %79
  store i32 %80, i32* %69, align 4
  %81 = getelementptr inbounds i8, i8* %54, i64 %2
  %82 = add nuw nsw i32 %26, 2
  %83 = icmp slt i32 %82, %3
  br i1 %83, label %21, label %84

84:                                               ; preds = %21, %4
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @avg_pixels2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %53

6:                                                ; preds = %4
  %7 = and i32 %3, 1
  %8 = icmp eq i32 %3, 1
  br i1 %8, label %39, label %9

9:                                                ; preds = %6
  %10 = sub i32 %3, %7
  br label %11

11:                                               ; preds = %11, %9
  %12 = phi i8* [ %0, %9 ], [ %36, %11 ]
  %13 = phi i8* [ %1, %9 ], [ %35, %11 ]
  %14 = phi i32 [ %10, %9 ], [ %37, %11 ]
  %15 = bitcast i8* %12 to i16*
  %16 = load i16, i16* %15, align 2
  %17 = bitcast i8* %13 to i16*
  %18 = load i16, i16* %17, align 1
  %19 = or i16 %18, %16
  %20 = xor i16 %18, %16
  %21 = lshr i16 %20, 1
  %22 = and i16 %21, 32639
  %23 = sub i16 %19, %22
  store i16 %23, i16* %15, align 2
  %24 = getelementptr inbounds i8, i8* %13, i64 %2
  %25 = getelementptr inbounds i8, i8* %12, i64 %2
  %26 = bitcast i8* %25 to i16*
  %27 = load i16, i16* %26, align 2
  %28 = bitcast i8* %24 to i16*
  %29 = load i16, i16* %28, align 1
  %30 = or i16 %29, %27
  %31 = xor i16 %29, %27
  %32 = lshr i16 %31, 1
  %33 = and i16 %32, 32639
  %34 = sub i16 %30, %33
  store i16 %34, i16* %26, align 2
  %35 = getelementptr inbounds i8, i8* %24, i64 %2
  %36 = getelementptr inbounds i8, i8* %25, i64 %2
  %37 = add i32 %14, -2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %11

39:                                               ; preds = %11, %6
  %40 = phi i8* [ %0, %6 ], [ %36, %11 ]
  %41 = phi i8* [ %1, %6 ], [ %35, %11 ]
  %42 = icmp eq i32 %7, 0
  br i1 %42, label %53, label %43

43:                                               ; preds = %39
  %44 = bitcast i8* %40 to i16*
  %45 = load i16, i16* %44, align 2
  %46 = bitcast i8* %41 to i16*
  %47 = load i16, i16* %46, align 1
  %48 = or i16 %47, %45
  %49 = xor i16 %47, %45
  %50 = lshr i16 %49, 1
  %51 = and i16 %50, 32639
  %52 = sub i16 %48, %51
  store i16 %52, i16* %44, align 2
  br label %53

53:                                               ; preds = %43, %39, %4
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @avg_pixels2_x2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = getelementptr inbounds i8, i8* %1, i64 1
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %39

7:                                                ; preds = %4
  %8 = shl i64 %2, 32
  %9 = ashr exact i64 %8, 32
  %10 = zext i32 %3 to i64
  br label %11

11:                                               ; preds = %11, %7
  %12 = phi i64 [ 0, %7 ], [ %37, %11 ]
  %13 = mul nsw i64 %12, %9
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = bitcast i8* %14 to i16*
  %16 = load i16, i16* %15, align 1
  %17 = getelementptr inbounds i8, i8* %5, i64 %13
  %18 = bitcast i8* %17 to i16*
  %19 = load i16, i16* %18, align 1
  %20 = getelementptr inbounds i8, i8* %0, i64 %13
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = zext i16 %22 to i32
  %24 = or i16 %19, %16
  %25 = zext i16 %24 to i32
  %26 = xor i16 %19, %16
  %27 = lshr i16 %26, 1
  %28 = and i16 %27, 32639
  %29 = zext i16 %28 to i32
  %30 = sub nsw i32 %25, %29
  %31 = or i32 %30, %23
  %32 = xor i32 %30, %23
  %33 = lshr i32 %32, 1
  %34 = and i32 %33, 32639
  %35 = sub nsw i32 %31, %34
  %36 = trunc i32 %35 to i16
  store i16 %36, i16* %21, align 2
  %37 = add nuw nsw i64 %12, 1
  %38 = icmp eq i64 %37, %10
  br i1 %38, label %39, label %11

39:                                               ; preds = %11, %4
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @avg_pixels2_y2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = getelementptr inbounds i8, i8* %1, i64 %2
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %39

7:                                                ; preds = %4
  %8 = shl i64 %2, 32
  %9 = ashr exact i64 %8, 32
  %10 = zext i32 %3 to i64
  br label %11

11:                                               ; preds = %11, %7
  %12 = phi i64 [ 0, %7 ], [ %37, %11 ]
  %13 = mul nsw i64 %12, %9
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = bitcast i8* %14 to i16*
  %16 = load i16, i16* %15, align 1
  %17 = getelementptr inbounds i8, i8* %5, i64 %13
  %18 = bitcast i8* %17 to i16*
  %19 = load i16, i16* %18, align 1
  %20 = getelementptr inbounds i8, i8* %0, i64 %13
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = zext i16 %22 to i32
  %24 = or i16 %19, %16
  %25 = zext i16 %24 to i32
  %26 = xor i16 %19, %16
  %27 = lshr i16 %26, 1
  %28 = and i16 %27, 32639
  %29 = zext i16 %28 to i32
  %30 = sub nsw i32 %25, %29
  %31 = or i32 %30, %23
  %32 = xor i32 %30, %23
  %33 = lshr i32 %32, 1
  %34 = and i32 %33, 32639
  %35 = sub nsw i32 %31, %34
  %36 = trunc i32 %35 to i16
  store i16 %36, i16* %21, align 2
  %37 = add nuw nsw i64 %12, 1
  %38 = icmp eq i64 %37, %10
  br i1 %38, label %39, label %11

39:                                               ; preds = %11, %4
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @avg_pixels2_xy2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #2 {
  %5 = getelementptr inbounds i8, i8* %1, i64 1
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = add nuw nsw i32 %7, 2
  %9 = icmp sgt i32 %3, 0
  br i1 %9, label %10, label %65

10:                                               ; preds = %4
  %11 = getelementptr inbounds i8, i8* %1, i64 2
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = add nuw nsw i32 %8, %13
  %15 = load i8, i8* %1, align 1
  %16 = zext i8 %15 to i32
  %17 = add nuw nsw i32 %8, %16
  br label %18

18:                                               ; preds = %10, %18
  %19 = phi i8* [ %42, %18 ], [ %1, %10 ]
  %20 = phi i32 [ %54, %18 ], [ %14, %10 ]
  %21 = phi i32 [ %50, %18 ], [ %17, %10 ]
  %22 = phi i32 [ %63, %18 ], [ 0, %10 ]
  %23 = phi i8* [ %62, %18 ], [ %0, %10 ]
  %24 = getelementptr inbounds i8, i8* %19, i64 %2
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds i8, i8* %24, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = add nuw nsw i32 %29, %26
  %31 = getelementptr inbounds i8, i8* %24, i64 2
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = add nuw nsw i32 %33, %29
  %35 = add nuw nsw i32 %30, %21
  %36 = lshr i32 %35, 2
  %37 = trunc i32 %36 to i8
  store i8 %37, i8* %23, align 1
  %38 = add nuw nsw i32 %34, %20
  %39 = lshr i32 %38, 2
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds i8, i8* %23, i64 1
  store i8 %40, i8* %41, align 1
  %42 = getelementptr inbounds i8, i8* %24, i64 %2
  %43 = getelementptr inbounds i8, i8* %23, i64 %2
  %44 = load i8, i8* %42, align 1
  %45 = zext i8 %44 to i32
  %46 = getelementptr inbounds i8, i8* %42, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = add nuw nsw i32 %48, 2
  %50 = add nuw nsw i32 %49, %45
  %51 = getelementptr inbounds i8, i8* %42, i64 2
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = add nuw nsw i32 %49, %53
  %55 = add nuw nsw i32 %50, %30
  %56 = lshr i32 %55, 2
  %57 = trunc i32 %56 to i8
  store i8 %57, i8* %43, align 1
  %58 = add nuw nsw i32 %54, %34
  %59 = lshr i32 %58, 2
  %60 = trunc i32 %59 to i8
  %61 = getelementptr inbounds i8, i8* %43, i64 1
  store i8 %60, i8* %61, align 1
  %62 = getelementptr inbounds i8, i8* %43, i64 %2
  %63 = add nuw nsw i32 %22, 2
  %64 = icmp slt i32 %63, %3
  br i1 %64, label %18, label %65

65:                                               ; preds = %18, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @avg_no_rnd_pixels16_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #1 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %65

6:                                                ; preds = %4, %6
  %7 = phi i32 [ %32, %6 ], [ 0, %4 ]
  %8 = phi i8* [ %31, %6 ], [ %0, %4 ]
  %9 = phi i8* [ %30, %6 ], [ %1, %4 ]
  %10 = bitcast i8* %8 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = bitcast i8* %9 to i32*
  %13 = load i32, i32* %12, align 1
  %14 = or i32 %13, %11
  %15 = xor i32 %13, %11
  %16 = lshr i32 %15, 1
  %17 = and i32 %16, 2139062143
  %18 = sub i32 %14, %17
  store i32 %18, i32* %10, align 4
  %19 = getelementptr inbounds i8, i8* %8, i64 4
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds i8, i8* %9, i64 4
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 1
  %25 = or i32 %24, %21
  %26 = xor i32 %24, %21
  %27 = lshr i32 %26, 1
  %28 = and i32 %27, 2139062143
  %29 = sub i32 %25, %28
  store i32 %29, i32* %20, align 4
  %30 = getelementptr inbounds i8, i8* %9, i64 %2
  %31 = getelementptr inbounds i8, i8* %8, i64 %2
  %32 = add nuw nsw i32 %7, 1
  %33 = icmp eq i32 %32, %3
  br i1 %33, label %34, label %6

34:                                               ; preds = %6
  %35 = getelementptr inbounds i8, i8* %1, i64 8
  %36 = getelementptr inbounds i8, i8* %0, i64 8
  br label %37

37:                                               ; preds = %34, %37
  %38 = phi i32 [ %63, %37 ], [ 0, %34 ]
  %39 = phi i8* [ %62, %37 ], [ %36, %34 ]
  %40 = phi i8* [ %61, %37 ], [ %35, %34 ]
  %41 = bitcast i8* %39 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = bitcast i8* %40 to i32*
  %44 = load i32, i32* %43, align 1
  %45 = or i32 %44, %42
  %46 = xor i32 %44, %42
  %47 = lshr i32 %46, 1
  %48 = and i32 %47, 2139062143
  %49 = sub i32 %45, %48
  store i32 %49, i32* %41, align 4
  %50 = getelementptr inbounds i8, i8* %39, i64 4
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds i8, i8* %40, i64 4
  %54 = bitcast i8* %53 to i32*
  %55 = load i32, i32* %54, align 1
  %56 = or i32 %55, %52
  %57 = xor i32 %55, %52
  %58 = lshr i32 %57, 1
  %59 = and i32 %58, 2139062143
  %60 = sub i32 %56, %59
  store i32 %60, i32* %51, align 4
  %61 = getelementptr inbounds i8, i8* %40, i64 %2
  %62 = getelementptr inbounds i8, i8* %39, i64 %2
  %63 = add nuw nsw i32 %38, 1
  %64 = icmp eq i32 %63, %3
  br i1 %64, label %65, label %37

65:                                               ; preds = %37, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @avg_no_rnd_pixels16_x2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #1 {
  %5 = getelementptr inbounds i8, i8* %1, i64 1
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %103

7:                                                ; preds = %4
  %8 = shl i64 %2, 32
  %9 = ashr exact i64 %8, 32
  %10 = zext i32 %3 to i64
  br label %11

11:                                               ; preds = %11, %7
  %12 = phi i64 [ 0, %7 ], [ %53, %11 ]
  %13 = mul nsw i64 %12, %9
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 1
  %17 = getelementptr inbounds i8, i8* %5, i64 %13
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = getelementptr inbounds i8, i8* %0, i64 %13
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %19, %16
  %24 = xor i32 %19, %16
  %25 = lshr i32 %24, 1
  %26 = and i32 %25, 2139062143
  %27 = add i32 %26, %23
  %28 = or i32 %27, %22
  %29 = xor i32 %27, %22
  %30 = lshr i32 %29, 1
  %31 = and i32 %30, 2139062143
  %32 = sub i32 %28, %31
  store i32 %32, i32* %21, align 4
  %33 = add nsw i64 %13, 4
  %34 = getelementptr inbounds i8, i8* %1, i64 %33
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = getelementptr inbounds i8, i8* %5, i64 %33
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 1
  %40 = getelementptr inbounds i8, i8* %0, i64 %33
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %39, %36
  %44 = xor i32 %39, %36
  %45 = lshr i32 %44, 1
  %46 = and i32 %45, 2139062143
  %47 = add i32 %46, %43
  %48 = or i32 %47, %42
  %49 = xor i32 %47, %42
  %50 = lshr i32 %49, 1
  %51 = and i32 %50, 2139062143
  %52 = sub i32 %48, %51
  store i32 %52, i32* %41, align 4
  %53 = add nuw nsw i64 %12, 1
  %54 = icmp eq i64 %53, %10
  br i1 %54, label %55, label %11

55:                                               ; preds = %11
  %56 = getelementptr inbounds i8, i8* %0, i64 8
  %57 = getelementptr inbounds i8, i8* %1, i64 8
  %58 = getelementptr inbounds i8, i8* %1, i64 9
  br label %59

59:                                               ; preds = %59, %55
  %60 = phi i64 [ 0, %55 ], [ %101, %59 ]
  %61 = mul nsw i64 %60, %9
  %62 = getelementptr inbounds i8, i8* %57, i64 %61
  %63 = bitcast i8* %62 to i32*
  %64 = load i32, i32* %63, align 1
  %65 = getelementptr inbounds i8, i8* %58, i64 %61
  %66 = bitcast i8* %65 to i32*
  %67 = load i32, i32* %66, align 1
  %68 = getelementptr inbounds i8, i8* %56, i64 %61
  %69 = bitcast i8* %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = and i32 %67, %64
  %72 = xor i32 %67, %64
  %73 = lshr i32 %72, 1
  %74 = and i32 %73, 2139062143
  %75 = add i32 %74, %71
  %76 = or i32 %75, %70
  %77 = xor i32 %75, %70
  %78 = lshr i32 %77, 1
  %79 = and i32 %78, 2139062143
  %80 = sub i32 %76, %79
  store i32 %80, i32* %69, align 4
  %81 = add nsw i64 %61, 4
  %82 = getelementptr inbounds i8, i8* %57, i64 %81
  %83 = bitcast i8* %82 to i32*
  %84 = load i32, i32* %83, align 1
  %85 = getelementptr inbounds i8, i8* %58, i64 %81
  %86 = bitcast i8* %85 to i32*
  %87 = load i32, i32* %86, align 1
  %88 = getelementptr inbounds i8, i8* %56, i64 %81
  %89 = bitcast i8* %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i32 %87, %84
  %92 = xor i32 %87, %84
  %93 = lshr i32 %92, 1
  %94 = and i32 %93, 2139062143
  %95 = add i32 %94, %91
  %96 = or i32 %95, %90
  %97 = xor i32 %95, %90
  %98 = lshr i32 %97, 1
  %99 = and i32 %98, 2139062143
  %100 = sub i32 %96, %99
  store i32 %100, i32* %89, align 4
  %101 = add nuw nsw i64 %60, 1
  %102 = icmp eq i64 %101, %10
  br i1 %102, label %103, label %59

103:                                              ; preds = %59, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @avg_no_rnd_pixels16_y2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #1 {
  %5 = getelementptr inbounds i8, i8* %1, i64 %2
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %103

7:                                                ; preds = %4
  %8 = shl i64 %2, 32
  %9 = ashr exact i64 %8, 32
  %10 = zext i32 %3 to i64
  br label %11

11:                                               ; preds = %11, %7
  %12 = phi i64 [ 0, %7 ], [ %53, %11 ]
  %13 = mul nsw i64 %12, %9
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 1
  %17 = getelementptr inbounds i8, i8* %5, i64 %13
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = getelementptr inbounds i8, i8* %0, i64 %13
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %19, %16
  %24 = xor i32 %19, %16
  %25 = lshr i32 %24, 1
  %26 = and i32 %25, 2139062143
  %27 = add i32 %26, %23
  %28 = or i32 %27, %22
  %29 = xor i32 %27, %22
  %30 = lshr i32 %29, 1
  %31 = and i32 %30, 2139062143
  %32 = sub i32 %28, %31
  store i32 %32, i32* %21, align 4
  %33 = add nsw i64 %13, 4
  %34 = getelementptr inbounds i8, i8* %1, i64 %33
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = getelementptr inbounds i8, i8* %5, i64 %33
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 1
  %40 = getelementptr inbounds i8, i8* %0, i64 %33
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %39, %36
  %44 = xor i32 %39, %36
  %45 = lshr i32 %44, 1
  %46 = and i32 %45, 2139062143
  %47 = add i32 %46, %43
  %48 = or i32 %47, %42
  %49 = xor i32 %47, %42
  %50 = lshr i32 %49, 1
  %51 = and i32 %50, 2139062143
  %52 = sub i32 %48, %51
  store i32 %52, i32* %41, align 4
  %53 = add nuw nsw i64 %12, 1
  %54 = icmp eq i64 %53, %10
  br i1 %54, label %55, label %11

55:                                               ; preds = %11
  %56 = getelementptr inbounds i8, i8* %0, i64 8
  %57 = getelementptr inbounds i8, i8* %1, i64 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %2
  br label %59

59:                                               ; preds = %59, %55
  %60 = phi i64 [ 0, %55 ], [ %101, %59 ]
  %61 = mul nsw i64 %60, %9
  %62 = getelementptr inbounds i8, i8* %57, i64 %61
  %63 = bitcast i8* %62 to i32*
  %64 = load i32, i32* %63, align 1
  %65 = getelementptr inbounds i8, i8* %58, i64 %61
  %66 = bitcast i8* %65 to i32*
  %67 = load i32, i32* %66, align 1
  %68 = getelementptr inbounds i8, i8* %56, i64 %61
  %69 = bitcast i8* %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = and i32 %67, %64
  %72 = xor i32 %67, %64
  %73 = lshr i32 %72, 1
  %74 = and i32 %73, 2139062143
  %75 = add i32 %74, %71
  %76 = or i32 %75, %70
  %77 = xor i32 %75, %70
  %78 = lshr i32 %77, 1
  %79 = and i32 %78, 2139062143
  %80 = sub i32 %76, %79
  store i32 %80, i32* %69, align 4
  %81 = add nsw i64 %61, 4
  %82 = getelementptr inbounds i8, i8* %57, i64 %81
  %83 = bitcast i8* %82 to i32*
  %84 = load i32, i32* %83, align 1
  %85 = getelementptr inbounds i8, i8* %58, i64 %81
  %86 = bitcast i8* %85 to i32*
  %87 = load i32, i32* %86, align 1
  %88 = getelementptr inbounds i8, i8* %56, i64 %81
  %89 = bitcast i8* %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i32 %87, %84
  %92 = xor i32 %87, %84
  %93 = lshr i32 %92, 1
  %94 = and i32 %93, 2139062143
  %95 = add i32 %94, %91
  %96 = or i32 %95, %90
  %97 = xor i32 %95, %90
  %98 = lshr i32 %97, 1
  %99 = and i32 %98, 2139062143
  %100 = sub i32 %96, %99
  store i32 %100, i32* %89, align 4
  %101 = add nuw nsw i64 %60, 1
  %102 = icmp eq i64 %101, %10
  br i1 %102, label %103, label %59

103:                                              ; preds = %59, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @avg_no_rnd_pixels16_xy2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) #1 {
  tail call fastcc void @avg_no_rnd_pixels8_xy2_8_c(i8* %0, i8* %1, i64 %2, i32 %3)
  %5 = getelementptr inbounds i8, i8* %0, i64 8
  %6 = getelementptr inbounds i8, i8* %1, i64 8
  tail call fastcc void @avg_no_rnd_pixels8_xy2_8_c(i8* %5, i8* %6, i64 %2, i32 %3)
  ret void
}

declare void @ff_hpeldsp_init_x86(%struct.HpelDSPContext*, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal fastcc void @avg_no_rnd_pixels8_xy2_8_c(i8* nocapture, i8* nocapture readonly, i64, i32) unnamed_addr #2 {
  %5 = icmp sgt i32 %3, 0
  %6 = add nsw i32 %3, 1
  %7 = sext i32 %6 to i64
  %8 = mul nsw i64 %7, %2
  %9 = sub nsw i64 4, %8
  %10 = sext i32 %3 to i64
  %11 = mul nsw i64 %10, %2
  %12 = sub nsw i64 4, %11
  %13 = bitcast i8* %1 to i32*
  %14 = load i32, i32* %13, align 1
  %15 = getelementptr inbounds i8, i8* %1, i64 1
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 1
  br i1 %5, label %18, label %173

18:                                               ; preds = %4
  %19 = lshr i32 %17, 2
  %20 = and i32 %19, 1061109567
  %21 = lshr i32 %14, 2
  %22 = and i32 %21, 1061109567
  %23 = add nuw nsw i32 %20, %22
  %24 = and i32 %14, 50529027
  %25 = add nuw nsw i32 %24, 16843009
  %26 = and i32 %17, 50529027
  %27 = add nuw nsw i32 %25, %26
  br label %28

28:                                               ; preds = %18, %28
  %29 = phi i8* [ %60, %28 ], [ %1, %18 ]
  %30 = phi i8* [ %88, %28 ], [ %0, %18 ]
  %31 = phi i32 [ %75, %28 ], [ %23, %18 ]
  %32 = phi i32 [ %70, %28 ], [ %27, %18 ]
  %33 = phi i32 [ %89, %28 ], [ 0, %18 ]
  %34 = getelementptr inbounds i8, i8* %29, i64 %2
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = getelementptr inbounds i8, i8* %34, i64 1
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 1
  %40 = and i32 %36, 50529027
  %41 = and i32 %39, 50529027
  %42 = add nuw nsw i32 %41, %40
  %43 = lshr i32 %36, 2
  %44 = and i32 %43, 1061109567
  %45 = lshr i32 %39, 2
  %46 = and i32 %45, 1061109567
  %47 = add nuw nsw i32 %46, %44
  %48 = bitcast i8* %30 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = add nuw i32 %47, %31
  %51 = add nuw nsw i32 %42, %32
  %52 = lshr i32 %51, 2
  %53 = and i32 %52, 252645135
  %54 = add i32 %50, %53
  %55 = or i32 %54, %49
  %56 = xor i32 %54, %49
  %57 = lshr i32 %56, 1
  %58 = and i32 %57, 2139062143
  %59 = sub i32 %55, %58
  store i32 %59, i32* %48, align 4
  %60 = getelementptr inbounds i8, i8* %34, i64 %2
  %61 = getelementptr inbounds i8, i8* %30, i64 %2
  %62 = bitcast i8* %60 to i32*
  %63 = load i32, i32* %62, align 1
  %64 = getelementptr inbounds i8, i8* %60, i64 1
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 1
  %67 = and i32 %63, 50529027
  %68 = and i32 %66, 50529027
  %69 = add nuw nsw i32 %67, 16843009
  %70 = add nuw nsw i32 %69, %68
  %71 = lshr i32 %63, 2
  %72 = and i32 %71, 1061109567
  %73 = lshr i32 %66, 2
  %74 = and i32 %73, 1061109567
  %75 = add nuw nsw i32 %74, %72
  %76 = bitcast i8* %61 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = add nuw i32 %75, %47
  %79 = add nuw nsw i32 %70, %42
  %80 = lshr i32 %79, 2
  %81 = and i32 %80, 117901063
  %82 = add i32 %78, %81
  %83 = or i32 %82, %77
  %84 = xor i32 %82, %77
  %85 = lshr i32 %84, 1
  %86 = and i32 %85, 2139062143
  %87 = sub i32 %83, %86
  store i32 %87, i32* %76, align 4
  %88 = getelementptr inbounds i8, i8* %61, i64 %2
  %89 = add nuw nsw i32 %33, 2
  %90 = icmp slt i32 %89, %3
  br i1 %90, label %28, label %91

91:                                               ; preds = %28
  %92 = getelementptr inbounds i8, i8* %60, i64 %2
  %93 = getelementptr inbounds i8, i8* %92, i64 %9
  %94 = bitcast i8* %93 to i32*
  %95 = load i32, i32* %94, align 1
  %96 = getelementptr inbounds i8, i8* %93, i64 1
  %97 = bitcast i8* %96 to i32*
  %98 = load i32, i32* %97, align 1
  br i1 %5, label %99, label %173

99:                                               ; preds = %91
  %100 = lshr i32 %98, 2
  %101 = and i32 %100, 1061109567
  %102 = lshr i32 %95, 2
  %103 = and i32 %102, 1061109567
  %104 = add nuw nsw i32 %101, %103
  %105 = and i32 %95, 50529027
  %106 = add nuw nsw i32 %105, 16843009
  %107 = and i32 %98, 50529027
  %108 = add nuw nsw i32 %106, %107
  %109 = getelementptr inbounds i8, i8* %88, i64 %12
  br label %110

110:                                              ; preds = %110, %99
  %111 = phi i8* [ %142, %110 ], [ %93, %99 ]
  %112 = phi i8* [ %170, %110 ], [ %109, %99 ]
  %113 = phi i32 [ %157, %110 ], [ %104, %99 ]
  %114 = phi i32 [ %152, %110 ], [ %108, %99 ]
  %115 = phi i32 [ %171, %110 ], [ 0, %99 ]
  %116 = getelementptr inbounds i8, i8* %111, i64 %2
  %117 = bitcast i8* %116 to i32*
  %118 = load i32, i32* %117, align 1
  %119 = getelementptr inbounds i8, i8* %116, i64 1
  %120 = bitcast i8* %119 to i32*
  %121 = load i32, i32* %120, align 1
  %122 = and i32 %118, 50529027
  %123 = and i32 %121, 50529027
  %124 = add nuw nsw i32 %123, %122
  %125 = lshr i32 %118, 2
  %126 = and i32 %125, 1061109567
  %127 = lshr i32 %121, 2
  %128 = and i32 %127, 1061109567
  %129 = add nuw nsw i32 %128, %126
  %130 = bitcast i8* %112 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = add nuw i32 %129, %113
  %133 = add nuw nsw i32 %124, %114
  %134 = lshr i32 %133, 2
  %135 = and i32 %134, 252645135
  %136 = add i32 %132, %135
  %137 = or i32 %136, %131
  %138 = xor i32 %136, %131
  %139 = lshr i32 %138, 1
  %140 = and i32 %139, 2139062143
  %141 = sub i32 %137, %140
  store i32 %141, i32* %130, align 4
  %142 = getelementptr inbounds i8, i8* %116, i64 %2
  %143 = getelementptr inbounds i8, i8* %112, i64 %2
  %144 = bitcast i8* %142 to i32*
  %145 = load i32, i32* %144, align 1
  %146 = getelementptr inbounds i8, i8* %142, i64 1
  %147 = bitcast i8* %146 to i32*
  %148 = load i32, i32* %147, align 1
  %149 = and i32 %145, 50529027
  %150 = and i32 %148, 50529027
  %151 = add nuw nsw i32 %149, 16843009
  %152 = add nuw nsw i32 %151, %150
  %153 = lshr i32 %145, 2
  %154 = and i32 %153, 1061109567
  %155 = lshr i32 %148, 2
  %156 = and i32 %155, 1061109567
  %157 = add nuw nsw i32 %156, %154
  %158 = bitcast i8* %143 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = add nuw i32 %157, %129
  %161 = add nuw nsw i32 %152, %124
  %162 = lshr i32 %161, 2
  %163 = and i32 %162, 117901063
  %164 = add i32 %160, %163
  %165 = or i32 %164, %159
  %166 = xor i32 %164, %159
  %167 = lshr i32 %166, 1
  %168 = and i32 %167, 2139062143
  %169 = sub i32 %165, %168
  store i32 %169, i32* %158, align 4
  %170 = getelementptr inbounds i8, i8* %143, i64 %2
  %171 = add nuw nsw i32 %115, 2
  %172 = icmp slt i32 %171, %3
  br i1 %172, label %110, label %173

173:                                              ; preds = %110, %4, %91
  ret void
}

attributes #0 = { cold nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { inlinehint nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !3}
