; ModuleID = '../../device/gamepad/public/cpp/gamepad.cc'
source_filename = "../../device/gamepad/public/cpp/gamepad.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.device::Gamepad" = type <{ i8, i8, [128 x i16], [2 x i8], i64, i32, i32, [16 x double], i32, [32 x %"class.device::GamepadButton"], %"class.device::GamepadHapticActuator", i32, %"class.device::GamepadPose", i32, i32, i8, [3 x i8] }>
%"class.device::GamepadButton" = type <{ i8, i8, i8, i8, double }>
%"class.device::GamepadHapticActuator" = type { i8, i32 }
%"class.device::GamepadPose" = type { i8, i8, i8, %"class.device::GamepadQuaternion", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector" }
%"class.device::GamepadQuaternion" = type { i8, float, float, float, float }
%"class.device::GamepadVector" = type { i8, float, float, float }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }

@_ZN6device13GamepadButton30kDefaultButtonPressedThresholdE = hidden local_unnamed_addr constant float 0x3FBE1E1E20000000, align 4
@_ZN6device21GamepadHapticActuator24kMaxEffectDurationMillisE = hidden local_unnamed_addr constant double 5.000000e+03, align 8
@_ZN6device7Gamepad12kIdLengthCapE = hidden local_unnamed_addr constant i64 128, align 8
@_ZN6device7Gamepad14kAxesLengthCapE = hidden local_unnamed_addr constant i64 16, align 8
@_ZN6device7Gamepad17kButtonsLengthCapE = hidden local_unnamed_addr constant i64 32, align 8

@_ZN6device7GamepadC1Ev = hidden unnamed_addr alias void (%"class.device::Gamepad"*), void (%"class.device::Gamepad"*)* @_ZN6device7GamepadC2Ev
@_ZN6device7GamepadC1ERKS0_ = hidden unnamed_addr alias void (%"class.device::Gamepad"*, %"class.device::Gamepad"*), void (%"class.device::Gamepad"*, %"class.device::Gamepad"*)* @_ZN6device7GamepadC2ERKS0_

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6device7GamepadC2Ev(%"class.device::Gamepad"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 4
  store i64 0, i64* %3, align 4
  %4 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 5
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 8
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 0, i32 0
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 0, i32 1
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 0, i32 2
  store i8 0, i8* %8, align 2
  %9 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 0, i32 4
  store double 0.000000e+00, double* %9, align 4
  %10 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 1, i32 0
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 1, i32 1
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 1, i32 2
  store i8 0, i8* %12, align 2
  %13 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 1, i32 4
  store double 0.000000e+00, double* %13, align 4
  %14 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 2, i32 0
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 2, i32 2
  store i8 0, i8* %16, align 2
  %17 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 2, i32 4
  store double 0.000000e+00, double* %17, align 4
  %18 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 3, i32 0
  store i8 0, i8* %18, align 4
  %19 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 3, i32 1
  store i8 0, i8* %19, align 1
  %20 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 3, i32 2
  store i8 0, i8* %20, align 2
  %21 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 3, i32 4
  store double 0.000000e+00, double* %21, align 4
  %22 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 4, i32 0
  store i8 0, i8* %22, align 4
  %23 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 4, i32 1
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 4, i32 2
  store i8 0, i8* %24, align 2
  %25 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 4, i32 4
  store double 0.000000e+00, double* %25, align 4
  %26 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 5, i32 0
  store i8 0, i8* %26, align 4
  %27 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 5, i32 1
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 5, i32 2
  store i8 0, i8* %28, align 2
  %29 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 5, i32 4
  store double 0.000000e+00, double* %29, align 4
  %30 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 6, i32 0
  store i8 0, i8* %30, align 4
  %31 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 6, i32 1
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 6, i32 2
  store i8 0, i8* %32, align 2
  %33 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 6, i32 4
  store double 0.000000e+00, double* %33, align 4
  %34 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 7, i32 0
  store i8 0, i8* %34, align 4
  %35 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 7, i32 1
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 7, i32 2
  store i8 0, i8* %36, align 2
  %37 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 7, i32 4
  store double 0.000000e+00, double* %37, align 4
  %38 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 8, i32 0
  store i8 0, i8* %38, align 4
  %39 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 8, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 8, i32 2
  store i8 0, i8* %40, align 2
  %41 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 8, i32 4
  store double 0.000000e+00, double* %41, align 4
  %42 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 9, i32 0
  store i8 0, i8* %42, align 4
  %43 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 9, i32 1
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 9, i32 2
  store i8 0, i8* %44, align 2
  %45 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 9, i32 4
  store double 0.000000e+00, double* %45, align 4
  %46 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 10, i32 0
  store i8 0, i8* %46, align 4
  %47 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 10, i32 1
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 10, i32 2
  store i8 0, i8* %48, align 2
  %49 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 10, i32 4
  store double 0.000000e+00, double* %49, align 4
  %50 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 11, i32 0
  store i8 0, i8* %50, align 4
  %51 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 11, i32 1
  store i8 0, i8* %51, align 1
  %52 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 11, i32 2
  store i8 0, i8* %52, align 2
  %53 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 11, i32 4
  store double 0.000000e+00, double* %53, align 4
  %54 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 12, i32 0
  store i8 0, i8* %54, align 4
  %55 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 12, i32 1
  store i8 0, i8* %55, align 1
  %56 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 12, i32 2
  store i8 0, i8* %56, align 2
  %57 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 12, i32 4
  store double 0.000000e+00, double* %57, align 4
  %58 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 13, i32 0
  store i8 0, i8* %58, align 4
  %59 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 13, i32 1
  store i8 0, i8* %59, align 1
  %60 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 13, i32 2
  store i8 0, i8* %60, align 2
  %61 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 13, i32 4
  store double 0.000000e+00, double* %61, align 4
  %62 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 14, i32 0
  store i8 0, i8* %62, align 4
  %63 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 14, i32 1
  store i8 0, i8* %63, align 1
  %64 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 14, i32 2
  store i8 0, i8* %64, align 2
  %65 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 14, i32 4
  store double 0.000000e+00, double* %65, align 4
  %66 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 15, i32 0
  store i8 0, i8* %66, align 4
  %67 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 15, i32 1
  store i8 0, i8* %67, align 1
  %68 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 15, i32 2
  store i8 0, i8* %68, align 2
  %69 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 15, i32 4
  store double 0.000000e+00, double* %69, align 4
  %70 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 16, i32 0
  store i8 0, i8* %70, align 4
  %71 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 16, i32 1
  store i8 0, i8* %71, align 1
  %72 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 16, i32 2
  store i8 0, i8* %72, align 2
  %73 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 16, i32 4
  store double 0.000000e+00, double* %73, align 4
  %74 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 17, i32 0
  store i8 0, i8* %74, align 4
  %75 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 17, i32 1
  store i8 0, i8* %75, align 1
  %76 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 17, i32 2
  store i8 0, i8* %76, align 2
  %77 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 17, i32 4
  store double 0.000000e+00, double* %77, align 4
  %78 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 18, i32 0
  store i8 0, i8* %78, align 4
  %79 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 18, i32 1
  store i8 0, i8* %79, align 1
  %80 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 18, i32 2
  store i8 0, i8* %80, align 2
  %81 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 18, i32 4
  store double 0.000000e+00, double* %81, align 4
  %82 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 19, i32 0
  store i8 0, i8* %82, align 4
  %83 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 19, i32 1
  store i8 0, i8* %83, align 1
  %84 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 19, i32 2
  store i8 0, i8* %84, align 2
  %85 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 19, i32 4
  store double 0.000000e+00, double* %85, align 4
  %86 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 20, i32 0
  store i8 0, i8* %86, align 4
  %87 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 20, i32 1
  store i8 0, i8* %87, align 1
  %88 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 20, i32 2
  store i8 0, i8* %88, align 2
  %89 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 20, i32 4
  store double 0.000000e+00, double* %89, align 4
  %90 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 21, i32 0
  store i8 0, i8* %90, align 4
  %91 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 21, i32 1
  store i8 0, i8* %91, align 1
  %92 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 21, i32 2
  store i8 0, i8* %92, align 2
  %93 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 21, i32 4
  store double 0.000000e+00, double* %93, align 4
  %94 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 22, i32 0
  store i8 0, i8* %94, align 4
  %95 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 22, i32 1
  store i8 0, i8* %95, align 1
  %96 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 22, i32 2
  store i8 0, i8* %96, align 2
  %97 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 22, i32 4
  store double 0.000000e+00, double* %97, align 4
  %98 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 23, i32 0
  store i8 0, i8* %98, align 4
  %99 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 23, i32 1
  store i8 0, i8* %99, align 1
  %100 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 23, i32 2
  store i8 0, i8* %100, align 2
  %101 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 23, i32 4
  store double 0.000000e+00, double* %101, align 4
  %102 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 24, i32 0
  store i8 0, i8* %102, align 4
  %103 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 24, i32 1
  store i8 0, i8* %103, align 1
  %104 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 24, i32 2
  store i8 0, i8* %104, align 2
  %105 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 24, i32 4
  store double 0.000000e+00, double* %105, align 4
  %106 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 25, i32 0
  store i8 0, i8* %106, align 4
  %107 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 25, i32 1
  store i8 0, i8* %107, align 1
  %108 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 25, i32 2
  store i8 0, i8* %108, align 2
  %109 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 25, i32 4
  store double 0.000000e+00, double* %109, align 4
  %110 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 26, i32 0
  store i8 0, i8* %110, align 4
  %111 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 26, i32 1
  store i8 0, i8* %111, align 1
  %112 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 26, i32 2
  store i8 0, i8* %112, align 2
  %113 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 26, i32 4
  store double 0.000000e+00, double* %113, align 4
  %114 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 27, i32 0
  store i8 0, i8* %114, align 4
  %115 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 27, i32 1
  store i8 0, i8* %115, align 1
  %116 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 27, i32 2
  store i8 0, i8* %116, align 2
  %117 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 27, i32 4
  store double 0.000000e+00, double* %117, align 4
  %118 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 28, i32 0
  store i8 0, i8* %118, align 4
  %119 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 28, i32 1
  store i8 0, i8* %119, align 1
  %120 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 28, i32 2
  store i8 0, i8* %120, align 2
  %121 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 28, i32 4
  store double 0.000000e+00, double* %121, align 4
  %122 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 29, i32 0
  store i8 0, i8* %122, align 4
  %123 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 29, i32 1
  store i8 0, i8* %123, align 1
  %124 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 29, i32 2
  store i8 0, i8* %124, align 2
  %125 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 29, i32 4
  store double 0.000000e+00, double* %125, align 4
  %126 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 30, i32 0
  store i8 0, i8* %126, align 4
  %127 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 30, i32 1
  store i8 0, i8* %127, align 1
  %128 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 30, i32 2
  store i8 0, i8* %128, align 2
  %129 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 30, i32 4
  store double 0.000000e+00, double* %129, align 4
  %130 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 31, i32 0
  store i8 0, i8* %130, align 4
  %131 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 31, i32 1
  store i8 0, i8* %131, align 1
  %132 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 31, i32 2
  store i8 0, i8* %132, align 2
  %133 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 9, i64 31, i32 4
  store double 0.000000e+00, double* %133, align 4
  %134 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 10, i32 0
  store i8 0, i8* %134, align 4
  %135 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 11
  store i32 0, i32* %135, align 4
  %136 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 12, i32 0
  store i8 0, i8* %136, align 4
  %137 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 12, i32 3, i32 0
  store i8 0, i8* %137, align 4
  %138 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 12, i32 4, i32 0
  store i8 0, i8* %138, align 4
  %139 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 12, i32 5, i32 0
  store i8 0, i8* %139, align 4
  %140 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 12, i32 6, i32 0
  store i8 0, i8* %140, align 4
  %141 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 12, i32 7, i32 0
  store i8 0, i8* %141, align 4
  %142 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 12, i32 8, i32 0
  store i8 0, i8* %142, align 4
  %143 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 14
  store i32 0, i32* %143, align 4
  %144 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 15
  store i8 0, i8* %144, align 4
  %145 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 2, i64 0
  store i16 0, i16* %145, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device7GamepadC2ERKS0_(%"class.device::Gamepad"* nocapture, %"class.device::Gamepad"* nocapture readonly dereferenceable(920)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 917, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device7Gamepad5SetIDERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.device::Gamepad"* nocapture, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 2, i64 0
  %5 = bitcast i16* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %5, i8 0, i64 256, i1 false)
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %12, 127
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  br i1 %13, label %20, label %24

16:                                               ; preds = %2
  %17 = zext i8 %8 to i64
  %18 = icmp eq i8 %8, 127
  %19 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  br i1 %18, label %24, label %20

20:                                               ; preds = %16, %10
  %21 = phi i64 [ %12, %10 ], [ %17, %16 ]
  %22 = phi i16* [ %15, %10 ], [ %19, %16 ]
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %173, label %24

24:                                               ; preds = %16, %10, %20
  %25 = phi i16* [ %22, %20 ], [ %19, %16 ], [ %15, %10 ]
  %26 = phi i64 [ %21, %20 ], [ 127, %16 ], [ 127, %10 ]
  %27 = icmp ult i64 %26, 16
  br i1 %27, label %120, label %28

28:                                               ; preds = %24
  %29 = bitcast i16* %25 to i8*
  %30 = getelementptr %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 2, i64 0
  %31 = shl i64 %26, 1
  %32 = add i64 %31, 2
  %33 = getelementptr i8, i8* %3, i64 %32
  %34 = getelementptr i16, i16* %25, i64 %26
  %35 = icmp ult i16* %30, %34
  %36 = icmp ugt i8* %33, %29
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %28
  %39 = and i64 %26, -16
  %40 = sub i64 %26, %39
  %41 = getelementptr i16, i16* %25, i64 %39
  %42 = getelementptr %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 2, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %25, i64 %51
  %54 = getelementptr %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 2, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !2
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !2
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !5, !noalias !2
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !5, !noalias !2
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %25, i64 %63
  %65 = getelementptr %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 2, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !2
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !2
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !5, !noalias !2
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !5, !noalias !2
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %25, i64 %74
  %76 = getelementptr %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 2, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !2
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !2
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !5, !noalias !2
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !5, !noalias !2
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %25, i64 %85
  %87 = getelementptr %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 2, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !2
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !2
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !5, !noalias !2
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !5, !noalias !2
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !7

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %25, i64 %103
  %106 = getelementptr %"class.device::Gamepad", %"class.device::Gamepad"* %0, i64 0, i32 2, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !2
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !2
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !5, !noalias !2
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !5, !noalias !2
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !9

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %26, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %28, %24
  %121 = phi i64 [ %26, %28 ], [ %26, %24 ], [ %40, %118 ]
  %122 = phi i16* [ %25, %28 ], [ %25, %24 ], [ %41, %118 ]
  %123 = phi i16* [ %4, %28 ], [ %4, %24 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !11

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !12

173:                                              ; preds = %138, %143, %118, %20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
