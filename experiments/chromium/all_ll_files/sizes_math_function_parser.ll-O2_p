; ModuleID = '../../third_party/blink/renderer/core/css/parser/sizes_math_function_parser.cc'
source_filename = "../../third_party/blink/renderer/core/css/parser/sizes_math_function_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::SizesMathFunctionParser" = type { %"class.WTF::Vector", %"class.blink::MediaValues"*, i8, float }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::SizesMathValue"*, i32, i32 }
%"struct.blink::SizesMathValue" = type { double, i8, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon }
%union.anon = type { double }
%"class.blink::MediaValues" = type { i32 (...)** }
%"class.WTF::Vector.0" = type { %"class.WTF::VectorBuffer.1" }
%"class.WTF::VectorBuffer.1" = type { %"class.WTF::VectorBufferBase.2" }
%"class.WTF::VectorBufferBase.2" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.5 }
%union.anon.5 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14SizesMathValueEEEmm = comdat any

$_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm = comdat any

$_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

@__const._ZN5blink23SizesMathFunctionParser12AppendLengthERKNS_14CSSParserTokenE.value = private unnamed_addr constant { double, i8, [3 x i8], i32 } { double 0xFFFFFFFFFFFFFFFF, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766 }, align 8
@.str = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14SizesMathValueEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SizesMathValue]\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSParserToken]\00", align 1

@_ZN5blink23SizesMathFunctionParserC1ENS_19CSSParserTokenRangeEPNS_11MediaValuesE = hidden unnamed_addr alias void (%"class.blink::SizesMathFunctionParser"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, %"class.blink::MediaValues"*), void (%"class.blink::SizesMathFunctionParser"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, %"class.blink::MediaValues"*)* @_ZN5blink23SizesMathFunctionParserC2ENS_19CSSParserTokenRangeEPNS_11MediaValuesE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23SizesMathFunctionParserC2ENS_19CSSParserTokenRangeEPNS_11MediaValuesE(%"class.blink::SizesMathFunctionParser"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, %"class.blink::MediaValues"*) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.blink::SizesMathFunctionParser"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #6
  %6 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 1
  store %"class.blink::MediaValues"* %3, %"class.blink::MediaValues"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 3
  store float 0.000000e+00, float* %7, align 4
  %8 = tail call zeroext i1 @_ZN5blink23SizesMathFunctionParser27CalcToReversePolishNotationENS_19CSSParserTokenRangeE(%"class.blink::SizesMathFunctionParser"* %0, %"class.blink::CSSParserToken"* %1, %"class.blink::CSSParserToken"* %2)
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZN5blink23SizesMathFunctionParser9CalculateEv(%"class.blink::SizesMathFunctionParser"* %0)
  %11 = zext i1 %10 to i8
  br label %12

12:                                               ; preds = %9, %4
  %13 = phi i8 [ 0, %4 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 2
  store i8 %13, i8* %14, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23SizesMathFunctionParser27CalcToReversePolishNotationENS_19CSSParserTokenRangeE(%"class.blink::SizesMathFunctionParser"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::SizesMathValue", align 8
  %5 = alloca double, align 8
  %6 = alloca %"struct.blink::SizesMathValue", align 8
  %7 = alloca %"class.WTF::Vector.0", align 8
  %8 = bitcast %"class.WTF::Vector.0"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #6
  %9 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %7, i64 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %7, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #6
  %12 = icmp eq %"class.blink::CSSParserToken"* %1, %2
  br i1 %12, label %145, label %13

13:                                               ; preds = %3
  %14 = bitcast %"struct.blink::SizesMathValue"* %4 to i8*
  %15 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %4, i64 0, i32 0
  %16 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %4, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %4, i64 0, i32 2
  %18 = bitcast double* %5 to i8*
  %19 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 1
  %20 = bitcast double* %5 to i64*
  %21 = bitcast %"struct.blink::SizesMathValue"* %4 to i64*
  %22 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %23 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0
  %26 = bitcast %"struct.blink::SizesMathValue"* %6 to i8*
  %27 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %6, i64 0, i32 0
  %28 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %6, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %6, i64 0, i32 2
  br label %30

30:                                               ; preds = %13, %125
  %31 = phi %"class.blink::CSSParserToken"* [ %1, %13 ], [ %32, %125 ]
  %32 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %31, i64 1
  %33 = bitcast %"class.blink::CSSParserToken"* %31 to i32*
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 63
  switch i32 %35, label %125 [
    i32 7, label %36
    i32 9, label %50
    i32 6, label %83
    i32 1, label %85
    i32 23, label %109
    i32 24, label %121
    i32 22, label %123
    i32 30, label %145
    i32 29, label %145
    i32 32, label %145
    i32 18, label %145
    i32 19, label %145
    i32 2, label %145
    i32 3, label %145
    i32 4, label %145
    i32 5, label %145
    i32 8, label %145
    i32 10, label %145
    i32 11, label %145
    i32 12, label %145
    i32 13, label %145
    i32 14, label %145
    i32 15, label %145
    i32 16, label %145
    i32 0, label %145
    i32 20, label %145
    i32 21, label %145
    i32 27, label %145
    i32 25, label %145
    i32 28, label %145
    i32 26, label %145
  ]

36:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 8 bitcast ({ double, i8, [3 x i8], i32 }* @__const._ZN5blink23SizesMathFunctionParser12AppendLengthERKNS_14CSSParserTokenE.value to i8*), i64 16, i1 false) #6
  store i8 0, i8* %28, align 8
  store i32 6, i32* %29, align 4
  %37 = call double @_ZNK5blink14CSSParserToken12NumericValueEv(%"class.blink::CSSParserToken"* %31) #6
  store double %37, double* %27, align 8
  %38 = load i32, i32* %22, align 4
  %39 = load i32, i32* %23, align 8
  %40 = icmp eq i32 %38, %39
  br i1 %40, label %48, label %41, !prof !2

41:                                               ; preds = %36
  %42 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %24, align 8
  %43 = zext i32 %38 to i64
  %44 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %42, i64 %43
  %45 = bitcast %"struct.blink::SizesMathValue"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* nonnull align 8 %26, i64 16, i1 false) #6
  %46 = load i32, i32* %22, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %22, align 4
  br label %49

48:                                               ; preds = %36
  call void @_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector"* %25, %"struct.blink::SizesMathValue"* nonnull dereferenceable(16) %6) #6
  br label %49

49:                                               ; preds = %41, %48
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #6
  br label %125

50:                                               ; preds = %30
  %51 = lshr i32 %34, 11
  %52 = and i32 %51, 127
  %53 = add nsw i32 %52, -3
  %54 = icmp ult i32 %53, 16
  %55 = icmp eq i32 %52, 32
  %56 = or i1 %55, %54
  br i1 %56, label %57, label %145

57:                                               ; preds = %50
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 bitcast ({ double, i8, [3 x i8], i32 }* @__const._ZN5blink23SizesMathFunctionParser12AppendLengthERKNS_14CSSParserTokenE.value to i8*), i64 16, i1 false) #6
  store double 0.000000e+00, double* %15, align 8
  store i8 0, i8* %16, align 8
  store i32 6, i32* %17, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  store double 0.000000e+00, double* %5, align 8
  %58 = load %"class.blink::MediaValues"*, %"class.blink::MediaValues"** %19, align 8
  %59 = call double @_ZNK5blink14CSSParserToken12NumericValueEv(%"class.blink::CSSParserToken"* %31) #6
  %60 = load i32, i32* %33, align 8
  %61 = lshr i32 %60, 11
  %62 = and i32 %61, 127
  %63 = bitcast %"class.blink::MediaValues"* %58 to i1 (%"class.blink::MediaValues"*, double, i32, double*)***
  %64 = load i1 (%"class.blink::MediaValues"*, double, i32, double*)**, i1 (%"class.blink::MediaValues"*, double, i32, double*)*** %63, align 8
  %65 = getelementptr inbounds i1 (%"class.blink::MediaValues"*, double, i32, double*)*, i1 (%"class.blink::MediaValues"*, double, i32, double*)** %64, i64 5
  %66 = load i1 (%"class.blink::MediaValues"*, double, i32, double*)*, i1 (%"class.blink::MediaValues"*, double, i32, double*)** %65, align 8
  %67 = call zeroext i1 %66(%"class.blink::MediaValues"* %58, double %59, i32 %62, double* nonnull dereferenceable(8) %5) #6
  br i1 %67, label %68, label %82

68:                                               ; preds = %57
  %69 = load i64, i64* %20, align 8
  store i64 %69, i64* %21, align 8
  store i8 1, i8* %16, align 8
  %70 = load i32, i32* %22, align 4
  %71 = load i32, i32* %23, align 8
  %72 = icmp eq i32 %70, %71
  br i1 %72, label %80, label %73, !prof !2

73:                                               ; preds = %68
  %74 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %24, align 8
  %75 = zext i32 %70 to i64
  %76 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %74, i64 %75
  %77 = bitcast %"struct.blink::SizesMathValue"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* nonnull align 8 %14, i64 16, i1 false) #6
  %78 = load i32, i32* %22, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %22, align 4
  br label %81

80:                                               ; preds = %68
  call void @_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector"* %25, %"struct.blink::SizesMathValue"* nonnull dereferenceable(16) %4) #6
  br label %81

81:                                               ; preds = %73, %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #6
  br label %125

82:                                               ; preds = %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #6
  br label %145

83:                                               ; preds = %30
  %84 = call zeroext i1 @_ZN5blink23SizesMathFunctionParser14HandleOperatorERN3WTF6VectorINS_14CSSParserTokenELj0ENS1_18PartitionAllocatorEEERKS3_(%"class.blink::SizesMathFunctionParser"* %0, %"class.WTF::Vector.0"* nonnull dereferenceable(16) %7, %"class.blink::CSSParserToken"* dereferenceable(24) %31)
  br i1 %84, label %125, label %145

85:                                               ; preds = %30
  %86 = call i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* %31) #6
  %87 = icmp eq i32 %86, 819
  br i1 %87, label %94, label %88

88:                                               ; preds = %85
  %89 = call i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* %31) #6
  %90 = icmp eq i32 %89, 820
  br i1 %90, label %94, label %91

91:                                               ; preds = %88
  %92 = call i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* %31) #6
  %93 = icmp eq i32 %92, 821
  br i1 %93, label %94, label %106

94:                                               ; preds = %91, %88, %85
  %95 = load i32, i32* %11, align 4
  %96 = load i32, i32* %10, align 8
  %97 = icmp eq i32 %95, %96
  br i1 %97, label %105, label %98, !prof !2

98:                                               ; preds = %94
  %99 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %9, align 8
  %100 = zext i32 %95 to i64
  %101 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %99, i64 %100
  %102 = bitcast %"class.blink::CSSParserToken"* %101 to i8*
  %103 = bitcast %"class.blink::CSSParserToken"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 24, i1 false) #6
  %104 = add i32 %95, 1
  store i32 %104, i32* %11, align 4
  br label %125

105:                                              ; preds = %94
  call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.0"* nonnull %7, %"class.blink::CSSParserToken"* dereferenceable(24) %31) #6
  br label %125

106:                                              ; preds = %91
  %107 = call i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* %31) #6
  %108 = icmp eq i32 %107, 817
  br i1 %108, label %109, label %145

109:                                              ; preds = %106, %30
  %110 = load i32, i32* %11, align 4
  %111 = load i32, i32* %10, align 8
  %112 = icmp eq i32 %110, %111
  br i1 %112, label %120, label %113, !prof !2

113:                                              ; preds = %109
  %114 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %9, align 8
  %115 = zext i32 %110 to i64
  %116 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %114, i64 %115
  %117 = bitcast %"class.blink::CSSParserToken"* %116 to i8*
  %118 = bitcast %"class.blink::CSSParserToken"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 24, i1 false) #6
  %119 = add i32 %110, 1
  store i32 %119, i32* %11, align 4
  br label %125

120:                                              ; preds = %109
  call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.0"* nonnull %7, %"class.blink::CSSParserToken"* dereferenceable(24) %31) #6
  br label %125

121:                                              ; preds = %30
  %122 = call zeroext i1 @_ZN5blink23SizesMathFunctionParser22HandleRightParenthesisERN3WTF6VectorINS_14CSSParserTokenELj0ENS1_18PartitionAllocatorEEE(%"class.blink::SizesMathFunctionParser"* %0, %"class.WTF::Vector.0"* nonnull dereferenceable(16) %7)
  br i1 %122, label %125, label %145

123:                                              ; preds = %30
  %124 = call zeroext i1 @_ZN5blink23SizesMathFunctionParser11HandleCommaERN3WTF6VectorINS_14CSSParserTokenELj0ENS1_18PartitionAllocatorEEERKS3_(%"class.blink::SizesMathFunctionParser"* %0, %"class.WTF::Vector.0"* nonnull dereferenceable(16) %7, %"class.blink::CSSParserToken"* dereferenceable(24) %31)
  br i1 %124, label %125, label %145

125:                                              ; preds = %120, %113, %105, %98, %81, %123, %121, %83, %30, %49
  %126 = icmp eq %"class.blink::CSSParserToken"* %32, %2
  br i1 %126, label %127, label %30

127:                                              ; preds = %125
  %128 = load i32, i32* %11, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %145, label %130

130:                                              ; preds = %127, %141
  %131 = phi i32 [ %143, %141 ], [ %128, %127 ]
  %132 = add i32 %131, -1
  %133 = call dereferenceable(24) %"class.blink::CSSParserToken"* @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* nonnull %7, i32 %132) #6
  %134 = bitcast %"class.blink::CSSParserToken"* %133 to i32*
  %135 = load i32, i32* %134, align 8
  %136 = and i32 %135, 63
  switch i32 %136, label %137 [
    i32 23, label %141
    i32 1, label %141
  ]

137:                                              ; preds = %130
  %138 = load i32, i32* %11, align 4
  %139 = add i32 %138, -1
  %140 = call dereferenceable(24) %"class.blink::CSSParserToken"* @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* nonnull %7, i32 %139) #6
  call void @_ZN5blink23SizesMathFunctionParser14AppendOperatorERKNS_14CSSParserTokenE(%"class.blink::SizesMathFunctionParser"* %0, %"class.blink::CSSParserToken"* dereferenceable(24) %140)
  br label %141

141:                                              ; preds = %130, %130, %137
  %142 = load i32, i32* %11, align 4
  %143 = add i32 %142, -1
  store i32 %143, i32* %11, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %130

145:                                              ; preds = %50, %83, %106, %121, %123, %30, %30, %30, %30, %30, %30, %30, %30, %30, %30, %30, %30, %30, %30, %30, %30, %30, %30, %30, %30, %30, %30, %30, %30, %141, %3, %127, %82
  %146 = phi i1 [ false, %82 ], [ true, %127 ], [ true, %3 ], [ true, %141 ], [ false, %30 ], [ false, %30 ], [ false, %30 ], [ false, %30 ], [ false, %30 ], [ false, %30 ], [ false, %30 ], [ false, %30 ], [ false, %30 ], [ false, %30 ], [ false, %30 ], [ false, %30 ], [ false, %30 ], [ false, %30 ], [ false, %30 ], [ false, %30 ], [ false, %30 ], [ false, %30 ], [ false, %30 ], [ false, %30 ], [ false, %30 ], [ false, %30 ], [ false, %30 ], [ false, %30 ], [ false, %123 ], [ false, %121 ], [ false, %106 ], [ false, %83 ], [ false, %50 ]
  %147 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %9, align 8
  %148 = icmp eq %"class.blink::CSSParserToken"* %147, null
  %149 = bitcast %"class.blink::CSSParserToken"* %147 to i8*
  br i1 %148, label %155, label %150, !prof !3

150:                                              ; preds = %145
  %151 = load i32, i32* %11, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %154, label %153, !prof !2

153:                                              ; preds = %150
  store i32 0, i32* %11, align 4
  br label %154

154:                                              ; preds = %153, %150
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %149) #6
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %9, align 8
  br label %155

155:                                              ; preds = %145, %154
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #6
  ret i1 %146
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23SizesMathFunctionParser9CalculateEv(%"class.blink::SizesMathFunctionParser"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.blink::SizesMathValue", align 8
  %3 = alloca %"struct.blink::SizesMathValue", align 8
  %4 = alloca %"struct.blink::SizesMathValue", align 8
  %5 = alloca %"struct.blink::SizesMathValue", align 8
  %6 = alloca %"struct.blink::SizesMathValue", align 8
  %7 = alloca %"struct.blink::SizesMathValue", align 8
  %8 = alloca %"class.WTF::Vector", align 8
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  %11 = bitcast %"class.WTF::Vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #6
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #6
  %15 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %16, i64 %19
  %21 = icmp eq i32 %18, 0
  br i1 %21, label %226, label %22

22:                                               ; preds = %1
  %23 = bitcast %"struct.blink::SizesMathValue"* %7 to i8*
  %24 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %7, i64 0, i32 0
  %25 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %7, i64 0, i32 1
  %26 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %7, i64 0, i32 2
  %27 = bitcast %"struct.blink::SizesMathValue"* %6 to i8*
  %28 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %6, i64 0, i32 0
  %29 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %6, i64 0, i32 1
  %30 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %6, i64 0, i32 2
  %31 = bitcast %"struct.blink::SizesMathValue"* %5 to i8*
  %32 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %5, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %5, i64 0, i32 1
  %34 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %5, i64 0, i32 2
  %35 = bitcast %"struct.blink::SizesMathValue"* %4 to i8*
  %36 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %4, i64 0, i32 0
  %37 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %4, i64 0, i32 1
  %38 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %4, i64 0, i32 2
  %39 = bitcast %"struct.blink::SizesMathValue"* %3 to i8*
  %40 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %3, i64 0, i32 0
  %41 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %3, i64 0, i32 1
  %42 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %3, i64 0, i32 2
  %43 = bitcast %"struct.blink::SizesMathValue"* %2 to i8*
  %44 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %2, i64 0, i32 0
  %45 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %2, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %2, i64 0, i32 2
  br label %47

47:                                               ; preds = %194, %22
  %48 = phi i32 [ 0, %22 ], [ %197, %194 ]
  %49 = phi %"struct.blink::SizesMathValue"* [ %16, %22 ], [ %195, %194 ]
  %50 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %49, i64 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 6
  br i1 %52, label %53, label %65

53:                                               ; preds = %47
  %54 = load i32, i32* %13, align 8
  %55 = icmp eq i32 %48, %54
  br i1 %55, label %64, label %56, !prof !2

56:                                               ; preds = %53
  %57 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %12, align 8
  %58 = zext i32 %48 to i64
  %59 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %57, i64 %58
  %60 = bitcast %"struct.blink::SizesMathValue"* %59 to i8*
  %61 = bitcast %"struct.blink::SizesMathValue"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 16, i1 false) #6
  %62 = load i32, i32* %14, align 4
  %63 = add i32 %62, 1
  store i32 %63, i32* %14, align 4
  br label %194

64:                                               ; preds = %53
  call void @_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector"* nonnull %8, %"struct.blink::SizesMathValue"* dereferenceable(16) %49) #6
  br label %194

65:                                               ; preds = %47
  %66 = icmp ult i32 %48, 2
  br i1 %66, label %226, label %67

67:                                               ; preds = %65
  %68 = add i32 %48, -1
  %69 = call dereferenceable(16) %"struct.blink::SizesMathValue"* @_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %8, i32 %68) #6
  %70 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %69, i64 0, i32 0
  %71 = load double, double* %70, align 8
  %72 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %69, i64 0, i32 1
  %73 = load i8, i8* %72, align 8
  %74 = load i32, i32* %14, align 4
  %75 = add i32 %74, -1
  store i32 %75, i32* %14, align 4
  %76 = add i32 %74, -2
  %77 = call dereferenceable(16) %"struct.blink::SizesMathValue"* @_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %8, i32 %76) #6
  %78 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %77, i64 0, i32 0
  %79 = load double, double* %78, align 8
  %80 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %77, i64 0, i32 1
  %81 = load i8, i8* %80, align 8
  %82 = load i32, i32* %14, align 4
  %83 = add i32 %82, -1
  store i32 %83, i32* %14, align 4
  switch i32 %51, label %226 [
    i32 0, label %84
    i32 1, label %101
    i32 2, label %118
    i32 3, label %139
    i32 4, label %158
    i32 5, label %176
  ]

84:                                               ; preds = %67
  %85 = icmp eq i8 %73, %81
  br i1 %85, label %86, label %226

86:                                               ; preds = %84
  %87 = icmp ne i8 %73, 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #6
  %88 = fadd double %71, %79
  %89 = zext i1 %87 to i8
  store double %88, double* %44, align 8
  store i8 %89, i8* %45, align 8
  store i32 6, i32* %46, align 4
  %90 = load i32, i32* %13, align 8
  %91 = icmp eq i32 %83, %90
  br i1 %91, label %99, label %92, !prof !2

92:                                               ; preds = %86
  %93 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %12, align 8
  %94 = zext i32 %83 to i64
  %95 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %93, i64 %94
  %96 = bitcast %"struct.blink::SizesMathValue"* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* nonnull align 8 %43, i64 16, i1 false) #6
  %97 = load i32, i32* %14, align 4
  %98 = add i32 %97, 1
  store i32 %98, i32* %14, align 4
  br label %100

99:                                               ; preds = %86
  call void @_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"* nonnull %8, %"struct.blink::SizesMathValue"* nonnull dereferenceable(16) %2) #6
  br label %100

100:                                              ; preds = %99, %92
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #6
  br label %194

101:                                              ; preds = %67
  %102 = icmp eq i8 %73, %81
  br i1 %102, label %103, label %226

103:                                              ; preds = %101
  %104 = icmp ne i8 %73, 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #6
  %105 = fsub double %79, %71
  %106 = zext i1 %104 to i8
  store double %105, double* %40, align 8
  store i8 %106, i8* %41, align 8
  store i32 6, i32* %42, align 4
  %107 = load i32, i32* %13, align 8
  %108 = icmp eq i32 %83, %107
  br i1 %108, label %116, label %109, !prof !2

109:                                              ; preds = %103
  %110 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %12, align 8
  %111 = zext i32 %83 to i64
  %112 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %110, i64 %111
  %113 = bitcast %"struct.blink::SizesMathValue"* %112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* nonnull align 8 %39, i64 16, i1 false) #6
  %114 = load i32, i32* %14, align 4
  %115 = add i32 %114, 1
  store i32 %115, i32* %14, align 4
  br label %117

116:                                              ; preds = %103
  call void @_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"* nonnull %8, %"struct.blink::SizesMathValue"* nonnull dereferenceable(16) %3) #6
  br label %117

117:                                              ; preds = %116, %109
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #6
  br label %194

118:                                              ; preds = %67
  %119 = icmp eq i8 %73, 0
  %120 = icmp eq i8 %81, 0
  %121 = or i1 %119, %120
  br i1 %121, label %122, label %226

122:                                              ; preds = %118
  %123 = and i8 %81, 1
  %124 = or i8 %123, %73
  %125 = icmp ne i8 %124, 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #6
  %126 = fmul double %71, %79
  %127 = zext i1 %125 to i8
  store double %126, double* %36, align 8
  store i8 %127, i8* %37, align 8
  store i32 6, i32* %38, align 4
  %128 = load i32, i32* %13, align 8
  %129 = icmp eq i32 %83, %128
  br i1 %129, label %137, label %130, !prof !2

130:                                              ; preds = %122
  %131 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %12, align 8
  %132 = zext i32 %83 to i64
  %133 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %131, i64 %132
  %134 = bitcast %"struct.blink::SizesMathValue"* %133 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* nonnull align 8 %35, i64 16, i1 false) #6
  %135 = load i32, i32* %14, align 4
  %136 = add i32 %135, 1
  store i32 %136, i32* %14, align 4
  br label %138

137:                                              ; preds = %122
  call void @_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"* nonnull %8, %"struct.blink::SizesMathValue"* nonnull dereferenceable(16) %4) #6
  br label %138

138:                                              ; preds = %137, %130
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #6
  br label %194

139:                                              ; preds = %67
  %140 = icmp ne i8 %73, 0
  %141 = fcmp oeq double %71, 0.000000e+00
  %142 = or i1 %141, %140
  br i1 %142, label %226, label %143

143:                                              ; preds = %139
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #6
  %144 = fdiv double %79, %71
  %145 = icmp ne i8 %81, 0
  %146 = zext i1 %145 to i8
  store double %144, double* %32, align 8
  store i8 %146, i8* %33, align 8
  store i32 6, i32* %34, align 4
  %147 = load i32, i32* %13, align 8
  %148 = icmp eq i32 %83, %147
  br i1 %148, label %156, label %149, !prof !2

149:                                              ; preds = %143
  %150 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %12, align 8
  %151 = zext i32 %83 to i64
  %152 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %150, i64 %151
  %153 = bitcast %"struct.blink::SizesMathValue"* %152 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* nonnull align 8 %31, i64 16, i1 false) #6
  %154 = load i32, i32* %14, align 4
  %155 = add i32 %154, 1
  store i32 %155, i32* %14, align 4
  br label %157

156:                                              ; preds = %143
  call void @_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"* nonnull %8, %"struct.blink::SizesMathValue"* nonnull dereferenceable(16) %5) #6
  br label %157

157:                                              ; preds = %156, %149
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #6
  br label %194

158:                                              ; preds = %67
  %159 = icmp eq i8 %73, %81
  br i1 %159, label %160, label %226

160:                                              ; preds = %158
  %161 = icmp ne i8 %73, 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #6
  %162 = fcmp olt double %71, %79
  %163 = select i1 %162, double %71, double %79
  %164 = zext i1 %161 to i8
  store double %163, double* %28, align 8
  store i8 %164, i8* %29, align 8
  store i32 6, i32* %30, align 4
  %165 = load i32, i32* %13, align 8
  %166 = icmp eq i32 %83, %165
  br i1 %166, label %174, label %167, !prof !2

167:                                              ; preds = %160
  %168 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %12, align 8
  %169 = zext i32 %83 to i64
  %170 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %168, i64 %169
  %171 = bitcast %"struct.blink::SizesMathValue"* %170 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %171, i8* nonnull align 8 %27, i64 16, i1 false) #6
  %172 = load i32, i32* %14, align 4
  %173 = add i32 %172, 1
  store i32 %173, i32* %14, align 4
  br label %175

174:                                              ; preds = %160
  call void @_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"* nonnull %8, %"struct.blink::SizesMathValue"* nonnull dereferenceable(16) %6) #6
  br label %175

175:                                              ; preds = %174, %167
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #6
  br label %194

176:                                              ; preds = %67
  %177 = icmp eq i8 %73, %81
  br i1 %177, label %178, label %226

178:                                              ; preds = %176
  %179 = icmp ne i8 %73, 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #6
  %180 = fcmp olt double %79, %71
  %181 = select i1 %180, double %71, double %79
  %182 = zext i1 %179 to i8
  store double %181, double* %24, align 8
  store i8 %182, i8* %25, align 8
  store i32 6, i32* %26, align 4
  %183 = load i32, i32* %13, align 8
  %184 = icmp eq i32 %83, %183
  br i1 %184, label %192, label %185, !prof !2

185:                                              ; preds = %178
  %186 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %12, align 8
  %187 = zext i32 %83 to i64
  %188 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %186, i64 %187
  %189 = bitcast %"struct.blink::SizesMathValue"* %188 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %189, i8* nonnull align 8 %23, i64 16, i1 false) #6
  %190 = load i32, i32* %14, align 4
  %191 = add i32 %190, 1
  store i32 %191, i32* %14, align 4
  br label %193

192:                                              ; preds = %178
  call void @_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"* nonnull %8, %"struct.blink::SizesMathValue"* nonnull dereferenceable(16) %7) #6
  br label %193

193:                                              ; preds = %192, %185
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #6
  br label %194

194:                                              ; preds = %193, %175, %157, %138, %117, %100, %64, %56
  %195 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %49, i64 1
  %196 = icmp eq %"struct.blink::SizesMathValue"* %195, %20
  %197 = load i32, i32* %14, align 4
  br i1 %196, label %198, label %47

198:                                              ; preds = %194
  %199 = icmp eq i32 %197, 1
  br i1 %199, label %200, label %226

200:                                              ; preds = %198
  %201 = call dereferenceable(16) %"struct.blink::SizesMathValue"* @_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %8, i32 0) #6
  %202 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %201, i64 0, i32 1
  %203 = load i8, i8* %202, align 8, !range !4
  %204 = icmp eq i8 %203, 0
  br i1 %204, label %226, label %205

205:                                              ; preds = %200
  %206 = bitcast float* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %206)
  %207 = load i32, i32* %14, align 4
  %208 = add i32 %207, -1
  %209 = call dereferenceable(16) %"struct.blink::SizesMathValue"* @_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %8, i32 %208) #6
  %210 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %209, i64 0, i32 0
  %211 = load double, double* %210, align 8
  %212 = fcmp ult double %211, 0x47EFFFFFE0000000
  br i1 %212, label %213, label %217

213:                                              ; preds = %205
  %214 = fcmp ole double %211, 0xC7EFFFFFE0000000
  %215 = select i1 %214, double 0xC7EFFFFFE0000000, double %211
  %216 = fptrunc double %215 to float
  br label %217

217:                                              ; preds = %205, %213
  %218 = phi float [ %216, %213 ], [ 0x47EFFFFFE0000000, %205 ]
  store float %218, float* %9, align 4
  %219 = bitcast float* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %219)
  store float 0.000000e+00, float* %10, align 4
  %220 = fcmp olt float %218, 0.000000e+00
  %221 = select i1 %220, float* %10, float* %9
  %222 = bitcast float* %221 to i32*
  %223 = load i32, i32* %222, align 4
  %224 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 3
  %225 = bitcast float* %224 to i32*
  store i32 %223, i32* %225, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %219)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %206)
  br label %226

226:                                              ; preds = %118, %67, %176, %158, %139, %101, %84, %65, %1, %198, %200, %217
  %227 = phi i1 [ true, %217 ], [ false, %200 ], [ false, %198 ], [ false, %1 ], [ false, %65 ], [ false, %84 ], [ false, %101 ], [ false, %139 ], [ false, %158 ], [ false, %176 ], [ false, %67 ], [ false, %118 ]
  %228 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %12, align 8
  %229 = icmp eq %"struct.blink::SizesMathValue"* %228, null
  %230 = bitcast %"struct.blink::SizesMathValue"* %228 to i8*
  br i1 %229, label %236, label %231, !prof !3

231:                                              ; preds = %226
  %232 = load i32, i32* %14, align 4
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %235, label %234, !prof !2

234:                                              ; preds = %231
  store i32 0, i32* %14, align 4
  br label %235

235:                                              ; preds = %234, %231
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %230) #6
  store %"struct.blink::SizesMathValue"* null, %"struct.blink::SizesMathValue"** %12, align 8
  br label %236

236:                                              ; preds = %226, %235
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #6
  ret i1 %227
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK5blink23SizesMathFunctionParser6ResultEv(%"class.blink::SizesMathFunctionParser"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 3
  %3 = load float, float* %2, align 4
  ret float %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23SizesMathFunctionParser14HandleOperatorERN3WTF6VectorINS_14CSSParserTokenELj0ENS1_18PartitionAllocatorEEERKS3_(%"class.blink::SizesMathFunctionParser"* nocapture, %"class.WTF::Vector.0"* dereferenceable(16), %"class.blink::CSSParserToken"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZN5blink26ParseCSSArithmeticOperatorERKNS_14CSSParserTokenE(%"class.blink::CSSParserToken"* dereferenceable(24) %2) #6
  %5 = icmp ult i32 %4, 2
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = or i32 %4, 1
  %8 = icmp eq i32 %7, 3
  br i1 %8, label %9, label %52

9:                                                ; preds = %3, %6
  %10 = phi i8 [ 0, %3 ], [ 1, %6 ]
  %11 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %1, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %37, label %14

14:                                               ; preds = %9
  %15 = icmp eq i8 %10, 0
  br label %16

16:                                               ; preds = %14, %31
  %17 = phi i32 [ %12, %14 ], [ %33, %31 ]
  %18 = add i32 %17, -1
  %19 = tail call dereferenceable(24) %"class.blink::CSSParserToken"* @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %1, i32 %18) #6
  %20 = bitcast %"class.blink::CSSParserToken"* %19 to i32*
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 63
  %23 = icmp eq i32 %22, 6
  br i1 %23, label %24, label %35

24:                                               ; preds = %16
  %25 = tail call i32 @_ZN5blink26ParseCSSArithmeticOperatorERKNS_14CSSParserTokenE(%"class.blink::CSSParserToken"* dereferenceable(24) %19) #6
  %26 = icmp ult i32 %25, 2
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = or i32 %25, 1
  %29 = icmp eq i32 %28, 3
  br i1 %29, label %31, label %52

30:                                               ; preds = %24
  br i1 %15, label %31, label %35

31:                                               ; preds = %30, %27
  tail call void @_ZN5blink23SizesMathFunctionParser14AppendOperatorERKNS_14CSSParserTokenE(%"class.blink::SizesMathFunctionParser"* %0, %"class.blink::CSSParserToken"* dereferenceable(24) %19)
  %32 = load i32, i32* %11, align 4
  %33 = add i32 %32, -1
  store i32 %33, i32* %11, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %16

35:                                               ; preds = %30, %16, %31
  %36 = load i32, i32* %11, align 4
  br label %37

37:                                               ; preds = %35, %9
  %38 = phi i32 [ %36, %35 ], [ 0, %9 ]
  %39 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %1, i64 0, i32 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %38, %40
  br i1 %41, label %51, label %42, !prof !2

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %1, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %43, align 8
  %45 = zext i32 %38 to i64
  %46 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %44, i64 %45
  %47 = bitcast %"class.blink::CSSParserToken"* %46 to i8*
  %48 = bitcast %"class.blink::CSSParserToken"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #6
  %49 = load i32, i32* %11, align 4
  %50 = add i32 %49, 1
  store i32 %50, i32* %11, align 4
  br label %52

51:                                               ; preds = %37
  tail call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.0"* %1, %"class.blink::CSSParserToken"* dereferenceable(24) %2) #6
  br label %52

52:                                               ; preds = %27, %6, %51, %42
  %53 = phi i1 [ true, %42 ], [ true, %51 ], [ false, %6 ], [ false, %27 ]
  ret i1 %53
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZN5blink26ParseCSSArithmeticOperatorERKNS_14CSSParserTokenE(%"class.blink::CSSParserToken"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23SizesMathFunctionParser14AppendOperatorERKNS_14CSSParserTokenE(%"class.blink::SizesMathFunctionParser"* nocapture, %"class.blink::CSSParserToken"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZN5blink26ParseCSSArithmeticOperatorERKNS_14CSSParserTokenE(%"class.blink::CSSParserToken"* dereferenceable(24) %1) #6
  %4 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %48, !prof !2

9:                                                ; preds = %2
  %10 = add i32 %5, 1
  %11 = lshr i32 %5, 2
  %12 = add i32 %10, %11
  %13 = icmp ugt i32 %12, 4
  %14 = select i1 %13, i32 %12, i32 4
  %15 = icmp ugt i32 %14, %10
  %16 = select i1 %15, i32 %14, i32 %10
  %17 = icmp ult i32 %5, %16
  br i1 %17, label %18, label %48, !prof !3

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %19, align 8
  %21 = icmp eq %"struct.blink::SizesMathValue"* %20, null
  %22 = zext i32 %16 to i64
  %23 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14SizesMathValueEEEmm(i64 %22) #6
  %24 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %23, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14SizesMathValueEEEPKcv, i64 0, i64 0)) #6
  br i1 %21, label %25, label %30

25:                                               ; preds = %18
  %26 = ptrtoint i8* %24 to i64
  %27 = bitcast %"class.blink::SizesMathFunctionParser"* %0 to i64*
  store atomic i64 %26, i64* %27 monotonic, align 8
  %28 = lshr i64 %23, 4
  %29 = trunc i64 %28 to i32
  store i32 %29, i32* %6, align 8
  br label %48

30:                                               ; preds = %18
  %31 = lshr i64 %23, 4
  %32 = ptrtoint i8* %24 to i64
  %33 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %19, align 8
  %34 = icmp ne i8* %24, null
  %35 = icmp ne %"struct.blink::SizesMathValue"* %33, null
  %36 = and i1 %34, %35
  %37 = bitcast %"struct.blink::SizesMathValue"* %33 to i8*
  br i1 %36, label %38, label %44, !prof !3

38:                                               ; preds = %30
  %39 = load i32, i32* %4, align 4
  %40 = zext i32 %39 to i64
  %41 = shl nuw nsw i64 %40, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* nonnull align 8 %37, i64 %41, i1 false) #6
  %42 = bitcast %"class.blink::SizesMathFunctionParser"* %0 to i8**
  %43 = load i8*, i8** %42, align 8
  br label %44

44:                                               ; preds = %38, %30
  %45 = phi i8* [ %43, %38 ], [ %37, %30 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %45) #6
  %46 = bitcast %"class.blink::SizesMathFunctionParser"* %0 to i64*
  store atomic i64 %32, i64* %46 monotonic, align 8
  %47 = trunc i64 %31 to i32
  store i32 %47, i32* %6, align 8
  br label %48

48:                                               ; preds = %2, %9, %25, %44
  %49 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %49, align 8
  %51 = load i32, i32* %4, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %50, i64 %52, i32 0
  store double 0.000000e+00, double* %53, align 8
  %54 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %50, i64 %52, i32 1
  store i8 0, i8* %54, align 8
  %55 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %50, i64 %52, i32 2
  store i32 %3, i32* %55, align 4
  %56 = load i32, i32* %4, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %4, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23SizesMathFunctionParser22HandleRightParenthesisERN3WTF6VectorINS_14CSSParserTokenELj0ENS1_18PartitionAllocatorEEE(%"class.blink::SizesMathFunctionParser"* nocapture, %"class.WTF::Vector.0"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSParserToken", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %1, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %240, label %7

7:                                                ; preds = %2, %38
  %8 = phi i32 [ %41, %38 ], [ %5, %2 ]
  %9 = phi i32 [ %39, %38 ], [ 0, %2 ]
  %10 = add i32 %8, -1
  %11 = tail call dereferenceable(24) %"class.blink::CSSParserToken"* @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %1, i32 %10) #6
  %12 = bitcast %"class.blink::CSSParserToken"* %11 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 63
  %15 = icmp eq i32 %14, 23
  br i1 %15, label %43, label %16

16:                                               ; preds = %7
  %17 = load i32, i32* %4, align 4
  %18 = add i32 %17, -1
  %19 = tail call dereferenceable(24) %"class.blink::CSSParserToken"* @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %1, i32 %18) #6
  %20 = bitcast %"class.blink::CSSParserToken"* %19 to i32*
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 63
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %43, label %24

24:                                               ; preds = %16
  %25 = load i32, i32* %4, align 4
  %26 = add i32 %25, -1
  %27 = tail call dereferenceable(24) %"class.blink::CSSParserToken"* @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %1, i32 %26) #6
  %28 = bitcast %"class.blink::CSSParserToken"* %27 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 63
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %32, label %34

32:                                               ; preds = %24
  %33 = add i32 %9, 1
  br label %38

34:                                               ; preds = %24
  %35 = load i32, i32* %4, align 4
  %36 = add i32 %35, -1
  %37 = tail call dereferenceable(24) %"class.blink::CSSParserToken"* @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %1, i32 %36) #6
  tail call void @_ZN5blink23SizesMathFunctionParser14AppendOperatorERKNS_14CSSParserTokenE(%"class.blink::SizesMathFunctionParser"* %0, %"class.blink::CSSParserToken"* dereferenceable(24) %37)
  br label %38

38:                                               ; preds = %34, %32
  %39 = phi i32 [ %33, %32 ], [ %9, %34 ]
  %40 = load i32, i32* %4, align 4
  %41 = add i32 %40, -1
  store i32 %41, i32* %4, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %240, label %7

43:                                               ; preds = %16, %7
  %44 = load i32, i32* %4, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %240, label %46

46:                                               ; preds = %43
  %47 = bitcast %"class.blink::CSSParserToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #6
  %48 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %3, i64 0, i32 0
  store i24 -5592406, i24* %48, align 8
  %49 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %3, i64 0, i32 1
  store i32 -1431655766, i32* %49, align 4
  %50 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %3, i64 0, i32 2
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %50, align 8
  %51 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %3, i64 0, i32 3, i32 0
  store double 0xFFFFFFFFFFFFFFFF, double* %51, align 8
  %52 = add i32 %44, -1
  %53 = tail call dereferenceable(24) %"class.blink::CSSParserToken"* @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %1, i32 %52) #6
  %54 = bitcast %"class.blink::CSSParserToken"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* align 8 %54, i64 24, i1 false)
  %55 = load i32, i32* %4, align 4
  %56 = add i32 %55, -1
  store i32 %56, i32* %4, align 4
  %57 = bitcast %"class.blink::CSSParserToken"* %3 to i32*
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, 63
  %60 = icmp eq i32 %59, 23
  br i1 %60, label %64, label %61

61:                                               ; preds = %46
  %62 = call i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* nonnull %3) #6
  %63 = icmp eq i32 %62, 817
  br i1 %63, label %64, label %66

64:                                               ; preds = %61, %46
  %65 = icmp eq i32 %9, 0
  br label %238

66:                                               ; preds = %61
  %67 = call i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* nonnull %3) #6
  %68 = icmp eq i32 %67, 821
  br i1 %68, label %69, label %175

69:                                               ; preds = %66
  %70 = icmp eq i32 %9, 2
  br i1 %70, label %71, label %238

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %73, %75
  br i1 %76, label %77, label %116, !prof !2

77:                                               ; preds = %71
  %78 = add i32 %73, 1
  %79 = lshr i32 %73, 2
  %80 = add i32 %78, %79
  %81 = icmp ugt i32 %80, 4
  %82 = select i1 %81, i32 %80, i32 4
  %83 = icmp ugt i32 %82, %78
  %84 = select i1 %83, i32 %82, i32 %78
  %85 = icmp ult i32 %73, %84
  br i1 %85, label %86, label %116, !prof !3

86:                                               ; preds = %77
  %87 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %88 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %87, align 8
  %89 = icmp eq %"struct.blink::SizesMathValue"* %88, null
  %90 = zext i32 %84 to i64
  %91 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14SizesMathValueEEEmm(i64 %90) #6
  %92 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %91, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14SizesMathValueEEEPKcv, i64 0, i64 0)) #6
  br i1 %89, label %93, label %98

93:                                               ; preds = %86
  %94 = ptrtoint i8* %92 to i64
  %95 = bitcast %"class.blink::SizesMathFunctionParser"* %0 to i64*
  store atomic i64 %94, i64* %95 monotonic, align 8
  %96 = lshr i64 %91, 4
  %97 = trunc i64 %96 to i32
  store i32 %97, i32* %74, align 8
  br label %116

98:                                               ; preds = %86
  %99 = lshr i64 %91, 4
  %100 = ptrtoint i8* %92 to i64
  %101 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %87, align 8
  %102 = icmp ne i8* %92, null
  %103 = icmp ne %"struct.blink::SizesMathValue"* %101, null
  %104 = and i1 %102, %103
  %105 = bitcast %"struct.blink::SizesMathValue"* %101 to i8*
  br i1 %104, label %106, label %112, !prof !3

106:                                              ; preds = %98
  %107 = load i32, i32* %72, align 4
  %108 = zext i32 %107 to i64
  %109 = shl nuw nsw i64 %108, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %92, i8* nonnull align 8 %105, i64 %109, i1 false) #6
  %110 = bitcast %"class.blink::SizesMathFunctionParser"* %0 to i8**
  %111 = load i8*, i8** %110, align 8
  br label %112

112:                                              ; preds = %106, %98
  %113 = phi i8* [ %111, %106 ], [ %105, %98 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %113) #6
  %114 = bitcast %"class.blink::SizesMathFunctionParser"* %0 to i64*
  store atomic i64 %100, i64* %114 monotonic, align 8
  %115 = trunc i64 %99 to i32
  store i32 %115, i32* %74, align 8
  br label %116

116:                                              ; preds = %71, %77, %93, %112
  %117 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %117, align 8
  %119 = load i32, i32* %72, align 4
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %118, i64 %120, i32 0
  store double 0.000000e+00, double* %121, align 8
  %122 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %118, i64 %120, i32 1
  store i8 0, i8* %122, align 8
  %123 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %118, i64 %120, i32 2
  store i32 4, i32* %123, align 4
  %124 = load i32, i32* %72, align 4
  %125 = add i32 %124, 1
  store i32 %125, i32* %72, align 4
  %126 = load i32, i32* %74, align 8
  %127 = icmp eq i32 %125, %126
  br i1 %127, label %128, label %166, !prof !2

128:                                              ; preds = %116
  %129 = add i32 %124, 2
  %130 = lshr i32 %125, 2
  %131 = add i32 %130, %129
  %132 = icmp ugt i32 %131, 4
  %133 = select i1 %132, i32 %131, i32 4
  %134 = icmp ugt i32 %133, %129
  %135 = select i1 %134, i32 %133, i32 %129
  %136 = icmp ult i32 %125, %135
  br i1 %136, label %137, label %166, !prof !3

137:                                              ; preds = %128
  %138 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %117, align 8
  %139 = icmp eq %"struct.blink::SizesMathValue"* %138, null
  %140 = zext i32 %135 to i64
  %141 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14SizesMathValueEEEmm(i64 %140) #6
  %142 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %141, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14SizesMathValueEEEPKcv, i64 0, i64 0)) #6
  br i1 %139, label %143, label %148

143:                                              ; preds = %137
  %144 = ptrtoint i8* %142 to i64
  %145 = bitcast %"class.blink::SizesMathFunctionParser"* %0 to i64*
  store atomic i64 %144, i64* %145 monotonic, align 8
  %146 = lshr i64 %141, 4
  %147 = trunc i64 %146 to i32
  store i32 %147, i32* %74, align 8
  br label %166

148:                                              ; preds = %137
  %149 = lshr i64 %141, 4
  %150 = ptrtoint i8* %142 to i64
  %151 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %117, align 8
  %152 = icmp ne i8* %142, null
  %153 = icmp ne %"struct.blink::SizesMathValue"* %151, null
  %154 = and i1 %152, %153
  %155 = bitcast %"struct.blink::SizesMathValue"* %151 to i8*
  br i1 %154, label %156, label %162, !prof !3

156:                                              ; preds = %148
  %157 = load i32, i32* %72, align 4
  %158 = zext i32 %157 to i64
  %159 = shl nuw nsw i64 %158, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %142, i8* nonnull align 8 %155, i64 %159, i1 false) #6
  %160 = bitcast %"class.blink::SizesMathFunctionParser"* %0 to i8**
  %161 = load i8*, i8** %160, align 8
  br label %162

162:                                              ; preds = %156, %148
  %163 = phi i8* [ %161, %156 ], [ %155, %148 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %163) #6
  %164 = bitcast %"class.blink::SizesMathFunctionParser"* %0 to i64*
  store atomic i64 %150, i64* %164 monotonic, align 8
  %165 = trunc i64 %149 to i32
  store i32 %165, i32* %74, align 8
  br label %166

166:                                              ; preds = %116, %128, %143, %162
  %167 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %117, align 8
  %168 = load i32, i32* %72, align 4
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %167, i64 %169, i32 0
  store double 0.000000e+00, double* %170, align 8
  %171 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %167, i64 %169, i32 1
  store i8 0, i8* %171, align 8
  %172 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %167, i64 %169, i32 2
  store i32 5, i32* %172, align 4
  %173 = load i32, i32* %72, align 4
  %174 = add i32 %173, 1
  store i32 %174, i32* %72, align 4
  br label %238

175:                                              ; preds = %66
  %176 = call i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* nonnull %3) #6
  %177 = icmp eq i32 %176, 819
  %178 = select i1 %177, i32 4, i32 5
  %179 = icmp eq i32 %9, 0
  br i1 %179, label %238, label %180

180:                                              ; preds = %175
  %181 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %182 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %183 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %184 = bitcast %"class.blink::SizesMathFunctionParser"* %0 to i8**
  %185 = bitcast %"class.blink::SizesMathFunctionParser"* %0 to i64*
  %186 = load i32, i32* %181, align 4
  br label %187

187:                                              ; preds = %227, %180
  %188 = phi i32 [ %186, %180 ], [ %235, %227 ]
  %189 = phi i32 [ 0, %180 ], [ %236, %227 ]
  %190 = load i32, i32* %182, align 8
  %191 = icmp eq i32 %188, %190
  br i1 %191, label %192, label %227, !prof !2

192:                                              ; preds = %187
  %193 = add i32 %188, 1
  %194 = lshr i32 %188, 2
  %195 = add i32 %193, %194
  %196 = icmp ugt i32 %195, 4
  %197 = select i1 %196, i32 %195, i32 4
  %198 = icmp ugt i32 %197, %193
  %199 = select i1 %198, i32 %197, i32 %193
  %200 = icmp ult i32 %188, %199
  br i1 %200, label %201, label %227, !prof !3

201:                                              ; preds = %192
  %202 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %183, align 8
  %203 = icmp eq %"struct.blink::SizesMathValue"* %202, null
  %204 = zext i32 %199 to i64
  %205 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14SizesMathValueEEEmm(i64 %204) #6
  %206 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %205, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14SizesMathValueEEEPKcv, i64 0, i64 0)) #6
  br i1 %203, label %207, label %211

207:                                              ; preds = %201
  %208 = ptrtoint i8* %206 to i64
  store atomic i64 %208, i64* %185 monotonic, align 8
  %209 = lshr i64 %205, 4
  %210 = trunc i64 %209 to i32
  store i32 %210, i32* %182, align 8
  br label %227

211:                                              ; preds = %201
  %212 = lshr i64 %205, 4
  %213 = ptrtoint i8* %206 to i64
  %214 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %183, align 8
  %215 = icmp ne i8* %206, null
  %216 = icmp ne %"struct.blink::SizesMathValue"* %214, null
  %217 = and i1 %215, %216
  %218 = bitcast %"struct.blink::SizesMathValue"* %214 to i8*
  br i1 %217, label %219, label %224, !prof !3

219:                                              ; preds = %211
  %220 = load i32, i32* %181, align 4
  %221 = zext i32 %220 to i64
  %222 = shl nuw nsw i64 %221, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %206, i8* nonnull align 8 %218, i64 %222, i1 false) #6
  %223 = load i8*, i8** %184, align 8
  br label %224

224:                                              ; preds = %219, %211
  %225 = phi i8* [ %223, %219 ], [ %218, %211 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %225) #6
  store atomic i64 %213, i64* %185 monotonic, align 8
  %226 = trunc i64 %212 to i32
  store i32 %226, i32* %182, align 8
  br label %227

227:                                              ; preds = %187, %192, %207, %224
  %228 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %183, align 8
  %229 = load i32, i32* %181, align 4
  %230 = zext i32 %229 to i64
  %231 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %228, i64 %230, i32 0
  store double 0.000000e+00, double* %231, align 8
  %232 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %228, i64 %230, i32 1
  store i8 0, i8* %232, align 8
  %233 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %228, i64 %230, i32 2
  store i32 %178, i32* %233, align 4
  %234 = load i32, i32* %181, align 4
  %235 = add i32 %234, 1
  store i32 %235, i32* %181, align 4
  %236 = add nuw i32 %189, 1
  %237 = icmp eq i32 %236, %9
  br i1 %237, label %238, label %187

238:                                              ; preds = %227, %175, %69, %166, %64
  %239 = phi i1 [ %65, %64 ], [ true, %166 ], [ false, %69 ], [ true, %175 ], [ true, %227 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #6
  br label %240

240:                                              ; preds = %38, %2, %43, %238
  %241 = phi i1 [ %239, %238 ], [ false, %43 ], [ false, %2 ], [ false, %38 ]
  ret i1 %241
}

declare i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23SizesMathFunctionParser11HandleCommaERN3WTF6VectorINS_14CSSParserTokenELj0ENS1_18PartitionAllocatorEEERKS3_(%"class.blink::SizesMathFunctionParser"* nocapture, %"class.WTF::Vector.0"* dereferenceable(16), %"class.blink::CSSParserToken"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %1, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %63, label %7

7:                                                ; preds = %3, %31
  %8 = phi i32 [ %36, %31 ], [ %5, %3 ]
  %9 = add i32 %8, -1
  %10 = tail call dereferenceable(24) %"class.blink::CSSParserToken"* @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %1, i32 %9) #6
  %11 = bitcast %"class.blink::CSSParserToken"* %10 to i32*
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 63
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %38, label %15

15:                                               ; preds = %7
  %16 = load i32, i32* %4, align 4
  %17 = add i32 %16, -1
  %18 = tail call dereferenceable(24) %"class.blink::CSSParserToken"* @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %1, i32 %17) #6
  %19 = bitcast %"class.blink::CSSParserToken"* %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 63
  %22 = icmp eq i32 %21, 23
  br i1 %22, label %38, label %23

23:                                               ; preds = %15
  %24 = load i32, i32* %4, align 4
  %25 = add i32 %24, -1
  %26 = tail call dereferenceable(24) %"class.blink::CSSParserToken"* @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %1, i32 %25) #6
  %27 = bitcast %"class.blink::CSSParserToken"* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 63
  %30 = icmp eq i32 %29, 22
  br i1 %30, label %38, label %31

31:                                               ; preds = %23
  %32 = load i32, i32* %4, align 4
  %33 = add i32 %32, -1
  %34 = tail call dereferenceable(24) %"class.blink::CSSParserToken"* @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %1, i32 %33) #6
  tail call void @_ZN5blink23SizesMathFunctionParser14AppendOperatorERKNS_14CSSParserTokenE(%"class.blink::SizesMathFunctionParser"* %0, %"class.blink::CSSParserToken"* dereferenceable(24) %34)
  %35 = load i32, i32* %4, align 4
  %36 = add i32 %35, -1
  store i32 %36, i32* %4, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %63, label %7

38:                                               ; preds = %23, %7, %15
  %39 = load i32, i32* %4, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %63, label %41

41:                                               ; preds = %38
  %42 = add i32 %39, -1
  %43 = tail call dereferenceable(24) %"class.blink::CSSParserToken"* @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %1, i32 %42) #6
  %44 = bitcast %"class.blink::CSSParserToken"* %43 to i32*
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 63
  %47 = icmp eq i32 %46, 23
  br i1 %47, label %63, label %48

48:                                               ; preds = %41
  %49 = load i32, i32* %4, align 4
  %50 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %1, i64 0, i32 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %49, %51
  br i1 %52, label %62, label %53, !prof !2

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %1, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %54, align 8
  %56 = zext i32 %49 to i64
  %57 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %55, i64 %56
  %58 = bitcast %"class.blink::CSSParserToken"* %57 to i8*
  %59 = bitcast %"class.blink::CSSParserToken"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 24, i1 false) #6
  %60 = load i32, i32* %4, align 4
  %61 = add i32 %60, 1
  store i32 %61, i32* %4, align 4
  br label %63

62:                                               ; preds = %48
  tail call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.0"* %1, %"class.blink::CSSParserToken"* dereferenceable(24) %2) #6
  br label %63

63:                                               ; preds = %31, %3, %62, %53, %38, %41
  %64 = phi i1 [ false, %41 ], [ false, %38 ], [ true, %53 ], [ true, %62 ], [ false, %3 ], [ false, %31 ]
  ret i1 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23SizesMathFunctionParser12AppendNumberERKNS_14CSSParserTokenE(%"class.blink::SizesMathFunctionParser"*, %"class.blink::CSSParserToken"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::SizesMathValue", align 8
  %4 = bitcast %"struct.blink::SizesMathValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 bitcast ({ double, i8, [3 x i8], i32 }* @__const._ZN5blink23SizesMathFunctionParser12AppendLengthERKNS_14CSSParserTokenE.value to i8*), i64 16, i1 false)
  %5 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %3, i64 0, i32 1
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %3, i64 0, i32 2
  store i32 6, i32* %7, align 4
  %8 = tail call double @_ZNK5blink14CSSParserToken12NumericValueEv(%"class.blink::CSSParserToken"* %1) #6
  store double %8, double* %5, align 8
  %9 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %22, label %14, !prof !2

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %15, align 8
  %17 = zext i32 %10 to i64
  %18 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %16, i64 %17
  %19 = bitcast %"struct.blink::SizesMathValue"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* nonnull align 8 %4, i64 16, i1 false) #6
  %20 = load i32, i32* %9, align 4
  %21 = add i32 %20, 1
  store i32 %21, i32* %9, align 4
  br label %24

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector"* %23, %"struct.blink::SizesMathValue"* nonnull dereferenceable(16) %3) #6
  br label %24

24:                                               ; preds = %14, %22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #6
  ret void
}

declare double @_ZNK5blink14CSSParserToken12NumericValueEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23SizesMathFunctionParser12AppendLengthERKNS_14CSSParserTokenE(%"class.blink::SizesMathFunctionParser"*, %"class.blink::CSSParserToken"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::SizesMathValue", align 8
  %4 = alloca double, align 8
  %5 = bitcast %"struct.blink::SizesMathValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ double, i8, [3 x i8], i32 }* @__const._ZN5blink23SizesMathFunctionParser12AppendLengthERKNS_14CSSParserTokenE.value to i8*), i64 16, i1 false)
  %6 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %3, i64 0, i32 0
  store double 0.000000e+00, double* %6, align 8
  %7 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %3, i64 0, i32 1
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %3, i64 0, i32 2
  store i32 6, i32* %8, align 4
  %9 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  store double 0.000000e+00, double* %4, align 8
  %10 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 1
  %11 = load %"class.blink::MediaValues"*, %"class.blink::MediaValues"** %10, align 8
  %12 = tail call double @_ZNK5blink14CSSParserToken12NumericValueEv(%"class.blink::CSSParserToken"* %1) #6
  %13 = bitcast %"class.blink::CSSParserToken"* %1 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = lshr i32 %14, 11
  %16 = and i32 %15, 127
  %17 = bitcast %"class.blink::MediaValues"* %11 to i1 (%"class.blink::MediaValues"*, double, i32, double*)***
  %18 = load i1 (%"class.blink::MediaValues"*, double, i32, double*)**, i1 (%"class.blink::MediaValues"*, double, i32, double*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::MediaValues"*, double, i32, double*)*, i1 (%"class.blink::MediaValues"*, double, i32, double*)** %18, i64 5
  %20 = load i1 (%"class.blink::MediaValues"*, double, i32, double*)*, i1 (%"class.blink::MediaValues"*, double, i32, double*)** %19, align 8
  %21 = call zeroext i1 %20(%"class.blink::MediaValues"* %11, double %12, i32 %16, double* nonnull dereferenceable(8) %4) #6
  br i1 %21, label %22, label %41

22:                                               ; preds = %2
  %23 = bitcast double* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"struct.blink::SizesMathValue"* %3 to i64*
  store i64 %24, i64* %25, align 8
  store i8 1, i8* %7, align 8
  %26 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %39, label %31, !prof !2

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %32, align 8
  %34 = zext i32 %27 to i64
  %35 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %33, i64 %34
  %36 = bitcast %"struct.blink::SizesMathValue"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* nonnull align 8 %5, i64 16, i1 false) #6
  %37 = load i32, i32* %26, align 4
  %38 = add i32 %37, 1
  store i32 %38, i32* %26, align 4
  br label %41

39:                                               ; preds = %22
  %40 = getelementptr inbounds %"class.blink::SizesMathFunctionParser", %"class.blink::SizesMathFunctionParser"* %0, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector"* %40, %"struct.blink::SizesMathValue"* nonnull dereferenceable(16) %3) #6
  br label %41

41:                                               ; preds = %39, %31, %2
  %42 = phi i1 [ false, %2 ], [ true, %31 ], [ true, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #6
  ret i1 %42
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"*, %"struct.blink::SizesMathValue"* dereferenceable(16)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"struct.blink::SizesMathValue"* @_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector"* %0, i32 %5, %"struct.blink::SizesMathValue"* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %8, i64 %10
  %12 = bitcast %"struct.blink::SizesMathValue"* %11 to i8*
  %13 = bitcast %"struct.blink::SizesMathValue"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false) #6
  %14 = load i32, i32* %3, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::SizesMathValue"* @_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector"*, i32, %"struct.blink::SizesMathValue"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %4, align 8
  %6 = icmp ugt %"struct.blink::SizesMathValue"* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %5, i64 %10
  %12 = icmp ugt %"struct.blink::SizesMathValue"* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::SizesMathValue"* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14SizesMathValueEEEmm(i64 %26) #6
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14SizesMathValueEEEPKcv, i64 0, i64 0)) #6
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 4
  %36 = ptrtoint i8* %28 to i64
  %37 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne %"struct.blink::SizesMathValue"* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast %"struct.blink::SizesMathValue"* %37 to i8*
  br i1 %40, label %42, label %49, !prof !3

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %41, i64 %46, i1 false) #6
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #6
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint %"struct.blink::SizesMathValue"* %2 to i64
  %55 = ptrtoint %"struct.blink::SizesMathValue"* %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 4
  %58 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !3

68:                                               ; preds = %53
  %69 = icmp eq %"struct.blink::SizesMathValue"* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14SizesMathValueEEEmm(i64 %70) #6
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14SizesMathValueEEEPKcv, i64 0, i64 0)) #6
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne %"struct.blink::SizesMathValue"* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast %"struct.blink::SizesMathValue"* %77 to i8*
  br i1 %80, label %82, label %88, !prof !3

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* nonnull align 8 %81, i64 %85, i1 false) #6
  %86 = bitcast %"class.WTF::Vector"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #6
  %90 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 4
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to %"struct.blink::SizesMathValue"*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi %"struct.blink::SizesMathValue"* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi %"struct.blink::SizesMathValue"* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret %"struct.blink::SizesMathValue"* %99
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14SizesMathValueEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #6
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::CSSParserToken"* @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #6
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #6
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %23 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %24, i64 %25
  ret %"class.blink::CSSParserToken"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.0"*, %"class.blink::CSSParserToken"* dereferenceable(24)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %8 = icmp ugt %"class.blink::CSSParserToken"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %7, i64 %10
  %12 = icmp ugt %"class.blink::CSSParserToken"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::CSSParserToken"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64 %26) #6
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #6
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.0"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %27, 24
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::CSSParserToken"*
  br label %99

35:                                               ; preds = %24
  %36 = udiv i64 %27, 24
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::CSSParserToken"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::CSSParserToken"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = mul nuw nsw i64 %45, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #6
  %47 = bitcast %"class.WTF::Vector.0"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #6
  %51 = bitcast %"class.WTF::Vector.0"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::CSSParserToken"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::CSSParserToken"* %1 to i64
  %56 = ptrtoint %"class.blink::CSSParserToken"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 24
  %59 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::CSSParserToken"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64 %71) #6
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #6
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.0"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::CSSParserToken"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::CSSParserToken"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = mul nuw nsw i64 %85, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #6
  %87 = bitcast %"class.WTF::Vector.0"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #6
  %91 = bitcast %"class.WTF::Vector.0"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = udiv i64 %72, 24
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::CSSParserToken"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::CSSParserToken"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::CSSParserToken"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::CSSParserToken"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %100, i64 %103
  %105 = bitcast %"class.blink::CSSParserToken"* %104 to i8*
  %106 = bitcast %"class.blink::CSSParserToken"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 24, i1 false) #6
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #6
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector"*, %"struct.blink::SizesMathValue"* dereferenceable(16)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"struct.blink::SizesMathValue"* @_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector"* %0, i32 %5, %"struct.blink::SizesMathValue"* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %8, i64 %10
  %12 = bitcast %"struct.blink::SizesMathValue"* %11 to i8*
  %13 = bitcast %"struct.blink::SizesMathValue"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false) #6
  %14 = load i32, i32* %3, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.blink::SizesMathValue"* @_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #6
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #6
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %24, i64 %25
  ret %"struct.blink::SizesMathValue"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector"*, %"struct.blink::SizesMathValue"* dereferenceable(16)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"struct.blink::SizesMathValue"* @_ZN3WTF6VectorIN5blink14SizesMathValueELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector"* %0, i32 %5, %"struct.blink::SizesMathValue"* %1) #6
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.blink::SizesMathValue"*, %"struct.blink::SizesMathValue"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.blink::SizesMathValue", %"struct.blink::SizesMathValue"* %8, i64 %10
  %12 = bitcast %"struct.blink::SizesMathValue"* %11 to i8*
  %13 = bitcast %"struct.blink::SizesMathValue"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false) #6
  %14 = load i32, i32* %3, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %3, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
