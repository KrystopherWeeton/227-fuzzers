; ModuleID = '../../third_party/nasm/output/outieee.c'
source_filename = "../../third_party/nasm/output/outieee.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.dfmt = type { i8*, i8*, void ()*, void (i8*, i32, i32)*, void (i8*, i32, i64, i32, i8*)*, void (i8*, i8*)*, void (i32)*, void (i32, i8*)*, void ()*, %struct.pragma_facility* }
%struct.pragma_facility = type { i8*, i32 (%struct.pragma*)* }
%struct.pragma = type { %struct.pragma_facility*, i8*, i8*, i8*, i32 }
%struct.ofmt = type { i8*, i8*, i8*, i32, i32, %struct.dfmt**, %struct.dfmt*, i8*, void ()*, void ()*, void (%struct.out_data*)*, void (i32, i8*, i32, i64, i32, i32)*, void (i8*, i32, i64, i32, i8*)*, i32 (i8*, i32*)*, i32 (i8*, i32, i32, i32*, i8*)*, void (i32, i32)*, i32 (i32)*, i32 (i32, i8*)*, void ()*, %struct.pragma_facility* }
%struct.out_data = type { i64, i32, i32, i32, i32, i32, i32, i64, %struct.itemplate*, i8*, i64, i32, i32, i64, %struct.src_location }
%struct.itemplate = type opaque
%struct.src_location = type { i8*, i32 }
%struct.FileName = type { %struct.FileName*, i8*, i32 }
%struct.Array = type { %struct.Array*, i32, i32 }
%struct.ieeeSection = type { %struct.ieeeSection*, i8*, %struct.ieeeObjData*, %struct.ieeeObjData*, %struct.ieeeFixupp*, %struct.ieeeFixupp*, i32, i32, i32, i32, i32, i32, i64, %struct.ieeePublic*, %struct.ieeePublic**, %struct.ieeePublic*, %struct.ieeePublic**, i32 }
%struct.ieeeObjData = type { %struct.ieeeObjData*, [1024 x i8] }
%struct.ieeeFixupp = type { %struct.ieeeFixupp*, i32, i16, i32, i32, i32, i32 }
%struct.ieeePublic = type { %struct.ieeePublic*, i8*, i32, i32, i32, i32 }
%struct.ExtBack = type { %struct.ExtBack*, [512 x i32] }
%struct.ieeeExternal = type { %struct.ieeeExternal*, i8*, i32 }
%struct.compile_time = type { i64, i8, i8, i8, i64, %struct.tm, %struct.tm }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@.str = private unnamed_addr constant [46 x i8] c"IEEE-695 (LADsoft variant) object file format\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"ieee\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c".o\00", align 1
@ladsoft_debug_arr = internal constant [3 x %struct.dfmt*] [%struct.dfmt* @ladsoft_debug_form, %struct.dfmt* @null_debug_form, %struct.dfmt* null], align 16
@ladsoft_debug_form = internal constant %struct.dfmt { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), void ()* @dbgls_init, void (i8*, i32, i32)* @dbgls_linnum, void (i8*, i32, i64, i32, i8*)* @dbgls_deflabel, void (i8*, i8*)* @null_debug_directive, void (i32)* @dbgls_typevalue, void (i32, i8*)* @dbgls_output, void ()* @dbgls_cleanup, %struct.pragma_facility* null }, align 8
@of_ieee = hidden local_unnamed_addr constant %struct.ofmt { i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i32 1, i32 32, %struct.dfmt** getelementptr inbounds ([3 x %struct.dfmt*], [3 x %struct.dfmt*]* @ladsoft_debug_arr, i32 0, i32 0), %struct.dfmt* @ladsoft_debug_form, i8* null, void ()* @ieee_init, void ()* @null_reset, void (%struct.out_data*)* @nasm_do_legacy_output, void (i32, i8*, i32, i64, i32, i32)* @ieee_out, void (i8*, i32, i64, i32, i8*)* @ieee_deflabel, i32 (i8*, i32*)* @ieee_segment, i32 (i8*, i32, i32, i32*, i8*)* null, void (i32, i32)* @ieee_sectalign, i32 (i32)* @ieee_segbase, i32 (i32, i8*)* @ieee_directive, void ()* @ieee_cleanup, %struct.pragma_facility* null }, align 8
@null_debug_form = external constant %struct.dfmt, align 8
@.str.3 = private unnamed_addr constant [22 x i8] c"LADsoft Debug Records\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"ladsoft\00", align 1
@fnhead = internal global %struct.FileName* null, align 8
@fntail = internal unnamed_addr global %struct.FileName** null, align 8
@arrindex = internal unnamed_addr global i32 0, align 4
@arrhead = internal global %struct.Array* null, align 8
@arrtail = internal unnamed_addr global %struct.Array** null, align 8
@.str.5 = private unnamed_addr constant [7 x i8] c"??LINE\00", align 1
@any_segs = internal unnamed_addr global i1 false, align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"__NASMDEFSEG\00", align 1
@.str.7 = private unnamed_addr constant [42 x i8] c"strange segment conditions in IEEE driver\00", align 1
@seghead = internal global %struct.ieeeSection* null, align 8
@.str.8 = private unnamed_addr constant [40 x i8] c"lineno directed to nonexistent segment?\00", align 1
@ebhead = internal global %struct.ExtBack* null, align 8
@.str.9 = private unnamed_addr constant [32 x i8] c"source of WRT must be an offset\00", align 1
@.str.10 = private unnamed_addr constant [43 x i8] c"unrecognised WRT value in ieee_write_fixup\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"target of WRT must be a section\00", align 1
@.str.12 = private unnamed_addr constant [51 x i8] c"Segment of a rel not supported in ieee_write_fixup\00", align 1
@.str.13 = private unnamed_addr constant [47 x i8] c"unrecognised segment value in ieee_write_fixup\00", align 1
@.str.14 = private unnamed_addr constant [59 x i8] c"IEEE format can only handle 2-byte segment base references\00", align 1
@ieee_seg_needs_update = internal unnamed_addr global %struct.ieeeSection* null, align 8
@last_defined = internal unnamed_addr global %struct.ieeePublic* null, align 8
@ieee_infile = internal global [4096 x i8] zeroinitializer, align 16
@inname = external local_unnamed_addr global i8*, align 8
@fpubhead = internal global %struct.ieeePublic* null, align 8
@fpubtail = internal unnamed_addr global %struct.ieeePublic** null, align 8
@exthead = internal global %struct.ieeeExternal* null, align 8
@exttail = internal unnamed_addr global %struct.ieeeExternal** null, align 8
@externals = internal unnamed_addr global i32 0, align 4
@ebtail = internal unnamed_addr global %struct.ExtBack** null, align 8
@segtail = internal unnamed_addr global %struct.ieeeSection** null, align 8
@ieee_entry_seg = internal unnamed_addr global i32 0, align 4
@ieee_uppercase = internal unnamed_addr global i1 false, align 4
@checksum = internal unnamed_addr global i32 0, align 4
@.str.15 = private unnamed_addr constant [38 x i8] c"code directed to nonexistent segment?\00", align 1
@.str.16 = private unnamed_addr constant [63 x i8] c"relative call to absolute address not supported by IEEE format\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"unrecognised symbol type `%s'\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"..start\00", align 1
@ieee_entry_ofs = internal unnamed_addr global i32 0, align 4
@.str.19 = private unnamed_addr constant [67 x i8] c"segment attributes specified on redeclaration of segment: ignoring\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"private\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"public\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"common\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"use16\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"use32\00", align 1
@.str.25 = private unnamed_addr constant [7 x i8] c"align=\00", align 1
@.str.26 = private unnamed_addr constant [36 x i8] c"segment alignment should be numeric\00", align 1
@.str.27 = private unnamed_addr constant [27 x i8] c"invalid alignment value %d\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"absolute=\00", align 1
@.str.29 = private unnamed_addr constant [59 x i8] c"argument to `absolute' segment attribute should be numeric\00", align 1
@nasm_ctype_tab = external local_unnamed_addr global [256 x i16], align 16
@_passn = external local_unnamed_addr global i64, align 8
@dfmt = external local_unnamed_addr global %struct.dfmt*, align 8
@official_compile_time = external local_unnamed_addr global %struct.compile_time, align 8
@.str.30 = private unnamed_addr constant [17 x i8] c"MBFNASM,%02X%s.\0A\00", align 1
@.str.31 = private unnamed_addr constant [13 x i8] c"CO0,%02X%s.\0A\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"AD8,4,L.\0A\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"DT%04d%02d%02d%02d%02d%02d.\0A\00", align 1
@.str.34 = private unnamed_addr constant [15 x i8] c"C0105,%02X%s.\0A\00", align 1
@.str.35 = private unnamed_addr constant [18 x i8] c"CO101,07ENDHEAD.\0A\00", align 1
@.str.36 = private unnamed_addr constant [16 x i8] c"ST%X,A,%02X%s.\0A\00", align 1
@.str.37 = private unnamed_addr constant [12 x i8] c"ASL%X,%lX.\0A\00", align 1
@.str.38 = private unnamed_addr constant [17 x i8] c"ST%X,%c,%02X%s.\0A\00", align 1
@.str.39 = private unnamed_addr constant [11 x i8] c"SA%X,%lX.\0A\00", align 1
@.str.40 = private unnamed_addr constant [11 x i8] c"ASS%X,%X.\0A\00", align 1
@.str.41 = private unnamed_addr constant [36 x i8] c"Start address records are incorrect\00", align 1
@.str.42 = private unnamed_addr constant [16 x i8] c"ASG,R%X,%lX,+.\0A\00", align 1
@.str.43 = private unnamed_addr constant [14 x i8] c"NI%X,%02X%s.\0A\00", align 1
@.str.44 = private unnamed_addr constant [18 x i8] c"ASI%X,R%X,%lX,+.\0A\00", align 1
@.str.45 = private unnamed_addr constant [18 x i8] c"ASI%X,%lX,%lX,+.\0A\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"ATI%X,T%X.\0A\00", align 1
@.str.47 = private unnamed_addr constant [11 x i8] c"ATI%X,%X.\0A\00", align 1
@.str.48 = private unnamed_addr constant [14 x i8] c"NX%X,%02X%s.\0A\00", align 1
@.str.49 = private unnamed_addr constant [17 x i8] c"CO100,06ENDSYM.\0A\00", align 1
@.str.50 = private unnamed_addr constant [17 x i8] c"TY%X,20,%X,%lX.\0A\00", align 1
@.str.51 = private unnamed_addr constant [14 x i8] c"NN%X,%02X%s.\0A\00", align 1
@.str.52 = private unnamed_addr constant [18 x i8] c"ASN%X,R%X,%lX,+.\0A\00", align 1
@.str.53 = private unnamed_addr constant [18 x i8] c"ASN%X,%lX,%lX,+.\0A\00", align 1
@.str.54 = private unnamed_addr constant [12 x i8] c"ATN%X,T%X.\0A\00", align 1
@.str.55 = private unnamed_addr constant [11 x i8] c"ATN%X,%X.\0A\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"SB%X.\0A\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"ME.\0A\00", align 1
@ofile = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.59 = private unnamed_addr constant [9 x i8] c"CS%02X.\0A\00", align 1
@.str.60 = private unnamed_addr constant [3 x i8] c"LD\00", align 1
@.str.61 = private unnamed_addr constant [5 x i8] c"%02X\00", align 1
@.str.62 = private unnamed_addr constant [3 x i8] c".\0A\00", align 1
@.str.63 = private unnamed_addr constant [3 x i8] c"%X\00", align 1
@.str.64 = private unnamed_addr constant [9 x i8] c"L%X,10,/\00", align 1
@.str.65 = private unnamed_addr constant [9 x i8] c"R%X,%X,+\00", align 1
@.str.66 = private unnamed_addr constant [18 x i8] c"R%X,%X,+,P,-,%X,-\00", align 1
@.str.67 = private unnamed_addr constant [20 x i8] c"R%X,%X,+,L%X,+,%X,-\00", align 1
@.str.68 = private unnamed_addr constant [21 x i8] c"R%X,%X,+,L%X,+,L%X,-\00", align 1
@.str.69 = private unnamed_addr constant [4 x i8] c"X%X\00", align 1
@.str.70 = private unnamed_addr constant [13 x i8] c"X%X,P,-,%X,-\00", align 1
@.str.71 = private unnamed_addr constant [9 x i8] c"Y%X,10,/\00", align 1
@.str.72 = private unnamed_addr constant [15 x i8] c"X%X,Y%X,+,%X,-\00", align 1
@.str.73 = private unnamed_addr constant [16 x i8] c"X%X,Y%X,+,L%X,-\00", align 1
@.str.74 = private unnamed_addr constant [12 x i8] c"LR(%s,%X).\0A\00", align 1
@switch.table.dbgls_typevalue = private unnamed_addr constant [6 x i32] [i32 1, i32 3, i32 5, i32 9, i32 10, i32 11], align 4

; Function Attrs: nofree nounwind ssp uwtable
define internal void @ieee_init() #0 {
  %1 = load i8*, i8** @inname, align 8
  %2 = tail call i64 @strlcpy(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @ieee_infile, i64 0, i64 0), i8* %1, i64 4096) #13
  store i1 false, i1* @any_segs, align 1
  store %struct.ieeePublic* null, %struct.ieeePublic** @fpubhead, align 8
  store %struct.ieeePublic** @fpubhead, %struct.ieeePublic*** @fpubtail, align 8
  store %struct.ieeeExternal* null, %struct.ieeeExternal** @exthead, align 8
  store %struct.ieeeExternal** @exthead, %struct.ieeeExternal*** @exttail, align 8
  store i32 1, i32* @externals, align 4
  store %struct.ExtBack* null, %struct.ExtBack** @ebhead, align 8
  store %struct.ExtBack** @ebhead, %struct.ExtBack*** @ebtail, align 8
  store %struct.ieeeSection* null, %struct.ieeeSection** @ieee_seg_needs_update, align 8
  store %struct.ieeeSection* null, %struct.ieeeSection** @seghead, align 8
  store %struct.ieeeSection** @seghead, %struct.ieeeSection*** @segtail, align 8
  store i32 -1, i32* @ieee_entry_seg, align 4
  store i1 false, i1* @ieee_uppercase, align 4
  store i32 0, i32* @checksum, align 4
  ret void
}

declare void @null_reset() #1

declare void @nasm_do_legacy_output(%struct.out_data*) #1

; Function Attrs: nounwind ssp uwtable
define internal void @ieee_out(i32, i8* nocapture readonly, i32, i64, i32, i32) #2 {
  %7 = alloca i32, align 4
  %8 = load i1, i1* @any_segs, align 1
  br i1 %8, label %15, label %9

9:                                                ; preds = %6
  %10 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #13
  store i32 -1431655766, i32* %7, align 4
  %11 = call i32 @ieee_segment(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i32* nonnull %7)
  %12 = icmp eq i32 %11, %0
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0)) #16
  unreachable

14:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #13
  br label %15

15:                                               ; preds = %14, %6
  %16 = load %struct.ieeeSection*, %struct.ieeeSection** @seghead, align 8
  %17 = icmp eq %struct.ieeeSection* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %15, %23
  %19 = phi %struct.ieeeSection* [ %25, %23 ], [ %16, %15 ]
  %20 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 6
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, %0
  br i1 %22, label %28, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 0
  %25 = load %struct.ieeeSection*, %struct.ieeeSection** %24, align 8
  %26 = icmp eq %struct.ieeeSection* %25, null
  br i1 %26, label %27, label %18

27:                                               ; preds = %23, %15
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

28:                                               ; preds = %18
  %29 = icmp eq i32 %2, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = icmp eq i64 %3, 0
  br i1 %31, label %307, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 8
  %34 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 3
  %35 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 2
  %36 = bitcast %struct.ieeeObjData** %34 to i8***
  %37 = bitcast %struct.ieeeObjData** %34 to i8**
  %38 = bitcast %struct.ieeeObjData** %35 to i8**
  br label %39

39:                                               ; preds = %32, %62
  %40 = phi i8* [ %1, %32 ], [ %43, %62 ]
  %41 = phi i64 [ %3, %32 ], [ %42, %62 ]
  %42 = add i64 %41, -1
  %43 = getelementptr inbounds i8, i8* %40, i64 1
  %44 = load i8, i8* %40, align 1
  %45 = load i32, i32* %33, align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %33, align 8
  %47 = srem i32 %45, 1024
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %39
  %50 = load %struct.ieeeObjData*, %struct.ieeeObjData** %34, align 8
  br label %62

51:                                               ; preds = %39
  %52 = load %struct.ieeeObjData*, %struct.ieeeObjData** %35, align 8
  %53 = icmp eq %struct.ieeeObjData* %52, null
  %54 = tail call noalias i8* @nasm_malloc(i64 1032) #17
  br i1 %53, label %57, label %55

55:                                               ; preds = %51
  %56 = load i8**, i8*** %36, align 8
  br label %57

57:                                               ; preds = %51, %55
  %58 = phi i8** [ %56, %55 ], [ %37, %51 ]
  %59 = phi i8** [ %37, %55 ], [ %38, %51 ]
  store i8* %54, i8** %58, align 8
  store i8* %54, i8** %59, align 8
  %60 = bitcast i8* %54 to %struct.ieeeObjData*
  %61 = bitcast i8* %54 to %struct.ieeeObjData**
  store %struct.ieeeObjData* null, %struct.ieeeObjData** %61, align 8
  br label %62

62:                                               ; preds = %49, %57
  %63 = phi %struct.ieeeObjData* [ %50, %49 ], [ %60, %57 ]
  %64 = sext i32 %47 to i64
  %65 = getelementptr inbounds %struct.ieeeObjData, %struct.ieeeObjData* %63, i64 0, i32 1, i64 %64
  store i8 %44, i8* %65, align 1
  %66 = icmp eq i64 %42, 0
  br i1 %66, label %307, label %39

67:                                               ; preds = %28
  %68 = icmp eq i32 %2, 7
  %69 = icmp eq i32 %2, 8
  switch i32 %2, label %307 [
    i32 3, label %79
    i32 7, label %85
    i32 8, label %85
    i32 1, label %70
  ]

70:                                               ; preds = %67
  %71 = icmp eq i64 %3, 0
  br i1 %71, label %307, label %72

72:                                               ; preds = %70
  %73 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 8
  %74 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 3
  %75 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 2
  %76 = bitcast %struct.ieeeObjData** %74 to i8***
  %77 = bitcast %struct.ieeeObjData** %74 to i8**
  %78 = bitcast %struct.ieeeObjData** %75 to i8**
  br label %282

79:                                               ; preds = %67
  %80 = trunc i64 %3 to i32
  %81 = icmp slt i32 %80, 0
  %82 = sub i64 0, %3
  %83 = select i1 %81, i64 %82, i64 %3
  %84 = and i64 %83, 4294967295
  br label %88

85:                                               ; preds = %67, %67
  %86 = icmp eq i32 %4, -1
  br i1 %86, label %87, label %88

87:                                               ; preds = %85
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.16, i64 0, i64 0)) #13
  br label %88

88:                                               ; preds = %85, %87, %79
  %89 = phi i64 [ %84, %79 ], [ %3, %87 ], [ %3, %85 ]
  %90 = bitcast i8* %1 to i64*
  %91 = load i64, i64* %90, align 8
  br i1 %68, label %92, label %96

92:                                               ; preds = %88
  %93 = add i64 %89, 4294967294
  %94 = and i64 %91, 4294967295
  %95 = add i64 %93, %94
  br label %96

96:                                               ; preds = %92, %88
  %97 = phi i64 [ %95, %92 ], [ %91, %88 ]
  %98 = trunc i64 %97 to i32
  %99 = trunc i64 %89 to i32
  %100 = add i32 %99, -4
  %101 = select i1 %69, i32 %100, i32 0
  %102 = add i32 %101, %98
  %103 = zext i32 %2 to i64
  tail call fastcc void @ieee_write_fixup(i32 %4, i32 %5, %struct.ieeeSection* nonnull %19, i32 %99, i64 %103, i32 %102)
  %104 = icmp eq i64 %89, 2
  %105 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 8
  %106 = load i32, i32* %105, align 8
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %105, align 8
  %108 = srem i32 %106, 1024
  %109 = icmp eq i32 %108, 0
  br i1 %104, label %110, label %166

110:                                              ; preds = %96
  br i1 %109, label %114, label %111

111:                                              ; preds = %110
  %112 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 3
  %113 = load %struct.ieeeObjData*, %struct.ieeeObjData** %112, align 8
  br label %131

114:                                              ; preds = %110
  %115 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 2
  %116 = load %struct.ieeeObjData*, %struct.ieeeObjData** %115, align 8
  %117 = icmp eq %struct.ieeeObjData* %116, null
  %118 = tail call noalias i8* @nasm_malloc(i64 1032) #17
  %119 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 3
  br i1 %117, label %120, label %122

120:                                              ; preds = %114
  %121 = bitcast %struct.ieeeObjData** %119 to i8**
  br label %125

122:                                              ; preds = %114
  %123 = bitcast %struct.ieeeObjData** %119 to i8***
  %124 = load i8**, i8*** %123, align 8
  br label %125

125:                                              ; preds = %122, %120
  %126 = phi i8** [ %124, %122 ], [ %121, %120 ]
  %127 = phi %struct.ieeeObjData** [ %119, %122 ], [ %115, %120 ]
  store i8* %118, i8** %126, align 8
  %128 = bitcast %struct.ieeeObjData** %127 to i8**
  store i8* %118, i8** %128, align 8
  %129 = bitcast i8* %118 to %struct.ieeeObjData*
  %130 = bitcast i8* %118 to %struct.ieeeObjData**
  store %struct.ieeeObjData* null, %struct.ieeeObjData** %130, align 8
  br label %131

131:                                              ; preds = %125, %111
  %132 = phi %struct.ieeeObjData* [ %113, %111 ], [ %129, %125 ]
  %133 = trunc i32 %102 to i8
  %134 = sext i32 %108 to i64
  %135 = getelementptr inbounds %struct.ieeeObjData, %struct.ieeeObjData* %132, i64 0, i32 1, i64 %134
  store i8 %133, i8* %135, align 1
  %136 = lshr i32 %102, 8
  %137 = load i32, i32* %105, align 8
  %138 = add nsw i32 %137, 1
  store i32 %138, i32* %105, align 8
  %139 = srem i32 %137, 1024
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %144, label %141

141:                                              ; preds = %131
  %142 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 3
  %143 = load %struct.ieeeObjData*, %struct.ieeeObjData** %142, align 8
  br label %161

144:                                              ; preds = %131
  %145 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 2
  %146 = load %struct.ieeeObjData*, %struct.ieeeObjData** %145, align 8
  %147 = icmp eq %struct.ieeeObjData* %146, null
  %148 = tail call noalias i8* @nasm_malloc(i64 1032) #17
  %149 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 3
  br i1 %147, label %150, label %152

150:                                              ; preds = %144
  %151 = bitcast %struct.ieeeObjData** %149 to i8**
  br label %155

152:                                              ; preds = %144
  %153 = bitcast %struct.ieeeObjData** %149 to i8***
  %154 = load i8**, i8*** %153, align 8
  br label %155

155:                                              ; preds = %152, %150
  %156 = phi i8** [ %154, %152 ], [ %151, %150 ]
  %157 = phi %struct.ieeeObjData** [ %149, %152 ], [ %145, %150 ]
  store i8* %148, i8** %156, align 8
  %158 = bitcast %struct.ieeeObjData** %157 to i8**
  store i8* %148, i8** %158, align 8
  %159 = bitcast i8* %148 to %struct.ieeeObjData*
  %160 = bitcast i8* %148 to %struct.ieeeObjData**
  store %struct.ieeeObjData* null, %struct.ieeeObjData** %160, align 8
  br label %161

161:                                              ; preds = %141, %155
  %162 = phi %struct.ieeeObjData* [ %143, %141 ], [ %159, %155 ]
  %163 = trunc i32 %136 to i8
  %164 = sext i32 %139 to i64
  %165 = getelementptr inbounds %struct.ieeeObjData, %struct.ieeeObjData* %162, i64 0, i32 1, i64 %164
  store i8 %163, i8* %165, align 1
  br label %307

166:                                              ; preds = %96
  br i1 %109, label %170, label %167

167:                                              ; preds = %166
  %168 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 3
  %169 = load %struct.ieeeObjData*, %struct.ieeeObjData** %168, align 8
  br label %187

170:                                              ; preds = %166
  %171 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 2
  %172 = load %struct.ieeeObjData*, %struct.ieeeObjData** %171, align 8
  %173 = icmp eq %struct.ieeeObjData* %172, null
  %174 = tail call noalias i8* @nasm_malloc(i64 1032) #17
  %175 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 3
  br i1 %173, label %176, label %178

176:                                              ; preds = %170
  %177 = bitcast %struct.ieeeObjData** %175 to i8**
  br label %181

178:                                              ; preds = %170
  %179 = bitcast %struct.ieeeObjData** %175 to i8***
  %180 = load i8**, i8*** %179, align 8
  br label %181

181:                                              ; preds = %178, %176
  %182 = phi i8** [ %180, %178 ], [ %177, %176 ]
  %183 = phi %struct.ieeeObjData** [ %175, %178 ], [ %171, %176 ]
  store i8* %174, i8** %182, align 8
  %184 = bitcast %struct.ieeeObjData** %183 to i8**
  store i8* %174, i8** %184, align 8
  %185 = bitcast i8* %174 to %struct.ieeeObjData*
  %186 = bitcast i8* %174 to %struct.ieeeObjData**
  store %struct.ieeeObjData* null, %struct.ieeeObjData** %186, align 8
  br label %187

187:                                              ; preds = %181, %167
  %188 = phi %struct.ieeeObjData* [ %169, %167 ], [ %185, %181 ]
  %189 = trunc i32 %102 to i8
  %190 = sext i32 %108 to i64
  %191 = getelementptr inbounds %struct.ieeeObjData, %struct.ieeeObjData* %188, i64 0, i32 1, i64 %190
  store i8 %189, i8* %191, align 1
  %192 = lshr i32 %102, 8
  %193 = load i32, i32* %105, align 8
  %194 = add nsw i32 %193, 1
  store i32 %194, i32* %105, align 8
  %195 = srem i32 %193, 1024
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %200, label %197

197:                                              ; preds = %187
  %198 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 3
  %199 = load %struct.ieeeObjData*, %struct.ieeeObjData** %198, align 8
  br label %217

200:                                              ; preds = %187
  %201 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 2
  %202 = load %struct.ieeeObjData*, %struct.ieeeObjData** %201, align 8
  %203 = icmp eq %struct.ieeeObjData* %202, null
  %204 = tail call noalias i8* @nasm_malloc(i64 1032) #17
  %205 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 3
  br i1 %203, label %206, label %208

206:                                              ; preds = %200
  %207 = bitcast %struct.ieeeObjData** %205 to i8**
  br label %211

208:                                              ; preds = %200
  %209 = bitcast %struct.ieeeObjData** %205 to i8***
  %210 = load i8**, i8*** %209, align 8
  br label %211

211:                                              ; preds = %208, %206
  %212 = phi i8** [ %210, %208 ], [ %207, %206 ]
  %213 = phi %struct.ieeeObjData** [ %205, %208 ], [ %201, %206 ]
  store i8* %204, i8** %212, align 8
  %214 = bitcast %struct.ieeeObjData** %213 to i8**
  store i8* %204, i8** %214, align 8
  %215 = bitcast i8* %204 to %struct.ieeeObjData*
  %216 = bitcast i8* %204 to %struct.ieeeObjData**
  store %struct.ieeeObjData* null, %struct.ieeeObjData** %216, align 8
  br label %217

217:                                              ; preds = %211, %197
  %218 = phi %struct.ieeeObjData* [ %199, %197 ], [ %215, %211 ]
  %219 = trunc i32 %192 to i8
  %220 = sext i32 %195 to i64
  %221 = getelementptr inbounds %struct.ieeeObjData, %struct.ieeeObjData* %218, i64 0, i32 1, i64 %220
  store i8 %219, i8* %221, align 1
  %222 = lshr i32 %102, 16
  %223 = load i32, i32* %105, align 8
  %224 = add nsw i32 %223, 1
  store i32 %224, i32* %105, align 8
  %225 = srem i32 %223, 1024
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %230, label %227

227:                                              ; preds = %217
  %228 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 3
  %229 = load %struct.ieeeObjData*, %struct.ieeeObjData** %228, align 8
  br label %247

230:                                              ; preds = %217
  %231 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 2
  %232 = load %struct.ieeeObjData*, %struct.ieeeObjData** %231, align 8
  %233 = icmp eq %struct.ieeeObjData* %232, null
  %234 = tail call noalias i8* @nasm_malloc(i64 1032) #17
  %235 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 3
  br i1 %233, label %236, label %238

236:                                              ; preds = %230
  %237 = bitcast %struct.ieeeObjData** %235 to i8**
  br label %241

238:                                              ; preds = %230
  %239 = bitcast %struct.ieeeObjData** %235 to i8***
  %240 = load i8**, i8*** %239, align 8
  br label %241

241:                                              ; preds = %238, %236
  %242 = phi i8** [ %240, %238 ], [ %237, %236 ]
  %243 = phi %struct.ieeeObjData** [ %235, %238 ], [ %231, %236 ]
  store i8* %234, i8** %242, align 8
  %244 = bitcast %struct.ieeeObjData** %243 to i8**
  store i8* %234, i8** %244, align 8
  %245 = bitcast i8* %234 to %struct.ieeeObjData*
  %246 = bitcast i8* %234 to %struct.ieeeObjData**
  store %struct.ieeeObjData* null, %struct.ieeeObjData** %246, align 8
  br label %247

247:                                              ; preds = %241, %227
  %248 = phi %struct.ieeeObjData* [ %229, %227 ], [ %245, %241 ]
  %249 = trunc i32 %222 to i8
  %250 = sext i32 %225 to i64
  %251 = getelementptr inbounds %struct.ieeeObjData, %struct.ieeeObjData* %248, i64 0, i32 1, i64 %250
  store i8 %249, i8* %251, align 1
  %252 = lshr i32 %102, 24
  %253 = load i32, i32* %105, align 8
  %254 = add nsw i32 %253, 1
  store i32 %254, i32* %105, align 8
  %255 = srem i32 %253, 1024
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %260, label %257

257:                                              ; preds = %247
  %258 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 3
  %259 = load %struct.ieeeObjData*, %struct.ieeeObjData** %258, align 8
  br label %277

260:                                              ; preds = %247
  %261 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 2
  %262 = load %struct.ieeeObjData*, %struct.ieeeObjData** %261, align 8
  %263 = icmp eq %struct.ieeeObjData* %262, null
  %264 = tail call noalias i8* @nasm_malloc(i64 1032) #17
  %265 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %19, i64 0, i32 3
  br i1 %263, label %266, label %268

266:                                              ; preds = %260
  %267 = bitcast %struct.ieeeObjData** %265 to i8**
  br label %271

268:                                              ; preds = %260
  %269 = bitcast %struct.ieeeObjData** %265 to i8***
  %270 = load i8**, i8*** %269, align 8
  br label %271

271:                                              ; preds = %268, %266
  %272 = phi i8** [ %270, %268 ], [ %267, %266 ]
  %273 = phi %struct.ieeeObjData** [ %265, %268 ], [ %261, %266 ]
  store i8* %264, i8** %272, align 8
  %274 = bitcast %struct.ieeeObjData** %273 to i8**
  store i8* %264, i8** %274, align 8
  %275 = bitcast i8* %264 to %struct.ieeeObjData*
  %276 = bitcast i8* %264 to %struct.ieeeObjData**
  store %struct.ieeeObjData* null, %struct.ieeeObjData** %276, align 8
  br label %277

277:                                              ; preds = %257, %271
  %278 = phi %struct.ieeeObjData* [ %259, %257 ], [ %275, %271 ]
  %279 = trunc i32 %252 to i8
  %280 = sext i32 %255 to i64
  %281 = getelementptr inbounds %struct.ieeeObjData, %struct.ieeeObjData* %278, i64 0, i32 1, i64 %280
  store i8 %279, i8* %281, align 1
  br label %307

282:                                              ; preds = %72, %302
  %283 = phi i64 [ %3, %72 ], [ %284, %302 ]
  %284 = add i64 %283, -1
  %285 = load i32, i32* %73, align 8
  %286 = add nsw i32 %285, 1
  store i32 %286, i32* %73, align 8
  %287 = srem i32 %285, 1024
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %291, label %289

289:                                              ; preds = %282
  %290 = load %struct.ieeeObjData*, %struct.ieeeObjData** %74, align 8
  br label %302

291:                                              ; preds = %282
  %292 = load %struct.ieeeObjData*, %struct.ieeeObjData** %75, align 8
  %293 = icmp eq %struct.ieeeObjData* %292, null
  %294 = tail call noalias i8* @nasm_malloc(i64 1032) #17
  br i1 %293, label %297, label %295

295:                                              ; preds = %291
  %296 = load i8**, i8*** %76, align 8
  br label %297

297:                                              ; preds = %291, %295
  %298 = phi i8** [ %296, %295 ], [ %77, %291 ]
  %299 = phi i8** [ %77, %295 ], [ %78, %291 ]
  store i8* %294, i8** %298, align 8
  store i8* %294, i8** %299, align 8
  %300 = bitcast i8* %294 to %struct.ieeeObjData*
  %301 = bitcast i8* %294 to %struct.ieeeObjData**
  store %struct.ieeeObjData* null, %struct.ieeeObjData** %301, align 8
  br label %302

302:                                              ; preds = %289, %297
  %303 = phi %struct.ieeeObjData* [ %290, %289 ], [ %300, %297 ]
  %304 = sext i32 %287 to i64
  %305 = getelementptr inbounds %struct.ieeeObjData, %struct.ieeeObjData* %303, i64 0, i32 1, i64 %304
  store i8 0, i8* %305, align 1
  %306 = icmp eq i64 %284, 0
  br i1 %306, label %307, label %282

307:                                              ; preds = %302, %62, %70, %30, %67, %277, %161
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @ieee_deflabel(i8*, i32, i64, i32, i8*) #2 {
  %6 = icmp eq i8* %4, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %5
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i64 0, i64 0), i8* nonnull %4) #13
  br label %8

8:                                                ; preds = %5, %7
  %9 = load i8, i8* %0, align 1
  %10 = icmp eq i8 %9, 46
  br i1 %10, label %11, label %24

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %0, i64 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 46
  br i1 %14, label %15, label %24

15:                                               ; preds = %11
  %16 = getelementptr inbounds i8, i8* %0, i64 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 64
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0)) #18
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %130

22:                                               ; preds = %19
  store i32 %1, i32* @ieee_entry_seg, align 4
  %23 = trunc i64 %2 to i32
  store i32 %23, i32* @ieee_entry_ofs, align 4
  br label %130

24:                                               ; preds = %15, %11, %8
  %25 = load %struct.ieeeSection*, %struct.ieeeSection** @ieee_seg_needs_update, align 8
  %26 = icmp eq %struct.ieeeSection* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %25, i64 0, i32 1
  store i8* %0, i8** %28, align 8
  br label %130

29:                                               ; preds = %24
  %30 = icmp sgt i32 %1, 1073741823
  %31 = icmp eq i32 %1, -1
  %32 = or i1 %31, %30
  %33 = and i32 %1, 1
  %34 = icmp eq i32 %33, 0
  %35 = or i1 %32, %34
  br i1 %35, label %36, label %130

36:                                               ; preds = %29
  br i1 %30, label %42, label %37

37:                                               ; preds = %36
  %38 = load %struct.ieeeSection*, %struct.ieeeSection** @seghead, align 8
  %39 = icmp ne %struct.ieeeSection* %38, null
  %40 = icmp ne i32 %3, 0
  %41 = and i1 %40, %39
  br i1 %41, label %56, label %83

42:                                               ; preds = %36
  %43 = icmp eq i32 %3, 0
  br i1 %43, label %130, label %44

44:                                               ; preds = %42
  %45 = tail call noalias i8* @nasm_malloc(i64 32) #17
  %46 = load i8**, i8*** bitcast (%struct.ieeePublic*** @fpubtail to i8***), align 8
  store i8* %45, i8** %46, align 8
  %47 = bitcast i8* %45 to %struct.ieeePublic**
  store i8* %45, i8** bitcast (%struct.ieeePublic*** @fpubtail to i8**), align 8
  store %struct.ieeePublic* null, %struct.ieeePublic** %47, align 8
  %48 = getelementptr inbounds i8, i8* %45, i64 8
  %49 = bitcast i8* %48 to i8**
  store i8* %0, i8** %49, align 8
  %50 = trunc i64 %2 to i32
  %51 = getelementptr inbounds i8, i8* %45, i64 16
  %52 = bitcast i8* %51 to i32*
  store i32 %50, i32* %52, align 8
  %53 = and i32 %1, -1073741825
  %54 = getelementptr inbounds i8, i8* %45, i64 20
  %55 = bitcast i8* %54 to i32*
  store i32 %53, i32* %55, align 4
  br label %130

56:                                               ; preds = %37, %79
  %57 = phi %struct.ieeeSection* [ %81, %79 ], [ %38, %37 ]
  %58 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %57, i64 0, i32 6
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %61, label %79

61:                                               ; preds = %56
  %62 = tail call noalias i8* @nasm_malloc(i64 32) #17
  %63 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %57, i64 0, i32 14
  %64 = bitcast %struct.ieeePublic*** %63 to i8***
  %65 = load i8**, i8*** %64, align 8
  store i8* %62, i8** %65, align 8
  store i8* %62, i8** bitcast (%struct.ieeePublic** @last_defined to i8**), align 8
  %66 = bitcast i8* %62 to %struct.ieeePublic**
  %67 = bitcast %struct.ieeePublic*** %63 to i8**
  store i8* %62, i8** %67, align 8
  store %struct.ieeePublic* null, %struct.ieeePublic** %66, align 8
  %68 = getelementptr inbounds i8, i8* %62, i64 8
  %69 = bitcast i8* %68 to i8**
  store i8* %0, i8** %69, align 8
  %70 = trunc i64 %2 to i32
  %71 = getelementptr inbounds i8, i8* %62, i64 16
  %72 = bitcast i8* %71 to i32*
  store i32 %70, i32* %72, align 8
  %73 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %57, i64 0, i32 7
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds i8, i8* %62, i64 24
  %76 = bitcast i8* %75 to i32*
  store i32 %74, i32* %76, align 8
  %77 = getelementptr inbounds i8, i8* %62, i64 20
  %78 = bitcast i8* %77 to i32*
  store i32 -1, i32* %78, align 4
  br label %130

79:                                               ; preds = %56
  %80 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %57, i64 0, i32 0
  %81 = load %struct.ieeeSection*, %struct.ieeeSection** %80, align 8
  %82 = icmp eq %struct.ieeeSection* %81, null
  br i1 %82, label %83, label %56

83:                                               ; preds = %79, %37
  br i1 %40, label %84, label %130

84:                                               ; preds = %83
  %85 = tail call noalias i8* @nasm_malloc(i64 24) #17
  %86 = load i8**, i8*** bitcast (%struct.ieeeExternal*** @exttail to i8***), align 8
  store i8* %85, i8** %86, align 8
  %87 = bitcast i8* %85 to %struct.ieeeExternal**
  store %struct.ieeeExternal* null, %struct.ieeeExternal** %87, align 8
  store i8* %85, i8** bitcast (%struct.ieeeExternal*** @exttail to i8**), align 8
  %88 = getelementptr inbounds i8, i8* %85, i64 8
  %89 = bitcast i8* %88 to i8**
  store i8* %0, i8** %89, align 8
  %90 = icmp eq i32 %3, 2
  %91 = trunc i64 %2 to i32
  %92 = select i1 %90, i32 %91, i32 0
  %93 = getelementptr inbounds i8, i8* %85, i64 16
  %94 = bitcast i8* %93 to i32*
  store i32 %92, i32* %94, align 8
  %95 = sdiv i32 %1, 2
  %96 = load %struct.ExtBack*, %struct.ExtBack** @ebhead, align 8
  %97 = icmp eq %struct.ExtBack* %96, null
  br i1 %97, label %98, label %103

98:                                               ; preds = %84
  %99 = tail call noalias i8* @nasm_zalloc(i64 2056) #17
  %100 = bitcast i8* %99 to %struct.ExtBack*
  %101 = load i8**, i8*** bitcast (%struct.ExtBack*** @ebtail to i8***), align 8
  store i8* %99, i8** %101, align 8
  %102 = bitcast i8* %99 to %struct.ExtBack**
  store %struct.ExtBack* null, %struct.ExtBack** %102, align 8
  store i8* %99, i8** bitcast (%struct.ExtBack*** @ebtail to i8**), align 8
  br label %103

103:                                              ; preds = %84, %98
  %104 = phi %struct.ExtBack* [ %96, %84 ], [ %100, %98 ]
  %105 = icmp sgt i32 %1, 1025
  br i1 %105, label %106, label %123

106:                                              ; preds = %103, %119
  %107 = phi %struct.ExtBack* [ %120, %119 ], [ %104, %103 ]
  %108 = phi i32 [ %121, %119 ], [ %95, %103 ]
  %109 = icmp eq %struct.ExtBack* %107, null
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %struct.ExtBack, %struct.ExtBack* %107, i64 0, i32 0
  %112 = load %struct.ExtBack*, %struct.ExtBack** %111, align 8
  %113 = icmp eq %struct.ExtBack* %112, null
  br i1 %113, label %114, label %119

114:                                              ; preds = %110, %106
  %115 = tail call noalias i8* @nasm_zalloc(i64 2056) #17
  %116 = bitcast i8* %115 to %struct.ExtBack*
  %117 = load i8**, i8*** bitcast (%struct.ExtBack*** @ebtail to i8***), align 8
  store i8* %115, i8** %117, align 8
  %118 = bitcast i8* %115 to %struct.ExtBack**
  store %struct.ExtBack* null, %struct.ExtBack** %118, align 8
  store i8* %115, i8** bitcast (%struct.ExtBack*** @ebtail to i8**), align 8
  br label %119

119:                                              ; preds = %110, %114
  %120 = phi %struct.ExtBack* [ %116, %114 ], [ %112, %110 ]
  %121 = add nsw i32 %108, -512
  %122 = icmp sgt i32 %121, 512
  br i1 %122, label %106, label %123

123:                                              ; preds = %119, %103
  %124 = phi i32 [ %95, %103 ], [ %121, %119 ]
  %125 = phi %struct.ExtBack* [ %104, %103 ], [ %120, %119 ]
  %126 = load i32, i32* @externals, align 4
  %127 = add nsw i32 %126, 1
  store i32 %127, i32* @externals, align 4
  %128 = sext i32 %124 to i64
  %129 = getelementptr inbounds %struct.ExtBack, %struct.ExtBack* %125, i64 0, i32 1, i64 %128
  store i32 %126, i32* %129, align 4
  br label %130

130:                                              ; preds = %83, %123, %44, %42, %29, %22, %19, %61, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ieee_segment(i8*, i32* nocapture) #2 {
  %3 = alloca i8, align 1
  %4 = icmp eq i8* %0, null
  br i1 %4, label %5, label %11

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4
  %6 = load i1, i1* @any_segs, align 1
  br i1 %6, label %7, label %223

7:                                                ; preds = %5
  %8 = load %struct.ieeeSection*, %struct.ieeeSection** @seghead, align 8
  %9 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %8, i64 0, i32 6
  %10 = load i32, i32* %9, align 8
  br label %223

11:                                               ; preds = %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #13
  store i8 -86, i8* %3, align 1
  br label %12

12:                                               ; preds = %12, %11
  %13 = phi i8* [ %0, %11 ], [ %15, %12 ]
  %14 = load i8, i8* %13, align 1
  %15 = getelementptr inbounds i8, i8* %13, i64 1
  switch i8 %14, label %16 [
    i8 46, label %12
    i8 0, label %48
  ]

16:                                               ; preds = %12, %24
  %17 = phi i8* [ %25, %24 ], [ %13, %12 ]
  %18 = phi i8 [ %26, %24 ], [ %14, %12 ]
  %19 = zext i8 %18 to i64
  %20 = getelementptr inbounds [256 x i16], [256 x i16]* @nasm_ctype_tab, i64 0, i64 %19
  %21 = load i16, i16* %20, align 2
  %22 = and i16 %21, 2
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %16
  %25 = getelementptr inbounds i8, i8* %17, i64 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %48, label %16

28:                                               ; preds = %16
  store i8 0, i8* %17, align 1
  %29 = getelementptr inbounds i8, i8* %17, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %48, label %32

32:                                               ; preds = %28, %40
  %33 = phi i8 [ %42, %40 ], [ %30, %28 ]
  %34 = phi i8* [ %41, %40 ], [ %29, %28 ]
  %35 = zext i8 %33 to i64
  %36 = getelementptr inbounds [256 x i16], [256 x i16]* @nasm_ctype_tab, i64 0, i64 %35
  %37 = load i16, i16* %36, align 2
  %38 = and i16 %37, 2
  %39 = icmp eq i16 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %32
  store i8 0, i8* %34, align 1
  %41 = getelementptr inbounds i8, i8* %34, i64 1
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %48, label %32

44:                                               ; preds = %32, %80
  %45 = phi i8 [ %69, %80 ], [ %33, %32 ]
  %46 = phi i8* [ %70, %80 ], [ %34, %32 ]
  %47 = phi i32 [ %81, %80 ], [ 1, %32 ]
  br label %52

48:                                               ; preds = %12, %24, %40, %64, %60, %76, %28
  %49 = phi i32 [ 0, %28 ], [ %47, %76 ], [ %47, %60 ], [ %47, %64 ], [ 0, %40 ], [ 0, %24 ], [ 0, %12 ]
  %50 = load %struct.ieeeSection*, %struct.ieeeSection** @seghead, align 8
  %51 = icmp eq %struct.ieeeSection* %50, null
  br i1 %51, label %110, label %82

52:                                               ; preds = %44, %60
  %53 = phi i8* [ %61, %60 ], [ %46, %44 ]
  %54 = phi i8 [ %62, %60 ], [ %45, %44 ]
  %55 = zext i8 %54 to i64
  %56 = getelementptr inbounds [256 x i16], [256 x i16]* @nasm_ctype_tab, i64 0, i64 %55
  %57 = load i16, i16* %56, align 2
  %58 = and i16 %57, 2
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %60, label %64

60:                                               ; preds = %52
  %61 = getelementptr inbounds i8, i8* %53, i64 1
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %48, label %52

64:                                               ; preds = %52
  store i8 0, i8* %53, align 1
  %65 = getelementptr inbounds i8, i8* %53, i64 1
  %66 = load i8, i8* %65, align 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %48, label %68

68:                                               ; preds = %64, %76
  %69 = phi i8 [ %78, %76 ], [ %66, %64 ]
  %70 = phi i8* [ %77, %76 ], [ %65, %64 ]
  %71 = zext i8 %69 to i64
  %72 = getelementptr inbounds [256 x i16], [256 x i16]* @nasm_ctype_tab, i64 0, i64 %71
  %73 = load i16, i16* %72, align 2
  %74 = and i16 %73, 2
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %68
  store i8 0, i8* %70, align 1
  %77 = getelementptr inbounds i8, i8* %70, i64 1
  %78 = load i8, i8* %77, align 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %48, label %68

80:                                               ; preds = %68
  %81 = add i32 %47, 1
  br label %44

82:                                               ; preds = %48, %105
  %83 = phi %struct.ieeeSection* [ %108, %105 ], [ %50, %48 ]
  %84 = phi i32 [ %106, %105 ], [ 1, %48 ]
  %85 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %83, i64 0, i32 1
  %86 = load i8*, i8** %85, align 8
  %87 = tail call i32 @strcmp(i8* %86, i8* %13) #18
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %105

89:                                               ; preds = %82
  %90 = icmp eq i32 %49, 0
  br i1 %90, label %97, label %91

91:                                               ; preds = %89
  %92 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %83, i64 0, i32 12
  %93 = load i64, i64* %92, align 8
  %94 = load i64, i64* @_passn, align 8
  %95 = icmp eq i64 %93, %94
  br i1 %95, label %96, label %97

96:                                               ; preds = %91
  tail call void (i32, i8*, ...) @nasm_warn(i32 2228224, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.19, i64 0, i64 0)) #13
  br label %97

97:                                               ; preds = %89, %96, %91
  %98 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %83, i64 0, i32 11
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 0
  %101 = select i1 %100, i32 16, i32 32
  store i32 %101, i32* %1, align 4
  %102 = load i64, i64* @_passn, align 8
  %103 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %83, i64 0, i32 12
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %83, i64 0, i32 6
  br label %220

105:                                              ; preds = %82
  %106 = add nuw nsw i32 %84, 1
  %107 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %83, i64 0, i32 0
  %108 = load %struct.ieeeSection*, %struct.ieeeSection** %107, align 8
  %109 = icmp eq %struct.ieeeSection* %108, null
  br i1 %109, label %110, label %82

110:                                              ; preds = %105, %48
  %111 = phi i32 [ 1, %48 ], [ %106, %105 ]
  %112 = tail call noalias i8* @nasm_malloc(i64 120) #17
  %113 = load i8**, i8*** bitcast (%struct.ieeeSection*** @segtail to i8***), align 8
  store i8* %112, i8** %113, align 8
  %114 = bitcast i8* %112 to %struct.ieeeSection**
  store %struct.ieeeSection* null, %struct.ieeeSection** %114, align 8
  store i8* %112, i8** bitcast (%struct.ieeeSection*** @segtail to i8**), align 8
  %115 = tail call i32 @seg_alloc() #13
  %116 = getelementptr inbounds i8, i8* %112, i64 48
  %117 = bitcast i8* %116 to i32*
  store i32 %115, i32* %117, align 8
  %118 = getelementptr inbounds i8, i8* %112, i64 52
  %119 = bitcast i8* %118 to i32*
  store i32 %111, i32* %119, align 4
  store i1 true, i1* @any_segs, align 1
  %120 = getelementptr inbounds i8, i8* %112, i64 8
  %121 = bitcast i8* %120 to i8**
  store i8* null, i8** %121, align 8
  %122 = getelementptr inbounds i8, i8* %112, i64 56
  %123 = bitcast i8* %122 to i32*
  store i32 0, i32* %123, align 8
  %124 = getelementptr inbounds i8, i8* %112, i64 60
  %125 = bitcast i8* %124 to i32*
  store i32 1, i32* %125, align 4
  %126 = load i32, i32* %1, align 4
  %127 = icmp eq i32 %126, 32
  %128 = zext i1 %127 to i32
  %129 = getelementptr inbounds i8, i8* %112, i64 68
  %130 = bitcast i8* %129 to i32*
  store i32 %128, i32* %130, align 4
  %131 = getelementptr inbounds i8, i8* %112, i64 112
  %132 = bitcast i8* %131 to i32*
  store i32 2, i32* %132, align 8
  %133 = getelementptr inbounds i8, i8* %112, i64 80
  %134 = bitcast i8* %133 to %struct.ieeePublic**
  store %struct.ieeePublic* null, %struct.ieeePublic** %134, align 8
  %135 = getelementptr inbounds i8, i8* %112, i64 88
  %136 = bitcast i8* %135 to i8**
  store i8* %133, i8** %136, align 8
  %137 = getelementptr inbounds i8, i8* %112, i64 16
  %138 = bitcast i8* %137 to %struct.ieeeObjData**
  store %struct.ieeeObjData* null, %struct.ieeeObjData** %138, align 8
  %139 = getelementptr inbounds i8, i8* %112, i64 32
  %140 = bitcast i8* %139 to %struct.ieeeFixupp**
  store %struct.ieeeFixupp* null, %struct.ieeeFixupp** %140, align 8
  %141 = getelementptr inbounds i8, i8* %112, i64 96
  %142 = bitcast i8* %141 to %struct.ieeePublic**
  store %struct.ieeePublic* null, %struct.ieeePublic** %142, align 8
  %143 = getelementptr inbounds i8, i8* %112, i64 104
  %144 = bitcast i8* %143 to i8**
  store i8* %141, i8** %144, align 8
  %145 = icmp eq i32 %49, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %110
  store i8* %112, i8** bitcast (%struct.ieeeSection** @ieee_seg_needs_update to i8**), align 8
  br label %213

147:                                              ; preds = %110, %205
  %148 = phi i32 [ %158, %205 ], [ %49, %110 ]
  %149 = phi i8* [ %153, %205 ], [ %13, %110 ]
  %150 = call i64 @strlen(i8* %149) #18
  %151 = getelementptr inbounds i8, i8* %149, i64 %150
  br label %152

152:                                              ; preds = %152, %147
  %153 = phi i8* [ %151, %147 ], [ %156, %152 ]
  %154 = load i8, i8* %153, align 1
  %155 = icmp eq i8 %154, 0
  %156 = getelementptr inbounds i8, i8* %153, i64 1
  br i1 %155, label %152, label %157

157:                                              ; preds = %152
  %158 = add nsw i32 %148, -1
  %159 = call i32 @strcasecmp(i8* %153, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #18
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %157
  store i32 0, i32* %132, align 8
  br label %205

162:                                              ; preds = %157
  %163 = call i32 @strcasecmp(i8* %153, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #18
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %162
  store i32 2, i32* %132, align 8
  br label %205

166:                                              ; preds = %162
  %167 = call i32 @strcasecmp(i8* %153, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #18
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  store i32 6, i32* %132, align 8
  br label %205

170:                                              ; preds = %166
  %171 = call i32 @strcasecmp(i8* %153, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0)) #18
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170
  store i32 0, i32* %130, align 4
  br label %205

174:                                              ; preds = %170
  %175 = call i32 @strcasecmp(i8* %153, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0)) #18
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  store i32 1, i32* %130, align 4
  br label %205

178:                                              ; preds = %174
  %179 = call i32 @strncasecmp(i8* %153, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i64 0, i64 0), i64 6) #18
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %194

181:                                              ; preds = %178
  %182 = getelementptr inbounds i8, i8* %153, i64 6
  %183 = call i64 @readnum(i8* %182, i8* nonnull %3) #13
  %184 = trunc i64 %183 to i32
  %185 = icmp eq i32 %184, 0
  %186 = select i1 %185, i32 1, i32 %184
  store i32 %186, i32* %125, align 4
  %187 = load i8, i8* %3, align 1, !range !2
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %191, label %189

189:                                              ; preds = %181
  store i32 1, i32* %125, align 4
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.26, i64 0, i64 0)) #13
  %190 = load i32, i32* %125, align 4
  br label %191

191:                                              ; preds = %181, %189
  %192 = phi i32 [ %186, %181 ], [ %190, %189 ]
  switch i32 %192, label %193 [
    i32 1, label %205
    i32 2, label %205
    i32 4, label %205
    i32 16, label %205
    i32 256, label %205
    i32 8, label %205
    i32 32, label %205
    i32 64, label %205
    i32 128, label %205
  ]

193:                                              ; preds = %191
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 %192) #13
  store i32 1, i32* %125, align 4
  br label %205

194:                                              ; preds = %178
  %195 = call i32 @strncasecmp(i8* %153, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i64 0, i64 0), i64 9) #18
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %205

197:                                              ; preds = %194
  %198 = getelementptr inbounds i8, i8* %153, i64 9
  %199 = call i64 @readnum(i8* %198, i8* nonnull %3) #13
  %200 = trunc i64 %199 to i32
  %201 = add i32 %200, 1073741824
  store i32 %201, i32* %125, align 4
  %202 = load i8, i8* %3, align 1, !range !2
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %205, label %204

204:                                              ; preds = %197
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.29, i64 0, i64 0)) #13
  br label %205

205:                                              ; preds = %197, %194, %165, %173, %191, %191, %191, %191, %191, %191, %191, %191, %191, %193, %204, %177, %169, %161
  %206 = icmp eq i32 %158, 0
  br i1 %206, label %207, label %147

207:                                              ; preds = %205
  %208 = load i32, i32* %125, align 4
  store i8* %112, i8** bitcast (%struct.ieeeSection** @ieee_seg_needs_update to i8**), align 8
  %209 = icmp sgt i32 %208, 1073741823
  br i1 %209, label %210, label %213

210:                                              ; preds = %207
  %211 = sext i32 %208 to i64
  %212 = add nsw i64 %211, -1073741824
  call void @define_label(i8* %13, i32 -1, i64 %212, i1 zeroext false) #13
  br label %216

213:                                              ; preds = %146, %207
  %214 = load i32, i32* %117, align 8
  %215 = add nsw i32 %214, 1
  call void @define_label(i8* %13, i32 %215, i64 0, i1 zeroext false) #13
  br label %216

216:                                              ; preds = %213, %210
  store %struct.ieeeSection* null, %struct.ieeeSection** @ieee_seg_needs_update, align 8
  %217 = load i32, i32* %130, align 4
  %218 = icmp eq i32 %217, 0
  %219 = select i1 %218, i32 16, i32 32
  store i32 %219, i32* %1, align 4
  br label %220

220:                                              ; preds = %216, %97
  %221 = phi i32* [ %104, %97 ], [ %117, %216 ]
  %222 = load i32, i32* %221, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #13
  br label %223

223:                                              ; preds = %5, %220, %7
  %224 = phi i32 [ %222, %220 ], [ %10, %7 ], [ 0, %5 ]
  ret i32 %224
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @ieee_sectalign(i32, i32) #0 {
  %3 = load %struct.ieeeSection*, %struct.ieeeSection** @seghead, align 8
  %4 = icmp eq %struct.ieeeSection* %3, null
  br i1 %4, label %26, label %5

5:                                                ; preds = %2, %10
  %6 = phi %struct.ieeeSection* [ %12, %10 ], [ %3, %2 ]
  %7 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, %0
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %6, i64 0, i32 0
  %12 = load %struct.ieeeSection*, %struct.ieeeSection** %11, align 8
  %13 = icmp eq %struct.ieeeSection* %12, null
  br i1 %13, label %26, label %5

14:                                               ; preds = %5
  %15 = icmp eq i32 %1, 0
  br i1 %15, label %26, label %16

16:                                               ; preds = %14
  %17 = tail call i32 @llvm.ctpop.i32(i32 %1), !range !3
  %18 = icmp ugt i32 %17, 1
  %19 = icmp ugt i32 %1, 256
  %20 = or i1 %19, %18
  br i1 %20, label %26, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %6, i64 0, i32 9
  %23 = load i32, i32* %22, align 4
  %24 = icmp ult i32 %23, %1
  br i1 %24, label %25, label %26

25:                                               ; preds = %21
  store i32 %1, i32* %22, align 4
  br label %26

26:                                               ; preds = %10, %14, %2, %21, %25, %16
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @ieee_segbase(i32) #3 {
  %2 = load %struct.ieeeSection*, %struct.ieeeSection** @seghead, align 8
  %3 = icmp eq %struct.ieeeSection* %2, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %1
  %5 = add nsw i32 %0, -1
  br label %6

6:                                                ; preds = %4, %11
  %7 = phi %struct.ieeeSection* [ %2, %4 ], [ %13, %11 ]
  %8 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %7, i64 0, i32 6
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, %5
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %7, i64 0, i32 0
  %13 = load %struct.ieeeSection*, %struct.ieeeSection** %12, align 8
  %14 = icmp eq %struct.ieeeSection* %13, null
  br i1 %14, label %20, label %6

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %7, i64 0, i32 9
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, 1073741823
  %19 = select i1 %18, i32 %17, i32 %0
  br label %20

20:                                               ; preds = %11, %1, %15
  %21 = phi i32 [ %19, %15 ], [ %0, %1 ], [ %0, %11 ]
  ret i32 %21
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal i32 @ieee_directive(i32, i8* nocapture readnone) #4 {
  %3 = icmp eq i32 %0, 29
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i1 true, i1* @ieee_uppercase, align 4
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 1, %4 ], [ 0, %2 ]
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @ieee_cleanup() #2 {
  %1 = alloca [40 x i8], align 16
  %2 = alloca [256 x i8], align 16
  %3 = alloca [256 x i8], align 16
  %4 = alloca [256 x i8], align 16
  %5 = alloca [256 x i8], align 16
  %6 = alloca [256 x i8], align 16
  %7 = load %struct.dfmt*, %struct.dfmt** @dfmt, align 8
  %8 = icmp eq %struct.dfmt* %7, @ladsoft_debug_form
  %9 = tail call i64 @strlen(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @ieee_infile, i64 0, i64 0)) #18
  tail call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.30, i64 0, i64 0), i64 %9, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @ieee_infile, i64 0, i64 0)) #13
  %10 = tail call i64 @nasm_comment_len() #13
  %11 = tail call i8* @nasm_comment() #13
  tail call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0), i64 %10, i8* %11) #13
  tail call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #13
  %12 = load i32, i32* getelementptr inbounds (%struct.compile_time, %struct.compile_time* @official_compile_time, i64 0, i32 5, i32 5), align 4
  %13 = add nsw i32 %12, 1900
  %14 = load i32, i32* getelementptr inbounds (%struct.compile_time, %struct.compile_time* @official_compile_time, i64 0, i32 5, i32 4), align 8
  %15 = add nsw i32 %14, 1
  %16 = load i32, i32* getelementptr inbounds (%struct.compile_time, %struct.compile_time* @official_compile_time, i64 0, i32 5, i32 3), align 4
  %17 = load i32, i32* getelementptr inbounds (%struct.compile_time, %struct.compile_time* @official_compile_time, i64 0, i32 5, i32 2), align 8
  %18 = load i32, i32* getelementptr inbounds (%struct.compile_time, %struct.compile_time* @official_compile_time, i64 0, i32 5, i32 1), align 4
  %19 = load i32, i32* getelementptr inbounds (%struct.compile_time, %struct.compile_time* @official_compile_time, i64 0, i32 5, i32 0), align 8
  tail call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i64 0, i64 0), i32 %13, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19) #13
  %20 = load %struct.FileName*, %struct.FileName** @fnhead, align 8
  %21 = icmp ne %struct.FileName* %20, null
  %22 = and i1 %8, %21
  br i1 %22, label %23, label %31

23:                                               ; preds = %0, %23
  %24 = phi %struct.FileName* [ %29, %23 ], [ %20, %0 ]
  %25 = getelementptr inbounds %struct.FileName, %struct.FileName* %24, i64 0, i32 1
  %26 = load i8*, i8** %25, align 8
  %27 = tail call i64 @strlen(i8* %26) #18
  tail call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34, i64 0, i64 0), i64 %27, i8* %26) #13
  %28 = getelementptr inbounds %struct.FileName, %struct.FileName* %24, i64 0, i32 0
  %29 = load %struct.FileName*, %struct.FileName** %28, align 8
  %30 = icmp eq %struct.FileName* %29, null
  br i1 %30, label %31, label %23

31:                                               ; preds = %23, %0
  tail call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35, i64 0, i64 0)) #13
  %32 = load i32, i32* @checksum, align 4
  %33 = add nsw i32 %32, 150
  store i32 %33, i32* @checksum, align 4
  %34 = and i32 %33, 127
  tail call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59, i64 0, i64 0), i32 %34) #13
  store i32 0, i32* @checksum, align 4
  %35 = load %struct.ieeeSection*, %struct.ieeeSection** @seghead, align 8
  br i1 %8, label %44, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %35, i64 0, i32 1
  %38 = load i8*, i8** %37, align 8
  %39 = tail call i32 @strcmp(i8* %38, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0)) #18
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %35, i64 0, i32 0
  %43 = load %struct.ieeeSection*, %struct.ieeeSection** %42, align 8
  br label %44

44:                                               ; preds = %41, %36, %31
  %45 = phi %struct.ieeeSection* [ %35, %31 ], [ %35, %36 ], [ %43, %41 ]
  %46 = icmp eq %struct.ieeeSection* %45, null
  br i1 %46, label %105, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 0
  br label %49

49:                                               ; preds = %101, %47
  %50 = phi %struct.ieeeSection* [ %45, %47 ], [ %103, %101 ]
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %48) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %48, i8 -86, i64 256, i1 false) #13
  %51 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %50, i64 0, i32 17
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 0
  %54 = select i1 %53, i32 83, i32 67
  %55 = icmp eq i32 %52, 6
  %56 = select i1 %55, i32 77, i32 %54
  %57 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %50, i64 0, i32 1
  %58 = load i8*, i8** %57, align 8
  %59 = load i1, i1* @ieee_uppercase, align 4
  br i1 %59, label %60, label %80

60:                                               ; preds = %49
  %61 = load i8, i8* %58, align 1
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %78, label %63

63:                                               ; preds = %60
  %64 = tail call i32** @__ctype_toupper_loc() #19
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i8 [ %61, %63 ], [ %76, %65 ]
  %67 = phi i8* [ %48, %63 ], [ %75, %65 ]
  %68 = phi i8* [ %58, %63 ], [ %70, %65 ]
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i8, i8* %68, i64 1
  %71 = sext i8 %66 to i64
  %72 = getelementptr inbounds i32, i32* %69, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = trunc i32 %73 to i8
  %75 = getelementptr inbounds i8, i8* %67, i64 1
  store i8 %74, i8* %67, align 1
  %76 = load i8, i8* %70, align 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %65

78:                                               ; preds = %65, %60
  %79 = phi i8* [ %48, %60 ], [ %75, %65 ]
  store i8 0, i8* %79, align 1
  br label %82

80:                                               ; preds = %49
  %81 = call i8* @strcpy(i8* nonnull %48, i8* %58) #13
  br label %82

82:                                               ; preds = %80, %78
  %83 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %50, i64 0, i32 9
  %84 = load i32, i32* %83, align 4
  %85 = icmp sgt i32 %84, 1073741823
  %86 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %50, i64 0, i32 7
  %87 = load i32, i32* %86, align 4
  %88 = call i64 @strlen(i8* nonnull %48) #18
  br i1 %85, label %89, label %95

89:                                               ; preds = %82
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.36, i64 0, i64 0), i32 %87, i64 %88, i8* nonnull %48) #13
  %90 = load i32, i32* %86, align 4
  %91 = load i32, i32* %83, align 4
  %92 = sext i32 %91 to i64
  %93 = shl nsw i64 %92, 4
  %94 = add nsw i64 %93, -17179869184
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.37, i64 0, i64 0), i32 %90, i64 %94) #13
  br label %101

95:                                               ; preds = %82
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 %87, i32 %56, i64 %88, i8* nonnull %48) #13
  %96 = load i32, i32* %86, align 4
  %97 = load i32, i32* %83, align 4
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i64 0, i64 0), i32 %96, i32 %97) #13
  %98 = load i32, i32* %86, align 4
  %99 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %50, i64 0, i32 8
  %100 = load i32, i32* %99, align 8
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.40, i64 0, i64 0), i32 %98, i32 %100) #13
  br label %101

101:                                              ; preds = %95, %89
  %102 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %50, i64 0, i32 0
  %103 = load %struct.ieeeSection*, %struct.ieeeSection** %102, align 8
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %48) #13
  %104 = icmp eq %struct.ieeeSection* %103, null
  br i1 %104, label %105, label %49

105:                                              ; preds = %101, %44
  %106 = load i32, i32* @ieee_entry_seg, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %125, label %108

108:                                              ; preds = %105
  %109 = load %struct.ieeeSection*, %struct.ieeeSection** @seghead, align 8
  %110 = icmp eq %struct.ieeeSection* %109, null
  br i1 %110, label %120, label %111

111:                                              ; preds = %108, %116
  %112 = phi %struct.ieeeSection* [ %118, %116 ], [ %109, %108 ]
  %113 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %112, i64 0, i32 6
  %114 = load i32, i32* %113, align 8
  %115 = icmp eq i32 %114, %106
  br i1 %115, label %121, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %112, i64 0, i32 0
  %118 = load %struct.ieeeSection*, %struct.ieeeSection** %117, align 8
  %119 = icmp eq %struct.ieeeSection* %118, null
  br i1 %119, label %120, label %111

120:                                              ; preds = %116, %108
  call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.41, i64 0, i64 0)) #16
  unreachable

121:                                              ; preds = %111
  %122 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %112, i64 0, i32 7
  %123 = load i32, i32* %122, align 4
  %124 = load i32, i32* @ieee_entry_ofs, align 4
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.42, i64 0, i64 0), i32 %123, i32 %124) #13
  br label %125

125:                                              ; preds = %121, %105
  %126 = load i32, i32* @checksum, align 4
  %127 = add nsw i32 %126, 150
  store i32 %127, i32* @checksum, align 4
  %128 = and i32 %127, 127
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59, i64 0, i64 0), i32 %128) #13
  store i32 0, i32* @checksum, align 4
  %129 = load %struct.ieeeSection*, %struct.ieeeSection** @seghead, align 8
  %130 = icmp eq %struct.ieeeSection* %129, null
  br i1 %130, label %199, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0
  br label %133

133:                                              ; preds = %194, %131
  %134 = phi %struct.ieeeSection* [ %129, %131 ], [ %197, %194 ]
  %135 = phi i32 [ 1, %131 ], [ %195, %194 ]
  %136 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %134, i64 0, i32 13
  %137 = load %struct.ieeePublic*, %struct.ieeePublic** %136, align 8
  %138 = icmp eq %struct.ieeePublic* %137, null
  br i1 %138, label %194, label %139

139:                                              ; preds = %133, %189
  %140 = phi %struct.ieeePublic* [ %192, %189 ], [ %137, %133 ]
  %141 = phi i32 [ %190, %189 ], [ %135, %133 ]
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %132) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %132, i8 -86, i64 256, i1 false) #13
  %142 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %140, i64 0, i32 1
  %143 = load i8*, i8** %142, align 8
  %144 = load i1, i1* @ieee_uppercase, align 4
  br i1 %144, label %145, label %165

145:                                              ; preds = %139
  %146 = load i8, i8* %143, align 1
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %163, label %148

148:                                              ; preds = %145
  %149 = tail call i32** @__ctype_toupper_loc() #19
  br label %150

150:                                              ; preds = %150, %148
  %151 = phi i8 [ %146, %148 ], [ %161, %150 ]
  %152 = phi i8* [ %132, %148 ], [ %160, %150 ]
  %153 = phi i8* [ %143, %148 ], [ %155, %150 ]
  %154 = load i32*, i32** %149, align 8
  %155 = getelementptr inbounds i8, i8* %153, i64 1
  %156 = sext i8 %151 to i64
  %157 = getelementptr inbounds i32, i32* %154, i64 %156
  %158 = load i32, i32* %157, align 4
  %159 = trunc i32 %158 to i8
  %160 = getelementptr inbounds i8, i8* %152, i64 1
  store i8 %159, i8* %152, align 1
  %161 = load i8, i8* %155, align 1
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %163, label %150

163:                                              ; preds = %150, %145
  %164 = phi i8* [ %132, %145 ], [ %160, %150 ]
  store i8 0, i8* %164, align 1
  br label %167

165:                                              ; preds = %139
  %166 = call i8* @strcpy(i8* nonnull %132, i8* %143) #13
  br label %167

167:                                              ; preds = %165, %163
  %168 = call i64 @strlen(i8* nonnull %132) #18
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.43, i64 0, i64 0), i32 %141, i64 %168, i8* nonnull %132) #13
  %169 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %140, i64 0, i32 3
  %170 = load i32, i32* %169, align 4
  %171 = icmp eq i32 %170, -1
  br i1 %171, label %172, label %177

172:                                              ; preds = %167
  %173 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %140, i64 0, i32 4
  %174 = load i32, i32* %173, align 8
  %175 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %140, i64 0, i32 2
  %176 = load i32, i32* %175, align 8
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.44, i64 0, i64 0), i32 %141, i32 %174, i32 %176) #13
  br label %181

177:                                              ; preds = %167
  %178 = shl nsw i32 %170, 4
  %179 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %140, i64 0, i32 2
  %180 = load i32, i32* %179, align 8
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.45, i64 0, i64 0), i32 %141, i32 %178, i32 %180) #13
  br label %181

181:                                              ; preds = %177, %172
  br i1 %8, label %182, label %189

182:                                              ; preds = %181
  %183 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %140, i64 0, i32 5
  %184 = load i32, i32* %183, align 4
  %185 = icmp sgt i32 %184, 255
  br i1 %185, label %186, label %188

186:                                              ; preds = %182
  %187 = add nsw i32 %184, -256
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i64 0, i64 0), i32 %141, i32 %187) #13
  br label %189

188:                                              ; preds = %182
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.47, i64 0, i64 0), i32 %141, i32 %184) #13
  br label %189

189:                                              ; preds = %188, %186, %181
  %190 = add nsw i32 %141, 1
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %132) #13
  %191 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %140, i64 0, i32 0
  %192 = load %struct.ieeePublic*, %struct.ieeePublic** %191, align 8
  %193 = icmp eq %struct.ieeePublic* %192, null
  br i1 %193, label %194, label %139

194:                                              ; preds = %189, %133
  %195 = phi i32 [ %135, %133 ], [ %190, %189 ]
  %196 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %134, i64 0, i32 0
  %197 = load %struct.ieeeSection*, %struct.ieeeSection** %196, align 8
  %198 = icmp eq %struct.ieeeSection* %197, null
  br i1 %198, label %199, label %133

199:                                              ; preds = %194, %125
  %200 = load %struct.ieeePublic*, %struct.ieeePublic** @fpubhead, align 8
  %201 = icmp eq %struct.ieeePublic* %200, null
  br i1 %201, label %259, label %202

202:                                              ; preds = %199
  %203 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 0
  br label %204

204:                                              ; preds = %254, %202
  %205 = phi i32 [ 1, %202 ], [ %255, %254 ]
  %206 = phi %struct.ieeePublic* [ %200, %202 ], [ %257, %254 ]
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %203) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %203, i8 -86, i64 256, i1 false) #13
  %207 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %206, i64 0, i32 1
  %208 = load i8*, i8** %207, align 8
  %209 = load i1, i1* @ieee_uppercase, align 4
  br i1 %209, label %210, label %230

210:                                              ; preds = %204
  %211 = load i8, i8* %208, align 1
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %228, label %213

213:                                              ; preds = %210
  %214 = tail call i32** @__ctype_toupper_loc() #19
  br label %215

215:                                              ; preds = %215, %213
  %216 = phi i8 [ %211, %213 ], [ %226, %215 ]
  %217 = phi i8* [ %203, %213 ], [ %225, %215 ]
  %218 = phi i8* [ %208, %213 ], [ %220, %215 ]
  %219 = load i32*, i32** %214, align 8
  %220 = getelementptr inbounds i8, i8* %218, i64 1
  %221 = sext i8 %216 to i64
  %222 = getelementptr inbounds i32, i32* %219, i64 %221
  %223 = load i32, i32* %222, align 4
  %224 = trunc i32 %223 to i8
  %225 = getelementptr inbounds i8, i8* %217, i64 1
  store i8 %224, i8* %217, align 1
  %226 = load i8, i8* %220, align 1
  %227 = icmp eq i8 %226, 0
  br i1 %227, label %228, label %215

228:                                              ; preds = %215, %210
  %229 = phi i8* [ %203, %210 ], [ %225, %215 ]
  store i8 0, i8* %229, align 1
  br label %232

230:                                              ; preds = %204
  %231 = call i8* @strcpy(i8* nonnull %203, i8* %208) #13
  br label %232

232:                                              ; preds = %230, %228
  %233 = call i64 @strlen(i8* nonnull %203) #18
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.43, i64 0, i64 0), i32 %205, i64 %233, i8* nonnull %203) #13
  %234 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %206, i64 0, i32 3
  %235 = load i32, i32* %234, align 4
  %236 = icmp eq i32 %235, -1
  br i1 %236, label %237, label %242

237:                                              ; preds = %232
  %238 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %206, i64 0, i32 4
  %239 = load i32, i32* %238, align 8
  %240 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %206, i64 0, i32 2
  %241 = load i32, i32* %240, align 8
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.44, i64 0, i64 0), i32 %205, i32 %239, i32 %241) #13
  br label %246

242:                                              ; preds = %232
  %243 = shl nsw i32 %235, 4
  %244 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %206, i64 0, i32 2
  %245 = load i32, i32* %244, align 8
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.45, i64 0, i64 0), i32 %205, i32 %243, i32 %245) #13
  br label %246

246:                                              ; preds = %242, %237
  br i1 %8, label %247, label %254

247:                                              ; preds = %246
  %248 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %206, i64 0, i32 5
  %249 = load i32, i32* %248, align 4
  %250 = icmp sgt i32 %249, 255
  br i1 %250, label %251, label %253

251:                                              ; preds = %247
  %252 = add nsw i32 %249, -256
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i64 0, i64 0), i32 %205, i32 %252) #13
  br label %254

253:                                              ; preds = %247
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.47, i64 0, i64 0), i32 %205, i32 %249) #13
  br label %254

254:                                              ; preds = %253, %251, %246
  %255 = add nuw nsw i32 %205, 1
  %256 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %206, i64 0, i32 0
  %257 = load %struct.ieeePublic*, %struct.ieeePublic** %256, align 8
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %203) #13
  %258 = icmp eq %struct.ieeePublic* %257, null
  br i1 %258, label %259, label %204

259:                                              ; preds = %254, %199
  %260 = load %struct.ieeeExternal*, %struct.ieeeExternal** @exthead, align 8
  %261 = icmp eq %struct.ieeeExternal* %260, null
  br i1 %261, label %298, label %262

262:                                              ; preds = %259
  %263 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 0
  br label %264

264:                                              ; preds = %292, %262
  %265 = phi i32 [ 1, %262 ], [ %293, %292 ]
  %266 = phi %struct.ieeeExternal* [ %260, %262 ], [ %296, %292 ]
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %263) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %263, i8 -86, i64 256, i1 false) #13
  %267 = getelementptr inbounds %struct.ieeeExternal, %struct.ieeeExternal* %266, i64 0, i32 1
  %268 = load i8*, i8** %267, align 8
  %269 = load i1, i1* @ieee_uppercase, align 4
  br i1 %269, label %270, label %290

270:                                              ; preds = %264
  %271 = load i8, i8* %268, align 1
  %272 = icmp eq i8 %271, 0
  br i1 %272, label %288, label %273

273:                                              ; preds = %270
  %274 = tail call i32** @__ctype_toupper_loc() #19
  br label %275

275:                                              ; preds = %275, %273
  %276 = phi i8 [ %271, %273 ], [ %286, %275 ]
  %277 = phi i8* [ %263, %273 ], [ %285, %275 ]
  %278 = phi i8* [ %268, %273 ], [ %280, %275 ]
  %279 = load i32*, i32** %274, align 8
  %280 = getelementptr inbounds i8, i8* %278, i64 1
  %281 = sext i8 %276 to i64
  %282 = getelementptr inbounds i32, i32* %279, i64 %281
  %283 = load i32, i32* %282, align 4
  %284 = trunc i32 %283 to i8
  %285 = getelementptr inbounds i8, i8* %277, i64 1
  store i8 %284, i8* %277, align 1
  %286 = load i8, i8* %280, align 1
  %287 = icmp eq i8 %286, 0
  br i1 %287, label %288, label %275

288:                                              ; preds = %275, %270
  %289 = phi i8* [ %263, %270 ], [ %285, %275 ]
  store i8 0, i8* %289, align 1
  br label %292

290:                                              ; preds = %264
  %291 = call i8* @strcpy(i8* nonnull %263, i8* %268) #13
  br label %292

292:                                              ; preds = %290, %288
  %293 = add nuw nsw i32 %265, 1
  %294 = call i64 @strlen(i8* nonnull %263) #18
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.48, i64 0, i64 0), i32 %265, i64 %294, i8* nonnull %263) #13
  %295 = getelementptr inbounds %struct.ieeeExternal, %struct.ieeeExternal* %266, i64 0, i32 0
  %296 = load %struct.ieeeExternal*, %struct.ieeeExternal** %295, align 8
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %263) #13
  %297 = icmp eq %struct.ieeeExternal* %296, null
  br i1 %297, label %298, label %264

298:                                              ; preds = %292, %259
  %299 = load i32, i32* @checksum, align 4
  %300 = add nsw i32 %299, 150
  store i32 %300, i32* @checksum, align 4
  %301 = and i32 %300, 127
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59, i64 0, i64 0), i32 %301) #13
  store i32 0, i32* @checksum, align 4
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.49, i64 0, i64 0)) #13
  %302 = load %struct.Array*, %struct.Array** @arrhead, align 8
  %303 = icmp ne %struct.Array* %302, null
  %304 = and i1 %8, %303
  br i1 %304, label %311, label %305

305:                                              ; preds = %311, %298
  %306 = load %struct.ieeeSection*, %struct.ieeeSection** @seghead, align 8
  %307 = icmp ne %struct.ieeeSection* %306, null
  %308 = and i1 %8, %307
  br i1 %308, label %309, label %389

309:                                              ; preds = %305
  %310 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 0
  br label %322

311:                                              ; preds = %298, %311
  %312 = phi %struct.Array* [ %320, %311 ], [ %302, %298 ]
  %313 = phi i32 [ %314, %311 ], [ 1, %298 ]
  %314 = add nuw nsw i32 %313, 1
  %315 = getelementptr inbounds %struct.Array, %struct.Array* %312, i64 0, i32 2
  %316 = load i32, i32* %315, align 4
  %317 = getelementptr inbounds %struct.Array, %struct.Array* %312, i64 0, i32 1
  %318 = load i32, i32* %317, align 8
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.50, i64 0, i64 0), i32 %313, i32 %316, i32 %318) #13
  %319 = getelementptr inbounds %struct.Array, %struct.Array* %312, i64 0, i32 0
  %320 = load %struct.Array*, %struct.Array** %319, align 8
  %321 = icmp eq %struct.Array* %320, null
  br i1 %321, label %305, label %311

322:                                              ; preds = %382, %309
  %323 = phi %struct.ieeeSection* [ %306, %309 ], [ %385, %382 ]
  %324 = phi i32 [ 1, %309 ], [ %383, %382 ]
  %325 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %323, i64 0, i32 15
  %326 = load %struct.ieeePublic*, %struct.ieeePublic** %325, align 8
  %327 = icmp eq %struct.ieeePublic* %326, null
  br i1 %327, label %382, label %328

328:                                              ; preds = %322, %377
  %329 = phi %struct.ieeePublic* [ %380, %377 ], [ %326, %322 ]
  %330 = phi i32 [ %378, %377 ], [ %324, %322 ]
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %310) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %310, i8 -86, i64 256, i1 false) #13
  %331 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %329, i64 0, i32 1
  %332 = load i8*, i8** %331, align 8
  %333 = load i1, i1* @ieee_uppercase, align 4
  br i1 %333, label %334, label %354

334:                                              ; preds = %328
  %335 = load i8, i8* %332, align 1
  %336 = icmp eq i8 %335, 0
  br i1 %336, label %352, label %337

337:                                              ; preds = %334
  %338 = tail call i32** @__ctype_toupper_loc() #19
  br label %339

339:                                              ; preds = %339, %337
  %340 = phi i8 [ %335, %337 ], [ %350, %339 ]
  %341 = phi i8* [ %310, %337 ], [ %349, %339 ]
  %342 = phi i8* [ %332, %337 ], [ %344, %339 ]
  %343 = load i32*, i32** %338, align 8
  %344 = getelementptr inbounds i8, i8* %342, i64 1
  %345 = sext i8 %340 to i64
  %346 = getelementptr inbounds i32, i32* %343, i64 %345
  %347 = load i32, i32* %346, align 4
  %348 = trunc i32 %347 to i8
  %349 = getelementptr inbounds i8, i8* %341, i64 1
  store i8 %348, i8* %341, align 1
  %350 = load i8, i8* %344, align 1
  %351 = icmp eq i8 %350, 0
  br i1 %351, label %352, label %339

352:                                              ; preds = %339, %334
  %353 = phi i8* [ %310, %334 ], [ %349, %339 ]
  store i8 0, i8* %353, align 1
  br label %356

354:                                              ; preds = %328
  %355 = call i8* @strcpy(i8* nonnull %310, i8* %332) #13
  br label %356

356:                                              ; preds = %354, %352
  %357 = call i64 @strlen(i8* nonnull %310) #18
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.51, i64 0, i64 0), i32 %330, i64 %357, i8* nonnull %310) #13
  %358 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %329, i64 0, i32 3
  %359 = load i32, i32* %358, align 4
  %360 = icmp eq i32 %359, -1
  br i1 %360, label %361, label %366

361:                                              ; preds = %356
  %362 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %329, i64 0, i32 4
  %363 = load i32, i32* %362, align 8
  %364 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %329, i64 0, i32 2
  %365 = load i32, i32* %364, align 8
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i64 0, i64 0), i32 %330, i32 %363, i32 %365) #13
  br label %370

366:                                              ; preds = %356
  %367 = shl nsw i32 %359, 4
  %368 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %329, i64 0, i32 2
  %369 = load i32, i32* %368, align 8
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.53, i64 0, i64 0), i32 %330, i32 %367, i32 %369) #13
  br label %370

370:                                              ; preds = %366, %361
  %371 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %329, i64 0, i32 5
  %372 = load i32, i32* %371, align 4
  %373 = icmp sgt i32 %372, 255
  br i1 %373, label %374, label %376

374:                                              ; preds = %370
  %375 = add nsw i32 %372, -256
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.54, i64 0, i64 0), i32 %330, i32 %375) #13
  br label %377

376:                                              ; preds = %370
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.55, i64 0, i64 0), i32 %330, i32 %372) #13
  br label %377

377:                                              ; preds = %376, %374
  %378 = add nsw i32 %330, 1
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %310) #13
  %379 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %329, i64 0, i32 0
  %380 = load %struct.ieeePublic*, %struct.ieeePublic** %379, align 8
  %381 = icmp eq %struct.ieeePublic* %380, null
  br i1 %381, label %382, label %328

382:                                              ; preds = %377, %322
  %383 = phi i32 [ %324, %322 ], [ %378, %377 ]
  %384 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %323, i64 0, i32 0
  %385 = load %struct.ieeeSection*, %struct.ieeeSection** %384, align 8
  %386 = icmp eq %struct.ieeeSection* %385, null
  br i1 %386, label %387, label %322

387:                                              ; preds = %382
  %388 = load %struct.ieeeSection*, %struct.ieeeSection** @seghead, align 8
  br label %389

389:                                              ; preds = %387, %305
  %390 = phi %struct.ieeeSection* [ %388, %387 ], [ %306, %305 ]
  br i1 %8, label %399, label %391

391:                                              ; preds = %389
  %392 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %390, i64 0, i32 1
  %393 = load i8*, i8** %392, align 8
  %394 = call i32 @strcmp(i8* %393, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0)) #18
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %396, label %399

396:                                              ; preds = %391
  %397 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %390, i64 0, i32 0
  %398 = load %struct.ieeeSection*, %struct.ieeeSection** %397, align 8
  br label %399

399:                                              ; preds = %396, %391, %389
  %400 = phi %struct.ieeeSection* [ %390, %389 ], [ %390, %391 ], [ %398, %396 ]
  %401 = icmp eq %struct.ieeeSection* %400, null
  br i1 %401, label %549, label %402

402:                                              ; preds = %399
  %403 = getelementptr inbounds [40 x i8], [40 x i8]* %1, i64 0, i64 0
  br label %404

404:                                              ; preds = %545, %402
  %405 = phi %struct.ieeeSection* [ %400, %402 ], [ %547, %545 ]
  %406 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %405, i64 0, i32 8
  %407 = load i32, i32* %406, align 8
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %545, label %409

409:                                              ; preds = %404
  %410 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %405, i64 0, i32 2
  %411 = load %struct.ieeeObjData*, %struct.ieeeObjData** %410, align 8
  %412 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %405, i64 0, i32 7
  %413 = load i32, i32* %412, align 4
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i64 0, i64 0), i32 %413) #13
  %414 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %405, i64 0, i32 4
  %415 = load %struct.ieeeFixupp*, %struct.ieeeFixupp** %414, align 8
  %416 = icmp eq %struct.ieeeFixupp* %415, null
  br i1 %416, label %417, label %424

417:                                              ; preds = %521, %409
  %418 = phi %struct.ieeeObjData* [ %411, %409 ], [ %449, %521 ]
  %419 = phi i32 [ 0, %409 ], [ %523, %521 ]
  %420 = load i32, i32* %406, align 8
  %421 = icmp sgt i32 %420, %419
  %422 = icmp ne %struct.ieeeObjData* %418, null
  %423 = and i1 %422, %421
  br i1 %423, label %525, label %541

424:                                              ; preds = %409, %521
  %425 = phi i32 [ %523, %521 ], [ 0, %409 ]
  %426 = phi %struct.ieeeFixupp* [ %522, %521 ], [ %415, %409 ]
  %427 = phi %struct.ieeeObjData* [ %449, %521 ], [ %411, %409 ]
  %428 = srem i32 %425, 1024
  %429 = sub nsw i32 1024, %428
  %430 = add nsw i32 %429, %425
  %431 = load i32, i32* %406, align 8
  %432 = icmp sgt i32 %430, %431
  %433 = sub nsw i32 %431, %425
  %434 = select i1 %432, i32 %433, i32 %429
  %435 = getelementptr inbounds %struct.ieeeFixupp, %struct.ieeeFixupp* %426, i64 0, i32 5
  %436 = load i32, i32* %435, align 8
  %437 = sub nsw i32 %436, %425
  %438 = icmp sgt i32 %437, %434
  %439 = select i1 %438, i32 %434, i32 %437
  %440 = add nsw i32 %439, %425
  %441 = getelementptr inbounds %struct.ieeeObjData, %struct.ieeeObjData* %427, i64 0, i32 1, i64 0
  %442 = call fastcc i32 @ieee_putld(i32 %425, i32 %440, i8* %441) #13
  %443 = and i32 %442, 1023
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %448

445:                                              ; preds = %424
  %446 = getelementptr inbounds %struct.ieeeObjData, %struct.ieeeObjData* %427, i64 0, i32 0
  %447 = load %struct.ieeeObjData*, %struct.ieeeObjData** %446, align 8
  br label %448

448:                                              ; preds = %445, %424
  %449 = phi %struct.ieeeObjData* [ %447, %445 ], [ %427, %424 ]
  %450 = load i32, i32* %435, align 8
  %451 = icmp eq i32 %442, %450
  br i1 %451, label %452, label %521

452:                                              ; preds = %448
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %403) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %403, i8 -86, i64 40, i1 false) #13
  %453 = getelementptr inbounds %struct.ieeeFixupp, %struct.ieeeFixupp* %426, i64 0, i32 2
  %454 = load i16, i16* %453, align 4
  %455 = sext i16 %454 to i32
  %456 = getelementptr inbounds %struct.ieeeFixupp, %struct.ieeeFixupp* %426, i64 0, i32 1
  %457 = load i32, i32* %456, align 8
  switch i32 %457, label %517 [
    i32 0, label %458
    i32 2, label %467
    i32 1, label %473
    i32 4, label %479
    i32 3, label %493
    i32 5, label %497
    i32 7, label %501
    i32 6, label %505
  ]

458:                                              ; preds = %452
  %459 = getelementptr inbounds %struct.ieeeFixupp, %struct.ieeeFixupp* %426, i64 0, i32 3
  %460 = load i32, i32* %459, align 8
  %461 = icmp slt i32 %460, 0
  br i1 %461, label %462, label %465

462:                                              ; preds = %458
  %463 = sub nsw i32 0, %460
  %464 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %403, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63, i64 0, i64 0), i32 %463) #13
  br label %517

465:                                              ; preds = %458
  %466 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %403, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.64, i64 0, i64 0), i32 %460) #13
  br label %517

467:                                              ; preds = %452
  %468 = getelementptr inbounds %struct.ieeeFixupp, %struct.ieeeFixupp* %426, i64 0, i32 3
  %469 = load i32, i32* %468, align 8
  %470 = getelementptr inbounds %struct.ieeeFixupp, %struct.ieeeFixupp* %426, i64 0, i32 6
  %471 = load i32, i32* %470, align 4
  %472 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %403, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i64 0, i64 0), i32 %469, i32 %471) #13
  br label %517

473:                                              ; preds = %452
  %474 = getelementptr inbounds %struct.ieeeFixupp, %struct.ieeeFixupp* %426, i64 0, i32 3
  %475 = load i32, i32* %474, align 8
  %476 = getelementptr inbounds %struct.ieeeFixupp, %struct.ieeeFixupp* %426, i64 0, i32 6
  %477 = load i32, i32* %476, align 4
  %478 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %403, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.66, i64 0, i64 0), i32 %475, i32 %477, i32 %455) #13
  br label %517

479:                                              ; preds = %452
  %480 = getelementptr inbounds %struct.ieeeFixupp, %struct.ieeeFixupp* %426, i64 0, i32 4
  %481 = load i32, i32* %480, align 4
  %482 = icmp slt i32 %481, 0
  %483 = getelementptr inbounds %struct.ieeeFixupp, %struct.ieeeFixupp* %426, i64 0, i32 6
  %484 = load i32, i32* %483, align 4
  %485 = getelementptr inbounds %struct.ieeeFixupp, %struct.ieeeFixupp* %426, i64 0, i32 3
  %486 = load i32, i32* %485, align 8
  br i1 %482, label %487, label %491

487:                                              ; preds = %479
  %488 = shl i32 %486, 4
  %489 = sub i32 0, %488
  %490 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %403, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.67, i64 0, i64 0), i32 %481, i32 %484, i32 %481, i32 %489) #13
  br label %517

491:                                              ; preds = %479
  %492 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %403, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.68, i64 0, i64 0), i32 %481, i32 %484, i32 %481, i32 %486) #13
  br label %517

493:                                              ; preds = %452
  %494 = getelementptr inbounds %struct.ieeeFixupp, %struct.ieeeFixupp* %426, i64 0, i32 3
  %495 = load i32, i32* %494, align 8
  %496 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %403, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i64 0, i64 0), i32 %495) #13
  br label %517

497:                                              ; preds = %452
  %498 = getelementptr inbounds %struct.ieeeFixupp, %struct.ieeeFixupp* %426, i64 0, i32 3
  %499 = load i32, i32* %498, align 8
  %500 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %403, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.70, i64 0, i64 0), i32 %499, i32 %455) #13
  br label %517

501:                                              ; preds = %452
  %502 = getelementptr inbounds %struct.ieeeFixupp, %struct.ieeeFixupp* %426, i64 0, i32 3
  %503 = load i32, i32* %502, align 8
  %504 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %403, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.71, i64 0, i64 0), i32 %503) #13
  br label %517

505:                                              ; preds = %452
  %506 = getelementptr inbounds %struct.ieeeFixupp, %struct.ieeeFixupp* %426, i64 0, i32 4
  %507 = load i32, i32* %506, align 4
  %508 = icmp slt i32 %507, 0
  %509 = getelementptr inbounds %struct.ieeeFixupp, %struct.ieeeFixupp* %426, i64 0, i32 3
  %510 = load i32, i32* %509, align 8
  br i1 %508, label %511, label %515

511:                                              ; preds = %505
  %512 = shl i32 %510, 4
  %513 = sub i32 0, %512
  %514 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %403, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.72, i64 0, i64 0), i32 %507, i32 %507, i32 %513) #13
  br label %517

515:                                              ; preds = %505
  %516 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %403, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.73, i64 0, i64 0), i32 %507, i32 %507, i32 %510) #13
  br label %517

517:                                              ; preds = %515, %511, %501, %497, %493, %491, %487, %473, %467, %465, %462, %452
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.74, i64 0, i64 0), i8* nonnull %403, i32 %455) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %403) #13
  %518 = add nsw i32 %442, %455
  %519 = getelementptr inbounds %struct.ieeeFixupp, %struct.ieeeFixupp* %426, i64 0, i32 0
  %520 = load %struct.ieeeFixupp*, %struct.ieeeFixupp** %519, align 8
  br label %521

521:                                              ; preds = %517, %448
  %522 = phi %struct.ieeeFixupp* [ %520, %517 ], [ %426, %448 ]
  %523 = phi i32 [ %518, %517 ], [ %442, %448 ]
  %524 = icmp eq %struct.ieeeFixupp* %522, null
  br i1 %524, label %417, label %424

525:                                              ; preds = %417, %525
  %526 = phi i32 [ %537, %525 ], [ %420, %417 ]
  %527 = phi i32 [ %534, %525 ], [ %419, %417 ]
  %528 = phi %struct.ieeeObjData* [ %536, %525 ], [ %418, %417 ]
  %529 = sub nsw i32 %526, %527
  %530 = icmp slt i32 %529, 1024
  %531 = select i1 %530, i32 %529, i32 1024
  %532 = add nsw i32 %531, %527
  %533 = getelementptr inbounds %struct.ieeeObjData, %struct.ieeeObjData* %528, i64 0, i32 1, i64 0
  %534 = call fastcc i32 @ieee_putld(i32 %527, i32 %532, i8* %533) #13
  %535 = getelementptr inbounds %struct.ieeeObjData, %struct.ieeeObjData* %528, i64 0, i32 0
  %536 = load %struct.ieeeObjData*, %struct.ieeeObjData** %535, align 8
  %537 = load i32, i32* %406, align 8
  %538 = icmp sgt i32 %537, %534
  %539 = icmp ne %struct.ieeeObjData* %536, null
  %540 = and i1 %539, %538
  br i1 %540, label %525, label %541

541:                                              ; preds = %525, %417
  %542 = load i32, i32* @checksum, align 4
  %543 = add nsw i32 %542, 150
  store i32 %543, i32* @checksum, align 4
  %544 = and i32 %543, 127
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59, i64 0, i64 0), i32 %544) #13
  store i32 0, i32* @checksum, align 4
  br label %545

545:                                              ; preds = %541, %404
  %546 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %405, i64 0, i32 0
  %547 = load %struct.ieeeSection*, %struct.ieeeSection** %546, align 8
  %548 = icmp eq %struct.ieeeSection* %547, null
  br i1 %548, label %549, label %404

549:                                              ; preds = %545, %399
  call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i64 0, i64 0)) #13
  %550 = load %struct.dfmt*, %struct.dfmt** @dfmt, align 8
  %551 = getelementptr inbounds %struct.dfmt, %struct.dfmt* %550, i64 0, i32 8
  %552 = load void ()*, void ()** %551, align 8
  call void %552() #13
  %553 = load %struct.ieeeSection*, %struct.ieeeSection** @seghead, align 8
  %554 = icmp eq %struct.ieeeSection* %553, null
  br i1 %554, label %555, label %558

555:                                              ; preds = %600, %549
  %556 = load %struct.ieeePublic*, %struct.ieeePublic** @fpubhead, align 8
  %557 = icmp eq %struct.ieeePublic* %556, null
  br i1 %557, label %604, label %607

558:                                              ; preds = %549, %600
  %559 = phi %struct.ieeeSection* [ %602, %600 ], [ %553, %549 ]
  %560 = bitcast %struct.ieeeSection* %559 to i64*
  %561 = load i64, i64* %560, align 8
  store i64 %561, i64* bitcast (%struct.ieeeSection** @seghead to i64*), align 8
  %562 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %559, i64 0, i32 13
  %563 = load %struct.ieeePublic*, %struct.ieeePublic** %562, align 8
  %564 = icmp eq %struct.ieeePublic* %563, null
  br i1 %564, label %567, label %565

565:                                              ; preds = %558
  %566 = bitcast %struct.ieeePublic** %562 to i64*
  br label %573

567:                                              ; preds = %573, %558
  %568 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %559, i64 0, i32 4
  %569 = load %struct.ieeeFixupp*, %struct.ieeeFixupp** %568, align 8
  %570 = icmp eq %struct.ieeeFixupp* %569, null
  br i1 %570, label %580, label %571

571:                                              ; preds = %567
  %572 = bitcast %struct.ieeeFixupp** %568 to i64*
  br label %586

573:                                              ; preds = %565, %573
  %574 = phi %struct.ieeePublic* [ %563, %565 ], [ %578, %573 ]
  %575 = bitcast %struct.ieeePublic* %574 to i64*
  %576 = load i64, i64* %575, align 8
  store i64 %576, i64* %566, align 8
  %577 = bitcast %struct.ieeePublic* %574 to i8*
  call void @nasm_free(i8* nonnull %577) #13
  %578 = load %struct.ieeePublic*, %struct.ieeePublic** %562, align 8
  %579 = icmp eq %struct.ieeePublic* %578, null
  br i1 %579, label %567, label %573

580:                                              ; preds = %586, %567
  %581 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %559, i64 0, i32 2
  %582 = load %struct.ieeeObjData*, %struct.ieeeObjData** %581, align 8
  %583 = icmp eq %struct.ieeeObjData* %582, null
  br i1 %583, label %600, label %584

584:                                              ; preds = %580
  %585 = bitcast %struct.ieeeObjData** %581 to i64*
  br label %593

586:                                              ; preds = %571, %586
  %587 = phi %struct.ieeeFixupp* [ %569, %571 ], [ %591, %586 ]
  %588 = bitcast %struct.ieeeFixupp* %587 to i64*
  %589 = load i64, i64* %588, align 8
  store i64 %589, i64* %572, align 8
  %590 = bitcast %struct.ieeeFixupp* %587 to i8*
  call void @nasm_free(i8* nonnull %590) #13
  %591 = load %struct.ieeeFixupp*, %struct.ieeeFixupp** %568, align 8
  %592 = icmp eq %struct.ieeeFixupp* %591, null
  br i1 %592, label %580, label %586

593:                                              ; preds = %584, %593
  %594 = phi %struct.ieeeObjData* [ %582, %584 ], [ %598, %593 ]
  %595 = bitcast %struct.ieeeObjData* %594 to i64*
  %596 = load i64, i64* %595, align 8
  store i64 %596, i64* %585, align 8
  %597 = bitcast %struct.ieeeObjData* %594 to i8*
  call void @nasm_free(i8* nonnull %597) #13
  %598 = load %struct.ieeeObjData*, %struct.ieeeObjData** %581, align 8
  %599 = icmp eq %struct.ieeeObjData* %598, null
  br i1 %599, label %600, label %593

600:                                              ; preds = %593, %580
  %601 = bitcast %struct.ieeeSection* %559 to i8*
  call void @nasm_free(i8* nonnull %601) #13
  %602 = load %struct.ieeeSection*, %struct.ieeeSection** @seghead, align 8
  %603 = icmp eq %struct.ieeeSection* %602, null
  br i1 %603, label %555, label %558

604:                                              ; preds = %607, %555
  %605 = load %struct.ieeeExternal*, %struct.ieeeExternal** @exthead, align 8
  %606 = icmp eq %struct.ieeeExternal* %605, null
  br i1 %606, label %614, label %617

607:                                              ; preds = %555, %607
  %608 = phi %struct.ieeePublic* [ %612, %607 ], [ %556, %555 ]
  %609 = bitcast %struct.ieeePublic* %608 to i64*
  %610 = load i64, i64* %609, align 8
  store i64 %610, i64* bitcast (%struct.ieeePublic** @fpubhead to i64*), align 8
  %611 = bitcast %struct.ieeePublic* %608 to i8*
  call void @nasm_free(i8* nonnull %611) #13
  %612 = load %struct.ieeePublic*, %struct.ieeePublic** @fpubhead, align 8
  %613 = icmp eq %struct.ieeePublic* %612, null
  br i1 %613, label %604, label %607

614:                                              ; preds = %617, %604
  %615 = load %struct.ExtBack*, %struct.ExtBack** @ebhead, align 8
  %616 = icmp eq %struct.ExtBack* %615, null
  br i1 %616, label %631, label %624

617:                                              ; preds = %604, %617
  %618 = phi %struct.ieeeExternal* [ %622, %617 ], [ %605, %604 ]
  %619 = bitcast %struct.ieeeExternal* %618 to i64*
  %620 = load i64, i64* %619, align 8
  store i64 %620, i64* bitcast (%struct.ieeeExternal** @exthead to i64*), align 8
  %621 = bitcast %struct.ieeeExternal* %618 to i8*
  call void @nasm_free(i8* nonnull %621) #13
  %622 = load %struct.ieeeExternal*, %struct.ieeeExternal** @exthead, align 8
  %623 = icmp eq %struct.ieeeExternal* %622, null
  br i1 %623, label %614, label %617

624:                                              ; preds = %614, %624
  %625 = phi %struct.ExtBack* [ %629, %624 ], [ %615, %614 ]
  %626 = bitcast %struct.ExtBack* %625 to i64*
  %627 = load i64, i64* %626, align 8
  store i64 %627, i64* bitcast (%struct.ExtBack** @ebhead to i64*), align 8
  %628 = bitcast %struct.ExtBack* %625 to i8*
  call void @nasm_free(i8* nonnull %628) #13
  %629 = load %struct.ExtBack*, %struct.ExtBack** @ebhead, align 8
  %630 = icmp eq %struct.ExtBack* %629, null
  br i1 %630, label %631, label %624

631:                                              ; preds = %624, %614
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @dbgls_init() #2 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #13
  store i32 -1431655766, i32* %1, align 4
  store %struct.FileName* null, %struct.FileName** @fnhead, align 8
  store %struct.FileName** @fnhead, %struct.FileName*** @fntail, align 8
  store i32 1, i32* @arrindex, align 4
  store %struct.Array* null, %struct.Array** @arrhead, align 8
  store %struct.Array** @arrhead, %struct.Array*** @arrtail, align 8
  %3 = call i32 @ieee_segment(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i32* nonnull %1)
  store i1 false, i1* @any_segs, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @dbgls_linnum(i8* nocapture readonly, i32, i32) #2 {
  %4 = alloca i32, align 4
  %5 = icmp eq i32 %2, -1
  br i1 %5, label %156, label %6

6:                                                ; preds = %3
  %7 = load i1, i1* @any_segs, align 1
  br i1 %7, label %14, label %8

8:                                                ; preds = %6
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #13
  store i32 -1431655766, i32* %4, align 4
  %10 = call i32 @ieee_segment(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i32* nonnull %4)
  %11 = icmp eq i32 %10, %2
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0)) #16
  unreachable

13:                                               ; preds = %8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #13
  br label %14

14:                                               ; preds = %13, %6
  %15 = load %struct.ieeeSection*, %struct.ieeeSection** @seghead, align 8
  %16 = icmp eq %struct.ieeeSection* %15, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %14, %25
  %18 = phi %struct.ieeeSection* [ %27, %25 ], [ %15, %14 ]
  %19 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %18, i64 0, i32 6
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, %2
  br i1 %21, label %22, label %25

22:                                               ; preds = %17
  %23 = load %struct.FileName*, %struct.FileName** @fnhead, align 8
  %24 = icmp eq %struct.FileName* %23, null
  br i1 %24, label %42, label %30

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %18, i64 0, i32 0
  %27 = load %struct.ieeeSection*, %struct.ieeeSection** %26, align 8
  %28 = icmp eq %struct.ieeeSection* %27, null
  br i1 %28, label %29, label %17

29:                                               ; preds = %25, %14
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8, i64 0, i64 0)) #16
  unreachable

30:                                               ; preds = %22, %37
  %31 = phi %struct.FileName* [ %40, %37 ], [ %23, %22 ]
  %32 = phi i32 [ %38, %37 ], [ 0, %22 ]
  %33 = getelementptr inbounds %struct.FileName, %struct.FileName* %31, i64 0, i32 1
  %34 = load i8*, i8** %33, align 8
  %35 = tail call i32 @strcasecmp(i8* %0, i8* %34) #18
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %57, label %37

37:                                               ; preds = %30
  %38 = add nuw nsw i32 %32, 1
  %39 = getelementptr inbounds %struct.FileName, %struct.FileName* %31, i64 0, i32 0
  %40 = load %struct.FileName*, %struct.FileName** %39, align 8
  %41 = icmp eq %struct.FileName* %40, null
  br i1 %41, label %42, label %30

42:                                               ; preds = %37, %22
  %43 = phi i32 [ 0, %22 ], [ %38, %37 ]
  %44 = tail call noalias i8* @nasm_malloc(i64 24) #17
  %45 = bitcast i8* %44 to %struct.FileName*
  %46 = tail call i64 @strlen(i8* %0) #18
  %47 = add i64 %46, 1
  %48 = tail call noalias i8* @nasm_malloc(i64 %47) #17
  %49 = getelementptr inbounds i8, i8* %44, i64 8
  %50 = bitcast i8* %49 to i8**
  store i8* %48, i8** %50, align 8
  %51 = getelementptr inbounds i8, i8* %44, i64 16
  %52 = bitcast i8* %51 to i32*
  store i32 %43, i32* %52, align 8
  %53 = tail call i8* @strcpy(i8* %48, i8* %0) #13
  %54 = bitcast i8* %44 to %struct.FileName**
  store %struct.FileName* null, %struct.FileName** %54, align 8
  %55 = load i8**, i8*** bitcast (%struct.FileName*** @fntail to i8***), align 8
  store i8* %44, i8** %55, align 8
  store i8* %44, i8** bitcast (%struct.FileName*** @fntail to i8**), align 8
  %56 = load %struct.ieeeSection*, %struct.ieeeSection** @seghead, align 8
  br label %57

57:                                               ; preds = %30, %42
  %58 = phi %struct.ieeeSection* [ %56, %42 ], [ %15, %30 ]
  %59 = phi %struct.FileName* [ %45, %42 ], [ %31, %30 ]
  %60 = getelementptr inbounds %struct.FileName, %struct.FileName* %59, i64 0, i32 2
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %58, i64 0, i32 8
  %63 = load i32, i32* %62, align 8
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %62, align 8
  %65 = srem i32 %63, 1024
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %57
  %68 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %58, i64 0, i32 3
  %69 = load %struct.ieeeObjData*, %struct.ieeeObjData** %68, align 8
  br label %87

70:                                               ; preds = %57
  %71 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %58, i64 0, i32 2
  %72 = load %struct.ieeeObjData*, %struct.ieeeObjData** %71, align 8
  %73 = icmp eq %struct.ieeeObjData* %72, null
  %74 = tail call noalias i8* @nasm_malloc(i64 1032) #17
  %75 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %58, i64 0, i32 3
  br i1 %73, label %76, label %78

76:                                               ; preds = %70
  %77 = bitcast %struct.ieeeObjData** %75 to i8**
  br label %81

78:                                               ; preds = %70
  %79 = bitcast %struct.ieeeObjData** %75 to i8***
  %80 = load i8**, i8*** %79, align 8
  br label %81

81:                                               ; preds = %78, %76
  %82 = phi i8** [ %80, %78 ], [ %77, %76 ]
  %83 = phi %struct.ieeeObjData** [ %75, %78 ], [ %71, %76 ]
  store i8* %74, i8** %82, align 8
  %84 = bitcast %struct.ieeeObjData** %83 to i8**
  store i8* %74, i8** %84, align 8
  %85 = bitcast i8* %74 to %struct.ieeeObjData*
  %86 = bitcast i8* %74 to %struct.ieeeObjData**
  store %struct.ieeeObjData* null, %struct.ieeeObjData** %86, align 8
  br label %87

87:                                               ; preds = %67, %81
  %88 = phi %struct.ieeeObjData* [ %69, %67 ], [ %85, %81 ]
  %89 = trunc i32 %61 to i8
  %90 = sext i32 %65 to i64
  %91 = getelementptr inbounds %struct.ieeeObjData, %struct.ieeeObjData* %88, i64 0, i32 1, i64 %90
  store i8 %89, i8* %91, align 1
  %92 = load %struct.ieeeSection*, %struct.ieeeSection** @seghead, align 8
  %93 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %92, i64 0, i32 8
  %94 = load i32, i32* %93, align 8
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %93, align 8
  %96 = srem i32 %94, 1024
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %87
  %99 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %92, i64 0, i32 3
  %100 = load %struct.ieeeObjData*, %struct.ieeeObjData** %99, align 8
  br label %118

101:                                              ; preds = %87
  %102 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %92, i64 0, i32 2
  %103 = load %struct.ieeeObjData*, %struct.ieeeObjData** %102, align 8
  %104 = icmp eq %struct.ieeeObjData* %103, null
  %105 = tail call noalias i8* @nasm_malloc(i64 1032) #17
  %106 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %92, i64 0, i32 3
  br i1 %104, label %107, label %109

107:                                              ; preds = %101
  %108 = bitcast %struct.ieeeObjData** %106 to i8**
  br label %112

109:                                              ; preds = %101
  %110 = bitcast %struct.ieeeObjData** %106 to i8***
  %111 = load i8**, i8*** %110, align 8
  br label %112

112:                                              ; preds = %109, %107
  %113 = phi i8** [ %111, %109 ], [ %108, %107 ]
  %114 = phi %struct.ieeeObjData** [ %106, %109 ], [ %102, %107 ]
  store i8* %105, i8** %113, align 8
  %115 = bitcast %struct.ieeeObjData** %114 to i8**
  store i8* %105, i8** %115, align 8
  %116 = bitcast i8* %105 to %struct.ieeeObjData*
  %117 = bitcast i8* %105 to %struct.ieeeObjData**
  store %struct.ieeeObjData* null, %struct.ieeeObjData** %117, align 8
  br label %118

118:                                              ; preds = %112, %98
  %119 = phi %struct.ieeeObjData* [ %100, %98 ], [ %116, %112 ]
  %120 = trunc i32 %1 to i8
  %121 = sext i32 %96 to i64
  %122 = getelementptr inbounds %struct.ieeeObjData, %struct.ieeeObjData* %119, i64 0, i32 1, i64 %121
  store i8 %120, i8* %122, align 1
  %123 = lshr i32 %1, 8
  %124 = load i32, i32* %93, align 8
  %125 = add nsw i32 %124, 1
  store i32 %125, i32* %93, align 8
  %126 = srem i32 %124, 1024
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %131, label %128

128:                                              ; preds = %118
  %129 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %92, i64 0, i32 3
  %130 = load %struct.ieeeObjData*, %struct.ieeeObjData** %129, align 8
  br label %148

131:                                              ; preds = %118
  %132 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %92, i64 0, i32 2
  %133 = load %struct.ieeeObjData*, %struct.ieeeObjData** %132, align 8
  %134 = icmp eq %struct.ieeeObjData* %133, null
  %135 = tail call noalias i8* @nasm_malloc(i64 1032) #17
  %136 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %92, i64 0, i32 3
  br i1 %134, label %137, label %139

137:                                              ; preds = %131
  %138 = bitcast %struct.ieeeObjData** %136 to i8**
  br label %142

139:                                              ; preds = %131
  %140 = bitcast %struct.ieeeObjData** %136 to i8***
  %141 = load i8**, i8*** %140, align 8
  br label %142

142:                                              ; preds = %139, %137
  %143 = phi i8** [ %141, %139 ], [ %138, %137 ]
  %144 = phi %struct.ieeeObjData** [ %136, %139 ], [ %132, %137 ]
  store i8* %135, i8** %143, align 8
  %145 = bitcast %struct.ieeeObjData** %144 to i8**
  store i8* %135, i8** %145, align 8
  %146 = bitcast i8* %135 to %struct.ieeeObjData*
  %147 = bitcast i8* %135 to %struct.ieeeObjData**
  store %struct.ieeeObjData* null, %struct.ieeeObjData** %147, align 8
  br label %148

148:                                              ; preds = %128, %142
  %149 = phi %struct.ieeeObjData* [ %130, %128 ], [ %146, %142 ]
  %150 = trunc i32 %123 to i8
  %151 = sext i32 %126 to i64
  %152 = getelementptr inbounds %struct.ieeeObjData, %struct.ieeeObjData* %149, i64 0, i32 1, i64 %151
  store i8 %150, i8* %152, align 1
  %153 = load %struct.ieeeSection*, %struct.ieeeSection** @seghead, align 8
  %154 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %18, i64 0, i32 8
  %155 = load i32, i32* %154, align 8
  tail call fastcc void @ieee_write_fixup(i32 %2, i32 -1, %struct.ieeeSection* %153, i32 4, i64 3, i32 %155)
  br label %156

156:                                              ; preds = %3, %148
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @dbgls_deflabel(i8*, i32, i64, i32, i8* nocapture readnone) #2 {
  %6 = icmp ne i32 %3, 3
  %7 = load %struct.ieeeSection*, %struct.ieeeSection** @ieee_seg_needs_update, align 8
  %8 = icmp eq %struct.ieeeSection* %7, null
  %9 = and i1 %6, %8
  br i1 %9, label %10, label %49

10:                                               ; preds = %5
  %11 = icmp sgt i32 %1, 1073741823
  %12 = and i32 %1, 1
  %13 = icmp ne i32 %12, 0
  %14 = or i1 %13, %11
  br i1 %14, label %49, label %15

15:                                               ; preds = %10
  %16 = load %struct.ieeeSection*, %struct.ieeeSection** @seghead, align 8
  %17 = icmp eq %struct.ieeeSection* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %15
  %19 = icmp eq i32 %3, 0
  %20 = trunc i64 %2 to i32
  br label %21

21:                                               ; preds = %18, %45
  %22 = phi %struct.ieeeSection* [ %16, %18 ], [ %47, %45 ]
  %23 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %22, i64 0, i32 6
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, %1
  %26 = and i1 %19, %25
  br i1 %26, label %27, label %45

27:                                               ; preds = %21
  %28 = tail call noalias i8* @nasm_malloc(i64 32) #17
  store i8* %28, i8** bitcast (%struct.ieeePublic** @last_defined to i8**), align 8
  %29 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %22, i64 0, i32 16
  %30 = bitcast %struct.ieeePublic*** %29 to i8***
  %31 = load i8**, i8*** %30, align 8
  store i8* %28, i8** %31, align 8
  %32 = bitcast i8* %28 to %struct.ieeePublic**
  %33 = bitcast %struct.ieeePublic*** %29 to i8**
  store i8* %28, i8** %33, align 8
  store %struct.ieeePublic* null, %struct.ieeePublic** %32, align 8
  %34 = tail call noalias i8* @nasm_strdup(i8* %0) #13
  %35 = getelementptr inbounds i8, i8* %28, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %34, i8** %36, align 8
  %37 = getelementptr inbounds i8, i8* %28, i64 16
  %38 = bitcast i8* %37 to i32*
  store i32 %20, i32* %38, align 8
  %39 = getelementptr inbounds i8, i8* %28, i64 20
  %40 = bitcast i8* %39 to i32*
  store i32 -1, i32* %40, align 4
  %41 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %22, i64 0, i32 7
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds i8, i8* %28, i64 24
  %44 = bitcast i8* %43 to i32*
  store i32 %42, i32* %44, align 8
  br label %45

45:                                               ; preds = %27, %21
  %46 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %22, i64 0, i32 0
  %47 = load %struct.ieeeSection*, %struct.ieeeSection** %46, align 8
  %48 = icmp eq %struct.ieeeSection* %47, null
  br i1 %48, label %49, label %21

49:                                               ; preds = %45, %10, %15, %5
  ret void
}

declare void @null_debug_directive(i8*, i8*) #1

; Function Attrs: nounwind ssp uwtable
define internal void @dbgls_typevalue(i32) #2 {
  %2 = lshr i32 %0, 8
  %3 = load %struct.ieeePublic*, %struct.ieeePublic** @last_defined, align 8
  %4 = icmp eq %struct.ieeePublic* %3, null
  br i1 %4, label %33, label %5

5:                                                ; preds = %1
  %6 = and i32 %0, 248
  %7 = add nsw i32 %6, -16
  %8 = icmp ult i32 %7, 48
  br i1 %8, label %9, label %14

9:                                                ; preds = %5
  %10 = lshr exact i32 %7, 3
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.dbgls_typevalue, i64 0, i64 %11
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi i32 [ %13, %9 ], [ 16, %5 ]
  %16 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %3, i64 0, i32 5
  store i32 %15, i32* %16, align 4
  %17 = icmp ugt i32 %0, 511
  br i1 %17, label %18, label %32

18:                                               ; preds = %14
  %19 = tail call noalias i8* @nasm_malloc(i64 16) #17
  %20 = load %struct.ieeePublic*, %struct.ieeePublic** @last_defined, align 8
  %21 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %20, i64 0, i32 5
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 8
  %24 = bitcast i8* %23 to i32*
  store i32 %2, i32* %24, align 8
  %25 = getelementptr inbounds i8, i8* %19, i64 12
  %26 = bitcast i8* %25 to i32*
  store i32 %22, i32* %26, align 4
  %27 = bitcast i8* %19 to %struct.Array**
  store %struct.Array* null, %struct.Array** %27, align 8
  %28 = load i32, i32* @arrindex, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* @arrindex, align 4
  %30 = add nsw i32 %28, 256
  store i32 %30, i32* %21, align 4
  %31 = load i8**, i8*** bitcast (%struct.Array*** @arrtail to i8***), align 8
  store i8* %19, i8** %31, align 8
  store i8* %19, i8** bitcast (%struct.Array*** @arrtail to i8**), align 8
  br label %32

32:                                               ; preds = %18, %14
  store %struct.ieeePublic* null, %struct.ieeePublic** @last_defined, align 8
  br label %33

33:                                               ; preds = %1, %32
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @dbgls_output(i32, i8* nocapture) #5 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @dbgls_cleanup() #2 {
  %1 = load %struct.FileName*, %struct.FileName** @fnhead, align 8
  %2 = icmp eq %struct.FileName* %1, null
  br i1 %2, label %3, label %6

3:                                                ; preds = %6, %0
  %4 = load %struct.ieeeSection*, %struct.ieeeSection** @seghead, align 8
  %5 = icmp eq %struct.ieeeSection* %4, null
  br i1 %5, label %22, label %15

6:                                                ; preds = %0, %6
  %7 = phi %struct.FileName* [ %13, %6 ], [ %1, %0 ]
  %8 = bitcast %struct.FileName* %7 to i64*
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* bitcast (%struct.FileName** @fnhead to i64*), align 8
  %10 = getelementptr inbounds %struct.FileName, %struct.FileName* %7, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8
  tail call void @nasm_free(i8* %11) #13
  %12 = bitcast %struct.FileName* %7 to i8*
  tail call void @nasm_free(i8* nonnull %12) #13
  %13 = load %struct.FileName*, %struct.FileName** @fnhead, align 8
  %14 = icmp eq %struct.FileName* %13, null
  br i1 %14, label %3, label %6

15:                                               ; preds = %3, %34
  %16 = phi %struct.ieeeSection* [ %36, %34 ], [ %4, %3 ]
  %17 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %16, i64 0, i32 15
  %18 = load %struct.ieeePublic*, %struct.ieeePublic** %17, align 8
  %19 = icmp eq %struct.ieeePublic* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %15
  %21 = bitcast %struct.ieeePublic** %17 to i64*
  br label %25

22:                                               ; preds = %34, %3
  %23 = load %struct.Array*, %struct.Array** @arrhead, align 8
  %24 = icmp eq %struct.Array* %23, null
  br i1 %24, label %45, label %38

25:                                               ; preds = %20, %25
  %26 = phi %struct.ieeePublic* [ %18, %20 ], [ %32, %25 ]
  %27 = bitcast %struct.ieeePublic* %26 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %21, align 8
  %29 = getelementptr inbounds %struct.ieeePublic, %struct.ieeePublic* %26, i64 0, i32 1
  %30 = load i8*, i8** %29, align 8
  tail call void @nasm_free(i8* %30) #13
  %31 = bitcast %struct.ieeePublic* %26 to i8*
  tail call void @nasm_free(i8* nonnull %31) #13
  %32 = load %struct.ieeePublic*, %struct.ieeePublic** %17, align 8
  %33 = icmp eq %struct.ieeePublic* %32, null
  br i1 %33, label %34, label %25

34:                                               ; preds = %25, %15
  %35 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %16, i64 0, i32 0
  %36 = load %struct.ieeeSection*, %struct.ieeeSection** %35, align 8
  %37 = icmp eq %struct.ieeeSection* %36, null
  br i1 %37, label %22, label %15

38:                                               ; preds = %22, %38
  %39 = phi %struct.Array* [ %43, %38 ], [ %23, %22 ]
  %40 = bitcast %struct.Array* %39 to i64*
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* bitcast (%struct.Array** @arrhead to i64*), align 8
  %42 = bitcast %struct.Array* %39 to i8*
  tail call void @nasm_free(i8* nonnull %42) #13
  %43 = load %struct.Array*, %struct.Array** @arrhead, align 8
  %44 = icmp eq %struct.Array* %43, null
  br i1 %44, label %45, label %38

45:                                               ; preds = %38, %22
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: cold noreturn
declare void @nasm_panic(i8*, ...) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i32 @strcasecmp(i8* nocapture, i8* nocapture) local_unnamed_addr #8

; Function Attrs: allocsize(0)
declare noalias i8* @nasm_malloc(i64) local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare i8* @strcpy(i8* returned, i8* nocapture readonly) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @ieee_write_fixup(i32, i32, %struct.ieeeSection* nocapture, i32, i64, i32) unnamed_addr #2 {
  %7 = and i32 %1, %0
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %251, label %9

9:                                                ; preds = %6
  %10 = icmp eq i32 %1, -1
  br i1 %10, label %113, label %11

11:                                               ; preds = %9
  %12 = icmp sgt i32 %1, 1073741823
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = sub nsw i32 1073741824, %1
  br label %75

15:                                               ; preds = %11
  %16 = and i32 %1, 1
  %17 = icmp ne i32 %16, 0
  %18 = add i64 %4, -7
  %19 = icmp ugt i64 %18, 1
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %74

21:                                               ; preds = %15
  %22 = add nsw i32 %1, -1
  %23 = load %struct.ieeeSection*, %struct.ieeeSection** @seghead, align 8
  %24 = icmp eq %struct.ieeeSection* %23, null
  br i1 %24, label %73, label %25

25:                                               ; preds = %21, %30
  %26 = phi %struct.ieeeSection* [ %32, %30 ], [ %23, %21 ]
  %27 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %26, i64 0, i32 6
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, %22
  br i1 %29, label %34, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %26, i64 0, i32 0
  %32 = load %struct.ieeeSection*, %struct.ieeeSection** %31, align 8
  %33 = icmp eq %struct.ieeeSection* %32, null
  br i1 %33, label %73, label %25

34:                                               ; preds = %25
  %35 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %26, i64 0, i32 7
  %36 = load i32, i32* %35, align 4
  br label %37

37:                                               ; preds = %34, %42
  %38 = phi %struct.ieeeSection* [ %44, %42 ], [ %23, %34 ]
  %39 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %38, i64 0, i32 6
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, %0
  br i1 %41, label %46, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %38, i64 0, i32 0
  %44 = load %struct.ieeeSection*, %struct.ieeeSection** %43, align 8
  %45 = icmp eq %struct.ieeeSection* %44, null
  br i1 %45, label %49, label %37

46:                                               ; preds = %37
  %47 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %38, i64 0, i32 7
  %48 = load i32, i32* %47, align 4
  br label %75

49:                                               ; preds = %42
  %50 = sdiv i32 %0, 2
  %51 = load %struct.ExtBack*, %struct.ExtBack** @ebhead, align 8
  %52 = icmp sgt i32 %0, 1025
  %53 = icmp ne %struct.ExtBack* %51, null
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %64

55:                                               ; preds = %49, %55
  %56 = phi %struct.ExtBack* [ %60, %55 ], [ %51, %49 ]
  %57 = phi i32 [ %59, %55 ], [ %50, %49 ]
  %58 = getelementptr inbounds %struct.ExtBack, %struct.ExtBack* %56, i64 0, i32 0
  %59 = add nsw i32 %57, -512
  %60 = load %struct.ExtBack*, %struct.ExtBack** %58, align 8
  %61 = icmp sgt i32 %59, 512
  %62 = icmp ne %struct.ExtBack* %60, null
  %63 = and i1 %61, %62
  br i1 %63, label %55, label %64

64:                                               ; preds = %55, %49
  %65 = phi i32 [ %50, %49 ], [ %59, %55 ]
  %66 = phi %struct.ExtBack* [ %51, %49 ], [ %60, %55 ]
  %67 = phi i1 [ %53, %49 ], [ %62, %55 ]
  br i1 %67, label %68, label %72

68:                                               ; preds = %64
  %69 = sext i32 %65 to i64
  %70 = getelementptr inbounds %struct.ExtBack, %struct.ExtBack* %66, i64 0, i32 1, i64 %69
  %71 = load i32, i32* %70, align 4
  br label %75

72:                                               ; preds = %64
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9, i64 0, i64 0)) #13
  br label %75

73:                                               ; preds = %30, %21
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i64 0, i64 0)) #16
  unreachable

74:                                               ; preds = %15
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i64 0, i64 0)) #13
  br label %75

75:                                               ; preds = %68, %72, %74, %46, %13
  %76 = phi i32 [ %14, %13 ], [ %36, %46 ], [ %36, %68 ], [ %36, %72 ], [ -1431655766, %74 ]
  %77 = phi i32 [ -1431655766, %13 ], [ %48, %46 ], [ %71, %68 ], [ -1431655766, %72 ], [ -1431655766, %74 ]
  %78 = phi i32 [ 4, %13 ], [ 4, %46 ], [ 6, %68 ], [ 4, %72 ], [ 4, %74 ]
  %79 = phi i32 [ %5, %13 ], [ %5, %46 ], [ 0, %68 ], [ %5, %72 ], [ %5, %74 ]
  %80 = trunc i32 %3 to i16
  %81 = tail call noalias i8* @nasm_malloc(i64 32) #17
  %82 = bitcast i8* %81 to %struct.ieeeFixupp**
  %83 = getelementptr inbounds i8, i8* %81, i64 8
  %84 = bitcast i8* %83 to i32*
  store i32 %78, i32* %84, align 8
  %85 = getelementptr inbounds i8, i8* %81, i64 12
  %86 = bitcast i8* %85 to i16*
  store i16 %80, i16* %86, align 4
  %87 = getelementptr inbounds i8, i8* %81, i64 14
  %88 = bitcast i8* %87 to i16*
  store i16 -21846, i16* %88, align 2
  %89 = getelementptr inbounds i8, i8* %81, i64 16
  %90 = bitcast i8* %89 to i32*
  store i32 %76, i32* %90, align 8
  %91 = getelementptr inbounds i8, i8* %81, i64 20
  %92 = bitcast i8* %91 to i32*
  store i32 %77, i32* %92, align 4
  %93 = getelementptr inbounds i8, i8* %81, i64 24
  %94 = bitcast i8* %93 to i32*
  %95 = getelementptr inbounds i8, i8* %81, i64 28
  %96 = bitcast i8* %95 to i32*
  store i32 %79, i32* %96, align 4
  %97 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %2, i64 0, i32 8
  %98 = load i32, i32* %97, align 8
  store i32 %98, i32* %94, align 8
  %99 = shl i32 %3, 16
  %100 = ashr exact i32 %99, 16
  %101 = add nsw i32 %98, %100
  store i32 %101, i32* %97, align 8
  store %struct.ieeeFixupp* null, %struct.ieeeFixupp** %82, align 8
  %102 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %2, i64 0, i32 4
  %103 = load %struct.ieeeFixupp*, %struct.ieeeFixupp** %102, align 8
  %104 = icmp eq %struct.ieeeFixupp* %103, null
  %105 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %2, i64 0, i32 5
  br i1 %104, label %110, label %106

106:                                              ; preds = %75
  %107 = bitcast %struct.ieeeFixupp** %105 to i8***
  %108 = load i8**, i8*** %107, align 8
  store i8* %81, i8** %108, align 8
  %109 = bitcast %struct.ieeeFixupp** %105 to i8**
  store i8* %81, i8** %109, align 8
  br label %251

110:                                              ; preds = %75
  %111 = bitcast %struct.ieeeFixupp** %105 to i8**
  store i8* %81, i8** %111, align 8
  %112 = bitcast %struct.ieeeFixupp** %102 to i8**
  store i8* %81, i8** %112, align 8
  br label %251

113:                                              ; preds = %9
  %114 = icmp eq i32 %0, -1
  br i1 %114, label %251, label %115

115:                                              ; preds = %113
  %116 = icmp sgt i32 %0, 1073741823
  br i1 %116, label %117, label %119

117:                                              ; preds = %115
  %118 = sub nuw i32 -1073741825, %0
  br label %210

119:                                              ; preds = %115
  %120 = and i32 %0, 1
  %121 = icmp eq i32 %120, 0
  %122 = load %struct.ieeeSection*, %struct.ieeeSection** @seghead, align 8
  %123 = icmp eq %struct.ieeeSection* %122, null
  br i1 %121, label %127, label %124

124:                                              ; preds = %119
  br i1 %123, label %140, label %125

125:                                              ; preds = %124
  %126 = add nsw i32 %0, -1
  br label %128

127:                                              ; preds = %119
  br i1 %123, label %183, label %168

128:                                              ; preds = %125, %133
  %129 = phi %struct.ieeeSection* [ %122, %125 ], [ %135, %133 ]
  %130 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %129, i64 0, i32 6
  %131 = load i32, i32* %130, align 8
  %132 = icmp eq i32 %131, %126
  br i1 %132, label %137, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %129, i64 0, i32 0
  %135 = load %struct.ieeeSection*, %struct.ieeeSection** %134, align 8
  %136 = icmp eq %struct.ieeeSection* %135, null
  br i1 %136, label %140, label %128

137:                                              ; preds = %128
  %138 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %129, i64 0, i32 7
  %139 = load i32, i32* %138, align 4
  br label %210

140:                                              ; preds = %133, %124
  %141 = sdiv i32 %0, 2
  %142 = load %struct.ExtBack*, %struct.ExtBack** @ebhead, align 8
  %143 = icmp sgt i32 %0, 1025
  %144 = icmp ne %struct.ExtBack* %142, null
  %145 = and i1 %143, %144
  br i1 %145, label %146, label %155

146:                                              ; preds = %140, %146
  %147 = phi %struct.ExtBack* [ %151, %146 ], [ %142, %140 ]
  %148 = phi i32 [ %150, %146 ], [ %141, %140 ]
  %149 = getelementptr inbounds %struct.ExtBack, %struct.ExtBack* %147, i64 0, i32 0
  %150 = add nsw i32 %148, -512
  %151 = load %struct.ExtBack*, %struct.ExtBack** %149, align 8
  %152 = icmp sgt i32 %150, 512
  %153 = icmp ne %struct.ExtBack* %151, null
  %154 = and i1 %152, %153
  br i1 %154, label %146, label %155

155:                                              ; preds = %146, %140
  %156 = phi i32 [ %141, %140 ], [ %150, %146 ]
  %157 = phi %struct.ExtBack* [ %142, %140 ], [ %151, %146 ]
  %158 = phi i1 [ %144, %140 ], [ %153, %146 ]
  br i1 %158, label %159, label %167

159:                                              ; preds = %155
  %160 = add i64 %4, -7
  %161 = icmp ult i64 %160, 2
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.12, i64 0, i64 0)) #16
  unreachable

163:                                              ; preds = %159
  %164 = sext i32 %156 to i64
  %165 = getelementptr inbounds %struct.ExtBack, %struct.ExtBack* %157, i64 0, i32 1, i64 %164
  %166 = load i32, i32* %165, align 4
  br label %214

167:                                              ; preds = %155
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.13, i64 0, i64 0)) #16
  unreachable

168:                                              ; preds = %127, %173
  %169 = phi %struct.ieeeSection* [ %175, %173 ], [ %122, %127 ]
  %170 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %169, i64 0, i32 6
  %171 = load i32, i32* %170, align 8
  %172 = icmp eq i32 %171, %0
  br i1 %172, label %177, label %173

173:                                              ; preds = %168
  %174 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %169, i64 0, i32 0
  %175 = load %struct.ieeeSection*, %struct.ieeeSection** %174, align 8
  %176 = icmp eq %struct.ieeeSection* %175, null
  br i1 %176, label %183, label %168

177:                                              ; preds = %168
  %178 = add i64 %4, -7
  %179 = icmp ult i64 %178, 2
  %180 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %169, i64 0, i32 7
  %181 = load i32, i32* %180, align 4
  %182 = select i1 %179, i32 1, i32 2
  br label %214

183:                                              ; preds = %173, %127
  %184 = sdiv i32 %0, 2
  %185 = load %struct.ExtBack*, %struct.ExtBack** @ebhead, align 8
  %186 = icmp sgt i32 %0, 1025
  %187 = icmp ne %struct.ExtBack* %185, null
  %188 = and i1 %186, %187
  br i1 %188, label %189, label %198

189:                                              ; preds = %183, %189
  %190 = phi %struct.ExtBack* [ %194, %189 ], [ %185, %183 ]
  %191 = phi i32 [ %193, %189 ], [ %184, %183 ]
  %192 = getelementptr inbounds %struct.ExtBack, %struct.ExtBack* %190, i64 0, i32 0
  %193 = add nsw i32 %191, -512
  %194 = load %struct.ExtBack*, %struct.ExtBack** %192, align 8
  %195 = icmp sgt i32 %193, 512
  %196 = icmp ne %struct.ExtBack* %194, null
  %197 = and i1 %195, %196
  br i1 %197, label %189, label %198

198:                                              ; preds = %189, %183
  %199 = phi i32 [ %184, %183 ], [ %193, %189 ]
  %200 = phi %struct.ExtBack* [ %185, %183 ], [ %194, %189 ]
  %201 = phi i1 [ %187, %183 ], [ %196, %189 ]
  br i1 %201, label %202, label %209

202:                                              ; preds = %198
  %203 = add i64 %4, -7
  %204 = icmp ult i64 %203, 2
  %205 = select i1 %204, i32 5, i32 3
  %206 = sext i32 %199 to i64
  %207 = getelementptr inbounds %struct.ExtBack, %struct.ExtBack* %200, i64 0, i32 1, i64 %206
  %208 = load i32, i32* %207, align 4
  br label %214

209:                                              ; preds = %198
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.13, i64 0, i64 0)) #16
  unreachable

210:                                              ; preds = %137, %117
  %211 = phi i32 [ %118, %117 ], [ %139, %137 ]
  %212 = icmp eq i32 %3, 2
  br i1 %212, label %214, label %213

213:                                              ; preds = %210
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.14, i64 0, i64 0)) #13
  br label %214

214:                                              ; preds = %210, %177, %163, %202, %213
  %215 = phi i32 [ -1431655766, %210 ], [ -1431655766, %213 ], [ 0, %163 ], [ 0, %202 ], [ %5, %177 ]
  %216 = phi i32 [ 0, %210 ], [ 0, %213 ], [ 7, %163 ], [ %205, %202 ], [ %182, %177 ]
  %217 = phi i32 [ %211, %210 ], [ %211, %213 ], [ %166, %163 ], [ %208, %202 ], [ %181, %177 ]
  %218 = trunc i32 %3 to i16
  %219 = tail call noalias i8* @nasm_malloc(i64 32) #17
  %220 = bitcast i8* %219 to %struct.ieeeFixupp**
  %221 = getelementptr inbounds i8, i8* %219, i64 8
  %222 = bitcast i8* %221 to i32*
  store i32 %216, i32* %222, align 8
  %223 = getelementptr inbounds i8, i8* %219, i64 12
  %224 = bitcast i8* %223 to i16*
  store i16 %218, i16* %224, align 4
  %225 = getelementptr inbounds i8, i8* %219, i64 14
  %226 = bitcast i8* %225 to i16*
  store i16 -21846, i16* %226, align 2
  %227 = getelementptr inbounds i8, i8* %219, i64 16
  %228 = bitcast i8* %227 to i32*
  store i32 %217, i32* %228, align 8
  %229 = getelementptr inbounds i8, i8* %219, i64 20
  %230 = bitcast i8* %229 to i32*
  store i32 -1431655766, i32* %230, align 4
  %231 = getelementptr inbounds i8, i8* %219, i64 24
  %232 = bitcast i8* %231 to i32*
  %233 = getelementptr inbounds i8, i8* %219, i64 28
  %234 = bitcast i8* %233 to i32*
  store i32 %215, i32* %234, align 4
  %235 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %2, i64 0, i32 8
  %236 = load i32, i32* %235, align 8
  store i32 %236, i32* %232, align 8
  %237 = shl i32 %3, 16
  %238 = ashr exact i32 %237, 16
  %239 = add nsw i32 %236, %238
  store i32 %239, i32* %235, align 8
  store %struct.ieeeFixupp* null, %struct.ieeeFixupp** %220, align 8
  %240 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %2, i64 0, i32 4
  %241 = load %struct.ieeeFixupp*, %struct.ieeeFixupp** %240, align 8
  %242 = icmp eq %struct.ieeeFixupp* %241, null
  %243 = getelementptr inbounds %struct.ieeeSection, %struct.ieeeSection* %2, i64 0, i32 5
  br i1 %242, label %248, label %244

244:                                              ; preds = %214
  %245 = bitcast %struct.ieeeFixupp** %243 to i8***
  %246 = load i8**, i8*** %245, align 8
  store i8* %219, i8** %246, align 8
  %247 = bitcast %struct.ieeeFixupp** %243 to i8**
  store i8* %219, i8** %247, align 8
  br label %251

248:                                              ; preds = %214
  %249 = bitcast %struct.ieeeFixupp** %243 to i8**
  store i8* %219, i8** %249, align 8
  %250 = bitcast %struct.ieeeFixupp** %240 to i8**
  store i8* %219, i8** %250, align 8
  br label %251

251:                                              ; preds = %248, %244, %110, %106, %113, %6
  ret void
}

declare void @nasm_nonfatal(i8*, ...) local_unnamed_addr #1

declare noalias i8* @nasm_strdup(i8*) local_unnamed_addr #1

declare void @nasm_free(i8*) local_unnamed_addr #1

; Function Attrs: nofree
declare i64 @strlcpy(i8*, i8*, i64) local_unnamed_addr #12

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #8

; Function Attrs: allocsize(0)
declare noalias i8* @nasm_zalloc(i64) local_unnamed_addr #9

declare void @nasm_warn(i32, i8*, ...) local_unnamed_addr #1

declare i32 @seg_alloc() local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @strncasecmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

declare i64 @readnum(i8*, i8*) local_unnamed_addr #1

declare void @define_label(i8*, i32, i64, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @ieee_putascii(i8* nocapture readonly, ...) unnamed_addr #2 {
  %2 = alloca [256 x i8], align 16
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %4) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 256, i1 false)
  %5 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #13
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %7 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %5)
  %8 = call i32 @vsnprintf(i8* nonnull %4, i64 256, i8* %0, %struct.__va_list_tag* nonnull %6) #13
  %9 = call i64 @strlen(i8* nonnull %4) #18
  %10 = trunc i64 %9 to i32
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %44

12:                                               ; preds = %1
  %13 = and i64 %9, 4294967295
  %14 = and i64 %9, 1
  %15 = icmp eq i64 %13, 1
  br i1 %15, label %33, label %16

16:                                               ; preds = %12
  %17 = sub nsw i64 %13, %14
  br label %18

18:                                               ; preds = %51, %16
  %19 = phi i64 [ 0, %16 ], [ %52, %51 ]
  %20 = phi i64 [ %17, %16 ], [ %53, %51 ]
  %21 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %19
  %22 = load i8, i8* %21, align 2
  %23 = icmp ugt i8 %22, 31
  br i1 %23, label %24, label %28

24:                                               ; preds = %18
  %25 = sext i8 %22 to i32
  %26 = load i32, i32* @checksum, align 4
  %27 = add nsw i32 %26, %25
  store i32 %27, i32* @checksum, align 4
  br label %28

28:                                               ; preds = %18, %24
  %29 = or i64 %19, 1
  %30 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp ugt i8 %31, 31
  br i1 %32, label %47, label %51

33:                                               ; preds = %51, %12
  %34 = phi i64 [ 0, %12 ], [ %52, %51 ]
  %35 = icmp eq i64 %14, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %34
  %38 = load i8, i8* %37, align 1
  %39 = icmp ugt i8 %38, 31
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = sext i8 %38 to i32
  %42 = load i32, i32* @checksum, align 4
  %43 = add nsw i32 %42, %41
  store i32 %43, i32* @checksum, align 4
  br label %44

44:                                               ; preds = %33, %36, %40, %1
  call void @llvm.va_end(i8* nonnull %5)
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  %46 = call i32 @fputs(i8* nonnull %4, %struct._IO_FILE* %45)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %4) #13
  ret void

47:                                               ; preds = %28
  %48 = sext i8 %31 to i32
  %49 = load i32, i32* @checksum, align 4
  %50 = add nsw i32 %49, %48
  store i32 %50, i32* @checksum, align 4
  br label %51

51:                                               ; preds = %47, %28
  %52 = add nuw nsw i64 %19, 2
  %53 = add i64 %20, -2
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %33, label %18
}

declare i64 @nasm_comment_len() local_unnamed_addr #1

declare i8* @nasm_comment() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ieee_putld(i32, i32, i8* nocapture readonly) unnamed_addr #2 {
  %4 = icmp eq i32 %1, %0
  br i1 %4, label %54, label %5

5:                                                ; preds = %3
  %6 = srem i32 %0, 1024
  %7 = sub nsw i32 %1, %0
  %8 = icmp sgt i32 %7, 31
  br i1 %8, label %9, label %35

9:                                                ; preds = %5
  %10 = add i32 %1, -32
  %11 = sub i32 %10, %0
  %12 = and i32 %11, -32
  %13 = add i32 %12, %0
  br label %14

14:                                               ; preds = %9, %27
  %15 = phi i32 [ %29, %27 ], [ %6, %9 ]
  %16 = phi i32 [ %28, %27 ], [ %0, %9 ]
  tail call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i64 0, i64 0))
  %17 = sext i32 %15 to i64
  br label %18

18:                                               ; preds = %18, %14
  %19 = phi i64 [ %17, %14 ], [ %21, %18 ]
  %20 = phi i32 [ 0, %14 ], [ %25, %18 ]
  %21 = add nsw i64 %19, 1
  %22 = getelementptr inbounds i8, i8* %2, i64 %19
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  tail call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i64 0, i64 0), i32 %24)
  %25 = add nuw nsw i32 %20, 1
  %26 = icmp eq i32 %25, 32
  br i1 %26, label %27, label %18

27:                                               ; preds = %18
  %28 = add i32 %16, 32
  %29 = trunc i64 %21 to i32
  tail call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0))
  %30 = sub nsw i32 %1, %28
  %31 = icmp sgt i32 %30, 31
  br i1 %31, label %14, label %32

32:                                               ; preds = %27
  %33 = trunc i64 %21 to i32
  %34 = add i32 %13, 32
  br label %35

35:                                               ; preds = %32, %5
  %36 = phi i32 [ %0, %5 ], [ %34, %32 ]
  %37 = phi i32 [ %6, %5 ], [ %33, %32 ]
  %38 = icmp eq i32 %36, %1
  br i1 %38, label %54, label %39

39:                                               ; preds = %35
  tail call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i64 0, i64 0))
  %40 = icmp slt i32 %36, %1
  br i1 %40, label %41, label %52

41:                                               ; preds = %39
  %42 = sext i32 %37 to i64
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ %42, %41 ], [ %46, %43 ]
  %45 = phi i32 [ %36, %41 ], [ %50, %43 ]
  %46 = add nsw i64 %44, 1
  %47 = getelementptr inbounds i8, i8* %2, i64 %44
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  tail call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i64 0, i64 0), i32 %49)
  %50 = add i32 %45, 1
  %51 = icmp eq i32 %50, %1
  br i1 %51, label %52, label %43

52:                                               ; preds = %43, %39
  %53 = phi i32 [ %36, %39 ], [ %1, %43 ]
  tail call void (i8*, ...) @ieee_putascii(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0))
  br label %54

54:                                               ; preds = %35, %3, %52
  %55 = phi i32 [ %53, %52 ], [ %1, %3 ], [ %1, %35 ]
  ret i32 %55
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #13

; Function Attrs: nofree nounwind
declare i32 @vsnprintf(i8* nocapture, i64, i8* nocapture readonly, %struct.__va_list_tag*) local_unnamed_addr #11

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #13

; Function Attrs: nofree nounwind
declare i32 @fputs(i8* nocapture readonly, %struct._IO_FILE* nocapture) local_unnamed_addr #11

; Function Attrs: nounwind readnone
declare i32** @__ctype_toupper_loc() local_unnamed_addr #14

; Function Attrs: nofree nounwind
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #11

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctpop.i32(i32) #15

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { cold noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind readnone speculatable }
attributes #16 = { cold noreturn nounwind }
attributes #17 = { nounwind allocsize(0) }
attributes #18 = { nounwind readonly }
attributes #19 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i32 0, i32 33}
