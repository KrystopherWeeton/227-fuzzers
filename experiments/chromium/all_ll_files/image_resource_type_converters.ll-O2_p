; ModuleID = '../../third_party/blink/renderer/modules/manifest/image_resource_type_converters.cc'
source_filename = "../../third_party/blink/renderer/modules/manifest/image_resource_type_converters.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::ManifestImageResource"* }
%"class.blink::mojom::blink::ManifestImageResource" = type { %"class.blink::KURL", %"class.WTF::String", %"class.WTF::Vector", %"class.WTF::Vector.5" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::KURL"* }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.gfx::Size"*, i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.WTF::Vector.5" = type { %"class.WTF::VectorBuffer.6" }
%"class.WTF::VectorBuffer.6" = type { %"class.WTF::VectorBufferBase.7" }
%"class.WTF::VectorBufferBase.7" = type { i32*, i32, i32 }
%"class.blink::ManifestImageResource" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::Size"*, %"class.gfx::Size"*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.gfx::Size"* }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type { i32, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::HashSet.54" = type { %"class.WTF::HashTable.55" }
%"class.WTF::HashTable.55" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.WTF::String"*, i32, i32 }
%"struct.blink::Manifest::ImageResource" = type { %class.GURL, %"class.std::__1::basic_string.22", %"class.std::__1::vector", %"class.std::__1::vector.36" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.GURL* }
%"class.std::__1::basic_string.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.25 }
%union.anon.25 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { i32*, i32*, %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { i32* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.26 }
%struct.anon.26 = type { %"struct.std::__1::__padding.27", i8 }
%"struct.std::__1::__padding.27" = type { [1 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF9HashTableINSt3__14pairIiiEES3_NS_17IdentityExtractorENS_8PairHashIiiEENS_14PairHashTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEES9_EESA_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_SA_SB_EERKS3_S3_EENS_18HashTableAddResultISC_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIiiEES3_NS_17IdentityExtractorENS_8PairHashIiiEENS_14PairHashTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEES9_EESA_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIiiEES3_NS_17IdentityExtractorENS_8PairHashIiiEENS_14PairHashTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEES9_EESA_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_ = comdat any

$_ZN3WTF6VectorIN3gfx4SizeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx4SizeEEEmm = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5mojom29ManifestImageResource_PurposeEEEmm = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF6VectorIN5blink5mojom29ManifestImageResource_PurposeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIiiEEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<int, int>]\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.6 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN3gfx4SizeEEEPKcv = private unnamed_addr constant [57 x i8] c"const char *WTF::GetStringWithTypeName() [T = gfx::Size]\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"any\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"monochrome\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"maskable\00", align 1
@.str.10 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5mojom29ManifestImageResource_PurposeEEEPKcv = private unnamed_addr constant [91 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::mojom::ManifestImageResource_Purpose]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo13TypeConverterINS_9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEEPNS2_21ManifestImageResourceEE7ConvertEPKS7_(%"class.mojo::StructPtr"* noalias nocapture sret, %"class.blink::ManifestImageResource"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"class.WTF::Vector", align 8
  %5 = alloca %"class.WTF::Vector.5", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = tail call i8* @_Znwm(i64 152) #11, !noalias !2
  %9 = bitcast i8* %8 to %"class.blink::mojom::blink::ManifestImageResource"*
  tail call void @_ZN5blink5mojom5blink21ManifestImageResourceC1Ev(%"class.blink::mojom::blink::ManifestImageResource"* nonnull %9) #12, !noalias !2
  %10 = ptrtoint i8* %8 to i64
  %11 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 %10, i64* %11, align 8, !alias.scope !2
  %12 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.blink::ManifestImageResource", %"class.blink::ManifestImageResource"* %1, i64 0, i32 4
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %3, %"class.WTF::String"* dereferenceable(8) %13) #12
  %14 = bitcast i8* %8 to %"class.blink::KURL"*
  %15 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* nonnull %14, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %12) #12
  %16 = getelementptr inbounds %"class.blink::ManifestImageResource", %"class.blink::ManifestImageResource"* %1, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %45, label %19

19:                                               ; preds = %2
  %20 = bitcast %"class.WTF::Vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"class.blink::ManifestImageResource", %"class.blink::ManifestImageResource"* %1, i64 0, i32 3
  call fastcc void @_ZN4mojo12_GLOBAL__N_110ParseSizesERKN3WTF6StringE(%"class.WTF::Vector"* nonnull sret %4, %"class.WTF::String"* dereferenceable(8) %21)
  %22 = getelementptr inbounds i8, i8* %8, i64 120
  %23 = bitcast %"class.WTF::Vector"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast i8* %22 to i64*
  %26 = load i64, i64* %25, align 8
  store atomic i64 %26, i64* %23 monotonic, align 8
  store atomic i64 %24, i64* %25 monotonic, align 8
  %27 = getelementptr inbounds i8, i8* %8, i64 128
  %28 = bitcast i8* %27 to i32*
  %29 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %29, align 8
  store i32 %31, i32* %28, align 4
  store i32 %30, i32* %29, align 8
  %32 = getelementptr inbounds i8, i8* %8, i64 132
  %33 = bitcast i8* %32 to i32*
  %34 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %35 = load i32, i32* %33, align 4
  %36 = load i32, i32* %34, align 4
  store i32 %36, i32* %33, align 4
  store i32 %35, i32* %34, align 4
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %38 = icmp eq i64 %26, 0
  %39 = inttoptr i64 %26 to i8*
  br i1 %38, label %44, label %40, !prof !5

40:                                               ; preds = %19
  %41 = icmp eq i32 %35, 0
  br i1 %41, label %43, label %42, !prof !6

42:                                               ; preds = %40
  store i32 0, i32* %34, align 4
  br label %43

43:                                               ; preds = %42, %40
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #12
  store %"class.gfx::Size"* null, %"class.gfx::Size"** %37, align 8
  br label %44

44:                                               ; preds = %19, %43
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #12
  br label %45

45:                                               ; preds = %2, %44
  %46 = getelementptr inbounds %"class.blink::ManifestImageResource", %"class.blink::ManifestImageResource"* %1, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %75, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.WTF::Vector.5"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #12
  %51 = getelementptr inbounds %"class.blink::ManifestImageResource", %"class.blink::ManifestImageResource"* %1, i64 0, i32 2
  call fastcc void @_ZN4mojo12_GLOBAL__N_112ParsePurposeERKN3WTF6StringE(%"class.WTF::Vector.5"* nonnull sret %5, %"class.WTF::String"* dereferenceable(8) %51)
  %52 = getelementptr inbounds i8, i8* %8, i64 136
  %53 = bitcast %"class.WTF::Vector.5"* %5 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast i8* %52 to i64*
  %56 = load i64, i64* %55, align 8
  store atomic i64 %56, i64* %53 monotonic, align 8
  store atomic i64 %54, i64* %55 monotonic, align 8
  %57 = getelementptr inbounds i8, i8* %8, i64 144
  %58 = bitcast i8* %57 to i32*
  %59 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %5, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %58, align 4
  %61 = load i32, i32* %59, align 8
  store i32 %61, i32* %58, align 4
  store i32 %60, i32* %59, align 8
  %62 = getelementptr inbounds i8, i8* %8, i64 148
  %63 = bitcast i8* %62 to i32*
  %64 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %5, i64 0, i32 0, i32 0, i32 2
  %65 = load i32, i32* %63, align 4
  %66 = load i32, i32* %64, align 4
  store i32 %66, i32* %63, align 4
  store i32 %65, i32* %64, align 4
  %67 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %5, i64 0, i32 0, i32 0, i32 0
  %68 = icmp eq i64 %56, 0
  %69 = inttoptr i64 %56 to i8*
  br i1 %68, label %74, label %70, !prof !5

70:                                               ; preds = %49
  %71 = icmp eq i32 %65, 0
  br i1 %71, label %73, label %72, !prof !6

72:                                               ; preds = %70
  store i32 0, i32* %64, align 4
  br label %73

73:                                               ; preds = %72, %70
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %69) #12
  store i32* null, i32** %67, align 8
  br label %74

74:                                               ; preds = %49, %73
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #12
  br label %75

75:                                               ; preds = %45, %74
  %76 = getelementptr inbounds %"class.blink::ManifestImageResource", %"class.blink::ManifestImageResource"* %1, i64 0, i32 5, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %102, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.blink::ManifestImageResource", %"class.blink::ManifestImageResource"* %1, i64 0, i32 5
  %81 = call fastcc %"class.WTF::StringImpl"* @_ZN4mojo12_GLOBAL__N_19ParseTypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %80)
  %82 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %83 = load %"class.blink::mojom::blink::ManifestImageResource"*, %"class.blink::mojom::blink::ManifestImageResource"** %7, align 8
  %84 = getelementptr inbounds %"class.blink::mojom::blink::ManifestImageResource", %"class.blink::mojom::blink::ManifestImageResource"* %83, i64 0, i32 1
  %85 = bitcast %"class.WTF::String"* %84 to i64*
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  store i64 %82, i64* %85, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %143, label %89

89:                                               ; preds = %79
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %143

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #12
  br label %143

102:                                              ; preds = %75
  %103 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #12
  %104 = load %"class.blink::mojom::blink::ManifestImageResource"*, %"class.blink::mojom::blink::ManifestImageResource"** %7, align 8
  %105 = getelementptr inbounds %"class.blink::mojom::blink::ManifestImageResource", %"class.blink::mojom::blink::ManifestImageResource"* %104, i64 0, i32 1
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %107 = bitcast %"class.WTF::String"* %6 to i64*
  %108 = load i64, i64* %107, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %106, align 8
  %109 = bitcast %"class.WTF::String"* %105 to i64*
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %105, i64 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  store i64 %108, i64* %109, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %102
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #12
  br label %126

126:                                              ; preds = %102, %122, %125
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #12
  br label %142

142:                                              ; preds = %126, %138, %141
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #12
  br label %143

143:                                              ; preds = %79, %98, %101, %142
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4mojo12_GLOBAL__N_110ParseSizesERKN3WTF6StringE(%"class.WTF::Vector"* noalias sret, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 {
  %3 = alloca %"class.blink::WebVector", align 8
  %4 = alloca %"class.blink::WebString", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.WTF::HashSet", align 8
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"struct.std::__1::pair"*
  %9 = bitcast %"class.blink::WebVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %3, i64 0, i32 0, i32 0, i32 1
  %12 = bitcast %"class.blink::WebString"* %4 to i8*
  %13 = bitcast %"class.blink::WebVector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %14 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.WTF::String"* %1) #12
  call void @_ZN5blink9WebString9FromASCIIERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.blink::WebString"* nonnull sret %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #12
  call void @_ZN5blink18WebIconSizesParser14ParseIconSizesERKNS_9WebStringE(%"class.blink::WebVector"* nonnull sret %3, %"class.blink::WebString"* nonnull dereferenceable(8) %4) #12
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %4) #12
  %15 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %2, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  %23 = bitcast %"class.WTF::HashSet"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #12
  %24 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %6, i64 0, i32 0, i32 0
  %25 = bitcast %"class.WTF::HashSet"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 20, i1 false) #12
  %26 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %29 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #12
  %30 = load %"class.gfx::Size"*, %"class.gfx::Size"** %10, align 8
  %31 = load %"class.gfx::Size"*, %"class.gfx::Size"** %11, align 8
  %32 = icmp eq %"class.gfx::Size"* %30, %31
  br i1 %32, label %43, label %33

33:                                               ; preds = %22
  %34 = bitcast i64* %7 to i8*
  %35 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %6, i64 0, i32 0
  br label %51

36:                                               ; preds = %79
  %37 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %24, align 8
  %38 = icmp eq %"struct.std::__1::pair"* %37, null
  br i1 %38, label %41, label %39, !prof !5

39:                                               ; preds = %36
  %40 = bitcast %"struct.std::__1::pair"* %37 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %40) #12
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %24, align 8
  br label %41

41:                                               ; preds = %39, %36
  %42 = load %"class.gfx::Size"*, %"class.gfx::Size"** %10, align 8
  br label %43

43:                                               ; preds = %22, %41
  %44 = phi %"class.gfx::Size"* [ %42, %41 ], [ %30, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #12
  %45 = icmp eq %"class.gfx::Size"* %44, null
  br i1 %45, label %50, label %46

46:                                               ; preds = %43
  %47 = ptrtoint %"class.gfx::Size"* %44 to i64
  %48 = bitcast %"class.gfx::Size"** %11 to i64*
  store i64 %47, i64* %48, align 8
  %49 = bitcast %"class.gfx::Size"* %44 to i8*
  call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %43, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #12
  ret void

51:                                               ; preds = %33, %79
  %52 = phi %"class.gfx::Size"* [ %30, %33 ], [ %80, %79 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %53 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %52, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %52, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i64
  %58 = shl nuw i64 %57, 32
  %59 = zext i32 %54 to i64
  %60 = or i64 %58, %59
  store i64 %60, i64* %7, align 8
  %61 = call { %"struct.std::__1::pair"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIiiEES3_NS_17IdentityExtractorENS_8PairHashIiiEENS_14PairHashTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEES9_EESA_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_SA_SB_EERKS3_S3_EENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable"* nonnull %35, %"struct.std::__1::pair"* nonnull dereferenceable(8) %8, %"struct.std::__1::pair"* nonnull dereferenceable(8) %8) #12
  %62 = extractvalue { %"struct.std::__1::pair"*, i8 } %61, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  %63 = and i8 %62, 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %79, label %65

65:                                               ; preds = %51
  %66 = load i32, i32* %28, align 4
  %67 = load i32, i32* %27, align 8
  %68 = icmp eq i32 %66, %67
  br i1 %68, label %78, label %69, !prof !6

69:                                               ; preds = %65
  %70 = load %"class.gfx::Size"*, %"class.gfx::Size"** %26, align 8
  %71 = zext i32 %66 to i64
  %72 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %70, i64 %71
  %73 = bitcast %"class.gfx::Size"* %52 to i64*
  %74 = bitcast %"class.gfx::Size"* %72 to i64*
  %75 = load i64, i64* %73, align 4
  store i64 %75, i64* %74, align 4
  %76 = load i32, i32* %28, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %28, align 4
  br label %79

78:                                               ; preds = %65
  call void @_ZN3WTF6VectorIN3gfx4SizeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector"* %0, %"class.gfx::Size"* dereferenceable(8) %52) #12
  br label %79

79:                                               ; preds = %78, %69, %51
  %80 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %52, i64 1
  %81 = icmp eq %"class.gfx::Size"* %80, %31
  br i1 %81, label %36, label %51
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4mojo12_GLOBAL__N_112ParsePurposeERKN3WTF6StringE(%"class.WTF::Vector.5"* noalias sret, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::HashSet.54", align 8
  %10 = alloca %"class.WTF::Vector.58", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca i32, align 4
  %13 = bitcast %"class.WTF::HashSet.54"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.WTF::HashSet.54", %"class.WTF::HashSet.54"* %9, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.WTF::HashSet.54", %"class.WTF::HashSet.54"* %9, i64 0, i32 0, i32 1
  %16 = bitcast %"class.WTF::HashSet.54"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 20, i1 false) #12
  %17 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 2
  %20 = bitcast %"class.WTF::Vector.5"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #12
  %21 = getelementptr inbounds %"class.WTF::HashSet.54", %"class.WTF::HashSet.54"* %9, i64 0, i32 0
  call void @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.55"* nonnull %21, i32 2) #12
  %22 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 8) #12
  %23 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %22, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5mojom29ManifestImageResource_PurposeEEEPKcv, i64 0, i64 0)) #12
  %24 = ptrtoint i8* %23 to i64
  %25 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = lshr i64 %22, 2
  %27 = trunc i64 %26 to i32
  store i32 %27, i32* %18, align 8
  %28 = bitcast %"class.WTF::Vector.58"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #12
  %29 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %10, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %10, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 16, i1 false) #12
  %31 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  %32 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"* %1) #12
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  call void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* nonnull %11, i16 zeroext 32, i1 zeroext false, %"class.WTF::Vector.58"* nonnull dereferenceable(16) %10) #12
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #12
  br label %49

49:                                               ; preds = %2, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  %50 = load %"class.WTF::String"*, %"class.WTF::String"** %29, align 8
  %51 = load i32, i32* %30, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 %52
  %54 = icmp eq i32 %51, 0
  br i1 %54, label %89, label %55

55:                                               ; preds = %49
  %56 = bitcast i32* %12 to i8*
  %57 = bitcast %"class.WTF::StringView"* %5 to i8*
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %60 = bitcast i8** %59 to %"class.WTF::StringImpl"**
  %61 = bitcast %"class.WTF::StringView"* %5 to i64*
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %63 = bitcast %"class.WTF::StringView"* %6 to i8*
  %64 = bitcast %"class.WTF::StringView"* %6 to i64*
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %67 = bitcast %"class.WTF::StringView"* %3 to i8*
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %70 = bitcast i8** %69 to %"class.WTF::StringImpl"**
  %71 = bitcast %"class.WTF::StringView"* %3 to i64*
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %73 = bitcast %"class.WTF::StringView"* %4 to i8*
  %74 = bitcast %"class.WTF::StringView"* %4 to i64*
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %77 = bitcast %"class.WTF::StringView"* %7 to i8*
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %80 = bitcast i8** %79 to %"class.WTF::StringImpl"**
  %81 = bitcast %"class.WTF::StringView"* %7 to i64*
  %82 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %83 = bitcast %"class.WTF::StringView"* %8 to i8*
  %84 = bitcast %"class.WTF::StringView"* %8 to i64*
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  br label %160

87:                                               ; preds = %224
  %88 = load %"class.WTF::String"*, %"class.WTF::String"** %29, align 8
  br label %89

89:                                               ; preds = %87, %49
  %90 = phi %"class.WTF::String"* [ %88, %87 ], [ %50, %49 ]
  %91 = icmp eq %"class.WTF::String"* %90, null
  br i1 %91, label %125, label %92, !prof !5

92:                                               ; preds = %89
  %93 = bitcast %"class.WTF::String"* %90 to i8*
  %94 = load i32, i32* %30, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %123, label %96, !prof !6

96:                                               ; preds = %92
  %97 = zext i32 %94 to i64
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %90, i64 %97
  br label %99

99:                                               ; preds = %117, %96
  %100 = phi %"class.WTF::String"* [ %118, %117 ], [ %90, %96 ]
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #12
  br label %117

117:                                              ; preds = %116, %113, %99
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 1
  %119 = icmp eq %"class.WTF::String"* %118, %98
  br i1 %119, label %120, label %99

120:                                              ; preds = %117
  store i32 0, i32* %30, align 4
  %121 = bitcast %"class.WTF::Vector.58"* %10 to i8**
  %122 = load i8*, i8** %121, align 8
  br label %123

123:                                              ; preds = %120, %92
  %124 = phi i8* [ %122, %120 ], [ %93, %92 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %124) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %29, align 8
  br label %125

125:                                              ; preds = %89, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #12
  %126 = load %"class.WTF::String"*, %"class.WTF::String"** %14, align 8
  %127 = icmp eq %"class.WTF::String"* %126, null
  br i1 %127, label %159, label %128, !prof !5

128:                                              ; preds = %125
  %129 = load i32, i32* %15, align 8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %157, label %131

131:                                              ; preds = %128
  %132 = zext i32 %129 to i64
  br label %133

133:                                              ; preds = %154, %131
  %134 = phi i64 [ 0, %131 ], [ %155, %154 ]
  %135 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 %134
  %136 = bitcast %"class.WTF::String"* %135 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast i8* %137 to %"class.WTF::StringImpl"*
  %139 = ptrtoint i8* %137 to i64
  switch i64 %139, label %140 [
    i64 -1, label %154
    i64 0, label %154
  ]

140:                                              ; preds = %133
  %141 = getelementptr inbounds i8, i8* %137, i64 8
  %142 = bitcast i8* %141 to i32*
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = bitcast i8* %137 to i32*
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %140
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %140
  %151 = phi i32 [ %149, %148 ], [ %147, %140 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #12
  br label %154

154:                                              ; preds = %153, %150, %133, %133
  %155 = add nuw nsw i64 %134, 1
  %156 = icmp eq i64 %155, %132
  br i1 %156, label %157, label %133

157:                                              ; preds = %154, %128
  %158 = bitcast %"class.WTF::String"* %126 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %158) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %14, align 8
  br label %159

159:                                              ; preds = %125, %157
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  ret void

160:                                              ; preds = %55, %224
  %161 = phi %"class.WTF::String"* [ %50, %55 ], [ %225, %224 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #12
  store i32 -1431655766, i32* %12, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #12
  %162 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %161, i64 0, i32 0, i32 0
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %162, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %165, label %167

165:                                              ; preds = %160
  store i8* null, i8** %59, align 8
  %166 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %166, i64* %61, align 8
  br label %172

167:                                              ; preds = %160
  store %"class.WTF::StringImpl"* %163, %"class.WTF::StringImpl"** %58, align 8
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 1
  store %"class.WTF::StringImpl"* %170, %"class.WTF::StringImpl"** %60, align 8
  %171 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %172

172:                                              ; preds = %167, %165
  %173 = phi i64 [ %171, %167 ], [ %166, %165 ]
  %174 = phi i32 [ %169, %167 ], [ 0, %165 ]
  store i32 %174, i32* %62, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #12
  store i64 %173, i64* %64, align 8
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i8** %65, align 8
  store i32 3, i32* %66, align 8
  %175 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #12
  br i1 %175, label %176, label %177

176:                                              ; preds = %172
  store i32 0, i32* %12, align 4
  br label %207

177:                                              ; preds = %172
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #12
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %162, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %180, label %182

180:                                              ; preds = %177
  store i8* null, i8** %69, align 8
  %181 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %181, i64* %71, align 8
  br label %187

182:                                              ; preds = %177
  store %"class.WTF::StringImpl"* %178, %"class.WTF::StringImpl"** %68, align 8
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 1
  store %"class.WTF::StringImpl"* %185, %"class.WTF::StringImpl"** %70, align 8
  %186 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %187

187:                                              ; preds = %182, %180
  %188 = phi i64 [ %186, %182 ], [ %181, %180 ]
  %189 = phi i32 [ %184, %182 ], [ 0, %180 ]
  store i32 %189, i32* %72, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #12
  store i64 %188, i64* %74, align 8
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8** %75, align 8
  store i32 10, i32* %76, align 8
  %190 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #12
  br i1 %190, label %191, label %192

191:                                              ; preds = %187
  store i32 1, i32* %12, align 4
  br label %207

192:                                              ; preds = %187
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #12
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %162, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %194, label %195, label %197

195:                                              ; preds = %192
  store i8* null, i8** %79, align 8
  %196 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %196, i64* %81, align 8
  br label %202

197:                                              ; preds = %192
  store %"class.WTF::StringImpl"* %193, %"class.WTF::StringImpl"** %78, align 8
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 1
  store %"class.WTF::StringImpl"* %200, %"class.WTF::StringImpl"** %80, align 8
  %201 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %202

202:                                              ; preds = %197, %195
  %203 = phi i64 [ %201, %197 ], [ %196, %195 ]
  %204 = phi i32 [ %199, %197 ], [ 0, %195 ]
  store i32 %204, i32* %82, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #12
  store i64 %203, i64* %84, align 8
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), i8** %85, align 8
  store i32 8, i32* %86, align 8
  %205 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #12
  br i1 %205, label %206, label %224

206:                                              ; preds = %202
  store i32 2, i32* %12, align 4
  br label %207

207:                                              ; preds = %191, %206, %176
  %208 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.55"* nonnull %21, %"class.WTF::String"* dereferenceable(8) %161, %"class.WTF::String"* dereferenceable(8) %161) #12
  %209 = extractvalue { %"class.WTF::String"*, i8 } %208, 1
  %210 = and i8 %209, 1
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %224, label %212

212:                                              ; preds = %207
  %213 = load i32, i32* %19, align 4
  %214 = load i32, i32* %18, align 8
  %215 = icmp eq i32 %213, %214
  br i1 %215, label %223, label %216, !prof !6

216:                                              ; preds = %212
  %217 = load i32*, i32** %17, align 8
  %218 = zext i32 %213 to i64
  %219 = getelementptr inbounds i32, i32* %217, i64 %218
  %220 = load i32, i32* %12, align 4
  store i32 %220, i32* %219, align 4
  %221 = load i32, i32* %19, align 4
  %222 = add i32 %221, 1
  store i32 %222, i32* %19, align 4
  br label %224

223:                                              ; preds = %212
  call void @_ZN3WTF6VectorIN5blink5mojom29ManifestImageResource_PurposeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.5"* %0, i32* nonnull dereferenceable(4) %12) #12
  br label %224

224:                                              ; preds = %202, %207, %216, %223
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #12
  %225 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %161, i64 1
  %226 = icmp eq %"class.WTF::String"* %225, %53
  br i1 %226, label %87, label %160
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN4mojo12_GLOBAL__N_19ParseTypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %7, %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #12
  br label %45

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* %0) #12
  %14 = call zeroext i1 @_ZN5blink19IsSupportedMimeTypeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #12
  %15 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %12, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  br i1 %14, label %24, label %23

23:                                               ; preds = %22
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #12
  br label %45

24:                                               ; preds = %22
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %27, label %45, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %45

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i33
  %37 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #12
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !6

42:                                               ; preds = %33
  call void @llvm.trap() #12
  unreachable

43:                                               ; preds = %33
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %34, align 4
  br label %45

45:                                               ; preds = %43, %28, %24, %23, %11
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  ret %"class.WTF::StringImpl"* %47
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28ConvertManifestImageResourceEPKNS_21ManifestImageResourceE(%"struct.blink::Manifest::ImageResource"* noalias sret, %"class.blink::ManifestImageResource"*) local_unnamed_addr #0 {
  %3 = alloca %class.GURL, align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca %"class.std::__1::basic_string.22", align 8
  %6 = alloca %"class.blink::WebString", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::Vector.5", align 8
  %9 = alloca %"class.WTF::Vector", align 8
  %10 = bitcast %"struct.blink::Manifest::ImageResource"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 -86, i64 192, i1 false)
  tail call void @_ZN5blink8Manifest13ImageResourceC1Ev(%"struct.blink::Manifest::ImageResource"* %0) #12
  %11 = bitcast %class.GURL* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.blink::ManifestImageResource", %"class.blink::ManifestImageResource"* %1, i64 0, i32 4
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %4, %"class.WTF::String"* dereferenceable(8) %13) #12
  call void @_ZNK5blink4KURLcv4GURLEv(%class.GURL* nonnull sret %3, %"class.blink::KURL"* nonnull %4) #12
  %14 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %0, i64 0, i32 0
  %15 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %14, %class.GURL* nonnull dereferenceable(120) %3) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %3) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %11) #12
  %16 = getelementptr inbounds %"class.blink::ManifestImageResource", %"class.blink::ManifestImageResource"* %1, i64 0, i32 5, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %58, label %19

19:                                               ; preds = %2
  %20 = bitcast %"class.std::__1::basic_string.22"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #12
  %21 = bitcast %"class.blink::WebString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  %22 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  %23 = getelementptr inbounds %"class.blink::ManifestImageResource", %"class.blink::ManifestImageResource"* %1, i64 0, i32 5
  %24 = call fastcc %"class.WTF::StringImpl"* @_ZN4mojo12_GLOBAL__N_19ParseTypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %23)
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %25, align 8
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %6, %"class.WTF::String"* nonnull dereferenceable(8) %7) #12
  %26 = call i64 @_ZNK5blink9WebString6lengthEv(%"class.blink::WebString"* nonnull %6) #12, !noalias !7
  %27 = call i8* @_ZNK5blink9WebString5Data8Ev(%"class.blink::WebString"* nonnull %6) #12, !noalias !7
  %28 = call i16* @_ZNK5blink9WebString6Data16Ev(%"class.blink::WebString"* nonnull %6) #12, !noalias !7
  call void @_ZN4base20Latin1OrUTF16ToUTF16EmPKhPKDs(%"class.std::__1::basic_string.22"* nonnull sret %5, i64 %26, i8* %27, i16* %28) #12
  %29 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %0, i64 0, i32 1
  %30 = bitcast %"class.std::__1::basic_string.22"* %29 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %30, i64 0, i32 1, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %19
  %35 = bitcast %"class.std::__1::basic_string.22"* %29 to i8**
  %36 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %36) #11
  br label %37

37:                                               ; preds = %34, %19
  %38 = bitcast %"class.std::__1::basic_string.22"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* nonnull align 8 %20, i64 24, i1 false) #12
  %39 = bitcast %"class.std::__1::basic_string.22"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  store i8 0, i8* %40, align 1
  %41 = bitcast %"class.std::__1::basic_string.22"* %5 to i16*
  store i16 0, i16* %41, align 8
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %6) #12
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #12
  br label %57

57:                                               ; preds = %37, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #12
  br label %58

58:                                               ; preds = %2, %57
  %59 = getelementptr inbounds %"class.blink::ManifestImageResource", %"class.blink::ManifestImageResource"* %1, i64 0, i32 2, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %250, label %62

62:                                               ; preds = %58
  %63 = bitcast %"class.WTF::Vector.5"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #12
  %64 = getelementptr inbounds %"class.blink::ManifestImageResource", %"class.blink::ManifestImageResource"* %1, i64 0, i32 2
  call fastcc void @_ZN4mojo12_GLOBAL__N_112ParsePurposeERKN3WTF6StringE(%"class.WTF::Vector.5"* nonnull sret %8, %"class.WTF::String"* dereferenceable(8) %64)
  %65 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %8, i64 0, i32 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %8, i64 0, i32 0, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds i32, i32* %66, i64 %69
  %71 = icmp eq i32 %68, 0
  br i1 %71, label %81, label %72

72:                                               ; preds = %62
  %73 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %0, i64 0, i32 3
  %74 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %0, i64 0, i32 3, i32 0, i32 1
  %75 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %76 = bitcast i32** %74 to i64*
  %77 = bitcast %"class.std::__1::vector.36"* %73 to i64*
  %78 = bitcast i32** %75 to i64*
  br label %91

79:                                               ; preds = %247
  %80 = load i32*, i32** %65, align 8
  br label %81

81:                                               ; preds = %79, %62
  %82 = phi i32* [ %80, %79 ], [ %66, %62 ]
  %83 = icmp eq i32* %82, null
  %84 = bitcast i32* %82 to i8*
  br i1 %83, label %90, label %85, !prof !5

85:                                               ; preds = %81
  %86 = load i32, i32* %67, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %89, label %88, !prof !6

88:                                               ; preds = %85
  store i32 0, i32* %67, align 4
  br label %89

89:                                               ; preds = %88, %85
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %84) #12
  store i32* null, i32** %65, align 8
  br label %90

90:                                               ; preds = %81, %89
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #12
  br label %250

91:                                               ; preds = %72, %247
  %92 = phi i32* [ %66, %72 ], [ %248, %247 ]
  %93 = load i32, i32* %92, align 4
  switch i32 %93, label %247 [
    i32 0, label %94
    i32 1, label %145
    i32 2, label %196
  ]

94:                                               ; preds = %91
  %95 = load i32*, i32** %74, align 8
  %96 = load i32*, i32** %75, align 8
  %97 = icmp ult i32* %95, %96
  %98 = ptrtoint i32* %96 to i64
  br i1 %97, label %99, label %102

99:                                               ; preds = %94
  store i32 0, i32* %95, align 4
  %100 = getelementptr inbounds i32, i32* %95, i64 1
  %101 = ptrtoint i32* %100 to i64
  store i64 %101, i64* %76, align 8
  br label %247

102:                                              ; preds = %94
  %103 = ptrtoint i32* %95 to i64
  %104 = load i64, i64* %77, align 8
  %105 = sub i64 %103, %104
  %106 = ashr exact i64 %105, 2
  %107 = add nsw i64 %106, 1
  %108 = icmp ugt i64 %107, 4611686018427387903
  br i1 %108, label %109, label %111

109:                                              ; preds = %102
  %110 = bitcast %"class.std::__1::vector.36"* %73 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %110) #13
  unreachable

111:                                              ; preds = %102
  %112 = sub i64 %98, %104
  %113 = ashr exact i64 %112, 2
  %114 = icmp ult i64 %113, 2305843009213693951
  br i1 %114, label %115, label %123

115:                                              ; preds = %111
  %116 = ashr exact i64 %112, 1
  %117 = icmp ult i64 %116, %107
  %118 = select i1 %117, i64 %107, i64 %116
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %128, label %120

120:                                              ; preds = %115
  %121 = icmp ugt i64 %118, 4611686018427387903
  br i1 %121, label %122, label %123

122:                                              ; preds = %120
  call void @abort() #13
  unreachable

123:                                              ; preds = %120, %111
  %124 = phi i64 [ %118, %120 ], [ 4611686018427387903, %111 ]
  %125 = shl i64 %124, 2
  %126 = call i8* @_Znwm(i64 %125) #11
  %127 = bitcast i8* %126 to i32*
  br label %128

128:                                              ; preds = %123, %115
  %129 = phi i64 [ %124, %123 ], [ 0, %115 ]
  %130 = phi i8* [ %126, %123 ], [ null, %115 ]
  %131 = phi i32* [ %127, %123 ], [ null, %115 ]
  %132 = getelementptr inbounds i32, i32* %131, i64 %106
  %133 = getelementptr inbounds i32, i32* %131, i64 %129
  %134 = ptrtoint i32* %133 to i64
  store i32 0, i32* %132, align 4
  %135 = getelementptr inbounds i32, i32* %132, i64 1
  %136 = ptrtoint i32* %135 to i64
  %137 = ptrtoint i32* %131 to i64
  %138 = icmp sgt i64 %105, 0
  br i1 %138, label %139, label %141

139:                                              ; preds = %128
  %140 = inttoptr i64 %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %130, i8* align 4 %140, i64 %105, i1 false) #12
  br label %141

141:                                              ; preds = %139, %128
  store i64 %137, i64* %77, align 8
  store i64 %136, i64* %76, align 8
  store i64 %134, i64* %78, align 8
  %142 = icmp eq i64 %104, 0
  br i1 %142, label %247, label %143

143:                                              ; preds = %141
  %144 = inttoptr i64 %104 to i8*
  call void @_ZdlPv(i8* %144) #11
  br label %247

145:                                              ; preds = %91
  %146 = load i32*, i32** %74, align 8
  %147 = load i32*, i32** %75, align 8
  %148 = icmp ult i32* %146, %147
  %149 = ptrtoint i32* %147 to i64
  br i1 %148, label %150, label %153

150:                                              ; preds = %145
  store i32 1, i32* %146, align 4
  %151 = getelementptr inbounds i32, i32* %146, i64 1
  %152 = ptrtoint i32* %151 to i64
  store i64 %152, i64* %76, align 8
  br label %247

153:                                              ; preds = %145
  %154 = ptrtoint i32* %146 to i64
  %155 = load i64, i64* %77, align 8
  %156 = sub i64 %154, %155
  %157 = ashr exact i64 %156, 2
  %158 = add nsw i64 %157, 1
  %159 = icmp ugt i64 %158, 4611686018427387903
  br i1 %159, label %160, label %162

160:                                              ; preds = %153
  %161 = bitcast %"class.std::__1::vector.36"* %73 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %161) #13
  unreachable

162:                                              ; preds = %153
  %163 = sub i64 %149, %155
  %164 = ashr exact i64 %163, 2
  %165 = icmp ult i64 %164, 2305843009213693951
  br i1 %165, label %166, label %174

166:                                              ; preds = %162
  %167 = ashr exact i64 %163, 1
  %168 = icmp ult i64 %167, %158
  %169 = select i1 %168, i64 %158, i64 %167
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %179, label %171

171:                                              ; preds = %166
  %172 = icmp ugt i64 %169, 4611686018427387903
  br i1 %172, label %173, label %174

173:                                              ; preds = %171
  call void @abort() #13
  unreachable

174:                                              ; preds = %171, %162
  %175 = phi i64 [ %169, %171 ], [ 4611686018427387903, %162 ]
  %176 = shl i64 %175, 2
  %177 = call i8* @_Znwm(i64 %176) #11
  %178 = bitcast i8* %177 to i32*
  br label %179

179:                                              ; preds = %174, %166
  %180 = phi i64 [ %175, %174 ], [ 0, %166 ]
  %181 = phi i8* [ %177, %174 ], [ null, %166 ]
  %182 = phi i32* [ %178, %174 ], [ null, %166 ]
  %183 = getelementptr inbounds i32, i32* %182, i64 %157
  %184 = getelementptr inbounds i32, i32* %182, i64 %180
  %185 = ptrtoint i32* %184 to i64
  store i32 1, i32* %183, align 4
  %186 = getelementptr inbounds i32, i32* %183, i64 1
  %187 = ptrtoint i32* %186 to i64
  %188 = ptrtoint i32* %182 to i64
  %189 = icmp sgt i64 %156, 0
  br i1 %189, label %190, label %192

190:                                              ; preds = %179
  %191 = inttoptr i64 %155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %181, i8* align 4 %191, i64 %156, i1 false) #12
  br label %192

192:                                              ; preds = %190, %179
  store i64 %188, i64* %77, align 8
  store i64 %187, i64* %76, align 8
  store i64 %185, i64* %78, align 8
  %193 = icmp eq i64 %155, 0
  br i1 %193, label %247, label %194

194:                                              ; preds = %192
  %195 = inttoptr i64 %155 to i8*
  call void @_ZdlPv(i8* %195) #11
  br label %247

196:                                              ; preds = %91
  %197 = load i32*, i32** %74, align 8
  %198 = load i32*, i32** %75, align 8
  %199 = icmp ult i32* %197, %198
  %200 = ptrtoint i32* %198 to i64
  br i1 %199, label %201, label %204

201:                                              ; preds = %196
  store i32 2, i32* %197, align 4
  %202 = getelementptr inbounds i32, i32* %197, i64 1
  %203 = ptrtoint i32* %202 to i64
  store i64 %203, i64* %76, align 8
  br label %247

204:                                              ; preds = %196
  %205 = ptrtoint i32* %197 to i64
  %206 = load i64, i64* %77, align 8
  %207 = sub i64 %205, %206
  %208 = ashr exact i64 %207, 2
  %209 = add nsw i64 %208, 1
  %210 = icmp ugt i64 %209, 4611686018427387903
  br i1 %210, label %211, label %213

211:                                              ; preds = %204
  %212 = bitcast %"class.std::__1::vector.36"* %73 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %212) #13
  unreachable

213:                                              ; preds = %204
  %214 = sub i64 %200, %206
  %215 = ashr exact i64 %214, 2
  %216 = icmp ult i64 %215, 2305843009213693951
  br i1 %216, label %217, label %225

217:                                              ; preds = %213
  %218 = ashr exact i64 %214, 1
  %219 = icmp ult i64 %218, %209
  %220 = select i1 %219, i64 %209, i64 %218
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %230, label %222

222:                                              ; preds = %217
  %223 = icmp ugt i64 %220, 4611686018427387903
  br i1 %223, label %224, label %225

224:                                              ; preds = %222
  call void @abort() #13
  unreachable

225:                                              ; preds = %222, %213
  %226 = phi i64 [ %220, %222 ], [ 4611686018427387903, %213 ]
  %227 = shl i64 %226, 2
  %228 = call i8* @_Znwm(i64 %227) #11
  %229 = bitcast i8* %228 to i32*
  br label %230

230:                                              ; preds = %225, %217
  %231 = phi i64 [ %226, %225 ], [ 0, %217 ]
  %232 = phi i8* [ %228, %225 ], [ null, %217 ]
  %233 = phi i32* [ %229, %225 ], [ null, %217 ]
  %234 = getelementptr inbounds i32, i32* %233, i64 %208
  %235 = getelementptr inbounds i32, i32* %233, i64 %231
  %236 = ptrtoint i32* %235 to i64
  store i32 2, i32* %234, align 4
  %237 = getelementptr inbounds i32, i32* %234, i64 1
  %238 = ptrtoint i32* %237 to i64
  %239 = ptrtoint i32* %233 to i64
  %240 = icmp sgt i64 %207, 0
  br i1 %240, label %241, label %243

241:                                              ; preds = %230
  %242 = inttoptr i64 %206 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %232, i8* align 4 %242, i64 %207, i1 false) #12
  br label %243

243:                                              ; preds = %241, %230
  store i64 %239, i64* %77, align 8
  store i64 %238, i64* %76, align 8
  store i64 %236, i64* %78, align 8
  %244 = icmp eq i64 %206, 0
  br i1 %244, label %247, label %245

245:                                              ; preds = %243
  %246 = inttoptr i64 %206 to i8*
  call void @_ZdlPv(i8* %246) #11
  br label %247

247:                                              ; preds = %245, %243, %201, %194, %192, %150, %143, %141, %99, %91
  %248 = getelementptr inbounds i32, i32* %92, i64 1
  %249 = icmp eq i32* %248, %70
  br i1 %249, label %79, label %91

250:                                              ; preds = %58, %90
  %251 = getelementptr inbounds %"class.blink::ManifestImageResource", %"class.blink::ManifestImageResource"* %1, i64 0, i32 3, i32 0, i32 0
  %252 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %251, align 8
  %253 = icmp eq %"class.WTF::StringImpl"* %252, null
  br i1 %253, label %344, label %254

254:                                              ; preds = %250
  %255 = bitcast %"class.WTF::Vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %255) #12
  %256 = getelementptr inbounds %"class.blink::ManifestImageResource", %"class.blink::ManifestImageResource"* %1, i64 0, i32 3
  call fastcc void @_ZN4mojo12_GLOBAL__N_110ParseSizesERKN3WTF6StringE(%"class.WTF::Vector"* nonnull sret %9, %"class.WTF::String"* dereferenceable(8) %256)
  %257 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 0
  %258 = load %"class.gfx::Size"*, %"class.gfx::Size"** %257, align 8
  %259 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 2
  %260 = load i32, i32* %259, align 4
  %261 = zext i32 %260 to i64
  %262 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %258, i64 %261
  %263 = icmp eq i32 %260, 0
  br i1 %263, label %273, label %264

264:                                              ; preds = %254
  %265 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %0, i64 0, i32 2
  %266 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %0, i64 0, i32 2, i32 0, i32 1
  %267 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %268 = bitcast %"class.gfx::Size"** %266 to i64*
  %269 = bitcast %"class.std::__1::vector"* %265 to i64*
  %270 = bitcast %"class.gfx::Size"** %267 to i64*
  br label %283

271:                                              ; preds = %341
  %272 = load %"class.gfx::Size"*, %"class.gfx::Size"** %257, align 8
  br label %273

273:                                              ; preds = %271, %254
  %274 = phi %"class.gfx::Size"* [ %272, %271 ], [ %258, %254 ]
  %275 = icmp eq %"class.gfx::Size"* %274, null
  %276 = bitcast %"class.gfx::Size"* %274 to i8*
  br i1 %275, label %282, label %277, !prof !5

277:                                              ; preds = %273
  %278 = load i32, i32* %259, align 4
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %281, label %280, !prof !6

280:                                              ; preds = %277
  store i32 0, i32* %259, align 4
  br label %281

281:                                              ; preds = %280, %277
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %276) #12
  store %"class.gfx::Size"* null, %"class.gfx::Size"** %257, align 8
  br label %282

282:                                              ; preds = %273, %281
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %255) #12
  br label %344

283:                                              ; preds = %264, %341
  %284 = phi %"class.gfx::Size"* [ %258, %264 ], [ %342, %341 ]
  %285 = load %"class.gfx::Size"*, %"class.gfx::Size"** %266, align 8
  %286 = load %"class.gfx::Size"*, %"class.gfx::Size"** %267, align 8
  %287 = icmp ult %"class.gfx::Size"* %285, %286
  %288 = ptrtoint %"class.gfx::Size"* %286 to i64
  br i1 %287, label %289, label %295

289:                                              ; preds = %283
  %290 = bitcast %"class.gfx::Size"* %284 to i64*
  %291 = bitcast %"class.gfx::Size"* %285 to i64*
  %292 = load i64, i64* %290, align 4
  store i64 %292, i64* %291, align 4
  %293 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %285, i64 1
  %294 = ptrtoint %"class.gfx::Size"* %293 to i64
  store i64 %294, i64* %268, align 8
  br label %341

295:                                              ; preds = %283
  %296 = ptrtoint %"class.gfx::Size"* %285 to i64
  %297 = load i64, i64* %269, align 8
  %298 = sub i64 %296, %297
  %299 = ashr exact i64 %298, 3
  %300 = add nsw i64 %299, 1
  %301 = icmp ugt i64 %300, 2305843009213693951
  br i1 %301, label %302, label %304

302:                                              ; preds = %295
  %303 = bitcast %"class.std::__1::vector"* %265 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %303) #13
  unreachable

304:                                              ; preds = %295
  %305 = sub i64 %288, %297
  %306 = ashr exact i64 %305, 3
  %307 = icmp ult i64 %306, 1152921504606846975
  br i1 %307, label %308, label %316

308:                                              ; preds = %304
  %309 = ashr exact i64 %305, 2
  %310 = icmp ult i64 %309, %300
  %311 = select i1 %310, i64 %300, i64 %309
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %321, label %313

313:                                              ; preds = %308
  %314 = icmp ugt i64 %311, 2305843009213693951
  br i1 %314, label %315, label %316

315:                                              ; preds = %313
  call void @abort() #13
  unreachable

316:                                              ; preds = %313, %304
  %317 = phi i64 [ %311, %313 ], [ 2305843009213693951, %304 ]
  %318 = shl i64 %317, 3
  %319 = call i8* @_Znwm(i64 %318) #11
  %320 = bitcast i8* %319 to %"class.gfx::Size"*
  br label %321

321:                                              ; preds = %316, %308
  %322 = phi i64 [ %317, %316 ], [ 0, %308 ]
  %323 = phi i8* [ %319, %316 ], [ null, %308 ]
  %324 = phi %"class.gfx::Size"* [ %320, %316 ], [ null, %308 ]
  %325 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %324, i64 %299
  %326 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %324, i64 %322
  %327 = ptrtoint %"class.gfx::Size"* %326 to i64
  %328 = bitcast %"class.gfx::Size"* %284 to i64*
  %329 = bitcast %"class.gfx::Size"* %325 to i64*
  %330 = load i64, i64* %328, align 4
  store i64 %330, i64* %329, align 4
  %331 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %325, i64 1
  %332 = ptrtoint %"class.gfx::Size"* %331 to i64
  %333 = ptrtoint %"class.gfx::Size"* %324 to i64
  %334 = icmp sgt i64 %298, 0
  br i1 %334, label %335, label %337

335:                                              ; preds = %321
  %336 = inttoptr i64 %297 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %323, i8* align 4 %336, i64 %298, i1 false) #12
  br label %337

337:                                              ; preds = %335, %321
  store i64 %333, i64* %269, align 8
  store i64 %332, i64* %268, align 8
  store i64 %327, i64* %270, align 8
  %338 = icmp eq i64 %297, 0
  br i1 %338, label %341, label %339

339:                                              ; preds = %337
  %340 = inttoptr i64 %297 to i8*
  call void @_ZdlPv(i8* %340) #11
  br label %341

341:                                              ; preds = %289, %337, %339
  %342 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %284, i64 1
  %343 = icmp eq %"class.gfx::Size"* %342, %262
  br i1 %343, label %271, label %283

344:                                              ; preds = %250, %282
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink8Manifest13ImageResourceC1Ev(%"struct.blink::Manifest::ImageResource"*) unnamed_addr #2

declare void @_ZNK5blink4KURLcv4GURLEv(%class.GURL* sret, %"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

declare void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #3

declare void @_ZN5blink18WebIconSizesParser14ParseIconSizesERKNS_9WebStringE(%"class.blink::WebVector"* sret, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink9WebString9FromASCIIERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.blink::WebString"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIiiEES3_NS_17IdentityExtractorENS_8PairHashIiiEENS_14PairHashTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEES9_EESA_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_SA_SB_EERKS3_S3_EENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable"*, %"struct.std::__1::pair"* dereferenceable(8), %"struct.std::__1::pair"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = icmp eq %"struct.std::__1::pair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairIiiEES3_NS_17IdentityExtractorENS_8PairHashIiiEENS_14PairHashTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEES9_EESA_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable"* %0, %"struct.std::__1::pair"* null)
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.std::__1::pair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %17 to i64
  %21 = mul i64 %20, 5146158508761418231
  %22 = zext i32 %19 to i64
  %23 = mul i64 %22, -682818954288075998
  %24 = add i64 %23, %21
  %25 = lshr i64 %24, 32
  %26 = trunc i64 %25 to i32
  %27 = and i32 %14, %26
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %28
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 2147483647
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %28, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 2147483647
  %36 = and i1 %32, %35
  br i1 %36, label %87, label %37

37:                                               ; preds = %10
  %38 = xor i32 %26, -1
  %39 = lshr i64 %24, 55
  %40 = trunc i64 %39 to i32
  %41 = add i32 %40, %38
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %37, %62
  %53 = phi i32 [ %34, %37 ], [ %74, %62 ]
  %54 = phi i32 [ %31, %37 ], [ %71, %62 ]
  %55 = phi %"struct.std::__1::pair"* [ %29, %37 ], [ %69, %62 ]
  %56 = phi %"struct.std::__1::pair"* [ null, %37 ], [ %64, %62 ]
  %57 = phi i64 [ %28, %37 ], [ %68, %62 ]
  %58 = phi i64 [ 0, %37 ], [ %66, %62 ]
  %59 = icmp eq i32 %54, %17
  %60 = icmp eq i32 %53, %19
  %61 = and i1 %59, %60
  br i1 %61, label %106, label %62

62:                                               ; preds = %52
  %63 = icmp eq i32 %54, 2147483646
  %64 = select i1 %63, %"struct.std::__1::pair"* %55, %"struct.std::__1::pair"* %56
  %65 = icmp eq i64 %58, 0
  %66 = select i1 %65, i64 %51, i64 %58
  %67 = add i64 %66, %57
  %68 = and i64 %67, %15
  %69 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %68
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 2147483647
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %68, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 2147483647
  %76 = and i1 %72, %75
  br i1 %76, label %77, label %52

77:                                               ; preds = %62
  %78 = icmp eq %"struct.std::__1::pair"* %64, null
  br i1 %78, label %87, label %79

79:                                               ; preds = %77
  %80 = bitcast %"struct.std::__1::pair"* %64 to i64*
  store i64 9223372034707292159, i64* %80, align 4
  %81 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  br label %87

87:                                               ; preds = %10, %77, %79
  %88 = phi %"struct.std::__1::pair"* [ %64, %79 ], [ %69, %77 ], [ %29, %10 ]
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 0, i32 0
  store i32 %90, i32* %91, align 4
  %92 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 0, i32 1
  store i32 %93, i32* %94, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = add i32 %96, 1
  store i32 %97, i32* %95, align 4
  %98 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %99 = load i32, i32* %98, align 8
  %100 = add i32 %99, %97
  %101 = shl i32 %100, 1
  %102 = load i32, i32* %12, align 8
  %103 = icmp ult i32 %101, %102
  br i1 %103, label %106, label %104

104:                                              ; preds = %87
  %105 = tail call %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairIiiEES3_NS_17IdentityExtractorENS_8PairHashIiiEENS_14PairHashTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEES9_EESA_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable"* %0, %"struct.std::__1::pair"* %88)
  br label %106

106:                                              ; preds = %52, %87, %104
  %107 = phi i8 [ 1, %87 ], [ 1, %104 ], [ 0, %52 ]
  %108 = phi %"struct.std::__1::pair"* [ %88, %87 ], [ %105, %104 ], [ %55, %52 ]
  %109 = insertvalue { %"struct.std::__1::pair"*, i8 } undef, %"struct.std::__1::pair"* %108, 0
  %110 = insertvalue { %"struct.std::__1::pair"*, i8 } %109, i8 %107, 1
  ret { %"struct.std::__1::pair"*, i8 } %110
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairIiiEES3_NS_17IdentityExtractorENS_8PairHashIiiEENS_14PairHashTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEES9_EESA_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable"*, %"struct.std::__1::pair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIiiEEEEPKcv, i64 0, i64 0)) #12
  %36 = bitcast i8* %35 to %"struct.std::__1::pair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %117, label %38

38:                                               ; preds = %31
  %39 = icmp ult i32 %32, 4
  br i1 %39, label %109, label %40

40:                                               ; preds = %38
  %41 = and i64 %33, 4294967292
  %42 = add nsw i64 %41, -4
  %43 = lshr exact i64 %42, 2
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 7
  %46 = icmp ult i64 %42, 28
  br i1 %46, label %94, label %47

47:                                               ; preds = %40
  %48 = sub nsw i64 %44, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 0, %47 ], [ %91, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %92, %49 ]
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %50
  %53 = bitcast %"struct.std::__1::pair"* %52 to <2 x i64>*
  store <2 x i64> <i64 9223372034707292159, i64 9223372034707292159>, <2 x i64>* %53, align 4
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %52, i64 2
  %55 = bitcast %"struct.std::__1::pair"* %54 to <2 x i64>*
  store <2 x i64> <i64 9223372034707292159, i64 9223372034707292159>, <2 x i64>* %55, align 4
  %56 = or i64 %50, 4
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %56
  %58 = bitcast %"struct.std::__1::pair"* %57 to <2 x i64>*
  store <2 x i64> <i64 9223372034707292159, i64 9223372034707292159>, <2 x i64>* %58, align 4
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %57, i64 2
  %60 = bitcast %"struct.std::__1::pair"* %59 to <2 x i64>*
  store <2 x i64> <i64 9223372034707292159, i64 9223372034707292159>, <2 x i64>* %60, align 4
  %61 = or i64 %50, 8
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %61
  %63 = bitcast %"struct.std::__1::pair"* %62 to <2 x i64>*
  store <2 x i64> <i64 9223372034707292159, i64 9223372034707292159>, <2 x i64>* %63, align 4
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %62, i64 2
  %65 = bitcast %"struct.std::__1::pair"* %64 to <2 x i64>*
  store <2 x i64> <i64 9223372034707292159, i64 9223372034707292159>, <2 x i64>* %65, align 4
  %66 = or i64 %50, 12
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %66
  %68 = bitcast %"struct.std::__1::pair"* %67 to <2 x i64>*
  store <2 x i64> <i64 9223372034707292159, i64 9223372034707292159>, <2 x i64>* %68, align 4
  %69 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %67, i64 2
  %70 = bitcast %"struct.std::__1::pair"* %69 to <2 x i64>*
  store <2 x i64> <i64 9223372034707292159, i64 9223372034707292159>, <2 x i64>* %70, align 4
  %71 = or i64 %50, 16
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %71
  %73 = bitcast %"struct.std::__1::pair"* %72 to <2 x i64>*
  store <2 x i64> <i64 9223372034707292159, i64 9223372034707292159>, <2 x i64>* %73, align 4
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 2
  %75 = bitcast %"struct.std::__1::pair"* %74 to <2 x i64>*
  store <2 x i64> <i64 9223372034707292159, i64 9223372034707292159>, <2 x i64>* %75, align 4
  %76 = or i64 %50, 20
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %76
  %78 = bitcast %"struct.std::__1::pair"* %77 to <2 x i64>*
  store <2 x i64> <i64 9223372034707292159, i64 9223372034707292159>, <2 x i64>* %78, align 4
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %77, i64 2
  %80 = bitcast %"struct.std::__1::pair"* %79 to <2 x i64>*
  store <2 x i64> <i64 9223372034707292159, i64 9223372034707292159>, <2 x i64>* %80, align 4
  %81 = or i64 %50, 24
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %81
  %83 = bitcast %"struct.std::__1::pair"* %82 to <2 x i64>*
  store <2 x i64> <i64 9223372034707292159, i64 9223372034707292159>, <2 x i64>* %83, align 4
  %84 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %82, i64 2
  %85 = bitcast %"struct.std::__1::pair"* %84 to <2 x i64>*
  store <2 x i64> <i64 9223372034707292159, i64 9223372034707292159>, <2 x i64>* %85, align 4
  %86 = or i64 %50, 28
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %86
  %88 = bitcast %"struct.std::__1::pair"* %87 to <2 x i64>*
  store <2 x i64> <i64 9223372034707292159, i64 9223372034707292159>, <2 x i64>* %88, align 4
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 2
  %90 = bitcast %"struct.std::__1::pair"* %89 to <2 x i64>*
  store <2 x i64> <i64 9223372034707292159, i64 9223372034707292159>, <2 x i64>* %90, align 4
  %91 = add i64 %50, 32
  %92 = add i64 %51, -8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %49, !llvm.loop !10

94:                                               ; preds = %49, %40
  %95 = phi i64 [ 0, %40 ], [ %91, %49 ]
  %96 = icmp eq i64 %45, 0
  br i1 %96, label %107, label %97

97:                                               ; preds = %94, %97
  %98 = phi i64 [ %104, %97 ], [ %95, %94 ]
  %99 = phi i64 [ %105, %97 ], [ %45, %94 ]
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %98
  %101 = bitcast %"struct.std::__1::pair"* %100 to <2 x i64>*
  store <2 x i64> <i64 9223372034707292159, i64 9223372034707292159>, <2 x i64>* %101, align 4
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %100, i64 2
  %103 = bitcast %"struct.std::__1::pair"* %102 to <2 x i64>*
  store <2 x i64> <i64 9223372034707292159, i64 9223372034707292159>, <2 x i64>* %103, align 4
  %104 = add i64 %98, 4
  %105 = add i64 %99, -1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %97, !llvm.loop !12

107:                                              ; preds = %97, %94
  %108 = icmp eq i64 %41, %33
  br i1 %108, label %117, label %109

109:                                              ; preds = %107, %38
  %110 = phi i64 [ 0, %38 ], [ %41, %107 ]
  br label %111

111:                                              ; preds = %109, %111
  %112 = phi i64 [ %115, %111 ], [ %110, %109 ]
  %113 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %112
  %114 = bitcast %"struct.std::__1::pair"* %113 to i64*
  store i64 9223372034707292159, i64* %114, align 4
  %115 = add nuw nsw i64 %112, 1
  %116 = icmp eq i64 %115, %33
  br i1 %116, label %117, label %111, !llvm.loop !14

117:                                              ; preds = %111, %107, %31
  %118 = call %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairIiiEES3_NS_17IdentityExtractorENS_8PairHashIiiEENS_14PairHashTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEES9_EESA_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable"* %0, %"struct.std::__1::pair"* %36, i32 %32, %"struct.std::__1::pair"* %1) #12
  ret %"struct.std::__1::pair"* %118
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairIiiEES3_NS_17IdentityExtractorENS_8PairHashIiiEENS_14PairHashTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEES9_EESA_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable"*, %"struct.std::__1::pair"*, i32, %"struct.std::__1::pair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %17 = ptrtoint %"struct.std::__1::pair"* %16 to i64
  br label %31

18:                                               ; preds = %129
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %130, %18 ]
  %23 = phi %"struct.std::__1::pair"* [ null, %10 ], [ %133, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #12
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"struct.std::__1::pair"* %23

31:                                               ; preds = %13, %129
  %32 = phi i64 [ %17, %13 ], [ %130, %129 ]
  %33 = phi i32 [ %7, %13 ], [ %131, %129 ]
  %34 = phi %"struct.std::__1::pair"* [ %16, %13 ], [ %132, %129 ]
  %35 = phi %"struct.std::__1::pair"* [ null, %13 ], [ %133, %129 ]
  %36 = phi i32 [ 0, %13 ], [ %134, %129 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 %37
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 2147483647
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 %37, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 2147483647
  %45 = and i1 %41, %44
  %46 = icmp eq i32 %40, 2147483646
  %47 = or i1 %46, %45
  br i1 %47, label %129, label %48

48:                                               ; preds = %31
  %49 = zext i32 %40 to i64
  %50 = mul i64 %49, 5146158508761418231
  %51 = zext i32 %43 to i64
  %52 = mul i64 %51, -682818954288075998
  %53 = add i64 %52, %50
  %54 = lshr i64 %53, 32
  %55 = trunc i64 %54 to i32
  %56 = and i32 %14, %55
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %57
  %59 = ptrtoint %"struct.std::__1::pair"* %58 to i64
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %58, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 2147483647
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %57, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 2147483647
  %66 = and i1 %62, %65
  br i1 %66, label %85, label %67

67:                                               ; preds = %48
  %68 = xor i32 %55, -1
  %69 = lshr i64 %53, 55
  %70 = trunc i64 %69 to i32
  %71 = add i32 %70, %68
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %101
  %83 = ptrtoint %"struct.std::__1::pair"* %108 to i64
  %84 = inttoptr i64 %103 to %"struct.std::__1::pair"*
  br label %85

85:                                               ; preds = %82, %48
  %86 = phi i64 [ %83, %82 ], [ %59, %48 ]
  %87 = phi %"struct.std::__1::pair"* [ %84, %82 ], [ null, %48 ]
  %88 = icmp eq %"struct.std::__1::pair"* %87, null
  %89 = ptrtoint %"struct.std::__1::pair"* %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %117

91:                                               ; preds = %101, %67
  %92 = phi i64 [ 0, %67 ], [ %103, %101 ]
  %93 = phi i32 [ %64, %67 ], [ %114, %101 ]
  %94 = phi i32 [ %61, %67 ], [ %111, %101 ]
  %95 = phi i64 [ %59, %67 ], [ %109, %101 ]
  %96 = phi i64 [ %57, %67 ], [ %107, %101 ]
  %97 = phi i64 [ 0, %67 ], [ %105, %101 ]
  %98 = icmp eq i32 %94, %40
  %99 = icmp eq i32 %93, %43
  %100 = and i1 %99, %98
  br i1 %100, label %117, label %101

101:                                              ; preds = %91
  %102 = icmp eq i32 %94, 2147483646
  %103 = select i1 %102, i64 %95, i64 %92
  %104 = icmp eq i64 %97, 0
  %105 = select i1 %104, i64 %81, i64 %97
  %106 = add i64 %105, %96
  %107 = and i64 %106, %15
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %107
  %109 = ptrtoint %"struct.std::__1::pair"* %108 to i64
  %110 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %108, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, 2147483647
  %113 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %107, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %114, 2147483647
  %116 = and i1 %112, %115
  br i1 %116, label %82, label %91

117:                                              ; preds = %91, %85
  %118 = phi i64 [ %90, %85 ], [ %95, %91 ]
  %119 = inttoptr i64 %118 to %"struct.std::__1::pair"*
  %120 = bitcast %"struct.std::__1::pair"* %38 to i64*
  %121 = inttoptr i64 %118 to i64*
  %122 = load i64, i64* %120, align 4
  store i64 %122, i64* %121, align 4
  %123 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %124 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 %37
  %125 = icmp eq %"struct.std::__1::pair"* %124, %3
  %126 = select i1 %125, %"struct.std::__1::pair"* %119, %"struct.std::__1::pair"* %35
  %127 = load i32, i32* %6, align 8
  %128 = ptrtoint %"struct.std::__1::pair"* %123 to i64
  br label %129

129:                                              ; preds = %31, %117
  %130 = phi i64 [ %32, %31 ], [ %128, %117 ]
  %131 = phi i32 [ %33, %31 ], [ %127, %117 ]
  %132 = phi %"struct.std::__1::pair"* [ %34, %31 ], [ %123, %117 ]
  %133 = phi %"struct.std::__1::pair"* [ %35, %31 ], [ %126, %117 ]
  %134 = add i32 %36, 1
  %135 = icmp eq i32 %134, %131
  br i1 %135, label %18, label %31
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN3gfx4SizeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector"*, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.gfx::Size"*, %"class.gfx::Size"** %6, align 8
  %8 = icmp ugt %"class.gfx::Size"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %7, i64 %10
  %12 = icmp ugt %"class.gfx::Size"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !5

24:                                               ; preds = %13
  %25 = icmp eq %"class.gfx::Size"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx4SizeEEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN3gfx4SizeEEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.gfx::Size"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.gfx::Size"*, %"class.gfx::Size"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.gfx::Size"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.gfx::Size"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !5

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.gfx::Size"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.gfx::Size"* %1 to i64
  %56 = ptrtoint %"class.gfx::Size"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !5

69:                                               ; preds = %54
  %70 = icmp eq %"class.gfx::Size"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx4SizeEEEmm(i64 %71) #12
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN3gfx4SizeEEEPKcv, i64 0, i64 0)) #12
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.gfx::Size"*, %"class.gfx::Size"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.gfx::Size"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.gfx::Size"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !5

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #12
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #12
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.gfx::Size"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.gfx::Size"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.gfx::Size"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.gfx::Size"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %100, i64 %103
  %105 = bitcast %"class.gfx::Size"* %101 to i64*
  %106 = bitcast %"class.gfx::Size"* %104 to i64*
  %107 = load i64, i64* %105, align 4
  store i64 %107, i64* %106, align 4
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx4SizeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"*) local_unnamed_addr #2

declare void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"*, i16 zeroext, i1 zeroext, %"class.WTF::Vector.58"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.55"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.55", %"class.WTF::HashTable.55"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10, i64 0, i64 0)) #12
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 3
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #12
  %30 = bitcast i8* %29 to %"class.WTF::String"*
  %31 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.55"* %0, %"class.WTF::String"* %30, i32 %17, %"class.WTF::String"* null) #12
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.55"*, %"class.WTF::String"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.55", align 8
  %6 = bitcast %"class.WTF::HashTable.55"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::HashTable.55", %"class.WTF::HashTable.55"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.55", %"class.WTF::HashTable.55"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.55", %"class.WTF::HashTable.55"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.55", %"class.WTF::HashTable.55"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.55"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.WTF::String"* %1, %"class.WTF::String"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.55", %"class.WTF::HashTable.55"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.55", %"class.WTF::HashTable.55"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.WTF::String"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.55"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.55"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %23 = ptrtoint %"class.WTF::String"* %22 to i64
  br label %71

24:                                               ; preds = %110
  %25 = bitcast %"class.WTF::HashTable.55"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.55"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %111, %24 ]
  %33 = phi %"class.WTF::String"* [ null, %16 ], [ %114, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %112, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"class.WTF::String"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %42
  %44 = bitcast %"class.WTF::String"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #12
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #12
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.55", %"class.WTF::HashTable.55"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret %"class.WTF::String"* %33

71:                                               ; preds = %21, %110
  %72 = phi i64 [ %111, %110 ], [ %23, %21 ]
  %73 = phi i32 [ %112, %110 ], [ %13, %21 ]
  %74 = phi %"class.WTF::String"* [ %113, %110 ], [ %22, %21 ]
  %75 = phi %"class.WTF::String"* [ %114, %110 ], [ null, %21 ]
  %76 = phi i32 [ %115, %110 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 %77
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = bitcast %"class.WTF::String"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %110
    i64 0, label %110
  ]

82:                                               ; preds = %71
  %83 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.55"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %78) #12
  %84 = extractvalue { %"class.WTF::String"*, i8 } %83, 0
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #12
  br label %101

101:                                              ; preds = %82, %97, %100
  %102 = load i64, i64* %80, align 8
  %103 = bitcast %"class.WTF::String"* %84 to i64*
  store i64 %102, i64* %103, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 %77
  %106 = icmp eq %"class.WTF::String"* %105, %3
  %107 = select i1 %106, %"class.WTF::String"* %84, %"class.WTF::String"* %75
  %108 = load i32, i32* %12, align 8
  %109 = ptrtoint %"class.WTF::String"* %104 to i64
  br label %110

110:                                              ; preds = %71, %71, %101
  %111 = phi i64 [ %72, %71 ], [ %109, %101 ], [ %72, %71 ]
  %112 = phi i32 [ %73, %71 ], [ %108, %101 ], [ %73, %71 ]
  %113 = phi %"class.WTF::String"* [ %74, %71 ], [ %104, %101 ], [ %74, %71 ]
  %114 = phi %"class.WTF::String"* [ %75, %71 ], [ %107, %101 ], [ %75, %71 ]
  %115 = add i32 %76, 1
  %116 = icmp eq i32 %115, %112
  br i1 %116, label %24, label %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.55"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.55", %"class.WTF::HashTable.55"* %0, i64 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.55", %"class.WTF::HashTable.55"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #12
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %20
  %22 = ptrtoint %"class.WTF::String"* %21 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"class.WTF::String"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"class.WTF::String"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"class.WTF::String"* %44, null
  %46 = ptrtoint %"class.WTF::String"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"class.WTF::String"* [ null, %26 ], [ %62, %61 ]
  %50 = phi %"class.WTF::StringImpl"* [ %24, %26 ], [ %70, %61 ]
  %51 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %52 = phi %"class.WTF::String"* [ %21, %26 ], [ %67, %61 ]
  %53 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %54 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %55 = bitcast %"class.WTF::String"* %52 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %61, label %58

58:                                               ; preds = %48
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %50, %"class.WTF::StringImpl"* %59) #12
  br i1 %60, label %72, label %61

61:                                               ; preds = %58, %48
  %62 = phi %"class.WTF::String"* [ %49, %58 ], [ %52, %48 ]
  %63 = icmp eq i64 %54, 0
  %64 = select i1 %63, i64 %39, i64 %54
  %65 = add i64 %64, %53
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %66
  %68 = ptrtoint %"class.WTF::String"* %67 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %58, %42
  %73 = phi i64 [ %47, %42 ], [ %51, %58 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %58 ]
  %75 = inttoptr i64 %73 to %"class.WTF::String"*
  %76 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %75, 0
  %77 = insertvalue { %"class.WTF::String"*, i8 } %76, i8 %74, 1
  ret { %"class.WTF::String"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5mojom29ManifestImageResource_PurposeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.55"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.55", %"class.WTF::HashTable.55"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.55"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.55", %"class.WTF::HashTable.55"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #12
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #12
  br i1 %57, label %131, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.55", %"class.WTF::HashTable.55"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"class.WTF::String"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #12
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !6

97:                                               ; preds = %88
  tail call void @llvm.trap() #12
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83, %78
  %101 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %102 = bitcast %"class.WTF::String"* %79 to i64*
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #12
  br label %119

119:                                              ; preds = %100, %115, %118
  %120 = getelementptr inbounds %"class.WTF::HashTable.55", %"class.WTF::HashTable.55"* %0, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 4
  %123 = getelementptr inbounds %"class.WTF::HashTable.55", %"class.WTF::HashTable.55"* %0, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %122
  %126 = shl i32 %125, 1
  %127 = load i32, i32* %12, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %131, label %129

129:                                              ; preds = %119
  %130 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.55"* %0, %"class.WTF::String"* %79)
  br label %131

131:                                              ; preds = %55, %119, %129
  %132 = phi i8 [ 1, %119 ], [ 1, %129 ], [ 0, %55 ]
  %133 = phi %"class.WTF::String"* [ %79, %119 ], [ %130, %129 ], [ %48, %55 ]
  %134 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %133, 0
  %135 = insertvalue { %"class.WTF::String"*, i8 } %134, i8 %132, 1
  ret { %"class.WTF::String"*, i8 } %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.55"*, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.55", %"class.WTF::HashTable.55"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.55", %"class.WTF::HashTable.55"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #12
  %36 = bitcast i8* %35 to %"class.WTF::String"*
  %37 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.55"* %0, %"class.WTF::String"* %36, i32 %32, %"class.WTF::String"* %1) #12
  ret %"class.WTF::String"* %37
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink5mojom29ManifestImageResource_PurposeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.5"*, i32* dereferenceable(4)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !5

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5mojom29ManifestImageResource_PurposeEEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5mojom29ManifestImageResource_PurposeEEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !5

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector.5"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !5

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5mojom29ManifestImageResource_PurposeEEEmm(i64 %71) #12
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5mojom29ManifestImageResource_PurposeEEEPKcv, i64 0, i64 0)) #12
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !5

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #12
  %87 = bitcast %"class.WTF::Vector.5"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #12
  %91 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink19IsSupportedMimeTypeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZN4base20Latin1OrUTF16ToUTF16EmPKhPKDs(%"class.std::__1::basic_string.22"* sret, i64, i8*, i16*) local_unnamed_addr #2

declare i64 @_ZNK5blink9WebString6lengthEv(%"class.blink::WebString"*) local_unnamed_addr #2

declare i8* @_ZNK5blink9WebString5Data8Ev(%"class.blink::WebString"*) local_unnamed_addr #2

declare i16* @_ZNK5blink9WebString6Data16Ev(%"class.blink::WebString"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN5blink5mojom5blink21ManifestImageResourceC1Ev(%"class.blink::mojom::blink::ManifestImageResource"*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink5mojom5blink21ManifestImageResource3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN5blink5mojom5blink21ManifestImageResource3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK5blink9WebString5Utf16Ev: argument 0"}
!9 = distinct !{!9, !"_ZNK5blink9WebString5Utf16Ev"}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !15, !11}
!15 = !{!"llvm.loop.unroll.runtime.disable"}
