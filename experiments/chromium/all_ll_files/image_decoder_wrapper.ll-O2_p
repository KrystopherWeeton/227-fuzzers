; ModuleID = '../../third_party/blink/renderer/platform/graphics/image_decoder_wrapper.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/image_decoder_wrapper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::ImageDecoderWrapper" = type <{ %"class.blink::ImageFrameGenerator"*, %"class.blink::SegmentReader"*, %struct.SkISize, i32, %"class.blink::ColorBehavior", i32, [4 x i8], i64, %struct.SkImageInfo, i8*, i64, i8, [3 x i8], i32, i8, [7 x i8] }>
%struct.SkISize = type { i32, i32 }
%"class.blink::ColorBehavior" = type { i32 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.11" }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i8 }
%"class.blink::ImageFrameGenerator" = type { %"class.WTF::ThreadSafeRefCounted", %struct.SkISize, %"class.blink::ColorBehavior", i8, %"class.WTF::Vector", %"class.WTF::Mutex", i8, i8, i64, %"class.WTF::Vector.1", %"class.WTF::HashMap", %"class.std::__1::unique_ptr" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %struct.SkISize*, i32, i32 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.WTF::Vector.1" = type { %"class.WTF::VectorBuffer.2" }
%"class.WTF::VectorBuffer.2" = type { %"class.WTF::VectorBufferBase.3" }
%"class.WTF::VectorBufferBase.3" = type { i8*, i32, i32 }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ImageDecoderFactory"* }
%"class.blink::ImageDecoderFactory" = type { i32 (...)** }
%"class.blink::SegmentReader" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted.9", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted.9" = type { %"class.base::RefCountedThreadSafe.10" }
%"class.base::RefCountedThreadSafe.10" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::ImageDecoder" = type { i32 (...)**, %class.scoped_refptr, %"class.WTF::Vector.16", i8, i32, %"class.blink::ColorBehavior", %"class.blink::ImageOrientation", %"class.blink::IntSize", i64, i8, %"class.std::__1::unique_ptr.23", i8, %"class.blink::IntSize", i8, i8, i8, %"class.std::__1::unique_ptr.29", %class.sk_sp, i8, %"class.std::__1::unique_ptr.42" }
%class.scoped_refptr = type { %"class.blink::SegmentReader"* }
%"class.WTF::Vector.16" = type { %"class.WTF::VectorBuffer.17" }
%"class.WTF::VectorBuffer.17" = type { %"class.WTF::VectorBufferBase.18", [128 x i8] }
%"class.WTF::VectorBufferBase.18" = type { %"class.blink::ImageFrame"*, i32, i32 }
%"class.blink::ImageFrame" = type { %class.SkBitmap, %"class.SkBitmap::Allocator"*, i8, i32, %"class.blink::IntRect", i32, %"class.base::TimeDelta", i32, i32, i8, i8, i64 }
%class.SkBitmap = type { %class.sk_sp.19, %class.SkPixmap, %class.sk_sp.20 }
%class.sk_sp.19 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.20 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.SkBitmap::Allocator" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::ImageOrientation" = type { i8 }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::ImagePlanes"* }
%"class.blink::ImagePlanes" = type <{ [3 x i8*], [3 x i64], i32, i8, [3 x i8] }>
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::ColorProfile"* }
%"class.blink::ColorProfile" = type { %struct.skcms_ICCProfile, %"class.std::__1::unique_ptr.33" }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.32, [8 x i8] }
%struct.anon.32 = type { i32, i8*, i8* }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i8* }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::ColorProfileTransform"* }
%"class.blink::ColorProfileTransform" = type { %struct.skcms_ICCProfile*, %struct.skcms_ICCProfile }
%"class.blink::(anonymous namespace)::ExternalMemoryAllocator" = type { %"class.SkBitmap::Allocator.base", %struct.SkImageInfo, i8*, i64 }
%"class.SkBitmap::Allocator.base" = type { %class.SkRefCnt.base }
%"class.blink::ImageDecodingStore" = type { %"class.WTF::DoublyLinkedList", %"class.WTF::HashMap.54", %"class.WTF::HashMap.59", i64, i64, %"class.base::MemoryPressureListener", %"class.WTF::Mutex" }
%"class.WTF::DoublyLinkedList" = type { %"class.blink::CacheEntry"*, %"class.blink::CacheEntry"* }
%"class.blink::CacheEntry" = type { i32 (...)**, %"class.blink::ImageFrameGenerator"*, i32, %"class.blink::CacheEntry"*, %"class.blink::CacheEntry"* }
%"class.WTF::HashMap.54" = type { %"class.WTF::HashTable.55" }
%"class.WTF::HashTable.55" = type <{ %"struct.WTF::KeyValuePair.58"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.58" = type opaque
%"class.WTF::HashMap.59" = type { %"class.WTF::HashTable.60" }
%"class.WTF::HashTable.60" = type <{ %"struct.WTF::KeyValuePair.63"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.63" = type opaque
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.64 }
%class.scoped_refptr.64 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.65", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.65" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.blink::Platform" = type { i32 (...)** }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

@_ZZN5blink19ImageDecoderWrapper6DecodeEPNS_19ImageDecoderFactoryEPmPbE28trace_event_unique_atomic132 = internal global i64 0, align 8
@.str = private unnamed_addr constant [16 x i8] c"blink,benchmark\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"ImageFrameGenerator::decode\00", align 1
@_ZTVN5blink12_GLOBAL__N_123ExternalMemoryAllocatorE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::ExternalMemoryAllocator"*)* @_ZN5blink12_GLOBAL__N_123ExternalMemoryAllocatorD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ExternalMemoryAllocator"*)* @_ZN5blink12_GLOBAL__N_123ExternalMemoryAllocatorD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::ExternalMemoryAllocator"*, %class.SkBitmap*)* @_ZN5blink12_GLOBAL__N_123ExternalMemoryAllocator13allocPixelRefEP8SkBitmap to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1

@_ZN5blink19ImageDecoderWrapperC1EPNS_19ImageFrameGeneratorEPNS_13SegmentReaderERK7SkISizeNS_12ImageDecoder11AlphaOptionENS_13ColorBehaviorENS8_26HighBitDepthDecodingOptionEmRK11SkImageInfoPvmbi = hidden unnamed_addr alias void (%"class.blink::ImageDecoderWrapper"*, %"class.blink::ImageFrameGenerator"*, %"class.blink::SegmentReader"*, %struct.SkISize*, i32, i32, i32, i64, %struct.SkImageInfo*, i8*, i64, i1, i32), void (%"class.blink::ImageDecoderWrapper"*, %"class.blink::ImageFrameGenerator"*, %"class.blink::SegmentReader"*, %struct.SkISize*, i32, i32, i32, i64, %struct.SkImageInfo*, i8*, i64, i1, i32)* @_ZN5blink19ImageDecoderWrapperC2EPNS_19ImageFrameGeneratorEPNS_13SegmentReaderERK7SkISizeNS_12ImageDecoder11AlphaOptionENS_13ColorBehaviorENS8_26HighBitDepthDecodingOptionEmRK11SkImageInfoPvmbi
@_ZN5blink19ImageDecoderWrapperD1Ev = hidden unnamed_addr alias void (%"class.blink::ImageDecoderWrapper"*), void (%"class.blink::ImageDecoderWrapper"*)* @_ZN5blink19ImageDecoderWrapperD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink19ImageDecoderWrapperC2EPNS_19ImageFrameGeneratorEPNS_13SegmentReaderERK7SkISizeNS_12ImageDecoder11AlphaOptionENS_13ColorBehaviorENS8_26HighBitDepthDecodingOptionEmRK11SkImageInfoPvmbi(%"class.blink::ImageDecoderWrapper"* nocapture, %"class.blink::ImageFrameGenerator"*, %"class.blink::SegmentReader"*, %struct.SkISize* nocapture readonly dereferenceable(8), i32, i32, i32, i64, %struct.SkImageInfo* nocapture readonly dereferenceable(24), i8*, i64, i1 zeroext, i32) unnamed_addr #0 align 2 {
  %14 = zext i1 %11 to i8
  %15 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 0
  store %"class.blink::ImageFrameGenerator"* %1, %"class.blink::ImageFrameGenerator"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 1
  store %"class.blink::SegmentReader"* %2, %"class.blink::SegmentReader"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 2
  %18 = bitcast %struct.SkISize* %3 to i64*
  %19 = bitcast %struct.SkISize* %17 to i64*
  %20 = load i64, i64* %18, align 4
  store i64 %20, i64* %19, align 8
  %21 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 3
  store i32 %4, i32* %21, align 8
  %22 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 4, i32 0
  store i32 %5, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 5
  store i32 %6, i32* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 7
  store i64 %7, i64* %24, align 8
  %25 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 0, i32 0
  %27 = load %class.SkColorSpace*, %class.SkColorSpace** %26, align 8
  %28 = icmp eq %class.SkColorSpace* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %13
  %30 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 1 monotonic
  br label %32

32:                                               ; preds = %13, %29
  store %class.SkColorSpace* %27, %class.SkColorSpace** %25, align 8
  %33 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 8, i32 0, i32 1
  %34 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 1
  %35 = bitcast i32* %34 to i64*
  %36 = bitcast i32* %33 to i64*
  %37 = load i64, i64* %35, align 8
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 8, i32 1
  %39 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 1
  %40 = bitcast %struct.SkISize* %39 to i64*
  %41 = bitcast %struct.SkISize* %38 to i64*
  %42 = load i64, i64* %40, align 8
  store i64 %42, i64* %41, align 8
  %43 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 9
  store i8* %9, i8** %43, align 8
  %44 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 10
  store i64 %10, i64* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 11
  store i8 %14, i8* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 13
  store i32 %12, i32* %46, align 4
  %47 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 14
  store i8 0, i8* %47, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ImageDecoderWrapperD2Ev(%"class.blink::ImageDecoderWrapper"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %3 = load %class.SkColorSpace*, %class.SkColorSpace** %2, align 8
  %4 = icmp eq %class.SkColorSpace* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 -1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = bitcast %class.SkColorSpace* %3 to i8*
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19ImageDecoderWrapper6DecodeEPNS_19ImageDecoderFactoryEPmPb(%"class.blink::ImageDecoderWrapper"*, %"class.blink::ImageDecoderFactory"*, i64* nocapture, i8* nocapture) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.blink::ImageDecoder"*, align 8
  %8 = alloca %"class.blink::(anonymous namespace)::ExternalMemoryAllocator", align 8
  %9 = alloca %class.SkBitmap, align 8
  %10 = bitcast %"class.blink::ImageDecoder"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  store %"class.blink::ImageDecoder"* null, %"class.blink::ImageDecoder"** %7, align 8
  %11 = tail call dereferenceable(168) %"class.blink::ImageDecodingStore"* @_ZN5blink18ImageDecodingStore8InstanceEv() #9
  %12 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 0
  %13 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 13
  %18 = load i32, i32* %17, align 4
  %19 = call zeroext i1 @_ZN5blink18ImageDecodingStore11LockDecoderEPKNS_19ImageFrameGeneratorERK7SkISizeNS_12ImageDecoder11AlphaOptionEiPPS7_(%"class.blink::ImageDecodingStore"* %11, %"class.blink::ImageFrameGenerator"* %13, %struct.SkISize* dereferenceable(8) %14, i32 %16, i32 %18, %"class.blink::ImageDecoder"** nonnull %7) #9
  br i1 %19, label %20, label %77

20:                                               ; preds = %4
  %21 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %7, align 8
  %22 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 1
  %23 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %22, align 8
  %24 = icmp eq %"class.blink::SegmentReader"* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0)) #9
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  br label %32

32:                                               ; preds = %20, %25, %29
  %33 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %21, i64 0, i32 15
  %34 = load i8, i8* %33, align 2, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %64

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 11
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = ptrtoint %"class.blink::SegmentReader"* %23 to i64
  %40 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %21, i64 0, i32 1
  %41 = bitcast %class.scoped_refptr* %40 to i64*
  %42 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %40, i64 0, i32 0
  %43 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %42, align 8
  store i64 %39, i64* %41, align 8
  %44 = icmp eq %"class.blink::SegmentReader"* %43, null
  br i1 %44, label %57, label %45

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %43, i64 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.base::RefCountedThreadSafe.10", %"class.base::RefCountedThreadSafe.10"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw sub i32* %47, i32 1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %57

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.base::RefCountedThreadSafe.10", %"class.base::RefCountedThreadSafe.10"* %46, i64 -2
  %52 = bitcast %"class.base::RefCountedThreadSafe.10"* %51 to %"class.blink::SegmentReader"*
  %53 = bitcast %"class.base::RefCountedThreadSafe.10"* %51 to void (%"class.blink::SegmentReader"*)***
  %54 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %54, i64 1
  %56 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %55, align 8
  call void %56(%"class.blink::SegmentReader"* nonnull %52) #9
  br label %57

57:                                               ; preds = %50, %45, %36
  %58 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %21, i64 0, i32 14
  store i8 %38, i8* %58, align 1
  %59 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %42, align 8
  %60 = bitcast %"class.blink::ImageDecoder"* %21 to void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)***
  %61 = load void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)**, void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)*, void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)** %61, i64 4
  %63 = load void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)*, void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)** %62, align 8
  call void %63(%"class.blink::ImageDecoder"* %21, %"class.blink::SegmentReader"* %59) #9
  br label %82

64:                                               ; preds = %32
  br i1 %24, label %82, label %65

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %23, i64 0, i32 1, i32 0
  %67 = getelementptr inbounds %"class.base::RefCountedThreadSafe.10", %"class.base::RefCountedThreadSafe.10"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw sub i32* %67, i32 1 acq_rel
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %82

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.base::RefCountedThreadSafe.10", %"class.base::RefCountedThreadSafe.10"* %66, i64 -2
  %72 = bitcast %"class.base::RefCountedThreadSafe.10"* %71 to %"class.blink::SegmentReader"*
  %73 = bitcast %"class.base::RefCountedThreadSafe.10"* %71 to void (%"class.blink::SegmentReader"*)***
  %74 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %74, i64 1
  %76 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %75, align 8
  call void %76(%"class.blink::SegmentReader"* nonnull %72) #9
  br label %82

77:                                               ; preds = %4
  %78 = call %"class.blink::ImageDecoder"* @_ZNK5blink19ImageDecoderWrapper21CreateDecoderWithDataEPNS_19ImageDecoderFactoryE(%"class.blink::ImageDecoderWrapper"* %0, %"class.blink::ImageDecoderFactory"* %1)
  %79 = ptrtoint %"class.blink::ImageDecoder"* %78 to i64
  %80 = icmp eq %"class.blink::ImageDecoder"* %78, null
  br i1 %80, label %312, label %81

81:                                               ; preds = %77
  store %"class.blink::ImageDecoder"* %78, %"class.blink::ImageDecoder"** %7, align 8
  br label %82

82:                                               ; preds = %70, %65, %64, %57, %81
  %83 = phi i64 [ %79, %81 ], [ 0, %57 ], [ 0, %64 ], [ 0, %65 ], [ 0, %70 ]
  %84 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 11
  %85 = load i8, i8* %84, align 8, !range !2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %82
  %88 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %7, align 8
  %89 = call i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"* %88) #9
  store i64 %89, i64* %2, align 8
  br label %92

90:                                               ; preds = %82
  %91 = load i64, i64* %2, align 8
  br label %92

92:                                               ; preds = %90, %87
  %93 = phi i64 [ %91, %90 ], [ %89, %87 ]
  %94 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %12, align 8
  %95 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %94, i64 0, i32 3
  %96 = load i8, i8* %95, align 8, !range !2
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %112

98:                                               ; preds = %92
  %99 = call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #9
  %100 = bitcast %"class.blink::Platform"* %99 to i1 (%"class.blink::Platform"*)***
  %101 = load i1 (%"class.blink::Platform"*)**, i1 (%"class.blink::Platform"*)*** %100, align 8
  %102 = getelementptr inbounds i1 (%"class.blink::Platform"*)*, i1 (%"class.blink::Platform"*)** %101, i64 17
  %103 = load i1 (%"class.blink::Platform"*)*, i1 (%"class.blink::Platform"*)** %102, align 8
  %104 = call zeroext i1 %103(%"class.blink::Platform"* %99) #9
  br i1 %104, label %112, label %105

105:                                              ; preds = %98
  %106 = icmp eq i64 %93, 1
  br i1 %106, label %107, label %111

107:                                              ; preds = %105
  %108 = load i8, i8* %84, align 8, !range !2
  %109 = icmp eq i8 %108, 0
  %110 = or i1 %19, %109
  br i1 %110, label %111, label %112

111:                                              ; preds = %107, %105
  br label %112

112:                                              ; preds = %92, %98, %107, %111
  %113 = phi i1 [ false, %111 ], [ false, %92 ], [ true, %98 ], [ true, %107 ]
  %114 = bitcast %"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %114) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 56, i1 false)
  %115 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 8
  %116 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 9
  %117 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 10
  %118 = bitcast i8** %116 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8
  %120 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExternalMemoryAllocator", %"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %120, align 8
  %121 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExternalMemoryAllocator", %"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_123ExternalMemoryAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %121, align 8
  %122 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExternalMemoryAllocator", %"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %123 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %115, i64 0, i32 0, i32 0, i32 0
  %124 = load %class.SkColorSpace*, %class.SkColorSpace** %123, align 8
  %125 = icmp eq %class.SkColorSpace* %124, null
  br i1 %125, label %129, label %126

126:                                              ; preds = %112
  %127 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = atomicrmw add i32* %127, i32 1 monotonic
  br label %129

129:                                              ; preds = %112, %126
  store %class.SkColorSpace* %124, %class.SkColorSpace** %122, align 8
  %130 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExternalMemoryAllocator", %"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* %8, i64 0, i32 1, i32 0, i32 1
  %131 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 8, i32 0, i32 1
  %132 = bitcast i32* %131 to <2 x i64>*
  %133 = load <2 x i64>, <2 x i64>* %132, align 8
  %134 = bitcast i32* %130 to <2 x i64>*
  store <2 x i64> %133, <2 x i64>* %134, align 8
  %135 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExternalMemoryAllocator", %"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* %8, i64 0, i32 2
  %136 = bitcast i8** %135 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %136, align 8
  br i1 %113, label %137, label %144

137:                                              ; preds = %129
  %138 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %7, align 8
  %139 = bitcast %"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* %8 to %"class.SkBitmap::Allocator"*
  %140 = bitcast %"class.blink::ImageDecoder"* %138 to void (%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*)***
  %141 = load void (%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*)**, void (%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*)*** %140, align 8
  %142 = getelementptr inbounds void (%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*)*, void (%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*)** %141, i64 24
  %143 = load void (%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*)*, void (%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*)** %142, align 8
  call void %143(%"class.blink::ImageDecoder"* %138, %"class.SkBitmap::Allocator"* nonnull %139) #9
  br label %144

144:                                              ; preds = %137, %129
  %145 = load atomic i64, i64* @_ZZN5blink19ImageDecoderWrapper6DecodeEPNS_19ImageDecoderFactoryEPmPbE28trace_event_unique_atomic132 monotonic, align 8
  %146 = inttoptr i64 %145 to i8*
  %147 = icmp eq i64 %145, 0
  br i1 %147, label %148, label %151, !prof !3

148:                                              ; preds = %144
  %149 = call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0)) #9
  %150 = ptrtoint i8* %149 to i64
  store atomic volatile i64 %150, i64* @_ZZN5blink19ImageDecoderWrapper6DecodeEPNS_19ImageDecoderFactoryEPmPbE28trace_event_unique_atomic132 monotonic, align 8
  br label %151

151:                                              ; preds = %148, %144
  %152 = phi i8* [ %149, %148 ], [ %146, %144 ]
  %153 = load i8, i8* %152, align 1
  %154 = and i8 %153, 25
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %162, label %156, !prof !4

156:                                              ; preds = %151
  %157 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %158 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #9
  %159 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %160 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %160, i64* %159, align 8
  %161 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* %152, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %157, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158) #9
  br label %162

162:                                              ; preds = %151, %156
  %163 = phi i64 [ -6148914691236517206, %151 ], [ %161, %156 ]
  %164 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %151 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), %156 ]
  %165 = phi i8* [ null, %151 ], [ %152, %156 ]
  %166 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %7, align 8
  %167 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 7
  %168 = load i64, i64* %167, align 8
  %169 = call %"class.blink::ImageFrame"* @_ZN5blink12ImageDecoder24DecodeFrameBufferAtIndexEm(%"class.blink::ImageDecoder"* %166, i64 %168) #9
  %170 = icmp eq i8* %165, null
  br i1 %170, label %175, label %171

171:                                              ; preds = %162
  %172 = load i8, i8* %165, align 1
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %175, label %174

174:                                              ; preds = %171
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %165, i8* %164, i64 %163) #9
  br label %175

175:                                              ; preds = %162, %171, %174
  br i1 %113, label %176, label %182

176:                                              ; preds = %175
  %177 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %7, align 8
  %178 = bitcast %"class.blink::ImageDecoder"* %177 to void (%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*)***
  %179 = load void (%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*)**, void (%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*)*** %178, align 8
  %180 = getelementptr inbounds void (%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*)*, void (%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*)** %179, i64 24
  %181 = load void (%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*)*, void (%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*)** %180, align 8
  call void %181(%"class.blink::ImageDecoder"* %177, %"class.SkBitmap::Allocator"* null) #9
  br label %182

182:                                              ; preds = %176, %175
  %183 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %7, align 8
  %184 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %183, i64 0, i32 15
  %185 = load i8, i8* %184, align 2, !range !2
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %187, label %213

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %183, i64 0, i32 1
  %189 = bitcast %class.scoped_refptr* %188 to i64*
  %190 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %188, i64 0, i32 0
  %191 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %190, align 8
  store i64 0, i64* %189, align 8
  %192 = icmp eq %"class.blink::SegmentReader"* %191, null
  br i1 %192, label %205, label %193

193:                                              ; preds = %187
  %194 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %191, i64 0, i32 1, i32 0
  %195 = getelementptr inbounds %"class.base::RefCountedThreadSafe.10", %"class.base::RefCountedThreadSafe.10"* %194, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = atomicrmw sub i32* %195, i32 1 acq_rel
  %197 = icmp eq i32 %196, 1
  br i1 %197, label %198, label %205

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"class.base::RefCountedThreadSafe.10", %"class.base::RefCountedThreadSafe.10"* %194, i64 -2
  %200 = bitcast %"class.base::RefCountedThreadSafe.10"* %199 to %"class.blink::SegmentReader"*
  %201 = bitcast %"class.base::RefCountedThreadSafe.10"* %199 to void (%"class.blink::SegmentReader"*)***
  %202 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %201, align 8
  %203 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %202, i64 1
  %204 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %203, align 8
  call void %204(%"class.blink::SegmentReader"* nonnull %200) #9
  br label %205

205:                                              ; preds = %198, %193, %187
  %206 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %183, i64 0, i32 14
  store i8 0, i8* %206, align 1
  %207 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %190, align 8
  %208 = bitcast %"class.blink::ImageDecoder"* %183 to void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)***
  %209 = load void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)**, void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)*** %208, align 8
  %210 = getelementptr inbounds void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)*, void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)** %209, i64 4
  %211 = load void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)*, void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)** %210, align 8
  call void %211(%"class.blink::ImageDecoder"* %183, %"class.blink::SegmentReader"* %207) #9
  %212 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %7, align 8
  br label %213

213:                                              ; preds = %182, %205
  %214 = phi %"class.blink::ImageDecoder"* [ %183, %182 ], [ %212, %205 ]
  %215 = load i64, i64* %167, align 8
  %216 = bitcast %"class.blink::ImageDecoder"* %214 to i64 (%"class.blink::ImageDecoder"*, i64)***
  %217 = load i64 (%"class.blink::ImageDecoder"*, i64)**, i64 (%"class.blink::ImageDecoder"*, i64)*** %216, align 8
  %218 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %217, i64 22
  %219 = load i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %218, align 8
  %220 = call i64 %219(%"class.blink::ImageDecoder"* %214, i64 %215) #9
  %221 = icmp eq %"class.blink::ImageFrame"* %169, null
  br i1 %221, label %230, label %222

222:                                              ; preds = %213
  %223 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %169, i64 0, i32 5
  %224 = load i32, i32* %223, align 8
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %230, label %226

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %169, i64 0, i32 0, i32 0, i32 0
  %228 = load %class.SkPixelRef*, %class.SkPixelRef** %227, align 8
  %229 = icmp eq %class.SkPixelRef* %228, null
  br i1 %229, label %230, label %240

230:                                              ; preds = %226, %213, %222
  %231 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %7, align 8
  %232 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %231, i64 0, i32 15
  %233 = load i8, i8* %232, align 2, !range !2
  %234 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 14
  store i8 %233, i8* %234, align 8
  br i1 %19, label %235, label %300

235:                                              ; preds = %230
  %236 = call dereferenceable(168) %"class.blink::ImageDecodingStore"* @_ZN5blink18ImageDecodingStore8InstanceEv() #9
  %237 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %12, align 8
  %238 = load i32, i32* %17, align 4
  %239 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %7, align 8
  call void @_ZN5blink18ImageDecodingStore13UnlockDecoderEPKNS_19ImageFrameGeneratorEiPKNS_12ImageDecoderE(%"class.blink::ImageDecodingStore"* %236, %"class.blink::ImageFrameGenerator"* %237, i32 %238, %"class.blink::ImageDecoder"* %239) #9
  br label %300

240:                                              ; preds = %226
  %241 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %169, i64 0, i32 0
  %242 = bitcast %class.SkBitmap* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %242) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %242, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* nonnull %9, %class.SkBitmap* dereferenceable(56) %241) #9
  %243 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %9, i64 0, i32 1, i32 2, i32 0, i32 2
  %244 = load i32, i32* %243, align 4
  %245 = icmp ne i32 %244, 1
  %246 = zext i1 %245 to i8
  store i8 %246, i8* %3, align 1
  br i1 %113, label %251, label %247

247:                                              ; preds = %240
  %248 = load i8*, i8** %116, align 8
  %249 = load i64, i64* %117, align 8
  %250 = call zeroext i1 @_ZNK8SkBitmap10readPixelsERK11SkImageInfoPvmii(%class.SkBitmap* nonnull %9, %struct.SkImageInfo* dereferenceable(24) %115, i8* %248, i64 %249, i32 0, i32 0) #9
  br label %251

251:                                              ; preds = %247, %240
  %252 = load i32, i32* %223, align 8
  %253 = icmp eq i32 %252, 3
  br i1 %253, label %257, label %254

254:                                              ; preds = %251
  %255 = load i8, i8* %84, align 8, !range !2
  %256 = icmp ne i8 %255, 0
  br label %257

257:                                              ; preds = %254, %251
  %258 = phi i1 [ true, %251 ], [ %256, %254 ]
  %259 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %7, align 8
  %260 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %12, align 8
  %261 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %260, i64 0, i32 3
  %262 = load i8, i8* %261, align 8, !range !2
  %263 = icmp eq i8 %262, 0
  %264 = xor i1 %258, true
  %265 = or i1 %263, %264
  br i1 %265, label %280, label %266

266:                                              ; preds = %257
  %267 = load i64, i64* %2, align 8
  %268 = add i64 %267, -1
  %269 = load i64, i64* %167, align 8
  %270 = icmp eq i64 %269, %268
  br i1 %270, label %271, label %280

271:                                              ; preds = %266
  %272 = bitcast %"class.blink::ImageDecoder"* %259 to i64 (%"class.blink::ImageDecoder"*, i64)***
  %273 = load i64 (%"class.blink::ImageDecoder"*, i64)**, i64 (%"class.blink::ImageDecoder"*, i64)*** %272, align 8
  %274 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %273, i64 22
  %275 = load i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %274, align 8
  %276 = call i64 %275(%"class.blink::ImageDecoder"* %259, i64 4294967295) #9
  %277 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %12, align 8
  %278 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %277, i64 0, i32 3
  %279 = load i8, i8* %278, align 8, !range !2
  br label %280

280:                                              ; preds = %257, %266, %271
  %281 = phi i8 [ %262, %257 ], [ 1, %266 ], [ %279, %271 ]
  %282 = icmp eq i8 %281, 0
  %283 = or i1 %113, %258
  %284 = and i1 %283, %282
  br i1 %19, label %285, label %292

285:                                              ; preds = %280
  %286 = call dereferenceable(168) %"class.blink::ImageDecodingStore"* @_ZN5blink18ImageDecodingStore8InstanceEv() #9
  %287 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %12, align 8
  %288 = load i32, i32* %17, align 4
  %289 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %7, align 8
  br i1 %284, label %290, label %291

290:                                              ; preds = %285
  call void @_ZN5blink18ImageDecodingStore13RemoveDecoderEPKNS_19ImageFrameGeneratorEiPKNS_12ImageDecoderE(%"class.blink::ImageDecodingStore"* %286, %"class.blink::ImageFrameGenerator"* %287, i32 %288, %"class.blink::ImageDecoder"* %289) #9
  br label %298

291:                                              ; preds = %285
  call void @_ZN5blink18ImageDecodingStore13UnlockDecoderEPKNS_19ImageFrameGeneratorEiPKNS_12ImageDecoderE(%"class.blink::ImageDecodingStore"* %286, %"class.blink::ImageFrameGenerator"* %287, i32 %288, %"class.blink::ImageDecoder"* %289) #9
  br label %298

292:                                              ; preds = %280
  br i1 %284, label %298, label %293

293:                                              ; preds = %292
  %294 = call dereferenceable(168) %"class.blink::ImageDecodingStore"* @_ZN5blink18ImageDecodingStore8InstanceEv() #9
  %295 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %12, align 8
  %296 = load i32, i32* %17, align 4
  %297 = inttoptr i64 %83 to %"class.blink::ImageDecoder"*
  call void @_ZN5blink18ImageDecodingStore13InsertDecoderEPKNS_19ImageFrameGeneratorEiNSt3__110unique_ptrINS_12ImageDecoderENS4_14default_deleteIS6_EEEE(%"class.blink::ImageDecodingStore"* %294, %"class.blink::ImageFrameGenerator"* %295, i32 %296, %"class.blink::ImageDecoder"* %297) #9
  br label %298

298:                                              ; preds = %292, %293, %290, %291
  %299 = phi i64 [ %83, %290 ], [ %83, %291 ], [ %83, %292 ], [ 0, %293 ]
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %242) #9
  br label %300

300:                                              ; preds = %230, %235, %298
  %301 = phi i64 [ %83, %235 ], [ %83, %230 ], [ %299, %298 ]
  %302 = phi i1 [ false, %235 ], [ false, %230 ], [ true, %298 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_123ExternalMemoryAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %121, align 8
  %303 = load %class.SkColorSpace*, %class.SkColorSpace** %122, align 8
  %304 = icmp eq %class.SkColorSpace* %303, null
  br i1 %304, label %311, label %305

305:                                              ; preds = %300
  %306 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %303, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = atomicrmw add i32* %306, i32 -1 acq_rel
  %308 = icmp eq i32 %307, 1
  br i1 %308, label %309, label %311

309:                                              ; preds = %305
  %310 = bitcast %class.SkColorSpace* %303 to i8*
  call void @_ZdlPv(i8* %310) #8
  br label %311

311:                                              ; preds = %300, %305, %309
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %114) #9
  br label %312

312:                                              ; preds = %77, %311
  %313 = phi i64 [ %301, %311 ], [ %79, %77 ]
  %314 = phi i1 [ %302, %311 ], [ false, %77 ]
  %315 = icmp eq i64 %313, 0
  br i1 %315, label %322, label %316

316:                                              ; preds = %312
  %317 = inttoptr i64 %313 to %"class.blink::ImageDecoder"*
  %318 = inttoptr i64 %313 to void (%"class.blink::ImageDecoder"*)***
  %319 = load void (%"class.blink::ImageDecoder"*)**, void (%"class.blink::ImageDecoder"*)*** %318, align 8
  %320 = getelementptr inbounds void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %319, i64 1
  %321 = load void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %320, align 8
  call void %321(%"class.blink::ImageDecoder"* nonnull %317) #9
  br label %322

322:                                              ; preds = %312, %316
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  ret i1 %314
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare dereferenceable(168) %"class.blink::ImageDecodingStore"* @_ZN5blink18ImageDecodingStore8InstanceEv() local_unnamed_addr #3

declare zeroext i1 @_ZN5blink18ImageDecodingStore11LockDecoderEPKNS_19ImageFrameGeneratorERK7SkISizeNS_12ImageDecoder11AlphaOptionEiPPS7_(%"class.blink::ImageDecodingStore"*, %"class.blink::ImageFrameGenerator"*, %struct.SkISize* dereferenceable(8), i32, i32, %"class.blink::ImageDecoder"**) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ImageDecoder"* @_ZNK5blink19ImageDecoderWrapper21CreateDecoderWithDataEPNS_19ImageDecoderFactoryE(%"class.blink::ImageDecoderWrapper"*, %"class.blink::ImageDecoderFactory"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq %"class.blink::ImageDecoderFactory"* %1, null
  br i1 %5, label %69, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::ImageDecoderFactory"* %1 to %"class.blink::ImageDecoder"* (%"class.blink::ImageDecoderFactory"*)***
  %8 = load %"class.blink::ImageDecoder"* (%"class.blink::ImageDecoderFactory"*)**, %"class.blink::ImageDecoder"* (%"class.blink::ImageDecoderFactory"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ImageDecoder"* (%"class.blink::ImageDecoderFactory"*)*, %"class.blink::ImageDecoder"* (%"class.blink::ImageDecoderFactory"*)** %8, i64 2
  %10 = load %"class.blink::ImageDecoder"* (%"class.blink::ImageDecoderFactory"*)*, %"class.blink::ImageDecoder"* (%"class.blink::ImageDecoderFactory"*)** %9, align 8
  %11 = tail call %"class.blink::ImageDecoder"* %10(%"class.blink::ImageDecoderFactory"* nonnull %1) #9
  %12 = icmp eq %"class.blink::ImageDecoder"* %11, null
  br i1 %12, label %91, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 1
  %15 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %14, align 8
  %16 = icmp eq %"class.blink::SegmentReader"* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 monotonic
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0)) #9
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  br label %24

24:                                               ; preds = %13, %17, %21
  %25 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %11, i64 0, i32 15
  %26 = load i8, i8* %25, align 2, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %56

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 11
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = ptrtoint %"class.blink::SegmentReader"* %15 to i64
  %32 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %11, i64 0, i32 1
  %33 = bitcast %class.scoped_refptr* %32 to i64*
  %34 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %32, i64 0, i32 0
  %35 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %34, align 8
  store i64 %31, i64* %33, align 8
  %36 = icmp eq %"class.blink::SegmentReader"* %35, null
  br i1 %36, label %49, label %37

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %35, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::RefCountedThreadSafe.10", %"class.base::RefCountedThreadSafe.10"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw sub i32* %39, i32 1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %49

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.base::RefCountedThreadSafe.10", %"class.base::RefCountedThreadSafe.10"* %38, i64 -2
  %44 = bitcast %"class.base::RefCountedThreadSafe.10"* %43 to %"class.blink::SegmentReader"*
  %45 = bitcast %"class.base::RefCountedThreadSafe.10"* %43 to void (%"class.blink::SegmentReader"*)***
  %46 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %46, i64 1
  %48 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %47, align 8
  call void %48(%"class.blink::SegmentReader"* nonnull %44) #9
  br label %49

49:                                               ; preds = %42, %37, %28
  %50 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %11, i64 0, i32 14
  store i8 %30, i8* %50, align 1
  %51 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %34, align 8
  %52 = bitcast %"class.blink::ImageDecoder"* %11 to void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)***
  %53 = load void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)**, void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)*, void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)** %53, i64 4
  %55 = load void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)*, void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)** %54, align 8
  call void %55(%"class.blink::ImageDecoder"* nonnull %11, %"class.blink::SegmentReader"* %51) #9
  br label %91

56:                                               ; preds = %24
  br i1 %16, label %91, label %57

57:                                               ; preds = %56
  %58 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %15, i64 0, i32 1, i32 0
  %59 = getelementptr inbounds %"class.base::RefCountedThreadSafe.10", %"class.base::RefCountedThreadSafe.10"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw sub i32* %59, i32 1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %91

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.base::RefCountedThreadSafe.10", %"class.base::RefCountedThreadSafe.10"* %58, i64 -2
  %64 = bitcast %"class.base::RefCountedThreadSafe.10"* %63 to %"class.blink::SegmentReader"*
  %65 = bitcast %"class.base::RefCountedThreadSafe.10"* %63 to void (%"class.blink::SegmentReader"*)***
  %66 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %66, i64 1
  %68 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %67, align 8
  call void %68(%"class.blink::SegmentReader"* nonnull %64) #9
  br label %91

69:                                               ; preds = %2
  %70 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 1
  %71 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %70, align 8
  %72 = icmp eq %"class.blink::SegmentReader"* %71, null
  br i1 %72, label %80, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %71, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 1 monotonic
  %76 = icmp sgt i32 %75, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %73
  %78 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0)) #9
  %79 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #9
  br label %80

80:                                               ; preds = %69, %73, %77
  %81 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 11
  %82 = load i8, i8* %81, align 8, !range !2
  %83 = icmp ne i8 %82, 0
  %84 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 3
  %85 = load i32, i32* %84, align 8
  %86 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 5
  %87 = load i32, i32* %86, align 8
  %88 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 4
  %89 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 2
  %90 = call %"class.blink::ImageDecoder"* @_ZN5blink12ImageDecoder6CreateE13scoped_refptrINS_13SegmentReaderEEbNS0_11AlphaOptionENS0_26HighBitDepthDecodingOptionERKNS_13ColorBehaviorERK7SkISizeNS0_15AnimationOptionE(%"class.blink::SegmentReader"* %71, i1 zeroext %83, i32 %85, i32 %87, %"class.blink::ColorBehavior"* dereferenceable(4) %88, %struct.SkISize* dereferenceable(8) %89, i32 0) #9
  br label %91

91:                                               ; preds = %6, %62, %57, %56, %49, %80
  %92 = phi %"class.blink::ImageDecoder"* [ %90, %80 ], [ null, %6 ], [ %11, %49 ], [ %11, %56 ], [ %11, %57 ], [ %11, %62 ]
  ret %"class.blink::ImageDecoder"* %92
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19ImageDecoderWrapper28ShouldDecodeToExternalMemoryEmb(%"class.blink::ImageDecoderWrapper"* nocapture readonly, i64, i1 zeroext) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 0
  %5 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %5, i64 0, i32 3
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %24

9:                                                ; preds = %3
  %10 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #9
  %11 = bitcast %"class.blink::Platform"* %10 to i1 (%"class.blink::Platform"*)***
  %12 = load i1 (%"class.blink::Platform"*)**, i1 (%"class.blink::Platform"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::Platform"*)*, i1 (%"class.blink::Platform"*)** %12, i64 17
  %14 = load i1 (%"class.blink::Platform"*)*, i1 (%"class.blink::Platform"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::Platform"* %10) #9
  br i1 %15, label %24, label %16

16:                                               ; preds = %9
  %17 = icmp eq i64 %1, 1
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 11
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  %22 = or i1 %21, %2
  br i1 %22, label %23, label %24

23:                                               ; preds = %18, %16
  br label %24

24:                                               ; preds = %3, %18, %9, %23
  %25 = phi i1 [ false, %23 ], [ false, %3 ], [ true, %9 ], [ true, %18 ]
  ret i1 %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8*) local_unnamed_addr #3

declare %"class.blink::ImageFrame"* @_ZN5blink12ImageDecoder24DecodeFrameBufferAtIndexEm(%"class.blink::ImageDecoder"*, i64) local_unnamed_addr #3

declare void @_ZN5blink18ImageDecodingStore13UnlockDecoderEPKNS_19ImageFrameGeneratorEiPKNS_12ImageDecoderE(%"class.blink::ImageDecodingStore"*, %"class.blink::ImageFrameGenerator"*, i32, %"class.blink::ImageDecoder"*) local_unnamed_addr #3

declare void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #3

declare zeroext i1 @_ZNK8SkBitmap10readPixelsERK11SkImageInfoPvmii(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19ImageDecoderWrapper25PurgeAllFramesIfNecessaryEPNS_12ImageDecoderEbm(%"class.blink::ImageDecoderWrapper"* nocapture readonly, %"class.blink::ImageDecoder"*, i1 zeroext, i64) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 0
  %6 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %6, i64 0, i32 3
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = xor i1 %2, true
  %11 = or i1 %9, %10
  br i1 %11, label %23, label %12

12:                                               ; preds = %4
  %13 = add i64 %3, -1
  %14 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 7
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, %13
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = bitcast %"class.blink::ImageDecoder"* %1 to i64 (%"class.blink::ImageDecoder"*, i64)***
  %19 = load i64 (%"class.blink::ImageDecoder"*, i64)**, i64 (%"class.blink::ImageDecoder"*, i64)*** %18, align 8
  %20 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %19, i64 22
  %21 = load i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %20, align 8
  %22 = tail call i64 %21(%"class.blink::ImageDecoder"* %1, i64 4294967295) #9
  br label %23

23:                                               ; preds = %12, %17, %4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink19ImageDecoderWrapper19ShouldRemoveDecoderEbb(%"class.blink::ImageDecoderWrapper"* nocapture readonly, i1 zeroext, i1 zeroext) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.blink::ImageDecoderWrapper", %"class.blink::ImageDecoderWrapper"* %0, i64 0, i32 0
  %5 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %5, i64 0, i32 3
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %3
  %10 = or i1 %1, %2
  ret i1 %10

11:                                               ; preds = %3
  ret i1 false
}

declare void @_ZN5blink18ImageDecodingStore13RemoveDecoderEPKNS_19ImageFrameGeneratorEiPKNS_12ImageDecoderE(%"class.blink::ImageDecodingStore"*, %"class.blink::ImageFrameGenerator"*, i32, %"class.blink::ImageDecoder"*) local_unnamed_addr #3

declare void @_ZN5blink18ImageDecodingStore13InsertDecoderEPKNS_19ImageFrameGeneratorEiNSt3__110unique_ptrINS_12ImageDecoderENS4_14default_deleteIS6_EEEE(%"class.blink::ImageDecodingStore"*, %"class.blink::ImageFrameGenerator"*, i32, %"class.blink::ImageDecoder"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_123ExternalMemoryAllocatorD2Ev(%"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExternalMemoryAllocator", %"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_123ExternalMemoryAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExternalMemoryAllocator", %"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  br label %12

12:                                               ; preds = %1, %6, %10
  ret void
}

declare %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() local_unnamed_addr #3

declare %"class.blink::ImageDecoder"* @_ZN5blink12ImageDecoder6CreateE13scoped_refptrINS_13SegmentReaderEEbNS0_11AlphaOptionENS0_26HighBitDepthDecodingOptionERKNS_13ColorBehaviorERK7SkISizeNS0_15AnimationOptionE(%"class.blink::SegmentReader"*, i1 zeroext, i32, i32, %"class.blink::ColorBehavior"* dereferenceable(4), %struct.SkISize* dereferenceable(8), i32) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_123ExternalMemoryAllocatorD0Ev(%"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExternalMemoryAllocator", %"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_123ExternalMemoryAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExternalMemoryAllocator", %"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = bitcast %"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* %0 to i8*
  tail call void @free(i8* %13) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #1 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #9
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blink12_GLOBAL__N_123ExternalMemoryAllocator13allocPixelRefEP8SkBitmap(%"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* nocapture readonly, %class.SkBitmap*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2
  %4 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %95, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExternalMemoryAllocator", %"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExternalMemoryAllocator", %"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* %0, i64 0, i32 1, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %36

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExternalMemoryAllocator", %"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* %0, i64 0, i32 1, i32 1, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %36

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExternalMemoryAllocator", %"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* %0, i64 0, i32 1, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, %5
  br i1 %23, label %24, label %36

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExternalMemoryAllocator", %"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* %0, i64 0, i32 1, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %26, %28
  br i1 %29, label %30, label %36

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 0, i32 0
  %32 = load %class.SkColorSpace*, %class.SkColorSpace** %31, align 8
  %33 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %34 = load %class.SkColorSpace*, %class.SkColorSpace** %33, align 8
  %35 = tail call zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace* %32, %class.SkColorSpace* %34) #9
  br i1 %35, label %85, label %36

36:                                               ; preds = %30, %24, %20, %14, %7
  %37 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExternalMemoryAllocator", %"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* %0, i64 0, i32 1, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %95

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 2
  br i1 %43, label %44, label %95

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExternalMemoryAllocator", %"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* %0, i64 0, i32 1, i32 1
  %46 = bitcast %struct.SkISize* %45 to i64*
  %47 = load i64, i64* %46, align 8, !noalias !5
  %48 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExternalMemoryAllocator", %"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* %0, i64 0, i32 1, i32 0, i32 1
  %49 = load i32, i32* %48, align 8, !noalias !8
  %50 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 0, i32 0
  %51 = load %class.SkColorSpace*, %class.SkColorSpace** %50, align 8, !noalias !11
  %52 = icmp eq %class.SkColorSpace* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %44
  %54 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 1 monotonic, !noalias !11
  br label %56

56:                                               ; preds = %53, %44
  %57 = trunc i64 %47 to i32
  %58 = load i32, i32* %11, align 4
  %59 = icmp eq i32 %58, %57
  br i1 %59, label %60, label %76

60:                                               ; preds = %56
  %61 = lshr i64 %47, 32
  %62 = trunc i64 %61 to i32
  %63 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, %62
  br i1 %65, label %66, label %76

66:                                               ; preds = %60
  %67 = load i32, i32* %4, align 8
  %68 = icmp eq i32 %49, %67
  %69 = load i32, i32* %41, align 4
  %70 = icmp eq i32 %69, 2
  %71 = and i1 %68, %70
  br i1 %71, label %72, label %76

72:                                               ; preds = %66
  %73 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %74 = load %class.SkColorSpace*, %class.SkColorSpace** %73, align 8
  %75 = tail call zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace* %51, %class.SkColorSpace* %74) #9
  br label %76

76:                                               ; preds = %72, %66, %60, %56
  %77 = phi i1 [ false, %60 ], [ false, %66 ], [ %75, %72 ], [ false, %56 ]
  br i1 %52, label %84, label %78

78:                                               ; preds = %76
  %79 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw add i32* %79, i32 -1 acq_rel
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %82, label %84

82:                                               ; preds = %78
  %83 = bitcast %class.SkColorSpace* %51 to i8*
  tail call void @_ZdlPv(i8* %83) #8
  br i1 %77, label %85, label %95

84:                                               ; preds = %76, %78
  br i1 %77, label %85, label %95

85:                                               ; preds = %30, %82, %84
  %86 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExternalMemoryAllocator", %"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* %0, i64 0, i32 3
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %87, %89
  br i1 %90, label %91, label %95

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.blink::(anonymous namespace)::ExternalMemoryAllocator", %"class.blink::(anonymous namespace)::ExternalMemoryAllocator"* %0, i64 0, i32 2
  %93 = load i8*, i8** %92, align 8
  %94 = tail call zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap* %1, %struct.SkImageInfo* dereferenceable(24) %3, i8* %93, i64 %87, void (i8*, i8*)* null, i8* null) #9
  br label %95

95:                                               ; preds = %36, %40, %82, %84, %85, %2, %91
  %96 = phi i1 [ %94, %91 ], [ false, %2 ], [ false, %85 ], [ false, %84 ], [ false, %82 ], [ false, %40 ], [ false, %36 ]
  ret i1 %96
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace*, %class.SkColorSpace*) local_unnamed_addr #3

declare zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #3

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #3

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #3

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #3

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!7 = distinct !{!7, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType"}
!8 = !{!9, !6}
!9 = distinct !{!9, !10, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!10 = distinct !{!10, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType"}
!11 = !{!12, !9, !6}
!12 = distinct !{!12, !13, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!13 = distinct !{!13, !"_ZNK11SkColorInfo13refColorSpaceEv"}
