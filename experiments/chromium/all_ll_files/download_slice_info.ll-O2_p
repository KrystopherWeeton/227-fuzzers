; ModuleID = '../../components/history/core/browser/download_slice_info.cc'
source_filename = "../../components/history/core/browser/download_slice_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.history::DownloadSliceInfo" = type <{ i32, [4 x i8], i64, i64, i8, [7 x i8] }>

@_ZN7history18kInvalidDownloadIdE = external local_unnamed_addr constant i32, align 4

@_ZN7history17DownloadSliceInfoC1Ev = hidden unnamed_addr alias void (%"struct.history::DownloadSliceInfo"*), void (%"struct.history::DownloadSliceInfo"*)* @_ZN7history17DownloadSliceInfoC2Ev
@_ZN7history17DownloadSliceInfoC1Ejllb = hidden unnamed_addr alias void (%"struct.history::DownloadSliceInfo"*, i32, i64, i64, i1), void (%"struct.history::DownloadSliceInfo"*, i32, i64, i64, i1)* @_ZN7history17DownloadSliceInfoC2Ejllb
@_ZN7history17DownloadSliceInfoC1ERKS0_ = hidden unnamed_addr alias void (%"struct.history::DownloadSliceInfo"*, %"struct.history::DownloadSliceInfo"*), void (%"struct.history::DownloadSliceInfo"*, %"struct.history::DownloadSliceInfo"*)* @_ZN7history17DownloadSliceInfoC2ERKS0_
@_ZN7history17DownloadSliceInfoD1Ev = hidden unnamed_addr alias void (%"struct.history::DownloadSliceInfo"*), void (%"struct.history::DownloadSliceInfo"*)* @_ZN7history17DownloadSliceInfoD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7history17DownloadSliceInfoC2Ev(%"struct.history::DownloadSliceInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.history::DownloadSliceInfo", %"struct.history::DownloadSliceInfo"* %0, i64 0, i32 0
  %3 = load i32, i32* @_ZN7history18kInvalidDownloadIdE, align 4
  store i32 %3, i32* %2, align 8
  %4 = getelementptr inbounds %"struct.history::DownloadSliceInfo", %"struct.history::DownloadSliceInfo"* %0, i64 0, i32 2
  %5 = bitcast i64* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 17, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7history17DownloadSliceInfoC2Ejllb(%"struct.history::DownloadSliceInfo"* nocapture, i32, i64, i64, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = zext i1 %4 to i8
  %7 = getelementptr inbounds %"struct.history::DownloadSliceInfo", %"struct.history::DownloadSliceInfo"* %0, i64 0, i32 0
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"struct.history::DownloadSliceInfo", %"struct.history::DownloadSliceInfo"* %0, i64 0, i32 2
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.history::DownloadSliceInfo", %"struct.history::DownloadSliceInfo"* %0, i64 0, i32 3
  store i64 %3, i64* %9, align 8
  %10 = getelementptr inbounds %"struct.history::DownloadSliceInfo", %"struct.history::DownloadSliceInfo"* %0, i64 0, i32 4
  store i8 %6, i8* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history17DownloadSliceInfoC2ERKS0_(%"struct.history::DownloadSliceInfo"* nocapture, %"struct.history::DownloadSliceInfo"* nocapture readonly dereferenceable(32)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.history::DownloadSliceInfo"* %0 to i8*
  %4 = bitcast %"struct.history::DownloadSliceInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 25, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7history17DownloadSliceInfoD2Ev(%"struct.history::DownloadSliceInfo"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7history17DownloadSliceInfoeqERKS0_(%"struct.history::DownloadSliceInfo"* nocapture readonly, %"struct.history::DownloadSliceInfo"* nocapture readonly dereferenceable(32)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.history::DownloadSliceInfo", %"struct.history::DownloadSliceInfo"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.history::DownloadSliceInfo", %"struct.history::DownloadSliceInfo"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.history::DownloadSliceInfo", %"struct.history::DownloadSliceInfo"* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.history::DownloadSliceInfo", %"struct.history::DownloadSliceInfo"* %1, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %14, label %26

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.history::DownloadSliceInfo", %"struct.history::DownloadSliceInfo"* %0, i64 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.history::DownloadSliceInfo", %"struct.history::DownloadSliceInfo"* %1, i64 0, i32 3
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.history::DownloadSliceInfo", %"struct.history::DownloadSliceInfo"* %0, i64 0, i32 4
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = getelementptr inbounds %"struct.history::DownloadSliceInfo", %"struct.history::DownloadSliceInfo"* %1, i64 0, i32 4
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %22, %24
  br label %26

26:                                               ; preds = %20, %14, %8, %2
  %27 = phi i1 [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %25, %20 ]
  ret i1 %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
