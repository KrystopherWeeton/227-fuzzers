; ModuleID = '../../third_party/angle/src/libANGLE/ResourceManager.cpp'
source_filename = "../../third_party/angle/src/libANGLE/ResourceManager.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.gl::FramebufferID" = type { i32 }
%"class.gl::TypedResourceManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap" }
%"class.gl::ResourceManagerBase" = type { i32 (...)**, %"class.gl::HandleAllocator", i64 }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.45", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.47" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i32* }
%"class.gl::ResourceMap" = type { i64, %"class.gl::Buffer"**, %"class.absl::flat_hash_map" }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.53", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.53" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"class.rx::Serial" = type { i64 }
%"struct.gl::BufferID" = type { i32 }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.rx::BufferImpl" = type opaque
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair.666" }
%"struct.std::__1::pair.666" = type { i32, %"class.gl::Buffer"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.gl::TypedResourceManager.250" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.251" }
%"class.gl::ResourceMap.251" = type { i64, %"class.gl::Texture"**, %"class.absl::flat_hash_map.270" }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.253", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.266", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.268", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.253" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"struct.gl::TextureID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.4", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.4" = type { i32 (...)**, i64 }
%"class.egl::LabeledObject" = type { i32 (...)** }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.5", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.std::__1::set.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Version" = type { i32, i32 }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.257", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.254, i8, [3 x i8] }>
%union.anon.254 = type { %"struct.angle::Color" }
%"struct.angle::Color" = type { float, float, float, float }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.259" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.gl::ImageDesc"* }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.264", i64, i64 }
%"class.gl::BindingPointer.264" = type { %"class.angle::BindingPointer.265" }
%"class.angle::BindingPointer.265" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.angle::BitSetT.266" = type { i64 }
%"class.rx::TextureImpl" = type opaque
%"class.egl::Surface" = type opaque
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.267", i32, i32 }
%"class.egl::Display" = type opaque
%"class.rx::StreamProducerImpl" = type opaque
%"class.gl::Context" = type <{ %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::State", i8, i8, i8, i8, [4 x i8], %"class.gl::ErrorSet", %"class.angle::BitSetT.537", [4 x i8], %"class.std::__1::unique_ptr.538", i8*, %"struct.gl::Extensions", [4 x i8], %"class.gl::BindingPointer", %"struct.egl::Config"*, %"class.angle::PackedEnumMap.544", %"class.gl::ResourceMap.546", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.556", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.566", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.576", %"class.gl::HandleAllocator", i8*, i8*, i8*, i8*, %"class.std::__1::vector.586", i8*, %"class.std::__1::vector.586", %"class.std::__1::unique_ptr.593", i8, i8, i8, i8, i32, i8, i8, i8, [5 x i8], %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.egl::Display"*, i8, i8, i8, [5 x i8], %"class.gl::MemoryProgramCache"*, %"class.angle::BitSetT.536", %"class.gl::StateCache", %"class.angle::BitSetT.168", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %struct.Optional.607, %struct.Optional.607, %"class.std::__1::shared_ptr.608", %"class.std::__1::unique_ptr.609", %"class.std::__1::basic_string", i64, %"class.gl::MockOverlay", i8, i8, i8, [4 x i8] }>
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.373", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer.374", %"class.gl::Program"*, %"class.gl::BindingPointer.376", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.378", %"class.gl::VertexArray"*, %"class.angle::BitSetT.148", i64, %"class.angle::PackedEnumMap.406", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.337", %"class.angle::BitSetArray", %"class.std::__1::vector.418", %"class.std::__1::vector.427", %"class.angle::PackedEnumMap.434", %"class.angle::PackedEnumMap.438", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.angle::BitSetArray.447", %"class.angle::BitSetT.448", %"class.angle::BitSetT.168", %"class.gl::BindingPointer.449", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.476", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.168", %"class.angle::BitSetT.535", [4 x i8], %"class.angle::BitSetT.536", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.30", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.28", i32 }
%"struct.std::__1::array.28" = type { [2 x i32] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.29" }
%"struct.std::__1::array.29" = type { [6 x i32] }
%"class.angle::PackedEnumMap.30" = type { %"struct.std::__1::array.31" }
%"struct.std::__1::array.31" = type { [6 x i64] }
%"struct.std::__1::array.32" = type { [3 x i32] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.33" }
%"class.angle::PackedEnumMap.33" = type { %"struct.std::__1::array.34" }
%"struct.std::__1::array.34" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.35" }
%"class.std::__1::set.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.egl::ShareGroup" = type opaque
%"class.gl::BufferManager" = type { %"class.gl::TypedResourceManager" }
%"class.gl::ShaderProgramManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.122" }
%"class.gl::ResourceMap.69" = type { i64, %"class.gl::Shader"**, %"class.absl::flat_hash_map.113" }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.85", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.107", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.std::__1::vector.77", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", i8, [3 x i8], %"class.angle::BitSetT", i32, %struct.Optional, %struct.Optional, %struct.Optional.84, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.79" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.70" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.72" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", i8, i8, %"class.std::__1::vector.70", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.sh::ShaderVariable"* }
%"class.angle::BitSetT" = type { i32 }
%struct.Optional = type { i8, i8 }
%struct.Optional.84 = type { i8, i32 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.absl::flat_hash_map.113" = type { %"class.absl::container_internal::raw_hash_map.114" }
%"class.absl::container_internal::raw_hash_map.114" = type { %"class.absl::container_internal::raw_hash_set.115" }
%"class.absl::container_internal::raw_hash_set.115" = type { i8*, %"union.absl::container_internal::map_slot_type.116"*, i64, i64, %"class.absl::container_internal::CompressedTuple.117" }
%"union.absl::container_internal::map_slot_type.116" = type { %"struct.std::__1::pair.674" }
%"struct.std::__1::pair.674" = type { i32, %"class.gl::Shader"* }
%"class.absl::container_internal::CompressedTuple.117" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.122" = type { i64, %"class.gl::Program"**, %"class.absl::flat_hash_map.241" }
%"class.absl::flat_hash_map.241" = type { %"class.absl::container_internal::raw_hash_map.242" }
%"class.absl::container_internal::raw_hash_map.242" = type { %"class.absl::container_internal::raw_hash_set.243" }
%"class.absl::container_internal::raw_hash_set.243" = type { i8*, %"union.absl::container_internal::map_slot_type.244"*, i64, i64, %"class.absl::container_internal::CompressedTuple.245" }
%"union.absl::container_internal::map_slot_type.244" = type { %"struct.std::__1::pair.667" }
%"struct.std::__1::pair.667" = type { i32, %"class.gl::Program"* }
%"class.absl::container_internal::CompressedTuple.245" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::TextureManager" = type { %"class.gl::TypedResourceManager.250" }
%"class.gl::RenderbufferManager" = type { %"class.gl::TypedResourceManager.279" }
%"class.gl::TypedResourceManager.279" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.280" }
%"class.gl::ResourceMap.280" = type { i64, %"class.gl::Renderbuffer"**, %"class.absl::flat_hash_map.281" }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.absl::flat_hash_map.281" = type { %"class.absl::container_internal::raw_hash_map.282" }
%"class.absl::container_internal::raw_hash_map.282" = type { %"class.absl::container_internal::raw_hash_set.283" }
%"class.absl::container_internal::raw_hash_set.283" = type { i8*, %"union.absl::container_internal::map_slot_type.284"*, i64, i64, %"class.absl::container_internal::CompressedTuple.285" }
%"union.absl::container_internal::map_slot_type.284" = type { %"struct.std::__1::pair.669" }
%"struct.std::__1::pair.669" = type { i32, %"class.gl::Renderbuffer"* }
%"class.absl::container_internal::CompressedTuple.285" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SamplerManager" = type { %"class.gl::TypedResourceManager.290" }
%"class.gl::TypedResourceManager.290" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.291" }
%"class.gl::ResourceMap.291" = type { i64, %"class.gl::Sampler"**, %"class.absl::flat_hash_map.294" }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.293", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.293" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type opaque
%"class.absl::flat_hash_map.294" = type { %"class.absl::container_internal::raw_hash_map.295" }
%"class.absl::container_internal::raw_hash_map.295" = type { %"class.absl::container_internal::raw_hash_set.296" }
%"class.absl::container_internal::raw_hash_set.296" = type { i8*, %"union.absl::container_internal::map_slot_type.297"*, i64, i64, %"class.absl::container_internal::CompressedTuple.298" }
%"union.absl::container_internal::map_slot_type.297" = type { %"struct.std::__1::pair.670" }
%"struct.std::__1::pair.670" = type { i32, %"class.gl::Sampler"* }
%"class.absl::container_internal::CompressedTuple.298" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SyncManager" = type { %"class.gl::TypedResourceManager.303" }
%"class.gl::TypedResourceManager.303" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.304" }
%"class.gl::ResourceMap.304" = type { i64, %"class.gl::Sync"**, %"class.absl::flat_hash_map.305" }
%"class.gl::Sync" = type { %"class.gl::RefCountObject.base.616", %"class.gl::LabeledObject", %"class.rx::SyncImpl"*, %"class.std::__1::basic_string", i32, i32 }
%"class.gl::RefCountObject.base.616" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", i32 }>
%"class.rx::SyncImpl" = type opaque
%"class.absl::flat_hash_map.305" = type { %"class.absl::container_internal::raw_hash_map.306" }
%"class.absl::container_internal::raw_hash_map.306" = type { %"class.absl::container_internal::raw_hash_set.307" }
%"class.absl::container_internal::raw_hash_set.307" = type { i8*, %"union.absl::container_internal::map_slot_type.308"*, i64, i64, %"class.absl::container_internal::CompressedTuple.309" }
%"union.absl::container_internal::map_slot_type.308" = type { %"struct.std::__1::pair.672" }
%"struct.std::__1::pair.672" = type { i32, %"class.gl::Sync"* }
%"class.absl::container_internal::CompressedTuple.309" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::FramebufferManager" = type { %"class.gl::TypedResourceManager.314" }
%"class.gl::TypedResourceManager.314" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.315" }
%"class.gl::ResourceMap.315" = type { i64, %"class.gl::Framebuffer"**, %"class.absl::flat_hash_map.316" }
%"class.absl::flat_hash_map.316" = type { %"class.absl::container_internal::raw_hash_map.317" }
%"class.absl::container_internal::raw_hash_map.317" = type { %"class.absl::container_internal::raw_hash_set.318" }
%"class.absl::container_internal::raw_hash_set.318" = type { i8*, %"union.absl::container_internal::map_slot_type.319"*, i64, i64, %"class.absl::container_internal::CompressedTuple.320" }
%"union.absl::container_internal::map_slot_type.319" = type { %"struct.std::__1::pair.673" }
%"struct.std::__1::pair.673" = type { i32, %"class.gl::Framebuffer"* }
%"class.absl::container_internal::CompressedTuple.320" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramPipelineManager" = type { %"class.gl::TypedResourceManager.325" }
%"class.gl::TypedResourceManager.325" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.326" }
%"class.gl::ResourceMap.326" = type { i64, %"class.gl::ProgramPipeline"**, %"class.absl::flat_hash_map.344" }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.328", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.329", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.337", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.328" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.rx::ProgramPipelineImpl" = type opaque
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.335", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.335" = type { %"struct.std::__1::array.336" }
%"struct.std::__1::array.336" = type { [6 x %"class.gl::Program"*] }
%"class.absl::flat_hash_map.344" = type { %"class.absl::container_internal::raw_hash_map.345" }
%"class.absl::container_internal::raw_hash_map.345" = type { %"class.absl::container_internal::raw_hash_set.346" }
%"class.absl::container_internal::raw_hash_set.346" = type { i8*, %"union.absl::container_internal::map_slot_type.347"*, i64, i64, %"class.absl::container_internal::CompressedTuple.348" }
%"union.absl::container_internal::map_slot_type.347" = type { %"struct.std::__1::pair.671" }
%"struct.std::__1::pair.671" = type { i32, %"class.gl::ProgramPipeline"* }
%"class.absl::container_internal::CompressedTuple.348" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::MemoryObjectManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.353" }
%"class.gl::ResourceMap.353" = type { i64, %"class.gl::MemoryObject"**, %"class.absl::flat_hash_map.354" }
%"class.gl::MemoryObject" = type <{ %"class.gl::RefCountObject.base.618", [4 x i8], %"class.std::__1::unique_ptr.619", i8, i8, [6 x i8] }>
%"class.gl::RefCountObject.base.618" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::MemoryObjectID" }>
%"struct.gl::MemoryObjectID" = type { i32 }
%"class.std::__1::unique_ptr.619" = type { %"class.std::__1::__compressed_pair.620" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621" }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"class.rx::MemoryObjectImpl"* }
%"class.rx::MemoryObjectImpl" = type opaque
%"class.absl::flat_hash_map.354" = type { %"class.absl::container_internal::raw_hash_map.355" }
%"class.absl::container_internal::raw_hash_map.355" = type { %"class.absl::container_internal::raw_hash_set.356" }
%"class.absl::container_internal::raw_hash_set.356" = type { i8*, %"union.absl::container_internal::map_slot_type.357"*, i64, i64, %"class.absl::container_internal::CompressedTuple.358" }
%"union.absl::container_internal::map_slot_type.357" = type { %"struct.std::__1::pair.675" }
%"struct.std::__1::pair.675" = type { i32, %"class.gl::MemoryObject"* }
%"class.absl::container_internal::CompressedTuple.358" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SemaphoreManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.363" }
%"class.gl::ResourceMap.363" = type { i64, %"class.gl::Semaphore"**, %"class.absl::flat_hash_map.364" }
%"class.gl::Semaphore" = type { %"class.gl::RefCountObject.base.628", %"class.std::__1::unique_ptr.629" }
%"class.gl::RefCountObject.base.628" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SemaphoreID" }>
%"struct.gl::SemaphoreID" = type { i32 }
%"class.std::__1::unique_ptr.629" = type { %"class.std::__1::__compressed_pair.630" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.631" }
%"struct.std::__1::__compressed_pair_elem.631" = type { %"class.rx::SemaphoreImpl"* }
%"class.rx::SemaphoreImpl" = type opaque
%"class.absl::flat_hash_map.364" = type { %"class.absl::container_internal::raw_hash_map.365" }
%"class.absl::container_internal::raw_hash_map.365" = type { %"class.absl::container_internal::raw_hash_set.366" }
%"class.absl::container_internal::raw_hash_set.366" = type { i8*, %"union.absl::container_internal::map_slot_type.367"*, i64, i64, %"class.absl::container_internal::CompressedTuple.368" }
%"union.absl::container_internal::map_slot_type.367" = type { %"struct.std::__1::pair.676" }
%"struct.std::__1::pair.676" = type { i32, %"class.gl::Semaphore"* }
%"class.absl::container_internal::CompressedTuple.368" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i64 }
%"struct.std::__1::array.373" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type { %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::FramebufferState", %"class.rx::FramebufferImpl"*, %struct.Optional.642, %"class.std::__1::vector.337", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::BitSetT.643", %"class.angle::BitSetT.147", %struct.Optional.644 }
%"class.gl::FramebufferState" = type { %"struct.gl::FramebufferID", %"class.rx::Serial", %"class.std::__1::basic_string", %"class.std::__1::vector.635", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.angle::BitSetT.147", %"class.std::__1::vector", i32, %"class.angle::BitSetT.147", %"class.angle::BitSetT.148", i32, i32, i32, i8, i32, %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", i8, %"class.angle::BitSetT.536", i8, %"class.gl::FramebufferAttachment", i32, %"struct.gl::Offset" }
%"class.std::__1::vector.635" = type { %"class.std::__1::__vector_base.636" }
%"class.std::__1::__vector_base.636" = type { %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"*, %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638" }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"class.gl::FramebufferAttachment"* }
%"class.gl::FramebufferAttachment" = type { i32, %"class.gl::FramebufferAttachment::Target", %"class.gl::FramebufferAttachmentObject"*, i32, i8, i32, i32 }
%"class.gl::FramebufferAttachment::Target" = type { i32, %"class.gl::ImageIndex" }
%"struct.gl::Offset" = type { i32, i32, i32 }
%"class.rx::FramebufferImpl" = type opaque
%struct.Optional.642 = type { i8, %"struct.gl::FramebufferStatus" }
%"struct.gl::FramebufferStatus" = type { i32, i8* }
%"class.angle::BitSetT.643" = type { i64 }
%struct.Optional.644 = type { i8, %"class.angle::BitSetT.643" }
%"class.gl::BindingPointer.374" = type { %"class.angle::BindingPointer.375" }
%"class.angle::BindingPointer.375" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.235", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.201" }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap.123", i32, %"class.std::__1::vector.125", %"class.std::__1::vector.132", %"class.std::__1::vector.139", %"class.gl::Range", %"class.angle::BitSetT.147", %"class.std::__1::vector", %"class.angle::BitSetT.148", i8, i8, i8, i8, %"class.angle::BitSetT", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"class.angle::PackedEnumMap.123" = type { %"struct.std::__1::array.124" }
%"struct.std::__1::array.124" = type { [6 x %"class.gl::Shader"*] }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.134" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.142" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.141" }>
%"class.angle::BitSetT.141" = type { i8 }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.rx::ProgramImpl" = type opaque
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.226" }
%"class.absl::flat_hash_map.226" = type { %"class.absl::container_internal::raw_hash_map.227" }
%"class.absl::container_internal::raw_hash_map.227" = type { %"class.absl::container_internal::raw_hash_set.228" }
%"class.absl::container_internal::raw_hash_set.228" = type { i8*, %"union.absl::container_internal::map_slot_type.229"*, i64, i64, %"class.absl::container_internal::CompressedTuple.230" }
%"union.absl::container_internal::map_slot_type.229" = type opaque
%"class.absl::container_internal::CompressedTuple.230" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map.149" }
%"class.absl::flat_hash_map.149" = type { %"class.absl::container_internal::raw_hash_map.150" }
%"class.absl::container_internal::raw_hash_map.150" = type { %"class.absl::container_internal::raw_hash_set.151" }
%"class.absl::container_internal::raw_hash_set.151" = type { i8*, %"union.absl::container_internal::map_slot_type.152"*, i64, i64, %"class.absl::container_internal::CompressedTuple.153" }
%"union.absl::container_internal::map_slot_type.152" = type opaque
%"class.absl::container_internal::CompressedTuple.153" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"class.angle::BitSetT.201" = type { i64 }
%"class.gl::BindingPointer.376" = type { %"class.angle::BindingPointer.377" }
%"class.angle::BindingPointer.377" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.141", %"class.angle::BitSetT.141", [6 x i8], %"class.angle::BitSetT.166", i32, [4 x i8], %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"struct.std::__1::array.169", %"struct.std::__1::array.170", %"class.angle::BitSetArray", %"struct.std::__1::array.171", %"struct.std::__1::array.172", %"class.angle::BitSetArray", %"struct.std::__1::array.172", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.132", %"class.std::__1::vector.132", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.173", %"class.std::__1::vector.180", i32, [4 x i8], %"class.std::__1::vector.187", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.194", %"class.angle::BitSetT.201", %"class.std::__1::vector.202", %"class.gl::Range", %"class.std::__1::vector.194", %"class.std::__1::vector.194", %"class.gl::Range", %"class.std::__1::vector.209", %"class.std::__1::vector.216", %"class.std::__1::vector.216", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.225, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::array.169" = type { [96 x i32] }
%"struct.std::__1::array.170" = type { [96 x i8] }
%"struct.std::__1::array.171" = type { [96 x i8] }
%"struct.std::__1::array.172" = type { [96 x %"class.angle::BitSetT.141"] }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.175" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { i32*, i32*, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { i32* }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.189" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.204" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.196" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.211" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.218" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.223" = type { %"struct.std::__1::array.224" }
%"struct.std::__1::array.224" = type { [6 x %"class.std::__1::vector.70"] }
%struct.Optional.225 = type { i8, i8 }
%"class.std::__1::vector.378" = type { %"class.std::__1::__vector_base.379" }
%"class.std::__1::__vector_base.379" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.381" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.380, i32 }
%union.anon.380 = type { [4 x float] }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.400", %"struct.std::__1::array.401", %"struct.std::__1::array.403", %struct.Optional.405, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.337", %"class.angle::BitSetT.166", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.386", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.393", %"class.angle::BitSetT.166", %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166" }
%"class.std::__1::vector.386" = type { %"class.std::__1::__vector_base.387" }
%"class.std::__1::__vector_base.387" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.388" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.264", %"class.angle::ObserverBindingBase" }
%"class.std::__1::vector.393" = type { %"class.std::__1::__vector_base.394" }
%"class.std::__1::__vector_base.394" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.395" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.264", %"class.angle::BitSetT.166" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.400" = type { i64 }
%"struct.std::__1::array.401" = type { [16 x %"class.angle::BitSetT.402"] }
%"class.angle::BitSetT.402" = type { i64 }
%"struct.std::__1::array.403" = type { [16 x %"class.angle::BitSetT.404"] }
%"class.angle::BitSetT.404" = type { i64 }
%struct.Optional.405 = type { i8, %"class.angle::BitSetT.400" }
%"class.rx::VertexArrayImpl" = type opaque
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::BitSetT.148" = type { i64 }
%"class.angle::PackedEnumMap.406" = type { %"struct.std::__1::array.407" }
%"struct.std::__1::array.407" = type { [11 x %"class.std::__1::vector.408"] }
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { %"class.gl::BindingPointer.410"*, %"class.gl::BindingPointer.410"*, %"class.std::__1::__compressed_pair.412" }
%"class.gl::BindingPointer.410" = type { %"class.angle::BindingPointer.411" }
%"class.angle::BindingPointer.411" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.gl::BindingPointer.410"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.417" }
%"struct.std::__1::array.417" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.418" = type { %"class.std::__1::__vector_base.419" }
%"class.std::__1::__vector_base.419" = type { %"class.gl::BindingPointer.420"*, %"class.gl::BindingPointer.420"*, %"class.std::__1::__compressed_pair.422" }
%"class.gl::BindingPointer.420" = type { %"class.angle::BindingPointer.421" }
%"class.angle::BindingPointer.421" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.gl::BindingPointer.420"* }
%"class.std::__1::vector.427" = type { %"class.std::__1::__vector_base.428" }
%"class.std::__1::__vector_base.428" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.429" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.410", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.434" = type { %"struct.std::__1::array.435" }
%"struct.std::__1::array.435" = type { [7 x %"class.gl::BindingPointer.436"] }
%"class.gl::BindingPointer.436" = type { %"class.angle::BindingPointer.437" }
%"class.angle::BindingPointer.437" = type { i32 (...)**, %"class.gl::Query"* }
%"class.gl::Query" = type { %"class.gl::RefCountObject.base.626", %"class.gl::LabeledObject", %"class.rx::QueryImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.626" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::QueryID" }>
%"struct.gl::QueryID" = type { i32 }
%"class.rx::QueryImpl" = type opaque
%"class.angle::PackedEnumMap.438" = type { %"struct.std::__1::array.439" }
%"struct.std::__1::array.439" = type { [13 x %"class.gl::BindingPointer.264"] }
%"class.std::__1::vector.440" = type { %"class.std::__1::__vector_base.441" }
%"class.std::__1::__vector_base.441" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.gl::OffsetBindingPointer"* }
%"class.angle::BitSetArray.447" = type { %"struct.std::__1::array.167" }
%"struct.std::__1::array.167" = type { [2 x %"class.angle::BitSetT.168"] }
%"class.angle::BitSetT.448" = type { i64 }
%"class.gl::BindingPointer.449" = type { %"class.angle::BindingPointer.450" }
%"class.angle::BindingPointer.450" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.452", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.452" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.440" }
%"class.rx::TransformFeedbackImpl" = type opaque
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.462" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.458" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.453" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.462" = type { %"class.std::__1::__vector_base.463" }
%"class.std::__1::__vector_base.463" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.471" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.464" }
%"class.std::__1::vector.464" = type { %"class.std::__1::__vector_base.465" }
%"class.std::__1::__vector_base.465" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.466" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.476" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.166", %"class.std::__1::vector.477", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.485", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.490", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.505", %"class.std::__1::vector.512", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.519", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.528", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.477" = type { %"class.std::__1::__vector_base.478" }
%"class.std::__1::__vector_base.478" = type { %"class.angle::BitSetT.479"*, %"class.angle::BitSetT.479"*, %"class.std::__1::__compressed_pair.480" }
%"class.angle::BitSetT.479" = type opaque
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.angle::BitSetT.479"* }
%"class.std::__1::vector.485" = type { i64*, i64, %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.490" = type { %"class.std::__1::__vector_base.491" }
%"class.std::__1::__vector_base.491" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.492" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.497", i64 }
%"struct.std::__1::array.497" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.498", i32, i32 }
%"class.std::__1::vector.498" = type { %"class.std::__1::__vector_base.499" }
%"class.std::__1::__vector_base.499" = type { float*, float*, %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { float* }
%"class.std::__1::vector.505" = type { %"class.std::__1::__vector_base.506" }
%"class.std::__1::__vector_base.506" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.512" = type { %"class.std::__1::__vector_base.513" }
%"class.std::__1::__vector_base.513" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.514" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.519" = type { %"class.std::__1::__vector_base.520" }
%"class.std::__1::__vector_base.520" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.523" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.521", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.521" = type { %"class.angle::VectorBase.522" }
%"class.angle::VectorBase.522" = type { [4 x float] }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.528" = type { %"class.std::__1::__vector_base.529" }
%"class.std::__1::__vector_base.529" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.530" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.521" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.535" = type { i32 }
%"class.angle::BitSetT.166" = type { i64 }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.167" }
%"class.angle::BitSetT.147" = type { i8 }
%"class.gl::ErrorSet" = type { %"class.gl::Context"*, %"class.std::__1::set.35" }
%"class.angle::BitSetT.537" = type { i32 }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.rx::ContextImpl"* }
%"class.rx::ContextImpl" = type { %"class.rx::GLImplFactory", %"class.gl::State"*, %"class.gl::MemoryProgramCache"*, %"class.gl::ErrorSet"* }
%"class.rx::GLImplFactory" = type { i32 (...)**, %"class.rx::SerialFactoryBase" }
%"class.rx::SerialFactoryBase" = type { i64 }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.91" }
%"class.angle::BindingPointer.91" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.92", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.98" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.98" = type { %"struct.std::__1::array.99" }
%"struct.std::__1::array.99" = type { [6 x %"class.std::__1::vector.100"] }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.102" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.gl::ShCompilerInstance"* }
%"struct.egl::Config" = type opaque
%"class.angle::PackedEnumMap.544" = type { %"struct.std::__1::array.545" }
%"struct.std::__1::array.545" = type { [11 x %"class.gl::BindingPointer.410"] }
%"class.gl::ResourceMap.546" = type { i64, %"class.gl::FenceNV"**, %"class.absl::flat_hash_map.547" }
%"class.gl::FenceNV" = type { i32 (...)**, %"class.rx::FenceNVImpl"*, i8, i8, i32 }
%"class.rx::FenceNVImpl" = type opaque
%"class.absl::flat_hash_map.547" = type { %"class.absl::container_internal::raw_hash_map.548" }
%"class.absl::container_internal::raw_hash_map.548" = type { %"class.absl::container_internal::raw_hash_set.549" }
%"class.absl::container_internal::raw_hash_set.549" = type { i8*, %"union.absl::container_internal::map_slot_type.550"*, i64, i64, %"class.absl::container_internal::CompressedTuple.551" }
%"union.absl::container_internal::map_slot_type.550" = type opaque
%"class.absl::container_internal::CompressedTuple.551" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.556" = type { i64, %"class.gl::Query"**, %"class.absl::flat_hash_map.557" }
%"class.absl::flat_hash_map.557" = type { %"class.absl::container_internal::raw_hash_map.558" }
%"class.absl::container_internal::raw_hash_map.558" = type { %"class.absl::container_internal::raw_hash_set.559" }
%"class.absl::container_internal::raw_hash_set.559" = type { i8*, %"union.absl::container_internal::map_slot_type.560"*, i64, i64, %"class.absl::container_internal::CompressedTuple.561" }
%"union.absl::container_internal::map_slot_type.560" = type opaque
%"class.absl::container_internal::CompressedTuple.561" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.566" = type { i64, %"class.gl::VertexArray"**, %"class.absl::flat_hash_map.567" }
%"class.absl::flat_hash_map.567" = type { %"class.absl::container_internal::raw_hash_map.568" }
%"class.absl::container_internal::raw_hash_map.568" = type { %"class.absl::container_internal::raw_hash_set.569" }
%"class.absl::container_internal::raw_hash_set.569" = type { i8*, %"union.absl::container_internal::map_slot_type.570"*, i64, i64, %"class.absl::container_internal::CompressedTuple.571" }
%"union.absl::container_internal::map_slot_type.570" = type opaque
%"class.absl::container_internal::CompressedTuple.571" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.576" = type { i64, %"class.gl::TransformFeedback"**, %"class.absl::flat_hash_map.577" }
%"class.absl::flat_hash_map.577" = type { %"class.absl::container_internal::raw_hash_map.578" }
%"class.absl::container_internal::raw_hash_map.578" = type { %"class.absl::container_internal::raw_hash_set.579" }
%"class.absl::container_internal::raw_hash_set.579" = type { i8*, %"union.absl::container_internal::map_slot_type.580"*, i64, i64, %"class.absl::container_internal::CompressedTuple.581" }
%"union.absl::container_internal::map_slot_type.580" = type opaque
%"class.absl::container_internal::CompressedTuple.581" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::vector.586" = type { %"class.std::__1::__vector_base.587" }
%"class.std::__1::__vector_base.587" = type { i8**, i8**, %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { i8** }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.gl::GLES1Renderer"* }
%"class.gl::GLES1Renderer" = type opaque
%"class.gl::MemoryProgramCache" = type opaque
%"class.gl::StateCache" = type <{ %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", i8, [7 x i8], i64, i64, i64, i64, i8, [7 x i8], %"class.angle::BitSetT.168", %"class.angle::BitSetArray", %"class.angle::PackedEnumMap.599", %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.603", %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.599" = type { %"struct.std::__1::array.600" }
%"struct.std::__1::array.600" = type { [16 x i8] }
%"class.angle::PackedEnumMap.601" = type { %"struct.std::__1::array.602" }
%"struct.std::__1::array.602" = type { [12 x i8] }
%"class.angle::PackedEnumMap.603" = type { %"struct.std::__1::array.604" }
%"struct.std::__1::array.604" = type { [4 x i8] }
%"class.angle::PackedEnumMap.605" = type { %"struct.std::__1::array.606" }
%"struct.std::__1::array.606" = type { [19 x i32] }
%"class.angle::BitSetT.168" = type { i64 }
%"class.angle::BitSetT.536" = type { i64 }
%"class.std::__1::vector.337" = type { %"class.std::__1::__vector_base.338" }
%"class.std::__1::__vector_base.338" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.angle::ObserverBinding"* }
%struct.Optional.607 = type { i8, %"class.angle::ScratchBuffer" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::shared_ptr.608" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.angle::FrameCapture"* }
%"class.angle::FrameCapture" = type opaque
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }
%"struct.std::__1::array.267" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.268" = type { %"struct.std::__1::array.269", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.269" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.absl::flat_hash_map.270" = type { %"class.absl::container_internal::raw_hash_map.271" }
%"class.absl::container_internal::raw_hash_map.271" = type { %"class.absl::container_internal::raw_hash_set.272" }
%"class.absl::container_internal::raw_hash_set.272" = type { i8*, %"union.absl::container_internal::map_slot_type.273"*, i64, i64, %"class.absl::container_internal::CompressedTuple.274" }
%"union.absl::container_internal::map_slot_type.273" = type { %"struct.std::__1::pair.668" }
%"struct.std::__1::pair.668" = type { i32, %"class.gl::Texture"* }
%"class.absl::container_internal::CompressedTuple.274" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator" = type <{ %"class.gl::ResourceMap"*, i32, [4 x i8], %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Buffer *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Buffer *> > >::const_iterator", %"struct.std::__1::pair", i8, [7 x i8] }>
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Buffer *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Buffer *> > >::const_iterator" = type { %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Buffer *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Buffer *> > >::iterator" }
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Buffer *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Buffer *> > >::iterator" = type { i8*, %union.anon.645 }
%union.anon.645 = type { %"union.absl::container_internal::map_slot_type"* }
%"struct.std::__1::pair" = type { i32, %"class.gl::Buffer"* }
%"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator" = type <{ %"class.gl::ResourceMap.251"*, i32, [4 x i8], %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Texture *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Texture *> > >::const_iterator", %"struct.std::__1::pair.647", i8, [7 x i8] }>
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Texture *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Texture *> > >::const_iterator" = type { %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Texture *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Texture *> > >::iterator" }
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Texture *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Texture *> > >::iterator" = type { i8*, %union.anon.646 }
%union.anon.646 = type { %"union.absl::container_internal::map_slot_type.273"* }
%"struct.std::__1::pair.647" = type { i32, %"class.gl::Texture"* }
%"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator" = type <{ %"class.gl::ResourceMap.280"*, i32, [4 x i8], %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Renderbuffer *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Renderbuffer *> > >::const_iterator", %"struct.std::__1::pair.649", i8, [7 x i8] }>
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Renderbuffer *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Renderbuffer *> > >::const_iterator" = type { %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Renderbuffer *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Renderbuffer *> > >::iterator" }
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Renderbuffer *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Renderbuffer *> > >::iterator" = type { i8*, %union.anon.648 }
%union.anon.648 = type { %"union.absl::container_internal::map_slot_type.284"* }
%"struct.std::__1::pair.649" = type { i32, %"class.gl::Renderbuffer"* }
%"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator" = type <{ %"class.gl::ResourceMap.291"*, i32, [4 x i8], %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Sampler *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Sampler *> > >::const_iterator", %"struct.std::__1::pair.651", i8, [7 x i8] }>
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Sampler *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Sampler *> > >::const_iterator" = type { %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Sampler *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Sampler *> > >::iterator" }
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Sampler *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Sampler *> > >::iterator" = type { i8*, %union.anon.650 }
%union.anon.650 = type { %"union.absl::container_internal::map_slot_type.297"* }
%"struct.std::__1::pair.651" = type { i32, %"class.gl::Sampler"* }
%"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator" = type <{ %"class.gl::ResourceMap.304"*, i32, [4 x i8], %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Sync *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Sync *> > >::const_iterator", %"struct.std::__1::pair.653", i8, [7 x i8] }>
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Sync *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Sync *> > >::const_iterator" = type { %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Sync *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Sync *> > >::iterator" }
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Sync *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Sync *> > >::iterator" = type { i8*, %union.anon.652 }
%union.anon.652 = type { %"union.absl::container_internal::map_slot_type.308"* }
%"struct.std::__1::pair.653" = type { i32, %"class.gl::Sync"* }
%"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator" = type <{ %"class.gl::ResourceMap.315"*, i32, [4 x i8], %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Framebuffer *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Framebuffer *> > >::const_iterator", %"struct.std::__1::pair.655", i8, [7 x i8] }>
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Framebuffer *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Framebuffer *> > >::const_iterator" = type { %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Framebuffer *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Framebuffer *> > >::iterator" }
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::Framebuffer *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::Framebuffer *> > >::iterator" = type { i8*, %union.anon.654 }
%union.anon.654 = type { %"union.absl::container_internal::map_slot_type.319"* }
%"struct.std::__1::pair.655" = type { i32, %"class.gl::Framebuffer"* }
%"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator" = type <{ %"class.gl::ResourceMap.326"*, i32, [4 x i8], %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::ProgramPipeline *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::ProgramPipeline *> > >::const_iterator", %"struct.std::__1::pair.657", i8, [7 x i8] }>
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::ProgramPipeline *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::ProgramPipeline *> > >::const_iterator" = type { %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::ProgramPipeline *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::ProgramPipeline *> > >::iterator" }
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, gl::ProgramPipeline *>, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gl::ProgramPipeline *> > >::iterator" = type { i8*, %union.anon.656 }
%union.anon.656 = type { %"union.absl::container_internal::map_slot_type.347"* }
%"struct.std::__1::pair.657" = type { i32, %"class.gl::ProgramPipeline"* }

$_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEEC5Ev = comdat any

$_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEE12deleteObjectEPKNS_7ContextES3_ = comdat any

$_ZN2gl11ResourceMapINS_6BufferENS_8BufferIDEE5eraseES2_PPS1_ = comdat any

$_ZNK2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEE17isHandleGeneratedES3_ = comdat any

$_ZNK2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEE5beginEv = comdat any

$_ZNK2gl11ResourceMapINS_6BufferENS_8BufferIDEE5beginEv = comdat any

$_ZNK2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEE3endEv = comdat any

$_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEED5Ev = comdat any

$_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEE5resetEPKNS_7ContextE = comdat any

$_ZN2gl11ResourceMapINS_6BufferENS_8BufferIDEE8IteratorppEv = comdat any

$_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEEC5Ev = comdat any

$_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEE12deleteObjectEPKNS_7ContextES3_ = comdat any

$_ZN2gl11ResourceMapINS_7TextureENS_9TextureIDEE5eraseES2_PPS1_ = comdat any

$_ZNK2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEE17isHandleGeneratedES3_ = comdat any

$_ZNK2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEE5beginEv = comdat any

$_ZNK2gl11ResourceMapINS_7TextureENS_9TextureIDEE5beginEv = comdat any

$_ZNK2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEE3endEv = comdat any

$_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEED5Ev = comdat any

$_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEE5resetEPKNS_7ContextE = comdat any

$_ZN2gl11ResourceMapINS_7TextureENS_9TextureIDEE8IteratorppEv = comdat any

$_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEEC5Ev = comdat any

$_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEE12deleteObjectEPKNS_7ContextES3_ = comdat any

$_ZN2gl11ResourceMapINS_12RenderbufferENS_14RenderbufferIDEE5eraseES2_PPS1_ = comdat any

$_ZNK2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEE17isHandleGeneratedES3_ = comdat any

$_ZNK2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEE5beginEv = comdat any

$_ZNK2gl11ResourceMapINS_12RenderbufferENS_14RenderbufferIDEE5beginEv = comdat any

$_ZNK2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEE3endEv = comdat any

$_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEED5Ev = comdat any

$_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEE5resetEPKNS_7ContextE = comdat any

$_ZN2gl11ResourceMapINS_12RenderbufferENS_14RenderbufferIDEE8IteratorppEv = comdat any

$_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEEC5Ev = comdat any

$_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEE12deleteObjectEPKNS_7ContextES3_ = comdat any

$_ZN2gl11ResourceMapINS_7SamplerENS_9SamplerIDEE5eraseES2_PPS1_ = comdat any

$_ZNK2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEE17isHandleGeneratedES3_ = comdat any

$_ZNK2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEE5beginEv = comdat any

$_ZNK2gl11ResourceMapINS_7SamplerENS_9SamplerIDEE5beginEv = comdat any

$_ZNK2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEE3endEv = comdat any

$_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEED5Ev = comdat any

$_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEE5resetEPKNS_7ContextE = comdat any

$_ZN2gl11ResourceMapINS_7SamplerENS_9SamplerIDEE8IteratorppEv = comdat any

$_ZN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjEC5Ev = comdat any

$_ZN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjE12deleteObjectEPKNS_7ContextEj = comdat any

$_ZN2gl11ResourceMapINS_4SyncEjE5eraseEjPPS1_ = comdat any

$_ZNK2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjE17isHandleGeneratedEj = comdat any

$_ZNK2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjE5beginEv = comdat any

$_ZNK2gl11ResourceMapINS_4SyncEjE5beginEv = comdat any

$_ZNK2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjE3endEv = comdat any

$_ZN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjED5Ev = comdat any

$_ZN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjE5resetEPKNS_7ContextE = comdat any

$_ZN2gl11ResourceMapINS_4SyncEjE8IteratorppEv = comdat any

$_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEEC5Ev = comdat any

$_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEE12deleteObjectEPKNS_7ContextES3_ = comdat any

$_ZN2gl11ResourceMapINS_11FramebufferENS_13FramebufferIDEE5eraseES2_PPS1_ = comdat any

$_ZNK2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEE17isHandleGeneratedES3_ = comdat any

$_ZNK2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEE5beginEv = comdat any

$_ZNK2gl11ResourceMapINS_11FramebufferENS_13FramebufferIDEE5beginEv = comdat any

$_ZNK2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEE3endEv = comdat any

$_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEED5Ev = comdat any

$_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEE5resetEPKNS_7ContextE = comdat any

$_ZN2gl11ResourceMapINS_11FramebufferENS_13FramebufferIDEE8IteratorppEv = comdat any

$_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEEC5Ev = comdat any

$_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEE12deleteObjectEPKNS_7ContextES3_ = comdat any

$_ZN2gl11ResourceMapINS_15ProgramPipelineENS_17ProgramPipelineIDEE5eraseES2_PPS1_ = comdat any

$_ZNK2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEE17isHandleGeneratedES3_ = comdat any

$_ZNK2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEE5beginEv = comdat any

$_ZNK2gl11ResourceMapINS_15ProgramPipelineENS_17ProgramPipelineIDEE5beginEv = comdat any

$_ZNK2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEE3endEv = comdat any

$_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEED5Ev = comdat any

$_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEE5resetEPKNS_7ContextE = comdat any

$_ZN2gl11ResourceMapINS_15ProgramPipelineENS_17ProgramPipelineIDEE8IteratorppEv = comdat any

$_ZN2gl11ResourceMapINS_6ShaderENS_15ShaderProgramIDEE6assignES2_PS1_ = comdat any

$_ZN2gl20ShaderProgramManager12deleteObjectINS_6ShaderENS_15ShaderProgramIDEEEvPKNS_7ContextEPNS_11ResourceMapIT_T0_EES9_ = comdat any

$_ZN2gl11ResourceMapINS_7ProgramENS_15ShaderProgramIDEE6assignES2_PS1_ = comdat any

$_ZN2gl20ShaderProgramManager12deleteObjectINS_7ProgramENS_15ShaderProgramIDEEEvPKNS_7ContextEPNS_11ResourceMapIT_T0_EES9_ = comdat any

$_ZN2gl11ResourceMapINS_4SyncEjE6assignEjPS1_ = comdat any

$_ZN2gl11ResourceMapINS_11FramebufferENS_13FramebufferIDEE6assignES2_PS1_ = comdat any

$_ZN2gl11ResourceMapINS_12MemoryObjectENS_14MemoryObjectIDEE6assignES2_PS1_ = comdat any

$_ZN2gl11ResourceMapINS_12MemoryObjectENS_14MemoryObjectIDEE5eraseES2_PPS1_ = comdat any

$_ZN2gl11ResourceMapINS_9SemaphoreENS_11SemaphoreIDEE6assignES2_PS1_ = comdat any

$_ZN2gl11ResourceMapINS_9SemaphoreENS_11SemaphoreIDEE5eraseES2_PPS1_ = comdat any

$_ZN2gl11ResourceMapINS_6BufferENS_8BufferIDEE6assignES2_PS1_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6ShaderEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6ShaderEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6ShaderEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN2gl11ResourceMapINS_6ShaderENS_15ShaderProgramIDEE5eraseES2_PPS1_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7ProgramEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7ProgramEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7ProgramEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN2gl11ResourceMapINS_7ProgramENS_15ShaderProgramIDEE5eraseES2_PPS1_ = comdat any

$_ZN2gl11ResourceMapINS_7TextureENS_9TextureIDEE6assignES2_PS1_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN2gl11ResourceMapINS_12RenderbufferENS_14RenderbufferIDEE6assignES2_PS1_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN2gl11ResourceMapINS_7SamplerENS_9SamplerIDEE6assignES2_PS1_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl4SyncEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl4SyncEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl4SyncEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN2gl11ResourceMapINS_15ProgramPipelineENS_17ProgramPipelineIDEE6assignES2_PS1_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12MemoryObjectEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12MemoryObjectEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12MemoryObjectEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl9SemaphoreEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl9SemaphoreEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl9SemaphoreEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZTVN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEEE = comdat any

$_ZTVN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEEE = comdat any

$_ZTVN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEEE = comdat any

$_ZTVN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEEE = comdat any

$_ZTVN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjEE = comdat any

$_ZTVN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEEE = comdat any

$_ZTVN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEEE = comdat any

$_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = comdat any

@_ZTVN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEEE = weak_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::TypedResourceManager"*, %"class.gl::Context"*)* @_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEE5resetEPKNS_7ContextE to i8*), i8* bitcast (void (%"class.gl::TypedResourceManager"*)* @_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEED2Ev to i8*), i8* bitcast (void (%"class.gl::TypedResourceManager"*)* @_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEED0Ev to i8*)] }, comdat, align 8
@_ZTVN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEEE = weak_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::TypedResourceManager.250"*, %"class.gl::Context"*)* @_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEE5resetEPKNS_7ContextE to i8*), i8* bitcast (void (%"class.gl::TypedResourceManager.250"*)* @_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEED2Ev to i8*), i8* bitcast (void (%"class.gl::TypedResourceManager.250"*)* @_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEED0Ev to i8*)] }, comdat, align 8
@_ZTVN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEEE = weak_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::TypedResourceManager.279"*, %"class.gl::Context"*)* @_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEE5resetEPKNS_7ContextE to i8*), i8* bitcast (void (%"class.gl::TypedResourceManager.279"*)* @_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEED2Ev to i8*), i8* bitcast (void (%"class.gl::TypedResourceManager.279"*)* @_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEED0Ev to i8*)] }, comdat, align 8
@_ZTVN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEEE = weak_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::TypedResourceManager.290"*, %"class.gl::Context"*)* @_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEE5resetEPKNS_7ContextE to i8*), i8* bitcast (void (%"class.gl::TypedResourceManager.290"*)* @_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEED2Ev to i8*), i8* bitcast (void (%"class.gl::TypedResourceManager.290"*)* @_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEED0Ev to i8*)] }, comdat, align 8
@_ZTVN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjEE = weak_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::TypedResourceManager.303"*, %"class.gl::Context"*)* @_ZN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjE5resetEPKNS_7ContextE to i8*), i8* bitcast (void (%"class.gl::TypedResourceManager.303"*)* @_ZN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjED2Ev to i8*), i8* bitcast (void (%"class.gl::TypedResourceManager.303"*)* @_ZN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjED0Ev to i8*)] }, comdat, align 8
@_ZTVN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEEE = weak_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::TypedResourceManager.314"*, %"class.gl::Context"*)* @_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEE5resetEPKNS_7ContextE to i8*), i8* bitcast (void (%"class.gl::TypedResourceManager.314"*)* @_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEED2Ev to i8*), i8* bitcast (void (%"class.gl::TypedResourceManager.314"*)* @_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEED0Ev to i8*)] }, comdat, align 8
@_ZTVN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEEE = weak_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::TypedResourceManager.325"*, %"class.gl::Context"*)* @_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEE5resetEPKNS_7ContextE to i8*), i8* bitcast (void (%"class.gl::TypedResourceManager.325"*)* @_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEED2Ev to i8*), i8* bitcast (void (%"class.gl::TypedResourceManager.325"*)* @_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEED0Ev to i8*)] }, comdat, align 8
@_ZTVN2gl19ResourceManagerBaseE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.gl::ResourceManagerBase"*)* @_ZN2gl19ResourceManagerBaseD2Ev to i8*), i8* bitcast (void (%"class.gl::ResourceManagerBase"*)* @_ZN2gl19ResourceManagerBaseD0Ev to i8*)] }, align 8
@_ZTVN2gl20ShaderProgramManagerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::ShaderProgramManager"*, %"class.gl::Context"*)* @_ZN2gl20ShaderProgramManager5resetEPKNS_7ContextE to i8*), i8* bitcast (void (%"class.gl::ShaderProgramManager"*)* @_ZN2gl20ShaderProgramManagerD2Ev to i8*), i8* bitcast (void (%"class.gl::ShaderProgramManager"*)* @_ZN2gl20ShaderProgramManagerD0Ev to i8*)] }, align 8
@_ZN2gl11Framebuffer29kDefaultDrawFramebufferHandleE = external local_unnamed_addr global %"struct.gl::FramebufferID", align 4
@_ZTVN2gl19MemoryObjectManagerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::MemoryObjectManager"*, %"class.gl::Context"*)* @_ZN2gl19MemoryObjectManager5resetEPKNS_7ContextE to i8*), i8* bitcast (void (%"class.gl::MemoryObjectManager"*)* @_ZN2gl19MemoryObjectManagerD2Ev to i8*), i8* bitcast (void (%"class.gl::MemoryObjectManager"*)* @_ZN2gl19MemoryObjectManagerD0Ev to i8*)] }, align 8
@_ZTVN2gl16SemaphoreManagerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::SemaphoreManager"*, %"class.gl::Context"*)* @_ZN2gl16SemaphoreManager5resetEPKNS_7ContextE to i8*), i8* bitcast (void (%"class.gl::SemaphoreManager"*)* @_ZN2gl16SemaphoreManagerD2Ev to i8*), i8* bitcast (void (%"class.gl::SemaphoreManager"*)* @_ZN2gl16SemaphoreManagerD0Ev to i8*)] }, align 8
@_ZTVN2gl13BufferManagerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::TypedResourceManager"*, %"class.gl::Context"*)* @_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEE5resetEPKNS_7ContextE to i8*), i8* bitcast (void (%"class.gl::BufferManager"*)* @_ZN2gl13BufferManagerD2Ev to i8*), i8* bitcast (void (%"class.gl::BufferManager"*)* @_ZN2gl13BufferManagerD0Ev to i8*)] }, align 8
@_ZTVN2gl14TextureManagerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::TypedResourceManager.250"*, %"class.gl::Context"*)* @_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEE5resetEPKNS_7ContextE to i8*), i8* bitcast (void (%"class.gl::TextureManager"*)* @_ZN2gl14TextureManagerD2Ev to i8*), i8* bitcast (void (%"class.gl::TextureManager"*)* @_ZN2gl14TextureManagerD0Ev to i8*)] }, align 8
@_ZTVN2gl19RenderbufferManagerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::TypedResourceManager.279"*, %"class.gl::Context"*)* @_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEE5resetEPKNS_7ContextE to i8*), i8* bitcast (void (%"class.gl::RenderbufferManager"*)* @_ZN2gl19RenderbufferManagerD2Ev to i8*), i8* bitcast (void (%"class.gl::RenderbufferManager"*)* @_ZN2gl19RenderbufferManagerD0Ev to i8*)] }, align 8
@_ZTVN2gl14SamplerManagerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::TypedResourceManager.290"*, %"class.gl::Context"*)* @_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEE5resetEPKNS_7ContextE to i8*), i8* bitcast (void (%"class.gl::SamplerManager"*)* @_ZN2gl14SamplerManagerD2Ev to i8*), i8* bitcast (void (%"class.gl::SamplerManager"*)* @_ZN2gl14SamplerManagerD0Ev to i8*)] }, align 8
@_ZTVN2gl11SyncManagerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::TypedResourceManager.303"*, %"class.gl::Context"*)* @_ZN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjE5resetEPKNS_7ContextE to i8*), i8* bitcast (void (%"class.gl::SyncManager"*)* @_ZN2gl11SyncManagerD2Ev to i8*), i8* bitcast (void (%"class.gl::SyncManager"*)* @_ZN2gl11SyncManagerD0Ev to i8*)] }, align 8
@_ZTVN2gl18FramebufferManagerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::TypedResourceManager.314"*, %"class.gl::Context"*)* @_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEE5resetEPKNS_7ContextE to i8*), i8* bitcast (void (%"class.gl::FramebufferManager"*)* @_ZN2gl18FramebufferManagerD2Ev to i8*), i8* bitcast (void (%"class.gl::FramebufferManager"*)* @_ZN2gl18FramebufferManagerD0Ev to i8*)] }, align 8
@_ZTVN2gl22ProgramPipelineManagerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::TypedResourceManager.325"*, %"class.gl::Context"*)* @_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEE5resetEPKNS_7ContextE to i8*), i8* bitcast (void (%"class.gl::ProgramPipelineManager"*)* @_ZN2gl22ProgramPipelineManagerD2Ev to i8*), i8* bitcast (void (%"class.gl::ProgramPipelineManager"*)* @_ZN2gl22ProgramPipelineManagerD0Ev to i8*)] }, align 8
@_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = linkonce_odr hidden constant [16 x i8] c"\FF\80\80\80\80\80\80\80\80\80\80\80\80\80\80\80", comdat, align 16
@_ZN4absl13hash_internal15MixingHashState5kSeedE = external local_unnamed_addr constant i8*, align 8

@_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.gl::TypedResourceManager"*), void (%"class.gl::TypedResourceManager"*)* @_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEEC2Ev
@_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEED1Ev = weak_odr hidden unnamed_addr alias void (%"class.gl::TypedResourceManager"*), void (%"class.gl::TypedResourceManager"*)* @_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEED2Ev
@_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.gl::TypedResourceManager.250"*), void (%"class.gl::TypedResourceManager.250"*)* @_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEEC2Ev
@_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEED1Ev = weak_odr hidden unnamed_addr alias void (%"class.gl::TypedResourceManager.250"*), void (%"class.gl::TypedResourceManager.250"*)* @_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEED2Ev
@_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.gl::TypedResourceManager.279"*), void (%"class.gl::TypedResourceManager.279"*)* @_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEEC2Ev
@_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEED1Ev = weak_odr hidden unnamed_addr alias void (%"class.gl::TypedResourceManager.279"*), void (%"class.gl::TypedResourceManager.279"*)* @_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEED2Ev
@_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.gl::TypedResourceManager.290"*), void (%"class.gl::TypedResourceManager.290"*)* @_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEEC2Ev
@_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEED1Ev = weak_odr hidden unnamed_addr alias void (%"class.gl::TypedResourceManager.290"*), void (%"class.gl::TypedResourceManager.290"*)* @_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEED2Ev
@_ZN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.gl::TypedResourceManager.303"*), void (%"class.gl::TypedResourceManager.303"*)* @_ZN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjEC2Ev
@_ZN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjED1Ev = weak_odr hidden unnamed_addr alias void (%"class.gl::TypedResourceManager.303"*), void (%"class.gl::TypedResourceManager.303"*)* @_ZN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjED2Ev
@_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.gl::TypedResourceManager.314"*), void (%"class.gl::TypedResourceManager.314"*)* @_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEEC2Ev
@_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEED1Ev = weak_odr hidden unnamed_addr alias void (%"class.gl::TypedResourceManager.314"*), void (%"class.gl::TypedResourceManager.314"*)* @_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEED2Ev
@_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.gl::TypedResourceManager.325"*), void (%"class.gl::TypedResourceManager.325"*)* @_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEEC2Ev
@_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEED1Ev = weak_odr hidden unnamed_addr alias void (%"class.gl::TypedResourceManager.325"*), void (%"class.gl::TypedResourceManager.325"*)* @_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEED2Ev
@_ZN2gl19ResourceManagerBaseD1Ev = hidden unnamed_addr alias void (%"class.gl::ResourceManagerBase"*), void (%"class.gl::ResourceManagerBase"*)* @_ZN2gl19ResourceManagerBaseD2Ev
@_ZN2gl13BufferManagerD1Ev = hidden unnamed_addr alias void (%"class.gl::BufferManager"*), void (%"class.gl::BufferManager"*)* @_ZN2gl13BufferManagerD2Ev
@_ZN2gl20ShaderProgramManagerC1Ev = hidden unnamed_addr alias void (%"class.gl::ShaderProgramManager"*), void (%"class.gl::ShaderProgramManager"*)* @_ZN2gl20ShaderProgramManagerC2Ev
@_ZN2gl20ShaderProgramManagerD1Ev = hidden unnamed_addr alias void (%"class.gl::ShaderProgramManager"*), void (%"class.gl::ShaderProgramManager"*)* @_ZN2gl20ShaderProgramManagerD2Ev
@_ZN2gl14TextureManagerD1Ev = hidden unnamed_addr alias void (%"class.gl::TextureManager"*), void (%"class.gl::TextureManager"*)* @_ZN2gl14TextureManagerD2Ev
@_ZN2gl19RenderbufferManagerD1Ev = hidden unnamed_addr alias void (%"class.gl::RenderbufferManager"*), void (%"class.gl::RenderbufferManager"*)* @_ZN2gl19RenderbufferManagerD2Ev
@_ZN2gl14SamplerManagerD1Ev = hidden unnamed_addr alias void (%"class.gl::SamplerManager"*), void (%"class.gl::SamplerManager"*)* @_ZN2gl14SamplerManagerD2Ev
@_ZN2gl11SyncManagerD1Ev = hidden unnamed_addr alias void (%"class.gl::SyncManager"*), void (%"class.gl::SyncManager"*)* @_ZN2gl11SyncManagerD2Ev
@_ZN2gl18FramebufferManagerD1Ev = hidden unnamed_addr alias void (%"class.gl::FramebufferManager"*), void (%"class.gl::FramebufferManager"*)* @_ZN2gl18FramebufferManagerD2Ev
@_ZN2gl22ProgramPipelineManagerD1Ev = hidden unnamed_addr alias void (%"class.gl::ProgramPipelineManager"*), void (%"class.gl::ProgramPipelineManager"*)* @_ZN2gl22ProgramPipelineManagerD2Ev
@_ZN2gl19MemoryObjectManagerC1Ev = hidden unnamed_addr alias void (%"class.gl::MemoryObjectManager"*), void (%"class.gl::MemoryObjectManager"*)* @_ZN2gl19MemoryObjectManagerC2Ev
@_ZN2gl19MemoryObjectManagerD1Ev = hidden unnamed_addr alias void (%"class.gl::MemoryObjectManager"*), void (%"class.gl::MemoryObjectManager"*)* @_ZN2gl19MemoryObjectManagerD2Ev
@_ZN2gl16SemaphoreManagerC1Ev = hidden unnamed_addr alias void (%"class.gl::SemaphoreManager"*), void (%"class.gl::SemaphoreManager"*)* @_ZN2gl16SemaphoreManagerC2Ev
@_ZN2gl16SemaphoreManagerD1Ev = hidden unnamed_addr alias void (%"class.gl::SemaphoreManager"*), void (%"class.gl::SemaphoreManager"*)* @_ZN2gl16SemaphoreManagerD2Ev

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #0

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEEC2Ev(%"class.gl::TypedResourceManager"*) unnamed_addr #1 comdat($_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorC1Ev(%"class.gl::HandleAllocator"* %3) #11
  %4 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = bitcast i64* %4 to <2 x i64>*
  store <2 x i64> <i64 1, i64 32>, <2 x i64>* %5, align 8
  %6 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 1
  %7 = tail call i8* @_Znam(i64 256) #14
  %8 = bitcast %"class.gl::Buffer"*** %6 to i8**
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %11 = bitcast %"union.absl::container_internal::map_slot_type"** %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -1, i64 256, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19ResourceManagerBaseC2Ev(%"class.gl::ResourceManagerBase"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::ResourceManagerBase", %"class.gl::ResourceManagerBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::ResourceManagerBase", %"class.gl::ResourceManagerBase"* %0, i64 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorC1Ev(%"class.gl::HandleAllocator"* %3) #11
  %4 = getelementptr inbounds %"class.gl::ResourceManagerBase", %"class.gl::ResourceManagerBase"* %0, i64 0, i32 2
  store i64 1, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEE12deleteObjectEPKNS_7ContextES3_(%"class.gl::TypedResourceManager"*, %"class.gl::Context"*, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.gl::Buffer"*, align 8
  %5 = bitcast %"class.gl::Buffer"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1
  %7 = call zeroext i1 @_ZN2gl11ResourceMapINS_6BufferENS_8BufferIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap"* %6, i32 %2, %"class.gl::Buffer"** nonnull %4)
  br i1 %7, label %8, label %26

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 0, i32 1
  call void @_ZN2gl15HandleAllocator7releaseEj(%"class.gl::HandleAllocator"* %9, i32 %2) #11
  %10 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %4, align 8
  %11 = icmp eq %"class.gl::Buffer"* %10, null
  br i1 %11, label %26, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %10, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %10, i64 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, -1
  store i64 %16, i64* %14, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %26

18:                                               ; preds = %12
  %19 = bitcast %"class.gl::Buffer"* %10 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %20 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %19, align 8
  %21 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %20, align 8
  call void %21(%"class.angle::RefCountObject"* %13, %"class.gl::Context"* %1) #11
  %22 = bitcast %"class.gl::Buffer"* %10 to void (%"class.angle::RefCountObject"*)***
  %23 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %23, i64 2
  %25 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %24, align 8
  call void %25(%"class.angle::RefCountObject"* nonnull %13) #11
  br label %26

26:                                               ; preds = %18, %12, %8, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2gl11ResourceMapINS_6BufferENS_8BufferIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap"*, i32, %"class.gl::Buffer"**) local_unnamed_addr #3 comdat align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %4
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %0, i64 0, i32 1
  %10 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %9, align 8
  %11 = getelementptr inbounds %"class.gl::Buffer"*, %"class.gl::Buffer"** %10, i64 %4
  %12 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %11, align 8
  %13 = icmp eq %"class.gl::Buffer"* %12, inttoptr (i64 -1 to %"class.gl::Buffer"*)
  br i1 %13, label %134, label %14

14:                                               ; preds = %8
  %15 = ptrtoint %"class.gl::Buffer"* %12 to i64
  %16 = bitcast %"class.gl::Buffer"** %2 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.gl::Buffer"* inttoptr (i64 -1 to %"class.gl::Buffer"*), %"class.gl::Buffer"** %11, align 8
  br label %134

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %4
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %18, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %17
  %40 = phi i64 [ %33, %17 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %17 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #11, !range !2
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !3

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %134, !prof !4

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #11
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !3

77:                                               ; preds = %72
  tail call void @llvm.trap() #11
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %51, i64 %57, i32 0, i32 1
  %80 = bitcast %"class.gl::Buffer"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.gl::Buffer"** %2 to i64*
  store i64 %81, i64* %82, align 8
  %83 = load i8, i8* %73, align 1
  %84 = icmp sgt i8 %83, -1
  br i1 %84, label %86, label %85, !prof !3

85:                                               ; preds = %78
  tail call void @llvm.trap() #11
  unreachable

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, -1
  store i64 %89, i64* %87, align 8
  %90 = bitcast %"class.absl::container_internal::raw_hash_set"* %18 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = ptrtoint i8* %73 to i64
  %93 = sub i64 %92, %91
  %94 = add i64 %93, -16
  %95 = load i64, i64* %28, align 8
  %96 = and i64 %94, %95
  %97 = bitcast i8* %73 to <16 x i8>*
  %98 = load <16 x i8>, <16 x i8>* %97, align 1
  %99 = icmp eq <16 x i8> %98, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %100 = bitcast <16 x i1> %99 to i16
  %101 = inttoptr i64 %91 to i8*
  %102 = getelementptr inbounds i8, i8* %101, i64 %96
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1
  %105 = icmp eq <16 x i8> %104, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %106 = bitcast <16 x i1> %105 to i16
  %107 = icmp ne i16 %106, 0
  %108 = icmp ne i16 %100, 0
  %109 = and i1 %108, %107
  br i1 %109, label %110, label %120

110:                                              ; preds = %86
  %111 = zext i16 %100 to i32
  %112 = zext i16 %106 to i32
  %113 = tail call i32 @llvm.cttz.i32(i32 %111, i1 false) #11, !range !2
  %114 = shl nuw i32 %112, 16
  %115 = tail call i32 @llvm.ctlz.i32(i32 %114, i1 false) #11, !range !2
  %116 = add nuw nsw i32 %115, %113
  %117 = icmp ult i32 %116, 16
  %118 = zext i1 %117 to i64
  %119 = select i1 %117, i8 -128, i8 -2
  br label %120

120:                                              ; preds = %86, %110
  %121 = phi i64 [ 0, %86 ], [ %118, %110 ]
  %122 = phi i8 [ -2, %86 ], [ %119, %110 ]
  %123 = getelementptr inbounds i8, i8* %101, i64 %93
  store i8 %122, i8* %123, align 1
  %124 = load i8*, i8** %26, align 8
  %125 = add i64 %93, -15
  %126 = load i64, i64* %28, align 8
  %127 = and i64 %126, %125
  %128 = and i64 %126, 15
  %129 = add i64 %127, %128
  %130 = getelementptr inbounds i8, i8* %124, i64 %129
  store i8 %122, i8* %130, align 1
  %131 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, %121
  store i64 %133, i64* %131, align 8
  br label %134

134:                                              ; preds = %65, %14, %120, %8
  %135 = phi i1 [ false, %8 ], [ true, %120 ], [ true, %14 ], [ false, %65 ]
  ret i1 %135
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN2gl15HandleAllocator7releaseEj(%"class.gl::HandleAllocator"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13BufferManager12DeleteObjectEPKNS_7ContextEPNS_6BufferE(%"class.gl::Context"*, %"class.gl::Buffer"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %1, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  store i64 %6, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %18

8:                                                ; preds = %2
  %9 = bitcast %"class.gl::Buffer"* %1 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %10 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %9, align 8
  %11 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %10, align 8
  tail call void %11(%"class.angle::RefCountObject"* %3, %"class.gl::Context"* %0) #11
  %12 = icmp eq %"class.gl::Buffer"* %1, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.gl::Buffer"* %1 to void (%"class.angle::RefCountObject"*)***
  %15 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %15, i64 2
  %17 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %16, align 8
  tail call void %17(%"class.angle::RefCountObject"* nonnull %3) #11
  br label %18

18:                                               ; preds = %2, %8, %13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEE17isHandleGeneratedES3_(%"class.gl::TypedResourceManager"*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %78, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %5
  br i1 %8, label %9, label %15

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 1
  %11 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %10, align 8
  %12 = getelementptr inbounds %"class.gl::Buffer"*, %"class.gl::Buffer"** %11, i64 %5
  %13 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %12, align 8
  %14 = icmp ne %"class.gl::Buffer"* %13, inttoptr (i64 -1 to %"class.gl::Buffer"*)
  br label %78

15:                                               ; preds = %4
  %16 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %17 = add i64 %16, %5
  %18 = zext i64 %17 to i128
  %19 = mul nuw i128 %18, 11376068507788127593
  %20 = lshr i128 %19, 64
  %21 = xor i128 %20, %19
  %22 = trunc i128 %21 to i64
  %23 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %26 = load i64, i64* %25, align 8
  %27 = lshr i64 %22, 7
  %28 = ptrtoint i8* %24 to i64
  %29 = lshr i64 %28, 12
  %30 = xor i64 %27, %29
  %31 = trunc i128 %21 to i8
  %32 = and i8 %31, 127
  %33 = insertelement <16 x i8> undef, i8 %32, i32 0
  %34 = shufflevector <16 x i8> %33, <16 x i8> undef, <16 x i32> zeroinitializer
  %35 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %36

36:                                               ; preds = %66, %15
  %37 = phi i64 [ %30, %15 ], [ %68, %66 ]
  %38 = phi i64 [ 0, %15 ], [ %67, %66 ]
  %39 = and i64 %37, %26
  %40 = getelementptr inbounds i8, i8* %24, i64 %39
  %41 = bitcast i8* %40 to <16 x i8>*
  %42 = load <16 x i8>, <16 x i8>* %41, align 1
  %43 = icmp eq <16 x i8> %34, %42
  %44 = bitcast <16 x i1> %43 to i16
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %62, label %46

46:                                               ; preds = %36
  %47 = zext i16 %44 to i32
  %48 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %35, align 8
  br label %49

49:                                               ; preds = %58, %46
  %50 = phi i32 [ %47, %46 ], [ %60, %58 ]
  %51 = tail call i32 @llvm.cttz.i32(i32 %50, i1 false) #11, !range !2
  %52 = zext i32 %51 to i64
  %53 = add i64 %39, %52
  %54 = and i64 %53, %26
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %48, i64 %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %1
  br i1 %57, label %69, label %58, !prof !3

58:                                               ; preds = %49
  %59 = add i32 %50, -1
  %60 = and i32 %59, %50
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %49

62:                                               ; preds = %58, %36
  %63 = icmp eq <16 x i8> %42, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %64 = bitcast <16 x i1> %63 to i16
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %66, label %75, !prof !4

66:                                               ; preds = %62
  %67 = add i64 %38, 16
  %68 = add i64 %67, %39
  br label %36

69:                                               ; preds = %49
  %70 = getelementptr inbounds i8, i8* %24, i64 %54
  %71 = icmp ne i8* %70, null
  tail call void @llvm.assume(i1 %71) #11
  %72 = load i8, i8* %70, align 1
  %73 = icmp sgt i8 %72, -1
  br i1 %73, label %75, label %74, !prof !3

74:                                               ; preds = %69
  tail call void @llvm.trap() #11
  unreachable

75:                                               ; preds = %62, %69
  %76 = phi i8* [ %70, %69 ], [ null, %62 ]
  %77 = icmp ne i8* %76, null
  br label %78

78:                                               ; preds = %75, %9, %2
  %79 = phi i1 [ true, %2 ], [ %14, %9 ], [ %77, %75 ]
  ret i1 %79
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEE5beginEv(%"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* noalias sret, %"class.gl::TypedResourceManager"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %1, i64 0, i32 1
  tail call void @_ZNK2gl11ResourceMapINS_6BufferENS_8BufferIDEE5beginEv(%"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* sret %0, %"class.gl::ResourceMap"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2gl11ResourceMapINS_6BufferENS_8BufferIDEE5beginEv(%"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* noalias sret, %"class.gl::ResourceMap"*) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %1, i64 0, i32 1
  %8 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %7, align 8
  br label %9

9:                                                ; preds = %14, %6
  %10 = phi i64 [ 0, %6 ], [ %15, %14 ]
  %11 = getelementptr inbounds %"class.gl::Buffer"*, %"class.gl::Buffer"** %8, i64 %10
  %12 = bitcast %"class.gl::Buffer"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  switch i64 %13, label %17 [
    i64 -1, label %14
    i64 0, label %14
  ]

14:                                               ; preds = %9, %9
  %15 = add nuw i64 %10, 1
  %16 = icmp eq i64 %15, %4
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %14, %2
  %18 = phi i64 [ 0, %2 ], [ %10, %9 ], [ %4, %14 ]
  %19 = trunc i64 %18 to i32
  %20 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %23 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %22, align 8
  %24 = icmp ne i8* %21, null
  tail call void @llvm.assume(i1 %24) #11
  %25 = load i8, i8* %21, align 1
  %26 = icmp slt i8 %25, -1
  br i1 %26, label %27, label %42

27:                                               ; preds = %17, %27
  %28 = phi %"union.absl::container_internal::map_slot_type"* [ %39, %27 ], [ %23, %17 ]
  %29 = phi i8* [ %38, %27 ], [ %21, %17 ]
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp slt <16 x i8> %31, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %33 = bitcast <16 x i1> %32 to i16
  %34 = zext i16 %33 to i32
  %35 = add nuw nsw i32 %34, 1
  %36 = tail call i32 @llvm.cttz.i32(i32 %35, i1 true) #11, !range !2
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %29, i64 %37
  %39 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %28, i64 %37
  %40 = load i8, i8* %38, align 1
  %41 = icmp slt i8 %40, -1
  br i1 %41, label %27, label %42

42:                                               ; preds = %27, %17
  %43 = phi %"union.absl::container_internal::map_slot_type"* [ %23, %17 ], [ %39, %27 ]
  %44 = phi i8* [ %21, %17 ], [ %38, %27 ]
  %45 = phi i8 [ %25, %17 ], [ %40, %27 ]
  %46 = icmp eq i8 %45, -1
  %47 = select i1 %46, i8* null, i8* %44, !prof !4
  %48 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0, i64 0, i32 0
  store %"class.gl::ResourceMap"* %1, %"class.gl::ResourceMap"** %48, align 8
  %49 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0, i64 0, i32 1
  store i32 %19, i32* %49, align 8
  %50 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  store i8* %47, i8** %50, align 8
  %51 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type"* %43, %"union.absl::container_internal::map_slot_type"** %51, align 8
  %52 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0, i64 0, i32 4, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %53, align 8
  %54 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0, i64 0, i32 5
  store i8 1, i8* %54, align 8
  %55 = trunc i64 %4 to i32
  %56 = icmp ugt i32 %55, %19
  br i1 %56, label %57, label %62

57:                                               ; preds = %42
  store i32 %19, i32* %52, align 8
  %58 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %1, i64 0, i32 1
  %59 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %58, align 8
  %60 = and i64 %18, 4294967295
  %61 = getelementptr inbounds %"class.gl::Buffer"*, %"class.gl::Buffer"** %59, i64 %60
  br label %76

62:                                               ; preds = %42
  %63 = icmp eq i8* %47, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %62
  %65 = load i8, i8* %47, align 1
  %66 = icmp sgt i8 %65, -1
  br i1 %66, label %68, label %67, !prof !3

67:                                               ; preds = %64
  tail call void @llvm.trap() #11
  unreachable

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %43, i64 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 8
  store i32 %70, i32* %52, align 8
  %71 = load i8, i8* %47, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %74, label %73, !prof !3

73:                                               ; preds = %68
  tail call void @llvm.trap() #11
  unreachable

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %43, i64 0, i32 0, i32 1
  br label %76

76:                                               ; preds = %74, %57
  %77 = phi %"class.gl::Buffer"** [ %61, %57 ], [ %75, %74 ]
  %78 = bitcast %"class.gl::Buffer"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.gl::Buffer"** %53 to i64*
  store i64 %79, i64* %80, align 8
  br label %81

81:                                               ; preds = %76, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEE3endEv(%"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* noalias sret, %"class.gl::TypedResourceManager"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %3, i64 0, i32 0
  %5 = load i64, i64* %4, align 8, !noalias !5
  %6 = trunc i64 %5 to i32
  %7 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0, i64 0, i32 0
  store %"class.gl::ResourceMap"* %3, %"class.gl::ResourceMap"** %7, align 8, !alias.scope !5
  %8 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0, i64 0, i32 1
  store i32 %6, i32* %8, align 8, !alias.scope !5
  %9 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  store i8* null, i8** %9, align 8, !alias.scope !5
  %10 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !5
  %11 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0, i64 0, i32 4, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %11, align 8, !alias.scope !5
  %12 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0, i64 0, i32 5
  store i8 1, i8* %12, align 8, !alias.scope !5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEED2Ev(%"class.gl::TypedResourceManager"*) unnamed_addr #1 comdat($_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %3, align 8
  %5 = icmp eq %"class.gl::Buffer"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Buffer"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19ResourceManagerBaseD2Ev(%"class.gl::ResourceManagerBase"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::ResourceManagerBase", %"class.gl::ResourceManagerBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::ResourceManagerBase", %"class.gl::ResourceManagerBase"* %0, i64 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEED0Ev(%"class.gl::TypedResourceManager"*) unnamed_addr #1 comdat($_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %3, align 8
  %5 = icmp eq %"class.gl::Buffer"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Buffer"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  %19 = bitcast %"class.gl::TypedResourceManager"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEE5resetEPKNS_7ContextE(%"class.gl::TypedResourceManager"*, %"class.gl::Context"*) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", align 8
  %4 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocator5resetEv(%"class.gl::HandleAllocator"* %4) #11
  %5 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1
  %6 = bitcast %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 56, i1 false)
  %7 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %5, i64 0, i32 0
  %8 = load i64, i64* %7, align 8, !noalias !8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 1
  %12 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %11, align 8, !noalias !8
  br label %13

13:                                               ; preds = %18, %10
  %14 = phi i64 [ 0, %10 ], [ %19, %18 ]
  %15 = getelementptr inbounds %"class.gl::Buffer"*, %"class.gl::Buffer"** %12, i64 %14
  %16 = bitcast %"class.gl::Buffer"** %15 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !8
  switch i64 %17, label %21 [
    i64 -1, label %18
    i64 0, label %18
  ]

18:                                               ; preds = %13, %13
  %19 = add nuw i64 %14, 1
  %20 = icmp eq i64 %19, %8
  br i1 %20, label %21, label %13

21:                                               ; preds = %18, %13, %2
  %22 = phi i64 [ 0, %2 ], [ %8, %18 ], [ %14, %13 ]
  %23 = trunc i64 %22 to i32
  %24 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8, !noalias !8
  %26 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %27 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %26, align 8, !noalias !8
  %28 = icmp ne i8* %25, null
  tail call void @llvm.assume(i1 %28) #11, !noalias !8
  %29 = load i8, i8* %25, align 1, !noalias !8
  %30 = icmp slt i8 %29, -1
  br i1 %30, label %31, label %46

31:                                               ; preds = %21, %31
  %32 = phi %"union.absl::container_internal::map_slot_type"* [ %43, %31 ], [ %27, %21 ]
  %33 = phi i8* [ %42, %31 ], [ %25, %21 ]
  %34 = bitcast i8* %33 to <16 x i8>*
  %35 = load <16 x i8>, <16 x i8>* %34, align 1, !noalias !8
  %36 = icmp slt <16 x i8> %35, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %37 = bitcast <16 x i1> %36 to i16
  %38 = zext i16 %37 to i32
  %39 = add nuw nsw i32 %38, 1
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 true) #11, !range !2
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %33, i64 %41
  %43 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %32, i64 %41
  %44 = load i8, i8* %42, align 1, !noalias !8
  %45 = icmp slt i8 %44, -1
  br i1 %45, label %31, label %46

46:                                               ; preds = %31, %21
  %47 = phi %"union.absl::container_internal::map_slot_type"* [ %27, %21 ], [ %43, %31 ]
  %48 = phi i8* [ %25, %21 ], [ %42, %31 ]
  %49 = phi i8 [ %29, %21 ], [ %44, %31 ]
  %50 = icmp eq i8 %49, -1
  %51 = select i1 %50, i8* null, i8* %48, !prof !4
  %52 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %3, i64 0, i32 0
  store %"class.gl::ResourceMap"* %5, %"class.gl::ResourceMap"** %52, align 8, !alias.scope !8
  %53 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %3, i64 0, i32 1
  store i32 %23, i32* %53, align 8, !alias.scope !8
  %54 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %3, i64 0, i32 3, i32 0, i32 0
  store i8* %51, i8** %54, align 8, !alias.scope !8
  %55 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %3, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type"* %47, %"union.absl::container_internal::map_slot_type"** %55, align 8, !alias.scope !8
  %56 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %3, i64 0, i32 4, i32 0
  store i32 0, i32* %56, align 8, !alias.scope !8
  %57 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %3, i64 0, i32 4, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %57, align 8, !alias.scope !8
  %58 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %3, i64 0, i32 5
  store i8 1, i8* %58, align 8, !alias.scope !8
  %59 = trunc i64 %8 to i32
  %60 = icmp ugt i32 %59, %23
  br i1 %60, label %61, label %66

61:                                               ; preds = %46
  store i32 %23, i32* %56, align 8, !alias.scope !8
  %62 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 1
  %63 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %62, align 8, !noalias !8
  %64 = and i64 %22, 4294967295
  %65 = getelementptr inbounds %"class.gl::Buffer"*, %"class.gl::Buffer"** %63, i64 %64
  br label %76

66:                                               ; preds = %46
  %67 = icmp eq i8* %51, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %66
  %69 = load i8, i8* %51, align 1, !noalias !8
  %70 = icmp sgt i8 %69, -1
  br i1 %70, label %72, label %71, !prof !3

71:                                               ; preds = %68
  tail call void @llvm.trap() #11, !noalias !8
  unreachable

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %47, i64 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 8, !noalias !8
  store i32 %74, i32* %56, align 8, !alias.scope !8
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %47, i64 0, i32 0, i32 1
  br label %76

76:                                               ; preds = %72, %61
  %77 = phi %"class.gl::Buffer"** [ %65, %61 ], [ %75, %72 ]
  %78 = bitcast %"class.gl::Buffer"** %77 to i64*
  %79 = load i64, i64* %78, align 8, !noalias !8
  %80 = bitcast %"class.gl::Buffer"** %57 to i64*
  store i64 %79, i64* %80, align 8, !alias.scope !8
  br label %81

81:                                               ; preds = %76, %66
  br label %82

82:                                               ; preds = %81, %138
  %83 = phi i32 [ %140, %138 ], [ %23, %81 ]
  %84 = icmp eq i32 %83, %59
  br i1 %84, label %85, label %121

85:                                               ; preds = %82
  %86 = load i8*, i8** %54, align 8
  %87 = icmp eq i8* %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %85
  %89 = load i8, i8* %86, align 1
  %90 = icmp sgt i8 %89, -1
  br i1 %90, label %121, label %91, !prof !3

91:                                               ; preds = %88
  call void @llvm.trap() #11
  unreachable

92:                                               ; preds = %85
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #11
  %93 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 1
  %94 = bitcast %"class.gl::Buffer"*** %93 to i8**
  %95 = load i8*, i8** %94, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 -1, i64 256, i1 false) #11
  store i64 32, i64* %7, align 8
  %96 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  %97 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %98 = load i64, i64* %97, align 8
  %99 = icmp ugt i64 %98, 127
  br i1 %99, label %100, label %104

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %96, i64 0, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %101, align 8
  %103 = bitcast %"union.absl::container_internal::map_slot_type"** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 32, i1 false) #11
  br label %120

104:                                              ; preds = %92
  %105 = icmp eq i64 %98, 0
  br i1 %105, label %120, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  store i64 0, i64* %107, align 8
  %108 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %96, i64 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = add nuw nsw i64 %98, 16
  call void @llvm.memset.p0i8.i64(i8* align 1 %109, i8 -128, i64 %110, i1 false) #11
  %111 = load i8*, i8** %108, align 8
  %112 = load i64, i64* %97, align 8
  %113 = getelementptr inbounds i8, i8* %111, i64 %112
  store i8 -1, i8* %113, align 1
  %114 = load i64, i64* %97, align 8
  %115 = lshr i64 %114, 3
  %116 = sub i64 %114, %115
  %117 = load i64, i64* %107, align 8
  %118 = sub i64 %116, %117
  %119 = getelementptr inbounds %"class.gl::TypedResourceManager", %"class.gl::TypedResourceManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %118, i64* %119, align 8
  br label %120

120:                                              ; preds = %100, %104, %106
  ret void

121:                                              ; preds = %88, %82
  %122 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %57, align 8
  %123 = icmp eq %"class.gl::Buffer"* %122, null
  br i1 %123, label %138, label %124

124:                                              ; preds = %121
  %125 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %122, i64 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %122, i64 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = add i64 %127, -1
  store i64 %128, i64* %126, align 8
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %138

130:                                              ; preds = %124
  %131 = bitcast %"class.gl::Buffer"* %122 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %132 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %131, align 8
  %133 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %132, align 8
  call void %133(%"class.angle::RefCountObject"* %125, %"class.gl::Context"* %1) #11
  %134 = bitcast %"class.gl::Buffer"* %122 to void (%"class.angle::RefCountObject"*)***
  %135 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %135, i64 2
  %137 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %136, align 8
  call void %137(%"class.angle::RefCountObject"* nonnull %125) #11
  br label %138

138:                                              ; preds = %130, %124, %121
  %139 = call dereferenceable(56) %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* @_ZN2gl11ResourceMapINS_6BufferENS_8BufferIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* nonnull %3)
  %140 = load i32, i32* %53, align 8
  br label %82
}

declare void @_ZN2gl15HandleAllocator5resetEv(%"class.gl::HandleAllocator"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* @_ZN2gl11ResourceMapINS_6BufferENS_8BufferIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0, i64 0, i32 0
  %5 = load %"class.gl::ResourceMap"*, %"class.gl::ResourceMap"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = icmp ult i32 %3, %8
  br i1 %9, label %10, label %35

10:                                               ; preds = %1
  %11 = add nuw i32 %3, 1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0, i64 0, i32 5
  %14 = load i8, i8* %13, align 8, !range !11
  %15 = icmp ne i8 %14, 0
  %16 = icmp ugt i64 %7, %12
  br i1 %16, label %17, label %33

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %5, i64 0, i32 1
  %19 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %18, align 8
  br label %20

20:                                               ; preds = %30, %17
  %21 = phi i64 [ %12, %17 ], [ %31, %30 ]
  %22 = getelementptr inbounds %"class.gl::Buffer"*, %"class.gl::Buffer"** %19, i64 %21
  %23 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %22, align 8
  %24 = icmp eq %"class.gl::Buffer"* %23, null
  %25 = and i1 %15, %24
  %26 = icmp eq %"class.gl::Buffer"* %23, inttoptr (i64 -1 to %"class.gl::Buffer"*)
  %27 = or i1 %26, %25
  br i1 %27, label %30, label %28

28:                                               ; preds = %20
  %29 = trunc i64 %21 to i32
  br label %33

30:                                               ; preds = %20
  %31 = add i64 %21, 1
  %32 = icmp eq i64 %31, %7
  br i1 %32, label %33, label %20

33:                                               ; preds = %30, %28, %10
  %34 = phi i32 [ %8, %10 ], [ %29, %28 ], [ %8, %30 ]
  store i32 %34, i32* %2, align 8
  br label %69

35:                                               ; preds = %1
  %36 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %39 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %38, align 8
  %40 = icmp eq i8* %37, null
  br i1 %40, label %44, label %41, !prof !4

41:                                               ; preds = %35
  %42 = load i8, i8* %37, align 1
  %43 = icmp sgt i8 %42, -1
  br i1 %43, label %45, label %44, !prof !3

44:                                               ; preds = %41, %35
  tail call void @llvm.trap() #11
  unreachable

45:                                               ; preds = %41
  %46 = getelementptr inbounds i8, i8* %37, i64 1
  store i8* %46, i8** %36, align 8
  %47 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %39, i64 1
  store %"union.absl::container_internal::map_slot_type"* %47, %"union.absl::container_internal::map_slot_type"** %38, align 8
  %48 = load i8, i8* %46, align 1
  %49 = icmp slt i8 %48, -1
  br i1 %49, label %50, label %65

50:                                               ; preds = %45, %50
  %51 = phi %"union.absl::container_internal::map_slot_type"* [ %62, %50 ], [ %47, %45 ]
  %52 = phi i8* [ %61, %50 ], [ %46, %45 ]
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1
  %55 = icmp slt <16 x i8> %54, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %56 = bitcast <16 x i1> %55 to i16
  %57 = zext i16 %56 to i32
  %58 = add nuw nsw i32 %57, 1
  %59 = tail call i32 @llvm.cttz.i32(i32 %58, i1 true) #11, !range !2
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %52, i64 %60
  store i8* %61, i8** %36, align 8
  %62 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %51, i64 %60
  store %"union.absl::container_internal::map_slot_type"* %62, %"union.absl::container_internal::map_slot_type"** %38, align 8
  %63 = load i8, i8* %61, align 1
  %64 = icmp slt i8 %63, -1
  br i1 %64, label %50, label %65

65:                                               ; preds = %50, %45
  %66 = phi i8 [ %48, %45 ], [ %63, %50 ]
  %67 = icmp eq i8 %66, -1
  br i1 %67, label %68, label %69, !prof !4

68:                                               ; preds = %65
  store i8* null, i8** %36, align 8
  br label %69

69:                                               ; preds = %68, %65, %33
  %70 = phi i32 [ %3, %68 ], [ %3, %65 ], [ %34, %33 ]
  %71 = load i64, i64* %6, align 8
  %72 = trunc i64 %71 to i32
  %73 = icmp ult i32 %70, %72
  br i1 %73, label %74, label %80

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 %70, i32* %75, align 8
  %76 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %5, i64 0, i32 1
  %77 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %76, align 8
  %78 = zext i32 %70 to i64
  %79 = getelementptr inbounds %"class.gl::Buffer"*, %"class.gl::Buffer"** %77, i64 %78
  br label %99

80:                                               ; preds = %69
  %81 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %105, label %84

84:                                               ; preds = %80
  %85 = load i8, i8* %82, align 1
  %86 = icmp sgt i8 %85, -1
  br i1 %86, label %88, label %87, !prof !3

87:                                               ; preds = %84
  tail call void @llvm.trap() #11
  unreachable

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %90 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %89, align 8
  %91 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %90, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 %92, i32* %93, align 8
  %94 = load i8, i8* %82, align 1
  %95 = icmp sgt i8 %94, -1
  br i1 %95, label %97, label %96, !prof !3

96:                                               ; preds = %88
  tail call void @llvm.trap() #11
  unreachable

97:                                               ; preds = %88
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %90, i64 0, i32 0, i32 1
  br label %99

99:                                               ; preds = %97, %74
  %100 = phi %"class.gl::Buffer"** [ %79, %74 ], [ %98, %97 ]
  %101 = bitcast %"class.gl::Buffer"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator", %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0, i64 0, i32 4, i32 1
  %104 = bitcast %"class.gl::Buffer"** %103 to i64*
  store i64 %102, i64* %104, align 8
  br label %105

105:                                              ; preds = %99, %80
  ret %"class.gl::ResourceMap<gl::Buffer, gl::BufferID>::Iterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEEC2Ev(%"class.gl::TypedResourceManager.250"*) unnamed_addr #1 comdat($_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorC1Ev(%"class.gl::HandleAllocator"* %3) #11
  %4 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = bitcast i64* %4 to <2 x i64>*
  store <2 x i64> <i64 1, i64 32>, <2 x i64>* %5, align 8
  %6 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 1
  %7 = tail call i8* @_Znam(i64 256) #14
  %8 = bitcast %"class.gl::Texture"*** %6 to i8**
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %11 = bitcast %"union.absl::container_internal::map_slot_type.273"** %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -1, i64 256, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEE12deleteObjectEPKNS_7ContextES3_(%"class.gl::TypedResourceManager.250"*, %"class.gl::Context"*, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.gl::Texture"*, align 8
  %5 = bitcast %"class.gl::Texture"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  store %"class.gl::Texture"* null, %"class.gl::Texture"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1
  %7 = call zeroext i1 @_ZN2gl11ResourceMapINS_7TextureENS_9TextureIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.251"* %6, i32 %2, %"class.gl::Texture"** nonnull %4)
  br i1 %7, label %8, label %26

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 0, i32 1
  call void @_ZN2gl15HandleAllocator7releaseEj(%"class.gl::HandleAllocator"* %9, i32 %2) #11
  %10 = load %"class.gl::Texture"*, %"class.gl::Texture"** %4, align 8
  %11 = icmp eq %"class.gl::Texture"* %10, null
  br i1 %11, label %26, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %10, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %10, i64 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, -1
  store i64 %16, i64* %14, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %26

18:                                               ; preds = %12
  %19 = bitcast %"class.gl::Texture"* %10 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %20 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %19, align 8
  %21 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %20, align 8
  call void %21(%"class.angle::RefCountObject"* %13, %"class.gl::Context"* %1) #11
  %22 = bitcast %"class.gl::Texture"* %10 to void (%"class.angle::RefCountObject"*)***
  %23 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %23, i64 2
  %25 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %24, align 8
  call void %25(%"class.angle::RefCountObject"* nonnull %13) #11
  br label %26

26:                                               ; preds = %18, %12, %8, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2gl11ResourceMapINS_7TextureENS_9TextureIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.251"*, i32, %"class.gl::Texture"**) local_unnamed_addr #3 comdat align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %4
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %0, i64 0, i32 1
  %10 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %9, align 8
  %11 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %10, i64 %4
  %12 = load %"class.gl::Texture"*, %"class.gl::Texture"** %11, align 8
  %13 = icmp eq %"class.gl::Texture"* %12, inttoptr (i64 -1 to %"class.gl::Texture"*)
  br i1 %13, label %134, label %14

14:                                               ; preds = %8
  %15 = ptrtoint %"class.gl::Texture"* %12 to i64
  %16 = bitcast %"class.gl::Texture"** %2 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.gl::Texture"* inttoptr (i64 -1 to %"class.gl::Texture"*), %"class.gl::Texture"** %11, align 8
  br label %134

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %4
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %18, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %17
  %40 = phi i64 [ %33, %17 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %17 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #11, !range !2
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !3

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %134, !prof !4

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #11
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !3

77:                                               ; preds = %72
  tail call void @llvm.trap() #11
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %51, i64 %57, i32 0, i32 1
  %80 = bitcast %"class.gl::Texture"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.gl::Texture"** %2 to i64*
  store i64 %81, i64* %82, align 8
  %83 = load i8, i8* %73, align 1
  %84 = icmp sgt i8 %83, -1
  br i1 %84, label %86, label %85, !prof !3

85:                                               ; preds = %78
  tail call void @llvm.trap() #11
  unreachable

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, -1
  store i64 %89, i64* %87, align 8
  %90 = bitcast %"class.absl::container_internal::raw_hash_set.272"* %18 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = ptrtoint i8* %73 to i64
  %93 = sub i64 %92, %91
  %94 = add i64 %93, -16
  %95 = load i64, i64* %28, align 8
  %96 = and i64 %94, %95
  %97 = bitcast i8* %73 to <16 x i8>*
  %98 = load <16 x i8>, <16 x i8>* %97, align 1
  %99 = icmp eq <16 x i8> %98, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %100 = bitcast <16 x i1> %99 to i16
  %101 = inttoptr i64 %91 to i8*
  %102 = getelementptr inbounds i8, i8* %101, i64 %96
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1
  %105 = icmp eq <16 x i8> %104, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %106 = bitcast <16 x i1> %105 to i16
  %107 = icmp ne i16 %106, 0
  %108 = icmp ne i16 %100, 0
  %109 = and i1 %108, %107
  br i1 %109, label %110, label %120

110:                                              ; preds = %86
  %111 = zext i16 %100 to i32
  %112 = zext i16 %106 to i32
  %113 = tail call i32 @llvm.cttz.i32(i32 %111, i1 false) #11, !range !2
  %114 = shl nuw i32 %112, 16
  %115 = tail call i32 @llvm.ctlz.i32(i32 %114, i1 false) #11, !range !2
  %116 = add nuw nsw i32 %115, %113
  %117 = icmp ult i32 %116, 16
  %118 = zext i1 %117 to i64
  %119 = select i1 %117, i8 -128, i8 -2
  br label %120

120:                                              ; preds = %86, %110
  %121 = phi i64 [ 0, %86 ], [ %118, %110 ]
  %122 = phi i8 [ -2, %86 ], [ %119, %110 ]
  %123 = getelementptr inbounds i8, i8* %101, i64 %93
  store i8 %122, i8* %123, align 1
  %124 = load i8*, i8** %26, align 8
  %125 = add i64 %93, -15
  %126 = load i64, i64* %28, align 8
  %127 = and i64 %126, %125
  %128 = and i64 %126, 15
  %129 = add i64 %127, %128
  %130 = getelementptr inbounds i8, i8* %124, i64 %129
  store i8 %122, i8* %130, align 1
  %131 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %0, i64 0, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, %121
  store i64 %133, i64* %131, align 8
  br label %134

134:                                              ; preds = %65, %14, %120, %8
  %135 = phi i1 [ false, %8 ], [ true, %120 ], [ true, %14 ], [ false, %65 ]
  ret i1 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl14TextureManager12DeleteObjectEPKNS_7ContextEPNS_7TextureE(%"class.gl::Context"*, %"class.gl::Texture"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %1, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  store i64 %6, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %18

8:                                                ; preds = %2
  %9 = bitcast %"class.gl::Texture"* %1 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %10 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %9, align 8
  %11 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %10, align 8
  tail call void %11(%"class.angle::RefCountObject"* %3, %"class.gl::Context"* %0) #11
  %12 = icmp eq %"class.gl::Texture"* %1, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.gl::Texture"* %1 to void (%"class.angle::RefCountObject"*)***
  %15 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %15, i64 2
  %17 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %16, align 8
  tail call void %17(%"class.angle::RefCountObject"* nonnull %3) #11
  br label %18

18:                                               ; preds = %2, %8, %13
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEE17isHandleGeneratedES3_(%"class.gl::TypedResourceManager.250"*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %78, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %5
  br i1 %8, label %9, label %15

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 1
  %11 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %10, align 8
  %12 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %11, i64 %5
  %13 = load %"class.gl::Texture"*, %"class.gl::Texture"** %12, align 8
  %14 = icmp ne %"class.gl::Texture"* %13, inttoptr (i64 -1 to %"class.gl::Texture"*)
  br label %78

15:                                               ; preds = %4
  %16 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %17 = add i64 %16, %5
  %18 = zext i64 %17 to i128
  %19 = mul nuw i128 %18, 11376068507788127593
  %20 = lshr i128 %19, 64
  %21 = xor i128 %20, %19
  %22 = trunc i128 %21 to i64
  %23 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %26 = load i64, i64* %25, align 8
  %27 = lshr i64 %22, 7
  %28 = ptrtoint i8* %24 to i64
  %29 = lshr i64 %28, 12
  %30 = xor i64 %27, %29
  %31 = trunc i128 %21 to i8
  %32 = and i8 %31, 127
  %33 = insertelement <16 x i8> undef, i8 %32, i32 0
  %34 = shufflevector <16 x i8> %33, <16 x i8> undef, <16 x i32> zeroinitializer
  %35 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %36

36:                                               ; preds = %66, %15
  %37 = phi i64 [ %30, %15 ], [ %68, %66 ]
  %38 = phi i64 [ 0, %15 ], [ %67, %66 ]
  %39 = and i64 %37, %26
  %40 = getelementptr inbounds i8, i8* %24, i64 %39
  %41 = bitcast i8* %40 to <16 x i8>*
  %42 = load <16 x i8>, <16 x i8>* %41, align 1
  %43 = icmp eq <16 x i8> %34, %42
  %44 = bitcast <16 x i1> %43 to i16
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %62, label %46

46:                                               ; preds = %36
  %47 = zext i16 %44 to i32
  %48 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %35, align 8
  br label %49

49:                                               ; preds = %58, %46
  %50 = phi i32 [ %47, %46 ], [ %60, %58 ]
  %51 = tail call i32 @llvm.cttz.i32(i32 %50, i1 false) #11, !range !2
  %52 = zext i32 %51 to i64
  %53 = add i64 %39, %52
  %54 = and i64 %53, %26
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %48, i64 %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %1
  br i1 %57, label %69, label %58, !prof !3

58:                                               ; preds = %49
  %59 = add i32 %50, -1
  %60 = and i32 %59, %50
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %49

62:                                               ; preds = %58, %36
  %63 = icmp eq <16 x i8> %42, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %64 = bitcast <16 x i1> %63 to i16
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %66, label %75, !prof !4

66:                                               ; preds = %62
  %67 = add i64 %38, 16
  %68 = add i64 %67, %39
  br label %36

69:                                               ; preds = %49
  %70 = getelementptr inbounds i8, i8* %24, i64 %54
  %71 = icmp ne i8* %70, null
  tail call void @llvm.assume(i1 %71) #11
  %72 = load i8, i8* %70, align 1
  %73 = icmp sgt i8 %72, -1
  br i1 %73, label %75, label %74, !prof !3

74:                                               ; preds = %69
  tail call void @llvm.trap() #11
  unreachable

75:                                               ; preds = %62, %69
  %76 = phi i8* [ %70, %69 ], [ null, %62 ]
  %77 = icmp ne i8* %76, null
  br label %78

78:                                               ; preds = %75, %9, %2
  %79 = phi i1 [ true, %2 ], [ %14, %9 ], [ %77, %75 ]
  ret i1 %79
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEE5beginEv(%"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* noalias sret, %"class.gl::TypedResourceManager.250"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %1, i64 0, i32 1
  tail call void @_ZNK2gl11ResourceMapINS_7TextureENS_9TextureIDEE5beginEv(%"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* sret %0, %"class.gl::ResourceMap.251"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2gl11ResourceMapINS_7TextureENS_9TextureIDEE5beginEv(%"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* noalias sret, %"class.gl::ResourceMap.251"*) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %1, i64 0, i32 1
  %8 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %7, align 8
  br label %9

9:                                                ; preds = %14, %6
  %10 = phi i64 [ 0, %6 ], [ %15, %14 ]
  %11 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %8, i64 %10
  %12 = bitcast %"class.gl::Texture"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  switch i64 %13, label %17 [
    i64 -1, label %14
    i64 0, label %14
  ]

14:                                               ; preds = %9, %9
  %15 = add nuw i64 %10, 1
  %16 = icmp eq i64 %15, %4
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %14, %2
  %18 = phi i64 [ 0, %2 ], [ %10, %9 ], [ %4, %14 ]
  %19 = trunc i64 %18 to i32
  %20 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %23 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %22, align 8
  %24 = icmp ne i8* %21, null
  tail call void @llvm.assume(i1 %24) #11
  %25 = load i8, i8* %21, align 1
  %26 = icmp slt i8 %25, -1
  br i1 %26, label %27, label %42

27:                                               ; preds = %17, %27
  %28 = phi %"union.absl::container_internal::map_slot_type.273"* [ %39, %27 ], [ %23, %17 ]
  %29 = phi i8* [ %38, %27 ], [ %21, %17 ]
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp slt <16 x i8> %31, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %33 = bitcast <16 x i1> %32 to i16
  %34 = zext i16 %33 to i32
  %35 = add nuw nsw i32 %34, 1
  %36 = tail call i32 @llvm.cttz.i32(i32 %35, i1 true) #11, !range !2
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %29, i64 %37
  %39 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %28, i64 %37
  %40 = load i8, i8* %38, align 1
  %41 = icmp slt i8 %40, -1
  br i1 %41, label %27, label %42

42:                                               ; preds = %27, %17
  %43 = phi %"union.absl::container_internal::map_slot_type.273"* [ %23, %17 ], [ %39, %27 ]
  %44 = phi i8* [ %21, %17 ], [ %38, %27 ]
  %45 = phi i8 [ %25, %17 ], [ %40, %27 ]
  %46 = icmp eq i8 %45, -1
  %47 = select i1 %46, i8* null, i8* %44, !prof !4
  %48 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0, i64 0, i32 0
  store %"class.gl::ResourceMap.251"* %1, %"class.gl::ResourceMap.251"** %48, align 8
  %49 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0, i64 0, i32 1
  store i32 %19, i32* %49, align 8
  %50 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  store i8* %47, i8** %50, align 8
  %51 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type.273"* %43, %"union.absl::container_internal::map_slot_type.273"** %51, align 8
  %52 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0, i64 0, i32 4, i32 1
  store %"class.gl::Texture"* null, %"class.gl::Texture"** %53, align 8
  %54 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0, i64 0, i32 5
  store i8 1, i8* %54, align 8
  %55 = trunc i64 %4 to i32
  %56 = icmp ugt i32 %55, %19
  br i1 %56, label %57, label %62

57:                                               ; preds = %42
  store i32 %19, i32* %52, align 8
  %58 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %1, i64 0, i32 1
  %59 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %58, align 8
  %60 = and i64 %18, 4294967295
  %61 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %59, i64 %60
  br label %76

62:                                               ; preds = %42
  %63 = icmp eq i8* %47, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %62
  %65 = load i8, i8* %47, align 1
  %66 = icmp sgt i8 %65, -1
  br i1 %66, label %68, label %67, !prof !3

67:                                               ; preds = %64
  tail call void @llvm.trap() #11
  unreachable

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %43, i64 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 8
  store i32 %70, i32* %52, align 8
  %71 = load i8, i8* %47, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %74, label %73, !prof !3

73:                                               ; preds = %68
  tail call void @llvm.trap() #11
  unreachable

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %43, i64 0, i32 0, i32 1
  br label %76

76:                                               ; preds = %74, %57
  %77 = phi %"class.gl::Texture"** [ %61, %57 ], [ %75, %74 ]
  %78 = bitcast %"class.gl::Texture"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.gl::Texture"** %53 to i64*
  store i64 %79, i64* %80, align 8
  br label %81

81:                                               ; preds = %76, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEE3endEv(%"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* noalias sret, %"class.gl::TypedResourceManager.250"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %3, i64 0, i32 0
  %5 = load i64, i64* %4, align 8, !noalias !12
  %6 = trunc i64 %5 to i32
  %7 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0, i64 0, i32 0
  store %"class.gl::ResourceMap.251"* %3, %"class.gl::ResourceMap.251"** %7, align 8, !alias.scope !12
  %8 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0, i64 0, i32 1
  store i32 %6, i32* %8, align 8, !alias.scope !12
  %9 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  store i8* null, i8** %9, align 8, !alias.scope !12
  %10 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !12
  %11 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0, i64 0, i32 4, i32 1
  store %"class.gl::Texture"* null, %"class.gl::Texture"** %11, align 8, !alias.scope !12
  %12 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0, i64 0, i32 5
  store i8 1, i8* %12, align 8, !alias.scope !12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEED2Ev(%"class.gl::TypedResourceManager.250"*) unnamed_addr #1 comdat($_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %3, align 8
  %5 = icmp eq %"class.gl::Texture"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Texture"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.273"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEED0Ev(%"class.gl::TypedResourceManager.250"*) unnamed_addr #1 comdat($_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %3, align 8
  %5 = icmp eq %"class.gl::Texture"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Texture"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.273"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  %19 = bitcast %"class.gl::TypedResourceManager.250"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEE5resetEPKNS_7ContextE(%"class.gl::TypedResourceManager.250"*, %"class.gl::Context"*) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", align 8
  %4 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocator5resetEv(%"class.gl::HandleAllocator"* %4) #11
  %5 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1
  %6 = bitcast %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 56, i1 false)
  %7 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %5, i64 0, i32 0
  %8 = load i64, i64* %7, align 8, !noalias !15
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 1
  %12 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %11, align 8, !noalias !15
  br label %13

13:                                               ; preds = %18, %10
  %14 = phi i64 [ 0, %10 ], [ %19, %18 ]
  %15 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %12, i64 %14
  %16 = bitcast %"class.gl::Texture"** %15 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !15
  switch i64 %17, label %21 [
    i64 -1, label %18
    i64 0, label %18
  ]

18:                                               ; preds = %13, %13
  %19 = add nuw i64 %14, 1
  %20 = icmp eq i64 %19, %8
  br i1 %20, label %21, label %13

21:                                               ; preds = %18, %13, %2
  %22 = phi i64 [ 0, %2 ], [ %8, %18 ], [ %14, %13 ]
  %23 = trunc i64 %22 to i32
  %24 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8, !noalias !15
  %26 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %27 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %26, align 8, !noalias !15
  %28 = icmp ne i8* %25, null
  tail call void @llvm.assume(i1 %28) #11, !noalias !15
  %29 = load i8, i8* %25, align 1, !noalias !15
  %30 = icmp slt i8 %29, -1
  br i1 %30, label %31, label %46

31:                                               ; preds = %21, %31
  %32 = phi %"union.absl::container_internal::map_slot_type.273"* [ %43, %31 ], [ %27, %21 ]
  %33 = phi i8* [ %42, %31 ], [ %25, %21 ]
  %34 = bitcast i8* %33 to <16 x i8>*
  %35 = load <16 x i8>, <16 x i8>* %34, align 1, !noalias !15
  %36 = icmp slt <16 x i8> %35, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %37 = bitcast <16 x i1> %36 to i16
  %38 = zext i16 %37 to i32
  %39 = add nuw nsw i32 %38, 1
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 true) #11, !range !2
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %33, i64 %41
  %43 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %32, i64 %41
  %44 = load i8, i8* %42, align 1, !noalias !15
  %45 = icmp slt i8 %44, -1
  br i1 %45, label %31, label %46

46:                                               ; preds = %31, %21
  %47 = phi %"union.absl::container_internal::map_slot_type.273"* [ %27, %21 ], [ %43, %31 ]
  %48 = phi i8* [ %25, %21 ], [ %42, %31 ]
  %49 = phi i8 [ %29, %21 ], [ %44, %31 ]
  %50 = icmp eq i8 %49, -1
  %51 = select i1 %50, i8* null, i8* %48, !prof !4
  %52 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %3, i64 0, i32 0
  store %"class.gl::ResourceMap.251"* %5, %"class.gl::ResourceMap.251"** %52, align 8, !alias.scope !15
  %53 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %3, i64 0, i32 1
  store i32 %23, i32* %53, align 8, !alias.scope !15
  %54 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %3, i64 0, i32 3, i32 0, i32 0
  store i8* %51, i8** %54, align 8, !alias.scope !15
  %55 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %3, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type.273"* %47, %"union.absl::container_internal::map_slot_type.273"** %55, align 8, !alias.scope !15
  %56 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %3, i64 0, i32 4, i32 0
  store i32 0, i32* %56, align 8, !alias.scope !15
  %57 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %3, i64 0, i32 4, i32 1
  store %"class.gl::Texture"* null, %"class.gl::Texture"** %57, align 8, !alias.scope !15
  %58 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %3, i64 0, i32 5
  store i8 1, i8* %58, align 8, !alias.scope !15
  %59 = trunc i64 %8 to i32
  %60 = icmp ugt i32 %59, %23
  br i1 %60, label %61, label %66

61:                                               ; preds = %46
  store i32 %23, i32* %56, align 8, !alias.scope !15
  %62 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 1
  %63 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %62, align 8, !noalias !15
  %64 = and i64 %22, 4294967295
  %65 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %63, i64 %64
  br label %76

66:                                               ; preds = %46
  %67 = icmp eq i8* %51, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %66
  %69 = load i8, i8* %51, align 1, !noalias !15
  %70 = icmp sgt i8 %69, -1
  br i1 %70, label %72, label %71, !prof !3

71:                                               ; preds = %68
  tail call void @llvm.trap() #11, !noalias !15
  unreachable

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %47, i64 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 8, !noalias !15
  store i32 %74, i32* %56, align 8, !alias.scope !15
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %47, i64 0, i32 0, i32 1
  br label %76

76:                                               ; preds = %72, %61
  %77 = phi %"class.gl::Texture"** [ %65, %61 ], [ %75, %72 ]
  %78 = bitcast %"class.gl::Texture"** %77 to i64*
  %79 = load i64, i64* %78, align 8, !noalias !15
  %80 = bitcast %"class.gl::Texture"** %57 to i64*
  store i64 %79, i64* %80, align 8, !alias.scope !15
  br label %81

81:                                               ; preds = %76, %66
  br label %82

82:                                               ; preds = %81, %138
  %83 = phi i32 [ %140, %138 ], [ %23, %81 ]
  %84 = icmp eq i32 %83, %59
  br i1 %84, label %85, label %121

85:                                               ; preds = %82
  %86 = load i8*, i8** %54, align 8
  %87 = icmp eq i8* %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %85
  %89 = load i8, i8* %86, align 1
  %90 = icmp sgt i8 %89, -1
  br i1 %90, label %121, label %91, !prof !3

91:                                               ; preds = %88
  call void @llvm.trap() #11
  unreachable

92:                                               ; preds = %85
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #11
  %93 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 1
  %94 = bitcast %"class.gl::Texture"*** %93 to i8**
  %95 = load i8*, i8** %94, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 -1, i64 256, i1 false) #11
  store i64 32, i64* %7, align 8
  %96 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  %97 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %98 = load i64, i64* %97, align 8
  %99 = icmp ugt i64 %98, 127
  br i1 %99, label %100, label %104

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %96, i64 0, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %101, align 8
  %103 = bitcast %"union.absl::container_internal::map_slot_type.273"** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 32, i1 false) #11
  br label %120

104:                                              ; preds = %92
  %105 = icmp eq i64 %98, 0
  br i1 %105, label %120, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  store i64 0, i64* %107, align 8
  %108 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %96, i64 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = add nuw nsw i64 %98, 16
  call void @llvm.memset.p0i8.i64(i8* align 1 %109, i8 -128, i64 %110, i1 false) #11
  %111 = load i8*, i8** %108, align 8
  %112 = load i64, i64* %97, align 8
  %113 = getelementptr inbounds i8, i8* %111, i64 %112
  store i8 -1, i8* %113, align 1
  %114 = load i64, i64* %97, align 8
  %115 = lshr i64 %114, 3
  %116 = sub i64 %114, %115
  %117 = load i64, i64* %107, align 8
  %118 = sub i64 %116, %117
  %119 = getelementptr inbounds %"class.gl::TypedResourceManager.250", %"class.gl::TypedResourceManager.250"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %118, i64* %119, align 8
  br label %120

120:                                              ; preds = %100, %104, %106
  ret void

121:                                              ; preds = %88, %82
  %122 = load %"class.gl::Texture"*, %"class.gl::Texture"** %57, align 8
  %123 = icmp eq %"class.gl::Texture"* %122, null
  br i1 %123, label %138, label %124

124:                                              ; preds = %121
  %125 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %122, i64 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %122, i64 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = add i64 %127, -1
  store i64 %128, i64* %126, align 8
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %138

130:                                              ; preds = %124
  %131 = bitcast %"class.gl::Texture"* %122 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %132 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %131, align 8
  %133 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %132, align 8
  call void %133(%"class.angle::RefCountObject"* %125, %"class.gl::Context"* %1) #11
  %134 = bitcast %"class.gl::Texture"* %122 to void (%"class.angle::RefCountObject"*)***
  %135 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %135, i64 2
  %137 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %136, align 8
  call void %137(%"class.angle::RefCountObject"* nonnull %125) #11
  br label %138

138:                                              ; preds = %130, %124, %121
  %139 = call dereferenceable(56) %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* @_ZN2gl11ResourceMapINS_7TextureENS_9TextureIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* nonnull %3)
  %140 = load i32, i32* %53, align 8
  br label %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* @_ZN2gl11ResourceMapINS_7TextureENS_9TextureIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0, i64 0, i32 0
  %5 = load %"class.gl::ResourceMap.251"*, %"class.gl::ResourceMap.251"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = icmp ult i32 %3, %8
  br i1 %9, label %10, label %35

10:                                               ; preds = %1
  %11 = add nuw i32 %3, 1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0, i64 0, i32 5
  %14 = load i8, i8* %13, align 8, !range !11
  %15 = icmp ne i8 %14, 0
  %16 = icmp ugt i64 %7, %12
  br i1 %16, label %17, label %33

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %5, i64 0, i32 1
  %19 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %18, align 8
  br label %20

20:                                               ; preds = %30, %17
  %21 = phi i64 [ %12, %17 ], [ %31, %30 ]
  %22 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %19, i64 %21
  %23 = load %"class.gl::Texture"*, %"class.gl::Texture"** %22, align 8
  %24 = icmp eq %"class.gl::Texture"* %23, null
  %25 = and i1 %15, %24
  %26 = icmp eq %"class.gl::Texture"* %23, inttoptr (i64 -1 to %"class.gl::Texture"*)
  %27 = or i1 %26, %25
  br i1 %27, label %30, label %28

28:                                               ; preds = %20
  %29 = trunc i64 %21 to i32
  br label %33

30:                                               ; preds = %20
  %31 = add i64 %21, 1
  %32 = icmp eq i64 %31, %7
  br i1 %32, label %33, label %20

33:                                               ; preds = %30, %28, %10
  %34 = phi i32 [ %8, %10 ], [ %29, %28 ], [ %8, %30 ]
  store i32 %34, i32* %2, align 8
  br label %69

35:                                               ; preds = %1
  %36 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %39 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %38, align 8
  %40 = icmp eq i8* %37, null
  br i1 %40, label %44, label %41, !prof !4

41:                                               ; preds = %35
  %42 = load i8, i8* %37, align 1
  %43 = icmp sgt i8 %42, -1
  br i1 %43, label %45, label %44, !prof !3

44:                                               ; preds = %41, %35
  tail call void @llvm.trap() #11
  unreachable

45:                                               ; preds = %41
  %46 = getelementptr inbounds i8, i8* %37, i64 1
  store i8* %46, i8** %36, align 8
  %47 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %39, i64 1
  store %"union.absl::container_internal::map_slot_type.273"* %47, %"union.absl::container_internal::map_slot_type.273"** %38, align 8
  %48 = load i8, i8* %46, align 1
  %49 = icmp slt i8 %48, -1
  br i1 %49, label %50, label %65

50:                                               ; preds = %45, %50
  %51 = phi %"union.absl::container_internal::map_slot_type.273"* [ %62, %50 ], [ %47, %45 ]
  %52 = phi i8* [ %61, %50 ], [ %46, %45 ]
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1
  %55 = icmp slt <16 x i8> %54, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %56 = bitcast <16 x i1> %55 to i16
  %57 = zext i16 %56 to i32
  %58 = add nuw nsw i32 %57, 1
  %59 = tail call i32 @llvm.cttz.i32(i32 %58, i1 true) #11, !range !2
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %52, i64 %60
  store i8* %61, i8** %36, align 8
  %62 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %51, i64 %60
  store %"union.absl::container_internal::map_slot_type.273"* %62, %"union.absl::container_internal::map_slot_type.273"** %38, align 8
  %63 = load i8, i8* %61, align 1
  %64 = icmp slt i8 %63, -1
  br i1 %64, label %50, label %65

65:                                               ; preds = %50, %45
  %66 = phi i8 [ %48, %45 ], [ %63, %50 ]
  %67 = icmp eq i8 %66, -1
  br i1 %67, label %68, label %69, !prof !4

68:                                               ; preds = %65
  store i8* null, i8** %36, align 8
  br label %69

69:                                               ; preds = %68, %65, %33
  %70 = phi i32 [ %3, %68 ], [ %3, %65 ], [ %34, %33 ]
  %71 = load i64, i64* %6, align 8
  %72 = trunc i64 %71 to i32
  %73 = icmp ult i32 %70, %72
  br i1 %73, label %74, label %80

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 %70, i32* %75, align 8
  %76 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %5, i64 0, i32 1
  %77 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %76, align 8
  %78 = zext i32 %70 to i64
  %79 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %77, i64 %78
  br label %99

80:                                               ; preds = %69
  %81 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %105, label %84

84:                                               ; preds = %80
  %85 = load i8, i8* %82, align 1
  %86 = icmp sgt i8 %85, -1
  br i1 %86, label %88, label %87, !prof !3

87:                                               ; preds = %84
  tail call void @llvm.trap() #11
  unreachable

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %90 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %89, align 8
  %91 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %90, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 %92, i32* %93, align 8
  %94 = load i8, i8* %82, align 1
  %95 = icmp sgt i8 %94, -1
  br i1 %95, label %97, label %96, !prof !3

96:                                               ; preds = %88
  tail call void @llvm.trap() #11
  unreachable

97:                                               ; preds = %88
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %90, i64 0, i32 0, i32 1
  br label %99

99:                                               ; preds = %97, %74
  %100 = phi %"class.gl::Texture"** [ %79, %74 ], [ %98, %97 ]
  %101 = bitcast %"class.gl::Texture"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0, i64 0, i32 4, i32 1
  %104 = bitcast %"class.gl::Texture"** %103 to i64*
  store i64 %102, i64* %104, align 8
  br label %105

105:                                              ; preds = %99, %80
  ret %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEEC2Ev(%"class.gl::TypedResourceManager.279"*) unnamed_addr #1 comdat($_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorC1Ev(%"class.gl::HandleAllocator"* %3) #11
  %4 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = bitcast i64* %4 to <2 x i64>*
  store <2 x i64> <i64 1, i64 32>, <2 x i64>* %5, align 8
  %6 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 1
  %7 = tail call i8* @_Znam(i64 256) #14
  %8 = bitcast %"class.gl::Renderbuffer"*** %6 to i8**
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %11 = bitcast %"union.absl::container_internal::map_slot_type.284"** %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -1, i64 256, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEE12deleteObjectEPKNS_7ContextES3_(%"class.gl::TypedResourceManager.279"*, %"class.gl::Context"*, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.gl::Renderbuffer"*, align 8
  %5 = bitcast %"class.gl::Renderbuffer"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  store %"class.gl::Renderbuffer"* null, %"class.gl::Renderbuffer"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1
  %7 = call zeroext i1 @_ZN2gl11ResourceMapINS_12RenderbufferENS_14RenderbufferIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.280"* %6, i32 %2, %"class.gl::Renderbuffer"** nonnull %4)
  br i1 %7, label %8, label %26

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 0, i32 1
  call void @_ZN2gl15HandleAllocator7releaseEj(%"class.gl::HandleAllocator"* %9, i32 %2) #11
  %10 = load %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %4, align 8
  %11 = icmp eq %"class.gl::Renderbuffer"* %10, null
  br i1 %11, label %26, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::Renderbuffer", %"class.gl::Renderbuffer"* %10, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.gl::Renderbuffer", %"class.gl::Renderbuffer"* %10, i64 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, -1
  store i64 %16, i64* %14, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %26

18:                                               ; preds = %12
  %19 = bitcast %"class.gl::Renderbuffer"* %10 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %20 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %19, align 8
  %21 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %20, align 8
  call void %21(%"class.angle::RefCountObject"* %13, %"class.gl::Context"* %1) #11
  %22 = bitcast %"class.gl::Renderbuffer"* %10 to void (%"class.angle::RefCountObject"*)***
  %23 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %23, i64 2
  %25 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %24, align 8
  call void %25(%"class.angle::RefCountObject"* nonnull %13) #11
  br label %26

26:                                               ; preds = %18, %12, %8, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2gl11ResourceMapINS_12RenderbufferENS_14RenderbufferIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.280"*, i32, %"class.gl::Renderbuffer"**) local_unnamed_addr #3 comdat align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %4
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %0, i64 0, i32 1
  %10 = load %"class.gl::Renderbuffer"**, %"class.gl::Renderbuffer"*** %9, align 8
  %11 = getelementptr inbounds %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %10, i64 %4
  %12 = load %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %11, align 8
  %13 = icmp eq %"class.gl::Renderbuffer"* %12, inttoptr (i64 -1 to %"class.gl::Renderbuffer"*)
  br i1 %13, label %134, label %14

14:                                               ; preds = %8
  %15 = ptrtoint %"class.gl::Renderbuffer"* %12 to i64
  %16 = bitcast %"class.gl::Renderbuffer"** %2 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.gl::Renderbuffer"* inttoptr (i64 -1 to %"class.gl::Renderbuffer"*), %"class.gl::Renderbuffer"** %11, align 8
  br label %134

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %4
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %18, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %17
  %40 = phi i64 [ %33, %17 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %17 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #11, !range !2
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !3

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %134, !prof !4

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #11
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !3

77:                                               ; preds = %72
  tail call void @llvm.trap() #11
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %51, i64 %57, i32 0, i32 1
  %80 = bitcast %"class.gl::Renderbuffer"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.gl::Renderbuffer"** %2 to i64*
  store i64 %81, i64* %82, align 8
  %83 = load i8, i8* %73, align 1
  %84 = icmp sgt i8 %83, -1
  br i1 %84, label %86, label %85, !prof !3

85:                                               ; preds = %78
  tail call void @llvm.trap() #11
  unreachable

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, -1
  store i64 %89, i64* %87, align 8
  %90 = bitcast %"class.absl::container_internal::raw_hash_set.283"* %18 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = ptrtoint i8* %73 to i64
  %93 = sub i64 %92, %91
  %94 = add i64 %93, -16
  %95 = load i64, i64* %28, align 8
  %96 = and i64 %94, %95
  %97 = bitcast i8* %73 to <16 x i8>*
  %98 = load <16 x i8>, <16 x i8>* %97, align 1
  %99 = icmp eq <16 x i8> %98, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %100 = bitcast <16 x i1> %99 to i16
  %101 = inttoptr i64 %91 to i8*
  %102 = getelementptr inbounds i8, i8* %101, i64 %96
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1
  %105 = icmp eq <16 x i8> %104, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %106 = bitcast <16 x i1> %105 to i16
  %107 = icmp ne i16 %106, 0
  %108 = icmp ne i16 %100, 0
  %109 = and i1 %108, %107
  br i1 %109, label %110, label %120

110:                                              ; preds = %86
  %111 = zext i16 %100 to i32
  %112 = zext i16 %106 to i32
  %113 = tail call i32 @llvm.cttz.i32(i32 %111, i1 false) #11, !range !2
  %114 = shl nuw i32 %112, 16
  %115 = tail call i32 @llvm.ctlz.i32(i32 %114, i1 false) #11, !range !2
  %116 = add nuw nsw i32 %115, %113
  %117 = icmp ult i32 %116, 16
  %118 = zext i1 %117 to i64
  %119 = select i1 %117, i8 -128, i8 -2
  br label %120

120:                                              ; preds = %86, %110
  %121 = phi i64 [ 0, %86 ], [ %118, %110 ]
  %122 = phi i8 [ -2, %86 ], [ %119, %110 ]
  %123 = getelementptr inbounds i8, i8* %101, i64 %93
  store i8 %122, i8* %123, align 1
  %124 = load i8*, i8** %26, align 8
  %125 = add i64 %93, -15
  %126 = load i64, i64* %28, align 8
  %127 = and i64 %126, %125
  %128 = and i64 %126, 15
  %129 = add i64 %127, %128
  %130 = getelementptr inbounds i8, i8* %124, i64 %129
  store i8 %122, i8* %130, align 1
  %131 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %0, i64 0, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, %121
  store i64 %133, i64* %131, align 8
  br label %134

134:                                              ; preds = %65, %14, %120, %8
  %135 = phi i1 [ false, %8 ], [ true, %120 ], [ true, %14 ], [ false, %65 ]
  ret i1 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19RenderbufferManager12DeleteObjectEPKNS_7ContextEPNS_12RenderbufferE(%"class.gl::Context"*, %"class.gl::Renderbuffer"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Renderbuffer", %"class.gl::Renderbuffer"* %1, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.gl::Renderbuffer", %"class.gl::Renderbuffer"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  store i64 %6, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %18

8:                                                ; preds = %2
  %9 = bitcast %"class.gl::Renderbuffer"* %1 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %10 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %9, align 8
  %11 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %10, align 8
  tail call void %11(%"class.angle::RefCountObject"* %3, %"class.gl::Context"* %0) #11
  %12 = icmp eq %"class.gl::Renderbuffer"* %1, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.gl::Renderbuffer"* %1 to void (%"class.angle::RefCountObject"*)***
  %15 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %15, i64 2
  %17 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %16, align 8
  tail call void %17(%"class.angle::RefCountObject"* nonnull %3) #11
  br label %18

18:                                               ; preds = %2, %8, %13
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEE17isHandleGeneratedES3_(%"class.gl::TypedResourceManager.279"*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %78, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %5
  br i1 %8, label %9, label %15

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 1
  %11 = load %"class.gl::Renderbuffer"**, %"class.gl::Renderbuffer"*** %10, align 8
  %12 = getelementptr inbounds %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %11, i64 %5
  %13 = load %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %12, align 8
  %14 = icmp ne %"class.gl::Renderbuffer"* %13, inttoptr (i64 -1 to %"class.gl::Renderbuffer"*)
  br label %78

15:                                               ; preds = %4
  %16 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %17 = add i64 %16, %5
  %18 = zext i64 %17 to i128
  %19 = mul nuw i128 %18, 11376068507788127593
  %20 = lshr i128 %19, 64
  %21 = xor i128 %20, %19
  %22 = trunc i128 %21 to i64
  %23 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %26 = load i64, i64* %25, align 8
  %27 = lshr i64 %22, 7
  %28 = ptrtoint i8* %24 to i64
  %29 = lshr i64 %28, 12
  %30 = xor i64 %27, %29
  %31 = trunc i128 %21 to i8
  %32 = and i8 %31, 127
  %33 = insertelement <16 x i8> undef, i8 %32, i32 0
  %34 = shufflevector <16 x i8> %33, <16 x i8> undef, <16 x i32> zeroinitializer
  %35 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %36

36:                                               ; preds = %66, %15
  %37 = phi i64 [ %30, %15 ], [ %68, %66 ]
  %38 = phi i64 [ 0, %15 ], [ %67, %66 ]
  %39 = and i64 %37, %26
  %40 = getelementptr inbounds i8, i8* %24, i64 %39
  %41 = bitcast i8* %40 to <16 x i8>*
  %42 = load <16 x i8>, <16 x i8>* %41, align 1
  %43 = icmp eq <16 x i8> %34, %42
  %44 = bitcast <16 x i1> %43 to i16
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %62, label %46

46:                                               ; preds = %36
  %47 = zext i16 %44 to i32
  %48 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %35, align 8
  br label %49

49:                                               ; preds = %58, %46
  %50 = phi i32 [ %47, %46 ], [ %60, %58 ]
  %51 = tail call i32 @llvm.cttz.i32(i32 %50, i1 false) #11, !range !2
  %52 = zext i32 %51 to i64
  %53 = add i64 %39, %52
  %54 = and i64 %53, %26
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %48, i64 %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %1
  br i1 %57, label %69, label %58, !prof !3

58:                                               ; preds = %49
  %59 = add i32 %50, -1
  %60 = and i32 %59, %50
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %49

62:                                               ; preds = %58, %36
  %63 = icmp eq <16 x i8> %42, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %64 = bitcast <16 x i1> %63 to i16
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %66, label %75, !prof !4

66:                                               ; preds = %62
  %67 = add i64 %38, 16
  %68 = add i64 %67, %39
  br label %36

69:                                               ; preds = %49
  %70 = getelementptr inbounds i8, i8* %24, i64 %54
  %71 = icmp ne i8* %70, null
  tail call void @llvm.assume(i1 %71) #11
  %72 = load i8, i8* %70, align 1
  %73 = icmp sgt i8 %72, -1
  br i1 %73, label %75, label %74, !prof !3

74:                                               ; preds = %69
  tail call void @llvm.trap() #11
  unreachable

75:                                               ; preds = %62, %69
  %76 = phi i8* [ %70, %69 ], [ null, %62 ]
  %77 = icmp ne i8* %76, null
  br label %78

78:                                               ; preds = %75, %9, %2
  %79 = phi i1 [ true, %2 ], [ %14, %9 ], [ %77, %75 ]
  ret i1 %79
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEE5beginEv(%"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* noalias sret, %"class.gl::TypedResourceManager.279"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %1, i64 0, i32 1
  tail call void @_ZNK2gl11ResourceMapINS_12RenderbufferENS_14RenderbufferIDEE5beginEv(%"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* sret %0, %"class.gl::ResourceMap.280"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2gl11ResourceMapINS_12RenderbufferENS_14RenderbufferIDEE5beginEv(%"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* noalias sret, %"class.gl::ResourceMap.280"*) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %1, i64 0, i32 1
  %8 = load %"class.gl::Renderbuffer"**, %"class.gl::Renderbuffer"*** %7, align 8
  br label %9

9:                                                ; preds = %14, %6
  %10 = phi i64 [ 0, %6 ], [ %15, %14 ]
  %11 = getelementptr inbounds %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %8, i64 %10
  %12 = bitcast %"class.gl::Renderbuffer"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  switch i64 %13, label %17 [
    i64 -1, label %14
    i64 0, label %14
  ]

14:                                               ; preds = %9, %9
  %15 = add nuw i64 %10, 1
  %16 = icmp eq i64 %15, %4
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %14, %2
  %18 = phi i64 [ 0, %2 ], [ %10, %9 ], [ %4, %14 ]
  %19 = trunc i64 %18 to i32
  %20 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %23 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %22, align 8
  %24 = icmp ne i8* %21, null
  tail call void @llvm.assume(i1 %24) #11
  %25 = load i8, i8* %21, align 1
  %26 = icmp slt i8 %25, -1
  br i1 %26, label %27, label %42

27:                                               ; preds = %17, %27
  %28 = phi %"union.absl::container_internal::map_slot_type.284"* [ %39, %27 ], [ %23, %17 ]
  %29 = phi i8* [ %38, %27 ], [ %21, %17 ]
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp slt <16 x i8> %31, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %33 = bitcast <16 x i1> %32 to i16
  %34 = zext i16 %33 to i32
  %35 = add nuw nsw i32 %34, 1
  %36 = tail call i32 @llvm.cttz.i32(i32 %35, i1 true) #11, !range !2
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %29, i64 %37
  %39 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %28, i64 %37
  %40 = load i8, i8* %38, align 1
  %41 = icmp slt i8 %40, -1
  br i1 %41, label %27, label %42

42:                                               ; preds = %27, %17
  %43 = phi %"union.absl::container_internal::map_slot_type.284"* [ %23, %17 ], [ %39, %27 ]
  %44 = phi i8* [ %21, %17 ], [ %38, %27 ]
  %45 = phi i8 [ %25, %17 ], [ %40, %27 ]
  %46 = icmp eq i8 %45, -1
  %47 = select i1 %46, i8* null, i8* %44, !prof !4
  %48 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0, i64 0, i32 0
  store %"class.gl::ResourceMap.280"* %1, %"class.gl::ResourceMap.280"** %48, align 8
  %49 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0, i64 0, i32 1
  store i32 %19, i32* %49, align 8
  %50 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  store i8* %47, i8** %50, align 8
  %51 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type.284"* %43, %"union.absl::container_internal::map_slot_type.284"** %51, align 8
  %52 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0, i64 0, i32 4, i32 1
  store %"class.gl::Renderbuffer"* null, %"class.gl::Renderbuffer"** %53, align 8
  %54 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0, i64 0, i32 5
  store i8 1, i8* %54, align 8
  %55 = trunc i64 %4 to i32
  %56 = icmp ugt i32 %55, %19
  br i1 %56, label %57, label %62

57:                                               ; preds = %42
  store i32 %19, i32* %52, align 8
  %58 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %1, i64 0, i32 1
  %59 = load %"class.gl::Renderbuffer"**, %"class.gl::Renderbuffer"*** %58, align 8
  %60 = and i64 %18, 4294967295
  %61 = getelementptr inbounds %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %59, i64 %60
  br label %76

62:                                               ; preds = %42
  %63 = icmp eq i8* %47, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %62
  %65 = load i8, i8* %47, align 1
  %66 = icmp sgt i8 %65, -1
  br i1 %66, label %68, label %67, !prof !3

67:                                               ; preds = %64
  tail call void @llvm.trap() #11
  unreachable

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %43, i64 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 8
  store i32 %70, i32* %52, align 8
  %71 = load i8, i8* %47, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %74, label %73, !prof !3

73:                                               ; preds = %68
  tail call void @llvm.trap() #11
  unreachable

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %43, i64 0, i32 0, i32 1
  br label %76

76:                                               ; preds = %74, %57
  %77 = phi %"class.gl::Renderbuffer"** [ %61, %57 ], [ %75, %74 ]
  %78 = bitcast %"class.gl::Renderbuffer"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.gl::Renderbuffer"** %53 to i64*
  store i64 %79, i64* %80, align 8
  br label %81

81:                                               ; preds = %76, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEE3endEv(%"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* noalias sret, %"class.gl::TypedResourceManager.279"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %3, i64 0, i32 0
  %5 = load i64, i64* %4, align 8, !noalias !18
  %6 = trunc i64 %5 to i32
  %7 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0, i64 0, i32 0
  store %"class.gl::ResourceMap.280"* %3, %"class.gl::ResourceMap.280"** %7, align 8, !alias.scope !18
  %8 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0, i64 0, i32 1
  store i32 %6, i32* %8, align 8, !alias.scope !18
  %9 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  store i8* null, i8** %9, align 8, !alias.scope !18
  %10 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !18
  %11 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0, i64 0, i32 4, i32 1
  store %"class.gl::Renderbuffer"* null, %"class.gl::Renderbuffer"** %11, align 8, !alias.scope !18
  %12 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0, i64 0, i32 5
  store i8 1, i8* %12, align 8, !alias.scope !18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEED2Ev(%"class.gl::TypedResourceManager.279"*) unnamed_addr #1 comdat($_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.gl::Renderbuffer"**, %"class.gl::Renderbuffer"*** %3, align 8
  %5 = icmp eq %"class.gl::Renderbuffer"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Renderbuffer"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.284"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEED0Ev(%"class.gl::TypedResourceManager.279"*) unnamed_addr #1 comdat($_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.gl::Renderbuffer"**, %"class.gl::Renderbuffer"*** %3, align 8
  %5 = icmp eq %"class.gl::Renderbuffer"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Renderbuffer"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.284"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  %19 = bitcast %"class.gl::TypedResourceManager.279"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEE5resetEPKNS_7ContextE(%"class.gl::TypedResourceManager.279"*, %"class.gl::Context"*) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", align 8
  %4 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocator5resetEv(%"class.gl::HandleAllocator"* %4) #11
  %5 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1
  %6 = bitcast %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 56, i1 false)
  %7 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %5, i64 0, i32 0
  %8 = load i64, i64* %7, align 8, !noalias !21
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 1
  %12 = load %"class.gl::Renderbuffer"**, %"class.gl::Renderbuffer"*** %11, align 8, !noalias !21
  br label %13

13:                                               ; preds = %18, %10
  %14 = phi i64 [ 0, %10 ], [ %19, %18 ]
  %15 = getelementptr inbounds %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %12, i64 %14
  %16 = bitcast %"class.gl::Renderbuffer"** %15 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !21
  switch i64 %17, label %21 [
    i64 -1, label %18
    i64 0, label %18
  ]

18:                                               ; preds = %13, %13
  %19 = add nuw i64 %14, 1
  %20 = icmp eq i64 %19, %8
  br i1 %20, label %21, label %13

21:                                               ; preds = %18, %13, %2
  %22 = phi i64 [ 0, %2 ], [ %8, %18 ], [ %14, %13 ]
  %23 = trunc i64 %22 to i32
  %24 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8, !noalias !21
  %26 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %27 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %26, align 8, !noalias !21
  %28 = icmp ne i8* %25, null
  tail call void @llvm.assume(i1 %28) #11, !noalias !21
  %29 = load i8, i8* %25, align 1, !noalias !21
  %30 = icmp slt i8 %29, -1
  br i1 %30, label %31, label %46

31:                                               ; preds = %21, %31
  %32 = phi %"union.absl::container_internal::map_slot_type.284"* [ %43, %31 ], [ %27, %21 ]
  %33 = phi i8* [ %42, %31 ], [ %25, %21 ]
  %34 = bitcast i8* %33 to <16 x i8>*
  %35 = load <16 x i8>, <16 x i8>* %34, align 1, !noalias !21
  %36 = icmp slt <16 x i8> %35, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %37 = bitcast <16 x i1> %36 to i16
  %38 = zext i16 %37 to i32
  %39 = add nuw nsw i32 %38, 1
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 true) #11, !range !2
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %33, i64 %41
  %43 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %32, i64 %41
  %44 = load i8, i8* %42, align 1, !noalias !21
  %45 = icmp slt i8 %44, -1
  br i1 %45, label %31, label %46

46:                                               ; preds = %31, %21
  %47 = phi %"union.absl::container_internal::map_slot_type.284"* [ %27, %21 ], [ %43, %31 ]
  %48 = phi i8* [ %25, %21 ], [ %42, %31 ]
  %49 = phi i8 [ %29, %21 ], [ %44, %31 ]
  %50 = icmp eq i8 %49, -1
  %51 = select i1 %50, i8* null, i8* %48, !prof !4
  %52 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %3, i64 0, i32 0
  store %"class.gl::ResourceMap.280"* %5, %"class.gl::ResourceMap.280"** %52, align 8, !alias.scope !21
  %53 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %3, i64 0, i32 1
  store i32 %23, i32* %53, align 8, !alias.scope !21
  %54 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %3, i64 0, i32 3, i32 0, i32 0
  store i8* %51, i8** %54, align 8, !alias.scope !21
  %55 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %3, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type.284"* %47, %"union.absl::container_internal::map_slot_type.284"** %55, align 8, !alias.scope !21
  %56 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %3, i64 0, i32 4, i32 0
  store i32 0, i32* %56, align 8, !alias.scope !21
  %57 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %3, i64 0, i32 4, i32 1
  store %"class.gl::Renderbuffer"* null, %"class.gl::Renderbuffer"** %57, align 8, !alias.scope !21
  %58 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %3, i64 0, i32 5
  store i8 1, i8* %58, align 8, !alias.scope !21
  %59 = trunc i64 %8 to i32
  %60 = icmp ugt i32 %59, %23
  br i1 %60, label %61, label %66

61:                                               ; preds = %46
  store i32 %23, i32* %56, align 8, !alias.scope !21
  %62 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 1
  %63 = load %"class.gl::Renderbuffer"**, %"class.gl::Renderbuffer"*** %62, align 8, !noalias !21
  %64 = and i64 %22, 4294967295
  %65 = getelementptr inbounds %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %63, i64 %64
  br label %76

66:                                               ; preds = %46
  %67 = icmp eq i8* %51, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %66
  %69 = load i8, i8* %51, align 1, !noalias !21
  %70 = icmp sgt i8 %69, -1
  br i1 %70, label %72, label %71, !prof !3

71:                                               ; preds = %68
  tail call void @llvm.trap() #11, !noalias !21
  unreachable

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %47, i64 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 8, !noalias !21
  store i32 %74, i32* %56, align 8, !alias.scope !21
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %47, i64 0, i32 0, i32 1
  br label %76

76:                                               ; preds = %72, %61
  %77 = phi %"class.gl::Renderbuffer"** [ %65, %61 ], [ %75, %72 ]
  %78 = bitcast %"class.gl::Renderbuffer"** %77 to i64*
  %79 = load i64, i64* %78, align 8, !noalias !21
  %80 = bitcast %"class.gl::Renderbuffer"** %57 to i64*
  store i64 %79, i64* %80, align 8, !alias.scope !21
  br label %81

81:                                               ; preds = %76, %66
  br label %82

82:                                               ; preds = %81, %138
  %83 = phi i32 [ %140, %138 ], [ %23, %81 ]
  %84 = icmp eq i32 %83, %59
  br i1 %84, label %85, label %121

85:                                               ; preds = %82
  %86 = load i8*, i8** %54, align 8
  %87 = icmp eq i8* %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %85
  %89 = load i8, i8* %86, align 1
  %90 = icmp sgt i8 %89, -1
  br i1 %90, label %121, label %91, !prof !3

91:                                               ; preds = %88
  call void @llvm.trap() #11
  unreachable

92:                                               ; preds = %85
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #11
  %93 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 1
  %94 = bitcast %"class.gl::Renderbuffer"*** %93 to i8**
  %95 = load i8*, i8** %94, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 -1, i64 256, i1 false) #11
  store i64 32, i64* %7, align 8
  %96 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  %97 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %98 = load i64, i64* %97, align 8
  %99 = icmp ugt i64 %98, 127
  br i1 %99, label %100, label %104

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %96, i64 0, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %101, align 8
  %103 = bitcast %"union.absl::container_internal::map_slot_type.284"** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 32, i1 false) #11
  br label %120

104:                                              ; preds = %92
  %105 = icmp eq i64 %98, 0
  br i1 %105, label %120, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  store i64 0, i64* %107, align 8
  %108 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %96, i64 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = add nuw nsw i64 %98, 16
  call void @llvm.memset.p0i8.i64(i8* align 1 %109, i8 -128, i64 %110, i1 false) #11
  %111 = load i8*, i8** %108, align 8
  %112 = load i64, i64* %97, align 8
  %113 = getelementptr inbounds i8, i8* %111, i64 %112
  store i8 -1, i8* %113, align 1
  %114 = load i64, i64* %97, align 8
  %115 = lshr i64 %114, 3
  %116 = sub i64 %114, %115
  %117 = load i64, i64* %107, align 8
  %118 = sub i64 %116, %117
  %119 = getelementptr inbounds %"class.gl::TypedResourceManager.279", %"class.gl::TypedResourceManager.279"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %118, i64* %119, align 8
  br label %120

120:                                              ; preds = %100, %104, %106
  ret void

121:                                              ; preds = %88, %82
  %122 = load %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %57, align 8
  %123 = icmp eq %"class.gl::Renderbuffer"* %122, null
  br i1 %123, label %138, label %124

124:                                              ; preds = %121
  %125 = getelementptr inbounds %"class.gl::Renderbuffer", %"class.gl::Renderbuffer"* %122, i64 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.gl::Renderbuffer", %"class.gl::Renderbuffer"* %122, i64 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = add i64 %127, -1
  store i64 %128, i64* %126, align 8
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %138

130:                                              ; preds = %124
  %131 = bitcast %"class.gl::Renderbuffer"* %122 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %132 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %131, align 8
  %133 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %132, align 8
  call void %133(%"class.angle::RefCountObject"* %125, %"class.gl::Context"* %1) #11
  %134 = bitcast %"class.gl::Renderbuffer"* %122 to void (%"class.angle::RefCountObject"*)***
  %135 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %135, i64 2
  %137 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %136, align 8
  call void %137(%"class.angle::RefCountObject"* nonnull %125) #11
  br label %138

138:                                              ; preds = %130, %124, %121
  %139 = call dereferenceable(56) %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* @_ZN2gl11ResourceMapINS_12RenderbufferENS_14RenderbufferIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* nonnull %3)
  %140 = load i32, i32* %53, align 8
  br label %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* @_ZN2gl11ResourceMapINS_12RenderbufferENS_14RenderbufferIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0, i64 0, i32 0
  %5 = load %"class.gl::ResourceMap.280"*, %"class.gl::ResourceMap.280"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = icmp ult i32 %3, %8
  br i1 %9, label %10, label %35

10:                                               ; preds = %1
  %11 = add nuw i32 %3, 1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0, i64 0, i32 5
  %14 = load i8, i8* %13, align 8, !range !11
  %15 = icmp ne i8 %14, 0
  %16 = icmp ugt i64 %7, %12
  br i1 %16, label %17, label %33

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %5, i64 0, i32 1
  %19 = load %"class.gl::Renderbuffer"**, %"class.gl::Renderbuffer"*** %18, align 8
  br label %20

20:                                               ; preds = %30, %17
  %21 = phi i64 [ %12, %17 ], [ %31, %30 ]
  %22 = getelementptr inbounds %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %19, i64 %21
  %23 = load %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %22, align 8
  %24 = icmp eq %"class.gl::Renderbuffer"* %23, null
  %25 = and i1 %15, %24
  %26 = icmp eq %"class.gl::Renderbuffer"* %23, inttoptr (i64 -1 to %"class.gl::Renderbuffer"*)
  %27 = or i1 %26, %25
  br i1 %27, label %30, label %28

28:                                               ; preds = %20
  %29 = trunc i64 %21 to i32
  br label %33

30:                                               ; preds = %20
  %31 = add i64 %21, 1
  %32 = icmp eq i64 %31, %7
  br i1 %32, label %33, label %20

33:                                               ; preds = %30, %28, %10
  %34 = phi i32 [ %8, %10 ], [ %29, %28 ], [ %8, %30 ]
  store i32 %34, i32* %2, align 8
  br label %69

35:                                               ; preds = %1
  %36 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %39 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %38, align 8
  %40 = icmp eq i8* %37, null
  br i1 %40, label %44, label %41, !prof !4

41:                                               ; preds = %35
  %42 = load i8, i8* %37, align 1
  %43 = icmp sgt i8 %42, -1
  br i1 %43, label %45, label %44, !prof !3

44:                                               ; preds = %41, %35
  tail call void @llvm.trap() #11
  unreachable

45:                                               ; preds = %41
  %46 = getelementptr inbounds i8, i8* %37, i64 1
  store i8* %46, i8** %36, align 8
  %47 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %39, i64 1
  store %"union.absl::container_internal::map_slot_type.284"* %47, %"union.absl::container_internal::map_slot_type.284"** %38, align 8
  %48 = load i8, i8* %46, align 1
  %49 = icmp slt i8 %48, -1
  br i1 %49, label %50, label %65

50:                                               ; preds = %45, %50
  %51 = phi %"union.absl::container_internal::map_slot_type.284"* [ %62, %50 ], [ %47, %45 ]
  %52 = phi i8* [ %61, %50 ], [ %46, %45 ]
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1
  %55 = icmp slt <16 x i8> %54, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %56 = bitcast <16 x i1> %55 to i16
  %57 = zext i16 %56 to i32
  %58 = add nuw nsw i32 %57, 1
  %59 = tail call i32 @llvm.cttz.i32(i32 %58, i1 true) #11, !range !2
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %52, i64 %60
  store i8* %61, i8** %36, align 8
  %62 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %51, i64 %60
  store %"union.absl::container_internal::map_slot_type.284"* %62, %"union.absl::container_internal::map_slot_type.284"** %38, align 8
  %63 = load i8, i8* %61, align 1
  %64 = icmp slt i8 %63, -1
  br i1 %64, label %50, label %65

65:                                               ; preds = %50, %45
  %66 = phi i8 [ %48, %45 ], [ %63, %50 ]
  %67 = icmp eq i8 %66, -1
  br i1 %67, label %68, label %69, !prof !4

68:                                               ; preds = %65
  store i8* null, i8** %36, align 8
  br label %69

69:                                               ; preds = %68, %65, %33
  %70 = phi i32 [ %3, %68 ], [ %3, %65 ], [ %34, %33 ]
  %71 = load i64, i64* %6, align 8
  %72 = trunc i64 %71 to i32
  %73 = icmp ult i32 %70, %72
  br i1 %73, label %74, label %80

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 %70, i32* %75, align 8
  %76 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %5, i64 0, i32 1
  %77 = load %"class.gl::Renderbuffer"**, %"class.gl::Renderbuffer"*** %76, align 8
  %78 = zext i32 %70 to i64
  %79 = getelementptr inbounds %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %77, i64 %78
  br label %99

80:                                               ; preds = %69
  %81 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %105, label %84

84:                                               ; preds = %80
  %85 = load i8, i8* %82, align 1
  %86 = icmp sgt i8 %85, -1
  br i1 %86, label %88, label %87, !prof !3

87:                                               ; preds = %84
  tail call void @llvm.trap() #11
  unreachable

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %90 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %89, align 8
  %91 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %90, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 %92, i32* %93, align 8
  %94 = load i8, i8* %82, align 1
  %95 = icmp sgt i8 %94, -1
  br i1 %95, label %97, label %96, !prof !3

96:                                               ; preds = %88
  tail call void @llvm.trap() #11
  unreachable

97:                                               ; preds = %88
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %90, i64 0, i32 0, i32 1
  br label %99

99:                                               ; preds = %97, %74
  %100 = phi %"class.gl::Renderbuffer"** [ %79, %74 ], [ %98, %97 ]
  %101 = bitcast %"class.gl::Renderbuffer"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator", %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0, i64 0, i32 4, i32 1
  %104 = bitcast %"class.gl::Renderbuffer"** %103 to i64*
  store i64 %102, i64* %104, align 8
  br label %105

105:                                              ; preds = %99, %80
  ret %"class.gl::ResourceMap<gl::Renderbuffer, gl::RenderbufferID>::Iterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEEC2Ev(%"class.gl::TypedResourceManager.290"*) unnamed_addr #1 comdat($_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorC1Ev(%"class.gl::HandleAllocator"* %3) #11
  %4 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = bitcast i64* %4 to <2 x i64>*
  store <2 x i64> <i64 1, i64 32>, <2 x i64>* %5, align 8
  %6 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 1
  %7 = tail call i8* @_Znam(i64 256) #14
  %8 = bitcast %"class.gl::Sampler"*** %6 to i8**
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %11 = bitcast %"union.absl::container_internal::map_slot_type.297"** %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -1, i64 256, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEE12deleteObjectEPKNS_7ContextES3_(%"class.gl::TypedResourceManager.290"*, %"class.gl::Context"*, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.gl::Sampler"*, align 8
  %5 = bitcast %"class.gl::Sampler"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  store %"class.gl::Sampler"* null, %"class.gl::Sampler"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1
  %7 = call zeroext i1 @_ZN2gl11ResourceMapINS_7SamplerENS_9SamplerIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.291"* %6, i32 %2, %"class.gl::Sampler"** nonnull %4)
  br i1 %7, label %8, label %26

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 0, i32 1
  call void @_ZN2gl15HandleAllocator7releaseEj(%"class.gl::HandleAllocator"* %9, i32 %2) #11
  %10 = load %"class.gl::Sampler"*, %"class.gl::Sampler"** %4, align 8
  %11 = icmp eq %"class.gl::Sampler"* %10, null
  br i1 %11, label %26, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::Sampler", %"class.gl::Sampler"* %10, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.gl::Sampler", %"class.gl::Sampler"* %10, i64 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, -1
  store i64 %16, i64* %14, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %26

18:                                               ; preds = %12
  %19 = bitcast %"class.gl::Sampler"* %10 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %20 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %19, align 8
  %21 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %20, align 8
  call void %21(%"class.angle::RefCountObject"* %13, %"class.gl::Context"* %1) #11
  %22 = bitcast %"class.gl::Sampler"* %10 to void (%"class.angle::RefCountObject"*)***
  %23 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %23, i64 2
  %25 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %24, align 8
  call void %25(%"class.angle::RefCountObject"* nonnull %13) #11
  br label %26

26:                                               ; preds = %18, %12, %8, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2gl11ResourceMapINS_7SamplerENS_9SamplerIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.291"*, i32, %"class.gl::Sampler"**) local_unnamed_addr #3 comdat align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %4
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %0, i64 0, i32 1
  %10 = load %"class.gl::Sampler"**, %"class.gl::Sampler"*** %9, align 8
  %11 = getelementptr inbounds %"class.gl::Sampler"*, %"class.gl::Sampler"** %10, i64 %4
  %12 = load %"class.gl::Sampler"*, %"class.gl::Sampler"** %11, align 8
  %13 = icmp eq %"class.gl::Sampler"* %12, inttoptr (i64 -1 to %"class.gl::Sampler"*)
  br i1 %13, label %134, label %14

14:                                               ; preds = %8
  %15 = ptrtoint %"class.gl::Sampler"* %12 to i64
  %16 = bitcast %"class.gl::Sampler"** %2 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.gl::Sampler"* inttoptr (i64 -1 to %"class.gl::Sampler"*), %"class.gl::Sampler"** %11, align 8
  br label %134

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %4
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %18, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %17
  %40 = phi i64 [ %33, %17 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %17 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #11, !range !2
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !3

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %134, !prof !4

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #11
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !3

77:                                               ; preds = %72
  tail call void @llvm.trap() #11
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %51, i64 %57, i32 0, i32 1
  %80 = bitcast %"class.gl::Sampler"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.gl::Sampler"** %2 to i64*
  store i64 %81, i64* %82, align 8
  %83 = load i8, i8* %73, align 1
  %84 = icmp sgt i8 %83, -1
  br i1 %84, label %86, label %85, !prof !3

85:                                               ; preds = %78
  tail call void @llvm.trap() #11
  unreachable

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, -1
  store i64 %89, i64* %87, align 8
  %90 = bitcast %"class.absl::container_internal::raw_hash_set.296"* %18 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = ptrtoint i8* %73 to i64
  %93 = sub i64 %92, %91
  %94 = add i64 %93, -16
  %95 = load i64, i64* %28, align 8
  %96 = and i64 %94, %95
  %97 = bitcast i8* %73 to <16 x i8>*
  %98 = load <16 x i8>, <16 x i8>* %97, align 1
  %99 = icmp eq <16 x i8> %98, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %100 = bitcast <16 x i1> %99 to i16
  %101 = inttoptr i64 %91 to i8*
  %102 = getelementptr inbounds i8, i8* %101, i64 %96
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1
  %105 = icmp eq <16 x i8> %104, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %106 = bitcast <16 x i1> %105 to i16
  %107 = icmp ne i16 %106, 0
  %108 = icmp ne i16 %100, 0
  %109 = and i1 %108, %107
  br i1 %109, label %110, label %120

110:                                              ; preds = %86
  %111 = zext i16 %100 to i32
  %112 = zext i16 %106 to i32
  %113 = tail call i32 @llvm.cttz.i32(i32 %111, i1 false) #11, !range !2
  %114 = shl nuw i32 %112, 16
  %115 = tail call i32 @llvm.ctlz.i32(i32 %114, i1 false) #11, !range !2
  %116 = add nuw nsw i32 %115, %113
  %117 = icmp ult i32 %116, 16
  %118 = zext i1 %117 to i64
  %119 = select i1 %117, i8 -128, i8 -2
  br label %120

120:                                              ; preds = %86, %110
  %121 = phi i64 [ 0, %86 ], [ %118, %110 ]
  %122 = phi i8 [ -2, %86 ], [ %119, %110 ]
  %123 = getelementptr inbounds i8, i8* %101, i64 %93
  store i8 %122, i8* %123, align 1
  %124 = load i8*, i8** %26, align 8
  %125 = add i64 %93, -15
  %126 = load i64, i64* %28, align 8
  %127 = and i64 %126, %125
  %128 = and i64 %126, 15
  %129 = add i64 %127, %128
  %130 = getelementptr inbounds i8, i8* %124, i64 %129
  store i8 %122, i8* %130, align 1
  %131 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %0, i64 0, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, %121
  store i64 %133, i64* %131, align 8
  br label %134

134:                                              ; preds = %65, %14, %120, %8
  %135 = phi i1 [ false, %8 ], [ true, %120 ], [ true, %14 ], [ false, %65 ]
  ret i1 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl14SamplerManager12DeleteObjectEPKNS_7ContextEPNS_7SamplerE(%"class.gl::Context"*, %"class.gl::Sampler"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Sampler", %"class.gl::Sampler"* %1, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.gl::Sampler", %"class.gl::Sampler"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  store i64 %6, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %18

8:                                                ; preds = %2
  %9 = bitcast %"class.gl::Sampler"* %1 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %10 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %9, align 8
  %11 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %10, align 8
  tail call void %11(%"class.angle::RefCountObject"* %3, %"class.gl::Context"* %0) #11
  %12 = icmp eq %"class.gl::Sampler"* %1, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.gl::Sampler"* %1 to void (%"class.angle::RefCountObject"*)***
  %15 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %15, i64 2
  %17 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %16, align 8
  tail call void %17(%"class.angle::RefCountObject"* nonnull %3) #11
  br label %18

18:                                               ; preds = %2, %8, %13
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEE17isHandleGeneratedES3_(%"class.gl::TypedResourceManager.290"*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %78, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %5
  br i1 %8, label %9, label %15

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 1
  %11 = load %"class.gl::Sampler"**, %"class.gl::Sampler"*** %10, align 8
  %12 = getelementptr inbounds %"class.gl::Sampler"*, %"class.gl::Sampler"** %11, i64 %5
  %13 = load %"class.gl::Sampler"*, %"class.gl::Sampler"** %12, align 8
  %14 = icmp ne %"class.gl::Sampler"* %13, inttoptr (i64 -1 to %"class.gl::Sampler"*)
  br label %78

15:                                               ; preds = %4
  %16 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %17 = add i64 %16, %5
  %18 = zext i64 %17 to i128
  %19 = mul nuw i128 %18, 11376068507788127593
  %20 = lshr i128 %19, 64
  %21 = xor i128 %20, %19
  %22 = trunc i128 %21 to i64
  %23 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %26 = load i64, i64* %25, align 8
  %27 = lshr i64 %22, 7
  %28 = ptrtoint i8* %24 to i64
  %29 = lshr i64 %28, 12
  %30 = xor i64 %27, %29
  %31 = trunc i128 %21 to i8
  %32 = and i8 %31, 127
  %33 = insertelement <16 x i8> undef, i8 %32, i32 0
  %34 = shufflevector <16 x i8> %33, <16 x i8> undef, <16 x i32> zeroinitializer
  %35 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %36

36:                                               ; preds = %66, %15
  %37 = phi i64 [ %30, %15 ], [ %68, %66 ]
  %38 = phi i64 [ 0, %15 ], [ %67, %66 ]
  %39 = and i64 %37, %26
  %40 = getelementptr inbounds i8, i8* %24, i64 %39
  %41 = bitcast i8* %40 to <16 x i8>*
  %42 = load <16 x i8>, <16 x i8>* %41, align 1
  %43 = icmp eq <16 x i8> %34, %42
  %44 = bitcast <16 x i1> %43 to i16
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %62, label %46

46:                                               ; preds = %36
  %47 = zext i16 %44 to i32
  %48 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %35, align 8
  br label %49

49:                                               ; preds = %58, %46
  %50 = phi i32 [ %47, %46 ], [ %60, %58 ]
  %51 = tail call i32 @llvm.cttz.i32(i32 %50, i1 false) #11, !range !2
  %52 = zext i32 %51 to i64
  %53 = add i64 %39, %52
  %54 = and i64 %53, %26
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %48, i64 %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %1
  br i1 %57, label %69, label %58, !prof !3

58:                                               ; preds = %49
  %59 = add i32 %50, -1
  %60 = and i32 %59, %50
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %49

62:                                               ; preds = %58, %36
  %63 = icmp eq <16 x i8> %42, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %64 = bitcast <16 x i1> %63 to i16
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %66, label %75, !prof !4

66:                                               ; preds = %62
  %67 = add i64 %38, 16
  %68 = add i64 %67, %39
  br label %36

69:                                               ; preds = %49
  %70 = getelementptr inbounds i8, i8* %24, i64 %54
  %71 = icmp ne i8* %70, null
  tail call void @llvm.assume(i1 %71) #11
  %72 = load i8, i8* %70, align 1
  %73 = icmp sgt i8 %72, -1
  br i1 %73, label %75, label %74, !prof !3

74:                                               ; preds = %69
  tail call void @llvm.trap() #11
  unreachable

75:                                               ; preds = %62, %69
  %76 = phi i8* [ %70, %69 ], [ null, %62 ]
  %77 = icmp ne i8* %76, null
  br label %78

78:                                               ; preds = %75, %9, %2
  %79 = phi i1 [ true, %2 ], [ %14, %9 ], [ %77, %75 ]
  ret i1 %79
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEE5beginEv(%"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* noalias sret, %"class.gl::TypedResourceManager.290"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %1, i64 0, i32 1
  tail call void @_ZNK2gl11ResourceMapINS_7SamplerENS_9SamplerIDEE5beginEv(%"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* sret %0, %"class.gl::ResourceMap.291"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2gl11ResourceMapINS_7SamplerENS_9SamplerIDEE5beginEv(%"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* noalias sret, %"class.gl::ResourceMap.291"*) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %1, i64 0, i32 1
  %8 = load %"class.gl::Sampler"**, %"class.gl::Sampler"*** %7, align 8
  br label %9

9:                                                ; preds = %14, %6
  %10 = phi i64 [ 0, %6 ], [ %15, %14 ]
  %11 = getelementptr inbounds %"class.gl::Sampler"*, %"class.gl::Sampler"** %8, i64 %10
  %12 = bitcast %"class.gl::Sampler"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  switch i64 %13, label %17 [
    i64 -1, label %14
    i64 0, label %14
  ]

14:                                               ; preds = %9, %9
  %15 = add nuw i64 %10, 1
  %16 = icmp eq i64 %15, %4
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %14, %2
  %18 = phi i64 [ 0, %2 ], [ %10, %9 ], [ %4, %14 ]
  %19 = trunc i64 %18 to i32
  %20 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %23 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %22, align 8
  %24 = icmp ne i8* %21, null
  tail call void @llvm.assume(i1 %24) #11
  %25 = load i8, i8* %21, align 1
  %26 = icmp slt i8 %25, -1
  br i1 %26, label %27, label %42

27:                                               ; preds = %17, %27
  %28 = phi %"union.absl::container_internal::map_slot_type.297"* [ %39, %27 ], [ %23, %17 ]
  %29 = phi i8* [ %38, %27 ], [ %21, %17 ]
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp slt <16 x i8> %31, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %33 = bitcast <16 x i1> %32 to i16
  %34 = zext i16 %33 to i32
  %35 = add nuw nsw i32 %34, 1
  %36 = tail call i32 @llvm.cttz.i32(i32 %35, i1 true) #11, !range !2
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %29, i64 %37
  %39 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %28, i64 %37
  %40 = load i8, i8* %38, align 1
  %41 = icmp slt i8 %40, -1
  br i1 %41, label %27, label %42

42:                                               ; preds = %27, %17
  %43 = phi %"union.absl::container_internal::map_slot_type.297"* [ %23, %17 ], [ %39, %27 ]
  %44 = phi i8* [ %21, %17 ], [ %38, %27 ]
  %45 = phi i8 [ %25, %17 ], [ %40, %27 ]
  %46 = icmp eq i8 %45, -1
  %47 = select i1 %46, i8* null, i8* %44, !prof !4
  %48 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0, i64 0, i32 0
  store %"class.gl::ResourceMap.291"* %1, %"class.gl::ResourceMap.291"** %48, align 8
  %49 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0, i64 0, i32 1
  store i32 %19, i32* %49, align 8
  %50 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  store i8* %47, i8** %50, align 8
  %51 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type.297"* %43, %"union.absl::container_internal::map_slot_type.297"** %51, align 8
  %52 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0, i64 0, i32 4, i32 1
  store %"class.gl::Sampler"* null, %"class.gl::Sampler"** %53, align 8
  %54 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0, i64 0, i32 5
  store i8 1, i8* %54, align 8
  %55 = trunc i64 %4 to i32
  %56 = icmp ugt i32 %55, %19
  br i1 %56, label %57, label %62

57:                                               ; preds = %42
  store i32 %19, i32* %52, align 8
  %58 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %1, i64 0, i32 1
  %59 = load %"class.gl::Sampler"**, %"class.gl::Sampler"*** %58, align 8
  %60 = and i64 %18, 4294967295
  %61 = getelementptr inbounds %"class.gl::Sampler"*, %"class.gl::Sampler"** %59, i64 %60
  br label %76

62:                                               ; preds = %42
  %63 = icmp eq i8* %47, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %62
  %65 = load i8, i8* %47, align 1
  %66 = icmp sgt i8 %65, -1
  br i1 %66, label %68, label %67, !prof !3

67:                                               ; preds = %64
  tail call void @llvm.trap() #11
  unreachable

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %43, i64 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 8
  store i32 %70, i32* %52, align 8
  %71 = load i8, i8* %47, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %74, label %73, !prof !3

73:                                               ; preds = %68
  tail call void @llvm.trap() #11
  unreachable

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %43, i64 0, i32 0, i32 1
  br label %76

76:                                               ; preds = %74, %57
  %77 = phi %"class.gl::Sampler"** [ %61, %57 ], [ %75, %74 ]
  %78 = bitcast %"class.gl::Sampler"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.gl::Sampler"** %53 to i64*
  store i64 %79, i64* %80, align 8
  br label %81

81:                                               ; preds = %76, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEE3endEv(%"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* noalias sret, %"class.gl::TypedResourceManager.290"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %3, i64 0, i32 0
  %5 = load i64, i64* %4, align 8, !noalias !24
  %6 = trunc i64 %5 to i32
  %7 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0, i64 0, i32 0
  store %"class.gl::ResourceMap.291"* %3, %"class.gl::ResourceMap.291"** %7, align 8, !alias.scope !24
  %8 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0, i64 0, i32 1
  store i32 %6, i32* %8, align 8, !alias.scope !24
  %9 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  store i8* null, i8** %9, align 8, !alias.scope !24
  %10 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !24
  %11 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0, i64 0, i32 4, i32 1
  store %"class.gl::Sampler"* null, %"class.gl::Sampler"** %11, align 8, !alias.scope !24
  %12 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0, i64 0, i32 5
  store i8 1, i8* %12, align 8, !alias.scope !24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEED2Ev(%"class.gl::TypedResourceManager.290"*) unnamed_addr #1 comdat($_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.gl::Sampler"**, %"class.gl::Sampler"*** %3, align 8
  %5 = icmp eq %"class.gl::Sampler"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Sampler"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.297"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEED0Ev(%"class.gl::TypedResourceManager.290"*) unnamed_addr #1 comdat($_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.gl::Sampler"**, %"class.gl::Sampler"*** %3, align 8
  %5 = icmp eq %"class.gl::Sampler"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Sampler"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.297"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  %19 = bitcast %"class.gl::TypedResourceManager.290"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEE5resetEPKNS_7ContextE(%"class.gl::TypedResourceManager.290"*, %"class.gl::Context"*) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", align 8
  %4 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocator5resetEv(%"class.gl::HandleAllocator"* %4) #11
  %5 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1
  %6 = bitcast %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 56, i1 false)
  %7 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %5, i64 0, i32 0
  %8 = load i64, i64* %7, align 8, !noalias !27
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 1
  %12 = load %"class.gl::Sampler"**, %"class.gl::Sampler"*** %11, align 8, !noalias !27
  br label %13

13:                                               ; preds = %18, %10
  %14 = phi i64 [ 0, %10 ], [ %19, %18 ]
  %15 = getelementptr inbounds %"class.gl::Sampler"*, %"class.gl::Sampler"** %12, i64 %14
  %16 = bitcast %"class.gl::Sampler"** %15 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !27
  switch i64 %17, label %21 [
    i64 -1, label %18
    i64 0, label %18
  ]

18:                                               ; preds = %13, %13
  %19 = add nuw i64 %14, 1
  %20 = icmp eq i64 %19, %8
  br i1 %20, label %21, label %13

21:                                               ; preds = %18, %13, %2
  %22 = phi i64 [ 0, %2 ], [ %8, %18 ], [ %14, %13 ]
  %23 = trunc i64 %22 to i32
  %24 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8, !noalias !27
  %26 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %27 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %26, align 8, !noalias !27
  %28 = icmp ne i8* %25, null
  tail call void @llvm.assume(i1 %28) #11, !noalias !27
  %29 = load i8, i8* %25, align 1, !noalias !27
  %30 = icmp slt i8 %29, -1
  br i1 %30, label %31, label %46

31:                                               ; preds = %21, %31
  %32 = phi %"union.absl::container_internal::map_slot_type.297"* [ %43, %31 ], [ %27, %21 ]
  %33 = phi i8* [ %42, %31 ], [ %25, %21 ]
  %34 = bitcast i8* %33 to <16 x i8>*
  %35 = load <16 x i8>, <16 x i8>* %34, align 1, !noalias !27
  %36 = icmp slt <16 x i8> %35, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %37 = bitcast <16 x i1> %36 to i16
  %38 = zext i16 %37 to i32
  %39 = add nuw nsw i32 %38, 1
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 true) #11, !range !2
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %33, i64 %41
  %43 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %32, i64 %41
  %44 = load i8, i8* %42, align 1, !noalias !27
  %45 = icmp slt i8 %44, -1
  br i1 %45, label %31, label %46

46:                                               ; preds = %31, %21
  %47 = phi %"union.absl::container_internal::map_slot_type.297"* [ %27, %21 ], [ %43, %31 ]
  %48 = phi i8* [ %25, %21 ], [ %42, %31 ]
  %49 = phi i8 [ %29, %21 ], [ %44, %31 ]
  %50 = icmp eq i8 %49, -1
  %51 = select i1 %50, i8* null, i8* %48, !prof !4
  %52 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %3, i64 0, i32 0
  store %"class.gl::ResourceMap.291"* %5, %"class.gl::ResourceMap.291"** %52, align 8, !alias.scope !27
  %53 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %3, i64 0, i32 1
  store i32 %23, i32* %53, align 8, !alias.scope !27
  %54 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %3, i64 0, i32 3, i32 0, i32 0
  store i8* %51, i8** %54, align 8, !alias.scope !27
  %55 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %3, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type.297"* %47, %"union.absl::container_internal::map_slot_type.297"** %55, align 8, !alias.scope !27
  %56 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %3, i64 0, i32 4, i32 0
  store i32 0, i32* %56, align 8, !alias.scope !27
  %57 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %3, i64 0, i32 4, i32 1
  store %"class.gl::Sampler"* null, %"class.gl::Sampler"** %57, align 8, !alias.scope !27
  %58 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %3, i64 0, i32 5
  store i8 1, i8* %58, align 8, !alias.scope !27
  %59 = trunc i64 %8 to i32
  %60 = icmp ugt i32 %59, %23
  br i1 %60, label %61, label %66

61:                                               ; preds = %46
  store i32 %23, i32* %56, align 8, !alias.scope !27
  %62 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 1
  %63 = load %"class.gl::Sampler"**, %"class.gl::Sampler"*** %62, align 8, !noalias !27
  %64 = and i64 %22, 4294967295
  %65 = getelementptr inbounds %"class.gl::Sampler"*, %"class.gl::Sampler"** %63, i64 %64
  br label %76

66:                                               ; preds = %46
  %67 = icmp eq i8* %51, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %66
  %69 = load i8, i8* %51, align 1, !noalias !27
  %70 = icmp sgt i8 %69, -1
  br i1 %70, label %72, label %71, !prof !3

71:                                               ; preds = %68
  tail call void @llvm.trap() #11, !noalias !27
  unreachable

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %47, i64 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 8, !noalias !27
  store i32 %74, i32* %56, align 8, !alias.scope !27
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %47, i64 0, i32 0, i32 1
  br label %76

76:                                               ; preds = %72, %61
  %77 = phi %"class.gl::Sampler"** [ %65, %61 ], [ %75, %72 ]
  %78 = bitcast %"class.gl::Sampler"** %77 to i64*
  %79 = load i64, i64* %78, align 8, !noalias !27
  %80 = bitcast %"class.gl::Sampler"** %57 to i64*
  store i64 %79, i64* %80, align 8, !alias.scope !27
  br label %81

81:                                               ; preds = %76, %66
  br label %82

82:                                               ; preds = %81, %138
  %83 = phi i32 [ %140, %138 ], [ %23, %81 ]
  %84 = icmp eq i32 %83, %59
  br i1 %84, label %85, label %121

85:                                               ; preds = %82
  %86 = load i8*, i8** %54, align 8
  %87 = icmp eq i8* %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %85
  %89 = load i8, i8* %86, align 1
  %90 = icmp sgt i8 %89, -1
  br i1 %90, label %121, label %91, !prof !3

91:                                               ; preds = %88
  call void @llvm.trap() #11
  unreachable

92:                                               ; preds = %85
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #11
  %93 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 1
  %94 = bitcast %"class.gl::Sampler"*** %93 to i8**
  %95 = load i8*, i8** %94, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 -1, i64 256, i1 false) #11
  store i64 32, i64* %7, align 8
  %96 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  %97 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %98 = load i64, i64* %97, align 8
  %99 = icmp ugt i64 %98, 127
  br i1 %99, label %100, label %104

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %96, i64 0, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %101, align 8
  %103 = bitcast %"union.absl::container_internal::map_slot_type.297"** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 32, i1 false) #11
  br label %120

104:                                              ; preds = %92
  %105 = icmp eq i64 %98, 0
  br i1 %105, label %120, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  store i64 0, i64* %107, align 8
  %108 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %96, i64 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = add nuw nsw i64 %98, 16
  call void @llvm.memset.p0i8.i64(i8* align 1 %109, i8 -128, i64 %110, i1 false) #11
  %111 = load i8*, i8** %108, align 8
  %112 = load i64, i64* %97, align 8
  %113 = getelementptr inbounds i8, i8* %111, i64 %112
  store i8 -1, i8* %113, align 1
  %114 = load i64, i64* %97, align 8
  %115 = lshr i64 %114, 3
  %116 = sub i64 %114, %115
  %117 = load i64, i64* %107, align 8
  %118 = sub i64 %116, %117
  %119 = getelementptr inbounds %"class.gl::TypedResourceManager.290", %"class.gl::TypedResourceManager.290"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %118, i64* %119, align 8
  br label %120

120:                                              ; preds = %100, %104, %106
  ret void

121:                                              ; preds = %88, %82
  %122 = load %"class.gl::Sampler"*, %"class.gl::Sampler"** %57, align 8
  %123 = icmp eq %"class.gl::Sampler"* %122, null
  br i1 %123, label %138, label %124

124:                                              ; preds = %121
  %125 = getelementptr inbounds %"class.gl::Sampler", %"class.gl::Sampler"* %122, i64 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.gl::Sampler", %"class.gl::Sampler"* %122, i64 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = add i64 %127, -1
  store i64 %128, i64* %126, align 8
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %138

130:                                              ; preds = %124
  %131 = bitcast %"class.gl::Sampler"* %122 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %132 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %131, align 8
  %133 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %132, align 8
  call void %133(%"class.angle::RefCountObject"* %125, %"class.gl::Context"* %1) #11
  %134 = bitcast %"class.gl::Sampler"* %122 to void (%"class.angle::RefCountObject"*)***
  %135 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %135, i64 2
  %137 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %136, align 8
  call void %137(%"class.angle::RefCountObject"* nonnull %125) #11
  br label %138

138:                                              ; preds = %130, %124, %121
  %139 = call dereferenceable(56) %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* @_ZN2gl11ResourceMapINS_7SamplerENS_9SamplerIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* nonnull %3)
  %140 = load i32, i32* %53, align 8
  br label %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* @_ZN2gl11ResourceMapINS_7SamplerENS_9SamplerIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0, i64 0, i32 0
  %5 = load %"class.gl::ResourceMap.291"*, %"class.gl::ResourceMap.291"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = icmp ult i32 %3, %8
  br i1 %9, label %10, label %35

10:                                               ; preds = %1
  %11 = add nuw i32 %3, 1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0, i64 0, i32 5
  %14 = load i8, i8* %13, align 8, !range !11
  %15 = icmp ne i8 %14, 0
  %16 = icmp ugt i64 %7, %12
  br i1 %16, label %17, label %33

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %5, i64 0, i32 1
  %19 = load %"class.gl::Sampler"**, %"class.gl::Sampler"*** %18, align 8
  br label %20

20:                                               ; preds = %30, %17
  %21 = phi i64 [ %12, %17 ], [ %31, %30 ]
  %22 = getelementptr inbounds %"class.gl::Sampler"*, %"class.gl::Sampler"** %19, i64 %21
  %23 = load %"class.gl::Sampler"*, %"class.gl::Sampler"** %22, align 8
  %24 = icmp eq %"class.gl::Sampler"* %23, null
  %25 = and i1 %15, %24
  %26 = icmp eq %"class.gl::Sampler"* %23, inttoptr (i64 -1 to %"class.gl::Sampler"*)
  %27 = or i1 %26, %25
  br i1 %27, label %30, label %28

28:                                               ; preds = %20
  %29 = trunc i64 %21 to i32
  br label %33

30:                                               ; preds = %20
  %31 = add i64 %21, 1
  %32 = icmp eq i64 %31, %7
  br i1 %32, label %33, label %20

33:                                               ; preds = %30, %28, %10
  %34 = phi i32 [ %8, %10 ], [ %29, %28 ], [ %8, %30 ]
  store i32 %34, i32* %2, align 8
  br label %69

35:                                               ; preds = %1
  %36 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %39 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %38, align 8
  %40 = icmp eq i8* %37, null
  br i1 %40, label %44, label %41, !prof !4

41:                                               ; preds = %35
  %42 = load i8, i8* %37, align 1
  %43 = icmp sgt i8 %42, -1
  br i1 %43, label %45, label %44, !prof !3

44:                                               ; preds = %41, %35
  tail call void @llvm.trap() #11
  unreachable

45:                                               ; preds = %41
  %46 = getelementptr inbounds i8, i8* %37, i64 1
  store i8* %46, i8** %36, align 8
  %47 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %39, i64 1
  store %"union.absl::container_internal::map_slot_type.297"* %47, %"union.absl::container_internal::map_slot_type.297"** %38, align 8
  %48 = load i8, i8* %46, align 1
  %49 = icmp slt i8 %48, -1
  br i1 %49, label %50, label %65

50:                                               ; preds = %45, %50
  %51 = phi %"union.absl::container_internal::map_slot_type.297"* [ %62, %50 ], [ %47, %45 ]
  %52 = phi i8* [ %61, %50 ], [ %46, %45 ]
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1
  %55 = icmp slt <16 x i8> %54, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %56 = bitcast <16 x i1> %55 to i16
  %57 = zext i16 %56 to i32
  %58 = add nuw nsw i32 %57, 1
  %59 = tail call i32 @llvm.cttz.i32(i32 %58, i1 true) #11, !range !2
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %52, i64 %60
  store i8* %61, i8** %36, align 8
  %62 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %51, i64 %60
  store %"union.absl::container_internal::map_slot_type.297"* %62, %"union.absl::container_internal::map_slot_type.297"** %38, align 8
  %63 = load i8, i8* %61, align 1
  %64 = icmp slt i8 %63, -1
  br i1 %64, label %50, label %65

65:                                               ; preds = %50, %45
  %66 = phi i8 [ %48, %45 ], [ %63, %50 ]
  %67 = icmp eq i8 %66, -1
  br i1 %67, label %68, label %69, !prof !4

68:                                               ; preds = %65
  store i8* null, i8** %36, align 8
  br label %69

69:                                               ; preds = %68, %65, %33
  %70 = phi i32 [ %3, %68 ], [ %3, %65 ], [ %34, %33 ]
  %71 = load i64, i64* %6, align 8
  %72 = trunc i64 %71 to i32
  %73 = icmp ult i32 %70, %72
  br i1 %73, label %74, label %80

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 %70, i32* %75, align 8
  %76 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %5, i64 0, i32 1
  %77 = load %"class.gl::Sampler"**, %"class.gl::Sampler"*** %76, align 8
  %78 = zext i32 %70 to i64
  %79 = getelementptr inbounds %"class.gl::Sampler"*, %"class.gl::Sampler"** %77, i64 %78
  br label %99

80:                                               ; preds = %69
  %81 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %105, label %84

84:                                               ; preds = %80
  %85 = load i8, i8* %82, align 1
  %86 = icmp sgt i8 %85, -1
  br i1 %86, label %88, label %87, !prof !3

87:                                               ; preds = %84
  tail call void @llvm.trap() #11
  unreachable

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %90 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %89, align 8
  %91 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %90, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 %92, i32* %93, align 8
  %94 = load i8, i8* %82, align 1
  %95 = icmp sgt i8 %94, -1
  br i1 %95, label %97, label %96, !prof !3

96:                                               ; preds = %88
  tail call void @llvm.trap() #11
  unreachable

97:                                               ; preds = %88
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %90, i64 0, i32 0, i32 1
  br label %99

99:                                               ; preds = %97, %74
  %100 = phi %"class.gl::Sampler"** [ %79, %74 ], [ %98, %97 ]
  %101 = bitcast %"class.gl::Sampler"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator", %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0, i64 0, i32 4, i32 1
  %104 = bitcast %"class.gl::Sampler"** %103 to i64*
  store i64 %102, i64* %104, align 8
  br label %105

105:                                              ; preds = %99, %80
  ret %"class.gl::ResourceMap<gl::Sampler, gl::SamplerID>::Iterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjEC2Ev(%"class.gl::TypedResourceManager.303"*) unnamed_addr #1 comdat($_ZN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorC1Ev(%"class.gl::HandleAllocator"* %3) #11
  %4 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = bitcast i64* %4 to <2 x i64>*
  store <2 x i64> <i64 1, i64 32>, <2 x i64>* %5, align 8
  %6 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 1
  %7 = tail call i8* @_Znam(i64 256) #14
  %8 = bitcast %"class.gl::Sync"*** %6 to i8**
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %11 = bitcast %"union.absl::container_internal::map_slot_type.308"** %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -1, i64 256, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjE12deleteObjectEPKNS_7ContextEj(%"class.gl::TypedResourceManager.303"*, %"class.gl::Context"*, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.gl::Sync"*, align 8
  %5 = bitcast %"class.gl::Sync"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  store %"class.gl::Sync"* null, %"class.gl::Sync"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1
  %7 = call zeroext i1 @_ZN2gl11ResourceMapINS_4SyncEjE5eraseEjPPS1_(%"class.gl::ResourceMap.304"* %6, i32 %2, %"class.gl::Sync"** nonnull %4)
  br i1 %7, label %8, label %26

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 0, i32 1
  call void @_ZN2gl15HandleAllocator7releaseEj(%"class.gl::HandleAllocator"* %9, i32 %2) #11
  %10 = load %"class.gl::Sync"*, %"class.gl::Sync"** %4, align 8
  %11 = icmp eq %"class.gl::Sync"* %10, null
  br i1 %11, label %26, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::Sync", %"class.gl::Sync"* %10, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.gl::Sync", %"class.gl::Sync"* %10, i64 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, -1
  store i64 %16, i64* %14, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %26

18:                                               ; preds = %12
  %19 = bitcast %"class.gl::Sync"* %10 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %20 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %19, align 8
  %21 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %20, align 8
  call void %21(%"class.angle::RefCountObject"* %13, %"class.gl::Context"* %1) #11
  %22 = bitcast %"class.gl::Sync"* %10 to void (%"class.angle::RefCountObject"*)***
  %23 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %23, i64 2
  %25 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %24, align 8
  call void %25(%"class.angle::RefCountObject"* nonnull %13) #11
  br label %26

26:                                               ; preds = %18, %12, %8, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2gl11ResourceMapINS_4SyncEjE5eraseEjPPS1_(%"class.gl::ResourceMap.304"*, i32, %"class.gl::Sync"**) local_unnamed_addr #3 comdat align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.gl::ResourceMap.304", %"class.gl::ResourceMap.304"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %4
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::ResourceMap.304", %"class.gl::ResourceMap.304"* %0, i64 0, i32 1
  %10 = load %"class.gl::Sync"**, %"class.gl::Sync"*** %9, align 8
  %11 = getelementptr inbounds %"class.gl::Sync"*, %"class.gl::Sync"** %10, i64 %4
  %12 = load %"class.gl::Sync"*, %"class.gl::Sync"** %11, align 8
  %13 = icmp eq %"class.gl::Sync"* %12, inttoptr (i64 -1 to %"class.gl::Sync"*)
  br i1 %13, label %134, label %14

14:                                               ; preds = %8
  %15 = ptrtoint %"class.gl::Sync"* %12 to i64
  %16 = bitcast %"class.gl::Sync"** %2 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.gl::Sync"* inttoptr (i64 -1 to %"class.gl::Sync"*), %"class.gl::Sync"** %11, align 8
  br label %134

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.gl::ResourceMap.304", %"class.gl::ResourceMap.304"* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %4
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.307", %"class.absl::container_internal::raw_hash_set.307"* %18, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ResourceMap.304", %"class.gl::ResourceMap.304"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ResourceMap.304", %"class.gl::ResourceMap.304"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %17
  %40 = phi i64 [ %33, %17 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %17 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.308"*, %"union.absl::container_internal::map_slot_type.308"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #11, !range !2
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !3

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %134, !prof !4

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #11
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !3

77:                                               ; preds = %72
  tail call void @llvm.trap() #11
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %51, i64 %57, i32 0, i32 1
  %80 = bitcast %"class.gl::Sync"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.gl::Sync"** %2 to i64*
  store i64 %81, i64* %82, align 8
  %83 = load i8, i8* %73, align 1
  %84 = icmp sgt i8 %83, -1
  br i1 %84, label %86, label %85, !prof !3

85:                                               ; preds = %78
  tail call void @llvm.trap() #11
  unreachable

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.gl::ResourceMap.304", %"class.gl::ResourceMap.304"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, -1
  store i64 %89, i64* %87, align 8
  %90 = bitcast %"class.absl::container_internal::raw_hash_set.307"* %18 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = ptrtoint i8* %73 to i64
  %93 = sub i64 %92, %91
  %94 = add i64 %93, -16
  %95 = load i64, i64* %28, align 8
  %96 = and i64 %94, %95
  %97 = bitcast i8* %73 to <16 x i8>*
  %98 = load <16 x i8>, <16 x i8>* %97, align 1
  %99 = icmp eq <16 x i8> %98, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %100 = bitcast <16 x i1> %99 to i16
  %101 = inttoptr i64 %91 to i8*
  %102 = getelementptr inbounds i8, i8* %101, i64 %96
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1
  %105 = icmp eq <16 x i8> %104, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %106 = bitcast <16 x i1> %105 to i16
  %107 = icmp ne i16 %106, 0
  %108 = icmp ne i16 %100, 0
  %109 = and i1 %108, %107
  br i1 %109, label %110, label %120

110:                                              ; preds = %86
  %111 = zext i16 %100 to i32
  %112 = zext i16 %106 to i32
  %113 = tail call i32 @llvm.cttz.i32(i32 %111, i1 false) #11, !range !2
  %114 = shl nuw i32 %112, 16
  %115 = tail call i32 @llvm.ctlz.i32(i32 %114, i1 false) #11, !range !2
  %116 = add nuw nsw i32 %115, %113
  %117 = icmp ult i32 %116, 16
  %118 = zext i1 %117 to i64
  %119 = select i1 %117, i8 -128, i8 -2
  br label %120

120:                                              ; preds = %86, %110
  %121 = phi i64 [ 0, %86 ], [ %118, %110 ]
  %122 = phi i8 [ -2, %86 ], [ %119, %110 ]
  %123 = getelementptr inbounds i8, i8* %101, i64 %93
  store i8 %122, i8* %123, align 1
  %124 = load i8*, i8** %26, align 8
  %125 = add i64 %93, -15
  %126 = load i64, i64* %28, align 8
  %127 = and i64 %126, %125
  %128 = and i64 %126, 15
  %129 = add i64 %127, %128
  %130 = getelementptr inbounds i8, i8* %124, i64 %129
  store i8 %122, i8* %130, align 1
  %131 = getelementptr inbounds %"class.gl::ResourceMap.304", %"class.gl::ResourceMap.304"* %0, i64 0, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, %121
  store i64 %133, i64* %131, align 8
  br label %134

134:                                              ; preds = %65, %14, %120, %8
  %135 = phi i1 [ false, %8 ], [ true, %120 ], [ true, %14 ], [ false, %65 ]
  ret i1 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl11SyncManager12DeleteObjectEPKNS_7ContextEPNS_4SyncE(%"class.gl::Context"*, %"class.gl::Sync"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Sync", %"class.gl::Sync"* %1, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.gl::Sync", %"class.gl::Sync"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  store i64 %6, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %18

8:                                                ; preds = %2
  %9 = bitcast %"class.gl::Sync"* %1 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %10 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %9, align 8
  %11 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %10, align 8
  tail call void %11(%"class.angle::RefCountObject"* %3, %"class.gl::Context"* %0) #11
  %12 = icmp eq %"class.gl::Sync"* %1, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.gl::Sync"* %1 to void (%"class.angle::RefCountObject"*)***
  %15 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %15, i64 2
  %17 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %16, align 8
  tail call void %17(%"class.angle::RefCountObject"* nonnull %3) #11
  br label %18

18:                                               ; preds = %2, %8, %13
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjE17isHandleGeneratedEj(%"class.gl::TypedResourceManager.303"*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %78, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %5
  br i1 %8, label %9, label %15

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 1
  %11 = load %"class.gl::Sync"**, %"class.gl::Sync"*** %10, align 8
  %12 = getelementptr inbounds %"class.gl::Sync"*, %"class.gl::Sync"** %11, i64 %5
  %13 = load %"class.gl::Sync"*, %"class.gl::Sync"** %12, align 8
  %14 = icmp ne %"class.gl::Sync"* %13, inttoptr (i64 -1 to %"class.gl::Sync"*)
  br label %78

15:                                               ; preds = %4
  %16 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %17 = add i64 %16, %5
  %18 = zext i64 %17 to i128
  %19 = mul nuw i128 %18, 11376068507788127593
  %20 = lshr i128 %19, 64
  %21 = xor i128 %20, %19
  %22 = trunc i128 %21 to i64
  %23 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %26 = load i64, i64* %25, align 8
  %27 = lshr i64 %22, 7
  %28 = ptrtoint i8* %24 to i64
  %29 = lshr i64 %28, 12
  %30 = xor i64 %27, %29
  %31 = trunc i128 %21 to i8
  %32 = and i8 %31, 127
  %33 = insertelement <16 x i8> undef, i8 %32, i32 0
  %34 = shufflevector <16 x i8> %33, <16 x i8> undef, <16 x i32> zeroinitializer
  %35 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %36

36:                                               ; preds = %66, %15
  %37 = phi i64 [ %30, %15 ], [ %68, %66 ]
  %38 = phi i64 [ 0, %15 ], [ %67, %66 ]
  %39 = and i64 %37, %26
  %40 = getelementptr inbounds i8, i8* %24, i64 %39
  %41 = bitcast i8* %40 to <16 x i8>*
  %42 = load <16 x i8>, <16 x i8>* %41, align 1
  %43 = icmp eq <16 x i8> %34, %42
  %44 = bitcast <16 x i1> %43 to i16
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %62, label %46

46:                                               ; preds = %36
  %47 = zext i16 %44 to i32
  %48 = load %"union.absl::container_internal::map_slot_type.308"*, %"union.absl::container_internal::map_slot_type.308"** %35, align 8
  br label %49

49:                                               ; preds = %58, %46
  %50 = phi i32 [ %47, %46 ], [ %60, %58 ]
  %51 = tail call i32 @llvm.cttz.i32(i32 %50, i1 false) #11, !range !2
  %52 = zext i32 %51 to i64
  %53 = add i64 %39, %52
  %54 = and i64 %53, %26
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %48, i64 %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %1
  br i1 %57, label %69, label %58, !prof !3

58:                                               ; preds = %49
  %59 = add i32 %50, -1
  %60 = and i32 %59, %50
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %49

62:                                               ; preds = %58, %36
  %63 = icmp eq <16 x i8> %42, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %64 = bitcast <16 x i1> %63 to i16
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %66, label %75, !prof !4

66:                                               ; preds = %62
  %67 = add i64 %38, 16
  %68 = add i64 %67, %39
  br label %36

69:                                               ; preds = %49
  %70 = getelementptr inbounds i8, i8* %24, i64 %54
  %71 = icmp ne i8* %70, null
  tail call void @llvm.assume(i1 %71) #11
  %72 = load i8, i8* %70, align 1
  %73 = icmp sgt i8 %72, -1
  br i1 %73, label %75, label %74, !prof !3

74:                                               ; preds = %69
  tail call void @llvm.trap() #11
  unreachable

75:                                               ; preds = %62, %69
  %76 = phi i8* [ %70, %69 ], [ null, %62 ]
  %77 = icmp ne i8* %76, null
  br label %78

78:                                               ; preds = %75, %9, %2
  %79 = phi i1 [ true, %2 ], [ %14, %9 ], [ %77, %75 ]
  ret i1 %79
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjE5beginEv(%"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* noalias sret, %"class.gl::TypedResourceManager.303"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %1, i64 0, i32 1
  tail call void @_ZNK2gl11ResourceMapINS_4SyncEjE5beginEv(%"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* sret %0, %"class.gl::ResourceMap.304"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2gl11ResourceMapINS_4SyncEjE5beginEv(%"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* noalias sret, %"class.gl::ResourceMap.304"*) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.gl::ResourceMap.304", %"class.gl::ResourceMap.304"* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::ResourceMap.304", %"class.gl::ResourceMap.304"* %1, i64 0, i32 1
  %8 = load %"class.gl::Sync"**, %"class.gl::Sync"*** %7, align 8
  br label %9

9:                                                ; preds = %14, %6
  %10 = phi i64 [ 0, %6 ], [ %15, %14 ]
  %11 = getelementptr inbounds %"class.gl::Sync"*, %"class.gl::Sync"** %8, i64 %10
  %12 = bitcast %"class.gl::Sync"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  switch i64 %13, label %17 [
    i64 -1, label %14
    i64 0, label %14
  ]

14:                                               ; preds = %9, %9
  %15 = add nuw i64 %10, 1
  %16 = icmp eq i64 %15, %4
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %14, %2
  %18 = phi i64 [ 0, %2 ], [ %10, %9 ], [ %4, %14 ]
  %19 = trunc i64 %18 to i32
  %20 = getelementptr inbounds %"class.gl::ResourceMap.304", %"class.gl::ResourceMap.304"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.gl::ResourceMap.304", %"class.gl::ResourceMap.304"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %23 = load %"union.absl::container_internal::map_slot_type.308"*, %"union.absl::container_internal::map_slot_type.308"** %22, align 8
  %24 = icmp ne i8* %21, null
  tail call void @llvm.assume(i1 %24) #11
  %25 = load i8, i8* %21, align 1
  %26 = icmp slt i8 %25, -1
  br i1 %26, label %27, label %42

27:                                               ; preds = %17, %27
  %28 = phi %"union.absl::container_internal::map_slot_type.308"* [ %39, %27 ], [ %23, %17 ]
  %29 = phi i8* [ %38, %27 ], [ %21, %17 ]
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp slt <16 x i8> %31, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %33 = bitcast <16 x i1> %32 to i16
  %34 = zext i16 %33 to i32
  %35 = add nuw nsw i32 %34, 1
  %36 = tail call i32 @llvm.cttz.i32(i32 %35, i1 true) #11, !range !2
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %29, i64 %37
  %39 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %28, i64 %37
  %40 = load i8, i8* %38, align 1
  %41 = icmp slt i8 %40, -1
  br i1 %41, label %27, label %42

42:                                               ; preds = %27, %17
  %43 = phi %"union.absl::container_internal::map_slot_type.308"* [ %23, %17 ], [ %39, %27 ]
  %44 = phi i8* [ %21, %17 ], [ %38, %27 ]
  %45 = phi i8 [ %25, %17 ], [ %40, %27 ]
  %46 = icmp eq i8 %45, -1
  %47 = select i1 %46, i8* null, i8* %44, !prof !4
  %48 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0, i64 0, i32 0
  store %"class.gl::ResourceMap.304"* %1, %"class.gl::ResourceMap.304"** %48, align 8
  %49 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0, i64 0, i32 1
  store i32 %19, i32* %49, align 8
  %50 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  store i8* %47, i8** %50, align 8
  %51 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type.308"* %43, %"union.absl::container_internal::map_slot_type.308"** %51, align 8
  %52 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0, i64 0, i32 4, i32 1
  store %"class.gl::Sync"* null, %"class.gl::Sync"** %53, align 8
  %54 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0, i64 0, i32 5
  store i8 1, i8* %54, align 8
  %55 = trunc i64 %4 to i32
  %56 = icmp ugt i32 %55, %19
  br i1 %56, label %57, label %62

57:                                               ; preds = %42
  store i32 %19, i32* %52, align 8
  %58 = getelementptr inbounds %"class.gl::ResourceMap.304", %"class.gl::ResourceMap.304"* %1, i64 0, i32 1
  %59 = load %"class.gl::Sync"**, %"class.gl::Sync"*** %58, align 8
  %60 = and i64 %18, 4294967295
  %61 = getelementptr inbounds %"class.gl::Sync"*, %"class.gl::Sync"** %59, i64 %60
  br label %76

62:                                               ; preds = %42
  %63 = icmp eq i8* %47, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %62
  %65 = load i8, i8* %47, align 1
  %66 = icmp sgt i8 %65, -1
  br i1 %66, label %68, label %67, !prof !3

67:                                               ; preds = %64
  tail call void @llvm.trap() #11
  unreachable

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %43, i64 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 8
  store i32 %70, i32* %52, align 8
  %71 = load i8, i8* %47, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %74, label %73, !prof !3

73:                                               ; preds = %68
  tail call void @llvm.trap() #11
  unreachable

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %43, i64 0, i32 0, i32 1
  br label %76

76:                                               ; preds = %74, %57
  %77 = phi %"class.gl::Sync"** [ %61, %57 ], [ %75, %74 ]
  %78 = bitcast %"class.gl::Sync"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.gl::Sync"** %53 to i64*
  store i64 %79, i64* %80, align 8
  br label %81

81:                                               ; preds = %76, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjE3endEv(%"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* noalias sret, %"class.gl::TypedResourceManager.303"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"class.gl::ResourceMap.304", %"class.gl::ResourceMap.304"* %3, i64 0, i32 0
  %5 = load i64, i64* %4, align 8, !noalias !30
  %6 = trunc i64 %5 to i32
  %7 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0, i64 0, i32 0
  store %"class.gl::ResourceMap.304"* %3, %"class.gl::ResourceMap.304"** %7, align 8, !alias.scope !30
  %8 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0, i64 0, i32 1
  store i32 %6, i32* %8, align 8, !alias.scope !30
  %9 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  store i8* null, i8** %9, align 8, !alias.scope !30
  %10 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !30
  %11 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0, i64 0, i32 4, i32 1
  store %"class.gl::Sync"* null, %"class.gl::Sync"** %11, align 8, !alias.scope !30
  %12 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0, i64 0, i32 5
  store i8 1, i8* %12, align 8, !alias.scope !30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjED2Ev(%"class.gl::TypedResourceManager.303"*) unnamed_addr #1 comdat($_ZN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.gl::Sync"**, %"class.gl::Sync"*** %3, align 8
  %5 = icmp eq %"class.gl::Sync"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Sync"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.308"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjED0Ev(%"class.gl::TypedResourceManager.303"*) unnamed_addr #1 comdat($_ZN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.gl::Sync"**, %"class.gl::Sync"*** %3, align 8
  %5 = icmp eq %"class.gl::Sync"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Sync"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.308"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  %19 = bitcast %"class.gl::TypedResourceManager.303"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjE5resetEPKNS_7ContextE(%"class.gl::TypedResourceManager.303"*, %"class.gl::Context"*) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", align 8
  %4 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocator5resetEv(%"class.gl::HandleAllocator"* %4) #11
  %5 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1
  %6 = bitcast %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 56, i1 false)
  %7 = getelementptr inbounds %"class.gl::ResourceMap.304", %"class.gl::ResourceMap.304"* %5, i64 0, i32 0
  %8 = load i64, i64* %7, align 8, !noalias !33
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 1
  %12 = load %"class.gl::Sync"**, %"class.gl::Sync"*** %11, align 8, !noalias !33
  br label %13

13:                                               ; preds = %18, %10
  %14 = phi i64 [ 0, %10 ], [ %19, %18 ]
  %15 = getelementptr inbounds %"class.gl::Sync"*, %"class.gl::Sync"** %12, i64 %14
  %16 = bitcast %"class.gl::Sync"** %15 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !33
  switch i64 %17, label %21 [
    i64 -1, label %18
    i64 0, label %18
  ]

18:                                               ; preds = %13, %13
  %19 = add nuw i64 %14, 1
  %20 = icmp eq i64 %19, %8
  br i1 %20, label %21, label %13

21:                                               ; preds = %18, %13, %2
  %22 = phi i64 [ 0, %2 ], [ %8, %18 ], [ %14, %13 ]
  %23 = trunc i64 %22 to i32
  %24 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8, !noalias !33
  %26 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %27 = load %"union.absl::container_internal::map_slot_type.308"*, %"union.absl::container_internal::map_slot_type.308"** %26, align 8, !noalias !33
  %28 = icmp ne i8* %25, null
  tail call void @llvm.assume(i1 %28) #11, !noalias !33
  %29 = load i8, i8* %25, align 1, !noalias !33
  %30 = icmp slt i8 %29, -1
  br i1 %30, label %31, label %46

31:                                               ; preds = %21, %31
  %32 = phi %"union.absl::container_internal::map_slot_type.308"* [ %43, %31 ], [ %27, %21 ]
  %33 = phi i8* [ %42, %31 ], [ %25, %21 ]
  %34 = bitcast i8* %33 to <16 x i8>*
  %35 = load <16 x i8>, <16 x i8>* %34, align 1, !noalias !33
  %36 = icmp slt <16 x i8> %35, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %37 = bitcast <16 x i1> %36 to i16
  %38 = zext i16 %37 to i32
  %39 = add nuw nsw i32 %38, 1
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 true) #11, !range !2
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %33, i64 %41
  %43 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %32, i64 %41
  %44 = load i8, i8* %42, align 1, !noalias !33
  %45 = icmp slt i8 %44, -1
  br i1 %45, label %31, label %46

46:                                               ; preds = %31, %21
  %47 = phi %"union.absl::container_internal::map_slot_type.308"* [ %27, %21 ], [ %43, %31 ]
  %48 = phi i8* [ %25, %21 ], [ %42, %31 ]
  %49 = phi i8 [ %29, %21 ], [ %44, %31 ]
  %50 = icmp eq i8 %49, -1
  %51 = select i1 %50, i8* null, i8* %48, !prof !4
  %52 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %3, i64 0, i32 0
  store %"class.gl::ResourceMap.304"* %5, %"class.gl::ResourceMap.304"** %52, align 8, !alias.scope !33
  %53 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %3, i64 0, i32 1
  store i32 %23, i32* %53, align 8, !alias.scope !33
  %54 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %3, i64 0, i32 3, i32 0, i32 0
  store i8* %51, i8** %54, align 8, !alias.scope !33
  %55 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %3, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type.308"* %47, %"union.absl::container_internal::map_slot_type.308"** %55, align 8, !alias.scope !33
  %56 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %3, i64 0, i32 4, i32 0
  store i32 0, i32* %56, align 8, !alias.scope !33
  %57 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %3, i64 0, i32 4, i32 1
  store %"class.gl::Sync"* null, %"class.gl::Sync"** %57, align 8, !alias.scope !33
  %58 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %3, i64 0, i32 5
  store i8 1, i8* %58, align 8, !alias.scope !33
  %59 = trunc i64 %8 to i32
  %60 = icmp ugt i32 %59, %23
  br i1 %60, label %61, label %66

61:                                               ; preds = %46
  store i32 %23, i32* %56, align 8, !alias.scope !33
  %62 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 1
  %63 = load %"class.gl::Sync"**, %"class.gl::Sync"*** %62, align 8, !noalias !33
  %64 = and i64 %22, 4294967295
  %65 = getelementptr inbounds %"class.gl::Sync"*, %"class.gl::Sync"** %63, i64 %64
  br label %76

66:                                               ; preds = %46
  %67 = icmp eq i8* %51, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %66
  %69 = load i8, i8* %51, align 1, !noalias !33
  %70 = icmp sgt i8 %69, -1
  br i1 %70, label %72, label %71, !prof !3

71:                                               ; preds = %68
  tail call void @llvm.trap() #11, !noalias !33
  unreachable

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %47, i64 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 8, !noalias !33
  store i32 %74, i32* %56, align 8, !alias.scope !33
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %47, i64 0, i32 0, i32 1
  br label %76

76:                                               ; preds = %72, %61
  %77 = phi %"class.gl::Sync"** [ %65, %61 ], [ %75, %72 ]
  %78 = bitcast %"class.gl::Sync"** %77 to i64*
  %79 = load i64, i64* %78, align 8, !noalias !33
  %80 = bitcast %"class.gl::Sync"** %57 to i64*
  store i64 %79, i64* %80, align 8, !alias.scope !33
  br label %81

81:                                               ; preds = %76, %66
  br label %82

82:                                               ; preds = %81, %138
  %83 = phi i32 [ %140, %138 ], [ %23, %81 ]
  %84 = icmp eq i32 %83, %59
  br i1 %84, label %85, label %121

85:                                               ; preds = %82
  %86 = load i8*, i8** %54, align 8
  %87 = icmp eq i8* %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %85
  %89 = load i8, i8* %86, align 1
  %90 = icmp sgt i8 %89, -1
  br i1 %90, label %121, label %91, !prof !3

91:                                               ; preds = %88
  call void @llvm.trap() #11
  unreachable

92:                                               ; preds = %85
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #11
  %93 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 1
  %94 = bitcast %"class.gl::Sync"*** %93 to i8**
  %95 = load i8*, i8** %94, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 -1, i64 256, i1 false) #11
  store i64 32, i64* %7, align 8
  %96 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  %97 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %98 = load i64, i64* %97, align 8
  %99 = icmp ugt i64 %98, 127
  br i1 %99, label %100, label %104

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.307", %"class.absl::container_internal::raw_hash_set.307"* %96, i64 0, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %101, align 8
  %103 = bitcast %"union.absl::container_internal::map_slot_type.308"** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 32, i1 false) #11
  br label %120

104:                                              ; preds = %92
  %105 = icmp eq i64 %98, 0
  br i1 %105, label %120, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  store i64 0, i64* %107, align 8
  %108 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.307", %"class.absl::container_internal::raw_hash_set.307"* %96, i64 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = add nuw nsw i64 %98, 16
  call void @llvm.memset.p0i8.i64(i8* align 1 %109, i8 -128, i64 %110, i1 false) #11
  %111 = load i8*, i8** %108, align 8
  %112 = load i64, i64* %97, align 8
  %113 = getelementptr inbounds i8, i8* %111, i64 %112
  store i8 -1, i8* %113, align 1
  %114 = load i64, i64* %97, align 8
  %115 = lshr i64 %114, 3
  %116 = sub i64 %114, %115
  %117 = load i64, i64* %107, align 8
  %118 = sub i64 %116, %117
  %119 = getelementptr inbounds %"class.gl::TypedResourceManager.303", %"class.gl::TypedResourceManager.303"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %118, i64* %119, align 8
  br label %120

120:                                              ; preds = %100, %104, %106
  ret void

121:                                              ; preds = %88, %82
  %122 = load %"class.gl::Sync"*, %"class.gl::Sync"** %57, align 8
  %123 = icmp eq %"class.gl::Sync"* %122, null
  br i1 %123, label %138, label %124

124:                                              ; preds = %121
  %125 = getelementptr inbounds %"class.gl::Sync", %"class.gl::Sync"* %122, i64 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.gl::Sync", %"class.gl::Sync"* %122, i64 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = add i64 %127, -1
  store i64 %128, i64* %126, align 8
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %138

130:                                              ; preds = %124
  %131 = bitcast %"class.gl::Sync"* %122 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %132 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %131, align 8
  %133 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %132, align 8
  call void %133(%"class.angle::RefCountObject"* %125, %"class.gl::Context"* %1) #11
  %134 = bitcast %"class.gl::Sync"* %122 to void (%"class.angle::RefCountObject"*)***
  %135 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %135, i64 2
  %137 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %136, align 8
  call void %137(%"class.angle::RefCountObject"* nonnull %125) #11
  br label %138

138:                                              ; preds = %130, %124, %121
  %139 = call dereferenceable(56) %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* @_ZN2gl11ResourceMapINS_4SyncEjE8IteratorppEv(%"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* nonnull %3)
  %140 = load i32, i32* %53, align 8
  br label %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* @_ZN2gl11ResourceMapINS_4SyncEjE8IteratorppEv(%"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0, i64 0, i32 0
  %5 = load %"class.gl::ResourceMap.304"*, %"class.gl::ResourceMap.304"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::ResourceMap.304", %"class.gl::ResourceMap.304"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = icmp ult i32 %3, %8
  br i1 %9, label %10, label %35

10:                                               ; preds = %1
  %11 = add nuw i32 %3, 1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0, i64 0, i32 5
  %14 = load i8, i8* %13, align 8, !range !11
  %15 = icmp ne i8 %14, 0
  %16 = icmp ugt i64 %7, %12
  br i1 %16, label %17, label %33

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.gl::ResourceMap.304", %"class.gl::ResourceMap.304"* %5, i64 0, i32 1
  %19 = load %"class.gl::Sync"**, %"class.gl::Sync"*** %18, align 8
  br label %20

20:                                               ; preds = %30, %17
  %21 = phi i64 [ %12, %17 ], [ %31, %30 ]
  %22 = getelementptr inbounds %"class.gl::Sync"*, %"class.gl::Sync"** %19, i64 %21
  %23 = load %"class.gl::Sync"*, %"class.gl::Sync"** %22, align 8
  %24 = icmp eq %"class.gl::Sync"* %23, null
  %25 = and i1 %15, %24
  %26 = icmp eq %"class.gl::Sync"* %23, inttoptr (i64 -1 to %"class.gl::Sync"*)
  %27 = or i1 %26, %25
  br i1 %27, label %30, label %28

28:                                               ; preds = %20
  %29 = trunc i64 %21 to i32
  br label %33

30:                                               ; preds = %20
  %31 = add i64 %21, 1
  %32 = icmp eq i64 %31, %7
  br i1 %32, label %33, label %20

33:                                               ; preds = %30, %28, %10
  %34 = phi i32 [ %8, %10 ], [ %29, %28 ], [ %8, %30 ]
  store i32 %34, i32* %2, align 8
  br label %69

35:                                               ; preds = %1
  %36 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %39 = load %"union.absl::container_internal::map_slot_type.308"*, %"union.absl::container_internal::map_slot_type.308"** %38, align 8
  %40 = icmp eq i8* %37, null
  br i1 %40, label %44, label %41, !prof !4

41:                                               ; preds = %35
  %42 = load i8, i8* %37, align 1
  %43 = icmp sgt i8 %42, -1
  br i1 %43, label %45, label %44, !prof !3

44:                                               ; preds = %41, %35
  tail call void @llvm.trap() #11
  unreachable

45:                                               ; preds = %41
  %46 = getelementptr inbounds i8, i8* %37, i64 1
  store i8* %46, i8** %36, align 8
  %47 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %39, i64 1
  store %"union.absl::container_internal::map_slot_type.308"* %47, %"union.absl::container_internal::map_slot_type.308"** %38, align 8
  %48 = load i8, i8* %46, align 1
  %49 = icmp slt i8 %48, -1
  br i1 %49, label %50, label %65

50:                                               ; preds = %45, %50
  %51 = phi %"union.absl::container_internal::map_slot_type.308"* [ %62, %50 ], [ %47, %45 ]
  %52 = phi i8* [ %61, %50 ], [ %46, %45 ]
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1
  %55 = icmp slt <16 x i8> %54, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %56 = bitcast <16 x i1> %55 to i16
  %57 = zext i16 %56 to i32
  %58 = add nuw nsw i32 %57, 1
  %59 = tail call i32 @llvm.cttz.i32(i32 %58, i1 true) #11, !range !2
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %52, i64 %60
  store i8* %61, i8** %36, align 8
  %62 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %51, i64 %60
  store %"union.absl::container_internal::map_slot_type.308"* %62, %"union.absl::container_internal::map_slot_type.308"** %38, align 8
  %63 = load i8, i8* %61, align 1
  %64 = icmp slt i8 %63, -1
  br i1 %64, label %50, label %65

65:                                               ; preds = %50, %45
  %66 = phi i8 [ %48, %45 ], [ %63, %50 ]
  %67 = icmp eq i8 %66, -1
  br i1 %67, label %68, label %69, !prof !4

68:                                               ; preds = %65
  store i8* null, i8** %36, align 8
  br label %69

69:                                               ; preds = %68, %65, %33
  %70 = phi i32 [ %3, %68 ], [ %3, %65 ], [ %34, %33 ]
  %71 = load i64, i64* %6, align 8
  %72 = trunc i64 %71 to i32
  %73 = icmp ult i32 %70, %72
  br i1 %73, label %74, label %80

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 %70, i32* %75, align 8
  %76 = getelementptr inbounds %"class.gl::ResourceMap.304", %"class.gl::ResourceMap.304"* %5, i64 0, i32 1
  %77 = load %"class.gl::Sync"**, %"class.gl::Sync"*** %76, align 8
  %78 = zext i32 %70 to i64
  %79 = getelementptr inbounds %"class.gl::Sync"*, %"class.gl::Sync"** %77, i64 %78
  br label %99

80:                                               ; preds = %69
  %81 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %105, label %84

84:                                               ; preds = %80
  %85 = load i8, i8* %82, align 1
  %86 = icmp sgt i8 %85, -1
  br i1 %86, label %88, label %87, !prof !3

87:                                               ; preds = %84
  tail call void @llvm.trap() #11
  unreachable

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %90 = load %"union.absl::container_internal::map_slot_type.308"*, %"union.absl::container_internal::map_slot_type.308"** %89, align 8
  %91 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %90, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 %92, i32* %93, align 8
  %94 = load i8, i8* %82, align 1
  %95 = icmp sgt i8 %94, -1
  br i1 %95, label %97, label %96, !prof !3

96:                                               ; preds = %88
  tail call void @llvm.trap() #11
  unreachable

97:                                               ; preds = %88
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %90, i64 0, i32 0, i32 1
  br label %99

99:                                               ; preds = %97, %74
  %100 = phi %"class.gl::Sync"** [ %79, %74 ], [ %98, %97 ]
  %101 = bitcast %"class.gl::Sync"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator", %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0, i64 0, i32 4, i32 1
  %104 = bitcast %"class.gl::Sync"** %103 to i64*
  store i64 %102, i64* %104, align 8
  br label %105

105:                                              ; preds = %99, %80
  ret %"class.gl::ResourceMap<gl::Sync, unsigned int>::Iterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEEC2Ev(%"class.gl::TypedResourceManager.314"*) unnamed_addr #1 comdat($_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorC1Ev(%"class.gl::HandleAllocator"* %3) #11
  %4 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = bitcast i64* %4 to <2 x i64>*
  store <2 x i64> <i64 1, i64 32>, <2 x i64>* %5, align 8
  %6 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 1
  %7 = tail call i8* @_Znam(i64 256) #14
  %8 = bitcast %"class.gl::Framebuffer"*** %6 to i8**
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %11 = bitcast %"union.absl::container_internal::map_slot_type.319"** %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -1, i64 256, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEE12deleteObjectEPKNS_7ContextES3_(%"class.gl::TypedResourceManager.314"*, %"class.gl::Context"*, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.gl::Framebuffer"*, align 8
  %5 = bitcast %"class.gl::Framebuffer"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  store %"class.gl::Framebuffer"* null, %"class.gl::Framebuffer"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1
  %7 = call zeroext i1 @_ZN2gl11ResourceMapINS_11FramebufferENS_13FramebufferIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.315"* %6, i32 %2, %"class.gl::Framebuffer"** nonnull %4)
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 0, i32 1
  call void @_ZN2gl15HandleAllocator7releaseEj(%"class.gl::HandleAllocator"* %9, i32 %2) #11
  %10 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %4, align 8
  %11 = icmp eq %"class.gl::Framebuffer"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  call void @_ZN2gl11Framebuffer9onDestroyEPKNS_7ContextE(%"class.gl::Framebuffer"* nonnull %10, %"class.gl::Context"* %1) #11
  %13 = bitcast %"class.gl::Framebuffer"* %10 to void (%"class.gl::Framebuffer"*)***
  %14 = load void (%"class.gl::Framebuffer"*)**, void (%"class.gl::Framebuffer"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.gl::Framebuffer"*)*, void (%"class.gl::Framebuffer"*)** %14, i64 1
  %16 = load void (%"class.gl::Framebuffer"*)*, void (%"class.gl::Framebuffer"*)** %15, align 8
  call void %16(%"class.gl::Framebuffer"* nonnull %10) #11
  br label %17

17:                                               ; preds = %12, %8, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2gl11ResourceMapINS_11FramebufferENS_13FramebufferIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.315"*, i32, %"class.gl::Framebuffer"**) local_unnamed_addr #3 comdat align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %4
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %0, i64 0, i32 1
  %10 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %9, align 8
  %11 = getelementptr inbounds %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %10, i64 %4
  %12 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %11, align 8
  %13 = icmp eq %"class.gl::Framebuffer"* %12, inttoptr (i64 -1 to %"class.gl::Framebuffer"*)
  br i1 %13, label %134, label %14

14:                                               ; preds = %8
  %15 = ptrtoint %"class.gl::Framebuffer"* %12 to i64
  %16 = bitcast %"class.gl::Framebuffer"** %2 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.gl::Framebuffer"* inttoptr (i64 -1 to %"class.gl::Framebuffer"*), %"class.gl::Framebuffer"** %11, align 8
  br label %134

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %4
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %18, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %17
  %40 = phi i64 [ %33, %17 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %17 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #11, !range !2
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !3

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %134, !prof !4

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #11
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !3

77:                                               ; preds = %72
  tail call void @llvm.trap() #11
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %51, i64 %57, i32 0, i32 1
  %80 = bitcast %"class.gl::Framebuffer"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.gl::Framebuffer"** %2 to i64*
  store i64 %81, i64* %82, align 8
  %83 = load i8, i8* %73, align 1
  %84 = icmp sgt i8 %83, -1
  br i1 %84, label %86, label %85, !prof !3

85:                                               ; preds = %78
  tail call void @llvm.trap() #11
  unreachable

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, -1
  store i64 %89, i64* %87, align 8
  %90 = bitcast %"class.absl::container_internal::raw_hash_set.318"* %18 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = ptrtoint i8* %73 to i64
  %93 = sub i64 %92, %91
  %94 = add i64 %93, -16
  %95 = load i64, i64* %28, align 8
  %96 = and i64 %94, %95
  %97 = bitcast i8* %73 to <16 x i8>*
  %98 = load <16 x i8>, <16 x i8>* %97, align 1
  %99 = icmp eq <16 x i8> %98, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %100 = bitcast <16 x i1> %99 to i16
  %101 = inttoptr i64 %91 to i8*
  %102 = getelementptr inbounds i8, i8* %101, i64 %96
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1
  %105 = icmp eq <16 x i8> %104, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %106 = bitcast <16 x i1> %105 to i16
  %107 = icmp ne i16 %106, 0
  %108 = icmp ne i16 %100, 0
  %109 = and i1 %108, %107
  br i1 %109, label %110, label %120

110:                                              ; preds = %86
  %111 = zext i16 %100 to i32
  %112 = zext i16 %106 to i32
  %113 = tail call i32 @llvm.cttz.i32(i32 %111, i1 false) #11, !range !2
  %114 = shl nuw i32 %112, 16
  %115 = tail call i32 @llvm.ctlz.i32(i32 %114, i1 false) #11, !range !2
  %116 = add nuw nsw i32 %115, %113
  %117 = icmp ult i32 %116, 16
  %118 = zext i1 %117 to i64
  %119 = select i1 %117, i8 -128, i8 -2
  br label %120

120:                                              ; preds = %86, %110
  %121 = phi i64 [ 0, %86 ], [ %118, %110 ]
  %122 = phi i8 [ -2, %86 ], [ %119, %110 ]
  %123 = getelementptr inbounds i8, i8* %101, i64 %93
  store i8 %122, i8* %123, align 1
  %124 = load i8*, i8** %26, align 8
  %125 = add i64 %93, -15
  %126 = load i64, i64* %28, align 8
  %127 = and i64 %126, %125
  %128 = and i64 %126, 15
  %129 = add i64 %127, %128
  %130 = getelementptr inbounds i8, i8* %124, i64 %129
  store i8 %122, i8* %130, align 1
  %131 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %0, i64 0, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, %121
  store i64 %133, i64* %131, align 8
  br label %134

134:                                              ; preds = %65, %14, %120, %8
  %135 = phi i1 [ false, %8 ], [ true, %120 ], [ true, %14 ], [ false, %65 ]
  ret i1 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl18FramebufferManager12DeleteObjectEPKNS_7ContextEPNS_11FramebufferE(%"class.gl::Context"*, %"class.gl::Framebuffer"*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN2gl11Framebuffer9onDestroyEPKNS_7ContextE(%"class.gl::Framebuffer"* %1, %"class.gl::Context"* %0) #11
  %3 = icmp eq %"class.gl::Framebuffer"* %1, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.gl::Framebuffer"* %1 to void (%"class.gl::Framebuffer"*)***
  %6 = load void (%"class.gl::Framebuffer"*)**, void (%"class.gl::Framebuffer"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.gl::Framebuffer"*)*, void (%"class.gl::Framebuffer"*)** %6, i64 1
  %8 = load void (%"class.gl::Framebuffer"*)*, void (%"class.gl::Framebuffer"*)** %7, align 8
  tail call void %8(%"class.gl::Framebuffer"* nonnull %1) #11
  br label %9

9:                                                ; preds = %4, %2
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEE17isHandleGeneratedES3_(%"class.gl::TypedResourceManager.314"*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %78, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %5
  br i1 %8, label %9, label %15

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 1
  %11 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %10, align 8
  %12 = getelementptr inbounds %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %11, i64 %5
  %13 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %12, align 8
  %14 = icmp ne %"class.gl::Framebuffer"* %13, inttoptr (i64 -1 to %"class.gl::Framebuffer"*)
  br label %78

15:                                               ; preds = %4
  %16 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %17 = add i64 %16, %5
  %18 = zext i64 %17 to i128
  %19 = mul nuw i128 %18, 11376068507788127593
  %20 = lshr i128 %19, 64
  %21 = xor i128 %20, %19
  %22 = trunc i128 %21 to i64
  %23 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %26 = load i64, i64* %25, align 8
  %27 = lshr i64 %22, 7
  %28 = ptrtoint i8* %24 to i64
  %29 = lshr i64 %28, 12
  %30 = xor i64 %27, %29
  %31 = trunc i128 %21 to i8
  %32 = and i8 %31, 127
  %33 = insertelement <16 x i8> undef, i8 %32, i32 0
  %34 = shufflevector <16 x i8> %33, <16 x i8> undef, <16 x i32> zeroinitializer
  %35 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %36

36:                                               ; preds = %66, %15
  %37 = phi i64 [ %30, %15 ], [ %68, %66 ]
  %38 = phi i64 [ 0, %15 ], [ %67, %66 ]
  %39 = and i64 %37, %26
  %40 = getelementptr inbounds i8, i8* %24, i64 %39
  %41 = bitcast i8* %40 to <16 x i8>*
  %42 = load <16 x i8>, <16 x i8>* %41, align 1
  %43 = icmp eq <16 x i8> %34, %42
  %44 = bitcast <16 x i1> %43 to i16
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %62, label %46

46:                                               ; preds = %36
  %47 = zext i16 %44 to i32
  %48 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %35, align 8
  br label %49

49:                                               ; preds = %58, %46
  %50 = phi i32 [ %47, %46 ], [ %60, %58 ]
  %51 = tail call i32 @llvm.cttz.i32(i32 %50, i1 false) #11, !range !2
  %52 = zext i32 %51 to i64
  %53 = add i64 %39, %52
  %54 = and i64 %53, %26
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %48, i64 %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %1
  br i1 %57, label %69, label %58, !prof !3

58:                                               ; preds = %49
  %59 = add i32 %50, -1
  %60 = and i32 %59, %50
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %49

62:                                               ; preds = %58, %36
  %63 = icmp eq <16 x i8> %42, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %64 = bitcast <16 x i1> %63 to i16
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %66, label %75, !prof !4

66:                                               ; preds = %62
  %67 = add i64 %38, 16
  %68 = add i64 %67, %39
  br label %36

69:                                               ; preds = %49
  %70 = getelementptr inbounds i8, i8* %24, i64 %54
  %71 = icmp ne i8* %70, null
  tail call void @llvm.assume(i1 %71) #11
  %72 = load i8, i8* %70, align 1
  %73 = icmp sgt i8 %72, -1
  br i1 %73, label %75, label %74, !prof !3

74:                                               ; preds = %69
  tail call void @llvm.trap() #11
  unreachable

75:                                               ; preds = %62, %69
  %76 = phi i8* [ %70, %69 ], [ null, %62 ]
  %77 = icmp ne i8* %76, null
  br label %78

78:                                               ; preds = %75, %9, %2
  %79 = phi i1 [ true, %2 ], [ %14, %9 ], [ %77, %75 ]
  ret i1 %79
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEE5beginEv(%"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* noalias sret, %"class.gl::TypedResourceManager.314"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %1, i64 0, i32 1
  tail call void @_ZNK2gl11ResourceMapINS_11FramebufferENS_13FramebufferIDEE5beginEv(%"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* sret %0, %"class.gl::ResourceMap.315"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2gl11ResourceMapINS_11FramebufferENS_13FramebufferIDEE5beginEv(%"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* noalias sret, %"class.gl::ResourceMap.315"*) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %1, i64 0, i32 1
  %8 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %7, align 8
  br label %9

9:                                                ; preds = %14, %6
  %10 = phi i64 [ 0, %6 ], [ %15, %14 ]
  %11 = getelementptr inbounds %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %8, i64 %10
  %12 = bitcast %"class.gl::Framebuffer"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  switch i64 %13, label %17 [
    i64 -1, label %14
    i64 0, label %14
  ]

14:                                               ; preds = %9, %9
  %15 = add nuw i64 %10, 1
  %16 = icmp eq i64 %15, %4
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %14, %2
  %18 = phi i64 [ 0, %2 ], [ %10, %9 ], [ %4, %14 ]
  %19 = trunc i64 %18 to i32
  %20 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %23 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %22, align 8
  %24 = icmp ne i8* %21, null
  tail call void @llvm.assume(i1 %24) #11
  %25 = load i8, i8* %21, align 1
  %26 = icmp slt i8 %25, -1
  br i1 %26, label %27, label %42

27:                                               ; preds = %17, %27
  %28 = phi %"union.absl::container_internal::map_slot_type.319"* [ %39, %27 ], [ %23, %17 ]
  %29 = phi i8* [ %38, %27 ], [ %21, %17 ]
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp slt <16 x i8> %31, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %33 = bitcast <16 x i1> %32 to i16
  %34 = zext i16 %33 to i32
  %35 = add nuw nsw i32 %34, 1
  %36 = tail call i32 @llvm.cttz.i32(i32 %35, i1 true) #11, !range !2
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %29, i64 %37
  %39 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %28, i64 %37
  %40 = load i8, i8* %38, align 1
  %41 = icmp slt i8 %40, -1
  br i1 %41, label %27, label %42

42:                                               ; preds = %27, %17
  %43 = phi %"union.absl::container_internal::map_slot_type.319"* [ %23, %17 ], [ %39, %27 ]
  %44 = phi i8* [ %21, %17 ], [ %38, %27 ]
  %45 = phi i8 [ %25, %17 ], [ %40, %27 ]
  %46 = icmp eq i8 %45, -1
  %47 = select i1 %46, i8* null, i8* %44, !prof !4
  %48 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0, i64 0, i32 0
  store %"class.gl::ResourceMap.315"* %1, %"class.gl::ResourceMap.315"** %48, align 8
  %49 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0, i64 0, i32 1
  store i32 %19, i32* %49, align 8
  %50 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  store i8* %47, i8** %50, align 8
  %51 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type.319"* %43, %"union.absl::container_internal::map_slot_type.319"** %51, align 8
  %52 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0, i64 0, i32 4, i32 1
  store %"class.gl::Framebuffer"* null, %"class.gl::Framebuffer"** %53, align 8
  %54 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0, i64 0, i32 5
  store i8 1, i8* %54, align 8
  %55 = trunc i64 %4 to i32
  %56 = icmp ugt i32 %55, %19
  br i1 %56, label %57, label %62

57:                                               ; preds = %42
  store i32 %19, i32* %52, align 8
  %58 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %1, i64 0, i32 1
  %59 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %58, align 8
  %60 = and i64 %18, 4294967295
  %61 = getelementptr inbounds %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %59, i64 %60
  br label %76

62:                                               ; preds = %42
  %63 = icmp eq i8* %47, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %62
  %65 = load i8, i8* %47, align 1
  %66 = icmp sgt i8 %65, -1
  br i1 %66, label %68, label %67, !prof !3

67:                                               ; preds = %64
  tail call void @llvm.trap() #11
  unreachable

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %43, i64 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 8
  store i32 %70, i32* %52, align 8
  %71 = load i8, i8* %47, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %74, label %73, !prof !3

73:                                               ; preds = %68
  tail call void @llvm.trap() #11
  unreachable

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %43, i64 0, i32 0, i32 1
  br label %76

76:                                               ; preds = %74, %57
  %77 = phi %"class.gl::Framebuffer"** [ %61, %57 ], [ %75, %74 ]
  %78 = bitcast %"class.gl::Framebuffer"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.gl::Framebuffer"** %53 to i64*
  store i64 %79, i64* %80, align 8
  br label %81

81:                                               ; preds = %76, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEE3endEv(%"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* noalias sret, %"class.gl::TypedResourceManager.314"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %3, i64 0, i32 0
  %5 = load i64, i64* %4, align 8, !noalias !36
  %6 = trunc i64 %5 to i32
  %7 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0, i64 0, i32 0
  store %"class.gl::ResourceMap.315"* %3, %"class.gl::ResourceMap.315"** %7, align 8, !alias.scope !36
  %8 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0, i64 0, i32 1
  store i32 %6, i32* %8, align 8, !alias.scope !36
  %9 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  store i8* null, i8** %9, align 8, !alias.scope !36
  %10 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !36
  %11 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0, i64 0, i32 4, i32 1
  store %"class.gl::Framebuffer"* null, %"class.gl::Framebuffer"** %11, align 8, !alias.scope !36
  %12 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0, i64 0, i32 5
  store i8 1, i8* %12, align 8, !alias.scope !36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEED2Ev(%"class.gl::TypedResourceManager.314"*) unnamed_addr #1 comdat($_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %3, align 8
  %5 = icmp eq %"class.gl::Framebuffer"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Framebuffer"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.319"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEED0Ev(%"class.gl::TypedResourceManager.314"*) unnamed_addr #1 comdat($_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %3, align 8
  %5 = icmp eq %"class.gl::Framebuffer"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Framebuffer"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.319"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  %19 = bitcast %"class.gl::TypedResourceManager.314"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEE5resetEPKNS_7ContextE(%"class.gl::TypedResourceManager.314"*, %"class.gl::Context"*) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", align 8
  %4 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocator5resetEv(%"class.gl::HandleAllocator"* %4) #11
  %5 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1
  %6 = bitcast %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 56, i1 false)
  %7 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %5, i64 0, i32 0
  %8 = load i64, i64* %7, align 8, !noalias !39
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 1
  %12 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %11, align 8, !noalias !39
  br label %13

13:                                               ; preds = %18, %10
  %14 = phi i64 [ 0, %10 ], [ %19, %18 ]
  %15 = getelementptr inbounds %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %12, i64 %14
  %16 = bitcast %"class.gl::Framebuffer"** %15 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !39
  switch i64 %17, label %21 [
    i64 -1, label %18
    i64 0, label %18
  ]

18:                                               ; preds = %13, %13
  %19 = add nuw i64 %14, 1
  %20 = icmp eq i64 %19, %8
  br i1 %20, label %21, label %13

21:                                               ; preds = %18, %13, %2
  %22 = phi i64 [ 0, %2 ], [ %8, %18 ], [ %14, %13 ]
  %23 = trunc i64 %22 to i32
  %24 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8, !noalias !39
  %26 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %27 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %26, align 8, !noalias !39
  %28 = icmp ne i8* %25, null
  tail call void @llvm.assume(i1 %28) #11, !noalias !39
  %29 = load i8, i8* %25, align 1, !noalias !39
  %30 = icmp slt i8 %29, -1
  br i1 %30, label %31, label %46

31:                                               ; preds = %21, %31
  %32 = phi %"union.absl::container_internal::map_slot_type.319"* [ %43, %31 ], [ %27, %21 ]
  %33 = phi i8* [ %42, %31 ], [ %25, %21 ]
  %34 = bitcast i8* %33 to <16 x i8>*
  %35 = load <16 x i8>, <16 x i8>* %34, align 1, !noalias !39
  %36 = icmp slt <16 x i8> %35, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %37 = bitcast <16 x i1> %36 to i16
  %38 = zext i16 %37 to i32
  %39 = add nuw nsw i32 %38, 1
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 true) #11, !range !2
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %33, i64 %41
  %43 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %32, i64 %41
  %44 = load i8, i8* %42, align 1, !noalias !39
  %45 = icmp slt i8 %44, -1
  br i1 %45, label %31, label %46

46:                                               ; preds = %31, %21
  %47 = phi %"union.absl::container_internal::map_slot_type.319"* [ %27, %21 ], [ %43, %31 ]
  %48 = phi i8* [ %25, %21 ], [ %42, %31 ]
  %49 = phi i8 [ %29, %21 ], [ %44, %31 ]
  %50 = icmp eq i8 %49, -1
  %51 = select i1 %50, i8* null, i8* %48, !prof !4
  %52 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %3, i64 0, i32 0
  store %"class.gl::ResourceMap.315"* %5, %"class.gl::ResourceMap.315"** %52, align 8, !alias.scope !39
  %53 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %3, i64 0, i32 1
  store i32 %23, i32* %53, align 8, !alias.scope !39
  %54 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %3, i64 0, i32 3, i32 0, i32 0
  store i8* %51, i8** %54, align 8, !alias.scope !39
  %55 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %3, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type.319"* %47, %"union.absl::container_internal::map_slot_type.319"** %55, align 8, !alias.scope !39
  %56 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %3, i64 0, i32 4, i32 0
  store i32 0, i32* %56, align 8, !alias.scope !39
  %57 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %3, i64 0, i32 4, i32 1
  store %"class.gl::Framebuffer"* null, %"class.gl::Framebuffer"** %57, align 8, !alias.scope !39
  %58 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %3, i64 0, i32 5
  store i8 1, i8* %58, align 8, !alias.scope !39
  %59 = trunc i64 %8 to i32
  %60 = icmp ugt i32 %59, %23
  br i1 %60, label %61, label %66

61:                                               ; preds = %46
  store i32 %23, i32* %56, align 8, !alias.scope !39
  %62 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 1
  %63 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %62, align 8, !noalias !39
  %64 = and i64 %22, 4294967295
  %65 = getelementptr inbounds %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %63, i64 %64
  br label %76

66:                                               ; preds = %46
  %67 = icmp eq i8* %51, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %66
  %69 = load i8, i8* %51, align 1, !noalias !39
  %70 = icmp sgt i8 %69, -1
  br i1 %70, label %72, label %71, !prof !3

71:                                               ; preds = %68
  tail call void @llvm.trap() #11, !noalias !39
  unreachable

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %47, i64 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 8, !noalias !39
  store i32 %74, i32* %56, align 8, !alias.scope !39
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %47, i64 0, i32 0, i32 1
  br label %76

76:                                               ; preds = %72, %61
  %77 = phi %"class.gl::Framebuffer"** [ %65, %61 ], [ %75, %72 ]
  %78 = bitcast %"class.gl::Framebuffer"** %77 to i64*
  %79 = load i64, i64* %78, align 8, !noalias !39
  %80 = bitcast %"class.gl::Framebuffer"** %57 to i64*
  store i64 %79, i64* %80, align 8, !alias.scope !39
  br label %81

81:                                               ; preds = %76, %66
  br label %82

82:                                               ; preds = %81, %129
  %83 = phi i32 [ %131, %129 ], [ %23, %81 ]
  %84 = icmp eq i32 %83, %59
  br i1 %84, label %85, label %121

85:                                               ; preds = %82
  %86 = load i8*, i8** %54, align 8
  %87 = icmp eq i8* %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %85
  %89 = load i8, i8* %86, align 1
  %90 = icmp sgt i8 %89, -1
  br i1 %90, label %121, label %91, !prof !3

91:                                               ; preds = %88
  call void @llvm.trap() #11
  unreachable

92:                                               ; preds = %85
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #11
  %93 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 1
  %94 = bitcast %"class.gl::Framebuffer"*** %93 to i8**
  %95 = load i8*, i8** %94, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 -1, i64 256, i1 false) #11
  store i64 32, i64* %7, align 8
  %96 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  %97 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %98 = load i64, i64* %97, align 8
  %99 = icmp ugt i64 %98, 127
  br i1 %99, label %100, label %104

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %96, i64 0, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %101, align 8
  %103 = bitcast %"union.absl::container_internal::map_slot_type.319"** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 32, i1 false) #11
  br label %120

104:                                              ; preds = %92
  %105 = icmp eq i64 %98, 0
  br i1 %105, label %120, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  store i64 0, i64* %107, align 8
  %108 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %96, i64 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = add nuw nsw i64 %98, 16
  call void @llvm.memset.p0i8.i64(i8* align 1 %109, i8 -128, i64 %110, i1 false) #11
  %111 = load i8*, i8** %108, align 8
  %112 = load i64, i64* %97, align 8
  %113 = getelementptr inbounds i8, i8* %111, i64 %112
  store i8 -1, i8* %113, align 1
  %114 = load i64, i64* %97, align 8
  %115 = lshr i64 %114, 3
  %116 = sub i64 %114, %115
  %117 = load i64, i64* %107, align 8
  %118 = sub i64 %116, %117
  %119 = getelementptr inbounds %"class.gl::TypedResourceManager.314", %"class.gl::TypedResourceManager.314"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %118, i64* %119, align 8
  br label %120

120:                                              ; preds = %100, %104, %106
  ret void

121:                                              ; preds = %88, %82
  %122 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %57, align 8
  %123 = icmp eq %"class.gl::Framebuffer"* %122, null
  br i1 %123, label %129, label %124

124:                                              ; preds = %121
  call void @_ZN2gl11Framebuffer9onDestroyEPKNS_7ContextE(%"class.gl::Framebuffer"* nonnull %122, %"class.gl::Context"* %1) #11
  %125 = bitcast %"class.gl::Framebuffer"* %122 to void (%"class.gl::Framebuffer"*)***
  %126 = load void (%"class.gl::Framebuffer"*)**, void (%"class.gl::Framebuffer"*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.gl::Framebuffer"*)*, void (%"class.gl::Framebuffer"*)** %126, i64 1
  %128 = load void (%"class.gl::Framebuffer"*)*, void (%"class.gl::Framebuffer"*)** %127, align 8
  call void %128(%"class.gl::Framebuffer"* nonnull %122) #11
  br label %129

129:                                              ; preds = %121, %124
  %130 = call dereferenceable(56) %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* @_ZN2gl11ResourceMapINS_11FramebufferENS_13FramebufferIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* nonnull %3)
  %131 = load i32, i32* %53, align 8
  br label %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* @_ZN2gl11ResourceMapINS_11FramebufferENS_13FramebufferIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0, i64 0, i32 0
  %5 = load %"class.gl::ResourceMap.315"*, %"class.gl::ResourceMap.315"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = icmp ult i32 %3, %8
  br i1 %9, label %10, label %35

10:                                               ; preds = %1
  %11 = add nuw i32 %3, 1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0, i64 0, i32 5
  %14 = load i8, i8* %13, align 8, !range !11
  %15 = icmp ne i8 %14, 0
  %16 = icmp ugt i64 %7, %12
  br i1 %16, label %17, label %33

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %5, i64 0, i32 1
  %19 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %18, align 8
  br label %20

20:                                               ; preds = %30, %17
  %21 = phi i64 [ %12, %17 ], [ %31, %30 ]
  %22 = getelementptr inbounds %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %19, i64 %21
  %23 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %22, align 8
  %24 = icmp eq %"class.gl::Framebuffer"* %23, null
  %25 = and i1 %15, %24
  %26 = icmp eq %"class.gl::Framebuffer"* %23, inttoptr (i64 -1 to %"class.gl::Framebuffer"*)
  %27 = or i1 %26, %25
  br i1 %27, label %30, label %28

28:                                               ; preds = %20
  %29 = trunc i64 %21 to i32
  br label %33

30:                                               ; preds = %20
  %31 = add i64 %21, 1
  %32 = icmp eq i64 %31, %7
  br i1 %32, label %33, label %20

33:                                               ; preds = %30, %28, %10
  %34 = phi i32 [ %8, %10 ], [ %29, %28 ], [ %8, %30 ]
  store i32 %34, i32* %2, align 8
  br label %69

35:                                               ; preds = %1
  %36 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %39 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %38, align 8
  %40 = icmp eq i8* %37, null
  br i1 %40, label %44, label %41, !prof !4

41:                                               ; preds = %35
  %42 = load i8, i8* %37, align 1
  %43 = icmp sgt i8 %42, -1
  br i1 %43, label %45, label %44, !prof !3

44:                                               ; preds = %41, %35
  tail call void @llvm.trap() #11
  unreachable

45:                                               ; preds = %41
  %46 = getelementptr inbounds i8, i8* %37, i64 1
  store i8* %46, i8** %36, align 8
  %47 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %39, i64 1
  store %"union.absl::container_internal::map_slot_type.319"* %47, %"union.absl::container_internal::map_slot_type.319"** %38, align 8
  %48 = load i8, i8* %46, align 1
  %49 = icmp slt i8 %48, -1
  br i1 %49, label %50, label %65

50:                                               ; preds = %45, %50
  %51 = phi %"union.absl::container_internal::map_slot_type.319"* [ %62, %50 ], [ %47, %45 ]
  %52 = phi i8* [ %61, %50 ], [ %46, %45 ]
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1
  %55 = icmp slt <16 x i8> %54, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %56 = bitcast <16 x i1> %55 to i16
  %57 = zext i16 %56 to i32
  %58 = add nuw nsw i32 %57, 1
  %59 = tail call i32 @llvm.cttz.i32(i32 %58, i1 true) #11, !range !2
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %52, i64 %60
  store i8* %61, i8** %36, align 8
  %62 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %51, i64 %60
  store %"union.absl::container_internal::map_slot_type.319"* %62, %"union.absl::container_internal::map_slot_type.319"** %38, align 8
  %63 = load i8, i8* %61, align 1
  %64 = icmp slt i8 %63, -1
  br i1 %64, label %50, label %65

65:                                               ; preds = %50, %45
  %66 = phi i8 [ %48, %45 ], [ %63, %50 ]
  %67 = icmp eq i8 %66, -1
  br i1 %67, label %68, label %69, !prof !4

68:                                               ; preds = %65
  store i8* null, i8** %36, align 8
  br label %69

69:                                               ; preds = %68, %65, %33
  %70 = phi i32 [ %3, %68 ], [ %3, %65 ], [ %34, %33 ]
  %71 = load i64, i64* %6, align 8
  %72 = trunc i64 %71 to i32
  %73 = icmp ult i32 %70, %72
  br i1 %73, label %74, label %80

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 %70, i32* %75, align 8
  %76 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %5, i64 0, i32 1
  %77 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %76, align 8
  %78 = zext i32 %70 to i64
  %79 = getelementptr inbounds %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %77, i64 %78
  br label %99

80:                                               ; preds = %69
  %81 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %105, label %84

84:                                               ; preds = %80
  %85 = load i8, i8* %82, align 1
  %86 = icmp sgt i8 %85, -1
  br i1 %86, label %88, label %87, !prof !3

87:                                               ; preds = %84
  tail call void @llvm.trap() #11
  unreachable

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %90 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %89, align 8
  %91 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %90, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 %92, i32* %93, align 8
  %94 = load i8, i8* %82, align 1
  %95 = icmp sgt i8 %94, -1
  br i1 %95, label %97, label %96, !prof !3

96:                                               ; preds = %88
  tail call void @llvm.trap() #11
  unreachable

97:                                               ; preds = %88
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %90, i64 0, i32 0, i32 1
  br label %99

99:                                               ; preds = %97, %74
  %100 = phi %"class.gl::Framebuffer"** [ %79, %74 ], [ %98, %97 ]
  %101 = bitcast %"class.gl::Framebuffer"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0, i64 0, i32 4, i32 1
  %104 = bitcast %"class.gl::Framebuffer"** %103 to i64*
  store i64 %102, i64* %104, align 8
  br label %105

105:                                              ; preds = %99, %80
  ret %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEEC2Ev(%"class.gl::TypedResourceManager.325"*) unnamed_addr #1 comdat($_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorC1Ev(%"class.gl::HandleAllocator"* %3) #11
  %4 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = bitcast i64* %4 to <2 x i64>*
  store <2 x i64> <i64 1, i64 32>, <2 x i64>* %5, align 8
  %6 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 1
  %7 = tail call i8* @_Znam(i64 256) #14
  %8 = bitcast %"class.gl::ProgramPipeline"*** %6 to i8**
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %11 = bitcast %"union.absl::container_internal::map_slot_type.347"** %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -1, i64 256, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEE12deleteObjectEPKNS_7ContextES3_(%"class.gl::TypedResourceManager.325"*, %"class.gl::Context"*, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.gl::ProgramPipeline"*, align 8
  %5 = bitcast %"class.gl::ProgramPipeline"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  store %"class.gl::ProgramPipeline"* null, %"class.gl::ProgramPipeline"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1
  %7 = call zeroext i1 @_ZN2gl11ResourceMapINS_15ProgramPipelineENS_17ProgramPipelineIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.326"* %6, i32 %2, %"class.gl::ProgramPipeline"** nonnull %4)
  br i1 %7, label %8, label %26

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 0, i32 1
  call void @_ZN2gl15HandleAllocator7releaseEj(%"class.gl::HandleAllocator"* %9, i32 %2) #11
  %10 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %4, align 8
  %11 = icmp eq %"class.gl::ProgramPipeline"* %10, null
  br i1 %11, label %26, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %10, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %10, i64 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, -1
  store i64 %16, i64* %14, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %26

18:                                               ; preds = %12
  %19 = bitcast %"class.gl::ProgramPipeline"* %10 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %20 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %19, align 8
  %21 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %20, align 8
  call void %21(%"class.angle::RefCountObject"* %13, %"class.gl::Context"* %1) #11
  %22 = bitcast %"class.gl::ProgramPipeline"* %10 to void (%"class.angle::RefCountObject"*)***
  %23 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %23, i64 2
  %25 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %24, align 8
  call void %25(%"class.angle::RefCountObject"* nonnull %13) #11
  br label %26

26:                                               ; preds = %18, %12, %8, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2gl11ResourceMapINS_15ProgramPipelineENS_17ProgramPipelineIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.326"*, i32, %"class.gl::ProgramPipeline"**) local_unnamed_addr #3 comdat align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %4
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %0, i64 0, i32 1
  %10 = load %"class.gl::ProgramPipeline"**, %"class.gl::ProgramPipeline"*** %9, align 8
  %11 = getelementptr inbounds %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %10, i64 %4
  %12 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %11, align 8
  %13 = icmp eq %"class.gl::ProgramPipeline"* %12, inttoptr (i64 -1 to %"class.gl::ProgramPipeline"*)
  br i1 %13, label %134, label %14

14:                                               ; preds = %8
  %15 = ptrtoint %"class.gl::ProgramPipeline"* %12 to i64
  %16 = bitcast %"class.gl::ProgramPipeline"** %2 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.gl::ProgramPipeline"* inttoptr (i64 -1 to %"class.gl::ProgramPipeline"*), %"class.gl::ProgramPipeline"** %11, align 8
  br label %134

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %4
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %18, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %17
  %40 = phi i64 [ %33, %17 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %17 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #11, !range !2
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !3

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %134, !prof !4

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #11
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !3

77:                                               ; preds = %72
  tail call void @llvm.trap() #11
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %51, i64 %57, i32 0, i32 1
  %80 = bitcast %"class.gl::ProgramPipeline"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.gl::ProgramPipeline"** %2 to i64*
  store i64 %81, i64* %82, align 8
  %83 = load i8, i8* %73, align 1
  %84 = icmp sgt i8 %83, -1
  br i1 %84, label %86, label %85, !prof !3

85:                                               ; preds = %78
  tail call void @llvm.trap() #11
  unreachable

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, -1
  store i64 %89, i64* %87, align 8
  %90 = bitcast %"class.absl::container_internal::raw_hash_set.346"* %18 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = ptrtoint i8* %73 to i64
  %93 = sub i64 %92, %91
  %94 = add i64 %93, -16
  %95 = load i64, i64* %28, align 8
  %96 = and i64 %94, %95
  %97 = bitcast i8* %73 to <16 x i8>*
  %98 = load <16 x i8>, <16 x i8>* %97, align 1
  %99 = icmp eq <16 x i8> %98, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %100 = bitcast <16 x i1> %99 to i16
  %101 = inttoptr i64 %91 to i8*
  %102 = getelementptr inbounds i8, i8* %101, i64 %96
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1
  %105 = icmp eq <16 x i8> %104, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %106 = bitcast <16 x i1> %105 to i16
  %107 = icmp ne i16 %106, 0
  %108 = icmp ne i16 %100, 0
  %109 = and i1 %108, %107
  br i1 %109, label %110, label %120

110:                                              ; preds = %86
  %111 = zext i16 %100 to i32
  %112 = zext i16 %106 to i32
  %113 = tail call i32 @llvm.cttz.i32(i32 %111, i1 false) #11, !range !2
  %114 = shl nuw i32 %112, 16
  %115 = tail call i32 @llvm.ctlz.i32(i32 %114, i1 false) #11, !range !2
  %116 = add nuw nsw i32 %115, %113
  %117 = icmp ult i32 %116, 16
  %118 = zext i1 %117 to i64
  %119 = select i1 %117, i8 -128, i8 -2
  br label %120

120:                                              ; preds = %86, %110
  %121 = phi i64 [ 0, %86 ], [ %118, %110 ]
  %122 = phi i8 [ -2, %86 ], [ %119, %110 ]
  %123 = getelementptr inbounds i8, i8* %101, i64 %93
  store i8 %122, i8* %123, align 1
  %124 = load i8*, i8** %26, align 8
  %125 = add i64 %93, -15
  %126 = load i64, i64* %28, align 8
  %127 = and i64 %126, %125
  %128 = and i64 %126, 15
  %129 = add i64 %127, %128
  %130 = getelementptr inbounds i8, i8* %124, i64 %129
  store i8 %122, i8* %130, align 1
  %131 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %0, i64 0, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, %121
  store i64 %133, i64* %131, align 8
  br label %134

134:                                              ; preds = %65, %14, %120, %8
  %135 = phi i1 [ false, %8 ], [ true, %120 ], [ true, %14 ], [ false, %65 ]
  ret i1 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl22ProgramPipelineManager12DeleteObjectEPKNS_7ContextEPNS_15ProgramPipelineE(%"class.gl::Context"*, %"class.gl::ProgramPipeline"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %1, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  store i64 %6, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %18

8:                                                ; preds = %2
  %9 = bitcast %"class.gl::ProgramPipeline"* %1 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %10 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %9, align 8
  %11 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %10, align 8
  tail call void %11(%"class.angle::RefCountObject"* %3, %"class.gl::Context"* %0) #11
  %12 = icmp eq %"class.gl::ProgramPipeline"* %1, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.gl::ProgramPipeline"* %1 to void (%"class.angle::RefCountObject"*)***
  %15 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %15, i64 2
  %17 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %16, align 8
  tail call void %17(%"class.angle::RefCountObject"* nonnull %3) #11
  br label %18

18:                                               ; preds = %2, %8, %13
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEE17isHandleGeneratedES3_(%"class.gl::TypedResourceManager.325"*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %78, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %5
  br i1 %8, label %9, label %15

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 1
  %11 = load %"class.gl::ProgramPipeline"**, %"class.gl::ProgramPipeline"*** %10, align 8
  %12 = getelementptr inbounds %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %11, i64 %5
  %13 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %12, align 8
  %14 = icmp ne %"class.gl::ProgramPipeline"* %13, inttoptr (i64 -1 to %"class.gl::ProgramPipeline"*)
  br label %78

15:                                               ; preds = %4
  %16 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %17 = add i64 %16, %5
  %18 = zext i64 %17 to i128
  %19 = mul nuw i128 %18, 11376068507788127593
  %20 = lshr i128 %19, 64
  %21 = xor i128 %20, %19
  %22 = trunc i128 %21 to i64
  %23 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %26 = load i64, i64* %25, align 8
  %27 = lshr i64 %22, 7
  %28 = ptrtoint i8* %24 to i64
  %29 = lshr i64 %28, 12
  %30 = xor i64 %27, %29
  %31 = trunc i128 %21 to i8
  %32 = and i8 %31, 127
  %33 = insertelement <16 x i8> undef, i8 %32, i32 0
  %34 = shufflevector <16 x i8> %33, <16 x i8> undef, <16 x i32> zeroinitializer
  %35 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %36

36:                                               ; preds = %66, %15
  %37 = phi i64 [ %30, %15 ], [ %68, %66 ]
  %38 = phi i64 [ 0, %15 ], [ %67, %66 ]
  %39 = and i64 %37, %26
  %40 = getelementptr inbounds i8, i8* %24, i64 %39
  %41 = bitcast i8* %40 to <16 x i8>*
  %42 = load <16 x i8>, <16 x i8>* %41, align 1
  %43 = icmp eq <16 x i8> %34, %42
  %44 = bitcast <16 x i1> %43 to i16
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %62, label %46

46:                                               ; preds = %36
  %47 = zext i16 %44 to i32
  %48 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %35, align 8
  br label %49

49:                                               ; preds = %58, %46
  %50 = phi i32 [ %47, %46 ], [ %60, %58 ]
  %51 = tail call i32 @llvm.cttz.i32(i32 %50, i1 false) #11, !range !2
  %52 = zext i32 %51 to i64
  %53 = add i64 %39, %52
  %54 = and i64 %53, %26
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %48, i64 %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %1
  br i1 %57, label %69, label %58, !prof !3

58:                                               ; preds = %49
  %59 = add i32 %50, -1
  %60 = and i32 %59, %50
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %49

62:                                               ; preds = %58, %36
  %63 = icmp eq <16 x i8> %42, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %64 = bitcast <16 x i1> %63 to i16
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %66, label %75, !prof !4

66:                                               ; preds = %62
  %67 = add i64 %38, 16
  %68 = add i64 %67, %39
  br label %36

69:                                               ; preds = %49
  %70 = getelementptr inbounds i8, i8* %24, i64 %54
  %71 = icmp ne i8* %70, null
  tail call void @llvm.assume(i1 %71) #11
  %72 = load i8, i8* %70, align 1
  %73 = icmp sgt i8 %72, -1
  br i1 %73, label %75, label %74, !prof !3

74:                                               ; preds = %69
  tail call void @llvm.trap() #11
  unreachable

75:                                               ; preds = %62, %69
  %76 = phi i8* [ %70, %69 ], [ null, %62 ]
  %77 = icmp ne i8* %76, null
  br label %78

78:                                               ; preds = %75, %9, %2
  %79 = phi i1 [ true, %2 ], [ %14, %9 ], [ %77, %75 ]
  ret i1 %79
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEE5beginEv(%"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* noalias sret, %"class.gl::TypedResourceManager.325"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %1, i64 0, i32 1
  tail call void @_ZNK2gl11ResourceMapINS_15ProgramPipelineENS_17ProgramPipelineIDEE5beginEv(%"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* sret %0, %"class.gl::ResourceMap.326"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2gl11ResourceMapINS_15ProgramPipelineENS_17ProgramPipelineIDEE5beginEv(%"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* noalias sret, %"class.gl::ResourceMap.326"*) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %1, i64 0, i32 1
  %8 = load %"class.gl::ProgramPipeline"**, %"class.gl::ProgramPipeline"*** %7, align 8
  br label %9

9:                                                ; preds = %14, %6
  %10 = phi i64 [ 0, %6 ], [ %15, %14 ]
  %11 = getelementptr inbounds %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %8, i64 %10
  %12 = bitcast %"class.gl::ProgramPipeline"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  switch i64 %13, label %17 [
    i64 -1, label %14
    i64 0, label %14
  ]

14:                                               ; preds = %9, %9
  %15 = add nuw i64 %10, 1
  %16 = icmp eq i64 %15, %4
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %14, %2
  %18 = phi i64 [ 0, %2 ], [ %10, %9 ], [ %4, %14 ]
  %19 = trunc i64 %18 to i32
  %20 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %23 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %22, align 8
  %24 = icmp ne i8* %21, null
  tail call void @llvm.assume(i1 %24) #11
  %25 = load i8, i8* %21, align 1
  %26 = icmp slt i8 %25, -1
  br i1 %26, label %27, label %42

27:                                               ; preds = %17, %27
  %28 = phi %"union.absl::container_internal::map_slot_type.347"* [ %39, %27 ], [ %23, %17 ]
  %29 = phi i8* [ %38, %27 ], [ %21, %17 ]
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp slt <16 x i8> %31, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %33 = bitcast <16 x i1> %32 to i16
  %34 = zext i16 %33 to i32
  %35 = add nuw nsw i32 %34, 1
  %36 = tail call i32 @llvm.cttz.i32(i32 %35, i1 true) #11, !range !2
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %29, i64 %37
  %39 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %28, i64 %37
  %40 = load i8, i8* %38, align 1
  %41 = icmp slt i8 %40, -1
  br i1 %41, label %27, label %42

42:                                               ; preds = %27, %17
  %43 = phi %"union.absl::container_internal::map_slot_type.347"* [ %23, %17 ], [ %39, %27 ]
  %44 = phi i8* [ %21, %17 ], [ %38, %27 ]
  %45 = phi i8 [ %25, %17 ], [ %40, %27 ]
  %46 = icmp eq i8 %45, -1
  %47 = select i1 %46, i8* null, i8* %44, !prof !4
  %48 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0, i64 0, i32 0
  store %"class.gl::ResourceMap.326"* %1, %"class.gl::ResourceMap.326"** %48, align 8
  %49 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0, i64 0, i32 1
  store i32 %19, i32* %49, align 8
  %50 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  store i8* %47, i8** %50, align 8
  %51 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type.347"* %43, %"union.absl::container_internal::map_slot_type.347"** %51, align 8
  %52 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0, i64 0, i32 4, i32 1
  store %"class.gl::ProgramPipeline"* null, %"class.gl::ProgramPipeline"** %53, align 8
  %54 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0, i64 0, i32 5
  store i8 1, i8* %54, align 8
  %55 = trunc i64 %4 to i32
  %56 = icmp ugt i32 %55, %19
  br i1 %56, label %57, label %62

57:                                               ; preds = %42
  store i32 %19, i32* %52, align 8
  %58 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %1, i64 0, i32 1
  %59 = load %"class.gl::ProgramPipeline"**, %"class.gl::ProgramPipeline"*** %58, align 8
  %60 = and i64 %18, 4294967295
  %61 = getelementptr inbounds %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %59, i64 %60
  br label %76

62:                                               ; preds = %42
  %63 = icmp eq i8* %47, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %62
  %65 = load i8, i8* %47, align 1
  %66 = icmp sgt i8 %65, -1
  br i1 %66, label %68, label %67, !prof !3

67:                                               ; preds = %64
  tail call void @llvm.trap() #11
  unreachable

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %43, i64 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 8
  store i32 %70, i32* %52, align 8
  %71 = load i8, i8* %47, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %74, label %73, !prof !3

73:                                               ; preds = %68
  tail call void @llvm.trap() #11
  unreachable

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %43, i64 0, i32 0, i32 1
  br label %76

76:                                               ; preds = %74, %57
  %77 = phi %"class.gl::ProgramPipeline"** [ %61, %57 ], [ %75, %74 ]
  %78 = bitcast %"class.gl::ProgramPipeline"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.gl::ProgramPipeline"** %53 to i64*
  store i64 %79, i64* %80, align 8
  br label %81

81:                                               ; preds = %76, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEE3endEv(%"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* noalias sret, %"class.gl::TypedResourceManager.325"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %3, i64 0, i32 0
  %5 = load i64, i64* %4, align 8, !noalias !42
  %6 = trunc i64 %5 to i32
  %7 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0, i64 0, i32 0
  store %"class.gl::ResourceMap.326"* %3, %"class.gl::ResourceMap.326"** %7, align 8, !alias.scope !42
  %8 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0, i64 0, i32 1
  store i32 %6, i32* %8, align 8, !alias.scope !42
  %9 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  store i8* null, i8** %9, align 8, !alias.scope !42
  %10 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !42
  %11 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0, i64 0, i32 4, i32 1
  store %"class.gl::ProgramPipeline"* null, %"class.gl::ProgramPipeline"** %11, align 8, !alias.scope !42
  %12 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0, i64 0, i32 5
  store i8 1, i8* %12, align 8, !alias.scope !42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEED2Ev(%"class.gl::TypedResourceManager.325"*) unnamed_addr #1 comdat($_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.gl::ProgramPipeline"**, %"class.gl::ProgramPipeline"*** %3, align 8
  %5 = icmp eq %"class.gl::ProgramPipeline"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::ProgramPipeline"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.347"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEED0Ev(%"class.gl::TypedResourceManager.325"*) unnamed_addr #1 comdat($_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.gl::ProgramPipeline"**, %"class.gl::ProgramPipeline"*** %3, align 8
  %5 = icmp eq %"class.gl::ProgramPipeline"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::ProgramPipeline"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.347"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  %19 = bitcast %"class.gl::TypedResourceManager.325"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEE5resetEPKNS_7ContextE(%"class.gl::TypedResourceManager.325"*, %"class.gl::Context"*) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", align 8
  %4 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocator5resetEv(%"class.gl::HandleAllocator"* %4) #11
  %5 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1
  %6 = bitcast %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 56, i1 false)
  %7 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %5, i64 0, i32 0
  %8 = load i64, i64* %7, align 8, !noalias !45
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 1
  %12 = load %"class.gl::ProgramPipeline"**, %"class.gl::ProgramPipeline"*** %11, align 8, !noalias !45
  br label %13

13:                                               ; preds = %18, %10
  %14 = phi i64 [ 0, %10 ], [ %19, %18 ]
  %15 = getelementptr inbounds %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %12, i64 %14
  %16 = bitcast %"class.gl::ProgramPipeline"** %15 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !45
  switch i64 %17, label %21 [
    i64 -1, label %18
    i64 0, label %18
  ]

18:                                               ; preds = %13, %13
  %19 = add nuw i64 %14, 1
  %20 = icmp eq i64 %19, %8
  br i1 %20, label %21, label %13

21:                                               ; preds = %18, %13, %2
  %22 = phi i64 [ 0, %2 ], [ %8, %18 ], [ %14, %13 ]
  %23 = trunc i64 %22 to i32
  %24 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8, !noalias !45
  %26 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %27 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %26, align 8, !noalias !45
  %28 = icmp ne i8* %25, null
  tail call void @llvm.assume(i1 %28) #11, !noalias !45
  %29 = load i8, i8* %25, align 1, !noalias !45
  %30 = icmp slt i8 %29, -1
  br i1 %30, label %31, label %46

31:                                               ; preds = %21, %31
  %32 = phi %"union.absl::container_internal::map_slot_type.347"* [ %43, %31 ], [ %27, %21 ]
  %33 = phi i8* [ %42, %31 ], [ %25, %21 ]
  %34 = bitcast i8* %33 to <16 x i8>*
  %35 = load <16 x i8>, <16 x i8>* %34, align 1, !noalias !45
  %36 = icmp slt <16 x i8> %35, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %37 = bitcast <16 x i1> %36 to i16
  %38 = zext i16 %37 to i32
  %39 = add nuw nsw i32 %38, 1
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 true) #11, !range !2
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %33, i64 %41
  %43 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %32, i64 %41
  %44 = load i8, i8* %42, align 1, !noalias !45
  %45 = icmp slt i8 %44, -1
  br i1 %45, label %31, label %46

46:                                               ; preds = %31, %21
  %47 = phi %"union.absl::container_internal::map_slot_type.347"* [ %27, %21 ], [ %43, %31 ]
  %48 = phi i8* [ %25, %21 ], [ %42, %31 ]
  %49 = phi i8 [ %29, %21 ], [ %44, %31 ]
  %50 = icmp eq i8 %49, -1
  %51 = select i1 %50, i8* null, i8* %48, !prof !4
  %52 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %3, i64 0, i32 0
  store %"class.gl::ResourceMap.326"* %5, %"class.gl::ResourceMap.326"** %52, align 8, !alias.scope !45
  %53 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %3, i64 0, i32 1
  store i32 %23, i32* %53, align 8, !alias.scope !45
  %54 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %3, i64 0, i32 3, i32 0, i32 0
  store i8* %51, i8** %54, align 8, !alias.scope !45
  %55 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %3, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type.347"* %47, %"union.absl::container_internal::map_slot_type.347"** %55, align 8, !alias.scope !45
  %56 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %3, i64 0, i32 4, i32 0
  store i32 0, i32* %56, align 8, !alias.scope !45
  %57 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %3, i64 0, i32 4, i32 1
  store %"class.gl::ProgramPipeline"* null, %"class.gl::ProgramPipeline"** %57, align 8, !alias.scope !45
  %58 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %3, i64 0, i32 5
  store i8 1, i8* %58, align 8, !alias.scope !45
  %59 = trunc i64 %8 to i32
  %60 = icmp ugt i32 %59, %23
  br i1 %60, label %61, label %66

61:                                               ; preds = %46
  store i32 %23, i32* %56, align 8, !alias.scope !45
  %62 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 1
  %63 = load %"class.gl::ProgramPipeline"**, %"class.gl::ProgramPipeline"*** %62, align 8, !noalias !45
  %64 = and i64 %22, 4294967295
  %65 = getelementptr inbounds %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %63, i64 %64
  br label %76

66:                                               ; preds = %46
  %67 = icmp eq i8* %51, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %66
  %69 = load i8, i8* %51, align 1, !noalias !45
  %70 = icmp sgt i8 %69, -1
  br i1 %70, label %72, label %71, !prof !3

71:                                               ; preds = %68
  tail call void @llvm.trap() #11, !noalias !45
  unreachable

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %47, i64 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 8, !noalias !45
  store i32 %74, i32* %56, align 8, !alias.scope !45
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %47, i64 0, i32 0, i32 1
  br label %76

76:                                               ; preds = %72, %61
  %77 = phi %"class.gl::ProgramPipeline"** [ %65, %61 ], [ %75, %72 ]
  %78 = bitcast %"class.gl::ProgramPipeline"** %77 to i64*
  %79 = load i64, i64* %78, align 8, !noalias !45
  %80 = bitcast %"class.gl::ProgramPipeline"** %57 to i64*
  store i64 %79, i64* %80, align 8, !alias.scope !45
  br label %81

81:                                               ; preds = %76, %66
  br label %82

82:                                               ; preds = %81, %138
  %83 = phi i32 [ %140, %138 ], [ %23, %81 ]
  %84 = icmp eq i32 %83, %59
  br i1 %84, label %85, label %121

85:                                               ; preds = %82
  %86 = load i8*, i8** %54, align 8
  %87 = icmp eq i8* %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %85
  %89 = load i8, i8* %86, align 1
  %90 = icmp sgt i8 %89, -1
  br i1 %90, label %121, label %91, !prof !3

91:                                               ; preds = %88
  call void @llvm.trap() #11
  unreachable

92:                                               ; preds = %85
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #11
  %93 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 1
  %94 = bitcast %"class.gl::ProgramPipeline"*** %93 to i8**
  %95 = load i8*, i8** %94, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 -1, i64 256, i1 false) #11
  store i64 32, i64* %7, align 8
  %96 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  %97 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %98 = load i64, i64* %97, align 8
  %99 = icmp ugt i64 %98, 127
  br i1 %99, label %100, label %104

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %96, i64 0, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %101, align 8
  %103 = bitcast %"union.absl::container_internal::map_slot_type.347"** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 32, i1 false) #11
  br label %120

104:                                              ; preds = %92
  %105 = icmp eq i64 %98, 0
  br i1 %105, label %120, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  store i64 0, i64* %107, align 8
  %108 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %96, i64 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = add nuw nsw i64 %98, 16
  call void @llvm.memset.p0i8.i64(i8* align 1 %109, i8 -128, i64 %110, i1 false) #11
  %111 = load i8*, i8** %108, align 8
  %112 = load i64, i64* %97, align 8
  %113 = getelementptr inbounds i8, i8* %111, i64 %112
  store i8 -1, i8* %113, align 1
  %114 = load i64, i64* %97, align 8
  %115 = lshr i64 %114, 3
  %116 = sub i64 %114, %115
  %117 = load i64, i64* %107, align 8
  %118 = sub i64 %116, %117
  %119 = getelementptr inbounds %"class.gl::TypedResourceManager.325", %"class.gl::TypedResourceManager.325"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %118, i64* %119, align 8
  br label %120

120:                                              ; preds = %100, %104, %106
  ret void

121:                                              ; preds = %88, %82
  %122 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %57, align 8
  %123 = icmp eq %"class.gl::ProgramPipeline"* %122, null
  br i1 %123, label %138, label %124

124:                                              ; preds = %121
  %125 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %122, i64 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %122, i64 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = add i64 %127, -1
  store i64 %128, i64* %126, align 8
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %138

130:                                              ; preds = %124
  %131 = bitcast %"class.gl::ProgramPipeline"* %122 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %132 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %131, align 8
  %133 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %132, align 8
  call void %133(%"class.angle::RefCountObject"* %125, %"class.gl::Context"* %1) #11
  %134 = bitcast %"class.gl::ProgramPipeline"* %122 to void (%"class.angle::RefCountObject"*)***
  %135 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %135, i64 2
  %137 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %136, align 8
  call void %137(%"class.angle::RefCountObject"* nonnull %125) #11
  br label %138

138:                                              ; preds = %130, %124, %121
  %139 = call dereferenceable(56) %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* @_ZN2gl11ResourceMapINS_15ProgramPipelineENS_17ProgramPipelineIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* nonnull %3)
  %140 = load i32, i32* %53, align 8
  br label %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* @_ZN2gl11ResourceMapINS_15ProgramPipelineENS_17ProgramPipelineIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0, i64 0, i32 0
  %5 = load %"class.gl::ResourceMap.326"*, %"class.gl::ResourceMap.326"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = icmp ult i32 %3, %8
  br i1 %9, label %10, label %35

10:                                               ; preds = %1
  %11 = add nuw i32 %3, 1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0, i64 0, i32 5
  %14 = load i8, i8* %13, align 8, !range !11
  %15 = icmp ne i8 %14, 0
  %16 = icmp ugt i64 %7, %12
  br i1 %16, label %17, label %33

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %5, i64 0, i32 1
  %19 = load %"class.gl::ProgramPipeline"**, %"class.gl::ProgramPipeline"*** %18, align 8
  br label %20

20:                                               ; preds = %30, %17
  %21 = phi i64 [ %12, %17 ], [ %31, %30 ]
  %22 = getelementptr inbounds %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %19, i64 %21
  %23 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %22, align 8
  %24 = icmp eq %"class.gl::ProgramPipeline"* %23, null
  %25 = and i1 %15, %24
  %26 = icmp eq %"class.gl::ProgramPipeline"* %23, inttoptr (i64 -1 to %"class.gl::ProgramPipeline"*)
  %27 = or i1 %26, %25
  br i1 %27, label %30, label %28

28:                                               ; preds = %20
  %29 = trunc i64 %21 to i32
  br label %33

30:                                               ; preds = %20
  %31 = add i64 %21, 1
  %32 = icmp eq i64 %31, %7
  br i1 %32, label %33, label %20

33:                                               ; preds = %30, %28, %10
  %34 = phi i32 [ %8, %10 ], [ %29, %28 ], [ %8, %30 ]
  store i32 %34, i32* %2, align 8
  br label %69

35:                                               ; preds = %1
  %36 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %39 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %38, align 8
  %40 = icmp eq i8* %37, null
  br i1 %40, label %44, label %41, !prof !4

41:                                               ; preds = %35
  %42 = load i8, i8* %37, align 1
  %43 = icmp sgt i8 %42, -1
  br i1 %43, label %45, label %44, !prof !3

44:                                               ; preds = %41, %35
  tail call void @llvm.trap() #11
  unreachable

45:                                               ; preds = %41
  %46 = getelementptr inbounds i8, i8* %37, i64 1
  store i8* %46, i8** %36, align 8
  %47 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %39, i64 1
  store %"union.absl::container_internal::map_slot_type.347"* %47, %"union.absl::container_internal::map_slot_type.347"** %38, align 8
  %48 = load i8, i8* %46, align 1
  %49 = icmp slt i8 %48, -1
  br i1 %49, label %50, label %65

50:                                               ; preds = %45, %50
  %51 = phi %"union.absl::container_internal::map_slot_type.347"* [ %62, %50 ], [ %47, %45 ]
  %52 = phi i8* [ %61, %50 ], [ %46, %45 ]
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1
  %55 = icmp slt <16 x i8> %54, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %56 = bitcast <16 x i1> %55 to i16
  %57 = zext i16 %56 to i32
  %58 = add nuw nsw i32 %57, 1
  %59 = tail call i32 @llvm.cttz.i32(i32 %58, i1 true) #11, !range !2
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %52, i64 %60
  store i8* %61, i8** %36, align 8
  %62 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %51, i64 %60
  store %"union.absl::container_internal::map_slot_type.347"* %62, %"union.absl::container_internal::map_slot_type.347"** %38, align 8
  %63 = load i8, i8* %61, align 1
  %64 = icmp slt i8 %63, -1
  br i1 %64, label %50, label %65

65:                                               ; preds = %50, %45
  %66 = phi i8 [ %48, %45 ], [ %63, %50 ]
  %67 = icmp eq i8 %66, -1
  br i1 %67, label %68, label %69, !prof !4

68:                                               ; preds = %65
  store i8* null, i8** %36, align 8
  br label %69

69:                                               ; preds = %68, %65, %33
  %70 = phi i32 [ %3, %68 ], [ %3, %65 ], [ %34, %33 ]
  %71 = load i64, i64* %6, align 8
  %72 = trunc i64 %71 to i32
  %73 = icmp ult i32 %70, %72
  br i1 %73, label %74, label %80

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 %70, i32* %75, align 8
  %76 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %5, i64 0, i32 1
  %77 = load %"class.gl::ProgramPipeline"**, %"class.gl::ProgramPipeline"*** %76, align 8
  %78 = zext i32 %70 to i64
  %79 = getelementptr inbounds %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %77, i64 %78
  br label %99

80:                                               ; preds = %69
  %81 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %105, label %84

84:                                               ; preds = %80
  %85 = load i8, i8* %82, align 1
  %86 = icmp sgt i8 %85, -1
  br i1 %86, label %88, label %87, !prof !3

87:                                               ; preds = %84
  tail call void @llvm.trap() #11
  unreachable

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %90 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %89, align 8
  %91 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %90, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0, i64 0, i32 4, i32 0
  store i32 %92, i32* %93, align 8
  %94 = load i8, i8* %82, align 1
  %95 = icmp sgt i8 %94, -1
  br i1 %95, label %97, label %96, !prof !3

96:                                               ; preds = %88
  tail call void @llvm.trap() #11
  unreachable

97:                                               ; preds = %88
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %90, i64 0, i32 0, i32 1
  br label %99

99:                                               ; preds = %97, %74
  %100 = phi %"class.gl::ProgramPipeline"** [ %79, %74 ], [ %98, %97 ]
  %101 = bitcast %"class.gl::ProgramPipeline"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator", %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0, i64 0, i32 4, i32 1
  %104 = bitcast %"class.gl::ProgramPipeline"** %103 to i64*
  store i64 %102, i64* %104, align 8
  br label %105

105:                                              ; preds = %99, %80
  ret %"class.gl::ResourceMap<gl::ProgramPipeline, gl::ProgramPipelineID>::Iterator"* %0
}

declare void @_ZN2gl15HandleAllocatorC1Ev(%"class.gl::HandleAllocator"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"*) unnamed_addr #7

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2gl19ResourceManagerBaseD0Ev(%"class.gl::ResourceManagerBase"* nocapture readnone) unnamed_addr #8 align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl19ResourceManagerBase6addRefEv(%"class.gl::ResourceManagerBase"* nocapture) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gl::ResourceManagerBase", %"class.gl::ResourceManagerBase"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 1
  store i64 %4, i64* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19ResourceManagerBase7releaseEPKNS_7ContextE(%"class.gl::ResourceManagerBase"*, %"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::ResourceManagerBase", %"class.gl::ResourceManagerBase"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, -1
  store i64 %5, i64* %3, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %17

7:                                                ; preds = %2
  %8 = bitcast %"class.gl::ResourceManagerBase"* %0 to void (%"class.gl::ResourceManagerBase"*, %"class.gl::Context"*)***
  %9 = load void (%"class.gl::ResourceManagerBase"*, %"class.gl::Context"*)**, void (%"class.gl::ResourceManagerBase"*, %"class.gl::Context"*)*** %8, align 8
  %10 = load void (%"class.gl::ResourceManagerBase"*, %"class.gl::Context"*)*, void (%"class.gl::ResourceManagerBase"*, %"class.gl::Context"*)** %9, align 8
  tail call void %10(%"class.gl::ResourceManagerBase"* %0, %"class.gl::Context"* %1) #11
  %11 = icmp eq %"class.gl::ResourceManagerBase"* %0, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.gl::ResourceManagerBase"* %0 to void (%"class.gl::ResourceManagerBase"*)***
  %14 = load void (%"class.gl::ResourceManagerBase"*)**, void (%"class.gl::ResourceManagerBase"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.gl::ResourceManagerBase"*)*, void (%"class.gl::ResourceManagerBase"*)** %14, i64 2
  %16 = load void (%"class.gl::ResourceManagerBase"*)*, void (%"class.gl::ResourceManagerBase"*)** %15, align 8
  tail call void %16(%"class.gl::ResourceManagerBase"* nonnull %0) #11
  br label %17

17:                                               ; preds = %7, %12, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13BufferManagerD2Ev(%"class.gl::BufferManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %0, i64 0, i32 0, i32 1, i32 1
  %4 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %3, align 8
  %5 = icmp eq %"class.gl::Buffer"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Buffer"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %0, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13BufferManagerD0Ev(%"class.gl::BufferManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_6BufferENS_13BufferManagerENS_8BufferIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %0, i64 0, i32 0, i32 1, i32 1
  %4 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %3, align 8
  %5 = icmp eq %"class.gl::Buffer"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Buffer"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %0, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  %19 = bitcast %"class.gl::BufferManager"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.gl::Buffer"* @_ZN2gl13BufferManager17AllocateNewObjectEPN2rx13GLImplFactoryENS_8BufferIDE(%"class.rx::GLImplFactory"*, i32) local_unnamed_addr #1 align 2 {
  %3 = tail call i8* @_Znwm(i64 312) #14
  %4 = bitcast i8* %3 to %"class.gl::Buffer"*
  tail call void @_ZN2gl6BufferC1EPN2rx13GLImplFactoryENS_8BufferIDE(%"class.gl::Buffer"* nonnull %4, %"class.rx::GLImplFactory"* %0, i32 %1) #11
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  store i64 %8, i64* %6, align 8
  ret %"class.gl::Buffer"* %4
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN2gl6BufferC1EPN2rx13GLImplFactoryENS_8BufferIDE(%"class.gl::Buffer"*, %"class.rx::GLImplFactory"*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl13BufferManager12createBufferEv(%"class.gl::BufferManager"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %0, i64 0, i32 0, i32 1
  %4 = tail call i32 @_ZN2gl15HandleAllocator8allocateEv(%"class.gl::HandleAllocator"* %2) #11
  tail call void @_ZN2gl11ResourceMapINS_6BufferENS_8BufferIDEE6assignES2_PS1_(%"class.gl::ResourceMap"* %3, i32 %4, %"class.gl::Buffer"* null) #11
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Buffer"* @_ZNK2gl13BufferManager9getBufferENS_8BufferIDE(%"class.gl::BufferManager"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %0, i64 0, i32 0, i32 1, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %0, i64 0, i32 0, i32 1, i32 1
  %9 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %8, align 8
  %10 = getelementptr inbounds %"class.gl::Buffer"*, %"class.gl::Buffer"** %9, i64 %3
  %11 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %10, align 8
  %12 = icmp eq %"class.gl::Buffer"* %11, inttoptr (i64 -1 to %"class.gl::Buffer"*)
  %13 = select i1 %12, %"class.gl::Buffer"* null, %"class.gl::Buffer"* %11
  br label %77

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %16 = add i64 %15, %3
  %17 = zext i64 %16 to i128
  %18 = mul nuw i128 %17, 11376068507788127593
  %19 = lshr i128 %18, 64
  %20 = xor i128 %19, %18
  %21 = trunc i128 %20 to i64
  %22 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = lshr i64 %21, 7
  %27 = ptrtoint i8* %23 to i64
  %28 = lshr i64 %27, 12
  %29 = xor i64 %26, %28
  %30 = trunc i128 %20 to i8
  %31 = and i8 %30, 127
  %32 = insertelement <16 x i8> undef, i8 %31, i32 0
  %33 = shufflevector <16 x i8> %32, <16 x i8> undef, <16 x i32> zeroinitializer
  %34 = getelementptr inbounds %"class.gl::BufferManager", %"class.gl::BufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %35

35:                                               ; preds = %65, %14
  %36 = phi i64 [ %29, %14 ], [ %67, %65 ]
  %37 = phi i64 [ 0, %14 ], [ %66, %65 ]
  %38 = and i64 %36, %25
  %39 = getelementptr inbounds i8, i8* %23, i64 %38
  %40 = bitcast i8* %39 to <16 x i8>*
  %41 = load <16 x i8>, <16 x i8>* %40, align 1
  %42 = icmp eq <16 x i8> %33, %41
  %43 = bitcast <16 x i1> %42 to i16
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %35
  %46 = zext i16 %43 to i32
  %47 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %34, align 8
  br label %48

48:                                               ; preds = %57, %45
  %49 = phi i32 [ %46, %45 ], [ %59, %57 ]
  %50 = tail call i32 @llvm.cttz.i32(i32 %49, i1 false) #11, !range !2
  %51 = zext i32 %50 to i64
  %52 = add i64 %38, %51
  %53 = and i64 %52, %25
  %54 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %47, i64 %53, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %1
  br i1 %56, label %68, label %57, !prof !3

57:                                               ; preds = %48
  %58 = add i32 %49, -1
  %59 = and i32 %58, %49
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %48

61:                                               ; preds = %57, %35
  %62 = icmp eq <16 x i8> %41, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %63 = bitcast <16 x i1> %62 to i16
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %65, label %77, !prof !4

65:                                               ; preds = %61
  %66 = add i64 %37, 16
  %67 = add i64 %66, %38
  br label %35

68:                                               ; preds = %48
  %69 = getelementptr inbounds i8, i8* %23, i64 %53
  %70 = icmp ne i8* %69, null
  tail call void @llvm.assume(i1 %70) #11
  %71 = load i8, i8* %69, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %74, label %73, !prof !3

73:                                               ; preds = %68
  tail call void @llvm.trap() #11
  unreachable

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %47, i64 %53, i32 0, i32 1
  %76 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %75, align 8
  br label %77

77:                                               ; preds = %61, %7, %74
  %78 = phi %"class.gl::Buffer"* [ %13, %7 ], [ %76, %74 ], [ null, %61 ]
  ret %"class.gl::Buffer"* %78
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl20ShaderProgramManagerC2Ev(%"class.gl::ShaderProgramManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorC1Ev(%"class.gl::HandleAllocator"* %3) #11
  %4 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20ShaderProgramManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = bitcast i64* %4 to <2 x i64>*
  store <2 x i64> <i64 1, i64 32>, <2 x i64>* %5, align 8
  %6 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 1, i32 1
  %7 = tail call i8* @_Znam(i64 256) #14
  %8 = bitcast %"class.gl::Shader"*** %6 to i8**
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %11 = bitcast %"union.absl::container_internal::map_slot_type.116"** %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -1, i64 256, i1 false) #11
  %12 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 2, i32 0
  store i64 32, i64* %12, align 8
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 2, i32 1
  %14 = tail call i8* @_Znam(i64 256) #14
  %15 = bitcast %"class.gl::Program"*** %13 to i8**
  store i8* %14, i8** %15, align 8
  %16 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %16, align 8
  %17 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  %18 = bitcast %"union.absl::container_internal::map_slot_type.244"** %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 32, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -1, i64 256, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl20ShaderProgramManagerD2Ev(%"class.gl::ShaderProgramManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20ShaderProgramManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 2, i32 1
  %4 = load %"class.gl::Program"**, %"class.gl::Program"*** %3, align 8
  %5 = icmp eq %"class.gl::Program"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Program"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.244"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  %18 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 1, i32 1
  %19 = load %"class.gl::Shader"**, %"class.gl::Shader"*** %18, align 8
  %20 = icmp eq %"class.gl::Shader"** %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.gl::Shader"** %19 to i8*
  tail call void @_ZdaPv(i8* %22) #14
  br label %23

23:                                               ; preds = %21, %17
  %24 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %29, align 8
  %31 = bitcast %"union.absl::container_internal::map_slot_type.116"** %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 32, i1 false) #11
  br label %32

32:                                               ; preds = %23, %27
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %33 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %33) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl20ShaderProgramManagerD0Ev(%"class.gl::ShaderProgramManager"*) unnamed_addr #1 align 2 {
  tail call void @_ZN2gl20ShaderProgramManagerD2Ev(%"class.gl::ShaderProgramManager"* %0) #11
  %2 = bitcast %"class.gl::ShaderProgramManager"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl20ShaderProgramManager5resetEPKNS_7ContextE(%"class.gl::ShaderProgramManager"*, %"class.gl::Context"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.gl::ResourceMap.122", %"class.gl::ResourceMap.122"* %3, i64 0, i32 0
  %5 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 2, i32 1
  %6 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %8

8:                                                ; preds = %107, %2
  %9 = load i64, i64* %4, align 8, !noalias !48
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %8
  %12 = load %"class.gl::Program"**, %"class.gl::Program"*** %5, align 8, !noalias !48
  br label %13

13:                                               ; preds = %18, %11
  %14 = phi i64 [ 0, %11 ], [ %19, %18 ]
  %15 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %12, i64 %14
  %16 = bitcast %"class.gl::Program"** %15 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !48
  switch i64 %17, label %21 [
    i64 -1, label %18
    i64 0, label %18
  ]

18:                                               ; preds = %13, %13
  %19 = add nuw i64 %14, 1
  %20 = icmp eq i64 %19, %9
  br i1 %20, label %21, label %13

21:                                               ; preds = %18, %13, %8
  %22 = phi i64 [ 0, %8 ], [ %14, %13 ], [ %9, %18 ]
  %23 = trunc i64 %22 to i32
  %24 = load i8*, i8** %6, align 8, !noalias !48, !nonnull !51
  %25 = load i8, i8* %24, align 1, !noalias !48
  %26 = icmp slt i8 %25, -1
  br i1 %26, label %27, label %40

27:                                               ; preds = %21, %27
  %28 = phi i8* [ %37, %27 ], [ %24, %21 ]
  %29 = bitcast i8* %28 to <16 x i8>*
  %30 = load <16 x i8>, <16 x i8>* %29, align 1, !noalias !48
  %31 = icmp slt <16 x i8> %30, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %32 = bitcast <16 x i1> %31 to i16
  %33 = zext i16 %32 to i32
  %34 = add nuw nsw i32 %33, 1
  %35 = tail call i32 @llvm.cttz.i32(i32 %34, i1 true) #11, !range !2
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %28, i64 %36
  %38 = load i8, i8* %37, align 1, !noalias !48
  %39 = icmp slt i8 %38, -1
  br i1 %39, label %27, label %40

40:                                               ; preds = %27, %21
  %41 = phi i8* [ %24, %21 ], [ %37, %27 ]
  %42 = phi i8 [ %25, %21 ], [ %38, %27 ]
  %43 = icmp eq i8 %42, -1
  %44 = select i1 %43, i8* null, i8* %41, !prof !4
  %45 = trunc i64 %9 to i32
  %46 = icmp ugt i32 %45, %23
  %47 = icmp eq i8* %44, null
  %48 = or i1 %46, %47
  br i1 %48, label %53, label %49

49:                                               ; preds = %40
  %50 = load i8, i8* %44, align 1, !noalias !48
  %51 = icmp sgt i8 %50, -1
  br i1 %51, label %53, label %52, !prof !3

52:                                               ; preds = %49
  tail call void @llvm.trap() #11, !noalias !48
  unreachable

53:                                               ; preds = %49, %40
  %54 = icmp ne i32 %23, %45
  %55 = or i1 %54, %47
  br i1 %55, label %60, label %56

56:                                               ; preds = %53
  %57 = load i8, i8* %44, align 1
  %58 = icmp sgt i8 %57, -1
  br i1 %58, label %61, label %59, !prof !3

59:                                               ; preds = %56
  tail call void @llvm.trap() #11
  unreachable

60:                                               ; preds = %53
  br i1 %54, label %61, label %109

61:                                               ; preds = %60, %56
  br i1 %10, label %72, label %62

62:                                               ; preds = %61
  %63 = load %"class.gl::Program"**, %"class.gl::Program"*** %5, align 8, !noalias !52
  br label %64

64:                                               ; preds = %69, %62
  %65 = phi i64 [ 0, %62 ], [ %70, %69 ]
  %66 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %63, i64 %65
  %67 = bitcast %"class.gl::Program"** %66 to i64*
  %68 = load i64, i64* %67, align 8, !noalias !52
  switch i64 %68, label %72 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %64, %64
  %70 = add nuw i64 %65, 1
  %71 = icmp eq i64 %70, %9
  br i1 %71, label %72, label %64

72:                                               ; preds = %69, %64, %61
  %73 = phi i64 [ 0, %61 ], [ %9, %69 ], [ %65, %64 ]
  %74 = trunc i64 %73 to i32
  %75 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %7, align 8, !noalias !52
  br i1 %26, label %76, label %91

76:                                               ; preds = %72, %76
  %77 = phi %"union.absl::container_internal::map_slot_type.244"* [ %88, %76 ], [ %75, %72 ]
  %78 = phi i8* [ %87, %76 ], [ %24, %72 ]
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1, !noalias !52
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = zext i16 %82 to i32
  %84 = add nuw nsw i32 %83, 1
  %85 = tail call i32 @llvm.cttz.i32(i32 %84, i1 true) #11, !range !2
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds i8, i8* %78, i64 %86
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %77, i64 %86
  %89 = load i8, i8* %87, align 1, !noalias !52
  %90 = icmp slt i8 %89, -1
  br i1 %90, label %76, label %91

91:                                               ; preds = %76, %72
  %92 = phi %"union.absl::container_internal::map_slot_type.244"* [ %75, %72 ], [ %88, %76 ]
  %93 = phi i8* [ %24, %72 ], [ %87, %76 ]
  %94 = phi i8 [ %25, %72 ], [ %89, %76 ]
  %95 = icmp eq i8 %94, -1
  %96 = select i1 %95, i8* null, i8* %93, !prof !4
  %97 = icmp ugt i32 %45, %74
  br i1 %97, label %107, label %98

98:                                               ; preds = %91
  %99 = icmp eq i8* %96, null
  br i1 %99, label %107, label %100

100:                                              ; preds = %98
  %101 = load i8, i8* %96, align 1, !noalias !52
  %102 = icmp sgt i8 %101, -1
  br i1 %102, label %104, label %103, !prof !3

103:                                              ; preds = %100
  tail call void @llvm.trap() #11, !noalias !52
  unreachable

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %92, i64 0, i32 0, i32 0
  %106 = load i32, i32* %105, align 8, !noalias !52
  br label %107

107:                                              ; preds = %91, %98, %104
  %108 = phi i32 [ 0, %98 ], [ %106, %104 ], [ %74, %91 ]
  tail call void @_ZN2gl20ShaderProgramManager12deleteObjectINS_7ProgramENS_15ShaderProgramIDEEEvPKNS_7ContextEPNS_11ResourceMapIT_T0_EES9_(%"class.gl::ShaderProgramManager"* %0, %"class.gl::Context"* %1, %"class.gl::ResourceMap.122"* %3, i32 %108) #11
  br label %8

109:                                              ; preds = %60
  %110 = bitcast %"class.gl::Program"*** %5 to i8**
  %111 = load i8*, i8** %110, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 -1, i64 256, i1 false) #11
  store i64 32, i64* %4, align 8
  %112 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  %113 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %114 = load i64, i64* %113, align 8
  %115 = icmp ugt i64 %114, 127
  br i1 %115, label %116, label %120

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.243", %"class.absl::container_internal::raw_hash_set.243"* %112, i64 0, i32 0
  %118 = load i8*, i8** %117, align 8
  tail call void @_ZdlPv(i8* %118) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %117, align 8
  %119 = bitcast %"union.absl::container_internal::map_slot_type.244"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 32, i1 false) #11
  br label %136

120:                                              ; preds = %109
  %121 = icmp eq i64 %114, 0
  br i1 %121, label %136, label %122

122:                                              ; preds = %120
  %123 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 2
  store i64 0, i64* %123, align 8
  %124 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.243", %"class.absl::container_internal::raw_hash_set.243"* %112, i64 0, i32 0
  %125 = load i8*, i8** %124, align 8
  %126 = add nuw nsw i64 %114, 16
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %125, i8 -128, i64 %126, i1 false) #11
  %127 = load i8*, i8** %124, align 8
  %128 = load i64, i64* %113, align 8
  %129 = getelementptr inbounds i8, i8* %127, i64 %128
  store i8 -1, i8* %129, align 1
  %130 = load i64, i64* %113, align 8
  %131 = lshr i64 %130, 3
  %132 = sub i64 %130, %131
  %133 = load i64, i64* %123, align 8
  %134 = sub i64 %132, %133
  %135 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %134, i64* %135, align 8
  br label %136

136:                                              ; preds = %116, %120, %122
  %137 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 1
  %138 = getelementptr inbounds %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.69"* %137, i64 0, i32 0
  %139 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 1, i32 1
  %140 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %141 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %142

142:                                              ; preds = %241, %136
  %143 = load i64, i64* %138, align 8, !noalias !55
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %155, label %145

145:                                              ; preds = %142
  %146 = load %"class.gl::Shader"**, %"class.gl::Shader"*** %139, align 8, !noalias !55
  br label %147

147:                                              ; preds = %152, %145
  %148 = phi i64 [ 0, %145 ], [ %153, %152 ]
  %149 = getelementptr inbounds %"class.gl::Shader"*, %"class.gl::Shader"** %146, i64 %148
  %150 = bitcast %"class.gl::Shader"** %149 to i64*
  %151 = load i64, i64* %150, align 8, !noalias !55
  switch i64 %151, label %155 [
    i64 -1, label %152
    i64 0, label %152
  ]

152:                                              ; preds = %147, %147
  %153 = add nuw i64 %148, 1
  %154 = icmp eq i64 %153, %143
  br i1 %154, label %155, label %147

155:                                              ; preds = %152, %147, %142
  %156 = phi i64 [ 0, %142 ], [ %148, %147 ], [ %143, %152 ]
  %157 = trunc i64 %156 to i32
  %158 = load i8*, i8** %140, align 8, !noalias !55, !nonnull !51
  %159 = load i8, i8* %158, align 1, !noalias !55
  %160 = icmp slt i8 %159, -1
  br i1 %160, label %161, label %174

161:                                              ; preds = %155, %161
  %162 = phi i8* [ %171, %161 ], [ %158, %155 ]
  %163 = bitcast i8* %162 to <16 x i8>*
  %164 = load <16 x i8>, <16 x i8>* %163, align 1, !noalias !55
  %165 = icmp slt <16 x i8> %164, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %166 = bitcast <16 x i1> %165 to i16
  %167 = zext i16 %166 to i32
  %168 = add nuw nsw i32 %167, 1
  %169 = tail call i32 @llvm.cttz.i32(i32 %168, i1 true) #11, !range !2
  %170 = zext i32 %169 to i64
  %171 = getelementptr inbounds i8, i8* %162, i64 %170
  %172 = load i8, i8* %171, align 1, !noalias !55
  %173 = icmp slt i8 %172, -1
  br i1 %173, label %161, label %174

174:                                              ; preds = %161, %155
  %175 = phi i8* [ %158, %155 ], [ %171, %161 ]
  %176 = phi i8 [ %159, %155 ], [ %172, %161 ]
  %177 = icmp eq i8 %176, -1
  %178 = select i1 %177, i8* null, i8* %175, !prof !4
  %179 = trunc i64 %143 to i32
  %180 = icmp ugt i32 %179, %157
  %181 = icmp eq i8* %178, null
  %182 = or i1 %180, %181
  br i1 %182, label %187, label %183

183:                                              ; preds = %174
  %184 = load i8, i8* %178, align 1, !noalias !55
  %185 = icmp sgt i8 %184, -1
  br i1 %185, label %187, label %186, !prof !3

186:                                              ; preds = %183
  tail call void @llvm.trap() #11, !noalias !55
  unreachable

187:                                              ; preds = %183, %174
  %188 = icmp ne i32 %157, %179
  %189 = or i1 %188, %181
  br i1 %189, label %194, label %190

190:                                              ; preds = %187
  %191 = load i8, i8* %178, align 1
  %192 = icmp sgt i8 %191, -1
  br i1 %192, label %195, label %193, !prof !3

193:                                              ; preds = %190
  tail call void @llvm.trap() #11
  unreachable

194:                                              ; preds = %187
  br i1 %188, label %195, label %243

195:                                              ; preds = %194, %190
  br i1 %144, label %206, label %196

196:                                              ; preds = %195
  %197 = load %"class.gl::Shader"**, %"class.gl::Shader"*** %139, align 8, !noalias !58
  br label %198

198:                                              ; preds = %203, %196
  %199 = phi i64 [ 0, %196 ], [ %204, %203 ]
  %200 = getelementptr inbounds %"class.gl::Shader"*, %"class.gl::Shader"** %197, i64 %199
  %201 = bitcast %"class.gl::Shader"** %200 to i64*
  %202 = load i64, i64* %201, align 8, !noalias !58
  switch i64 %202, label %206 [
    i64 -1, label %203
    i64 0, label %203
  ]

203:                                              ; preds = %198, %198
  %204 = add nuw i64 %199, 1
  %205 = icmp eq i64 %204, %143
  br i1 %205, label %206, label %198

206:                                              ; preds = %203, %198, %195
  %207 = phi i64 [ 0, %195 ], [ %143, %203 ], [ %199, %198 ]
  %208 = trunc i64 %207 to i32
  %209 = load %"union.absl::container_internal::map_slot_type.116"*, %"union.absl::container_internal::map_slot_type.116"** %141, align 8, !noalias !58
  br i1 %160, label %210, label %225

210:                                              ; preds = %206, %210
  %211 = phi %"union.absl::container_internal::map_slot_type.116"* [ %222, %210 ], [ %209, %206 ]
  %212 = phi i8* [ %221, %210 ], [ %158, %206 ]
  %213 = bitcast i8* %212 to <16 x i8>*
  %214 = load <16 x i8>, <16 x i8>* %213, align 1, !noalias !58
  %215 = icmp slt <16 x i8> %214, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %216 = bitcast <16 x i1> %215 to i16
  %217 = zext i16 %216 to i32
  %218 = add nuw nsw i32 %217, 1
  %219 = tail call i32 @llvm.cttz.i32(i32 %218, i1 true) #11, !range !2
  %220 = zext i32 %219 to i64
  %221 = getelementptr inbounds i8, i8* %212, i64 %220
  %222 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.116", %"union.absl::container_internal::map_slot_type.116"* %211, i64 %220
  %223 = load i8, i8* %221, align 1, !noalias !58
  %224 = icmp slt i8 %223, -1
  br i1 %224, label %210, label %225

225:                                              ; preds = %210, %206
  %226 = phi %"union.absl::container_internal::map_slot_type.116"* [ %209, %206 ], [ %222, %210 ]
  %227 = phi i8* [ %158, %206 ], [ %221, %210 ]
  %228 = phi i8 [ %159, %206 ], [ %223, %210 ]
  %229 = icmp eq i8 %228, -1
  %230 = select i1 %229, i8* null, i8* %227, !prof !4
  %231 = icmp ugt i32 %179, %208
  br i1 %231, label %241, label %232

232:                                              ; preds = %225
  %233 = icmp eq i8* %230, null
  br i1 %233, label %241, label %234

234:                                              ; preds = %232
  %235 = load i8, i8* %230, align 1, !noalias !58
  %236 = icmp sgt i8 %235, -1
  br i1 %236, label %238, label %237, !prof !3

237:                                              ; preds = %234
  tail call void @llvm.trap() #11, !noalias !58
  unreachable

238:                                              ; preds = %234
  %239 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.116", %"union.absl::container_internal::map_slot_type.116"* %226, i64 0, i32 0, i32 0
  %240 = load i32, i32* %239, align 8, !noalias !58
  br label %241

241:                                              ; preds = %225, %232, %238
  %242 = phi i32 [ 0, %232 ], [ %240, %238 ], [ %208, %225 ]
  tail call void @_ZN2gl20ShaderProgramManager12deleteObjectINS_6ShaderENS_15ShaderProgramIDEEEvPKNS_7ContextEPNS_11ResourceMapIT_T0_EES9_(%"class.gl::ShaderProgramManager"* %0, %"class.gl::Context"* %1, %"class.gl::ResourceMap.69"* %137, i32 %242) #11
  br label %142

243:                                              ; preds = %194
  %244 = bitcast %"class.gl::Shader"*** %139 to i8**
  %245 = load i8*, i8** %244, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %245, i8 -1, i64 256, i1 false) #11
  store i64 32, i64* %138, align 8
  %246 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  %247 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %248 = load i64, i64* %247, align 8
  %249 = icmp ugt i64 %248, 127
  br i1 %249, label %250, label %254

250:                                              ; preds = %243
  %251 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.115", %"class.absl::container_internal::raw_hash_set.115"* %246, i64 0, i32 0
  %252 = load i8*, i8** %251, align 8
  tail call void @_ZdlPv(i8* %252) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %251, align 8
  %253 = bitcast %"union.absl::container_internal::map_slot_type.116"** %141 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %253, i8 0, i64 32, i1 false) #11
  br label %270

254:                                              ; preds = %243
  %255 = icmp eq i64 %248, 0
  br i1 %255, label %270, label %256

256:                                              ; preds = %254
  %257 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  store i64 0, i64* %257, align 8
  %258 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.115", %"class.absl::container_internal::raw_hash_set.115"* %246, i64 0, i32 0
  %259 = load i8*, i8** %258, align 8
  %260 = add nuw nsw i64 %248, 16
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %259, i8 -128, i64 %260, i1 false) #11
  %261 = load i8*, i8** %258, align 8
  %262 = load i64, i64* %247, align 8
  %263 = getelementptr inbounds i8, i8* %261, i64 %262
  store i8 -1, i8* %263, align 1
  %264 = load i64, i64* %247, align 8
  %265 = lshr i64 %264, 3
  %266 = sub i64 %264, %265
  %267 = load i64, i64* %257, align 8
  %268 = sub i64 %266, %267
  %269 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %268, i64* %269, align 8
  br label %270

270:                                              ; preds = %250, %254, %256
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl20ShaderProgramManager13deleteProgramEPKNS_7ContextENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"*, %"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 2
  tail call void @_ZN2gl20ShaderProgramManager12deleteObjectINS_7ProgramENS_15ShaderProgramIDEEEvPKNS_7ContextEPNS_11ResourceMapIT_T0_EES9_(%"class.gl::ShaderProgramManager"* %0, %"class.gl::Context"* %1, %"class.gl::ResourceMap.122"* %4, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl20ShaderProgramManager12deleteShaderEPKNS_7ContextENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"*, %"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 1
  tail call void @_ZN2gl20ShaderProgramManager12deleteObjectINS_6ShaderENS_15ShaderProgramIDEEEvPKNS_7ContextEPNS_11ResourceMapIT_T0_EES9_(%"class.gl::ShaderProgramManager"* %0, %"class.gl::Context"* %1, %"class.gl::ResourceMap.69"* %4, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl20ShaderProgramManager12createShaderEPN2rx13GLImplFactoryERKNS_11LimitationsENS_10ShaderTypeE(%"class.gl::ShaderProgramManager"*, %"class.rx::GLImplFactory"*, %"struct.gl::Limitations"* dereferenceable(12), i8 zeroext) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 0, i32 1
  %6 = tail call i32 @_ZN2gl15HandleAllocator8allocateEv(%"class.gl::HandleAllocator"* %5) #11
  %7 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 1
  %8 = tail call i8* @_Znwm(i64 504) #14
  %9 = bitcast i8* %8 to %"class.gl::Shader"*
  tail call void @_ZN2gl6ShaderC1EPNS_20ShaderProgramManagerEPN2rx13GLImplFactoryERKNS_11LimitationsENS_10ShaderTypeENS_15ShaderProgramIDE(%"class.gl::Shader"* nonnull %9, %"class.gl::ShaderProgramManager"* %0, %"class.rx::GLImplFactory"* %1, %"struct.gl::Limitations"* dereferenceable(12) %2, i8 zeroext %3, i32 %6) #11
  tail call void @_ZN2gl11ResourceMapINS_6ShaderENS_15ShaderProgramIDEE6assignES2_PS1_(%"class.gl::ResourceMap.69"* %7, i32 %6, %"class.gl::Shader"* nonnull %9)
  ret i32 %6
}

declare i32 @_ZN2gl15HandleAllocator8allocateEv(%"class.gl::HandleAllocator"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl11ResourceMapINS_6ShaderENS_15ShaderProgramIDEE6assignES2_PS1_(%"class.gl::ResourceMap.69"*, i32, %"class.gl::Shader"*) local_unnamed_addr #3 comdat align 2 {
  %4 = icmp ult i32 %1, 16384
  br i1 %4, label %5, label %36

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.69"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %32, label %10

10:                                               ; preds = %5, %10
  %11 = phi i64 [ %13, %10 ], [ %8, %5 ]
  %12 = icmp ugt i64 %11, %6
  %13 = shl i64 %11, 1
  br i1 %12, label %14, label %10

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.69"* %0, i64 0, i32 1
  %16 = load %"class.gl::Shader"**, %"class.gl::Shader"*** %15, align 8
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #14
  %22 = bitcast i8* %21 to %"class.gl::Shader"**
  %23 = bitcast %"class.gl::Shader"*** %15 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.gl::Shader"*, %"class.gl::Shader"** %22, i64 %8
  %25 = bitcast %"class.gl::Shader"** %24 to i8*
  %26 = sub i64 %11, %8
  %27 = shl i64 %26, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -1, i64 %27, i1 false)
  %28 = bitcast %"class.gl::Shader"** %16 to i8*
  %29 = shl i64 %8, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %28, i64 %29, i1 false)
  store i64 %11, i64* %7, align 8
  %30 = icmp eq %"class.gl::Shader"** %16, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %14
  tail call void @_ZdaPv(i8* %28) #14
  br label %32

32:                                               ; preds = %14, %31, %5
  %33 = getelementptr inbounds %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.69"* %0, i64 0, i32 1
  %34 = load %"class.gl::Shader"**, %"class.gl::Shader"*** %33, align 8
  %35 = getelementptr inbounds %"class.gl::Shader"*, %"class.gl::Shader"** %34, i64 %6
  br label %111

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.69"* %0, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.114", %"class.absl::container_internal::raw_hash_map.114"* %37, i64 0, i32 0
  %39 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !61
  %40 = zext i32 %1 to i64
  %41 = add i64 %39, %40
  %42 = zext i64 %41 to i128
  %43 = mul nuw i128 %42, 11376068507788127593
  %44 = lshr i128 %43, 64
  %45 = xor i128 %44, %43
  %46 = trunc i128 %45 to i64
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.114", %"class.absl::container_internal::raw_hash_map.114"* %37, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8, !noalias !61
  %49 = getelementptr inbounds %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.69"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %50 = load i64, i64* %49, align 8, !noalias !61
  %51 = lshr i64 %46, 7
  %52 = ptrtoint i8* %48 to i64
  %53 = lshr i64 %52, 12
  %54 = xor i64 %51, %53
  %55 = trunc i128 %45 to i8
  %56 = and i8 %55, 127
  %57 = insertelement <16 x i8> undef, i8 %56, i32 0
  %58 = shufflevector <16 x i8> %57, <16 x i8> undef, <16 x i32> zeroinitializer
  %59 = getelementptr inbounds %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.69"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %60

60:                                               ; preds = %90, %36
  %61 = phi i64 [ %54, %36 ], [ %92, %90 ]
  %62 = phi i64 [ 0, %36 ], [ %91, %90 ]
  %63 = and i64 %61, %50
  %64 = getelementptr inbounds i8, i8* %48, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !noalias !61
  %67 = icmp eq <16 x i8> %58, %66
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %60
  %71 = zext i16 %68 to i32
  %72 = load %"union.absl::container_internal::map_slot_type.116"*, %"union.absl::container_internal::map_slot_type.116"** %59, align 8, !noalias !61
  br label %73

73:                                               ; preds = %82, %70
  %74 = phi i32 [ %71, %70 ], [ %84, %82 ]
  %75 = tail call i32 @llvm.cttz.i32(i32 %74, i1 false) #11, !range !2
  %76 = zext i32 %75 to i64
  %77 = add i64 %63, %76
  %78 = and i64 %77, %50
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.116", %"union.absl::container_internal::map_slot_type.116"* %72, i64 %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 4, !noalias !61
  %81 = icmp eq i32 %80, %1
  br i1 %81, label %100, label %82, !prof !3

82:                                               ; preds = %73
  %83 = add i32 %74, -1
  %84 = and i32 %83, %74
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %73

86:                                               ; preds = %82, %60
  %87 = icmp eq <16 x i8> %66, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %88 = bitcast <16 x i1> %87 to i16
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %93, !prof !4

90:                                               ; preds = %86
  %91 = add i64 %62, 16
  %92 = add i64 %91, %63
  br label %60

93:                                               ; preds = %86
  %94 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6ShaderEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.115"* %38, i64 %46) #11, !noalias !61
  %95 = load %"union.absl::container_internal::map_slot_type.116"*, %"union.absl::container_internal::map_slot_type.116"** %59, align 8, !noalias !61
  %96 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.116", %"union.absl::container_internal::map_slot_type.116"* %95, i64 %94, i32 0, i32 0
  store i32 %1, i32* %96, align 8, !noalias !61
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.116", %"union.absl::container_internal::map_slot_type.116"* %95, i64 %94, i32 0, i32 1
  store %"class.gl::Shader"* null, %"class.gl::Shader"** %97, align 8, !noalias !61
  %98 = load i8*, i8** %47, align 8, !noalias !61
  %99 = load %"union.absl::container_internal::map_slot_type.116"*, %"union.absl::container_internal::map_slot_type.116"** %59, align 8, !noalias !61
  br label %100

100:                                              ; preds = %73, %93
  %101 = phi %"union.absl::container_internal::map_slot_type.116"* [ %99, %93 ], [ %72, %73 ]
  %102 = phi i8* [ %98, %93 ], [ %48, %73 ]
  %103 = phi i64 [ %94, %93 ], [ %78, %73 ]
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = icmp ne i8* %104, null
  tail call void @llvm.assume(i1 %105) #11, !noalias !61
  %106 = load i8, i8* %104, align 1
  %107 = icmp sgt i8 %106, -1
  br i1 %107, label %109, label %108, !prof !3

108:                                              ; preds = %100
  tail call void @llvm.trap() #11
  unreachable

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.116", %"union.absl::container_internal::map_slot_type.116"* %101, i64 %103, i32 0, i32 1
  br label %111

111:                                              ; preds = %109, %32
  %112 = phi %"class.gl::Shader"** [ %110, %109 ], [ %35, %32 ]
  store %"class.gl::Shader"* %2, %"class.gl::Shader"** %112, align 8
  ret void
}

declare void @_ZN2gl6ShaderC1EPNS_20ShaderProgramManagerEPN2rx13GLImplFactoryERKNS_11LimitationsENS_10ShaderTypeENS_15ShaderProgramIDE(%"class.gl::Shader"*, %"class.gl::ShaderProgramManager"*, %"class.rx::GLImplFactory"*, %"struct.gl::Limitations"* dereferenceable(12), i8 zeroext, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl20ShaderProgramManager12deleteObjectINS_6ShaderENS_15ShaderProgramIDEEEvPKNS_7ContextEPNS_11ResourceMapIT_T0_EES9_(%"class.gl::ShaderProgramManager"*, %"class.gl::Context"*, %"class.gl::ResourceMap.69"*, i32) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca %"class.gl::Shader"*, align 8
  %6 = bitcast %"class.gl::Shader"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  store %"class.gl::Shader"* inttoptr (i64 -6148914691236517206 to %"class.gl::Shader"*), %"class.gl::Shader"** %5, align 8
  %7 = zext i32 %3 to i64
  %8 = getelementptr inbounds %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.69"* %2, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %7
  br i1 %10, label %11, label %17

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.69"* %2, i64 0, i32 1
  %13 = load %"class.gl::Shader"**, %"class.gl::Shader"*** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Shader"*, %"class.gl::Shader"** %13, i64 %7
  %15 = load %"class.gl::Shader"*, %"class.gl::Shader"** %14, align 8
  %16 = icmp eq %"class.gl::Shader"* %15, inttoptr (i64 -1 to %"class.gl::Shader"*)
  br i1 %16, label %80, label %81

17:                                               ; preds = %4
  %18 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %19 = add i64 %18, %7
  %20 = zext i64 %19 to i128
  %21 = mul nuw i128 %20, 11376068507788127593
  %22 = lshr i128 %21, 64
  %23 = xor i128 %22, %21
  %24 = trunc i128 %23 to i64
  %25 = getelementptr inbounds %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.69"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.69"* %2, i64 0, i32 2, i32 0, i32 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %24, 7
  %30 = ptrtoint i8* %26 to i64
  %31 = lshr i64 %30, 12
  %32 = xor i64 %29, %31
  %33 = trunc i128 %23 to i8
  %34 = and i8 %33, 127
  %35 = insertelement <16 x i8> undef, i8 %34, i32 0
  %36 = shufflevector <16 x i8> %35, <16 x i8> undef, <16 x i32> zeroinitializer
  %37 = getelementptr inbounds %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.69"* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %38

38:                                               ; preds = %68, %17
  %39 = phi i64 [ %32, %17 ], [ %70, %68 ]
  %40 = phi i64 [ 0, %17 ], [ %69, %68 ]
  %41 = and i64 %39, %28
  %42 = getelementptr inbounds i8, i8* %26, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %36, %44
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = zext i16 %46 to i32
  %50 = load %"union.absl::container_internal::map_slot_type.116"*, %"union.absl::container_internal::map_slot_type.116"** %37, align 8
  br label %51

51:                                               ; preds = %60, %48
  %52 = phi i32 [ %49, %48 ], [ %62, %60 ]
  %53 = tail call i32 @llvm.cttz.i32(i32 %52, i1 false) #11, !range !2
  %54 = zext i32 %53 to i64
  %55 = add i64 %41, %54
  %56 = and i64 %55, %28
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.116", %"union.absl::container_internal::map_slot_type.116"* %50, i64 %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %3
  br i1 %59, label %71, label %60, !prof !3

60:                                               ; preds = %51
  %61 = add i32 %52, -1
  %62 = and i32 %61, %52
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %60, %38
  %65 = icmp eq <16 x i8> %44, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %80, !prof !4

68:                                               ; preds = %64
  %69 = add i64 %40, 16
  %70 = add i64 %69, %41
  br label %38

71:                                               ; preds = %51
  %72 = getelementptr inbounds i8, i8* %26, i64 %56
  %73 = icmp ne i8* %72, null
  tail call void @llvm.assume(i1 %73) #11
  %74 = load i8, i8* %72, align 1
  %75 = icmp sgt i8 %74, -1
  br i1 %75, label %77, label %76, !prof !3

76:                                               ; preds = %71
  tail call void @llvm.trap() #11
  unreachable

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.116", %"union.absl::container_internal::map_slot_type.116"* %50, i64 %56, i32 0, i32 1
  %79 = load %"class.gl::Shader"*, %"class.gl::Shader"** %78, align 8
  br label %81

80:                                               ; preds = %64, %11
  store %"class.gl::Shader"* null, %"class.gl::Shader"** %5, align 8
  br label %91

81:                                               ; preds = %11, %77
  %82 = phi %"class.gl::Shader"* [ %15, %11 ], [ %79, %77 ]
  store %"class.gl::Shader"* %82, %"class.gl::Shader"** %5, align 8
  %83 = icmp eq %"class.gl::Shader"* %82, null
  br i1 %83, label %91, label %84

84:                                               ; preds = %81
  %85 = tail call i32 @_ZNK2gl6Shader11getRefCountEv(%"class.gl::Shader"* nonnull %82) #11
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocator7releaseEj(%"class.gl::HandleAllocator"* %88, i32 %3) #11
  tail call void @_ZN2gl6Shader9onDestroyEPKNS_7ContextE(%"class.gl::Shader"* nonnull %82, %"class.gl::Context"* %1) #11
  %89 = call zeroext i1 @_ZN2gl11ResourceMapINS_6ShaderENS_15ShaderProgramIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.69"* %2, i32 %3, %"class.gl::Shader"** nonnull %5)
  br label %91

90:                                               ; preds = %84
  tail call void @_ZN2gl6Shader15flagForDeletionEv(%"class.gl::Shader"* nonnull %82) #11
  br label %91

91:                                               ; preds = %80, %87, %90, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Shader"* @_ZNK2gl20ShaderProgramManager9getShaderENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 1, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 1, i32 1
  %9 = load %"class.gl::Shader"**, %"class.gl::Shader"*** %8, align 8
  %10 = getelementptr inbounds %"class.gl::Shader"*, %"class.gl::Shader"** %9, i64 %3
  %11 = load %"class.gl::Shader"*, %"class.gl::Shader"** %10, align 8
  %12 = icmp eq %"class.gl::Shader"* %11, inttoptr (i64 -1 to %"class.gl::Shader"*)
  %13 = select i1 %12, %"class.gl::Shader"* null, %"class.gl::Shader"* %11
  br label %77

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %16 = add i64 %15, %3
  %17 = zext i64 %16 to i128
  %18 = mul nuw i128 %17, 11376068507788127593
  %19 = lshr i128 %18, 64
  %20 = xor i128 %19, %18
  %21 = trunc i128 %20 to i64
  %22 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = lshr i64 %21, 7
  %27 = ptrtoint i8* %23 to i64
  %28 = lshr i64 %27, 12
  %29 = xor i64 %26, %28
  %30 = trunc i128 %20 to i8
  %31 = and i8 %30, 127
  %32 = insertelement <16 x i8> undef, i8 %31, i32 0
  %33 = shufflevector <16 x i8> %32, <16 x i8> undef, <16 x i32> zeroinitializer
  %34 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %35

35:                                               ; preds = %65, %14
  %36 = phi i64 [ %29, %14 ], [ %67, %65 ]
  %37 = phi i64 [ 0, %14 ], [ %66, %65 ]
  %38 = and i64 %36, %25
  %39 = getelementptr inbounds i8, i8* %23, i64 %38
  %40 = bitcast i8* %39 to <16 x i8>*
  %41 = load <16 x i8>, <16 x i8>* %40, align 1
  %42 = icmp eq <16 x i8> %33, %41
  %43 = bitcast <16 x i1> %42 to i16
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %35
  %46 = zext i16 %43 to i32
  %47 = load %"union.absl::container_internal::map_slot_type.116"*, %"union.absl::container_internal::map_slot_type.116"** %34, align 8
  br label %48

48:                                               ; preds = %57, %45
  %49 = phi i32 [ %46, %45 ], [ %59, %57 ]
  %50 = tail call i32 @llvm.cttz.i32(i32 %49, i1 false) #11, !range !2
  %51 = zext i32 %50 to i64
  %52 = add i64 %38, %51
  %53 = and i64 %52, %25
  %54 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.116", %"union.absl::container_internal::map_slot_type.116"* %47, i64 %53, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %1
  br i1 %56, label %68, label %57, !prof !3

57:                                               ; preds = %48
  %58 = add i32 %49, -1
  %59 = and i32 %58, %49
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %48

61:                                               ; preds = %57, %35
  %62 = icmp eq <16 x i8> %41, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %63 = bitcast <16 x i1> %62 to i16
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %65, label %77, !prof !4

65:                                               ; preds = %61
  %66 = add i64 %37, 16
  %67 = add i64 %66, %38
  br label %35

68:                                               ; preds = %48
  %69 = getelementptr inbounds i8, i8* %23, i64 %53
  %70 = icmp ne i8* %69, null
  tail call void @llvm.assume(i1 %70) #11
  %71 = load i8, i8* %69, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %74, label %73, !prof !3

73:                                               ; preds = %68
  tail call void @llvm.trap() #11
  unreachable

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.116", %"union.absl::container_internal::map_slot_type.116"* %47, i64 %53, i32 0, i32 1
  %76 = load %"class.gl::Shader"*, %"class.gl::Shader"** %75, align 8
  br label %77

77:                                               ; preds = %61, %7, %74
  %78 = phi %"class.gl::Shader"* [ %13, %7 ], [ %76, %74 ], [ null, %61 ]
  ret %"class.gl::Shader"* %78
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl20ShaderProgramManager13createProgramEPN2rx13GLImplFactoryE(%"class.gl::ShaderProgramManager"*, %"class.rx::GLImplFactory"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 0, i32 1
  %4 = tail call i32 @_ZN2gl15HandleAllocator8allocateEv(%"class.gl::HandleAllocator"* %3) #11
  %5 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 2
  %6 = tail call i8* @_Znwm(i64 608) #14
  %7 = bitcast i8* %6 to %"class.gl::Program"*
  tail call void @_ZN2gl7ProgramC1EPN2rx13GLImplFactoryEPNS_20ShaderProgramManagerENS_15ShaderProgramIDE(%"class.gl::Program"* nonnull %7, %"class.rx::GLImplFactory"* %1, %"class.gl::ShaderProgramManager"* %0, i32 %4) #11
  tail call void @_ZN2gl11ResourceMapINS_7ProgramENS_15ShaderProgramIDEE6assignES2_PS1_(%"class.gl::ResourceMap.122"* %5, i32 %4, %"class.gl::Program"* nonnull %7)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl11ResourceMapINS_7ProgramENS_15ShaderProgramIDEE6assignES2_PS1_(%"class.gl::ResourceMap.122"*, i32, %"class.gl::Program"*) local_unnamed_addr #3 comdat align 2 {
  %4 = icmp ult i32 %1, 16384
  br i1 %4, label %5, label %36

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap.122", %"class.gl::ResourceMap.122"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %32, label %10

10:                                               ; preds = %5, %10
  %11 = phi i64 [ %13, %10 ], [ %8, %5 ]
  %12 = icmp ugt i64 %11, %6
  %13 = shl i64 %11, 1
  br i1 %12, label %14, label %10

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gl::ResourceMap.122", %"class.gl::ResourceMap.122"* %0, i64 0, i32 1
  %16 = load %"class.gl::Program"**, %"class.gl::Program"*** %15, align 8
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #14
  %22 = bitcast i8* %21 to %"class.gl::Program"**
  %23 = bitcast %"class.gl::Program"*** %15 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %22, i64 %8
  %25 = bitcast %"class.gl::Program"** %24 to i8*
  %26 = sub i64 %11, %8
  %27 = shl i64 %26, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -1, i64 %27, i1 false)
  %28 = bitcast %"class.gl::Program"** %16 to i8*
  %29 = shl i64 %8, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %28, i64 %29, i1 false)
  store i64 %11, i64* %7, align 8
  %30 = icmp eq %"class.gl::Program"** %16, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %14
  tail call void @_ZdaPv(i8* %28) #14
  br label %32

32:                                               ; preds = %14, %31, %5
  %33 = getelementptr inbounds %"class.gl::ResourceMap.122", %"class.gl::ResourceMap.122"* %0, i64 0, i32 1
  %34 = load %"class.gl::Program"**, %"class.gl::Program"*** %33, align 8
  %35 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %34, i64 %6
  br label %111

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.gl::ResourceMap.122", %"class.gl::ResourceMap.122"* %0, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.242", %"class.absl::container_internal::raw_hash_map.242"* %37, i64 0, i32 0
  %39 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !64
  %40 = zext i32 %1 to i64
  %41 = add i64 %39, %40
  %42 = zext i64 %41 to i128
  %43 = mul nuw i128 %42, 11376068507788127593
  %44 = lshr i128 %43, 64
  %45 = xor i128 %44, %43
  %46 = trunc i128 %45 to i64
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.242", %"class.absl::container_internal::raw_hash_map.242"* %37, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8, !noalias !64
  %49 = getelementptr inbounds %"class.gl::ResourceMap.122", %"class.gl::ResourceMap.122"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %50 = load i64, i64* %49, align 8, !noalias !64
  %51 = lshr i64 %46, 7
  %52 = ptrtoint i8* %48 to i64
  %53 = lshr i64 %52, 12
  %54 = xor i64 %51, %53
  %55 = trunc i128 %45 to i8
  %56 = and i8 %55, 127
  %57 = insertelement <16 x i8> undef, i8 %56, i32 0
  %58 = shufflevector <16 x i8> %57, <16 x i8> undef, <16 x i32> zeroinitializer
  %59 = getelementptr inbounds %"class.gl::ResourceMap.122", %"class.gl::ResourceMap.122"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %60

60:                                               ; preds = %90, %36
  %61 = phi i64 [ %54, %36 ], [ %92, %90 ]
  %62 = phi i64 [ 0, %36 ], [ %91, %90 ]
  %63 = and i64 %61, %50
  %64 = getelementptr inbounds i8, i8* %48, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !noalias !64
  %67 = icmp eq <16 x i8> %58, %66
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %60
  %71 = zext i16 %68 to i32
  %72 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %59, align 8, !noalias !64
  br label %73

73:                                               ; preds = %82, %70
  %74 = phi i32 [ %71, %70 ], [ %84, %82 ]
  %75 = tail call i32 @llvm.cttz.i32(i32 %74, i1 false) #11, !range !2
  %76 = zext i32 %75 to i64
  %77 = add i64 %63, %76
  %78 = and i64 %77, %50
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %72, i64 %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 4, !noalias !64
  %81 = icmp eq i32 %80, %1
  br i1 %81, label %100, label %82, !prof !3

82:                                               ; preds = %73
  %83 = add i32 %74, -1
  %84 = and i32 %83, %74
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %73

86:                                               ; preds = %82, %60
  %87 = icmp eq <16 x i8> %66, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %88 = bitcast <16 x i1> %87 to i16
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %93, !prof !4

90:                                               ; preds = %86
  %91 = add i64 %62, 16
  %92 = add i64 %91, %63
  br label %60

93:                                               ; preds = %86
  %94 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7ProgramEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.243"* %38, i64 %46) #11, !noalias !64
  %95 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %59, align 8, !noalias !64
  %96 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %95, i64 %94, i32 0, i32 0
  store i32 %1, i32* %96, align 8, !noalias !64
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %95, i64 %94, i32 0, i32 1
  store %"class.gl::Program"* null, %"class.gl::Program"** %97, align 8, !noalias !64
  %98 = load i8*, i8** %47, align 8, !noalias !64
  %99 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %59, align 8, !noalias !64
  br label %100

100:                                              ; preds = %73, %93
  %101 = phi %"union.absl::container_internal::map_slot_type.244"* [ %99, %93 ], [ %72, %73 ]
  %102 = phi i8* [ %98, %93 ], [ %48, %73 ]
  %103 = phi i64 [ %94, %93 ], [ %78, %73 ]
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = icmp ne i8* %104, null
  tail call void @llvm.assume(i1 %105) #11, !noalias !64
  %106 = load i8, i8* %104, align 1
  %107 = icmp sgt i8 %106, -1
  br i1 %107, label %109, label %108, !prof !3

108:                                              ; preds = %100
  tail call void @llvm.trap() #11
  unreachable

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %101, i64 %103, i32 0, i32 1
  br label %111

111:                                              ; preds = %109, %32
  %112 = phi %"class.gl::Program"** [ %110, %109 ], [ %35, %32 ]
  store %"class.gl::Program"* %2, %"class.gl::Program"** %112, align 8
  ret void
}

declare void @_ZN2gl7ProgramC1EPN2rx13GLImplFactoryEPNS_20ShaderProgramManagerENS_15ShaderProgramIDE(%"class.gl::Program"*, %"class.rx::GLImplFactory"*, %"class.gl::ShaderProgramManager"*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl20ShaderProgramManager12deleteObjectINS_7ProgramENS_15ShaderProgramIDEEEvPKNS_7ContextEPNS_11ResourceMapIT_T0_EES9_(%"class.gl::ShaderProgramManager"*, %"class.gl::Context"*, %"class.gl::ResourceMap.122"*, i32) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca %"class.gl::Program"*, align 8
  %6 = bitcast %"class.gl::Program"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  store %"class.gl::Program"* inttoptr (i64 -6148914691236517206 to %"class.gl::Program"*), %"class.gl::Program"** %5, align 8
  %7 = zext i32 %3 to i64
  %8 = getelementptr inbounds %"class.gl::ResourceMap.122", %"class.gl::ResourceMap.122"* %2, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %7
  br i1 %10, label %11, label %17

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.gl::ResourceMap.122", %"class.gl::ResourceMap.122"* %2, i64 0, i32 1
  %13 = load %"class.gl::Program"**, %"class.gl::Program"*** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %13, i64 %7
  %15 = load %"class.gl::Program"*, %"class.gl::Program"** %14, align 8
  %16 = icmp eq %"class.gl::Program"* %15, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %16, label %80, label %81

17:                                               ; preds = %4
  %18 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %19 = add i64 %18, %7
  %20 = zext i64 %19 to i128
  %21 = mul nuw i128 %20, 11376068507788127593
  %22 = lshr i128 %21, 64
  %23 = xor i128 %22, %21
  %24 = trunc i128 %23 to i64
  %25 = getelementptr inbounds %"class.gl::ResourceMap.122", %"class.gl::ResourceMap.122"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.gl::ResourceMap.122", %"class.gl::ResourceMap.122"* %2, i64 0, i32 2, i32 0, i32 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %24, 7
  %30 = ptrtoint i8* %26 to i64
  %31 = lshr i64 %30, 12
  %32 = xor i64 %29, %31
  %33 = trunc i128 %23 to i8
  %34 = and i8 %33, 127
  %35 = insertelement <16 x i8> undef, i8 %34, i32 0
  %36 = shufflevector <16 x i8> %35, <16 x i8> undef, <16 x i32> zeroinitializer
  %37 = getelementptr inbounds %"class.gl::ResourceMap.122", %"class.gl::ResourceMap.122"* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %38

38:                                               ; preds = %68, %17
  %39 = phi i64 [ %32, %17 ], [ %70, %68 ]
  %40 = phi i64 [ 0, %17 ], [ %69, %68 ]
  %41 = and i64 %39, %28
  %42 = getelementptr inbounds i8, i8* %26, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %36, %44
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = zext i16 %46 to i32
  %50 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %37, align 8
  br label %51

51:                                               ; preds = %60, %48
  %52 = phi i32 [ %49, %48 ], [ %62, %60 ]
  %53 = tail call i32 @llvm.cttz.i32(i32 %52, i1 false) #11, !range !2
  %54 = zext i32 %53 to i64
  %55 = add i64 %41, %54
  %56 = and i64 %55, %28
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %3
  br i1 %59, label %71, label %60, !prof !3

60:                                               ; preds = %51
  %61 = add i32 %52, -1
  %62 = and i32 %61, %52
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %60, %38
  %65 = icmp eq <16 x i8> %44, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %80, !prof !4

68:                                               ; preds = %64
  %69 = add i64 %40, 16
  %70 = add i64 %69, %41
  br label %38

71:                                               ; preds = %51
  %72 = getelementptr inbounds i8, i8* %26, i64 %56
  %73 = icmp ne i8* %72, null
  tail call void @llvm.assume(i1 %73) #11
  %74 = load i8, i8* %72, align 1
  %75 = icmp sgt i8 %74, -1
  br i1 %75, label %77, label %76, !prof !3

76:                                               ; preds = %71
  tail call void @llvm.trap() #11
  unreachable

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %50, i64 %56, i32 0, i32 1
  %79 = load %"class.gl::Program"*, %"class.gl::Program"** %78, align 8
  br label %81

80:                                               ; preds = %64, %11
  store %"class.gl::Program"* null, %"class.gl::Program"** %5, align 8
  br label %91

81:                                               ; preds = %11, %77
  %82 = phi %"class.gl::Program"* [ %15, %11 ], [ %79, %77 ]
  store %"class.gl::Program"* %82, %"class.gl::Program"** %5, align 8
  %83 = icmp eq %"class.gl::Program"* %82, null
  br i1 %83, label %91, label %84

84:                                               ; preds = %81
  %85 = tail call i32 @_ZNK2gl7Program11getRefCountEv(%"class.gl::Program"* nonnull %82) #11
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocator7releaseEj(%"class.gl::HandleAllocator"* %88, i32 %3) #11
  tail call void @_ZN2gl7Program9onDestroyEPKNS_7ContextE(%"class.gl::Program"* nonnull %82, %"class.gl::Context"* %1) #11
  %89 = call zeroext i1 @_ZN2gl11ResourceMapINS_7ProgramENS_15ShaderProgramIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.122"* %2, i32 %3, %"class.gl::Program"** nonnull %5)
  br label %91

90:                                               ; preds = %84
  tail call void @_ZN2gl7Program15flagForDeletionEv(%"class.gl::Program"* nonnull %82) #11
  br label %91

91:                                               ; preds = %80, %87, %90, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl14TextureManagerD2Ev(%"class.gl::TextureManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %0, i64 0, i32 0, i32 1, i32 1
  %4 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %3, align 8
  %5 = icmp eq %"class.gl::Texture"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Texture"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.273"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %0, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl14TextureManagerD0Ev(%"class.gl::TextureManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_7TextureENS_14TextureManagerENS_9TextureIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %0, i64 0, i32 0, i32 1, i32 1
  %4 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %3, align 8
  %5 = icmp eq %"class.gl::Texture"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Texture"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.273"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %0, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  %19 = bitcast %"class.gl::TextureManager"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.gl::Texture"* @_ZN2gl14TextureManager17AllocateNewObjectEPN2rx13GLImplFactoryENS_9TextureIDENS_11TextureTypeE(%"class.rx::GLImplFactory"*, i32, i8 zeroext) local_unnamed_addr #1 align 2 {
  %4 = tail call i8* @_Znwm(i64 688) #14
  %5 = bitcast i8* %4 to %"class.gl::Texture"*
  tail call void @_ZN2gl7TextureC1EPN2rx13GLImplFactoryENS_9TextureIDENS_11TextureTypeE(%"class.gl::Texture"* nonnull %5, %"class.rx::GLImplFactory"* %0, i32 %1, i8 zeroext %2) #11
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 1
  store i64 %9, i64* %7, align 8
  ret %"class.gl::Texture"* %5
}

declare void @_ZN2gl7TextureC1EPN2rx13GLImplFactoryENS_9TextureIDENS_11TextureTypeE(%"class.gl::Texture"*, %"class.rx::GLImplFactory"*, i32, i8 zeroext) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl14TextureManager13createTextureEv(%"class.gl::TextureManager"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %0, i64 0, i32 0, i32 1
  %4 = tail call i32 @_ZN2gl15HandleAllocator8allocateEv(%"class.gl::HandleAllocator"* %2) #11
  tail call void @_ZN2gl11ResourceMapINS_7TextureENS_9TextureIDEE6assignES2_PS1_(%"class.gl::ResourceMap.251"* %3, i32 %4, %"class.gl::Texture"* null) #11
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2gl14TextureManager22signalAllTexturesDirtyEv(%"class.gl::TextureManager"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", align 8
  %3 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 56, i1 false)
  %5 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %3, i64 0, i32 0
  %6 = load i64, i64* %5, align 8, !noalias !67
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %19, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %0, i64 0, i32 0, i32 1, i32 1
  %10 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %9, align 8, !noalias !67
  br label %11

11:                                               ; preds = %16, %8
  %12 = phi i64 [ 0, %8 ], [ %17, %16 ]
  %13 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %10, i64 %12
  %14 = bitcast %"class.gl::Texture"** %13 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !67
  switch i64 %15, label %19 [
    i64 -1, label %16
    i64 0, label %16
  ]

16:                                               ; preds = %11, %11
  %17 = add nuw i64 %12, 1
  %18 = icmp eq i64 %17, %6
  br i1 %18, label %19, label %11

19:                                               ; preds = %16, %11, %1
  %20 = phi i64 [ 0, %1 ], [ %6, %16 ], [ %12, %11 ]
  %21 = trunc i64 %20 to i32
  %22 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8, !noalias !67
  %24 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %25 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %24, align 8, !noalias !67
  %26 = icmp ne i8* %23, null
  tail call void @llvm.assume(i1 %26) #11, !noalias !67
  %27 = load i8, i8* %23, align 1, !noalias !67
  %28 = icmp slt i8 %27, -1
  br i1 %28, label %29, label %44

29:                                               ; preds = %19, %29
  %30 = phi %"union.absl::container_internal::map_slot_type.273"* [ %41, %29 ], [ %25, %19 ]
  %31 = phi i8* [ %40, %29 ], [ %23, %19 ]
  %32 = bitcast i8* %31 to <16 x i8>*
  %33 = load <16 x i8>, <16 x i8>* %32, align 1, !noalias !67
  %34 = icmp slt <16 x i8> %33, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %35 = bitcast <16 x i1> %34 to i16
  %36 = zext i16 %35 to i32
  %37 = add nuw nsw i32 %36, 1
  %38 = tail call i32 @llvm.cttz.i32(i32 %37, i1 true) #11, !range !2
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %31, i64 %39
  %41 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %30, i64 %39
  %42 = load i8, i8* %40, align 1, !noalias !67
  %43 = icmp slt i8 %42, -1
  br i1 %43, label %29, label %44

44:                                               ; preds = %29, %19
  %45 = phi %"union.absl::container_internal::map_slot_type.273"* [ %25, %19 ], [ %41, %29 ]
  %46 = phi i8* [ %23, %19 ], [ %40, %29 ]
  %47 = phi i8 [ %27, %19 ], [ %42, %29 ]
  %48 = icmp eq i8 %47, -1
  %49 = select i1 %48, i8* null, i8* %46, !prof !4
  %50 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %2, i64 0, i32 0
  store %"class.gl::ResourceMap.251"* %3, %"class.gl::ResourceMap.251"** %50, align 8, !alias.scope !67
  %51 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %2, i64 0, i32 1
  store i32 %21, i32* %51, align 8, !alias.scope !67
  %52 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %2, i64 0, i32 3, i32 0, i32 0
  store i8* %49, i8** %52, align 8, !alias.scope !67
  %53 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %2, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type.273"* %45, %"union.absl::container_internal::map_slot_type.273"** %53, align 8, !alias.scope !67
  %54 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %2, i64 0, i32 4, i32 0
  store i32 0, i32* %54, align 8, !alias.scope !67
  %55 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %2, i64 0, i32 4, i32 1
  store %"class.gl::Texture"* null, %"class.gl::Texture"** %55, align 8, !alias.scope !67
  %56 = getelementptr inbounds %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator", %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* %2, i64 0, i32 5
  store i8 1, i8* %56, align 8, !alias.scope !67
  %57 = trunc i64 %6 to i32
  %58 = icmp ugt i32 %57, %21
  br i1 %58, label %59, label %64

59:                                               ; preds = %44
  store i32 %21, i32* %54, align 8, !alias.scope !67
  %60 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %0, i64 0, i32 0, i32 1, i32 1
  %61 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %60, align 8, !noalias !67
  %62 = and i64 %20, 4294967295
  %63 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %61, i64 %62
  br label %74

64:                                               ; preds = %44
  %65 = icmp eq i8* %49, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %64
  %67 = load i8, i8* %49, align 1, !noalias !67
  %68 = icmp sgt i8 %67, -1
  br i1 %68, label %70, label %69, !prof !3

69:                                               ; preds = %66
  tail call void @llvm.trap() #11, !noalias !67
  unreachable

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %45, i64 0, i32 0, i32 0
  %72 = load i32, i32* %71, align 8, !noalias !67
  store i32 %72, i32* %54, align 8, !alias.scope !67
  %73 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %45, i64 0, i32 0, i32 1
  br label %74

74:                                               ; preds = %70, %59
  %75 = phi %"class.gl::Texture"** [ %63, %59 ], [ %73, %70 ]
  %76 = bitcast %"class.gl::Texture"** %75 to i64*
  %77 = load i64, i64* %76, align 8, !noalias !67
  %78 = bitcast %"class.gl::Texture"** %55 to i64*
  store i64 %77, i64* %78, align 8, !alias.scope !67
  br label %79

79:                                               ; preds = %74, %64
  br label %80

80:                                               ; preds = %79, %95
  %81 = phi i32 [ %97, %95 ], [ %21, %79 ]
  %82 = icmp eq i32 %81, %57
  br i1 %82, label %83, label %91

83:                                               ; preds = %80
  %84 = load i8*, i8** %52, align 8
  %85 = icmp eq i8* %84, null
  br i1 %85, label %90, label %86

86:                                               ; preds = %83
  %87 = load i8, i8* %84, align 1
  %88 = icmp sgt i8 %87, -1
  br i1 %88, label %91, label %89, !prof !3

89:                                               ; preds = %86
  call void @llvm.trap() #11
  unreachable

90:                                               ; preds = %83
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #11
  ret void

91:                                               ; preds = %86, %80
  %92 = load %"class.gl::Texture"*, %"class.gl::Texture"** %55, align 8
  %93 = icmp eq %"class.gl::Texture"* %92, null
  br i1 %93, label %95, label %94

94:                                               ; preds = %91
  call void @_ZN2gl7Texture18signalDirtyStorageENS_9InitStateE(%"class.gl::Texture"* nonnull %92, i32 0) #11
  br label %95

95:                                               ; preds = %91, %94
  %96 = call dereferenceable(56) %"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* @_ZN2gl11ResourceMapINS_7TextureENS_9TextureIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::Texture, gl::TextureID>::Iterator"* nonnull %2)
  %97 = load i32, i32* %51, align 8
  br label %80
}

declare void @_ZN2gl7Texture18signalDirtyStorageENS_9InitStateE(%"class.gl::Texture"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl14TextureManager28enableHandleAllocatorLoggingEv(%"class.gl::TextureManager"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::TextureManager", %"class.gl::TextureManager"* %0, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocator13enableLoggingEb(%"class.gl::HandleAllocator"* %2, i1 zeroext true) #11
  ret void
}

declare void @_ZN2gl15HandleAllocator13enableLoggingEb(%"class.gl::HandleAllocator"*, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19RenderbufferManagerD2Ev(%"class.gl::RenderbufferManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 1, i32 1
  %4 = load %"class.gl::Renderbuffer"**, %"class.gl::Renderbuffer"*** %3, align 8
  %5 = icmp eq %"class.gl::Renderbuffer"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Renderbuffer"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.284"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19RenderbufferManagerD0Ev(%"class.gl::RenderbufferManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_12RenderbufferENS_19RenderbufferManagerENS_14RenderbufferIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 1, i32 1
  %4 = load %"class.gl::Renderbuffer"**, %"class.gl::Renderbuffer"*** %3, align 8
  %5 = icmp eq %"class.gl::Renderbuffer"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Renderbuffer"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.284"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  %19 = bitcast %"class.gl::RenderbufferManager"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.gl::Renderbuffer"* @_ZN2gl19RenderbufferManager17AllocateNewObjectEPN2rx13GLImplFactoryENS_14RenderbufferIDE(%"class.rx::GLImplFactory"*, i32) local_unnamed_addr #1 align 2 {
  %3 = tail call i8* @_Znwm(i64 280) #14
  %4 = bitcast i8* %3 to %"class.gl::Renderbuffer"*
  tail call void @_ZN2gl12RenderbufferC1EPN2rx13GLImplFactoryENS_14RenderbufferIDE(%"class.gl::Renderbuffer"* nonnull %4, %"class.rx::GLImplFactory"* %0, i32 %1) #11
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  store i64 %8, i64* %6, align 8
  ret %"class.gl::Renderbuffer"* %4
}

declare void @_ZN2gl12RenderbufferC1EPN2rx13GLImplFactoryENS_14RenderbufferIDE(%"class.gl::Renderbuffer"*, %"class.rx::GLImplFactory"*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl19RenderbufferManager18createRenderbufferEv(%"class.gl::RenderbufferManager"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 1
  %4 = tail call i32 @_ZN2gl15HandleAllocator8allocateEv(%"class.gl::HandleAllocator"* %2) #11
  tail call void @_ZN2gl11ResourceMapINS_12RenderbufferENS_14RenderbufferIDEE6assignES2_PS1_(%"class.gl::ResourceMap.280"* %3, i32 %4, %"class.gl::Renderbuffer"* null) #11
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Renderbuffer"* @_ZNK2gl19RenderbufferManager15getRenderbufferENS_14RenderbufferIDE(%"class.gl::RenderbufferManager"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 1, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 1, i32 1
  %9 = load %"class.gl::Renderbuffer"**, %"class.gl::Renderbuffer"*** %8, align 8
  %10 = getelementptr inbounds %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %9, i64 %3
  %11 = load %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %10, align 8
  %12 = icmp eq %"class.gl::Renderbuffer"* %11, inttoptr (i64 -1 to %"class.gl::Renderbuffer"*)
  %13 = select i1 %12, %"class.gl::Renderbuffer"* null, %"class.gl::Renderbuffer"* %11
  br label %77

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %16 = add i64 %15, %3
  %17 = zext i64 %16 to i128
  %18 = mul nuw i128 %17, 11376068507788127593
  %19 = lshr i128 %18, 64
  %20 = xor i128 %19, %18
  %21 = trunc i128 %20 to i64
  %22 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = lshr i64 %21, 7
  %27 = ptrtoint i8* %23 to i64
  %28 = lshr i64 %27, 12
  %29 = xor i64 %26, %28
  %30 = trunc i128 %20 to i8
  %31 = and i8 %30, 127
  %32 = insertelement <16 x i8> undef, i8 %31, i32 0
  %33 = shufflevector <16 x i8> %32, <16 x i8> undef, <16 x i32> zeroinitializer
  %34 = getelementptr inbounds %"class.gl::RenderbufferManager", %"class.gl::RenderbufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %35

35:                                               ; preds = %65, %14
  %36 = phi i64 [ %29, %14 ], [ %67, %65 ]
  %37 = phi i64 [ 0, %14 ], [ %66, %65 ]
  %38 = and i64 %36, %25
  %39 = getelementptr inbounds i8, i8* %23, i64 %38
  %40 = bitcast i8* %39 to <16 x i8>*
  %41 = load <16 x i8>, <16 x i8>* %40, align 1
  %42 = icmp eq <16 x i8> %33, %41
  %43 = bitcast <16 x i1> %42 to i16
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %35
  %46 = zext i16 %43 to i32
  %47 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %34, align 8
  br label %48

48:                                               ; preds = %57, %45
  %49 = phi i32 [ %46, %45 ], [ %59, %57 ]
  %50 = tail call i32 @llvm.cttz.i32(i32 %49, i1 false) #11, !range !2
  %51 = zext i32 %50 to i64
  %52 = add i64 %38, %51
  %53 = and i64 %52, %25
  %54 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %47, i64 %53, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %1
  br i1 %56, label %68, label %57, !prof !3

57:                                               ; preds = %48
  %58 = add i32 %49, -1
  %59 = and i32 %58, %49
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %48

61:                                               ; preds = %57, %35
  %62 = icmp eq <16 x i8> %41, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %63 = bitcast <16 x i1> %62 to i16
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %65, label %77, !prof !4

65:                                               ; preds = %61
  %66 = add i64 %37, 16
  %67 = add i64 %66, %38
  br label %35

68:                                               ; preds = %48
  %69 = getelementptr inbounds i8, i8* %23, i64 %53
  %70 = icmp ne i8* %69, null
  tail call void @llvm.assume(i1 %70) #11
  %71 = load i8, i8* %69, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %74, label %73, !prof !3

73:                                               ; preds = %68
  tail call void @llvm.trap() #11
  unreachable

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %47, i64 %53, i32 0, i32 1
  %76 = load %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %75, align 8
  br label %77

77:                                               ; preds = %61, %7, %74
  %78 = phi %"class.gl::Renderbuffer"* [ %13, %7 ], [ %76, %74 ], [ null, %61 ]
  ret %"class.gl::Renderbuffer"* %78
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl14SamplerManagerD2Ev(%"class.gl::SamplerManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1, i32 1
  %4 = load %"class.gl::Sampler"**, %"class.gl::Sampler"*** %3, align 8
  %5 = icmp eq %"class.gl::Sampler"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Sampler"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.297"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl14SamplerManagerD0Ev(%"class.gl::SamplerManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_7SamplerENS_14SamplerManagerENS_9SamplerIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1, i32 1
  %4 = load %"class.gl::Sampler"**, %"class.gl::Sampler"*** %3, align 8
  %5 = icmp eq %"class.gl::Sampler"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Sampler"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.297"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  %19 = bitcast %"class.gl::SamplerManager"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.gl::Sampler"* @_ZN2gl14SamplerManager17AllocateNewObjectEPN2rx13GLImplFactoryENS_9SamplerIDE(%"class.rx::GLImplFactory"*, i32) local_unnamed_addr #1 align 2 {
  %3 = tail call i8* @_Znwm(i64 240) #14
  %4 = bitcast i8* %3 to %"class.gl::Sampler"*
  tail call void @_ZN2gl7SamplerC1EPN2rx13GLImplFactoryENS_9SamplerIDE(%"class.gl::Sampler"* nonnull %4, %"class.rx::GLImplFactory"* %0, i32 %1) #11
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  store i64 %8, i64* %6, align 8
  ret %"class.gl::Sampler"* %4
}

declare void @_ZN2gl7SamplerC1EPN2rx13GLImplFactoryENS_9SamplerIDE(%"class.gl::Sampler"*, %"class.rx::GLImplFactory"*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl14SamplerManager13createSamplerEv(%"class.gl::SamplerManager"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1
  %4 = tail call i32 @_ZN2gl15HandleAllocator8allocateEv(%"class.gl::HandleAllocator"* %2) #11
  tail call void @_ZN2gl11ResourceMapINS_7SamplerENS_9SamplerIDEE6assignES2_PS1_(%"class.gl::ResourceMap.291"* %3, i32 %4, %"class.gl::Sampler"* null) #11
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Sampler"* @_ZNK2gl14SamplerManager10getSamplerENS_9SamplerIDE(%"class.gl::SamplerManager"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1, i32 1
  %9 = load %"class.gl::Sampler"**, %"class.gl::Sampler"*** %8, align 8
  %10 = getelementptr inbounds %"class.gl::Sampler"*, %"class.gl::Sampler"** %9, i64 %3
  %11 = load %"class.gl::Sampler"*, %"class.gl::Sampler"** %10, align 8
  %12 = icmp eq %"class.gl::Sampler"* %11, inttoptr (i64 -1 to %"class.gl::Sampler"*)
  %13 = select i1 %12, %"class.gl::Sampler"* null, %"class.gl::Sampler"* %11
  br label %77

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %16 = add i64 %15, %3
  %17 = zext i64 %16 to i128
  %18 = mul nuw i128 %17, 11376068507788127593
  %19 = lshr i128 %18, 64
  %20 = xor i128 %19, %18
  %21 = trunc i128 %20 to i64
  %22 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = lshr i64 %21, 7
  %27 = ptrtoint i8* %23 to i64
  %28 = lshr i64 %27, 12
  %29 = xor i64 %26, %28
  %30 = trunc i128 %20 to i8
  %31 = and i8 %30, 127
  %32 = insertelement <16 x i8> undef, i8 %31, i32 0
  %33 = shufflevector <16 x i8> %32, <16 x i8> undef, <16 x i32> zeroinitializer
  %34 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %35

35:                                               ; preds = %65, %14
  %36 = phi i64 [ %29, %14 ], [ %67, %65 ]
  %37 = phi i64 [ 0, %14 ], [ %66, %65 ]
  %38 = and i64 %36, %25
  %39 = getelementptr inbounds i8, i8* %23, i64 %38
  %40 = bitcast i8* %39 to <16 x i8>*
  %41 = load <16 x i8>, <16 x i8>* %40, align 1
  %42 = icmp eq <16 x i8> %33, %41
  %43 = bitcast <16 x i1> %42 to i16
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %35
  %46 = zext i16 %43 to i32
  %47 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %34, align 8
  br label %48

48:                                               ; preds = %57, %45
  %49 = phi i32 [ %46, %45 ], [ %59, %57 ]
  %50 = tail call i32 @llvm.cttz.i32(i32 %49, i1 false) #11, !range !2
  %51 = zext i32 %50 to i64
  %52 = add i64 %38, %51
  %53 = and i64 %52, %25
  %54 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %47, i64 %53, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %1
  br i1 %56, label %68, label %57, !prof !3

57:                                               ; preds = %48
  %58 = add i32 %49, -1
  %59 = and i32 %58, %49
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %48

61:                                               ; preds = %57, %35
  %62 = icmp eq <16 x i8> %41, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %63 = bitcast <16 x i1> %62 to i16
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %65, label %77, !prof !4

65:                                               ; preds = %61
  %66 = add i64 %37, 16
  %67 = add i64 %66, %38
  br label %35

68:                                               ; preds = %48
  %69 = getelementptr inbounds i8, i8* %23, i64 %53
  %70 = icmp ne i8* %69, null
  tail call void @llvm.assume(i1 %70) #11
  %71 = load i8, i8* %69, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %74, label %73, !prof !3

73:                                               ; preds = %68
  tail call void @llvm.trap() #11
  unreachable

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %47, i64 %53, i32 0, i32 1
  %76 = load %"class.gl::Sampler"*, %"class.gl::Sampler"** %75, align 8
  br label %77

77:                                               ; preds = %61, %7, %74
  %78 = phi %"class.gl::Sampler"* [ %13, %7 ], [ %76, %74 ], [ null, %61 ]
  ret %"class.gl::Sampler"* %78
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2gl14SamplerManager9isSamplerENS_9SamplerIDE(%"class.gl::SamplerManager"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1, i32 1
  %9 = load %"class.gl::Sampler"**, %"class.gl::Sampler"*** %8, align 8
  %10 = getelementptr inbounds %"class.gl::Sampler"*, %"class.gl::Sampler"** %9, i64 %3
  %11 = load %"class.gl::Sampler"*, %"class.gl::Sampler"** %10, align 8
  %12 = icmp ne %"class.gl::Sampler"* %11, inttoptr (i64 -1 to %"class.gl::Sampler"*)
  br label %76

13:                                               ; preds = %2
  %14 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %15 = add i64 %14, %3
  %16 = zext i64 %15 to i128
  %17 = mul nuw i128 %16, 11376068507788127593
  %18 = lshr i128 %17, 64
  %19 = xor i128 %18, %17
  %20 = trunc i128 %19 to i64
  %21 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = lshr i64 %20, 7
  %26 = ptrtoint i8* %22 to i64
  %27 = lshr i64 %26, 12
  %28 = xor i64 %25, %27
  %29 = trunc i128 %19 to i8
  %30 = and i8 %29, 127
  %31 = insertelement <16 x i8> undef, i8 %30, i32 0
  %32 = shufflevector <16 x i8> %31, <16 x i8> undef, <16 x i32> zeroinitializer
  %33 = getelementptr inbounds %"class.gl::SamplerManager", %"class.gl::SamplerManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %34

34:                                               ; preds = %64, %13
  %35 = phi i64 [ %28, %13 ], [ %66, %64 ]
  %36 = phi i64 [ 0, %13 ], [ %65, %64 ]
  %37 = and i64 %35, %24
  %38 = getelementptr inbounds i8, i8* %22, i64 %37
  %39 = bitcast i8* %38 to <16 x i8>*
  %40 = load <16 x i8>, <16 x i8>* %39, align 1
  %41 = icmp eq <16 x i8> %32, %40
  %42 = bitcast <16 x i1> %41 to i16
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %60, label %44

44:                                               ; preds = %34
  %45 = zext i16 %42 to i32
  %46 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %33, align 8
  br label %47

47:                                               ; preds = %56, %44
  %48 = phi i32 [ %45, %44 ], [ %58, %56 ]
  %49 = tail call i32 @llvm.cttz.i32(i32 %48, i1 false) #11, !range !2
  %50 = zext i32 %49 to i64
  %51 = add i64 %37, %50
  %52 = and i64 %51, %24
  %53 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %46, i64 %52, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %1
  br i1 %55, label %67, label %56, !prof !3

56:                                               ; preds = %47
  %57 = add i32 %48, -1
  %58 = and i32 %57, %48
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %47

60:                                               ; preds = %56, %34
  %61 = icmp eq <16 x i8> %40, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %62 = bitcast <16 x i1> %61 to i16
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %64, label %73, !prof !4

64:                                               ; preds = %60
  %65 = add i64 %36, 16
  %66 = add i64 %65, %37
  br label %34

67:                                               ; preds = %47
  %68 = getelementptr inbounds i8, i8* %22, i64 %52
  %69 = icmp ne i8* %68, null
  tail call void @llvm.assume(i1 %69) #11
  %70 = load i8, i8* %68, align 1
  %71 = icmp sgt i8 %70, -1
  br i1 %71, label %73, label %72, !prof !3

72:                                               ; preds = %67
  tail call void @llvm.trap() #11
  unreachable

73:                                               ; preds = %60, %67
  %74 = phi i8* [ %68, %67 ], [ null, %60 ]
  %75 = icmp ne i8* %74, null
  br label %76

76:                                               ; preds = %7, %73
  %77 = phi i1 [ %12, %7 ], [ %75, %73 ]
  ret i1 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl11SyncManagerD2Ev(%"class.gl::SyncManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::SyncManager", %"class.gl::SyncManager"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::SyncManager", %"class.gl::SyncManager"* %0, i64 0, i32 0, i32 1, i32 1
  %4 = load %"class.gl::Sync"**, %"class.gl::Sync"*** %3, align 8
  %5 = icmp eq %"class.gl::Sync"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Sync"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::SyncManager", %"class.gl::SyncManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::SyncManager", %"class.gl::SyncManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::SyncManager", %"class.gl::SyncManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.308"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::SyncManager", %"class.gl::SyncManager"* %0, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl11SyncManagerD0Ev(%"class.gl::SyncManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::SyncManager", %"class.gl::SyncManager"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_4SyncENS_11SyncManagerEjEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::SyncManager", %"class.gl::SyncManager"* %0, i64 0, i32 0, i32 1, i32 1
  %4 = load %"class.gl::Sync"**, %"class.gl::Sync"*** %3, align 8
  %5 = icmp eq %"class.gl::Sync"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Sync"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::SyncManager", %"class.gl::SyncManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::SyncManager", %"class.gl::SyncManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::SyncManager", %"class.gl::SyncManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.308"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::SyncManager", %"class.gl::SyncManager"* %0, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  %19 = bitcast %"class.gl::SyncManager"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl11SyncManager10createSyncEPN2rx13GLImplFactoryE(%"class.gl::SyncManager"*, %"class.rx::GLImplFactory"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::SyncManager", %"class.gl::SyncManager"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = tail call i32 @_ZN2gl15HandleAllocator8allocateEv(%"class.gl::HandleAllocator"* %3) #11
  %5 = tail call i8* @_Znwm(i64 80) #14
  %6 = bitcast i8* %5 to %"class.gl::Sync"*
  tail call void @_ZN2gl4SyncC1EPN2rx13GLImplFactoryEj(%"class.gl::Sync"* nonnull %6, %"class.rx::GLImplFactory"* %1, i32 %4) #11
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 1
  store i64 %10, i64* %8, align 8
  %11 = getelementptr inbounds %"class.gl::SyncManager", %"class.gl::SyncManager"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl11ResourceMapINS_4SyncEjE6assignEjPS1_(%"class.gl::ResourceMap.304"* %11, i32 %4, %"class.gl::Sync"* nonnull %6)
  ret i32 %4
}

declare void @_ZN2gl4SyncC1EPN2rx13GLImplFactoryEj(%"class.gl::Sync"*, %"class.rx::GLImplFactory"*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl11ResourceMapINS_4SyncEjE6assignEjPS1_(%"class.gl::ResourceMap.304"*, i32, %"class.gl::Sync"*) local_unnamed_addr #3 comdat align 2 {
  %4 = icmp ult i32 %1, 16384
  br i1 %4, label %5, label %36

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap.304", %"class.gl::ResourceMap.304"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %32, label %10

10:                                               ; preds = %5, %10
  %11 = phi i64 [ %13, %10 ], [ %8, %5 ]
  %12 = icmp ugt i64 %11, %6
  %13 = shl i64 %11, 1
  br i1 %12, label %14, label %10

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gl::ResourceMap.304", %"class.gl::ResourceMap.304"* %0, i64 0, i32 1
  %16 = load %"class.gl::Sync"**, %"class.gl::Sync"*** %15, align 8
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #14
  %22 = bitcast i8* %21 to %"class.gl::Sync"**
  %23 = bitcast %"class.gl::Sync"*** %15 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.gl::Sync"*, %"class.gl::Sync"** %22, i64 %8
  %25 = bitcast %"class.gl::Sync"** %24 to i8*
  %26 = sub i64 %11, %8
  %27 = shl i64 %26, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -1, i64 %27, i1 false)
  %28 = bitcast %"class.gl::Sync"** %16 to i8*
  %29 = shl i64 %8, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %28, i64 %29, i1 false)
  store i64 %11, i64* %7, align 8
  %30 = icmp eq %"class.gl::Sync"** %16, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %14
  tail call void @_ZdaPv(i8* %28) #14
  br label %32

32:                                               ; preds = %14, %31, %5
  %33 = getelementptr inbounds %"class.gl::ResourceMap.304", %"class.gl::ResourceMap.304"* %0, i64 0, i32 1
  %34 = load %"class.gl::Sync"**, %"class.gl::Sync"*** %33, align 8
  %35 = getelementptr inbounds %"class.gl::Sync"*, %"class.gl::Sync"** %34, i64 %6
  br label %111

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.gl::ResourceMap.304", %"class.gl::ResourceMap.304"* %0, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.306", %"class.absl::container_internal::raw_hash_map.306"* %37, i64 0, i32 0
  %39 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !70
  %40 = zext i32 %1 to i64
  %41 = add i64 %39, %40
  %42 = zext i64 %41 to i128
  %43 = mul nuw i128 %42, 11376068507788127593
  %44 = lshr i128 %43, 64
  %45 = xor i128 %44, %43
  %46 = trunc i128 %45 to i64
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.306", %"class.absl::container_internal::raw_hash_map.306"* %37, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8, !noalias !70
  %49 = getelementptr inbounds %"class.gl::ResourceMap.304", %"class.gl::ResourceMap.304"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %50 = load i64, i64* %49, align 8, !noalias !70
  %51 = lshr i64 %46, 7
  %52 = ptrtoint i8* %48 to i64
  %53 = lshr i64 %52, 12
  %54 = xor i64 %51, %53
  %55 = trunc i128 %45 to i8
  %56 = and i8 %55, 127
  %57 = insertelement <16 x i8> undef, i8 %56, i32 0
  %58 = shufflevector <16 x i8> %57, <16 x i8> undef, <16 x i32> zeroinitializer
  %59 = getelementptr inbounds %"class.gl::ResourceMap.304", %"class.gl::ResourceMap.304"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %60

60:                                               ; preds = %90, %36
  %61 = phi i64 [ %54, %36 ], [ %92, %90 ]
  %62 = phi i64 [ 0, %36 ], [ %91, %90 ]
  %63 = and i64 %61, %50
  %64 = getelementptr inbounds i8, i8* %48, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !noalias !70
  %67 = icmp eq <16 x i8> %58, %66
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %60
  %71 = zext i16 %68 to i32
  %72 = load %"union.absl::container_internal::map_slot_type.308"*, %"union.absl::container_internal::map_slot_type.308"** %59, align 8, !noalias !70
  br label %73

73:                                               ; preds = %82, %70
  %74 = phi i32 [ %71, %70 ], [ %84, %82 ]
  %75 = tail call i32 @llvm.cttz.i32(i32 %74, i1 false) #11, !range !2
  %76 = zext i32 %75 to i64
  %77 = add i64 %63, %76
  %78 = and i64 %77, %50
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %72, i64 %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 4, !noalias !70
  %81 = icmp eq i32 %80, %1
  br i1 %81, label %100, label %82, !prof !3

82:                                               ; preds = %73
  %83 = add i32 %74, -1
  %84 = and i32 %83, %74
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %73

86:                                               ; preds = %82, %60
  %87 = icmp eq <16 x i8> %66, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %88 = bitcast <16 x i1> %87 to i16
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %93, !prof !4

90:                                               ; preds = %86
  %91 = add i64 %62, 16
  %92 = add i64 %91, %63
  br label %60

93:                                               ; preds = %86
  %94 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl4SyncEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.307"* %38, i64 %46) #11, !noalias !70
  %95 = load %"union.absl::container_internal::map_slot_type.308"*, %"union.absl::container_internal::map_slot_type.308"** %59, align 8, !noalias !70
  %96 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %95, i64 %94, i32 0, i32 0
  store i32 %1, i32* %96, align 8, !noalias !70
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %95, i64 %94, i32 0, i32 1
  store %"class.gl::Sync"* null, %"class.gl::Sync"** %97, align 8, !noalias !70
  %98 = load i8*, i8** %47, align 8, !noalias !70
  %99 = load %"union.absl::container_internal::map_slot_type.308"*, %"union.absl::container_internal::map_slot_type.308"** %59, align 8, !noalias !70
  br label %100

100:                                              ; preds = %73, %93
  %101 = phi %"union.absl::container_internal::map_slot_type.308"* [ %99, %93 ], [ %72, %73 ]
  %102 = phi i8* [ %98, %93 ], [ %48, %73 ]
  %103 = phi i64 [ %94, %93 ], [ %78, %73 ]
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = icmp ne i8* %104, null
  tail call void @llvm.assume(i1 %105) #11, !noalias !70
  %106 = load i8, i8* %104, align 1
  %107 = icmp sgt i8 %106, -1
  br i1 %107, label %109, label %108, !prof !3

108:                                              ; preds = %100
  tail call void @llvm.trap() #11
  unreachable

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %101, i64 %103, i32 0, i32 1
  br label %111

111:                                              ; preds = %109, %32
  %112 = phi %"class.gl::Sync"** [ %110, %109 ], [ %35, %32 ]
  store %"class.gl::Sync"* %2, %"class.gl::Sync"** %112, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Sync"* @_ZNK2gl11SyncManager7getSyncEj(%"class.gl::SyncManager"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gl::SyncManager", %"class.gl::SyncManager"* %0, i64 0, i32 0, i32 1, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::SyncManager", %"class.gl::SyncManager"* %0, i64 0, i32 0, i32 1, i32 1
  %9 = load %"class.gl::Sync"**, %"class.gl::Sync"*** %8, align 8
  %10 = getelementptr inbounds %"class.gl::Sync"*, %"class.gl::Sync"** %9, i64 %3
  %11 = load %"class.gl::Sync"*, %"class.gl::Sync"** %10, align 8
  %12 = icmp eq %"class.gl::Sync"* %11, inttoptr (i64 -1 to %"class.gl::Sync"*)
  %13 = select i1 %12, %"class.gl::Sync"* null, %"class.gl::Sync"* %11
  br label %77

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %16 = add i64 %15, %3
  %17 = zext i64 %16 to i128
  %18 = mul nuw i128 %17, 11376068507788127593
  %19 = lshr i128 %18, 64
  %20 = xor i128 %19, %18
  %21 = trunc i128 %20 to i64
  %22 = getelementptr inbounds %"class.gl::SyncManager", %"class.gl::SyncManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.gl::SyncManager", %"class.gl::SyncManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = lshr i64 %21, 7
  %27 = ptrtoint i8* %23 to i64
  %28 = lshr i64 %27, 12
  %29 = xor i64 %26, %28
  %30 = trunc i128 %20 to i8
  %31 = and i8 %30, 127
  %32 = insertelement <16 x i8> undef, i8 %31, i32 0
  %33 = shufflevector <16 x i8> %32, <16 x i8> undef, <16 x i32> zeroinitializer
  %34 = getelementptr inbounds %"class.gl::SyncManager", %"class.gl::SyncManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %35

35:                                               ; preds = %65, %14
  %36 = phi i64 [ %29, %14 ], [ %67, %65 ]
  %37 = phi i64 [ 0, %14 ], [ %66, %65 ]
  %38 = and i64 %36, %25
  %39 = getelementptr inbounds i8, i8* %23, i64 %38
  %40 = bitcast i8* %39 to <16 x i8>*
  %41 = load <16 x i8>, <16 x i8>* %40, align 1
  %42 = icmp eq <16 x i8> %33, %41
  %43 = bitcast <16 x i1> %42 to i16
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %35
  %46 = zext i16 %43 to i32
  %47 = load %"union.absl::container_internal::map_slot_type.308"*, %"union.absl::container_internal::map_slot_type.308"** %34, align 8
  br label %48

48:                                               ; preds = %57, %45
  %49 = phi i32 [ %46, %45 ], [ %59, %57 ]
  %50 = tail call i32 @llvm.cttz.i32(i32 %49, i1 false) #11, !range !2
  %51 = zext i32 %50 to i64
  %52 = add i64 %38, %51
  %53 = and i64 %52, %25
  %54 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %47, i64 %53, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %1
  br i1 %56, label %68, label %57, !prof !3

57:                                               ; preds = %48
  %58 = add i32 %49, -1
  %59 = and i32 %58, %49
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %48

61:                                               ; preds = %57, %35
  %62 = icmp eq <16 x i8> %41, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %63 = bitcast <16 x i1> %62 to i16
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %65, label %77, !prof !4

65:                                               ; preds = %61
  %66 = add i64 %37, 16
  %67 = add i64 %66, %38
  br label %35

68:                                               ; preds = %48
  %69 = getelementptr inbounds i8, i8* %23, i64 %53
  %70 = icmp ne i8* %69, null
  tail call void @llvm.assume(i1 %70) #11
  %71 = load i8, i8* %69, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %74, label %73, !prof !3

73:                                               ; preds = %68
  tail call void @llvm.trap() #11
  unreachable

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %47, i64 %53, i32 0, i32 1
  %76 = load %"class.gl::Sync"*, %"class.gl::Sync"** %75, align 8
  br label %77

77:                                               ; preds = %61, %7, %74
  %78 = phi %"class.gl::Sync"* [ %13, %7 ], [ %76, %74 ], [ null, %61 ]
  ret %"class.gl::Sync"* %78
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl18FramebufferManagerD2Ev(%"class.gl::FramebufferManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 1
  %4 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %3, align 8
  %5 = icmp eq %"class.gl::Framebuffer"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Framebuffer"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.319"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl18FramebufferManagerD0Ev(%"class.gl::FramebufferManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_11FramebufferENS_18FramebufferManagerENS_13FramebufferIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 1
  %4 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %3, align 8
  %5 = icmp eq %"class.gl::Framebuffer"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Framebuffer"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.319"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  %19 = bitcast %"class.gl::FramebufferManager"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.gl::Framebuffer"* @_ZN2gl18FramebufferManager17AllocateNewObjectEPN2rx13GLImplFactoryENS_13FramebufferIDERKNS_4CapsEPN3egl10ShareGroupE(%"class.rx::GLImplFactory"*, i32, %"struct.gl::Caps"* dereferenceable(872), %"class.egl::ShareGroup"*) local_unnamed_addr #1 align 2 {
  %5 = tail call i8* @_Znwm(i64 728) #14
  %6 = bitcast i8* %5 to %"class.gl::Framebuffer"*
  tail call void @_ZN2gl11FramebufferC1ERKNS_4CapsEPN2rx13GLImplFactoryENS_13FramebufferIDEPN3egl10ShareGroupE(%"class.gl::Framebuffer"* nonnull %6, %"struct.gl::Caps"* dereferenceable(872) %2, %"class.rx::GLImplFactory"* %0, i32 %1, %"class.egl::ShareGroup"* %3) #11
  ret %"class.gl::Framebuffer"* %6
}

declare void @_ZN2gl11FramebufferC1ERKNS_4CapsEPN2rx13GLImplFactoryENS_13FramebufferIDEPN3egl10ShareGroupE(%"class.gl::Framebuffer"*, %"struct.gl::Caps"* dereferenceable(872), %"class.rx::GLImplFactory"*, i32, %"class.egl::ShareGroup"*) unnamed_addr #4

declare void @_ZN2gl11Framebuffer9onDestroyEPKNS_7ContextE(%"class.gl::Framebuffer"*, %"class.gl::Context"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl18FramebufferManager17createFramebufferEv(%"class.gl::FramebufferManager"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1
  %4 = tail call i32 @_ZN2gl15HandleAllocator8allocateEv(%"class.gl::HandleAllocator"* %2) #11
  tail call void @_ZN2gl11ResourceMapINS_11FramebufferENS_13FramebufferIDEE6assignES2_PS1_(%"class.gl::ResourceMap.315"* %3, i32 %4, %"class.gl::Framebuffer"* null) #11
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Framebuffer"* @_ZNK2gl18FramebufferManager14getFramebufferENS_13FramebufferIDE(%"class.gl::FramebufferManager"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 1
  %9 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %8, align 8
  %10 = getelementptr inbounds %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %9, i64 %3
  %11 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %10, align 8
  %12 = icmp eq %"class.gl::Framebuffer"* %11, inttoptr (i64 -1 to %"class.gl::Framebuffer"*)
  %13 = select i1 %12, %"class.gl::Framebuffer"* null, %"class.gl::Framebuffer"* %11
  br label %77

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %16 = add i64 %15, %3
  %17 = zext i64 %16 to i128
  %18 = mul nuw i128 %17, 11376068507788127593
  %19 = lshr i128 %18, 64
  %20 = xor i128 %19, %18
  %21 = trunc i128 %20 to i64
  %22 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = lshr i64 %21, 7
  %27 = ptrtoint i8* %23 to i64
  %28 = lshr i64 %27, 12
  %29 = xor i64 %26, %28
  %30 = trunc i128 %20 to i8
  %31 = and i8 %30, 127
  %32 = insertelement <16 x i8> undef, i8 %31, i32 0
  %33 = shufflevector <16 x i8> %32, <16 x i8> undef, <16 x i32> zeroinitializer
  %34 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %35

35:                                               ; preds = %65, %14
  %36 = phi i64 [ %29, %14 ], [ %67, %65 ]
  %37 = phi i64 [ 0, %14 ], [ %66, %65 ]
  %38 = and i64 %36, %25
  %39 = getelementptr inbounds i8, i8* %23, i64 %38
  %40 = bitcast i8* %39 to <16 x i8>*
  %41 = load <16 x i8>, <16 x i8>* %40, align 1
  %42 = icmp eq <16 x i8> %33, %41
  %43 = bitcast <16 x i1> %42 to i16
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %35
  %46 = zext i16 %43 to i32
  %47 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %34, align 8
  br label %48

48:                                               ; preds = %57, %45
  %49 = phi i32 [ %46, %45 ], [ %59, %57 ]
  %50 = tail call i32 @llvm.cttz.i32(i32 %49, i1 false) #11, !range !2
  %51 = zext i32 %50 to i64
  %52 = add i64 %38, %51
  %53 = and i64 %52, %25
  %54 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %47, i64 %53, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %1
  br i1 %56, label %68, label %57, !prof !3

57:                                               ; preds = %48
  %58 = add i32 %49, -1
  %59 = and i32 %58, %49
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %48

61:                                               ; preds = %57, %35
  %62 = icmp eq <16 x i8> %41, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %63 = bitcast <16 x i1> %62 to i16
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %65, label %77, !prof !4

65:                                               ; preds = %61
  %66 = add i64 %37, 16
  %67 = add i64 %66, %38
  br label %35

68:                                               ; preds = %48
  %69 = getelementptr inbounds i8, i8* %23, i64 %53
  %70 = icmp ne i8* %69, null
  tail call void @llvm.assume(i1 %70) #11
  %71 = load i8, i8* %69, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %74, label %73, !prof !3

73:                                               ; preds = %68
  tail call void @llvm.trap() #11
  unreachable

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %47, i64 %53, i32 0, i32 1
  %76 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %75, align 8
  br label %77

77:                                               ; preds = %61, %7, %74
  %78 = phi %"class.gl::Framebuffer"* [ %13, %7 ], [ %76, %74 ], [ null, %61 ]
  ret %"class.gl::Framebuffer"* %78
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl18FramebufferManager21setDefaultFramebufferEPNS_11FramebufferE(%"class.gl::FramebufferManager"*, %"class.gl::Framebuffer"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* getelementptr inbounds (%"struct.gl::FramebufferID", %"struct.gl::FramebufferID"* @_ZN2gl11Framebuffer29kDefaultDrawFramebufferHandleE, i64 0, i32 0), align 4
  tail call void @_ZN2gl11ResourceMapINS_11FramebufferENS_13FramebufferIDEE6assignES2_PS1_(%"class.gl::ResourceMap.315"* %3, i32 %4, %"class.gl::Framebuffer"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl11ResourceMapINS_11FramebufferENS_13FramebufferIDEE6assignES2_PS1_(%"class.gl::ResourceMap.315"*, i32, %"class.gl::Framebuffer"*) local_unnamed_addr #3 comdat align 2 {
  %4 = icmp ult i32 %1, 16384
  br i1 %4, label %5, label %36

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %32, label %10

10:                                               ; preds = %5, %10
  %11 = phi i64 [ %13, %10 ], [ %8, %5 ]
  %12 = icmp ugt i64 %11, %6
  %13 = shl i64 %11, 1
  br i1 %12, label %14, label %10

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %0, i64 0, i32 1
  %16 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %15, align 8
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #14
  %22 = bitcast i8* %21 to %"class.gl::Framebuffer"**
  %23 = bitcast %"class.gl::Framebuffer"*** %15 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %22, i64 %8
  %25 = bitcast %"class.gl::Framebuffer"** %24 to i8*
  %26 = sub i64 %11, %8
  %27 = shl i64 %26, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -1, i64 %27, i1 false)
  %28 = bitcast %"class.gl::Framebuffer"** %16 to i8*
  %29 = shl i64 %8, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %28, i64 %29, i1 false)
  store i64 %11, i64* %7, align 8
  %30 = icmp eq %"class.gl::Framebuffer"** %16, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %14
  tail call void @_ZdaPv(i8* %28) #14
  br label %32

32:                                               ; preds = %14, %31, %5
  %33 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %0, i64 0, i32 1
  %34 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %33, align 8
  %35 = getelementptr inbounds %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %34, i64 %6
  br label %111

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %0, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.317", %"class.absl::container_internal::raw_hash_map.317"* %37, i64 0, i32 0
  %39 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !73
  %40 = zext i32 %1 to i64
  %41 = add i64 %39, %40
  %42 = zext i64 %41 to i128
  %43 = mul nuw i128 %42, 11376068507788127593
  %44 = lshr i128 %43, 64
  %45 = xor i128 %44, %43
  %46 = trunc i128 %45 to i64
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.317", %"class.absl::container_internal::raw_hash_map.317"* %37, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8, !noalias !73
  %49 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %50 = load i64, i64* %49, align 8, !noalias !73
  %51 = lshr i64 %46, 7
  %52 = ptrtoint i8* %48 to i64
  %53 = lshr i64 %52, 12
  %54 = xor i64 %51, %53
  %55 = trunc i128 %45 to i8
  %56 = and i8 %55, 127
  %57 = insertelement <16 x i8> undef, i8 %56, i32 0
  %58 = shufflevector <16 x i8> %57, <16 x i8> undef, <16 x i32> zeroinitializer
  %59 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %60

60:                                               ; preds = %90, %36
  %61 = phi i64 [ %54, %36 ], [ %92, %90 ]
  %62 = phi i64 [ 0, %36 ], [ %91, %90 ]
  %63 = and i64 %61, %50
  %64 = getelementptr inbounds i8, i8* %48, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !noalias !73
  %67 = icmp eq <16 x i8> %58, %66
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %60
  %71 = zext i16 %68 to i32
  %72 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %59, align 8, !noalias !73
  br label %73

73:                                               ; preds = %82, %70
  %74 = phi i32 [ %71, %70 ], [ %84, %82 ]
  %75 = tail call i32 @llvm.cttz.i32(i32 %74, i1 false) #11, !range !2
  %76 = zext i32 %75 to i64
  %77 = add i64 %63, %76
  %78 = and i64 %77, %50
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %72, i64 %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 4, !noalias !73
  %81 = icmp eq i32 %80, %1
  br i1 %81, label %100, label %82, !prof !3

82:                                               ; preds = %73
  %83 = add i32 %74, -1
  %84 = and i32 %83, %74
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %73

86:                                               ; preds = %82, %60
  %87 = icmp eq <16 x i8> %66, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %88 = bitcast <16 x i1> %87 to i16
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %93, !prof !4

90:                                               ; preds = %86
  %91 = add i64 %62, 16
  %92 = add i64 %91, %63
  br label %60

93:                                               ; preds = %86
  %94 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.318"* %38, i64 %46) #11, !noalias !73
  %95 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %59, align 8, !noalias !73
  %96 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %95, i64 %94, i32 0, i32 0
  store i32 %1, i32* %96, align 8, !noalias !73
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %95, i64 %94, i32 0, i32 1
  store %"class.gl::Framebuffer"* null, %"class.gl::Framebuffer"** %97, align 8, !noalias !73
  %98 = load i8*, i8** %47, align 8, !noalias !73
  %99 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %59, align 8, !noalias !73
  br label %100

100:                                              ; preds = %73, %93
  %101 = phi %"union.absl::container_internal::map_slot_type.319"* [ %99, %93 ], [ %72, %73 ]
  %102 = phi i8* [ %98, %93 ], [ %48, %73 ]
  %103 = phi i64 [ %94, %93 ], [ %78, %73 ]
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = icmp ne i8* %104, null
  tail call void @llvm.assume(i1 %105) #11, !noalias !73
  %106 = load i8, i8* %104, align 1
  %107 = icmp sgt i8 %106, -1
  br i1 %107, label %109, label %108, !prof !3

108:                                              ; preds = %100
  tail call void @llvm.trap() #11
  unreachable

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %101, i64 %103, i32 0, i32 1
  br label %111

111:                                              ; preds = %109, %32
  %112 = phi %"class.gl::Framebuffer"** [ %110, %109 ], [ %35, %32 ]
  store %"class.gl::Framebuffer"* %2, %"class.gl::Framebuffer"** %112, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Framebuffer"* @_ZNK2gl18FramebufferManager21getDefaultFramebufferEv(%"class.gl::FramebufferManager"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = load i32, i32* getelementptr inbounds (%"struct.gl::FramebufferID", %"struct.gl::FramebufferID"* @_ZN2gl11Framebuffer29kDefaultDrawFramebufferHandleE, i64 0, i32 0), align 4
  %3 = zext i32 %2 to i64
  %4 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %7, label %14

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 1
  %9 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %8, align 8
  %10 = getelementptr inbounds %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %9, i64 %3
  %11 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %10, align 8
  %12 = icmp eq %"class.gl::Framebuffer"* %11, inttoptr (i64 -1 to %"class.gl::Framebuffer"*)
  %13 = select i1 %12, %"class.gl::Framebuffer"* null, %"class.gl::Framebuffer"* %11
  br label %77

14:                                               ; preds = %1
  %15 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %16 = add i64 %15, %3
  %17 = zext i64 %16 to i128
  %18 = mul nuw i128 %17, 11376068507788127593
  %19 = lshr i128 %18, 64
  %20 = xor i128 %19, %18
  %21 = trunc i128 %20 to i64
  %22 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = lshr i64 %21, 7
  %27 = ptrtoint i8* %23 to i64
  %28 = lshr i64 %27, 12
  %29 = xor i64 %26, %28
  %30 = trunc i128 %20 to i8
  %31 = and i8 %30, 127
  %32 = insertelement <16 x i8> undef, i8 %31, i32 0
  %33 = shufflevector <16 x i8> %32, <16 x i8> undef, <16 x i32> zeroinitializer
  %34 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %35

35:                                               ; preds = %65, %14
  %36 = phi i64 [ %29, %14 ], [ %67, %65 ]
  %37 = phi i64 [ 0, %14 ], [ %66, %65 ]
  %38 = and i64 %36, %25
  %39 = getelementptr inbounds i8, i8* %23, i64 %38
  %40 = bitcast i8* %39 to <16 x i8>*
  %41 = load <16 x i8>, <16 x i8>* %40, align 1
  %42 = icmp eq <16 x i8> %33, %41
  %43 = bitcast <16 x i1> %42 to i16
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %35
  %46 = zext i16 %43 to i32
  %47 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %34, align 8
  br label %48

48:                                               ; preds = %57, %45
  %49 = phi i32 [ %46, %45 ], [ %59, %57 ]
  %50 = tail call i32 @llvm.cttz.i32(i32 %49, i1 false) #11, !range !2
  %51 = zext i32 %50 to i64
  %52 = add i64 %38, %51
  %53 = and i64 %52, %25
  %54 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %47, i64 %53, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %2
  br i1 %56, label %68, label %57, !prof !3

57:                                               ; preds = %48
  %58 = add i32 %49, -1
  %59 = and i32 %58, %49
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %48

61:                                               ; preds = %57, %35
  %62 = icmp eq <16 x i8> %41, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %63 = bitcast <16 x i1> %62 to i16
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %65, label %77, !prof !4

65:                                               ; preds = %61
  %66 = add i64 %37, 16
  %67 = add i64 %66, %38
  br label %35

68:                                               ; preds = %48
  %69 = getelementptr inbounds i8, i8* %23, i64 %53
  %70 = icmp ne i8* %69, null
  tail call void @llvm.assume(i1 %70) #11
  %71 = load i8, i8* %69, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %74, label %73, !prof !3

73:                                               ; preds = %68
  tail call void @llvm.trap() #11
  unreachable

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %47, i64 %53, i32 0, i32 1
  %76 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %75, align 8
  br label %77

77:                                               ; preds = %61, %7, %74
  %78 = phi %"class.gl::Framebuffer"* [ %13, %7 ], [ %76, %74 ], [ null, %61 ]
  ret %"class.gl::Framebuffer"* %78
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2gl18FramebufferManager38invalidateFramebufferCompletenessCacheEv(%"class.gl::FramebufferManager"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", align 8
  %3 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 56, i1 false)
  %5 = getelementptr inbounds %"class.gl::ResourceMap.315", %"class.gl::ResourceMap.315"* %3, i64 0, i32 0
  %6 = load i64, i64* %5, align 8, !noalias !76
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %19, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 1
  %10 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %9, align 8, !noalias !76
  br label %11

11:                                               ; preds = %16, %8
  %12 = phi i64 [ 0, %8 ], [ %17, %16 ]
  %13 = getelementptr inbounds %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %10, i64 %12
  %14 = bitcast %"class.gl::Framebuffer"** %13 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !76
  switch i64 %15, label %19 [
    i64 -1, label %16
    i64 0, label %16
  ]

16:                                               ; preds = %11, %11
  %17 = add nuw i64 %12, 1
  %18 = icmp eq i64 %17, %6
  br i1 %18, label %19, label %11

19:                                               ; preds = %16, %11, %1
  %20 = phi i64 [ 0, %1 ], [ %6, %16 ], [ %12, %11 ]
  %21 = trunc i64 %20 to i32
  %22 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8, !noalias !76
  %24 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %25 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %24, align 8, !noalias !76
  %26 = icmp ne i8* %23, null
  tail call void @llvm.assume(i1 %26) #11, !noalias !76
  %27 = load i8, i8* %23, align 1, !noalias !76
  %28 = icmp slt i8 %27, -1
  br i1 %28, label %29, label %44

29:                                               ; preds = %19, %29
  %30 = phi %"union.absl::container_internal::map_slot_type.319"* [ %41, %29 ], [ %25, %19 ]
  %31 = phi i8* [ %40, %29 ], [ %23, %19 ]
  %32 = bitcast i8* %31 to <16 x i8>*
  %33 = load <16 x i8>, <16 x i8>* %32, align 1, !noalias !76
  %34 = icmp slt <16 x i8> %33, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %35 = bitcast <16 x i1> %34 to i16
  %36 = zext i16 %35 to i32
  %37 = add nuw nsw i32 %36, 1
  %38 = tail call i32 @llvm.cttz.i32(i32 %37, i1 true) #11, !range !2
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %31, i64 %39
  %41 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %30, i64 %39
  %42 = load i8, i8* %40, align 1, !noalias !76
  %43 = icmp slt i8 %42, -1
  br i1 %43, label %29, label %44

44:                                               ; preds = %29, %19
  %45 = phi %"union.absl::container_internal::map_slot_type.319"* [ %25, %19 ], [ %41, %29 ]
  %46 = phi i8* [ %23, %19 ], [ %40, %29 ]
  %47 = phi i8 [ %27, %19 ], [ %42, %29 ]
  %48 = icmp eq i8 %47, -1
  %49 = select i1 %48, i8* null, i8* %46, !prof !4
  %50 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %2, i64 0, i32 0
  store %"class.gl::ResourceMap.315"* %3, %"class.gl::ResourceMap.315"** %50, align 8, !alias.scope !76
  %51 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %2, i64 0, i32 1
  store i32 %21, i32* %51, align 8, !alias.scope !76
  %52 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %2, i64 0, i32 3, i32 0, i32 0
  store i8* %49, i8** %52, align 8, !alias.scope !76
  %53 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %2, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type.319"* %45, %"union.absl::container_internal::map_slot_type.319"** %53, align 8, !alias.scope !76
  %54 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %2, i64 0, i32 4, i32 0
  store i32 0, i32* %54, align 8, !alias.scope !76
  %55 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %2, i64 0, i32 4, i32 1
  store %"class.gl::Framebuffer"* null, %"class.gl::Framebuffer"** %55, align 8, !alias.scope !76
  %56 = getelementptr inbounds %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator", %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* %2, i64 0, i32 5
  store i8 1, i8* %56, align 8, !alias.scope !76
  %57 = trunc i64 %6 to i32
  %58 = icmp ugt i32 %57, %21
  br i1 %58, label %59, label %64

59:                                               ; preds = %44
  store i32 %21, i32* %54, align 8, !alias.scope !76
  %60 = getelementptr inbounds %"class.gl::FramebufferManager", %"class.gl::FramebufferManager"* %0, i64 0, i32 0, i32 1, i32 1
  %61 = load %"class.gl::Framebuffer"**, %"class.gl::Framebuffer"*** %60, align 8, !noalias !76
  %62 = and i64 %20, 4294967295
  %63 = getelementptr inbounds %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %61, i64 %62
  br label %74

64:                                               ; preds = %44
  %65 = icmp eq i8* %49, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %64
  %67 = load i8, i8* %49, align 1, !noalias !76
  %68 = icmp sgt i8 %67, -1
  br i1 %68, label %70, label %69, !prof !3

69:                                               ; preds = %66
  tail call void @llvm.trap() #11, !noalias !76
  unreachable

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %45, i64 0, i32 0, i32 0
  %72 = load i32, i32* %71, align 8, !noalias !76
  store i32 %72, i32* %54, align 8, !alias.scope !76
  %73 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %45, i64 0, i32 0, i32 1
  br label %74

74:                                               ; preds = %70, %59
  %75 = phi %"class.gl::Framebuffer"** [ %63, %59 ], [ %73, %70 ]
  %76 = bitcast %"class.gl::Framebuffer"** %75 to i64*
  %77 = load i64, i64* %76, align 8, !noalias !76
  %78 = bitcast %"class.gl::Framebuffer"** %55 to i64*
  store i64 %77, i64* %78, align 8, !alias.scope !76
  br label %79

79:                                               ; preds = %74, %64
  br label %80

80:                                               ; preds = %79, %95
  %81 = phi i32 [ %97, %95 ], [ %21, %79 ]
  %82 = icmp eq i32 %81, %57
  br i1 %82, label %83, label %91

83:                                               ; preds = %80
  %84 = load i8*, i8** %52, align 8
  %85 = icmp eq i8* %84, null
  br i1 %85, label %90, label %86

86:                                               ; preds = %83
  %87 = load i8, i8* %84, align 1
  %88 = icmp sgt i8 %87, -1
  br i1 %88, label %91, label %89, !prof !3

89:                                               ; preds = %86
  call void @llvm.trap() #11
  unreachable

90:                                               ; preds = %83
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #11
  ret void

91:                                               ; preds = %86, %80
  %92 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %55, align 8
  %93 = icmp eq %"class.gl::Framebuffer"* %92, null
  br i1 %93, label %95, label %94

94:                                               ; preds = %91
  call void @_ZN2gl11Framebuffer27invalidateCompletenessCacheEv(%"class.gl::Framebuffer"* nonnull %92) #11
  br label %95

95:                                               ; preds = %91, %94
  %96 = call dereferenceable(56) %"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* @_ZN2gl11ResourceMapINS_11FramebufferENS_13FramebufferIDEE8IteratorppEv(%"class.gl::ResourceMap<gl::Framebuffer, gl::FramebufferID>::Iterator"* nonnull %2)
  %97 = load i32, i32* %51, align 8
  br label %80
}

declare void @_ZN2gl11Framebuffer27invalidateCompletenessCacheEv(%"class.gl::Framebuffer"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl22ProgramPipelineManagerD2Ev(%"class.gl::ProgramPipelineManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 1, i32 1
  %4 = load %"class.gl::ProgramPipeline"**, %"class.gl::ProgramPipeline"*** %3, align 8
  %5 = icmp eq %"class.gl::ProgramPipeline"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::ProgramPipeline"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.347"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl22ProgramPipelineManagerD0Ev(%"class.gl::ProgramPipelineManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl20TypedResourceManagerINS_15ProgramPipelineENS_22ProgramPipelineManagerENS_17ProgramPipelineIDEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 1, i32 1
  %4 = load %"class.gl::ProgramPipeline"**, %"class.gl::ProgramPipeline"*** %3, align 8
  %5 = icmp eq %"class.gl::ProgramPipeline"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::ProgramPipeline"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.347"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  %19 = bitcast %"class.gl::ProgramPipelineManager"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.gl::ProgramPipeline"* @_ZN2gl22ProgramPipelineManager17AllocateNewObjectEPN2rx13GLImplFactoryENS_17ProgramPipelineIDE(%"class.rx::GLImplFactory"*, i32) local_unnamed_addr #1 align 2 {
  %3 = tail call i8* @_Znwm(i64 224) #14
  %4 = bitcast i8* %3 to %"class.gl::ProgramPipeline"*
  tail call void @_ZN2gl15ProgramPipelineC1EPN2rx13GLImplFactoryENS_17ProgramPipelineIDE(%"class.gl::ProgramPipeline"* nonnull %4, %"class.rx::GLImplFactory"* %0, i32 %1) #11
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  store i64 %8, i64* %6, align 8
  ret %"class.gl::ProgramPipeline"* %4
}

declare void @_ZN2gl15ProgramPipelineC1EPN2rx13GLImplFactoryENS_17ProgramPipelineIDE(%"class.gl::ProgramPipeline"*, %"class.rx::GLImplFactory"*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl22ProgramPipelineManager21createProgramPipelineEv(%"class.gl::ProgramPipelineManager"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 1
  %4 = tail call i32 @_ZN2gl15HandleAllocator8allocateEv(%"class.gl::HandleAllocator"* %2) #11
  tail call void @_ZN2gl11ResourceMapINS_15ProgramPipelineENS_17ProgramPipelineIDEE6assignES2_PS1_(%"class.gl::ResourceMap.326"* %3, i32 %4, %"class.gl::ProgramPipeline"* null) #11
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::ProgramPipeline"* @_ZNK2gl22ProgramPipelineManager18getProgramPipelineENS_17ProgramPipelineIDE(%"class.gl::ProgramPipelineManager"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 1, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 1, i32 1
  %9 = load %"class.gl::ProgramPipeline"**, %"class.gl::ProgramPipeline"*** %8, align 8
  %10 = getelementptr inbounds %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %9, i64 %3
  %11 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %10, align 8
  %12 = icmp eq %"class.gl::ProgramPipeline"* %11, inttoptr (i64 -1 to %"class.gl::ProgramPipeline"*)
  %13 = select i1 %12, %"class.gl::ProgramPipeline"* null, %"class.gl::ProgramPipeline"* %11
  br label %77

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %16 = add i64 %15, %3
  %17 = zext i64 %16 to i128
  %18 = mul nuw i128 %17, 11376068507788127593
  %19 = lshr i128 %18, 64
  %20 = xor i128 %19, %18
  %21 = trunc i128 %20 to i64
  %22 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = lshr i64 %21, 7
  %27 = ptrtoint i8* %23 to i64
  %28 = lshr i64 %27, 12
  %29 = xor i64 %26, %28
  %30 = trunc i128 %20 to i8
  %31 = and i8 %30, 127
  %32 = insertelement <16 x i8> undef, i8 %31, i32 0
  %33 = shufflevector <16 x i8> %32, <16 x i8> undef, <16 x i32> zeroinitializer
  %34 = getelementptr inbounds %"class.gl::ProgramPipelineManager", %"class.gl::ProgramPipelineManager"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %35

35:                                               ; preds = %65, %14
  %36 = phi i64 [ %29, %14 ], [ %67, %65 ]
  %37 = phi i64 [ 0, %14 ], [ %66, %65 ]
  %38 = and i64 %36, %25
  %39 = getelementptr inbounds i8, i8* %23, i64 %38
  %40 = bitcast i8* %39 to <16 x i8>*
  %41 = load <16 x i8>, <16 x i8>* %40, align 1
  %42 = icmp eq <16 x i8> %33, %41
  %43 = bitcast <16 x i1> %42 to i16
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %35
  %46 = zext i16 %43 to i32
  %47 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %34, align 8
  br label %48

48:                                               ; preds = %57, %45
  %49 = phi i32 [ %46, %45 ], [ %59, %57 ]
  %50 = tail call i32 @llvm.cttz.i32(i32 %49, i1 false) #11, !range !2
  %51 = zext i32 %50 to i64
  %52 = add i64 %38, %51
  %53 = and i64 %52, %25
  %54 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %47, i64 %53, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %1
  br i1 %56, label %68, label %57, !prof !3

57:                                               ; preds = %48
  %58 = add i32 %49, -1
  %59 = and i32 %58, %49
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %48

61:                                               ; preds = %57, %35
  %62 = icmp eq <16 x i8> %41, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %63 = bitcast <16 x i1> %62 to i16
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %65, label %77, !prof !4

65:                                               ; preds = %61
  %66 = add i64 %37, 16
  %67 = add i64 %66, %38
  br label %35

68:                                               ; preds = %48
  %69 = getelementptr inbounds i8, i8* %23, i64 %53
  %70 = icmp ne i8* %69, null
  tail call void @llvm.assume(i1 %70) #11
  %71 = load i8, i8* %69, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %74, label %73, !prof !3

73:                                               ; preds = %68
  tail call void @llvm.trap() #11
  unreachable

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %47, i64 %53, i32 0, i32 1
  %76 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %75, align 8
  br label %77

77:                                               ; preds = %61, %7, %74
  %78 = phi %"class.gl::ProgramPipeline"* [ %13, %7 ], [ %76, %74 ], [ null, %61 ]
  ret %"class.gl::ProgramPipeline"* %78
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19MemoryObjectManagerC2Ev(%"class.gl::MemoryObjectManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorC1Ev(%"class.gl::HandleAllocator"* %3) #11
  %4 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19MemoryObjectManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = bitcast i64* %4 to <2 x i64>*
  store <2 x i64> <i64 1, i64 32>, <2 x i64>* %5, align 8
  %6 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1, i32 1
  %7 = tail call i8* @_Znam(i64 256) #14
  %8 = bitcast %"class.gl::MemoryObject"*** %6 to i8**
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %11 = bitcast %"union.absl::container_internal::map_slot_type.357"** %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -1, i64 256, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19MemoryObjectManagerD2Ev(%"class.gl::MemoryObjectManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19MemoryObjectManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.gl::MemoryObject"**, %"class.gl::MemoryObject"*** %3, align 8
  %5 = icmp eq %"class.gl::MemoryObject"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::MemoryObject"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.357"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19MemoryObjectManagerD0Ev(%"class.gl::MemoryObjectManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19MemoryObjectManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.gl::MemoryObject"**, %"class.gl::MemoryObject"*** %3, align 8
  %5 = icmp eq %"class.gl::MemoryObject"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::MemoryObject"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.357"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  %19 = bitcast %"class.gl::MemoryObjectManager"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19MemoryObjectManager5resetEPKNS_7ContextE(%"class.gl::MemoryObjectManager"*, %"class.gl::Context"*) unnamed_addr #3 align 2 {
  %3 = alloca %"class.gl::MemoryObject"*, align 8
  %4 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.gl::ResourceMap.353", %"class.gl::ResourceMap.353"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1, i32 1
  %7 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %9 = bitcast %"class.gl::MemoryObject"** %3 to i8*
  %10 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 0, i32 1
  br label %11

11:                                               ; preds = %130, %2
  %12 = load i64, i64* %5, align 8, !noalias !79
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %24, label %14

14:                                               ; preds = %11
  %15 = load %"class.gl::MemoryObject"**, %"class.gl::MemoryObject"*** %6, align 8, !noalias !79
  br label %16

16:                                               ; preds = %21, %14
  %17 = phi i64 [ 0, %14 ], [ %22, %21 ]
  %18 = getelementptr inbounds %"class.gl::MemoryObject"*, %"class.gl::MemoryObject"** %15, i64 %17
  %19 = bitcast %"class.gl::MemoryObject"** %18 to i64*
  %20 = load i64, i64* %19, align 8, !noalias !79
  switch i64 %20, label %24 [
    i64 -1, label %21
    i64 0, label %21
  ]

21:                                               ; preds = %16, %16
  %22 = add nuw i64 %17, 1
  %23 = icmp eq i64 %22, %12
  br i1 %23, label %24, label %16

24:                                               ; preds = %21, %16, %11
  %25 = phi i64 [ 0, %11 ], [ %17, %16 ], [ %12, %21 ]
  %26 = trunc i64 %25 to i32
  %27 = load i8*, i8** %7, align 8, !noalias !79, !nonnull !51
  %28 = load i8, i8* %27, align 1, !noalias !79
  %29 = icmp slt i8 %28, -1
  br i1 %29, label %30, label %43

30:                                               ; preds = %24, %30
  %31 = phi i8* [ %40, %30 ], [ %27, %24 ]
  %32 = bitcast i8* %31 to <16 x i8>*
  %33 = load <16 x i8>, <16 x i8>* %32, align 1, !noalias !79
  %34 = icmp slt <16 x i8> %33, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %35 = bitcast <16 x i1> %34 to i16
  %36 = zext i16 %35 to i32
  %37 = add nuw nsw i32 %36, 1
  %38 = call i32 @llvm.cttz.i32(i32 %37, i1 true) #11, !range !2
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %31, i64 %39
  %41 = load i8, i8* %40, align 1, !noalias !79
  %42 = icmp slt i8 %41, -1
  br i1 %42, label %30, label %43

43:                                               ; preds = %30, %24
  %44 = phi i8* [ %27, %24 ], [ %40, %30 ]
  %45 = phi i8 [ %28, %24 ], [ %41, %30 ]
  %46 = icmp eq i8 %45, -1
  %47 = select i1 %46, i8* null, i8* %44, !prof !4
  %48 = trunc i64 %12 to i32
  %49 = icmp ugt i32 %48, %26
  %50 = icmp eq i8* %47, null
  %51 = or i1 %49, %50
  br i1 %51, label %56, label %52

52:                                               ; preds = %43
  %53 = load i8, i8* %47, align 1, !noalias !79
  %54 = icmp sgt i8 %53, -1
  br i1 %54, label %56, label %55, !prof !3

55:                                               ; preds = %52
  call void @llvm.trap() #11, !noalias !79
  unreachable

56:                                               ; preds = %52, %43
  %57 = icmp ne i32 %26, %48
  %58 = or i1 %57, %50
  br i1 %58, label %63, label %59

59:                                               ; preds = %56
  %60 = load i8, i8* %47, align 1
  %61 = icmp sgt i8 %60, -1
  br i1 %61, label %64, label %62, !prof !3

62:                                               ; preds = %59
  call void @llvm.trap() #11
  unreachable

63:                                               ; preds = %56
  br i1 %57, label %64, label %131

64:                                               ; preds = %63, %59
  br i1 %13, label %75, label %65

65:                                               ; preds = %64
  %66 = load %"class.gl::MemoryObject"**, %"class.gl::MemoryObject"*** %6, align 8, !noalias !82
  br label %67

67:                                               ; preds = %72, %65
  %68 = phi i64 [ 0, %65 ], [ %73, %72 ]
  %69 = getelementptr inbounds %"class.gl::MemoryObject"*, %"class.gl::MemoryObject"** %66, i64 %68
  %70 = bitcast %"class.gl::MemoryObject"** %69 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !82
  switch i64 %71, label %75 [
    i64 -1, label %72
    i64 0, label %72
  ]

72:                                               ; preds = %67, %67
  %73 = add nuw i64 %68, 1
  %74 = icmp eq i64 %73, %12
  br i1 %74, label %75, label %67

75:                                               ; preds = %72, %67, %64
  %76 = phi i64 [ 0, %64 ], [ %12, %72 ], [ %68, %67 ]
  %77 = trunc i64 %76 to i32
  %78 = load %"union.absl::container_internal::map_slot_type.357"*, %"union.absl::container_internal::map_slot_type.357"** %8, align 8, !noalias !82
  br i1 %29, label %79, label %94

79:                                               ; preds = %75, %79
  %80 = phi %"union.absl::container_internal::map_slot_type.357"* [ %91, %79 ], [ %78, %75 ]
  %81 = phi i8* [ %90, %79 ], [ %27, %75 ]
  %82 = bitcast i8* %81 to <16 x i8>*
  %83 = load <16 x i8>, <16 x i8>* %82, align 1, !noalias !82
  %84 = icmp slt <16 x i8> %83, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %85 = bitcast <16 x i1> %84 to i16
  %86 = zext i16 %85 to i32
  %87 = add nuw nsw i32 %86, 1
  %88 = call i32 @llvm.cttz.i32(i32 %87, i1 true) #11, !range !2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i8, i8* %81, i64 %89
  %91 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.357", %"union.absl::container_internal::map_slot_type.357"* %80, i64 %89
  %92 = load i8, i8* %90, align 1, !noalias !82
  %93 = icmp slt i8 %92, -1
  br i1 %93, label %79, label %94

94:                                               ; preds = %79, %75
  %95 = phi %"union.absl::container_internal::map_slot_type.357"* [ %78, %75 ], [ %91, %79 ]
  %96 = phi i8* [ %27, %75 ], [ %90, %79 ]
  %97 = phi i8 [ %28, %75 ], [ %92, %79 ]
  %98 = icmp eq i8 %97, -1
  %99 = select i1 %98, i8* null, i8* %96, !prof !4
  %100 = icmp ugt i32 %48, %77
  br i1 %100, label %110, label %101

101:                                              ; preds = %94
  %102 = icmp eq i8* %99, null
  br i1 %102, label %110, label %103

103:                                              ; preds = %101
  %104 = load i8, i8* %99, align 1, !noalias !82
  %105 = icmp sgt i8 %104, -1
  br i1 %105, label %107, label %106, !prof !3

106:                                              ; preds = %103
  call void @llvm.trap() #11, !noalias !82
  unreachable

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.357", %"union.absl::container_internal::map_slot_type.357"* %95, i64 0, i32 0, i32 0
  %109 = load i32, i32* %108, align 8, !noalias !82
  br label %110

110:                                              ; preds = %94, %101, %107
  %111 = phi i32 [ 0, %101 ], [ %109, %107 ], [ %77, %94 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  store %"class.gl::MemoryObject"* null, %"class.gl::MemoryObject"** %3, align 8
  %112 = call zeroext i1 @_ZN2gl11ResourceMapINS_12MemoryObjectENS_14MemoryObjectIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.353"* %4, i32 %111, %"class.gl::MemoryObject"** nonnull %3) #11
  br i1 %112, label %113, label %130

113:                                              ; preds = %110
  call void @_ZN2gl15HandleAllocator7releaseEj(%"class.gl::HandleAllocator"* %10, i32 %111) #11
  %114 = load %"class.gl::MemoryObject"*, %"class.gl::MemoryObject"** %3, align 8
  %115 = icmp eq %"class.gl::MemoryObject"* %114, null
  br i1 %115, label %130, label %116

116:                                              ; preds = %113
  %117 = getelementptr inbounds %"class.gl::MemoryObject", %"class.gl::MemoryObject"* %114, i64 0, i32 0, i32 0
  %118 = getelementptr inbounds %"class.gl::MemoryObject", %"class.gl::MemoryObject"* %114, i64 0, i32 0, i32 0, i32 1
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, -1
  store i64 %120, i64* %118, align 8
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %130

122:                                              ; preds = %116
  %123 = bitcast %"class.gl::MemoryObject"* %114 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %124 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %123, align 8
  %125 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %124, align 8
  call void %125(%"class.angle::RefCountObject"* %117, %"class.gl::Context"* %1) #11
  %126 = bitcast %"class.gl::MemoryObject"* %114 to void (%"class.angle::RefCountObject"*)***
  %127 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %127, i64 2
  %129 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %128, align 8
  call void %129(%"class.angle::RefCountObject"* nonnull %117) #11
  br label %130

130:                                              ; preds = %110, %113, %116, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %11

131:                                              ; preds = %63
  %132 = bitcast %"class.gl::MemoryObject"*** %6 to i8**
  %133 = load i8*, i8** %132, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 -1, i64 256, i1 false) #11
  store i64 32, i64* %5, align 8
  %134 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  %135 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %136 = load i64, i64* %135, align 8
  %137 = icmp ugt i64 %136, 127
  br i1 %137, label %138, label %142

138:                                              ; preds = %131
  %139 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.356", %"class.absl::container_internal::raw_hash_set.356"* %134, i64 0, i32 0
  %140 = load i8*, i8** %139, align 8
  call void @_ZdlPv(i8* %140) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %139, align 8
  %141 = bitcast %"union.absl::container_internal::map_slot_type.357"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 32, i1 false) #11
  br label %158

142:                                              ; preds = %131
  %143 = icmp eq i64 %136, 0
  br i1 %143, label %158, label %144

144:                                              ; preds = %142
  %145 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  store i64 0, i64* %145, align 8
  %146 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.356", %"class.absl::container_internal::raw_hash_set.356"* %134, i64 0, i32 0
  %147 = load i8*, i8** %146, align 8
  %148 = add nuw nsw i64 %136, 16
  call void @llvm.memset.p0i8.i64(i8* align 1 %147, i8 -128, i64 %148, i1 false) #11
  %149 = load i8*, i8** %146, align 8
  %150 = load i64, i64* %135, align 8
  %151 = getelementptr inbounds i8, i8* %149, i64 %150
  store i8 -1, i8* %151, align 1
  %152 = load i64, i64* %135, align 8
  %153 = lshr i64 %152, 3
  %154 = sub i64 %152, %153
  %155 = load i64, i64* %145, align 8
  %156 = sub i64 %154, %155
  %157 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %156, i64* %157, align 8
  br label %158

158:                                              ; preds = %138, %142, %144
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19MemoryObjectManager18deleteMemoryObjectEPKNS_7ContextENS_14MemoryObjectIDE(%"class.gl::MemoryObjectManager"*, %"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.gl::MemoryObject"*, align 8
  %5 = bitcast %"class.gl::MemoryObject"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  store %"class.gl::MemoryObject"* null, %"class.gl::MemoryObject"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1
  %7 = call zeroext i1 @_ZN2gl11ResourceMapINS_12MemoryObjectENS_14MemoryObjectIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.353"* %6, i32 %2, %"class.gl::MemoryObject"** nonnull %4)
  br i1 %7, label %8, label %26

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 0, i32 1
  call void @_ZN2gl15HandleAllocator7releaseEj(%"class.gl::HandleAllocator"* %9, i32 %2) #11
  %10 = load %"class.gl::MemoryObject"*, %"class.gl::MemoryObject"** %4, align 8
  %11 = icmp eq %"class.gl::MemoryObject"* %10, null
  br i1 %11, label %26, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::MemoryObject", %"class.gl::MemoryObject"* %10, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.gl::MemoryObject", %"class.gl::MemoryObject"* %10, i64 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, -1
  store i64 %16, i64* %14, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %26

18:                                               ; preds = %12
  %19 = bitcast %"class.gl::MemoryObject"* %10 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %20 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %19, align 8
  %21 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %20, align 8
  call void %21(%"class.angle::RefCountObject"* %13, %"class.gl::Context"* %1) #11
  %22 = bitcast %"class.gl::MemoryObject"* %10 to void (%"class.angle::RefCountObject"*)***
  %23 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %23, i64 2
  %25 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %24, align 8
  call void %25(%"class.angle::RefCountObject"* nonnull %13) #11
  br label %26

26:                                               ; preds = %18, %12, %8, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl19MemoryObjectManager18createMemoryObjectEPN2rx13GLImplFactoryE(%"class.gl::MemoryObjectManager"*, %"class.rx::GLImplFactory"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 0, i32 1
  %4 = tail call i32 @_ZN2gl15HandleAllocator8allocateEv(%"class.gl::HandleAllocator"* %3) #11
  %5 = tail call i8* @_Znwm(i64 48) #14
  %6 = bitcast i8* %5 to %"class.gl::MemoryObject"*
  tail call void @_ZN2gl12MemoryObjectC1EPN2rx13GLImplFactoryENS_14MemoryObjectIDE(%"class.gl::MemoryObject"* nonnull %6, %"class.rx::GLImplFactory"* %1, i32 %4) #11
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 1
  store i64 %10, i64* %8, align 8
  %11 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1
  tail call void @_ZN2gl11ResourceMapINS_12MemoryObjectENS_14MemoryObjectIDEE6assignES2_PS1_(%"class.gl::ResourceMap.353"* %11, i32 %4, %"class.gl::MemoryObject"* nonnull %6)
  ret i32 %4
}

declare void @_ZN2gl12MemoryObjectC1EPN2rx13GLImplFactoryENS_14MemoryObjectIDE(%"class.gl::MemoryObject"*, %"class.rx::GLImplFactory"*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl11ResourceMapINS_12MemoryObjectENS_14MemoryObjectIDEE6assignES2_PS1_(%"class.gl::ResourceMap.353"*, i32, %"class.gl::MemoryObject"*) local_unnamed_addr #3 comdat align 2 {
  %4 = icmp ult i32 %1, 16384
  br i1 %4, label %5, label %36

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap.353", %"class.gl::ResourceMap.353"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %32, label %10

10:                                               ; preds = %5, %10
  %11 = phi i64 [ %13, %10 ], [ %8, %5 ]
  %12 = icmp ugt i64 %11, %6
  %13 = shl i64 %11, 1
  br i1 %12, label %14, label %10

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gl::ResourceMap.353", %"class.gl::ResourceMap.353"* %0, i64 0, i32 1
  %16 = load %"class.gl::MemoryObject"**, %"class.gl::MemoryObject"*** %15, align 8
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #14
  %22 = bitcast i8* %21 to %"class.gl::MemoryObject"**
  %23 = bitcast %"class.gl::MemoryObject"*** %15 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.gl::MemoryObject"*, %"class.gl::MemoryObject"** %22, i64 %8
  %25 = bitcast %"class.gl::MemoryObject"** %24 to i8*
  %26 = sub i64 %11, %8
  %27 = shl i64 %26, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -1, i64 %27, i1 false)
  %28 = bitcast %"class.gl::MemoryObject"** %16 to i8*
  %29 = shl i64 %8, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %28, i64 %29, i1 false)
  store i64 %11, i64* %7, align 8
  %30 = icmp eq %"class.gl::MemoryObject"** %16, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %14
  tail call void @_ZdaPv(i8* %28) #14
  br label %32

32:                                               ; preds = %14, %31, %5
  %33 = getelementptr inbounds %"class.gl::ResourceMap.353", %"class.gl::ResourceMap.353"* %0, i64 0, i32 1
  %34 = load %"class.gl::MemoryObject"**, %"class.gl::MemoryObject"*** %33, align 8
  %35 = getelementptr inbounds %"class.gl::MemoryObject"*, %"class.gl::MemoryObject"** %34, i64 %6
  br label %111

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.gl::ResourceMap.353", %"class.gl::ResourceMap.353"* %0, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.355", %"class.absl::container_internal::raw_hash_map.355"* %37, i64 0, i32 0
  %39 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !85
  %40 = zext i32 %1 to i64
  %41 = add i64 %39, %40
  %42 = zext i64 %41 to i128
  %43 = mul nuw i128 %42, 11376068507788127593
  %44 = lshr i128 %43, 64
  %45 = xor i128 %44, %43
  %46 = trunc i128 %45 to i64
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.355", %"class.absl::container_internal::raw_hash_map.355"* %37, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8, !noalias !85
  %49 = getelementptr inbounds %"class.gl::ResourceMap.353", %"class.gl::ResourceMap.353"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %50 = load i64, i64* %49, align 8, !noalias !85
  %51 = lshr i64 %46, 7
  %52 = ptrtoint i8* %48 to i64
  %53 = lshr i64 %52, 12
  %54 = xor i64 %51, %53
  %55 = trunc i128 %45 to i8
  %56 = and i8 %55, 127
  %57 = insertelement <16 x i8> undef, i8 %56, i32 0
  %58 = shufflevector <16 x i8> %57, <16 x i8> undef, <16 x i32> zeroinitializer
  %59 = getelementptr inbounds %"class.gl::ResourceMap.353", %"class.gl::ResourceMap.353"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %60

60:                                               ; preds = %90, %36
  %61 = phi i64 [ %54, %36 ], [ %92, %90 ]
  %62 = phi i64 [ 0, %36 ], [ %91, %90 ]
  %63 = and i64 %61, %50
  %64 = getelementptr inbounds i8, i8* %48, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !noalias !85
  %67 = icmp eq <16 x i8> %58, %66
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %60
  %71 = zext i16 %68 to i32
  %72 = load %"union.absl::container_internal::map_slot_type.357"*, %"union.absl::container_internal::map_slot_type.357"** %59, align 8, !noalias !85
  br label %73

73:                                               ; preds = %82, %70
  %74 = phi i32 [ %71, %70 ], [ %84, %82 ]
  %75 = tail call i32 @llvm.cttz.i32(i32 %74, i1 false) #11, !range !2
  %76 = zext i32 %75 to i64
  %77 = add i64 %63, %76
  %78 = and i64 %77, %50
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.357", %"union.absl::container_internal::map_slot_type.357"* %72, i64 %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 4, !noalias !85
  %81 = icmp eq i32 %80, %1
  br i1 %81, label %100, label %82, !prof !3

82:                                               ; preds = %73
  %83 = add i32 %74, -1
  %84 = and i32 %83, %74
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %73

86:                                               ; preds = %82, %60
  %87 = icmp eq <16 x i8> %66, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %88 = bitcast <16 x i1> %87 to i16
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %93, !prof !4

90:                                               ; preds = %86
  %91 = add i64 %62, 16
  %92 = add i64 %91, %63
  br label %60

93:                                               ; preds = %86
  %94 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12MemoryObjectEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.356"* %38, i64 %46) #11, !noalias !85
  %95 = load %"union.absl::container_internal::map_slot_type.357"*, %"union.absl::container_internal::map_slot_type.357"** %59, align 8, !noalias !85
  %96 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.357", %"union.absl::container_internal::map_slot_type.357"* %95, i64 %94, i32 0, i32 0
  store i32 %1, i32* %96, align 8, !noalias !85
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.357", %"union.absl::container_internal::map_slot_type.357"* %95, i64 %94, i32 0, i32 1
  store %"class.gl::MemoryObject"* null, %"class.gl::MemoryObject"** %97, align 8, !noalias !85
  %98 = load i8*, i8** %47, align 8, !noalias !85
  %99 = load %"union.absl::container_internal::map_slot_type.357"*, %"union.absl::container_internal::map_slot_type.357"** %59, align 8, !noalias !85
  br label %100

100:                                              ; preds = %73, %93
  %101 = phi %"union.absl::container_internal::map_slot_type.357"* [ %99, %93 ], [ %72, %73 ]
  %102 = phi i8* [ %98, %93 ], [ %48, %73 ]
  %103 = phi i64 [ %94, %93 ], [ %78, %73 ]
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = icmp ne i8* %104, null
  tail call void @llvm.assume(i1 %105) #11, !noalias !85
  %106 = load i8, i8* %104, align 1
  %107 = icmp sgt i8 %106, -1
  br i1 %107, label %109, label %108, !prof !3

108:                                              ; preds = %100
  tail call void @llvm.trap() #11
  unreachable

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.357", %"union.absl::container_internal::map_slot_type.357"* %101, i64 %103, i32 0, i32 1
  br label %111

111:                                              ; preds = %109, %32
  %112 = phi %"class.gl::MemoryObject"** [ %110, %109 ], [ %35, %32 ]
  store %"class.gl::MemoryObject"* %2, %"class.gl::MemoryObject"** %112, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2gl11ResourceMapINS_12MemoryObjectENS_14MemoryObjectIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.353"*, i32, %"class.gl::MemoryObject"**) local_unnamed_addr #3 comdat align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.gl::ResourceMap.353", %"class.gl::ResourceMap.353"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %4
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::ResourceMap.353", %"class.gl::ResourceMap.353"* %0, i64 0, i32 1
  %10 = load %"class.gl::MemoryObject"**, %"class.gl::MemoryObject"*** %9, align 8
  %11 = getelementptr inbounds %"class.gl::MemoryObject"*, %"class.gl::MemoryObject"** %10, i64 %4
  %12 = load %"class.gl::MemoryObject"*, %"class.gl::MemoryObject"** %11, align 8
  %13 = icmp eq %"class.gl::MemoryObject"* %12, inttoptr (i64 -1 to %"class.gl::MemoryObject"*)
  br i1 %13, label %134, label %14

14:                                               ; preds = %8
  %15 = ptrtoint %"class.gl::MemoryObject"* %12 to i64
  %16 = bitcast %"class.gl::MemoryObject"** %2 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.gl::MemoryObject"* inttoptr (i64 -1 to %"class.gl::MemoryObject"*), %"class.gl::MemoryObject"** %11, align 8
  br label %134

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.gl::ResourceMap.353", %"class.gl::ResourceMap.353"* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %4
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.356", %"class.absl::container_internal::raw_hash_set.356"* %18, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ResourceMap.353", %"class.gl::ResourceMap.353"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ResourceMap.353", %"class.gl::ResourceMap.353"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %17
  %40 = phi i64 [ %33, %17 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %17 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.357"*, %"union.absl::container_internal::map_slot_type.357"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #11, !range !2
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.357", %"union.absl::container_internal::map_slot_type.357"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !3

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %134, !prof !4

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #11
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !3

77:                                               ; preds = %72
  tail call void @llvm.trap() #11
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.357", %"union.absl::container_internal::map_slot_type.357"* %51, i64 %57, i32 0, i32 1
  %80 = bitcast %"class.gl::MemoryObject"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.gl::MemoryObject"** %2 to i64*
  store i64 %81, i64* %82, align 8
  %83 = load i8, i8* %73, align 1
  %84 = icmp sgt i8 %83, -1
  br i1 %84, label %86, label %85, !prof !3

85:                                               ; preds = %78
  tail call void @llvm.trap() #11
  unreachable

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.gl::ResourceMap.353", %"class.gl::ResourceMap.353"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, -1
  store i64 %89, i64* %87, align 8
  %90 = bitcast %"class.absl::container_internal::raw_hash_set.356"* %18 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = ptrtoint i8* %73 to i64
  %93 = sub i64 %92, %91
  %94 = add i64 %93, -16
  %95 = load i64, i64* %28, align 8
  %96 = and i64 %94, %95
  %97 = bitcast i8* %73 to <16 x i8>*
  %98 = load <16 x i8>, <16 x i8>* %97, align 1
  %99 = icmp eq <16 x i8> %98, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %100 = bitcast <16 x i1> %99 to i16
  %101 = inttoptr i64 %91 to i8*
  %102 = getelementptr inbounds i8, i8* %101, i64 %96
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1
  %105 = icmp eq <16 x i8> %104, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %106 = bitcast <16 x i1> %105 to i16
  %107 = icmp ne i16 %106, 0
  %108 = icmp ne i16 %100, 0
  %109 = and i1 %108, %107
  br i1 %109, label %110, label %120

110:                                              ; preds = %86
  %111 = zext i16 %100 to i32
  %112 = zext i16 %106 to i32
  %113 = tail call i32 @llvm.cttz.i32(i32 %111, i1 false) #11, !range !2
  %114 = shl nuw i32 %112, 16
  %115 = tail call i32 @llvm.ctlz.i32(i32 %114, i1 false) #11, !range !2
  %116 = add nuw nsw i32 %115, %113
  %117 = icmp ult i32 %116, 16
  %118 = zext i1 %117 to i64
  %119 = select i1 %117, i8 -128, i8 -2
  br label %120

120:                                              ; preds = %86, %110
  %121 = phi i64 [ 0, %86 ], [ %118, %110 ]
  %122 = phi i8 [ -2, %86 ], [ %119, %110 ]
  %123 = getelementptr inbounds i8, i8* %101, i64 %93
  store i8 %122, i8* %123, align 1
  %124 = load i8*, i8** %26, align 8
  %125 = add i64 %93, -15
  %126 = load i64, i64* %28, align 8
  %127 = and i64 %126, %125
  %128 = and i64 %126, 15
  %129 = add i64 %127, %128
  %130 = getelementptr inbounds i8, i8* %124, i64 %129
  store i8 %122, i8* %130, align 1
  %131 = getelementptr inbounds %"class.gl::ResourceMap.353", %"class.gl::ResourceMap.353"* %0, i64 0, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, %121
  store i64 %133, i64* %131, align 8
  br label %134

134:                                              ; preds = %65, %14, %120, %8
  %135 = phi i1 [ false, %8 ], [ true, %120 ], [ true, %14 ], [ false, %65 ]
  ret i1 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::MemoryObject"* @_ZNK2gl19MemoryObjectManager15getMemoryObjectENS_14MemoryObjectIDE(%"class.gl::MemoryObjectManager"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1, i32 1
  %9 = load %"class.gl::MemoryObject"**, %"class.gl::MemoryObject"*** %8, align 8
  %10 = getelementptr inbounds %"class.gl::MemoryObject"*, %"class.gl::MemoryObject"** %9, i64 %3
  %11 = load %"class.gl::MemoryObject"*, %"class.gl::MemoryObject"** %10, align 8
  %12 = icmp eq %"class.gl::MemoryObject"* %11, inttoptr (i64 -1 to %"class.gl::MemoryObject"*)
  %13 = select i1 %12, %"class.gl::MemoryObject"* null, %"class.gl::MemoryObject"* %11
  br label %77

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %16 = add i64 %15, %3
  %17 = zext i64 %16 to i128
  %18 = mul nuw i128 %17, 11376068507788127593
  %19 = lshr i128 %18, 64
  %20 = xor i128 %19, %18
  %21 = trunc i128 %20 to i64
  %22 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = lshr i64 %21, 7
  %27 = ptrtoint i8* %23 to i64
  %28 = lshr i64 %27, 12
  %29 = xor i64 %26, %28
  %30 = trunc i128 %20 to i8
  %31 = and i8 %30, 127
  %32 = insertelement <16 x i8> undef, i8 %31, i32 0
  %33 = shufflevector <16 x i8> %32, <16 x i8> undef, <16 x i32> zeroinitializer
  %34 = getelementptr inbounds %"class.gl::MemoryObjectManager", %"class.gl::MemoryObjectManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %35

35:                                               ; preds = %65, %14
  %36 = phi i64 [ %29, %14 ], [ %67, %65 ]
  %37 = phi i64 [ 0, %14 ], [ %66, %65 ]
  %38 = and i64 %36, %25
  %39 = getelementptr inbounds i8, i8* %23, i64 %38
  %40 = bitcast i8* %39 to <16 x i8>*
  %41 = load <16 x i8>, <16 x i8>* %40, align 1
  %42 = icmp eq <16 x i8> %33, %41
  %43 = bitcast <16 x i1> %42 to i16
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %35
  %46 = zext i16 %43 to i32
  %47 = load %"union.absl::container_internal::map_slot_type.357"*, %"union.absl::container_internal::map_slot_type.357"** %34, align 8
  br label %48

48:                                               ; preds = %57, %45
  %49 = phi i32 [ %46, %45 ], [ %59, %57 ]
  %50 = tail call i32 @llvm.cttz.i32(i32 %49, i1 false) #11, !range !2
  %51 = zext i32 %50 to i64
  %52 = add i64 %38, %51
  %53 = and i64 %52, %25
  %54 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.357", %"union.absl::container_internal::map_slot_type.357"* %47, i64 %53, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %1
  br i1 %56, label %68, label %57, !prof !3

57:                                               ; preds = %48
  %58 = add i32 %49, -1
  %59 = and i32 %58, %49
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %48

61:                                               ; preds = %57, %35
  %62 = icmp eq <16 x i8> %41, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %63 = bitcast <16 x i1> %62 to i16
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %65, label %77, !prof !4

65:                                               ; preds = %61
  %66 = add i64 %37, 16
  %67 = add i64 %66, %38
  br label %35

68:                                               ; preds = %48
  %69 = getelementptr inbounds i8, i8* %23, i64 %53
  %70 = icmp ne i8* %69, null
  tail call void @llvm.assume(i1 %70) #11
  %71 = load i8, i8* %69, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %74, label %73, !prof !3

73:                                               ; preds = %68
  tail call void @llvm.trap() #11
  unreachable

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.357", %"union.absl::container_internal::map_slot_type.357"* %47, i64 %53, i32 0, i32 1
  %76 = load %"class.gl::MemoryObject"*, %"class.gl::MemoryObject"** %75, align 8
  br label %77

77:                                               ; preds = %61, %7, %74
  %78 = phi %"class.gl::MemoryObject"* [ %13, %7 ], [ %76, %74 ], [ null, %61 ]
  ret %"class.gl::MemoryObject"* %78
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl16SemaphoreManagerC2Ev(%"class.gl::SemaphoreManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorC1Ev(%"class.gl::HandleAllocator"* %3) #11
  %4 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl16SemaphoreManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = bitcast i64* %4 to <2 x i64>*
  store <2 x i64> <i64 1, i64 32>, <2 x i64>* %5, align 8
  %6 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1, i32 1
  %7 = tail call i8* @_Znam(i64 256) #14
  %8 = bitcast %"class.gl::Semaphore"*** %6 to i8**
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %11 = bitcast %"union.absl::container_internal::map_slot_type.367"** %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -1, i64 256, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl16SemaphoreManagerD2Ev(%"class.gl::SemaphoreManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl16SemaphoreManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.gl::Semaphore"**, %"class.gl::Semaphore"*** %3, align 8
  %5 = icmp eq %"class.gl::Semaphore"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Semaphore"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.367"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl16SemaphoreManagerD0Ev(%"class.gl::SemaphoreManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl16SemaphoreManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.gl::Semaphore"**, %"class.gl::Semaphore"*** %3, align 8
  %5 = icmp eq %"class.gl::Semaphore"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::Semaphore"** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %16 = bitcast %"union.absl::container_internal::map_slot_type.367"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  br label %17

17:                                               ; preds = %8, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl19ResourceManagerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN2gl15HandleAllocatorD1Ev(%"class.gl::HandleAllocator"* %18) #11
  %19 = bitcast %"class.gl::SemaphoreManager"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl16SemaphoreManager5resetEPKNS_7ContextE(%"class.gl::SemaphoreManager"*, %"class.gl::Context"*) unnamed_addr #3 align 2 {
  %3 = alloca %"class.gl::Semaphore"*, align 8
  %4 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.gl::ResourceMap.363", %"class.gl::ResourceMap.363"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1, i32 1
  %7 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %9 = bitcast %"class.gl::Semaphore"** %3 to i8*
  %10 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 0, i32 1
  br label %11

11:                                               ; preds = %130, %2
  %12 = load i64, i64* %5, align 8, !noalias !88
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %24, label %14

14:                                               ; preds = %11
  %15 = load %"class.gl::Semaphore"**, %"class.gl::Semaphore"*** %6, align 8, !noalias !88
  br label %16

16:                                               ; preds = %21, %14
  %17 = phi i64 [ 0, %14 ], [ %22, %21 ]
  %18 = getelementptr inbounds %"class.gl::Semaphore"*, %"class.gl::Semaphore"** %15, i64 %17
  %19 = bitcast %"class.gl::Semaphore"** %18 to i64*
  %20 = load i64, i64* %19, align 8, !noalias !88
  switch i64 %20, label %24 [
    i64 -1, label %21
    i64 0, label %21
  ]

21:                                               ; preds = %16, %16
  %22 = add nuw i64 %17, 1
  %23 = icmp eq i64 %22, %12
  br i1 %23, label %24, label %16

24:                                               ; preds = %21, %16, %11
  %25 = phi i64 [ 0, %11 ], [ %17, %16 ], [ %12, %21 ]
  %26 = trunc i64 %25 to i32
  %27 = load i8*, i8** %7, align 8, !noalias !88, !nonnull !51
  %28 = load i8, i8* %27, align 1, !noalias !88
  %29 = icmp slt i8 %28, -1
  br i1 %29, label %30, label %43

30:                                               ; preds = %24, %30
  %31 = phi i8* [ %40, %30 ], [ %27, %24 ]
  %32 = bitcast i8* %31 to <16 x i8>*
  %33 = load <16 x i8>, <16 x i8>* %32, align 1, !noalias !88
  %34 = icmp slt <16 x i8> %33, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %35 = bitcast <16 x i1> %34 to i16
  %36 = zext i16 %35 to i32
  %37 = add nuw nsw i32 %36, 1
  %38 = call i32 @llvm.cttz.i32(i32 %37, i1 true) #11, !range !2
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %31, i64 %39
  %41 = load i8, i8* %40, align 1, !noalias !88
  %42 = icmp slt i8 %41, -1
  br i1 %42, label %30, label %43

43:                                               ; preds = %30, %24
  %44 = phi i8* [ %27, %24 ], [ %40, %30 ]
  %45 = phi i8 [ %28, %24 ], [ %41, %30 ]
  %46 = icmp eq i8 %45, -1
  %47 = select i1 %46, i8* null, i8* %44, !prof !4
  %48 = trunc i64 %12 to i32
  %49 = icmp ugt i32 %48, %26
  %50 = icmp eq i8* %47, null
  %51 = or i1 %49, %50
  br i1 %51, label %56, label %52

52:                                               ; preds = %43
  %53 = load i8, i8* %47, align 1, !noalias !88
  %54 = icmp sgt i8 %53, -1
  br i1 %54, label %56, label %55, !prof !3

55:                                               ; preds = %52
  call void @llvm.trap() #11, !noalias !88
  unreachable

56:                                               ; preds = %52, %43
  %57 = icmp ne i32 %26, %48
  %58 = or i1 %57, %50
  br i1 %58, label %63, label %59

59:                                               ; preds = %56
  %60 = load i8, i8* %47, align 1
  %61 = icmp sgt i8 %60, -1
  br i1 %61, label %64, label %62, !prof !3

62:                                               ; preds = %59
  call void @llvm.trap() #11
  unreachable

63:                                               ; preds = %56
  br i1 %57, label %64, label %131

64:                                               ; preds = %63, %59
  br i1 %13, label %75, label %65

65:                                               ; preds = %64
  %66 = load %"class.gl::Semaphore"**, %"class.gl::Semaphore"*** %6, align 8, !noalias !91
  br label %67

67:                                               ; preds = %72, %65
  %68 = phi i64 [ 0, %65 ], [ %73, %72 ]
  %69 = getelementptr inbounds %"class.gl::Semaphore"*, %"class.gl::Semaphore"** %66, i64 %68
  %70 = bitcast %"class.gl::Semaphore"** %69 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !91
  switch i64 %71, label %75 [
    i64 -1, label %72
    i64 0, label %72
  ]

72:                                               ; preds = %67, %67
  %73 = add nuw i64 %68, 1
  %74 = icmp eq i64 %73, %12
  br i1 %74, label %75, label %67

75:                                               ; preds = %72, %67, %64
  %76 = phi i64 [ 0, %64 ], [ %12, %72 ], [ %68, %67 ]
  %77 = trunc i64 %76 to i32
  %78 = load %"union.absl::container_internal::map_slot_type.367"*, %"union.absl::container_internal::map_slot_type.367"** %8, align 8, !noalias !91
  br i1 %29, label %79, label %94

79:                                               ; preds = %75, %79
  %80 = phi %"union.absl::container_internal::map_slot_type.367"* [ %91, %79 ], [ %78, %75 ]
  %81 = phi i8* [ %90, %79 ], [ %27, %75 ]
  %82 = bitcast i8* %81 to <16 x i8>*
  %83 = load <16 x i8>, <16 x i8>* %82, align 1, !noalias !91
  %84 = icmp slt <16 x i8> %83, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %85 = bitcast <16 x i1> %84 to i16
  %86 = zext i16 %85 to i32
  %87 = add nuw nsw i32 %86, 1
  %88 = call i32 @llvm.cttz.i32(i32 %87, i1 true) #11, !range !2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i8, i8* %81, i64 %89
  %91 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.367", %"union.absl::container_internal::map_slot_type.367"* %80, i64 %89
  %92 = load i8, i8* %90, align 1, !noalias !91
  %93 = icmp slt i8 %92, -1
  br i1 %93, label %79, label %94

94:                                               ; preds = %79, %75
  %95 = phi %"union.absl::container_internal::map_slot_type.367"* [ %78, %75 ], [ %91, %79 ]
  %96 = phi i8* [ %27, %75 ], [ %90, %79 ]
  %97 = phi i8 [ %28, %75 ], [ %92, %79 ]
  %98 = icmp eq i8 %97, -1
  %99 = select i1 %98, i8* null, i8* %96, !prof !4
  %100 = icmp ugt i32 %48, %77
  br i1 %100, label %110, label %101

101:                                              ; preds = %94
  %102 = icmp eq i8* %99, null
  br i1 %102, label %110, label %103

103:                                              ; preds = %101
  %104 = load i8, i8* %99, align 1, !noalias !91
  %105 = icmp sgt i8 %104, -1
  br i1 %105, label %107, label %106, !prof !3

106:                                              ; preds = %103
  call void @llvm.trap() #11, !noalias !91
  unreachable

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.367", %"union.absl::container_internal::map_slot_type.367"* %95, i64 0, i32 0, i32 0
  %109 = load i32, i32* %108, align 8, !noalias !91
  br label %110

110:                                              ; preds = %94, %101, %107
  %111 = phi i32 [ 0, %101 ], [ %109, %107 ], [ %77, %94 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  store %"class.gl::Semaphore"* null, %"class.gl::Semaphore"** %3, align 8
  %112 = call zeroext i1 @_ZN2gl11ResourceMapINS_9SemaphoreENS_11SemaphoreIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.363"* %4, i32 %111, %"class.gl::Semaphore"** nonnull %3) #11
  br i1 %112, label %113, label %130

113:                                              ; preds = %110
  call void @_ZN2gl15HandleAllocator7releaseEj(%"class.gl::HandleAllocator"* %10, i32 %111) #11
  %114 = load %"class.gl::Semaphore"*, %"class.gl::Semaphore"** %3, align 8
  %115 = icmp eq %"class.gl::Semaphore"* %114, null
  br i1 %115, label %130, label %116

116:                                              ; preds = %113
  %117 = getelementptr inbounds %"class.gl::Semaphore", %"class.gl::Semaphore"* %114, i64 0, i32 0, i32 0
  %118 = getelementptr inbounds %"class.gl::Semaphore", %"class.gl::Semaphore"* %114, i64 0, i32 0, i32 0, i32 1
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, -1
  store i64 %120, i64* %118, align 8
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %130

122:                                              ; preds = %116
  %123 = bitcast %"class.gl::Semaphore"* %114 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %124 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %123, align 8
  %125 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %124, align 8
  call void %125(%"class.angle::RefCountObject"* %117, %"class.gl::Context"* %1) #11
  %126 = bitcast %"class.gl::Semaphore"* %114 to void (%"class.angle::RefCountObject"*)***
  %127 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %127, i64 2
  %129 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %128, align 8
  call void %129(%"class.angle::RefCountObject"* nonnull %117) #11
  br label %130

130:                                              ; preds = %110, %113, %116, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %11

131:                                              ; preds = %63
  %132 = bitcast %"class.gl::Semaphore"*** %6 to i8**
  %133 = load i8*, i8** %132, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 -1, i64 256, i1 false) #11
  store i64 32, i64* %5, align 8
  %134 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  %135 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %136 = load i64, i64* %135, align 8
  %137 = icmp ugt i64 %136, 127
  br i1 %137, label %138, label %142

138:                                              ; preds = %131
  %139 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.366", %"class.absl::container_internal::raw_hash_set.366"* %134, i64 0, i32 0
  %140 = load i8*, i8** %139, align 8
  call void @_ZdlPv(i8* %140) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %139, align 8
  %141 = bitcast %"union.absl::container_internal::map_slot_type.367"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 32, i1 false) #11
  br label %158

142:                                              ; preds = %131
  %143 = icmp eq i64 %136, 0
  br i1 %143, label %158, label %144

144:                                              ; preds = %142
  %145 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  store i64 0, i64* %145, align 8
  %146 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.366", %"class.absl::container_internal::raw_hash_set.366"* %134, i64 0, i32 0
  %147 = load i8*, i8** %146, align 8
  %148 = add nuw nsw i64 %136, 16
  call void @llvm.memset.p0i8.i64(i8* align 1 %147, i8 -128, i64 %148, i1 false) #11
  %149 = load i8*, i8** %146, align 8
  %150 = load i64, i64* %135, align 8
  %151 = getelementptr inbounds i8, i8* %149, i64 %150
  store i8 -1, i8* %151, align 1
  %152 = load i64, i64* %135, align 8
  %153 = lshr i64 %152, 3
  %154 = sub i64 %152, %153
  %155 = load i64, i64* %145, align 8
  %156 = sub i64 %154, %155
  %157 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %156, i64* %157, align 8
  br label %158

158:                                              ; preds = %138, %142, %144
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl16SemaphoreManager15deleteSemaphoreEPKNS_7ContextENS_11SemaphoreIDE(%"class.gl::SemaphoreManager"*, %"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.gl::Semaphore"*, align 8
  %5 = bitcast %"class.gl::Semaphore"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  store %"class.gl::Semaphore"* null, %"class.gl::Semaphore"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1
  %7 = call zeroext i1 @_ZN2gl11ResourceMapINS_9SemaphoreENS_11SemaphoreIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.363"* %6, i32 %2, %"class.gl::Semaphore"** nonnull %4)
  br i1 %7, label %8, label %26

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 0, i32 1
  call void @_ZN2gl15HandleAllocator7releaseEj(%"class.gl::HandleAllocator"* %9, i32 %2) #11
  %10 = load %"class.gl::Semaphore"*, %"class.gl::Semaphore"** %4, align 8
  %11 = icmp eq %"class.gl::Semaphore"* %10, null
  br i1 %11, label %26, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gl::Semaphore", %"class.gl::Semaphore"* %10, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.gl::Semaphore", %"class.gl::Semaphore"* %10, i64 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, -1
  store i64 %16, i64* %14, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %26

18:                                               ; preds = %12
  %19 = bitcast %"class.gl::Semaphore"* %10 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %20 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %19, align 8
  %21 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %20, align 8
  call void %21(%"class.angle::RefCountObject"* %13, %"class.gl::Context"* %1) #11
  %22 = bitcast %"class.gl::Semaphore"* %10 to void (%"class.angle::RefCountObject"*)***
  %23 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %23, i64 2
  %25 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %24, align 8
  call void %25(%"class.angle::RefCountObject"* nonnull %13) #11
  br label %26

26:                                               ; preds = %18, %12, %8, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl16SemaphoreManager15createSemaphoreEPN2rx13GLImplFactoryE(%"class.gl::SemaphoreManager"*, %"class.rx::GLImplFactory"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 0, i32 1
  %4 = tail call i32 @_ZN2gl15HandleAllocator8allocateEv(%"class.gl::HandleAllocator"* %3) #11
  %5 = tail call i8* @_Znwm(i64 40) #14
  %6 = bitcast i8* %5 to %"class.gl::Semaphore"*
  tail call void @_ZN2gl9SemaphoreC1EPN2rx13GLImplFactoryENS_11SemaphoreIDE(%"class.gl::Semaphore"* nonnull %6, %"class.rx::GLImplFactory"* %1, i32 %4) #11
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 1
  store i64 %10, i64* %8, align 8
  %11 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1
  tail call void @_ZN2gl11ResourceMapINS_9SemaphoreENS_11SemaphoreIDEE6assignES2_PS1_(%"class.gl::ResourceMap.363"* %11, i32 %4, %"class.gl::Semaphore"* nonnull %6)
  ret i32 %4
}

declare void @_ZN2gl9SemaphoreC1EPN2rx13GLImplFactoryENS_11SemaphoreIDE(%"class.gl::Semaphore"*, %"class.rx::GLImplFactory"*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl11ResourceMapINS_9SemaphoreENS_11SemaphoreIDEE6assignES2_PS1_(%"class.gl::ResourceMap.363"*, i32, %"class.gl::Semaphore"*) local_unnamed_addr #3 comdat align 2 {
  %4 = icmp ult i32 %1, 16384
  br i1 %4, label %5, label %36

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap.363", %"class.gl::ResourceMap.363"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %32, label %10

10:                                               ; preds = %5, %10
  %11 = phi i64 [ %13, %10 ], [ %8, %5 ]
  %12 = icmp ugt i64 %11, %6
  %13 = shl i64 %11, 1
  br i1 %12, label %14, label %10

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gl::ResourceMap.363", %"class.gl::ResourceMap.363"* %0, i64 0, i32 1
  %16 = load %"class.gl::Semaphore"**, %"class.gl::Semaphore"*** %15, align 8
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #14
  %22 = bitcast i8* %21 to %"class.gl::Semaphore"**
  %23 = bitcast %"class.gl::Semaphore"*** %15 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.gl::Semaphore"*, %"class.gl::Semaphore"** %22, i64 %8
  %25 = bitcast %"class.gl::Semaphore"** %24 to i8*
  %26 = sub i64 %11, %8
  %27 = shl i64 %26, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -1, i64 %27, i1 false)
  %28 = bitcast %"class.gl::Semaphore"** %16 to i8*
  %29 = shl i64 %8, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %28, i64 %29, i1 false)
  store i64 %11, i64* %7, align 8
  %30 = icmp eq %"class.gl::Semaphore"** %16, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %14
  tail call void @_ZdaPv(i8* %28) #14
  br label %32

32:                                               ; preds = %14, %31, %5
  %33 = getelementptr inbounds %"class.gl::ResourceMap.363", %"class.gl::ResourceMap.363"* %0, i64 0, i32 1
  %34 = load %"class.gl::Semaphore"**, %"class.gl::Semaphore"*** %33, align 8
  %35 = getelementptr inbounds %"class.gl::Semaphore"*, %"class.gl::Semaphore"** %34, i64 %6
  br label %111

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.gl::ResourceMap.363", %"class.gl::ResourceMap.363"* %0, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.365", %"class.absl::container_internal::raw_hash_map.365"* %37, i64 0, i32 0
  %39 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !94
  %40 = zext i32 %1 to i64
  %41 = add i64 %39, %40
  %42 = zext i64 %41 to i128
  %43 = mul nuw i128 %42, 11376068507788127593
  %44 = lshr i128 %43, 64
  %45 = xor i128 %44, %43
  %46 = trunc i128 %45 to i64
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.365", %"class.absl::container_internal::raw_hash_map.365"* %37, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8, !noalias !94
  %49 = getelementptr inbounds %"class.gl::ResourceMap.363", %"class.gl::ResourceMap.363"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %50 = load i64, i64* %49, align 8, !noalias !94
  %51 = lshr i64 %46, 7
  %52 = ptrtoint i8* %48 to i64
  %53 = lshr i64 %52, 12
  %54 = xor i64 %51, %53
  %55 = trunc i128 %45 to i8
  %56 = and i8 %55, 127
  %57 = insertelement <16 x i8> undef, i8 %56, i32 0
  %58 = shufflevector <16 x i8> %57, <16 x i8> undef, <16 x i32> zeroinitializer
  %59 = getelementptr inbounds %"class.gl::ResourceMap.363", %"class.gl::ResourceMap.363"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %60

60:                                               ; preds = %90, %36
  %61 = phi i64 [ %54, %36 ], [ %92, %90 ]
  %62 = phi i64 [ 0, %36 ], [ %91, %90 ]
  %63 = and i64 %61, %50
  %64 = getelementptr inbounds i8, i8* %48, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !noalias !94
  %67 = icmp eq <16 x i8> %58, %66
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %60
  %71 = zext i16 %68 to i32
  %72 = load %"union.absl::container_internal::map_slot_type.367"*, %"union.absl::container_internal::map_slot_type.367"** %59, align 8, !noalias !94
  br label %73

73:                                               ; preds = %82, %70
  %74 = phi i32 [ %71, %70 ], [ %84, %82 ]
  %75 = tail call i32 @llvm.cttz.i32(i32 %74, i1 false) #11, !range !2
  %76 = zext i32 %75 to i64
  %77 = add i64 %63, %76
  %78 = and i64 %77, %50
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.367", %"union.absl::container_internal::map_slot_type.367"* %72, i64 %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 4, !noalias !94
  %81 = icmp eq i32 %80, %1
  br i1 %81, label %100, label %82, !prof !3

82:                                               ; preds = %73
  %83 = add i32 %74, -1
  %84 = and i32 %83, %74
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %73

86:                                               ; preds = %82, %60
  %87 = icmp eq <16 x i8> %66, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %88 = bitcast <16 x i1> %87 to i16
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %93, !prof !4

90:                                               ; preds = %86
  %91 = add i64 %62, 16
  %92 = add i64 %91, %63
  br label %60

93:                                               ; preds = %86
  %94 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl9SemaphoreEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.366"* %38, i64 %46) #11, !noalias !94
  %95 = load %"union.absl::container_internal::map_slot_type.367"*, %"union.absl::container_internal::map_slot_type.367"** %59, align 8, !noalias !94
  %96 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.367", %"union.absl::container_internal::map_slot_type.367"* %95, i64 %94, i32 0, i32 0
  store i32 %1, i32* %96, align 8, !noalias !94
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.367", %"union.absl::container_internal::map_slot_type.367"* %95, i64 %94, i32 0, i32 1
  store %"class.gl::Semaphore"* null, %"class.gl::Semaphore"** %97, align 8, !noalias !94
  %98 = load i8*, i8** %47, align 8, !noalias !94
  %99 = load %"union.absl::container_internal::map_slot_type.367"*, %"union.absl::container_internal::map_slot_type.367"** %59, align 8, !noalias !94
  br label %100

100:                                              ; preds = %73, %93
  %101 = phi %"union.absl::container_internal::map_slot_type.367"* [ %99, %93 ], [ %72, %73 ]
  %102 = phi i8* [ %98, %93 ], [ %48, %73 ]
  %103 = phi i64 [ %94, %93 ], [ %78, %73 ]
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = icmp ne i8* %104, null
  tail call void @llvm.assume(i1 %105) #11, !noalias !94
  %106 = load i8, i8* %104, align 1
  %107 = icmp sgt i8 %106, -1
  br i1 %107, label %109, label %108, !prof !3

108:                                              ; preds = %100
  tail call void @llvm.trap() #11
  unreachable

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.367", %"union.absl::container_internal::map_slot_type.367"* %101, i64 %103, i32 0, i32 1
  br label %111

111:                                              ; preds = %109, %32
  %112 = phi %"class.gl::Semaphore"** [ %110, %109 ], [ %35, %32 ]
  store %"class.gl::Semaphore"* %2, %"class.gl::Semaphore"** %112, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2gl11ResourceMapINS_9SemaphoreENS_11SemaphoreIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.363"*, i32, %"class.gl::Semaphore"**) local_unnamed_addr #3 comdat align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.gl::ResourceMap.363", %"class.gl::ResourceMap.363"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %4
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::ResourceMap.363", %"class.gl::ResourceMap.363"* %0, i64 0, i32 1
  %10 = load %"class.gl::Semaphore"**, %"class.gl::Semaphore"*** %9, align 8
  %11 = getelementptr inbounds %"class.gl::Semaphore"*, %"class.gl::Semaphore"** %10, i64 %4
  %12 = load %"class.gl::Semaphore"*, %"class.gl::Semaphore"** %11, align 8
  %13 = icmp eq %"class.gl::Semaphore"* %12, inttoptr (i64 -1 to %"class.gl::Semaphore"*)
  br i1 %13, label %134, label %14

14:                                               ; preds = %8
  %15 = ptrtoint %"class.gl::Semaphore"* %12 to i64
  %16 = bitcast %"class.gl::Semaphore"** %2 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.gl::Semaphore"* inttoptr (i64 -1 to %"class.gl::Semaphore"*), %"class.gl::Semaphore"** %11, align 8
  br label %134

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.gl::ResourceMap.363", %"class.gl::ResourceMap.363"* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %4
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.366", %"class.absl::container_internal::raw_hash_set.366"* %18, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ResourceMap.363", %"class.gl::ResourceMap.363"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ResourceMap.363", %"class.gl::ResourceMap.363"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %17
  %40 = phi i64 [ %33, %17 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %17 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.367"*, %"union.absl::container_internal::map_slot_type.367"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #11, !range !2
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.367", %"union.absl::container_internal::map_slot_type.367"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !3

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %134, !prof !4

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #11
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !3

77:                                               ; preds = %72
  tail call void @llvm.trap() #11
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.367", %"union.absl::container_internal::map_slot_type.367"* %51, i64 %57, i32 0, i32 1
  %80 = bitcast %"class.gl::Semaphore"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.gl::Semaphore"** %2 to i64*
  store i64 %81, i64* %82, align 8
  %83 = load i8, i8* %73, align 1
  %84 = icmp sgt i8 %83, -1
  br i1 %84, label %86, label %85, !prof !3

85:                                               ; preds = %78
  tail call void @llvm.trap() #11
  unreachable

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.gl::ResourceMap.363", %"class.gl::ResourceMap.363"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, -1
  store i64 %89, i64* %87, align 8
  %90 = bitcast %"class.absl::container_internal::raw_hash_set.366"* %18 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = ptrtoint i8* %73 to i64
  %93 = sub i64 %92, %91
  %94 = add i64 %93, -16
  %95 = load i64, i64* %28, align 8
  %96 = and i64 %94, %95
  %97 = bitcast i8* %73 to <16 x i8>*
  %98 = load <16 x i8>, <16 x i8>* %97, align 1
  %99 = icmp eq <16 x i8> %98, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %100 = bitcast <16 x i1> %99 to i16
  %101 = inttoptr i64 %91 to i8*
  %102 = getelementptr inbounds i8, i8* %101, i64 %96
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1
  %105 = icmp eq <16 x i8> %104, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %106 = bitcast <16 x i1> %105 to i16
  %107 = icmp ne i16 %106, 0
  %108 = icmp ne i16 %100, 0
  %109 = and i1 %108, %107
  br i1 %109, label %110, label %120

110:                                              ; preds = %86
  %111 = zext i16 %100 to i32
  %112 = zext i16 %106 to i32
  %113 = tail call i32 @llvm.cttz.i32(i32 %111, i1 false) #11, !range !2
  %114 = shl nuw i32 %112, 16
  %115 = tail call i32 @llvm.ctlz.i32(i32 %114, i1 false) #11, !range !2
  %116 = add nuw nsw i32 %115, %113
  %117 = icmp ult i32 %116, 16
  %118 = zext i1 %117 to i64
  %119 = select i1 %117, i8 -128, i8 -2
  br label %120

120:                                              ; preds = %86, %110
  %121 = phi i64 [ 0, %86 ], [ %118, %110 ]
  %122 = phi i8 [ -2, %86 ], [ %119, %110 ]
  %123 = getelementptr inbounds i8, i8* %101, i64 %93
  store i8 %122, i8* %123, align 1
  %124 = load i8*, i8** %26, align 8
  %125 = add i64 %93, -15
  %126 = load i64, i64* %28, align 8
  %127 = and i64 %126, %125
  %128 = and i64 %126, 15
  %129 = add i64 %127, %128
  %130 = getelementptr inbounds i8, i8* %124, i64 %129
  store i8 %122, i8* %130, align 1
  %131 = getelementptr inbounds %"class.gl::ResourceMap.363", %"class.gl::ResourceMap.363"* %0, i64 0, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, %121
  store i64 %133, i64* %131, align 8
  br label %134

134:                                              ; preds = %65, %14, %120, %8
  %135 = phi i1 [ false, %8 ], [ true, %120 ], [ true, %14 ], [ false, %65 ]
  ret i1 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Semaphore"* @_ZNK2gl16SemaphoreManager12getSemaphoreENS_11SemaphoreIDE(%"class.gl::SemaphoreManager"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1, i32 1
  %9 = load %"class.gl::Semaphore"**, %"class.gl::Semaphore"*** %8, align 8
  %10 = getelementptr inbounds %"class.gl::Semaphore"*, %"class.gl::Semaphore"** %9, i64 %3
  %11 = load %"class.gl::Semaphore"*, %"class.gl::Semaphore"** %10, align 8
  %12 = icmp eq %"class.gl::Semaphore"* %11, inttoptr (i64 -1 to %"class.gl::Semaphore"*)
  %13 = select i1 %12, %"class.gl::Semaphore"* null, %"class.gl::Semaphore"* %11
  br label %77

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %16 = add i64 %15, %3
  %17 = zext i64 %16 to i128
  %18 = mul nuw i128 %17, 11376068507788127593
  %19 = lshr i128 %18, 64
  %20 = xor i128 %19, %18
  %21 = trunc i128 %20 to i64
  %22 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = lshr i64 %21, 7
  %27 = ptrtoint i8* %23 to i64
  %28 = lshr i64 %27, 12
  %29 = xor i64 %26, %28
  %30 = trunc i128 %20 to i8
  %31 = and i8 %30, 127
  %32 = insertelement <16 x i8> undef, i8 %31, i32 0
  %33 = shufflevector <16 x i8> %32, <16 x i8> undef, <16 x i32> zeroinitializer
  %34 = getelementptr inbounds %"class.gl::SemaphoreManager", %"class.gl::SemaphoreManager"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  br label %35

35:                                               ; preds = %65, %14
  %36 = phi i64 [ %29, %14 ], [ %67, %65 ]
  %37 = phi i64 [ 0, %14 ], [ %66, %65 ]
  %38 = and i64 %36, %25
  %39 = getelementptr inbounds i8, i8* %23, i64 %38
  %40 = bitcast i8* %39 to <16 x i8>*
  %41 = load <16 x i8>, <16 x i8>* %40, align 1
  %42 = icmp eq <16 x i8> %33, %41
  %43 = bitcast <16 x i1> %42 to i16
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %35
  %46 = zext i16 %43 to i32
  %47 = load %"union.absl::container_internal::map_slot_type.367"*, %"union.absl::container_internal::map_slot_type.367"** %34, align 8
  br label %48

48:                                               ; preds = %57, %45
  %49 = phi i32 [ %46, %45 ], [ %59, %57 ]
  %50 = tail call i32 @llvm.cttz.i32(i32 %49, i1 false) #11, !range !2
  %51 = zext i32 %50 to i64
  %52 = add i64 %38, %51
  %53 = and i64 %52, %25
  %54 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.367", %"union.absl::container_internal::map_slot_type.367"* %47, i64 %53, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %1
  br i1 %56, label %68, label %57, !prof !3

57:                                               ; preds = %48
  %58 = add i32 %49, -1
  %59 = and i32 %58, %49
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %48

61:                                               ; preds = %57, %35
  %62 = icmp eq <16 x i8> %41, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %63 = bitcast <16 x i1> %62 to i16
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %65, label %77, !prof !4

65:                                               ; preds = %61
  %66 = add i64 %37, 16
  %67 = add i64 %66, %38
  br label %35

68:                                               ; preds = %48
  %69 = getelementptr inbounds i8, i8* %23, i64 %53
  %70 = icmp ne i8* %69, null
  tail call void @llvm.assume(i1 %70) #11
  %71 = load i8, i8* %69, align 1
  %72 = icmp sgt i8 %71, -1
  br i1 %72, label %74, label %73, !prof !3

73:                                               ; preds = %68
  tail call void @llvm.trap() #11
  unreachable

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.367", %"union.absl::container_internal::map_slot_type.367"* %47, i64 %53, i32 0, i32 1
  %76 = load %"class.gl::Semaphore"*, %"class.gl::Semaphore"** %75, align 8
  br label %77

77:                                               ; preds = %61, %7, %74
  %78 = phi %"class.gl::Semaphore"* [ %13, %7 ], [ %76, %74 ], [ null, %61 ]
  ret %"class.gl::Semaphore"* %78
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @llvm.assume(i1) #11

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #12

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl11ResourceMapINS_6BufferENS_8BufferIDEE6assignES2_PS1_(%"class.gl::ResourceMap"*, i32, %"class.gl::Buffer"*) local_unnamed_addr #3 comdat align 2 {
  %4 = icmp ult i32 %1, 16384
  br i1 %4, label %5, label %36

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %32, label %10

10:                                               ; preds = %5, %10
  %11 = phi i64 [ %13, %10 ], [ %8, %5 ]
  %12 = icmp ugt i64 %11, %6
  %13 = shl i64 %11, 1
  br i1 %12, label %14, label %10

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %0, i64 0, i32 1
  %16 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %15, align 8
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #14
  %22 = bitcast i8* %21 to %"class.gl::Buffer"**
  %23 = bitcast %"class.gl::Buffer"*** %15 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.gl::Buffer"*, %"class.gl::Buffer"** %22, i64 %8
  %25 = bitcast %"class.gl::Buffer"** %24 to i8*
  %26 = sub i64 %11, %8
  %27 = shl i64 %26, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -1, i64 %27, i1 false)
  %28 = bitcast %"class.gl::Buffer"** %16 to i8*
  %29 = shl i64 %8, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %28, i64 %29, i1 false)
  store i64 %11, i64* %7, align 8
  %30 = icmp eq %"class.gl::Buffer"** %16, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %14
  tail call void @_ZdaPv(i8* %28) #14
  br label %32

32:                                               ; preds = %14, %31, %5
  %33 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %0, i64 0, i32 1
  %34 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %33, align 8
  %35 = getelementptr inbounds %"class.gl::Buffer"*, %"class.gl::Buffer"** %34, i64 %6
  br label %111

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %0, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map", %"class.absl::container_internal::raw_hash_map"* %37, i64 0, i32 0
  %39 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !97
  %40 = zext i32 %1 to i64
  %41 = add i64 %39, %40
  %42 = zext i64 %41 to i128
  %43 = mul nuw i128 %42, 11376068507788127593
  %44 = lshr i128 %43, 64
  %45 = xor i128 %44, %43
  %46 = trunc i128 %45 to i64
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map", %"class.absl::container_internal::raw_hash_map"* %37, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8, !noalias !97
  %49 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %50 = load i64, i64* %49, align 8, !noalias !97
  %51 = lshr i64 %46, 7
  %52 = ptrtoint i8* %48 to i64
  %53 = lshr i64 %52, 12
  %54 = xor i64 %51, %53
  %55 = trunc i128 %45 to i8
  %56 = and i8 %55, 127
  %57 = insertelement <16 x i8> undef, i8 %56, i32 0
  %58 = shufflevector <16 x i8> %57, <16 x i8> undef, <16 x i32> zeroinitializer
  %59 = getelementptr inbounds %"class.gl::ResourceMap", %"class.gl::ResourceMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %60

60:                                               ; preds = %90, %36
  %61 = phi i64 [ %54, %36 ], [ %92, %90 ]
  %62 = phi i64 [ 0, %36 ], [ %91, %90 ]
  %63 = and i64 %61, %50
  %64 = getelementptr inbounds i8, i8* %48, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !noalias !97
  %67 = icmp eq <16 x i8> %58, %66
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %60
  %71 = zext i16 %68 to i32
  %72 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %59, align 8, !noalias !97
  br label %73

73:                                               ; preds = %82, %70
  %74 = phi i32 [ %71, %70 ], [ %84, %82 ]
  %75 = tail call i32 @llvm.cttz.i32(i32 %74, i1 false) #11, !range !2
  %76 = zext i32 %75 to i64
  %77 = add i64 %63, %76
  %78 = and i64 %77, %50
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %72, i64 %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 4, !noalias !97
  %81 = icmp eq i32 %80, %1
  br i1 %81, label %100, label %82, !prof !3

82:                                               ; preds = %73
  %83 = add i32 %74, -1
  %84 = and i32 %83, %74
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %73

86:                                               ; preds = %82, %60
  %87 = icmp eq <16 x i8> %66, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %88 = bitcast <16 x i1> %87 to i16
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %93, !prof !4

90:                                               ; preds = %86
  %91 = add i64 %62, 16
  %92 = add i64 %91, %63
  br label %60

93:                                               ; preds = %86
  %94 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"* %38, i64 %46) #11, !noalias !97
  %95 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %59, align 8, !noalias !97
  %96 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %95, i64 %94, i32 0, i32 0
  store i32 %1, i32* %96, align 8, !noalias !97
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %95, i64 %94, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %97, align 8, !noalias !97
  %98 = load i8*, i8** %47, align 8, !noalias !97
  %99 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %59, align 8, !noalias !97
  br label %100

100:                                              ; preds = %73, %93
  %101 = phi %"union.absl::container_internal::map_slot_type"* [ %99, %93 ], [ %72, %73 ]
  %102 = phi i8* [ %98, %93 ], [ %48, %73 ]
  %103 = phi i64 [ %94, %93 ], [ %78, %73 ]
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = icmp ne i8* %104, null
  tail call void @llvm.assume(i1 %105) #11, !noalias !97
  %106 = load i8, i8* %104, align 1
  %107 = icmp sgt i8 %106, -1
  br i1 %107, label %109, label %108, !prof !3

108:                                              ; preds = %100
  tail call void @llvm.trap() #11
  unreachable

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %101, i64 %103, i32 0, i32 1
  br label %111

111:                                              ; preds = %109, %32
  %112 = phi %"class.gl::Buffer"** [ %110, %109 ], [ %35, %32 ]
  store %"class.gl::Buffer"* %2, %"class.gl::Buffer"** %112, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #12

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #11, !range !2
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !3

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 1) #11
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"* %0) #11
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 %58) #11
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #11, !range !2
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #14
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #11
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %95, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %91
  br i1 %24, label %95, label %94

28:                                               ; preds = %25, %91
  %29 = phi i64 [ 0, %25 ], [ %92, %91 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %91

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = add i64 %26, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %7, align 8
  %46 = lshr i64 %43, 7
  %47 = ptrtoint i8* %44 to i64
  %48 = lshr i64 %47, 12
  %49 = xor i64 %46, %48
  %50 = and i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp slt <16 x i8> %53, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %33, %57
  %58 = phi i64 [ %62, %57 ], [ %50, %33 ]
  %59 = phi i64 [ %60, %57 ], [ 0, %33 ]
  %60 = add i64 %59, 16
  %61 = add i64 %60, %58
  %62 = and i64 %61, %45
  %63 = getelementptr inbounds i8, i8* %44, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57, %33
  %70 = phi i64 [ %50, %33 ], [ %62, %57 ]
  %71 = phi i16 [ %55, %33 ], [ %67, %57 ]
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #11, !range !2
  %74 = zext i32 %73 to i64
  %75 = add i64 %70, %74
  %76 = and i64 %75, %45
  %77 = trunc i128 %42 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %44, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %3, align 8
  %81 = add i64 %76, -15
  %82 = load i64, i64* %7, align 8
  %83 = and i64 %81, %82
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  %87 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %5, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %87, i64 %76
  %89 = bitcast %"union.absl::container_internal::map_slot_type"* %88 to i8*
  %90 = bitcast %"union.absl::container_internal::map_slot_type"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #11
  br label %91

91:                                               ; preds = %28, %69
  %92 = add nuw i64 %29, 1
  %93 = icmp eq i64 %92, %8
  br i1 %93, label %27, label %28

94:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #14
  br label %95

95:                                               ; preds = %2, %27, %94
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"*) local_unnamed_addr #13 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #11
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %122, %1
  %12 = phi i64 [ 0, %1 ], [ %124, %122 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %122
  %20 = phi i64 [ %6, %8 ], [ %125, %122 ]
  %21 = phi i64 [ 0, %8 ], [ %124, %122 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %122

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #11, !range !2
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !3

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %122

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %9, align 8
  br i1 %86, label %97, label %111

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %96, i64 %67
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %96, i64 %21
  %100 = bitcast %"union.absl::container_internal::map_slot_type"* %98 to i8*
  %101 = bitcast %"union.absl::container_internal::map_slot_type"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #11
  %102 = load i8*, i8** %2, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %21
  store i8 -128, i8* %103, align 1
  %104 = load i8*, i8** %2, align 8
  %105 = add i64 %21, -15
  %106 = load i64, i64* %4, align 8
  %107 = and i64 %106, %105
  %108 = and i64 %106, 15
  %109 = add i64 %107, %108
  %110 = getelementptr inbounds i8, i8* %104, i64 %109
  store i8 -128, i8* %110, align 1
  br label %122

111:                                              ; preds = %83
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %96, i64 %21
  %113 = bitcast %"union.absl::container_internal::map_slot_type"* %112 to i8*
  %114 = bitcast %"union.absl::container_internal::map_slot_type"* %112 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 8
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %96, i64 %67
  %117 = bitcast %"union.absl::container_internal::map_slot_type"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %117, i64 16, i1 false) #11
  %118 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %9, align 8
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %118, i64 %67
  %120 = bitcast %"union.absl::container_internal::map_slot_type"* %119 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %120, align 8
  %121 = add i64 %21, -1
  br label %122

122:                                              ; preds = %73, %111, %97, %19
  %123 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %121, %111 ]
  %124 = add i64 %123, 1
  %125 = load i64, i64* %4, align 8
  %126 = icmp eq i64 %124, %125
  br i1 %126, label %11, label %19
}

declare void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8*, i64) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6ShaderEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.115"*, i64) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.115", %"class.absl::container_internal::raw_hash_set.115"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.115", %"class.absl::container_internal::raw_hash_set.115"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #11, !range !2
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.115", %"class.absl::container_internal::raw_hash_set.115"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !3

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6ShaderEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.115"* %0, i64 1) #11
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.115", %"class.absl::container_internal::raw_hash_set.115"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6ShaderEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.115"* %0) #11
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6ShaderEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.115"* %0, i64 %58) #11
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #11, !range !2
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.115", %"class.absl::container_internal::raw_hash_set.115"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6ShaderEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.115"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.115", %"class.absl::container_internal::raw_hash_set.115"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.115", %"class.absl::container_internal::raw_hash_set.115"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.116"*, %"union.absl::container_internal::map_slot_type.116"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.115", %"class.absl::container_internal::raw_hash_set.115"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #14
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.116"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #11
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.115", %"class.absl::container_internal::raw_hash_set.115"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.115", %"class.absl::container_internal::raw_hash_set.115"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %95, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %91
  br i1 %24, label %95, label %94

28:                                               ; preds = %25, %91
  %29 = phi i64 [ 0, %25 ], [ %92, %91 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %91

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.116", %"union.absl::container_internal::map_slot_type.116"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.116", %"union.absl::container_internal::map_slot_type.116"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = add i64 %26, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %7, align 8
  %46 = lshr i64 %43, 7
  %47 = ptrtoint i8* %44 to i64
  %48 = lshr i64 %47, 12
  %49 = xor i64 %46, %48
  %50 = and i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp slt <16 x i8> %53, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %33, %57
  %58 = phi i64 [ %62, %57 ], [ %50, %33 ]
  %59 = phi i64 [ %60, %57 ], [ 0, %33 ]
  %60 = add i64 %59, 16
  %61 = add i64 %60, %58
  %62 = and i64 %61, %45
  %63 = getelementptr inbounds i8, i8* %44, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57, %33
  %70 = phi i64 [ %50, %33 ], [ %62, %57 ]
  %71 = phi i16 [ %55, %33 ], [ %67, %57 ]
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #11, !range !2
  %74 = zext i32 %73 to i64
  %75 = add i64 %70, %74
  %76 = and i64 %75, %45
  %77 = trunc i128 %42 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %44, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %3, align 8
  %81 = add i64 %76, -15
  %82 = load i64, i64* %7, align 8
  %83 = and i64 %81, %82
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  %87 = load %"union.absl::container_internal::map_slot_type.116"*, %"union.absl::container_internal::map_slot_type.116"** %5, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.116", %"union.absl::container_internal::map_slot_type.116"* %87, i64 %76
  %89 = bitcast %"union.absl::container_internal::map_slot_type.116"* %88 to i8*
  %90 = bitcast %"union.absl::container_internal::map_slot_type.116"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #11
  br label %91

91:                                               ; preds = %28, %69
  %92 = add nuw i64 %29, 1
  %93 = icmp eq i64 %92, %8
  br i1 %93, label %27, label %28

94:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #14
  br label %95

95:                                               ; preds = %2, %27, %94
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl6ShaderEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.115"*) local_unnamed_addr #13 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.115", %"class.absl::container_internal::raw_hash_set.115"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.115", %"class.absl::container_internal::raw_hash_set.115"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #11
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.115", %"class.absl::container_internal::raw_hash_set.115"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %122, %1
  %12 = phi i64 [ 0, %1 ], [ %124, %122 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.115", %"class.absl::container_internal::raw_hash_set.115"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.115", %"class.absl::container_internal::raw_hash_set.115"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %122
  %20 = phi i64 [ %6, %8 ], [ %125, %122 ]
  %21 = phi i64 [ 0, %8 ], [ %124, %122 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %122

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type.116"*, %"union.absl::container_internal::map_slot_type.116"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.116", %"union.absl::container_internal::map_slot_type.116"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #11, !range !2
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !3

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %122

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type.116"*, %"union.absl::container_internal::map_slot_type.116"** %9, align 8
  br i1 %86, label %97, label %111

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.116", %"union.absl::container_internal::map_slot_type.116"* %96, i64 %67
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.116", %"union.absl::container_internal::map_slot_type.116"* %96, i64 %21
  %100 = bitcast %"union.absl::container_internal::map_slot_type.116"* %98 to i8*
  %101 = bitcast %"union.absl::container_internal::map_slot_type.116"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #11
  %102 = load i8*, i8** %2, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %21
  store i8 -128, i8* %103, align 1
  %104 = load i8*, i8** %2, align 8
  %105 = add i64 %21, -15
  %106 = load i64, i64* %4, align 8
  %107 = and i64 %106, %105
  %108 = and i64 %106, 15
  %109 = add i64 %107, %108
  %110 = getelementptr inbounds i8, i8* %104, i64 %109
  store i8 -128, i8* %110, align 1
  br label %122

111:                                              ; preds = %83
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.116", %"union.absl::container_internal::map_slot_type.116"* %96, i64 %21
  %113 = bitcast %"union.absl::container_internal::map_slot_type.116"* %112 to i8*
  %114 = bitcast %"union.absl::container_internal::map_slot_type.116"* %112 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 8
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.116", %"union.absl::container_internal::map_slot_type.116"* %96, i64 %67
  %117 = bitcast %"union.absl::container_internal::map_slot_type.116"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %117, i64 16, i1 false) #11
  %118 = load %"union.absl::container_internal::map_slot_type.116"*, %"union.absl::container_internal::map_slot_type.116"** %9, align 8
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.116", %"union.absl::container_internal::map_slot_type.116"* %118, i64 %67
  %120 = bitcast %"union.absl::container_internal::map_slot_type.116"* %119 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %120, align 8
  %121 = add i64 %21, -1
  br label %122

122:                                              ; preds = %73, %111, %97, %19
  %123 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %121, %111 ]
  %124 = add i64 %123, 1
  %125 = load i64, i64* %4, align 8
  %126 = icmp eq i64 %124, %125
  br i1 %126, label %11, label %19
}

declare i32 @_ZNK2gl6Shader11getRefCountEv(%"class.gl::Shader"*) local_unnamed_addr #4

declare void @_ZN2gl6Shader9onDestroyEPKNS_7ContextE(%"class.gl::Shader"*, %"class.gl::Context"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2gl11ResourceMapINS_6ShaderENS_15ShaderProgramIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.69"*, i32, %"class.gl::Shader"**) local_unnamed_addr #3 comdat align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.69"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %4
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.69"* %0, i64 0, i32 1
  %10 = load %"class.gl::Shader"**, %"class.gl::Shader"*** %9, align 8
  %11 = getelementptr inbounds %"class.gl::Shader"*, %"class.gl::Shader"** %10, i64 %4
  %12 = load %"class.gl::Shader"*, %"class.gl::Shader"** %11, align 8
  %13 = icmp eq %"class.gl::Shader"* %12, inttoptr (i64 -1 to %"class.gl::Shader"*)
  br i1 %13, label %134, label %14

14:                                               ; preds = %8
  %15 = ptrtoint %"class.gl::Shader"* %12 to i64
  %16 = bitcast %"class.gl::Shader"** %2 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.gl::Shader"* inttoptr (i64 -1 to %"class.gl::Shader"*), %"class.gl::Shader"** %11, align 8
  br label %134

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.69"* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %4
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.115", %"class.absl::container_internal::raw_hash_set.115"* %18, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.69"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.69"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %17
  %40 = phi i64 [ %33, %17 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %17 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.116"*, %"union.absl::container_internal::map_slot_type.116"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #11, !range !2
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.116", %"union.absl::container_internal::map_slot_type.116"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !3

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %134, !prof !4

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #11
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !3

77:                                               ; preds = %72
  tail call void @llvm.trap() #11
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.116", %"union.absl::container_internal::map_slot_type.116"* %51, i64 %57, i32 0, i32 1
  %80 = bitcast %"class.gl::Shader"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.gl::Shader"** %2 to i64*
  store i64 %81, i64* %82, align 8
  %83 = load i8, i8* %73, align 1
  %84 = icmp sgt i8 %83, -1
  br i1 %84, label %86, label %85, !prof !3

85:                                               ; preds = %78
  tail call void @llvm.trap() #11
  unreachable

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.69"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, -1
  store i64 %89, i64* %87, align 8
  %90 = bitcast %"class.absl::container_internal::raw_hash_set.115"* %18 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = ptrtoint i8* %73 to i64
  %93 = sub i64 %92, %91
  %94 = add i64 %93, -16
  %95 = load i64, i64* %28, align 8
  %96 = and i64 %94, %95
  %97 = bitcast i8* %73 to <16 x i8>*
  %98 = load <16 x i8>, <16 x i8>* %97, align 1
  %99 = icmp eq <16 x i8> %98, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %100 = bitcast <16 x i1> %99 to i16
  %101 = inttoptr i64 %91 to i8*
  %102 = getelementptr inbounds i8, i8* %101, i64 %96
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1
  %105 = icmp eq <16 x i8> %104, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %106 = bitcast <16 x i1> %105 to i16
  %107 = icmp ne i16 %106, 0
  %108 = icmp ne i16 %100, 0
  %109 = and i1 %108, %107
  br i1 %109, label %110, label %120

110:                                              ; preds = %86
  %111 = zext i16 %100 to i32
  %112 = zext i16 %106 to i32
  %113 = tail call i32 @llvm.cttz.i32(i32 %111, i1 false) #11, !range !2
  %114 = shl nuw i32 %112, 16
  %115 = tail call i32 @llvm.ctlz.i32(i32 %114, i1 false) #11, !range !2
  %116 = add nuw nsw i32 %115, %113
  %117 = icmp ult i32 %116, 16
  %118 = zext i1 %117 to i64
  %119 = select i1 %117, i8 -128, i8 -2
  br label %120

120:                                              ; preds = %86, %110
  %121 = phi i64 [ 0, %86 ], [ %118, %110 ]
  %122 = phi i8 [ -2, %86 ], [ %119, %110 ]
  %123 = getelementptr inbounds i8, i8* %101, i64 %93
  store i8 %122, i8* %123, align 1
  %124 = load i8*, i8** %26, align 8
  %125 = add i64 %93, -15
  %126 = load i64, i64* %28, align 8
  %127 = and i64 %126, %125
  %128 = and i64 %126, 15
  %129 = add i64 %127, %128
  %130 = getelementptr inbounds i8, i8* %124, i64 %129
  store i8 %122, i8* %130, align 1
  %131 = getelementptr inbounds %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.69"* %0, i64 0, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, %121
  store i64 %133, i64* %131, align 8
  br label %134

134:                                              ; preds = %65, %14, %120, %8
  %135 = phi i1 [ false, %8 ], [ true, %120 ], [ true, %14 ], [ false, %65 ]
  ret i1 %135
}

declare void @_ZN2gl6Shader15flagForDeletionEv(%"class.gl::Shader"*) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7ProgramEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.243"*, i64) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.243", %"class.absl::container_internal::raw_hash_set.243"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.243", %"class.absl::container_internal::raw_hash_set.243"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #11, !range !2
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.243", %"class.absl::container_internal::raw_hash_set.243"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !3

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7ProgramEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.243"* %0, i64 1) #11
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.243", %"class.absl::container_internal::raw_hash_set.243"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7ProgramEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.243"* %0) #11
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7ProgramEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.243"* %0, i64 %58) #11
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #11, !range !2
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.243", %"class.absl::container_internal::raw_hash_set.243"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7ProgramEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.243"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.243", %"class.absl::container_internal::raw_hash_set.243"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.243", %"class.absl::container_internal::raw_hash_set.243"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.243", %"class.absl::container_internal::raw_hash_set.243"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #14
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.244"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #11
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.243", %"class.absl::container_internal::raw_hash_set.243"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.243", %"class.absl::container_internal::raw_hash_set.243"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %95, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %91
  br i1 %24, label %95, label %94

28:                                               ; preds = %25, %91
  %29 = phi i64 [ 0, %25 ], [ %92, %91 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %91

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = add i64 %26, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %7, align 8
  %46 = lshr i64 %43, 7
  %47 = ptrtoint i8* %44 to i64
  %48 = lshr i64 %47, 12
  %49 = xor i64 %46, %48
  %50 = and i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp slt <16 x i8> %53, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %33, %57
  %58 = phi i64 [ %62, %57 ], [ %50, %33 ]
  %59 = phi i64 [ %60, %57 ], [ 0, %33 ]
  %60 = add i64 %59, 16
  %61 = add i64 %60, %58
  %62 = and i64 %61, %45
  %63 = getelementptr inbounds i8, i8* %44, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57, %33
  %70 = phi i64 [ %50, %33 ], [ %62, %57 ]
  %71 = phi i16 [ %55, %33 ], [ %67, %57 ]
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #11, !range !2
  %74 = zext i32 %73 to i64
  %75 = add i64 %70, %74
  %76 = and i64 %75, %45
  %77 = trunc i128 %42 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %44, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %3, align 8
  %81 = add i64 %76, -15
  %82 = load i64, i64* %7, align 8
  %83 = and i64 %81, %82
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  %87 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %5, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %87, i64 %76
  %89 = bitcast %"union.absl::container_internal::map_slot_type.244"* %88 to i8*
  %90 = bitcast %"union.absl::container_internal::map_slot_type.244"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #11
  br label %91

91:                                               ; preds = %28, %69
  %92 = add nuw i64 %29, 1
  %93 = icmp eq i64 %92, %8
  br i1 %93, label %27, label %28

94:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #14
  br label %95

95:                                               ; preds = %2, %27, %94
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7ProgramEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.243"*) local_unnamed_addr #13 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.243", %"class.absl::container_internal::raw_hash_set.243"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.243", %"class.absl::container_internal::raw_hash_set.243"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #11
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.243", %"class.absl::container_internal::raw_hash_set.243"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %122, %1
  %12 = phi i64 [ 0, %1 ], [ %124, %122 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.243", %"class.absl::container_internal::raw_hash_set.243"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.243", %"class.absl::container_internal::raw_hash_set.243"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %122
  %20 = phi i64 [ %6, %8 ], [ %125, %122 ]
  %21 = phi i64 [ 0, %8 ], [ %124, %122 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %122

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #11, !range !2
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !3

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %122

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %9, align 8
  br i1 %86, label %97, label %111

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %96, i64 %67
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %96, i64 %21
  %100 = bitcast %"union.absl::container_internal::map_slot_type.244"* %98 to i8*
  %101 = bitcast %"union.absl::container_internal::map_slot_type.244"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #11
  %102 = load i8*, i8** %2, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %21
  store i8 -128, i8* %103, align 1
  %104 = load i8*, i8** %2, align 8
  %105 = add i64 %21, -15
  %106 = load i64, i64* %4, align 8
  %107 = and i64 %106, %105
  %108 = and i64 %106, 15
  %109 = add i64 %107, %108
  %110 = getelementptr inbounds i8, i8* %104, i64 %109
  store i8 -128, i8* %110, align 1
  br label %122

111:                                              ; preds = %83
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %96, i64 %21
  %113 = bitcast %"union.absl::container_internal::map_slot_type.244"* %112 to i8*
  %114 = bitcast %"union.absl::container_internal::map_slot_type.244"* %112 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 8
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %96, i64 %67
  %117 = bitcast %"union.absl::container_internal::map_slot_type.244"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %117, i64 16, i1 false) #11
  %118 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %9, align 8
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %118, i64 %67
  %120 = bitcast %"union.absl::container_internal::map_slot_type.244"* %119 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %120, align 8
  %121 = add i64 %21, -1
  br label %122

122:                                              ; preds = %73, %111, %97, %19
  %123 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %121, %111 ]
  %124 = add i64 %123, 1
  %125 = load i64, i64* %4, align 8
  %126 = icmp eq i64 %124, %125
  br i1 %126, label %11, label %19
}

declare i32 @_ZNK2gl7Program11getRefCountEv(%"class.gl::Program"*) local_unnamed_addr #4

declare void @_ZN2gl7Program9onDestroyEPKNS_7ContextE(%"class.gl::Program"*, %"class.gl::Context"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2gl11ResourceMapINS_7ProgramENS_15ShaderProgramIDEE5eraseES2_PPS1_(%"class.gl::ResourceMap.122"*, i32, %"class.gl::Program"**) local_unnamed_addr #3 comdat align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.gl::ResourceMap.122", %"class.gl::ResourceMap.122"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %4
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gl::ResourceMap.122", %"class.gl::ResourceMap.122"* %0, i64 0, i32 1
  %10 = load %"class.gl::Program"**, %"class.gl::Program"*** %9, align 8
  %11 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %10, i64 %4
  %12 = load %"class.gl::Program"*, %"class.gl::Program"** %11, align 8
  %13 = icmp eq %"class.gl::Program"* %12, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %13, label %134, label %14

14:                                               ; preds = %8
  %15 = ptrtoint %"class.gl::Program"* %12 to i64
  %16 = bitcast %"class.gl::Program"** %2 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.gl::Program"* inttoptr (i64 -1 to %"class.gl::Program"*), %"class.gl::Program"** %11, align 8
  br label %134

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.gl::ResourceMap.122", %"class.gl::ResourceMap.122"* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %20 = add i64 %19, %4
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.243", %"class.absl::container_internal::raw_hash_set.243"* %18, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ResourceMap.122", %"class.gl::ResourceMap.122"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.gl::ResourceMap.122", %"class.gl::ResourceMap.122"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %69, %17
  %40 = phi i64 [ %33, %17 ], [ %71, %69 ]
  %41 = phi i64 [ 0, %17 ], [ %70, %69 ]
  %42 = and i64 %40, %29
  %43 = getelementptr inbounds i8, i8* %27, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp eq <16 x i8> %37, %45
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %39
  %50 = zext i16 %47 to i32
  %51 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %38, align 8
  br label %52

52:                                               ; preds = %61, %49
  %53 = phi i32 [ %50, %49 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #11, !range !2
  %55 = zext i32 %54 to i64
  %56 = add i64 %42, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %72, label %61, !prof !3

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %39
  %66 = icmp eq <16 x i8> %45, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %134, !prof !4

69:                                               ; preds = %65
  %70 = add i64 %41, 16
  %71 = add i64 %70, %42
  br label %39

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #11
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !3

77:                                               ; preds = %72
  tail call void @llvm.trap() #11
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %51, i64 %57, i32 0, i32 1
  %80 = bitcast %"class.gl::Program"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.gl::Program"** %2 to i64*
  store i64 %81, i64* %82, align 8
  %83 = load i8, i8* %73, align 1
  %84 = icmp sgt i8 %83, -1
  br i1 %84, label %86, label %85, !prof !3

85:                                               ; preds = %78
  tail call void @llvm.trap() #11
  unreachable

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.gl::ResourceMap.122", %"class.gl::ResourceMap.122"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, -1
  store i64 %89, i64* %87, align 8
  %90 = bitcast %"class.absl::container_internal::raw_hash_set.243"* %18 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = ptrtoint i8* %73 to i64
  %93 = sub i64 %92, %91
  %94 = add i64 %93, -16
  %95 = load i64, i64* %28, align 8
  %96 = and i64 %94, %95
  %97 = bitcast i8* %73 to <16 x i8>*
  %98 = load <16 x i8>, <16 x i8>* %97, align 1
  %99 = icmp eq <16 x i8> %98, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %100 = bitcast <16 x i1> %99 to i16
  %101 = inttoptr i64 %91 to i8*
  %102 = getelementptr inbounds i8, i8* %101, i64 %96
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1
  %105 = icmp eq <16 x i8> %104, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %106 = bitcast <16 x i1> %105 to i16
  %107 = icmp ne i16 %106, 0
  %108 = icmp ne i16 %100, 0
  %109 = and i1 %108, %107
  br i1 %109, label %110, label %120

110:                                              ; preds = %86
  %111 = zext i16 %100 to i32
  %112 = zext i16 %106 to i32
  %113 = tail call i32 @llvm.cttz.i32(i32 %111, i1 false) #11, !range !2
  %114 = shl nuw i32 %112, 16
  %115 = tail call i32 @llvm.ctlz.i32(i32 %114, i1 false) #11, !range !2
  %116 = add nuw nsw i32 %115, %113
  %117 = icmp ult i32 %116, 16
  %118 = zext i1 %117 to i64
  %119 = select i1 %117, i8 -128, i8 -2
  br label %120

120:                                              ; preds = %86, %110
  %121 = phi i64 [ 0, %86 ], [ %118, %110 ]
  %122 = phi i8 [ -2, %86 ], [ %119, %110 ]
  %123 = getelementptr inbounds i8, i8* %101, i64 %93
  store i8 %122, i8* %123, align 1
  %124 = load i8*, i8** %26, align 8
  %125 = add i64 %93, -15
  %126 = load i64, i64* %28, align 8
  %127 = and i64 %126, %125
  %128 = and i64 %126, 15
  %129 = add i64 %127, %128
  %130 = getelementptr inbounds i8, i8* %124, i64 %129
  store i8 %122, i8* %130, align 1
  %131 = getelementptr inbounds %"class.gl::ResourceMap.122", %"class.gl::ResourceMap.122"* %0, i64 0, i32 2, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, %121
  store i64 %133, i64* %131, align 8
  br label %134

134:                                              ; preds = %65, %14, %120, %8
  %135 = phi i1 [ false, %8 ], [ true, %120 ], [ true, %14 ], [ false, %65 ]
  ret i1 %135
}

declare void @_ZN2gl7Program15flagForDeletionEv(%"class.gl::Program"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl11ResourceMapINS_7TextureENS_9TextureIDEE6assignES2_PS1_(%"class.gl::ResourceMap.251"*, i32, %"class.gl::Texture"*) local_unnamed_addr #3 comdat align 2 {
  %4 = icmp ult i32 %1, 16384
  br i1 %4, label %5, label %36

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %32, label %10

10:                                               ; preds = %5, %10
  %11 = phi i64 [ %13, %10 ], [ %8, %5 ]
  %12 = icmp ugt i64 %11, %6
  %13 = shl i64 %11, 1
  br i1 %12, label %14, label %10

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %0, i64 0, i32 1
  %16 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %15, align 8
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #14
  %22 = bitcast i8* %21 to %"class.gl::Texture"**
  %23 = bitcast %"class.gl::Texture"*** %15 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %22, i64 %8
  %25 = bitcast %"class.gl::Texture"** %24 to i8*
  %26 = sub i64 %11, %8
  %27 = shl i64 %26, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -1, i64 %27, i1 false)
  %28 = bitcast %"class.gl::Texture"** %16 to i8*
  %29 = shl i64 %8, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %28, i64 %29, i1 false)
  store i64 %11, i64* %7, align 8
  %30 = icmp eq %"class.gl::Texture"** %16, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %14
  tail call void @_ZdaPv(i8* %28) #14
  br label %32

32:                                               ; preds = %14, %31, %5
  %33 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %0, i64 0, i32 1
  %34 = load %"class.gl::Texture"**, %"class.gl::Texture"*** %33, align 8
  %35 = getelementptr inbounds %"class.gl::Texture"*, %"class.gl::Texture"** %34, i64 %6
  br label %111

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %0, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.271", %"class.absl::container_internal::raw_hash_map.271"* %37, i64 0, i32 0
  %39 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !100
  %40 = zext i32 %1 to i64
  %41 = add i64 %39, %40
  %42 = zext i64 %41 to i128
  %43 = mul nuw i128 %42, 11376068507788127593
  %44 = lshr i128 %43, 64
  %45 = xor i128 %44, %43
  %46 = trunc i128 %45 to i64
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.271", %"class.absl::container_internal::raw_hash_map.271"* %37, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8, !noalias !100
  %49 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %50 = load i64, i64* %49, align 8, !noalias !100
  %51 = lshr i64 %46, 7
  %52 = ptrtoint i8* %48 to i64
  %53 = lshr i64 %52, 12
  %54 = xor i64 %51, %53
  %55 = trunc i128 %45 to i8
  %56 = and i8 %55, 127
  %57 = insertelement <16 x i8> undef, i8 %56, i32 0
  %58 = shufflevector <16 x i8> %57, <16 x i8> undef, <16 x i32> zeroinitializer
  %59 = getelementptr inbounds %"class.gl::ResourceMap.251", %"class.gl::ResourceMap.251"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %60

60:                                               ; preds = %90, %36
  %61 = phi i64 [ %54, %36 ], [ %92, %90 ]
  %62 = phi i64 [ 0, %36 ], [ %91, %90 ]
  %63 = and i64 %61, %50
  %64 = getelementptr inbounds i8, i8* %48, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !noalias !100
  %67 = icmp eq <16 x i8> %58, %66
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %60
  %71 = zext i16 %68 to i32
  %72 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %59, align 8, !noalias !100
  br label %73

73:                                               ; preds = %82, %70
  %74 = phi i32 [ %71, %70 ], [ %84, %82 ]
  %75 = tail call i32 @llvm.cttz.i32(i32 %74, i1 false) #11, !range !2
  %76 = zext i32 %75 to i64
  %77 = add i64 %63, %76
  %78 = and i64 %77, %50
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %72, i64 %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 4, !noalias !100
  %81 = icmp eq i32 %80, %1
  br i1 %81, label %100, label %82, !prof !3

82:                                               ; preds = %73
  %83 = add i32 %74, -1
  %84 = and i32 %83, %74
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %73

86:                                               ; preds = %82, %60
  %87 = icmp eq <16 x i8> %66, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %88 = bitcast <16 x i1> %87 to i16
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %93, !prof !4

90:                                               ; preds = %86
  %91 = add i64 %62, 16
  %92 = add i64 %91, %63
  br label %60

93:                                               ; preds = %86
  %94 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.272"* %38, i64 %46) #11, !noalias !100
  %95 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %59, align 8, !noalias !100
  %96 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %95, i64 %94, i32 0, i32 0
  store i32 %1, i32* %96, align 8, !noalias !100
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %95, i64 %94, i32 0, i32 1
  store %"class.gl::Texture"* null, %"class.gl::Texture"** %97, align 8, !noalias !100
  %98 = load i8*, i8** %47, align 8, !noalias !100
  %99 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %59, align 8, !noalias !100
  br label %100

100:                                              ; preds = %73, %93
  %101 = phi %"union.absl::container_internal::map_slot_type.273"* [ %99, %93 ], [ %72, %73 ]
  %102 = phi i8* [ %98, %93 ], [ %48, %73 ]
  %103 = phi i64 [ %94, %93 ], [ %78, %73 ]
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = icmp ne i8* %104, null
  tail call void @llvm.assume(i1 %105) #11, !noalias !100
  %106 = load i8, i8* %104, align 1
  %107 = icmp sgt i8 %106, -1
  br i1 %107, label %109, label %108, !prof !3

108:                                              ; preds = %100
  tail call void @llvm.trap() #11
  unreachable

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %101, i64 %103, i32 0, i32 1
  br label %111

111:                                              ; preds = %109, %32
  %112 = phi %"class.gl::Texture"** [ %110, %109 ], [ %35, %32 ]
  store %"class.gl::Texture"* %2, %"class.gl::Texture"** %112, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.272"*, i64) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #11, !range !2
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !3

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.272"* %0, i64 1) #11
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.272"* %0) #11
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.272"* %0, i64 %58) #11
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #11, !range !2
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.272"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #14
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.273"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #11
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %95, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %91
  br i1 %24, label %95, label %94

28:                                               ; preds = %25, %91
  %29 = phi i64 [ 0, %25 ], [ %92, %91 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %91

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = add i64 %26, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %7, align 8
  %46 = lshr i64 %43, 7
  %47 = ptrtoint i8* %44 to i64
  %48 = lshr i64 %47, 12
  %49 = xor i64 %46, %48
  %50 = and i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp slt <16 x i8> %53, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %33, %57
  %58 = phi i64 [ %62, %57 ], [ %50, %33 ]
  %59 = phi i64 [ %60, %57 ], [ 0, %33 ]
  %60 = add i64 %59, 16
  %61 = add i64 %60, %58
  %62 = and i64 %61, %45
  %63 = getelementptr inbounds i8, i8* %44, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57, %33
  %70 = phi i64 [ %50, %33 ], [ %62, %57 ]
  %71 = phi i16 [ %55, %33 ], [ %67, %57 ]
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #11, !range !2
  %74 = zext i32 %73 to i64
  %75 = add i64 %70, %74
  %76 = and i64 %75, %45
  %77 = trunc i128 %42 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %44, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %3, align 8
  %81 = add i64 %76, -15
  %82 = load i64, i64* %7, align 8
  %83 = and i64 %81, %82
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  %87 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %5, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %87, i64 %76
  %89 = bitcast %"union.absl::container_internal::map_slot_type.273"* %88 to i8*
  %90 = bitcast %"union.absl::container_internal::map_slot_type.273"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #11
  br label %91

91:                                               ; preds = %28, %69
  %92 = add nuw i64 %29, 1
  %93 = icmp eq i64 %92, %8
  br i1 %93, label %27, label %28

94:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #14
  br label %95

95:                                               ; preds = %2, %27, %94
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.272"*) local_unnamed_addr #13 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #11
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %122, %1
  %12 = phi i64 [ 0, %1 ], [ %124, %122 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.272", %"class.absl::container_internal::raw_hash_set.272"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %122
  %20 = phi i64 [ %6, %8 ], [ %125, %122 ]
  %21 = phi i64 [ 0, %8 ], [ %124, %122 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %122

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #11, !range !2
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !3

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %122

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %9, align 8
  br i1 %86, label %97, label %111

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %96, i64 %67
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %96, i64 %21
  %100 = bitcast %"union.absl::container_internal::map_slot_type.273"* %98 to i8*
  %101 = bitcast %"union.absl::container_internal::map_slot_type.273"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #11
  %102 = load i8*, i8** %2, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %21
  store i8 -128, i8* %103, align 1
  %104 = load i8*, i8** %2, align 8
  %105 = add i64 %21, -15
  %106 = load i64, i64* %4, align 8
  %107 = and i64 %106, %105
  %108 = and i64 %106, 15
  %109 = add i64 %107, %108
  %110 = getelementptr inbounds i8, i8* %104, i64 %109
  store i8 -128, i8* %110, align 1
  br label %122

111:                                              ; preds = %83
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %96, i64 %21
  %113 = bitcast %"union.absl::container_internal::map_slot_type.273"* %112 to i8*
  %114 = bitcast %"union.absl::container_internal::map_slot_type.273"* %112 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 8
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %96, i64 %67
  %117 = bitcast %"union.absl::container_internal::map_slot_type.273"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %117, i64 16, i1 false) #11
  %118 = load %"union.absl::container_internal::map_slot_type.273"*, %"union.absl::container_internal::map_slot_type.273"** %9, align 8
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.273", %"union.absl::container_internal::map_slot_type.273"* %118, i64 %67
  %120 = bitcast %"union.absl::container_internal::map_slot_type.273"* %119 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %120, align 8
  %121 = add i64 %21, -1
  br label %122

122:                                              ; preds = %73, %111, %97, %19
  %123 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %121, %111 ]
  %124 = add i64 %123, 1
  %125 = load i64, i64* %4, align 8
  %126 = icmp eq i64 %124, %125
  br i1 %126, label %11, label %19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl11ResourceMapINS_12RenderbufferENS_14RenderbufferIDEE6assignES2_PS1_(%"class.gl::ResourceMap.280"*, i32, %"class.gl::Renderbuffer"*) local_unnamed_addr #3 comdat align 2 {
  %4 = icmp ult i32 %1, 16384
  br i1 %4, label %5, label %36

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %32, label %10

10:                                               ; preds = %5, %10
  %11 = phi i64 [ %13, %10 ], [ %8, %5 ]
  %12 = icmp ugt i64 %11, %6
  %13 = shl i64 %11, 1
  br i1 %12, label %14, label %10

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %0, i64 0, i32 1
  %16 = load %"class.gl::Renderbuffer"**, %"class.gl::Renderbuffer"*** %15, align 8
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #14
  %22 = bitcast i8* %21 to %"class.gl::Renderbuffer"**
  %23 = bitcast %"class.gl::Renderbuffer"*** %15 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %22, i64 %8
  %25 = bitcast %"class.gl::Renderbuffer"** %24 to i8*
  %26 = sub i64 %11, %8
  %27 = shl i64 %26, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -1, i64 %27, i1 false)
  %28 = bitcast %"class.gl::Renderbuffer"** %16 to i8*
  %29 = shl i64 %8, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %28, i64 %29, i1 false)
  store i64 %11, i64* %7, align 8
  %30 = icmp eq %"class.gl::Renderbuffer"** %16, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %14
  tail call void @_ZdaPv(i8* %28) #14
  br label %32

32:                                               ; preds = %14, %31, %5
  %33 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %0, i64 0, i32 1
  %34 = load %"class.gl::Renderbuffer"**, %"class.gl::Renderbuffer"*** %33, align 8
  %35 = getelementptr inbounds %"class.gl::Renderbuffer"*, %"class.gl::Renderbuffer"** %34, i64 %6
  br label %111

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %0, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.282", %"class.absl::container_internal::raw_hash_map.282"* %37, i64 0, i32 0
  %39 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !103
  %40 = zext i32 %1 to i64
  %41 = add i64 %39, %40
  %42 = zext i64 %41 to i128
  %43 = mul nuw i128 %42, 11376068507788127593
  %44 = lshr i128 %43, 64
  %45 = xor i128 %44, %43
  %46 = trunc i128 %45 to i64
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.282", %"class.absl::container_internal::raw_hash_map.282"* %37, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8, !noalias !103
  %49 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %50 = load i64, i64* %49, align 8, !noalias !103
  %51 = lshr i64 %46, 7
  %52 = ptrtoint i8* %48 to i64
  %53 = lshr i64 %52, 12
  %54 = xor i64 %51, %53
  %55 = trunc i128 %45 to i8
  %56 = and i8 %55, 127
  %57 = insertelement <16 x i8> undef, i8 %56, i32 0
  %58 = shufflevector <16 x i8> %57, <16 x i8> undef, <16 x i32> zeroinitializer
  %59 = getelementptr inbounds %"class.gl::ResourceMap.280", %"class.gl::ResourceMap.280"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %60

60:                                               ; preds = %90, %36
  %61 = phi i64 [ %54, %36 ], [ %92, %90 ]
  %62 = phi i64 [ 0, %36 ], [ %91, %90 ]
  %63 = and i64 %61, %50
  %64 = getelementptr inbounds i8, i8* %48, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !noalias !103
  %67 = icmp eq <16 x i8> %58, %66
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %60
  %71 = zext i16 %68 to i32
  %72 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %59, align 8, !noalias !103
  br label %73

73:                                               ; preds = %82, %70
  %74 = phi i32 [ %71, %70 ], [ %84, %82 ]
  %75 = tail call i32 @llvm.cttz.i32(i32 %74, i1 false) #11, !range !2
  %76 = zext i32 %75 to i64
  %77 = add i64 %63, %76
  %78 = and i64 %77, %50
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %72, i64 %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 4, !noalias !103
  %81 = icmp eq i32 %80, %1
  br i1 %81, label %100, label %82, !prof !3

82:                                               ; preds = %73
  %83 = add i32 %74, -1
  %84 = and i32 %83, %74
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %73

86:                                               ; preds = %82, %60
  %87 = icmp eq <16 x i8> %66, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %88 = bitcast <16 x i1> %87 to i16
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %93, !prof !4

90:                                               ; preds = %86
  %91 = add i64 %62, 16
  %92 = add i64 %91, %63
  br label %60

93:                                               ; preds = %86
  %94 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.283"* %38, i64 %46) #11, !noalias !103
  %95 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %59, align 8, !noalias !103
  %96 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %95, i64 %94, i32 0, i32 0
  store i32 %1, i32* %96, align 8, !noalias !103
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %95, i64 %94, i32 0, i32 1
  store %"class.gl::Renderbuffer"* null, %"class.gl::Renderbuffer"** %97, align 8, !noalias !103
  %98 = load i8*, i8** %47, align 8, !noalias !103
  %99 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %59, align 8, !noalias !103
  br label %100

100:                                              ; preds = %73, %93
  %101 = phi %"union.absl::container_internal::map_slot_type.284"* [ %99, %93 ], [ %72, %73 ]
  %102 = phi i8* [ %98, %93 ], [ %48, %73 ]
  %103 = phi i64 [ %94, %93 ], [ %78, %73 ]
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = icmp ne i8* %104, null
  tail call void @llvm.assume(i1 %105) #11, !noalias !103
  %106 = load i8, i8* %104, align 1
  %107 = icmp sgt i8 %106, -1
  br i1 %107, label %109, label %108, !prof !3

108:                                              ; preds = %100
  tail call void @llvm.trap() #11
  unreachable

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %101, i64 %103, i32 0, i32 1
  br label %111

111:                                              ; preds = %109, %32
  %112 = phi %"class.gl::Renderbuffer"** [ %110, %109 ], [ %35, %32 ]
  store %"class.gl::Renderbuffer"* %2, %"class.gl::Renderbuffer"** %112, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.283"*, i64) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #11, !range !2
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !3

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.283"* %0, i64 1) #11
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.283"* %0) #11
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.283"* %0, i64 %58) #11
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #11, !range !2
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.283"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #14
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.284"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #11
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %95, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %91
  br i1 %24, label %95, label %94

28:                                               ; preds = %25, %91
  %29 = phi i64 [ 0, %25 ], [ %92, %91 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %91

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = add i64 %26, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %7, align 8
  %46 = lshr i64 %43, 7
  %47 = ptrtoint i8* %44 to i64
  %48 = lshr i64 %47, 12
  %49 = xor i64 %46, %48
  %50 = and i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp slt <16 x i8> %53, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %33, %57
  %58 = phi i64 [ %62, %57 ], [ %50, %33 ]
  %59 = phi i64 [ %60, %57 ], [ 0, %33 ]
  %60 = add i64 %59, 16
  %61 = add i64 %60, %58
  %62 = and i64 %61, %45
  %63 = getelementptr inbounds i8, i8* %44, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57, %33
  %70 = phi i64 [ %50, %33 ], [ %62, %57 ]
  %71 = phi i16 [ %55, %33 ], [ %67, %57 ]
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #11, !range !2
  %74 = zext i32 %73 to i64
  %75 = add i64 %70, %74
  %76 = and i64 %75, %45
  %77 = trunc i128 %42 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %44, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %3, align 8
  %81 = add i64 %76, -15
  %82 = load i64, i64* %7, align 8
  %83 = and i64 %81, %82
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  %87 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %5, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %87, i64 %76
  %89 = bitcast %"union.absl::container_internal::map_slot_type.284"* %88 to i8*
  %90 = bitcast %"union.absl::container_internal::map_slot_type.284"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #11
  br label %91

91:                                               ; preds = %28, %69
  %92 = add nuw i64 %29, 1
  %93 = icmp eq i64 %92, %8
  br i1 %93, label %27, label %28

94:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #14
  br label %95

95:                                               ; preds = %2, %27, %94
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.283"*) local_unnamed_addr #13 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #11
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %122, %1
  %12 = phi i64 [ 0, %1 ], [ %124, %122 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.283", %"class.absl::container_internal::raw_hash_set.283"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %122
  %20 = phi i64 [ %6, %8 ], [ %125, %122 ]
  %21 = phi i64 [ 0, %8 ], [ %124, %122 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %122

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #11, !range !2
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !3

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %122

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %9, align 8
  br i1 %86, label %97, label %111

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %96, i64 %67
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %96, i64 %21
  %100 = bitcast %"union.absl::container_internal::map_slot_type.284"* %98 to i8*
  %101 = bitcast %"union.absl::container_internal::map_slot_type.284"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #11
  %102 = load i8*, i8** %2, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %21
  store i8 -128, i8* %103, align 1
  %104 = load i8*, i8** %2, align 8
  %105 = add i64 %21, -15
  %106 = load i64, i64* %4, align 8
  %107 = and i64 %106, %105
  %108 = and i64 %106, 15
  %109 = add i64 %107, %108
  %110 = getelementptr inbounds i8, i8* %104, i64 %109
  store i8 -128, i8* %110, align 1
  br label %122

111:                                              ; preds = %83
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %96, i64 %21
  %113 = bitcast %"union.absl::container_internal::map_slot_type.284"* %112 to i8*
  %114 = bitcast %"union.absl::container_internal::map_slot_type.284"* %112 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 8
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %96, i64 %67
  %117 = bitcast %"union.absl::container_internal::map_slot_type.284"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %117, i64 16, i1 false) #11
  %118 = load %"union.absl::container_internal::map_slot_type.284"*, %"union.absl::container_internal::map_slot_type.284"** %9, align 8
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.284", %"union.absl::container_internal::map_slot_type.284"* %118, i64 %67
  %120 = bitcast %"union.absl::container_internal::map_slot_type.284"* %119 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %120, align 8
  %121 = add i64 %21, -1
  br label %122

122:                                              ; preds = %73, %111, %97, %19
  %123 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %121, %111 ]
  %124 = add i64 %123, 1
  %125 = load i64, i64* %4, align 8
  %126 = icmp eq i64 %124, %125
  br i1 %126, label %11, label %19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl11ResourceMapINS_7SamplerENS_9SamplerIDEE6assignES2_PS1_(%"class.gl::ResourceMap.291"*, i32, %"class.gl::Sampler"*) local_unnamed_addr #3 comdat align 2 {
  %4 = icmp ult i32 %1, 16384
  br i1 %4, label %5, label %36

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %32, label %10

10:                                               ; preds = %5, %10
  %11 = phi i64 [ %13, %10 ], [ %8, %5 ]
  %12 = icmp ugt i64 %11, %6
  %13 = shl i64 %11, 1
  br i1 %12, label %14, label %10

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %0, i64 0, i32 1
  %16 = load %"class.gl::Sampler"**, %"class.gl::Sampler"*** %15, align 8
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #14
  %22 = bitcast i8* %21 to %"class.gl::Sampler"**
  %23 = bitcast %"class.gl::Sampler"*** %15 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.gl::Sampler"*, %"class.gl::Sampler"** %22, i64 %8
  %25 = bitcast %"class.gl::Sampler"** %24 to i8*
  %26 = sub i64 %11, %8
  %27 = shl i64 %26, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -1, i64 %27, i1 false)
  %28 = bitcast %"class.gl::Sampler"** %16 to i8*
  %29 = shl i64 %8, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %28, i64 %29, i1 false)
  store i64 %11, i64* %7, align 8
  %30 = icmp eq %"class.gl::Sampler"** %16, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %14
  tail call void @_ZdaPv(i8* %28) #14
  br label %32

32:                                               ; preds = %14, %31, %5
  %33 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %0, i64 0, i32 1
  %34 = load %"class.gl::Sampler"**, %"class.gl::Sampler"*** %33, align 8
  %35 = getelementptr inbounds %"class.gl::Sampler"*, %"class.gl::Sampler"** %34, i64 %6
  br label %111

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %0, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.295", %"class.absl::container_internal::raw_hash_map.295"* %37, i64 0, i32 0
  %39 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !106
  %40 = zext i32 %1 to i64
  %41 = add i64 %39, %40
  %42 = zext i64 %41 to i128
  %43 = mul nuw i128 %42, 11376068507788127593
  %44 = lshr i128 %43, 64
  %45 = xor i128 %44, %43
  %46 = trunc i128 %45 to i64
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.295", %"class.absl::container_internal::raw_hash_map.295"* %37, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8, !noalias !106
  %49 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %50 = load i64, i64* %49, align 8, !noalias !106
  %51 = lshr i64 %46, 7
  %52 = ptrtoint i8* %48 to i64
  %53 = lshr i64 %52, 12
  %54 = xor i64 %51, %53
  %55 = trunc i128 %45 to i8
  %56 = and i8 %55, 127
  %57 = insertelement <16 x i8> undef, i8 %56, i32 0
  %58 = shufflevector <16 x i8> %57, <16 x i8> undef, <16 x i32> zeroinitializer
  %59 = getelementptr inbounds %"class.gl::ResourceMap.291", %"class.gl::ResourceMap.291"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %60

60:                                               ; preds = %90, %36
  %61 = phi i64 [ %54, %36 ], [ %92, %90 ]
  %62 = phi i64 [ 0, %36 ], [ %91, %90 ]
  %63 = and i64 %61, %50
  %64 = getelementptr inbounds i8, i8* %48, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !noalias !106
  %67 = icmp eq <16 x i8> %58, %66
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %60
  %71 = zext i16 %68 to i32
  %72 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %59, align 8, !noalias !106
  br label %73

73:                                               ; preds = %82, %70
  %74 = phi i32 [ %71, %70 ], [ %84, %82 ]
  %75 = tail call i32 @llvm.cttz.i32(i32 %74, i1 false) #11, !range !2
  %76 = zext i32 %75 to i64
  %77 = add i64 %63, %76
  %78 = and i64 %77, %50
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %72, i64 %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 4, !noalias !106
  %81 = icmp eq i32 %80, %1
  br i1 %81, label %100, label %82, !prof !3

82:                                               ; preds = %73
  %83 = add i32 %74, -1
  %84 = and i32 %83, %74
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %73

86:                                               ; preds = %82, %60
  %87 = icmp eq <16 x i8> %66, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %88 = bitcast <16 x i1> %87 to i16
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %93, !prof !4

90:                                               ; preds = %86
  %91 = add i64 %62, 16
  %92 = add i64 %91, %63
  br label %60

93:                                               ; preds = %86
  %94 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.296"* %38, i64 %46) #11, !noalias !106
  %95 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %59, align 8, !noalias !106
  %96 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %95, i64 %94, i32 0, i32 0
  store i32 %1, i32* %96, align 8, !noalias !106
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %95, i64 %94, i32 0, i32 1
  store %"class.gl::Sampler"* null, %"class.gl::Sampler"** %97, align 8, !noalias !106
  %98 = load i8*, i8** %47, align 8, !noalias !106
  %99 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %59, align 8, !noalias !106
  br label %100

100:                                              ; preds = %73, %93
  %101 = phi %"union.absl::container_internal::map_slot_type.297"* [ %99, %93 ], [ %72, %73 ]
  %102 = phi i8* [ %98, %93 ], [ %48, %73 ]
  %103 = phi i64 [ %94, %93 ], [ %78, %73 ]
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = icmp ne i8* %104, null
  tail call void @llvm.assume(i1 %105) #11, !noalias !106
  %106 = load i8, i8* %104, align 1
  %107 = icmp sgt i8 %106, -1
  br i1 %107, label %109, label %108, !prof !3

108:                                              ; preds = %100
  tail call void @llvm.trap() #11
  unreachable

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %101, i64 %103, i32 0, i32 1
  br label %111

111:                                              ; preds = %109, %32
  %112 = phi %"class.gl::Sampler"** [ %110, %109 ], [ %35, %32 ]
  store %"class.gl::Sampler"* %2, %"class.gl::Sampler"** %112, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.296"*, i64) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #11, !range !2
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !3

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.296"* %0, i64 1) #11
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.296"* %0) #11
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.296"* %0, i64 %58) #11
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #11, !range !2
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.296"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #14
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.297"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #11
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %95, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %91
  br i1 %24, label %95, label %94

28:                                               ; preds = %25, %91
  %29 = phi i64 [ 0, %25 ], [ %92, %91 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %91

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = add i64 %26, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %7, align 8
  %46 = lshr i64 %43, 7
  %47 = ptrtoint i8* %44 to i64
  %48 = lshr i64 %47, 12
  %49 = xor i64 %46, %48
  %50 = and i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp slt <16 x i8> %53, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %33, %57
  %58 = phi i64 [ %62, %57 ], [ %50, %33 ]
  %59 = phi i64 [ %60, %57 ], [ 0, %33 ]
  %60 = add i64 %59, 16
  %61 = add i64 %60, %58
  %62 = and i64 %61, %45
  %63 = getelementptr inbounds i8, i8* %44, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57, %33
  %70 = phi i64 [ %50, %33 ], [ %62, %57 ]
  %71 = phi i16 [ %55, %33 ], [ %67, %57 ]
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #11, !range !2
  %74 = zext i32 %73 to i64
  %75 = add i64 %70, %74
  %76 = and i64 %75, %45
  %77 = trunc i128 %42 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %44, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %3, align 8
  %81 = add i64 %76, -15
  %82 = load i64, i64* %7, align 8
  %83 = and i64 %81, %82
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  %87 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %5, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %87, i64 %76
  %89 = bitcast %"union.absl::container_internal::map_slot_type.297"* %88 to i8*
  %90 = bitcast %"union.absl::container_internal::map_slot_type.297"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #11
  br label %91

91:                                               ; preds = %28, %69
  %92 = add nuw i64 %29, 1
  %93 = icmp eq i64 %92, %8
  br i1 %93, label %27, label %28

94:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #14
  br label %95

95:                                               ; preds = %2, %27, %94
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.296"*) local_unnamed_addr #13 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #11
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %122, %1
  %12 = phi i64 [ 0, %1 ], [ %124, %122 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.296", %"class.absl::container_internal::raw_hash_set.296"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %122
  %20 = phi i64 [ %6, %8 ], [ %125, %122 ]
  %21 = phi i64 [ 0, %8 ], [ %124, %122 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %122

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #11, !range !2
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !3

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %122

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %9, align 8
  br i1 %86, label %97, label %111

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %96, i64 %67
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %96, i64 %21
  %100 = bitcast %"union.absl::container_internal::map_slot_type.297"* %98 to i8*
  %101 = bitcast %"union.absl::container_internal::map_slot_type.297"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #11
  %102 = load i8*, i8** %2, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %21
  store i8 -128, i8* %103, align 1
  %104 = load i8*, i8** %2, align 8
  %105 = add i64 %21, -15
  %106 = load i64, i64* %4, align 8
  %107 = and i64 %106, %105
  %108 = and i64 %106, 15
  %109 = add i64 %107, %108
  %110 = getelementptr inbounds i8, i8* %104, i64 %109
  store i8 -128, i8* %110, align 1
  br label %122

111:                                              ; preds = %83
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %96, i64 %21
  %113 = bitcast %"union.absl::container_internal::map_slot_type.297"* %112 to i8*
  %114 = bitcast %"union.absl::container_internal::map_slot_type.297"* %112 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 8
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %96, i64 %67
  %117 = bitcast %"union.absl::container_internal::map_slot_type.297"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %117, i64 16, i1 false) #11
  %118 = load %"union.absl::container_internal::map_slot_type.297"*, %"union.absl::container_internal::map_slot_type.297"** %9, align 8
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.297", %"union.absl::container_internal::map_slot_type.297"* %118, i64 %67
  %120 = bitcast %"union.absl::container_internal::map_slot_type.297"* %119 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %120, align 8
  %121 = add i64 %21, -1
  br label %122

122:                                              ; preds = %73, %111, %97, %19
  %123 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %121, %111 ]
  %124 = add i64 %123, 1
  %125 = load i64, i64* %4, align 8
  %126 = icmp eq i64 %124, %125
  br i1 %126, label %11, label %19
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl4SyncEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.307"*, i64) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.307", %"class.absl::container_internal::raw_hash_set.307"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.307", %"class.absl::container_internal::raw_hash_set.307"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #11, !range !2
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.307", %"class.absl::container_internal::raw_hash_set.307"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !3

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl4SyncEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.307"* %0, i64 1) #11
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.307", %"class.absl::container_internal::raw_hash_set.307"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl4SyncEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.307"* %0) #11
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl4SyncEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.307"* %0, i64 %58) #11
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #11, !range !2
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.307", %"class.absl::container_internal::raw_hash_set.307"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl4SyncEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.307"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.307", %"class.absl::container_internal::raw_hash_set.307"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.307", %"class.absl::container_internal::raw_hash_set.307"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.308"*, %"union.absl::container_internal::map_slot_type.308"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.307", %"class.absl::container_internal::raw_hash_set.307"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #14
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.308"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #11
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.307", %"class.absl::container_internal::raw_hash_set.307"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.307", %"class.absl::container_internal::raw_hash_set.307"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %95, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %91
  br i1 %24, label %95, label %94

28:                                               ; preds = %25, %91
  %29 = phi i64 [ 0, %25 ], [ %92, %91 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %91

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = add i64 %26, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %7, align 8
  %46 = lshr i64 %43, 7
  %47 = ptrtoint i8* %44 to i64
  %48 = lshr i64 %47, 12
  %49 = xor i64 %46, %48
  %50 = and i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp slt <16 x i8> %53, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %33, %57
  %58 = phi i64 [ %62, %57 ], [ %50, %33 ]
  %59 = phi i64 [ %60, %57 ], [ 0, %33 ]
  %60 = add i64 %59, 16
  %61 = add i64 %60, %58
  %62 = and i64 %61, %45
  %63 = getelementptr inbounds i8, i8* %44, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57, %33
  %70 = phi i64 [ %50, %33 ], [ %62, %57 ]
  %71 = phi i16 [ %55, %33 ], [ %67, %57 ]
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #11, !range !2
  %74 = zext i32 %73 to i64
  %75 = add i64 %70, %74
  %76 = and i64 %75, %45
  %77 = trunc i128 %42 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %44, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %3, align 8
  %81 = add i64 %76, -15
  %82 = load i64, i64* %7, align 8
  %83 = and i64 %81, %82
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  %87 = load %"union.absl::container_internal::map_slot_type.308"*, %"union.absl::container_internal::map_slot_type.308"** %5, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %87, i64 %76
  %89 = bitcast %"union.absl::container_internal::map_slot_type.308"* %88 to i8*
  %90 = bitcast %"union.absl::container_internal::map_slot_type.308"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #11
  br label %91

91:                                               ; preds = %28, %69
  %92 = add nuw i64 %29, 1
  %93 = icmp eq i64 %92, %8
  br i1 %93, label %27, label %28

94:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #14
  br label %95

95:                                               ; preds = %2, %27, %94
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl4SyncEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.307"*) local_unnamed_addr #13 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.307", %"class.absl::container_internal::raw_hash_set.307"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.307", %"class.absl::container_internal::raw_hash_set.307"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #11
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.307", %"class.absl::container_internal::raw_hash_set.307"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %122, %1
  %12 = phi i64 [ 0, %1 ], [ %124, %122 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.307", %"class.absl::container_internal::raw_hash_set.307"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.307", %"class.absl::container_internal::raw_hash_set.307"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %122
  %20 = phi i64 [ %6, %8 ], [ %125, %122 ]
  %21 = phi i64 [ 0, %8 ], [ %124, %122 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %122

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type.308"*, %"union.absl::container_internal::map_slot_type.308"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #11, !range !2
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !3

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %122

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type.308"*, %"union.absl::container_internal::map_slot_type.308"** %9, align 8
  br i1 %86, label %97, label %111

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %96, i64 %67
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %96, i64 %21
  %100 = bitcast %"union.absl::container_internal::map_slot_type.308"* %98 to i8*
  %101 = bitcast %"union.absl::container_internal::map_slot_type.308"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #11
  %102 = load i8*, i8** %2, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %21
  store i8 -128, i8* %103, align 1
  %104 = load i8*, i8** %2, align 8
  %105 = add i64 %21, -15
  %106 = load i64, i64* %4, align 8
  %107 = and i64 %106, %105
  %108 = and i64 %106, 15
  %109 = add i64 %107, %108
  %110 = getelementptr inbounds i8, i8* %104, i64 %109
  store i8 -128, i8* %110, align 1
  br label %122

111:                                              ; preds = %83
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %96, i64 %21
  %113 = bitcast %"union.absl::container_internal::map_slot_type.308"* %112 to i8*
  %114 = bitcast %"union.absl::container_internal::map_slot_type.308"* %112 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 8
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %96, i64 %67
  %117 = bitcast %"union.absl::container_internal::map_slot_type.308"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %117, i64 16, i1 false) #11
  %118 = load %"union.absl::container_internal::map_slot_type.308"*, %"union.absl::container_internal::map_slot_type.308"** %9, align 8
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.308", %"union.absl::container_internal::map_slot_type.308"* %118, i64 %67
  %120 = bitcast %"union.absl::container_internal::map_slot_type.308"* %119 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %120, align 8
  %121 = add i64 %21, -1
  br label %122

122:                                              ; preds = %73, %111, %97, %19
  %123 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %121, %111 ]
  %124 = add i64 %123, 1
  %125 = load i64, i64* %4, align 8
  %126 = icmp eq i64 %124, %125
  br i1 %126, label %11, label %19
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.318"*, i64) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #11, !range !2
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !3

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.318"* %0, i64 1) #11
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.318"* %0) #11
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.318"* %0, i64 %58) #11
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #11, !range !2
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.318"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #14
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.319"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #11
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %95, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %91
  br i1 %24, label %95, label %94

28:                                               ; preds = %25, %91
  %29 = phi i64 [ 0, %25 ], [ %92, %91 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %91

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = add i64 %26, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %7, align 8
  %46 = lshr i64 %43, 7
  %47 = ptrtoint i8* %44 to i64
  %48 = lshr i64 %47, 12
  %49 = xor i64 %46, %48
  %50 = and i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp slt <16 x i8> %53, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %33, %57
  %58 = phi i64 [ %62, %57 ], [ %50, %33 ]
  %59 = phi i64 [ %60, %57 ], [ 0, %33 ]
  %60 = add i64 %59, 16
  %61 = add i64 %60, %58
  %62 = and i64 %61, %45
  %63 = getelementptr inbounds i8, i8* %44, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57, %33
  %70 = phi i64 [ %50, %33 ], [ %62, %57 ]
  %71 = phi i16 [ %55, %33 ], [ %67, %57 ]
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #11, !range !2
  %74 = zext i32 %73 to i64
  %75 = add i64 %70, %74
  %76 = and i64 %75, %45
  %77 = trunc i128 %42 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %44, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %3, align 8
  %81 = add i64 %76, -15
  %82 = load i64, i64* %7, align 8
  %83 = and i64 %81, %82
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  %87 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %5, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %87, i64 %76
  %89 = bitcast %"union.absl::container_internal::map_slot_type.319"* %88 to i8*
  %90 = bitcast %"union.absl::container_internal::map_slot_type.319"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #11
  br label %91

91:                                               ; preds = %28, %69
  %92 = add nuw i64 %29, 1
  %93 = icmp eq i64 %92, %8
  br i1 %93, label %27, label %28

94:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #14
  br label %95

95:                                               ; preds = %2, %27, %94
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.318"*) local_unnamed_addr #13 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #11
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %122, %1
  %12 = phi i64 [ 0, %1 ], [ %124, %122 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.318", %"class.absl::container_internal::raw_hash_set.318"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %122
  %20 = phi i64 [ %6, %8 ], [ %125, %122 ]
  %21 = phi i64 [ 0, %8 ], [ %124, %122 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %122

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #11, !range !2
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !3

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %122

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %9, align 8
  br i1 %86, label %97, label %111

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %96, i64 %67
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %96, i64 %21
  %100 = bitcast %"union.absl::container_internal::map_slot_type.319"* %98 to i8*
  %101 = bitcast %"union.absl::container_internal::map_slot_type.319"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #11
  %102 = load i8*, i8** %2, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %21
  store i8 -128, i8* %103, align 1
  %104 = load i8*, i8** %2, align 8
  %105 = add i64 %21, -15
  %106 = load i64, i64* %4, align 8
  %107 = and i64 %106, %105
  %108 = and i64 %106, 15
  %109 = add i64 %107, %108
  %110 = getelementptr inbounds i8, i8* %104, i64 %109
  store i8 -128, i8* %110, align 1
  br label %122

111:                                              ; preds = %83
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %96, i64 %21
  %113 = bitcast %"union.absl::container_internal::map_slot_type.319"* %112 to i8*
  %114 = bitcast %"union.absl::container_internal::map_slot_type.319"* %112 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 8
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %96, i64 %67
  %117 = bitcast %"union.absl::container_internal::map_slot_type.319"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %117, i64 16, i1 false) #11
  %118 = load %"union.absl::container_internal::map_slot_type.319"*, %"union.absl::container_internal::map_slot_type.319"** %9, align 8
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.319", %"union.absl::container_internal::map_slot_type.319"* %118, i64 %67
  %120 = bitcast %"union.absl::container_internal::map_slot_type.319"* %119 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %120, align 8
  %121 = add i64 %21, -1
  br label %122

122:                                              ; preds = %73, %111, %97, %19
  %123 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %121, %111 ]
  %124 = add i64 %123, 1
  %125 = load i64, i64* %4, align 8
  %126 = icmp eq i64 %124, %125
  br i1 %126, label %11, label %19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl11ResourceMapINS_15ProgramPipelineENS_17ProgramPipelineIDEE6assignES2_PS1_(%"class.gl::ResourceMap.326"*, i32, %"class.gl::ProgramPipeline"*) local_unnamed_addr #3 comdat align 2 {
  %4 = icmp ult i32 %1, 16384
  br i1 %4, label %5, label %36

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %32, label %10

10:                                               ; preds = %5, %10
  %11 = phi i64 [ %13, %10 ], [ %8, %5 ]
  %12 = icmp ugt i64 %11, %6
  %13 = shl i64 %11, 1
  br i1 %12, label %14, label %10

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %0, i64 0, i32 1
  %16 = load %"class.gl::ProgramPipeline"**, %"class.gl::ProgramPipeline"*** %15, align 8
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #14
  %22 = bitcast i8* %21 to %"class.gl::ProgramPipeline"**
  %23 = bitcast %"class.gl::ProgramPipeline"*** %15 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %22, i64 %8
  %25 = bitcast %"class.gl::ProgramPipeline"** %24 to i8*
  %26 = sub i64 %11, %8
  %27 = shl i64 %26, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -1, i64 %27, i1 false)
  %28 = bitcast %"class.gl::ProgramPipeline"** %16 to i8*
  %29 = shl i64 %8, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %28, i64 %29, i1 false)
  store i64 %11, i64* %7, align 8
  %30 = icmp eq %"class.gl::ProgramPipeline"** %16, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %14
  tail call void @_ZdaPv(i8* %28) #14
  br label %32

32:                                               ; preds = %14, %31, %5
  %33 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %0, i64 0, i32 1
  %34 = load %"class.gl::ProgramPipeline"**, %"class.gl::ProgramPipeline"*** %33, align 8
  %35 = getelementptr inbounds %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %34, i64 %6
  br label %111

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %0, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.345", %"class.absl::container_internal::raw_hash_map.345"* %37, i64 0, i32 0
  %39 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !109
  %40 = zext i32 %1 to i64
  %41 = add i64 %39, %40
  %42 = zext i64 %41 to i128
  %43 = mul nuw i128 %42, 11376068507788127593
  %44 = lshr i128 %43, 64
  %45 = xor i128 %44, %43
  %46 = trunc i128 %45 to i64
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.345", %"class.absl::container_internal::raw_hash_map.345"* %37, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8, !noalias !109
  %49 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %50 = load i64, i64* %49, align 8, !noalias !109
  %51 = lshr i64 %46, 7
  %52 = ptrtoint i8* %48 to i64
  %53 = lshr i64 %52, 12
  %54 = xor i64 %51, %53
  %55 = trunc i128 %45 to i8
  %56 = and i8 %55, 127
  %57 = insertelement <16 x i8> undef, i8 %56, i32 0
  %58 = shufflevector <16 x i8> %57, <16 x i8> undef, <16 x i32> zeroinitializer
  %59 = getelementptr inbounds %"class.gl::ResourceMap.326", %"class.gl::ResourceMap.326"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %60

60:                                               ; preds = %90, %36
  %61 = phi i64 [ %54, %36 ], [ %92, %90 ]
  %62 = phi i64 [ 0, %36 ], [ %91, %90 ]
  %63 = and i64 %61, %50
  %64 = getelementptr inbounds i8, i8* %48, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !noalias !109
  %67 = icmp eq <16 x i8> %58, %66
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %60
  %71 = zext i16 %68 to i32
  %72 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %59, align 8, !noalias !109
  br label %73

73:                                               ; preds = %82, %70
  %74 = phi i32 [ %71, %70 ], [ %84, %82 ]
  %75 = tail call i32 @llvm.cttz.i32(i32 %74, i1 false) #11, !range !2
  %76 = zext i32 %75 to i64
  %77 = add i64 %63, %76
  %78 = and i64 %77, %50
  %79 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %72, i64 %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 4, !noalias !109
  %81 = icmp eq i32 %80, %1
  br i1 %81, label %100, label %82, !prof !3

82:                                               ; preds = %73
  %83 = add i32 %74, -1
  %84 = and i32 %83, %74
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %73

86:                                               ; preds = %82, %60
  %87 = icmp eq <16 x i8> %66, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %88 = bitcast <16 x i1> %87 to i16
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %93, !prof !4

90:                                               ; preds = %86
  %91 = add i64 %62, 16
  %92 = add i64 %91, %63
  br label %60

93:                                               ; preds = %86
  %94 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.346"* %38, i64 %46) #11, !noalias !109
  %95 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %59, align 8, !noalias !109
  %96 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %95, i64 %94, i32 0, i32 0
  store i32 %1, i32* %96, align 8, !noalias !109
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %95, i64 %94, i32 0, i32 1
  store %"class.gl::ProgramPipeline"* null, %"class.gl::ProgramPipeline"** %97, align 8, !noalias !109
  %98 = load i8*, i8** %47, align 8, !noalias !109
  %99 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %59, align 8, !noalias !109
  br label %100

100:                                              ; preds = %73, %93
  %101 = phi %"union.absl::container_internal::map_slot_type.347"* [ %99, %93 ], [ %72, %73 ]
  %102 = phi i8* [ %98, %93 ], [ %48, %73 ]
  %103 = phi i64 [ %94, %93 ], [ %78, %73 ]
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = icmp ne i8* %104, null
  tail call void @llvm.assume(i1 %105) #11, !noalias !109
  %106 = load i8, i8* %104, align 1
  %107 = icmp sgt i8 %106, -1
  br i1 %107, label %109, label %108, !prof !3

108:                                              ; preds = %100
  tail call void @llvm.trap() #11
  unreachable

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %101, i64 %103, i32 0, i32 1
  br label %111

111:                                              ; preds = %109, %32
  %112 = phi %"class.gl::ProgramPipeline"** [ %110, %109 ], [ %35, %32 ]
  store %"class.gl::ProgramPipeline"* %2, %"class.gl::ProgramPipeline"** %112, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.346"*, i64) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #11, !range !2
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !3

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.346"* %0, i64 1) #11
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.346"* %0) #11
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.346"* %0, i64 %58) #11
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #11, !range !2
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.346"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #14
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.347"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #11
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %95, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %91
  br i1 %24, label %95, label %94

28:                                               ; preds = %25, %91
  %29 = phi i64 [ 0, %25 ], [ %92, %91 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %91

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = add i64 %26, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %7, align 8
  %46 = lshr i64 %43, 7
  %47 = ptrtoint i8* %44 to i64
  %48 = lshr i64 %47, 12
  %49 = xor i64 %46, %48
  %50 = and i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp slt <16 x i8> %53, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %33, %57
  %58 = phi i64 [ %62, %57 ], [ %50, %33 ]
  %59 = phi i64 [ %60, %57 ], [ 0, %33 ]
  %60 = add i64 %59, 16
  %61 = add i64 %60, %58
  %62 = and i64 %61, %45
  %63 = getelementptr inbounds i8, i8* %44, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57, %33
  %70 = phi i64 [ %50, %33 ], [ %62, %57 ]
  %71 = phi i16 [ %55, %33 ], [ %67, %57 ]
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #11, !range !2
  %74 = zext i32 %73 to i64
  %75 = add i64 %70, %74
  %76 = and i64 %75, %45
  %77 = trunc i128 %42 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %44, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %3, align 8
  %81 = add i64 %76, -15
  %82 = load i64, i64* %7, align 8
  %83 = and i64 %81, %82
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  %87 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %5, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %87, i64 %76
  %89 = bitcast %"union.absl::container_internal::map_slot_type.347"* %88 to i8*
  %90 = bitcast %"union.absl::container_internal::map_slot_type.347"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #11
  br label %91

91:                                               ; preds = %28, %69
  %92 = add nuw i64 %29, 1
  %93 = icmp eq i64 %92, %8
  br i1 %93, label %27, label %28

94:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #14
  br label %95

95:                                               ; preds = %2, %27, %94
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.346"*) local_unnamed_addr #13 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #11
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %122, %1
  %12 = phi i64 [ 0, %1 ], [ %124, %122 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.346", %"class.absl::container_internal::raw_hash_set.346"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %122
  %20 = phi i64 [ %6, %8 ], [ %125, %122 ]
  %21 = phi i64 [ 0, %8 ], [ %124, %122 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %122

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #11, !range !2
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !3

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %122

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %9, align 8
  br i1 %86, label %97, label %111

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %96, i64 %67
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %96, i64 %21
  %100 = bitcast %"union.absl::container_internal::map_slot_type.347"* %98 to i8*
  %101 = bitcast %"union.absl::container_internal::map_slot_type.347"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #11
  %102 = load i8*, i8** %2, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %21
  store i8 -128, i8* %103, align 1
  %104 = load i8*, i8** %2, align 8
  %105 = add i64 %21, -15
  %106 = load i64, i64* %4, align 8
  %107 = and i64 %106, %105
  %108 = and i64 %106, 15
  %109 = add i64 %107, %108
  %110 = getelementptr inbounds i8, i8* %104, i64 %109
  store i8 -128, i8* %110, align 1
  br label %122

111:                                              ; preds = %83
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %96, i64 %21
  %113 = bitcast %"union.absl::container_internal::map_slot_type.347"* %112 to i8*
  %114 = bitcast %"union.absl::container_internal::map_slot_type.347"* %112 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 8
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %96, i64 %67
  %117 = bitcast %"union.absl::container_internal::map_slot_type.347"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %117, i64 16, i1 false) #11
  %118 = load %"union.absl::container_internal::map_slot_type.347"*, %"union.absl::container_internal::map_slot_type.347"** %9, align 8
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.347", %"union.absl::container_internal::map_slot_type.347"* %118, i64 %67
  %120 = bitcast %"union.absl::container_internal::map_slot_type.347"* %119 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %120, align 8
  %121 = add i64 %21, -1
  br label %122

122:                                              ; preds = %73, %111, %97, %19
  %123 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %121, %111 ]
  %124 = add i64 %123, 1
  %125 = load i64, i64* %4, align 8
  %126 = icmp eq i64 %124, %125
  br i1 %126, label %11, label %19
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12MemoryObjectEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.356"*, i64) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.356", %"class.absl::container_internal::raw_hash_set.356"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.356", %"class.absl::container_internal::raw_hash_set.356"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #11, !range !2
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.356", %"class.absl::container_internal::raw_hash_set.356"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !3

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12MemoryObjectEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.356"* %0, i64 1) #11
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.356", %"class.absl::container_internal::raw_hash_set.356"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12MemoryObjectEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.356"* %0) #11
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12MemoryObjectEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.356"* %0, i64 %58) #11
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #11, !range !2
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.356", %"class.absl::container_internal::raw_hash_set.356"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12MemoryObjectEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.356"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.356", %"class.absl::container_internal::raw_hash_set.356"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.356", %"class.absl::container_internal::raw_hash_set.356"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.357"*, %"union.absl::container_internal::map_slot_type.357"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.356", %"class.absl::container_internal::raw_hash_set.356"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #14
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.357"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #11
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.356", %"class.absl::container_internal::raw_hash_set.356"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.356", %"class.absl::container_internal::raw_hash_set.356"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %95, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %91
  br i1 %24, label %95, label %94

28:                                               ; preds = %25, %91
  %29 = phi i64 [ 0, %25 ], [ %92, %91 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %91

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.357", %"union.absl::container_internal::map_slot_type.357"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.357", %"union.absl::container_internal::map_slot_type.357"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = add i64 %26, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %7, align 8
  %46 = lshr i64 %43, 7
  %47 = ptrtoint i8* %44 to i64
  %48 = lshr i64 %47, 12
  %49 = xor i64 %46, %48
  %50 = and i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp slt <16 x i8> %53, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %33, %57
  %58 = phi i64 [ %62, %57 ], [ %50, %33 ]
  %59 = phi i64 [ %60, %57 ], [ 0, %33 ]
  %60 = add i64 %59, 16
  %61 = add i64 %60, %58
  %62 = and i64 %61, %45
  %63 = getelementptr inbounds i8, i8* %44, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57, %33
  %70 = phi i64 [ %50, %33 ], [ %62, %57 ]
  %71 = phi i16 [ %55, %33 ], [ %67, %57 ]
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #11, !range !2
  %74 = zext i32 %73 to i64
  %75 = add i64 %70, %74
  %76 = and i64 %75, %45
  %77 = trunc i128 %42 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %44, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %3, align 8
  %81 = add i64 %76, -15
  %82 = load i64, i64* %7, align 8
  %83 = and i64 %81, %82
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  %87 = load %"union.absl::container_internal::map_slot_type.357"*, %"union.absl::container_internal::map_slot_type.357"** %5, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.357", %"union.absl::container_internal::map_slot_type.357"* %87, i64 %76
  %89 = bitcast %"union.absl::container_internal::map_slot_type.357"* %88 to i8*
  %90 = bitcast %"union.absl::container_internal::map_slot_type.357"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #11
  br label %91

91:                                               ; preds = %28, %69
  %92 = add nuw i64 %29, 1
  %93 = icmp eq i64 %92, %8
  br i1 %93, label %27, label %28

94:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #14
  br label %95

95:                                               ; preds = %2, %27, %94
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl12MemoryObjectEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.356"*) local_unnamed_addr #13 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.356", %"class.absl::container_internal::raw_hash_set.356"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.356", %"class.absl::container_internal::raw_hash_set.356"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #11
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.356", %"class.absl::container_internal::raw_hash_set.356"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %122, %1
  %12 = phi i64 [ 0, %1 ], [ %124, %122 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.356", %"class.absl::container_internal::raw_hash_set.356"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.356", %"class.absl::container_internal::raw_hash_set.356"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %122
  %20 = phi i64 [ %6, %8 ], [ %125, %122 ]
  %21 = phi i64 [ 0, %8 ], [ %124, %122 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %122

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type.357"*, %"union.absl::container_internal::map_slot_type.357"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.357", %"union.absl::container_internal::map_slot_type.357"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #11, !range !2
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !3

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %122

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type.357"*, %"union.absl::container_internal::map_slot_type.357"** %9, align 8
  br i1 %86, label %97, label %111

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.357", %"union.absl::container_internal::map_slot_type.357"* %96, i64 %67
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.357", %"union.absl::container_internal::map_slot_type.357"* %96, i64 %21
  %100 = bitcast %"union.absl::container_internal::map_slot_type.357"* %98 to i8*
  %101 = bitcast %"union.absl::container_internal::map_slot_type.357"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #11
  %102 = load i8*, i8** %2, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %21
  store i8 -128, i8* %103, align 1
  %104 = load i8*, i8** %2, align 8
  %105 = add i64 %21, -15
  %106 = load i64, i64* %4, align 8
  %107 = and i64 %106, %105
  %108 = and i64 %106, 15
  %109 = add i64 %107, %108
  %110 = getelementptr inbounds i8, i8* %104, i64 %109
  store i8 -128, i8* %110, align 1
  br label %122

111:                                              ; preds = %83
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.357", %"union.absl::container_internal::map_slot_type.357"* %96, i64 %21
  %113 = bitcast %"union.absl::container_internal::map_slot_type.357"* %112 to i8*
  %114 = bitcast %"union.absl::container_internal::map_slot_type.357"* %112 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 8
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.357", %"union.absl::container_internal::map_slot_type.357"* %96, i64 %67
  %117 = bitcast %"union.absl::container_internal::map_slot_type.357"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %117, i64 16, i1 false) #11
  %118 = load %"union.absl::container_internal::map_slot_type.357"*, %"union.absl::container_internal::map_slot_type.357"** %9, align 8
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.357", %"union.absl::container_internal::map_slot_type.357"* %118, i64 %67
  %120 = bitcast %"union.absl::container_internal::map_slot_type.357"* %119 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %120, align 8
  %121 = add i64 %21, -1
  br label %122

122:                                              ; preds = %73, %111, %97, %19
  %123 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %121, %111 ]
  %124 = add i64 %123, 1
  %125 = load i64, i64* %4, align 8
  %126 = icmp eq i64 %124, %125
  br i1 %126, label %11, label %19
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl9SemaphoreEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.366"*, i64) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.366", %"class.absl::container_internal::raw_hash_set.366"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.366", %"class.absl::container_internal::raw_hash_set.366"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #11, !range !2
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.366", %"class.absl::container_internal::raw_hash_set.366"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !3

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl9SemaphoreEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.366"* %0, i64 1) #11
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.366", %"class.absl::container_internal::raw_hash_set.366"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl9SemaphoreEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.366"* %0) #11
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl9SemaphoreEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.366"* %0, i64 %58) #11
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #11, !range !2
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.366", %"class.absl::container_internal::raw_hash_set.366"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl9SemaphoreEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.366"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.366", %"class.absl::container_internal::raw_hash_set.366"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.366", %"class.absl::container_internal::raw_hash_set.366"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.367"*, %"union.absl::container_internal::map_slot_type.367"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.366", %"class.absl::container_internal::raw_hash_set.366"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #14
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.367"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #11
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.366", %"class.absl::container_internal::raw_hash_set.366"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.366", %"class.absl::container_internal::raw_hash_set.366"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %95, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %91
  br i1 %24, label %95, label %94

28:                                               ; preds = %25, %91
  %29 = phi i64 [ 0, %25 ], [ %92, %91 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %91

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.367", %"union.absl::container_internal::map_slot_type.367"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.367", %"union.absl::container_internal::map_slot_type.367"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = add i64 %26, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %7, align 8
  %46 = lshr i64 %43, 7
  %47 = ptrtoint i8* %44 to i64
  %48 = lshr i64 %47, 12
  %49 = xor i64 %46, %48
  %50 = and i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp slt <16 x i8> %53, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %33, %57
  %58 = phi i64 [ %62, %57 ], [ %50, %33 ]
  %59 = phi i64 [ %60, %57 ], [ 0, %33 ]
  %60 = add i64 %59, 16
  %61 = add i64 %60, %58
  %62 = and i64 %61, %45
  %63 = getelementptr inbounds i8, i8* %44, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57, %33
  %70 = phi i64 [ %50, %33 ], [ %62, %57 ]
  %71 = phi i16 [ %55, %33 ], [ %67, %57 ]
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #11, !range !2
  %74 = zext i32 %73 to i64
  %75 = add i64 %70, %74
  %76 = and i64 %75, %45
  %77 = trunc i128 %42 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %44, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %3, align 8
  %81 = add i64 %76, -15
  %82 = load i64, i64* %7, align 8
  %83 = and i64 %81, %82
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  %87 = load %"union.absl::container_internal::map_slot_type.367"*, %"union.absl::container_internal::map_slot_type.367"** %5, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.367", %"union.absl::container_internal::map_slot_type.367"* %87, i64 %76
  %89 = bitcast %"union.absl::container_internal::map_slot_type.367"* %88 to i8*
  %90 = bitcast %"union.absl::container_internal::map_slot_type.367"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #11
  br label %91

91:                                               ; preds = %28, %69
  %92 = add nuw i64 %29, 1
  %93 = icmp eq i64 %92, %8
  br i1 %93, label %27, label %28

94:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #14
  br label %95

95:                                               ; preds = %2, %27, %94
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjPN2gl9SemaphoreEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.366"*) local_unnamed_addr #13 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.366", %"class.absl::container_internal::raw_hash_set.366"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.366", %"class.absl::container_internal::raw_hash_set.366"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #11
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.366", %"class.absl::container_internal::raw_hash_set.366"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %122, %1
  %12 = phi i64 [ 0, %1 ], [ %124, %122 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.366", %"class.absl::container_internal::raw_hash_set.366"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.366", %"class.absl::container_internal::raw_hash_set.366"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %122
  %20 = phi i64 [ %6, %8 ], [ %125, %122 ]
  %21 = phi i64 [ 0, %8 ], [ %124, %122 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %122

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type.367"*, %"union.absl::container_internal::map_slot_type.367"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.367", %"union.absl::container_internal::map_slot_type.367"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #11, !range !2
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !3

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %122

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type.367"*, %"union.absl::container_internal::map_slot_type.367"** %9, align 8
  br i1 %86, label %97, label %111

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.367", %"union.absl::container_internal::map_slot_type.367"* %96, i64 %67
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.367", %"union.absl::container_internal::map_slot_type.367"* %96, i64 %21
  %100 = bitcast %"union.absl::container_internal::map_slot_type.367"* %98 to i8*
  %101 = bitcast %"union.absl::container_internal::map_slot_type.367"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #11
  %102 = load i8*, i8** %2, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %21
  store i8 -128, i8* %103, align 1
  %104 = load i8*, i8** %2, align 8
  %105 = add i64 %21, -15
  %106 = load i64, i64* %4, align 8
  %107 = and i64 %106, %105
  %108 = and i64 %106, 15
  %109 = add i64 %107, %108
  %110 = getelementptr inbounds i8, i8* %104, i64 %109
  store i8 -128, i8* %110, align 1
  br label %122

111:                                              ; preds = %83
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.367", %"union.absl::container_internal::map_slot_type.367"* %96, i64 %21
  %113 = bitcast %"union.absl::container_internal::map_slot_type.367"* %112 to i8*
  %114 = bitcast %"union.absl::container_internal::map_slot_type.367"* %112 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 8
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.367", %"union.absl::container_internal::map_slot_type.367"* %96, i64 %67
  %117 = bitcast %"union.absl::container_internal::map_slot_type.367"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %117, i64 16, i1 false) #11
  %118 = load %"union.absl::container_internal::map_slot_type.367"*, %"union.absl::container_internal::map_slot_type.367"** %9, align 8
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.367", %"union.absl::container_internal::map_slot_type.367"* %118, i64 %67
  %120 = bitcast %"union.absl::container_internal::map_slot_type.367"* %119 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %120, align 8
  %121 = add i64 %21, -1
  br label %122

122:                                              ; preds = %73, %111, %97, %19
  %123 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %121, %111 ]
  %124 = add i64 %123, 1
  %125 = load i64, i64* %4, align 8
  %126 = icmp eq i64 %124, %125
  br i1 %126, label %11, label %19
}

attributes #0 = { cold noreturn nounwind }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { alwaysinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK2gl11ResourceMapINS_6BufferENS_8BufferIDEE3endEv: argument 0"}
!7 = distinct !{!7, !"_ZNK2gl11ResourceMapINS_6BufferENS_8BufferIDEE3endEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK2gl11ResourceMapINS_6BufferENS_8BufferIDEE5beginEv: argument 0"}
!10 = distinct !{!10, !"_ZNK2gl11ResourceMapINS_6BufferENS_8BufferIDEE5beginEv"}
!11 = !{i8 0, i8 2}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK2gl11ResourceMapINS_7TextureENS_9TextureIDEE3endEv: argument 0"}
!14 = distinct !{!14, !"_ZNK2gl11ResourceMapINS_7TextureENS_9TextureIDEE3endEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK2gl11ResourceMapINS_7TextureENS_9TextureIDEE5beginEv: argument 0"}
!17 = distinct !{!17, !"_ZNK2gl11ResourceMapINS_7TextureENS_9TextureIDEE5beginEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK2gl11ResourceMapINS_12RenderbufferENS_14RenderbufferIDEE3endEv: argument 0"}
!20 = distinct !{!20, !"_ZNK2gl11ResourceMapINS_12RenderbufferENS_14RenderbufferIDEE3endEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK2gl11ResourceMapINS_12RenderbufferENS_14RenderbufferIDEE5beginEv: argument 0"}
!23 = distinct !{!23, !"_ZNK2gl11ResourceMapINS_12RenderbufferENS_14RenderbufferIDEE5beginEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK2gl11ResourceMapINS_7SamplerENS_9SamplerIDEE3endEv: argument 0"}
!26 = distinct !{!26, !"_ZNK2gl11ResourceMapINS_7SamplerENS_9SamplerIDEE3endEv"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK2gl11ResourceMapINS_7SamplerENS_9SamplerIDEE5beginEv: argument 0"}
!29 = distinct !{!29, !"_ZNK2gl11ResourceMapINS_7SamplerENS_9SamplerIDEE5beginEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNK2gl11ResourceMapINS_4SyncEjE3endEv: argument 0"}
!32 = distinct !{!32, !"_ZNK2gl11ResourceMapINS_4SyncEjE3endEv"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNK2gl11ResourceMapINS_4SyncEjE5beginEv: argument 0"}
!35 = distinct !{!35, !"_ZNK2gl11ResourceMapINS_4SyncEjE5beginEv"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNK2gl11ResourceMapINS_11FramebufferENS_13FramebufferIDEE3endEv: argument 0"}
!38 = distinct !{!38, !"_ZNK2gl11ResourceMapINS_11FramebufferENS_13FramebufferIDEE3endEv"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNK2gl11ResourceMapINS_11FramebufferENS_13FramebufferIDEE5beginEv: argument 0"}
!41 = distinct !{!41, !"_ZNK2gl11ResourceMapINS_11FramebufferENS_13FramebufferIDEE5beginEv"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNK2gl11ResourceMapINS_15ProgramPipelineENS_17ProgramPipelineIDEE3endEv: argument 0"}
!44 = distinct !{!44, !"_ZNK2gl11ResourceMapINS_15ProgramPipelineENS_17ProgramPipelineIDEE3endEv"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNK2gl11ResourceMapINS_15ProgramPipelineENS_17ProgramPipelineIDEE5beginEv: argument 0"}
!47 = distinct !{!47, !"_ZNK2gl11ResourceMapINS_15ProgramPipelineENS_17ProgramPipelineIDEE5beginEv"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNK2gl11ResourceMapINS_7ProgramENS_15ShaderProgramIDEE5beginEv: argument 0"}
!50 = distinct !{!50, !"_ZNK2gl11ResourceMapINS_7ProgramENS_15ShaderProgramIDEE5beginEv"}
!51 = !{}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZNK2gl11ResourceMapINS_7ProgramENS_15ShaderProgramIDEE5beginEv: argument 0"}
!54 = distinct !{!54, !"_ZNK2gl11ResourceMapINS_7ProgramENS_15ShaderProgramIDEE5beginEv"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZNK2gl11ResourceMapINS_6ShaderENS_15ShaderProgramIDEE5beginEv: argument 0"}
!57 = distinct !{!57, !"_ZNK2gl11ResourceMapINS_6ShaderENS_15ShaderProgramIDEE5beginEv"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZNK2gl11ResourceMapINS_6ShaderENS_15ShaderProgramIDEE5beginEv: argument 0"}
!60 = distinct !{!60, !"_ZNK2gl11ResourceMapINS_6ShaderENS_15ShaderProgramIDEE5beginEv"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl6ShaderEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!63 = distinct !{!63, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl6ShaderEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl7ProgramEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!66 = distinct !{!66, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl7ProgramEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZNK2gl11ResourceMapINS_7TextureENS_9TextureIDEE5beginEv: argument 0"}
!69 = distinct !{!69, !"_ZNK2gl11ResourceMapINS_7TextureENS_9TextureIDEE5beginEv"}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl4SyncEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!72 = distinct !{!72, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl4SyncEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_"}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!75 = distinct !{!75, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl11FramebufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_"}
!76 = !{!77}
!77 = distinct !{!77, !78, !"_ZNK2gl11ResourceMapINS_11FramebufferENS_13FramebufferIDEE5beginEv: argument 0"}
!78 = distinct !{!78, !"_ZNK2gl11ResourceMapINS_11FramebufferENS_13FramebufferIDEE5beginEv"}
!79 = !{!80}
!80 = distinct !{!80, !81, !"_ZNK2gl11ResourceMapINS_12MemoryObjectENS_14MemoryObjectIDEE5beginEv: argument 0"}
!81 = distinct !{!81, !"_ZNK2gl11ResourceMapINS_12MemoryObjectENS_14MemoryObjectIDEE5beginEv"}
!82 = !{!83}
!83 = distinct !{!83, !84, !"_ZNK2gl11ResourceMapINS_12MemoryObjectENS_14MemoryObjectIDEE5beginEv: argument 0"}
!84 = distinct !{!84, !"_ZNK2gl11ResourceMapINS_12MemoryObjectENS_14MemoryObjectIDEE5beginEv"}
!85 = !{!86}
!86 = distinct !{!86, !87, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl12MemoryObjectEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!87 = distinct !{!87, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl12MemoryObjectEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_"}
!88 = !{!89}
!89 = distinct !{!89, !90, !"_ZNK2gl11ResourceMapINS_9SemaphoreENS_11SemaphoreIDEE5beginEv: argument 0"}
!90 = distinct !{!90, !"_ZNK2gl11ResourceMapINS_9SemaphoreENS_11SemaphoreIDEE5beginEv"}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZNK2gl11ResourceMapINS_9SemaphoreENS_11SemaphoreIDEE5beginEv: argument 0"}
!93 = distinct !{!93, !"_ZNK2gl11ResourceMapINS_9SemaphoreENS_11SemaphoreIDEE5beginEv"}
!94 = !{!95}
!95 = distinct !{!95, !96, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl9SemaphoreEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!96 = distinct !{!96, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl9SemaphoreEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_"}
!97 = !{!98}
!98 = distinct !{!98, !99, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!99 = distinct !{!99, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl6BufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_"}
!100 = !{!101}
!101 = distinct !{!101, !102, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!102 = distinct !{!102, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl7TextureEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_"}
!103 = !{!104}
!104 = distinct !{!104, !105, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!105 = distinct !{!105, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl12RenderbufferEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_"}
!106 = !{!107}
!107 = distinct !{!107, !108, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!108 = distinct !{!108, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl7SamplerEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_"}
!109 = !{!110}
!110 = distinct !{!110, !111, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!111 = distinct !{!111, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjPN2gl15ProgramPipelineEEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENSA_9allocatorINSA_4pairIKjS5_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS6_S9_SC_SH_E8iteratorEbEEOT_DpOT0_"}
