; ModuleID = '../../ui/content_accelerators/accelerator_util.cc'
source_filename = "../../ui/content_accelerators/accelerator_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::Accelerator" = type { i32, i32, i32, %"class.base::TimeTicks", i8, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.content::NativeWebKeyboardEvent" = type <{ %"class.blink::WebKeyboardEvent.base", [6 x i8], %"class.ui::Event"*, i8, [7 x i8] }>
%"class.blink::WebKeyboardEvent.base" = type <{ %"class.blink::WebInputEvent", i32, i32, i32, i32, i8, i8, [4 x i16], [4 x i16] }>
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.ui::EventTarget" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::flat_map.3"* }
%"class.base::flat_map.3" = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui40GetAcceleratorFromNativeWebKeyboardEventERKN7content22NativeWebKeyboardEventE(%"class.ui::Accelerator"* noalias sret, %"struct.content::NativeWebKeyboardEvent"* nocapture readonly dereferenceable(96)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.content::NativeWebKeyboardEvent", %"struct.content::NativeWebKeyboardEvent"* %1, i64 0, i32 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 9
  %6 = zext i1 %5 to i32
  %7 = getelementptr inbounds %"struct.content::NativeWebKeyboardEvent", %"struct.content::NativeWebKeyboardEvent"* %1, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"struct.content::NativeWebKeyboardEvent", %"struct.content::NativeWebKeyboardEvent"* %1, i64 0, i32 0, i32 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = tail call i32 @_ZN2ui29WebEventModifiersToEventFlagsEi(i32 %10) #2
  %12 = getelementptr inbounds %"struct.content::NativeWebKeyboardEvent", %"struct.content::NativeWebKeyboardEvent"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  tail call void @_ZN2ui11AcceleratorC1ENS_12KeyboardCodeEiNS0_8KeyStateEN4base9TimeTicksE(%"class.ui::Accelerator"* %0, i32 %8, i32 %11, i32 %6, i64 %13) #2
  ret void
}

declare i32 @_ZN2ui29WebEventModifiersToEventFlagsEi(i32) local_unnamed_addr #1

declare void @_ZN2ui11AcceleratorC1ENS_12KeyboardCodeEiNS0_8KeyStateEN4base9TimeTicksE(%"class.ui::Accelerator"*, i32, i32, i32, i64) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
